US20180012460A1 - Methods and Systems for Providing Intelligent Alerts for Events - Google Patents
Methods and Systems for Providing Intelligent Alerts for Events Download PDFInfo
- Publication number
- US20180012460A1 US20180012460A1 US15/207,463 US201615207463A US2018012460A1 US 20180012460 A1 US20180012460 A1 US 20180012460A1 US 201615207463 A US201615207463 A US 201615207463A US 2018012460 A1 US2018012460 A1 US 2018012460A1
- Authority
- US
- United States
- Prior art keywords
- event
- motion
- implementations
- alert
- category
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19602—Image analysis to detect motion of the intruder, e.g. by frame subtraction
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/50—Context or environment of the image
- G06V20/52—Surveillance or monitoring of activities, e.g. for recognising suspicious objects
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19602—Image analysis to detect motion of the intruder, e.g. by frame subtraction
- G08B13/19613—Recognition of a predetermined image pattern or behaviour pattern indicating theft or intrusion
- G08B13/19615—Recognition of a predetermined image pattern or behaviour pattern indicating theft or intrusion wherein said pattern is defined by the user
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19654—Details concerning communication with a camera
- G08B13/19656—Network used to communicate with a camera, e.g. WAN, LAN, Internet
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19665—Details related to the storage of video surveillance data
- G08B13/19671—Addition of non-video data, i.e. metadata, to video stream
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19678—User interface
- G08B13/19682—Graphic User Interface [GUI] presenting system data to the user, e.g. information on a screen helping a user interacting with an alarm system
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19678—User interface
- G08B13/19684—Portable terminal, e.g. mobile phone, used for viewing video remotely
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19678—User interface
- G08B13/19691—Signalling events for better perception by user, e.g. indicating alarms by making display brighter, adding text, creating a sound
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/62—Extraction of image or video features relating to a temporal dimension, e.g. time-based feature extraction; Pattern tracking
Definitions
- This relates generally to providing alerts, including but not limited to, providing alerts for categorized motion events.
- Video surveillance produces a large amount of continuous video data over the course of hours, days, and even months. Such video data includes many long and uneventful portions that are of no significance or interest to a reviewer.
- motion detection is used to trigger alerts or video recording.
- using motion detection as the only means for selecting video segments for user review may still produce too many video segments that are of no interest to the reviewer.
- some detected motions are generated by normal activities that routinely occur at the monitored location, and it is tedious and time consuming to manually scan through all of the normal activities recorded on video to identify a small number of activities that warrant special attention.
- some implementations include a method performed at a computing system having one or more processors and memory coupled to the one or more processors.
- the method includes: (1) obtaining a first category of a plurality of motion categories for a first motion event, the first motion event corresponding to a first plurality of video frames from a camera; (2) sending a first alert indicative of the first category to a user associated with the camera; (3) after sending the first alert, obtaining a second category of the plurality of motion categories for a second motion event, the second motion event corresponding to a second plurality of video frames from the camera; (4) in accordance with a determination that the second category is the same as (or substantially the same as) the first category, determining whether a predetermined amount of time has elapsed since the sending of the first alert; (5) in accordance with a determination that the predetermined amount of time has elapsed, sending a second alert indicative of the second category to the user; and (6) in accordance with a determination that the predetermined amount of time has not elapse
- some implementations include a method performed at a computing system having one or more processors and memory coupled to the one or more processors.
- the method includes: (1) receiving a plurality of video frames from a camera, the plurality of video frames including a motion event candidate; (2) categorizing the motion event candidate by processing the plurality of video frames, the categorizing including: (a) associating the motion event candidate with a first category of a plurality of motion event categories; and (b) generating a confidence level (also sometimes called a confidence score) for the association of the motion event candidate with the first category; and (3) sending an alert indicative of the first category and the confidence level to a user associated with the camera.
- a confidence level also sometimes called a confidence score
- some implementations include a method performed at a computing system having one or more processors and memory coupled to the one or more processors.
- the method includes: (1) obtaining a video feed, the video feed comprising a plurality of images; and (2) for each image in the plurality of images, analyzing the image to determine whether the image includes a person, the analyzing including: (a) determining that the image includes a potential instance of a person by analyzing the image at a first resolution; (b) in accordance with the determination that the image includes the potential instance, denoting a region around the potential instance, wherein the area of the region is less than the area of the image; (c) determining whether the region includes an instance of the person by analyzing the region at a second resolution, greater than the first resolution; and (d) in accordance with a determination that the region includes the instance of the person, determining that the image includes the person.
- some implementations include a server system including one or more processors and memory coupled to the one or more processors, the memory storing one or more programs configured to be executed by the one or more processors, the one or more programs including instructions for performing any of the methods described herein.
- some implementations include a computing device including one or more processors and memory coupled to the one or more processors, the memory storing one or more programs configured to be executed by the one or more processors, the one or more programs including instructions for performing any of the methods described herein.
- the methods described herein are performed by client device 504 ( FIG. 8 ) and/or smart device 204 ( FIG. 9 ).
- some implementations include a computing system including one or more processors and memory coupled to the one or more processors, the memory storing one or more programs configured to be executed by the one or more processors, the one or more programs including instructions for performing any of the methods described herein.
- the methods described herein are performed by a plurality of devices coupled together to form a system, such as one or more client devices and one or more servers.
- some implementations include a non-transitory computer-readable storage medium storing one or more programs for execution by one or more processors of a storage device, the one or more programs including instructions for performing any of the methods described herein.
- devices, storage mediums, and computing systems are provided with methods for providing event alerts, thereby increasing the effectiveness, efficiency, and user satisfaction with such systems.
- Such methods may complement or replace conventional methods for providing event alerts.
- FIG. 1 is an example smart home environment, in accordance with some implementations.
- FIG. 2 is a block diagram illustrating an example network architecture that includes a smart home network, in accordance with some implementations.
- FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment of FIG. 1 is integrated, in accordance with some implementations.
- FIG. 4 illustrates an abstracted functional view of the extensible devices and services platform of FIG. 3 , with reference to a processing engine as well as devices of the smart home environment, in accordance with some implementations.
- FIG. 5 is a representative operating environment in which a server system interacts with client devices and hub devices communicatively coupled to local smart devices, in accordance with some implementations.
- FIG. 6 is a block diagram illustrating a representative hub device, in accordance with some implementations.
- FIG. 7A is a block diagram illustrating a representative server system, in accordance with some implementations.
- FIGS. 7B-7C illustrate various data structures used by some implementations.
- FIG. 8 is a block diagram illustrating a representative client device, in accordance with some implementations.
- FIG. 9 is a block diagram illustrating a representative smart device, in accordance with some implementations.
- FIG. 10 is a block diagram illustrating a representative smart home provider server system, in accordance with some implementations.
- FIG. 11A illustrates a representative system architecture for video analysis and categorization, in accordance with some implementations.
- FIG. 11B illustrates a representative processing pipeline for video analysis and categorization, in accordance with some implementations.
- FIG. 11C illustrates an example motion mask and an example event mask generated based on video data, in accordance with some implementations.
- FIG. 11D illustrates a representative process for learning event categories and categorizing motion events, in accordance with some implementations.
- FIG. 11E illustrates a representative process for identifying an event of interest based on selected zones of interest, in accordance with some implementations.
- FIG. 11F illustrates a representative process for segmenting and categorizing a motion event candidate, in accordance with some implementations.
- FIG. 11G illustrates a representative process for categorizing a motion event candidate, in accordance with some implementations.
- FIG. 12A illustrates a representative system and process for segmenting and categorizing a motion event candidate, in accordance with some implementations.
- FIG. 12B illustrates a representative system and process for providing an alert for a motion event candidate, in accordance with some implementations.
- FIGS. 13A-13C illustrate example user interfaces on a client device for reviewing and revising motion events, in accordance with some implementations.
- FIG. 14A illustrates a representative user interface for providing event alerts, in accordance with some implementations.
- FIGS. 15A-15I illustrate examples of person detection in a video feed, in accordance with some implementations.
- the customer may be the landlord with respect to purchasing the unit
- the installer may be a local apartment supervisor
- a first user may be the tenant
- a second user may again be the landlord with respect to remote control functionality.
- identity of the person performing the action may be germane to a particular advantage provided by one or more of the implementations, such identity should not be construed in the descriptions that follow as necessarily limiting the scope of the present teachings to those particular individuals having those particular identities.
- FIG. 1 is an example smart home environment 100 in accordance with some implementations.
- Smart home environment 100 includes a structure 150 (e.g., a house, office building, garage, or mobile home) with various integrated devices. It will be appreciated that devices may also be integrated into a smart home environment 100 that does not include an entire structure 150 , such as an apartment, condominium, or office space. Further, the smart home environment 100 may control and/or be coupled to devices outside of the actual structure 150 . Indeed, several devices in the smart home environment 100 need not be physically within the structure 150 . For example, a device controlling a pool heater 114 or irrigation system 116 may be located outside of the structure 150 .
- a pool heater 114 or irrigation system 116 may be located outside of the structure 150 .
- the depicted structure 150 includes a plurality of rooms 152 , separated at least partly from each other via walls 154 .
- the walls 154 may include interior walls or exterior walls.
- Each room may further include a floor 156 and a ceiling 158 .
- Devices may be mounted on, integrated with and/or supported by a wall 154 , floor 156 or ceiling 158 .
- the integrated devices of the smart home environment 100 include intelligent, multi-sensing, network-connected devices that integrate seamlessly with each other in a smart home network (e.g., 202 FIG. 2 ) and/or with a central server or a cloud-computing system to provide a variety of useful smart home functions.
- a smart home network e.g., 202 FIG. 2
- a central server or a cloud-computing system to provide a variety of useful smart home functions.
- the smart home environment 100 may include one or more intelligent, multi-sensing, network-connected thermostats 102 (hereinafter referred to as “smart thermostats 102 ”), one or more intelligent, network-connected, multi-sensing hazard detection units 104 (hereinafter referred to as “smart hazard detectors 104 ”), one or more intelligent, multi-sensing, network-connected entryway interface devices 106 and 120 (hereinafter referred to as “smart doorbells 106 ” and “smart door locks 120 ”), and one or more intelligent, multi-sensing, network-connected alarm systems 122 (hereinafter referred to as “smart alarm systems 122 ”).
- the one or more smart thermostats 102 detect ambient climate characteristics (e.g., temperature and/or humidity) and control a HVAC system 103 accordingly.
- a respective smart thermostat 102 includes an ambient temperature sensor.
- the smart doorbell 106 and/or the smart door lock 120 may detect a person's approach to or departure from a location (e.g., an outer door), control doorbell/door locking functionality (e.g., receive user inputs from a portable electronic device 166 - 1 to actuate bolt of the smart door lock 120 ), announce a person's approach or departure via audio or visual means, and/or control settings on a security system (e.g., to activate or deactivate the security system when occupants go and come).
- a location e.g., an outer door
- control doorbell/door locking functionality e.g., receive user inputs from a portable electronic device 166 - 1 to actuate bolt of the smart door lock 120
- announce a person's approach or departure via audio or visual means e.g., to activate or deactivate the security system when occupants go and come.
- the smart home environment 100 includes one or more intelligent, multi-sensing, network-connected wall switches 108 (hereinafter referred to as “smart wall switches 108 ”), along with one or more intelligent, multi-sensing, network-connected wall plug interfaces 110 (hereinafter referred to as “smart wall plugs 110 ”).
- the smart wall switches 108 may detect ambient lighting conditions, detect room-occupancy states, and control a power and/or dim state of one or more lights. In some instances, smart wall switches 108 may also control a power state or speed of a fan, such as a ceiling fan.
- the smart wall plugs 110 may detect occupancy of a room or enclosure and control supply of power to one or more wall plugs (e.g., such that power is not supplied to the plug if nobody is at home).
- the smart home may also include a variety of non-communicating legacy appliances 140 , such as old conventional washer/dryers, refrigerators, and the like, which may be controlled by smart wall plugs 110 .
- the smart home environment 100 may further include a variety of partially communicating legacy appliances 142 , such as infrared (“IR”) controlled wall air conditioners or other IR-controlled devices, which may be controlled by IR signals provided by the smart hazard detectors 104 or the smart wall switches 108 .
- IR infrared
- the smart home environment 100 includes one or more network-connected cameras 118 that are configured to provide video monitoring and security in the smart home environment 100 .
- the cameras 118 may be used to determine occupancy of the structure 150 and/or particular rooms 152 in the structure 150 , and thus may act as occupancy sensors.
- video captured by the cameras 118 may be processed to identify the presence of an occupant in the structure 150 (e.g., in a particular room 152 ).
- Specific individuals may be identified based, for example, on their appearance (e.g., height, face) and/or movement (e.g., their walk/gait).
- Cameras 118 may additionally include one or more sensors (e.g., IR sensors, motion detectors), input devices (e.g., microphone for capturing audio), and output devices (e.g., speaker for outputting audio).
- the smart home environment 100 may also include communication with devices outside of the physical home but within a proximate geographical range of the home.
- the smart home environment 100 may include a pool heater monitor 114 that communicates a current pool temperature to other devices within the smart home environment 100 and/or receives commands for controlling the pool temperature.
- the smart home environment 100 may include an irrigation monitor 116 that communicates information regarding irrigation systems within the smart home environment 100 and/or receives control information for controlling such irrigation systems.
- one or more of the smart home devices of FIG. 1 may further allow a user to interact with the device even if the user is not proximate to the device.
- a user may communicate with a device using a computer (e.g., a desktop computer, laptop computer, or tablet) or other portable electronic device 166 (e.g., a mobile phone, such as a smart phone).
- a webpage or application may be configured to receive communications from the user and control the device based on the communications and/or to present information about the device's operation to the user.
- the user may view a current set point temperature for a device (e.g., a stove) and adjust it using a computer.
- the user may be in the structure during this remote communication or outside the structure.
- users may control smart devices in the smart home environment 100 using a network-connected computer or portable electronic device 166 .
- some or all of the occupants e.g., individuals who live in the home
- Such registration may be made at a central server to authenticate the occupant and/or the device as being associated with the home and to give permission to the occupant to use the device to control the smart devices in the home.
- An occupant may use their registered device 166 to remotely control the smart devices of the home, such as when the occupant is at work or on vacation.
- the occupant may also use their registered device to control the smart devices when the occupant is actually located inside the home, such as when the occupant is sitting on a couch inside the home.
- the smart home environment 100 may make inferences about which individuals live in the home and are therefore occupants and which devices 166 are associated with those individuals. As such, the smart home environment may “learn” who is an occupant and permit the devices 166 associated with those individuals to control the smart devices of the home.
- devices 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 , 118 , 120 , and/or 122 are capable of data communications and information sharing with other smart devices, a central server or cloud-computing system, and/or other devices that are network-connected.
- Data communications may be carried out using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- the smart devices serve as wireless or wired repeaters.
- a first one of the smart devices communicates with a second one of the smart devices via a wireless router.
- the smart devices may further communicate with each other via a connection (e.g., network interface 160 ) to a network, such as the Internet 162 .
- a network such as the Internet 162 .
- the smart devices may communicate with a smart home provider server system 164 (also called a central server system and/or a cloud-computing system herein).
- the smart home provider server system 164 may be associated with a manufacturer, support entity, or service provider associated with the smart device(s).
- a user is able to contact customer support using a smart device itself rather than needing to use other communication means, such as a telephone or Internet-connected computer.
- software updates are automatically sent from the smart home provider server system 164 to smart devices (e.g., when available, when purchased, or at routine intervals).
- hub device 180 further comprises a local storage device for storing data related to, or output by, smart devices of smart home environment 100 .
- the data includes one or more of: video data output by a camera device, metadata output by a smart device, settings information for a smart device, usage logs for a smart device, and the like.
- the local storage device is used to store video data when external network conditions are poor. For example, the local storage device is used when an encoding bitrate of camera 118 exceeds the available bandwidth of the external network (e.g., network(s) 162 ). In some implementations, the local storage device temporarily stores video data from one or more cameras (e.g., camera 118 ) prior to transferring the video data to a server system (e.g., server system 508 , FIG. 5 ). In some implementations, the local storage device is a component of a camera device. In some implementations, each camera device includes a local storage. In some implementations, the local storage device performs some or all of the data processing described below with respect to server system 508 ( FIG. 7A ).
- the local storage device stores some or all of the data described below with respect to server system 508 , such as data storage database 7160 , account database 7162 , device information database 7164 , and event information database 7166 . In some implementations, the local storage device performs some or all of the operations described herein with respect to the server system 508 .
- a smart home controller processes inputs (e.g., from smart devices 204 , electronic device 166 , and/or smart home provider server system 164 ) and sends commands (e.g., to smart devices 204 in the smart home network 202 ) to control operation of the smart home environment 100 .
- some of the smart devices 204 in the smart home network 202 e.g., in the mesh network
- are “spokesman” nodes e.g., 204 - 1
- others are “low-powered” nodes (e.g., 204 - 9 ).
- Some of the smart devices in the smart home environment 100 are battery powered, while others have a regular and reliable power source, such as by connecting to wiring (e.g., to 120V line voltage wires) behind the walls 154 of the smart home environment.
- the smart devices that have a regular and reliable power source are referred to as “spokesman” nodes. These nodes are typically equipped with the capability of using a wireless protocol to facilitate bidirectional communication with a variety of other devices in the smart home environment 100 , as well as with the smart home provider server system 164 .
- one or more “spokesman” nodes operate as a smart home controller.
- the devices that are battery powered are the “low-power” nodes. These nodes tend to be smaller than spokesman nodes and typically only communicate using wireless protocols that require very little power, such as Zigbee, 6LoWPAN, etc.
- some low-power nodes are capable of only a limited bidirectional communication. For example, other devices are able to communicate with the low-power nodes only during a certain time period.
- the smart devices serve as low-power and spokesman nodes to create a mesh network in the smart home environment 100 .
- individual low-power nodes in the smart home environment regularly send out messages regarding what they are sensing, and the other low-powered nodes in the smart home environment—in addition to sending out their own messages—forward the messages, thereby causing the messages to travel from node to node (i.e., device to device) throughout the smart home network 202 .
- the spokesman nodes in the smart home network 202 which are able to communicate using a relatively high-power communication protocol, such as IEEE 802.11, are able to switch to a relatively low-power communication protocol, such as IEEE 802.15.4, to receive these messages, translate the messages to other communication protocols, and send the translated messages to other spokesman nodes and/or the smart home provider server system 164 (using, e.g., the relatively high-power communication protocol).
- a relatively high-power communication protocol such as IEEE 802.11
- a relatively low-power communication protocol such as IEEE 802.15.4
- the spokesman nodes and some of the low-powered nodes are capable of “listening.” Accordingly, users, other devices, and/or the smart home provider server system 164 may communicate control commands to the low-powered nodes.
- a user may use the electronic device 166 (e.g., a smart phone) to send commands over the Internet to the smart home provider server system 164 , which then relays the commands to one or more spokesman nodes in the smart home network 202 .
- the spokesman nodes may use a low-power protocol to communicate the commands to the low-power nodes throughout the smart home network 202 , as well as to other spokesman nodes that did not receive the commands directly from the smart home provider server system 164 .
- a smart nightlight 170 ( FIG. 1 ), which is an example of a smart device 204 , is a low-power node.
- the smart nightlight 170 houses an occupancy sensor, such as an ultrasonic or passive IR sensor, and an ambient light sensor, such as a photo resistor or a single-pixel sensor that measures light in the room.
- the smart nightlight 170 is configured to activate the light source when its ambient light sensor detects that the room is dark and when its occupancy sensor detects that someone is in the room. In other implementations, the smart nightlight 170 is simply configured to activate the light source when its ambient light sensor detects that the room is dark.
- low-power nodes include battery-operated versions of the smart hazard detectors 104 .
- These smart hazard detectors 104 are often located in an area without access to constant and reliable power and may include any number and type of sensors, such as smoke/fire/heat sensors (e.g., thermal radiation sensors), carbon monoxide/dioxide sensors, occupancy/motion sensors, ambient light sensors, ambient temperature sensors, humidity sensors, and the like.
- smart hazard detectors 104 may send messages that correspond to each of the respective sensors to the other devices and/or the smart home provider server system 164 , such as by using the mesh network as described above.
- the smart home environment 100 includes service robots 168 ( FIG. 1 ) that are configured to carry out, in an autonomous manner, any of a variety of household tasks.
- the smart home environment 100 of FIG. 1 includes a hub device 180 that is communicatively coupled to the network(s) 162 directly or via the network interface 160 .
- the hub device 180 is further communicatively coupled to one or more of the smart devices using a radio communication network that is available at least in the smart home environment 100 .
- Communication protocols used by the radio communication network include, but are not limited to, ZigBee, Z-Wave, Insteon, EuOcean, Thread, OSIAN, Bluetooth Low Energy and the like.
- the hub device 180 not only converts the data received from each smart device to meet the data format requirements of the network interface 160 or the network(s) 162 , but also converts information received from the network interface 160 or the network(s) 162 to meet the data format requirements of the respective communication protocol associated with a targeted smart device. In some implementations, in addition to data format conversion, the hub device 180 further processes the data received from the smart devices or information received from the network interface 160 or the network(s) 162 preliminary.
- the hub device 180 can integrate inputs from multiple sensors/connected devices (including sensors/devices of the same and/or different types), perform higher level processing on those inputs—e.g., to assess the overall environment and coordinate operation among the different sensors/devices—and/or provide instructions to the different devices based on the collection of inputs and programmed processing.
- the network interface 160 and the hub device 180 are integrated to one network device. Functionality described herein is representative of particular implementations of smart devices, control application(s) running on representative electronic device(s) (such as a smart phone), hub device(s) 180 , and server(s) coupled to hub device(s) via the Internet or other Wide Area Network.
- FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment of FIG. 1 is integrated, in accordance with some implementations.
- the extensible devices and services platform 300 includes smart home provider server system 164 .
- Each of the intelligent, network-connected devices described with reference to FIG. 1 e.g., 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 and 118 , identified simply as “devices” in FIGS. 2-4 ) may communicate with the smart home provider server system 164 .
- a connection to the Internet 162 may be established either directly (for example, using 3G/4G connectivity to a wireless carrier), or through a network interface 160 (e.g., a router, switch, gateway, hub device, or an intelligent, dedicated whole-home controller node), or through any combination thereof.
- a network interface 160 e.g., a router, switch, gateway, hub device, or an intelligent, dedicated whole-home controller node
- the devices and services platform 300 communicates with and collects data from the smart devices of the smart home environment 100 .
- the devices and services platform 300 communicates with and collects data from a plurality of smart home environments across the world.
- the smart home provider server system 164 collects home data 302 from the devices of one or more smart home environments 100 , where the devices may routinely transmit home data or may transmit home data in specific instances (e.g., when a device queries the home data 302 ).
- Example collected home data 302 includes, without limitation, power consumption data, blackbody radiation data, occupancy data, HVAC settings and usage data, carbon monoxide levels data, carbon dioxide levels data, volatile organic compounds levels data, sleeping schedule data, cooking schedule data, inside and outside temperature humidity data, television viewership data, inside and outside noise level data, pressure data, video data, etc.
- the smart home provider server system 164 provides one or more services 304 to smart homes and/or third parties.
- Example services 304 include, without limitation, software updates, customer support, sensor data collection/logging, remote access, remote or distributed control, and/or use suggestions (e.g., based on collected home data 302 ) to improve performance, reduce utility cost, increase safety, etc.
- data associated with the services 304 is stored at the smart home provider server system 164 , and the smart home provider server system 164 retrieves and transmits the data at appropriate times (e.g., at regular intervals, upon receiving a request from a user, etc.).
- the extensible devices and services platform 300 includes a processing engine 306 , which may be concentrated at a single server or distributed among several different computing entities without limitation.
- the processing engine 306 includes engines configured to receive data from the devices of smart home environments 100 (e.g., via the Internet 162 and/or a network interface 160 ), to index the data, to analyze the data and/or to generate statistics based on the analysis or as part of the analysis.
- the analyzed data is stored as derived home data 308 .
- Results of the analysis or statistics may thereafter be transmitted back to the device that provided home data used to derive the results, to other devices, to a server providing a web page to a user of the device, or to other non-smart device entities.
- usage statistics e.g., relative to use of other devices
- usage patterns e.g., usage patterns
- statistics summarizing sensor readings are generated by the processing engine 306 and transmitted.
- the results or statistics may be provided via the Internet 162 .
- the processing engine 306 may be configured and programmed to derive a variety of useful information from the home data 302 .
- a single server may include one or more processing engines.
- the derived home data 308 may be used at different granularities for a variety of useful purposes, ranging from explicit programmed control of the devices on a per-home, per-neighborhood, or per-region basis (for example, demand-response programs for electrical utilities), to the generation of inferential abstractions that may assist on a per-home basis (for example, an inference may be drawn that the homeowner has left for vacation and so security detection equipment may be put on heightened sensitivity), to the generation of statistics and associated inferential abstractions that may be used for government or charitable purposes.
- processing engine 306 may generate statistics about device usage across a population of devices and send the statistics to device users, service providers or other entities (e.g., entities that have requested the statistics and/or entities that have provided monetary compensation for the statistics).
- the devices and services platform 300 exposes a range of application programming interfaces (APIs) 310 to third parties, such as charities 314 , governmental entities 316 (e.g., the Food and Drug Administration or the Environmental Protection Agency), academic institutions 318 (e.g., university researchers), businesses 320 (e.g., providing device warranties or service to related equipment, targeting advertisements based on home data), utility companies 324 , and other third parties.
- the APIs 310 are coupled to and permit third-party systems to communicate with the smart home provider server system 164 , including the services 304 , the processing engine 306 , the home data 302 , and the derived home data 308 .
- the APIs 310 allow applications executed by the third parties to initiate specific data processing tasks that are executed by the smart home provider server system 164 , as well as to receive dynamic updates to the home data 302 and the derived home data 308 .
- third parties may develop programs and/or applications (e.g., web applications or mobile applications) that integrate with the smart home provider server system 164 to provide services and information to users.
- programs and applications may be, for example, designed to help users reduce energy consumption, to preemptively service faulty equipment, to prepare for high service demands, to track past service performance, etc., and/or to perform other beneficial functions or tasks.
- FIG. 4 illustrates an abstracted functional view 400 of the extensible devices and services platform 300 of FIG. 3 , with reference to a processing engine 306 as well as devices of the smart home environment, in accordance with some implementations.
- the devices may be thought of as sharing common characteristics in that each device is a data consumer 402 (DC), a data source 404 (DS), a services consumer 406 (SC), and a services source 408 (SS).
- DC data consumer 402
- DS data source 404
- SC services consumer 406
- SS services source 408
- the extensible devices and services platform 300 may also be configured to use the large amount of data that is generated by these devices.
- the extensible devices and services platform 300 may be directed to “repurpose” that data in a variety of automated, extensible, flexible, and/or scalable ways to achieve a variety of useful objectives. These objectives may be predefined or adaptively identified based on, e.g., usage patterns, device efficiency, and/or user input (e.g., requesting specific functionality).
- FIG. 4 shows processing engine 306 as including a number of processing paradigms 410 .
- processing engine 306 includes a managed services paradigm 410 a that monitors and manages primary or secondary device functions.
- the device functions may include ensuring proper operation of a device given user inputs, estimating that (e.g., and responding to an instance in which) an intruder is or is attempting to be in a dwelling, detecting a failure of equipment coupled to the device (e.g., a light bulb having burned out), implementing or otherwise responding to energy demand response events, providing a heat-source alert, and/or alerting a user of a current or predicted future event or characteristic.
- processing engine 306 includes an advertising/communication paradigm 410 b that estimates characteristics (e.g., demographic information), desires and/or products of interest of a user based on device usage. Services, promotions, products or upgrades may then be offered or automatically provided to the user.
- processing engine 306 includes a social paradigm 410 c that uses information from a social network, provides information to a social network (for example, based on device usage), and/or processes data associated with user and/or device interactions with the social network platform. For example, a user's status as reported to their trusted contacts on the social network may be updated to indicate when the user is home based on light detection, security system inactivation or device usage detectors. As another example, a user may be able to share device-usage statistics with other users. In yet another example, a user may share HVAC settings that result in low power bills and other users may download the HVAC settings to their smart thermostat 102 to reduce their power bills.
- characteristics e.g., demographic information
- processing engine 306 includes a social paradigm 410 c that uses
- processing engine 306 includes a challenges/rules/compliance/rewards paradigm 410 d that informs a user of challenges, competitions, rules, compliance regulations and/or rewards and/or that uses operation data to determine whether a challenge has been met, a rule or regulation has been complied with and/or a reward has been earned.
- the challenges, rules, and/or regulations may relate to efforts to conserve energy, to live safely (e.g., reducing the occurrence of heat-source alerts) (e.g., reducing exposure to toxins or carcinogens), to conserve money and/or equipment life, to improve health, etc.
- one challenge may involve participants turning down their thermostat by one degree for one week.
- Those participants that successfully complete the challenge are rewarded, such as with coupons, virtual currency, status, etc.
- an example involves a rental-property owner making a rule that no renters are permitted to access certain owner's rooms.
- the devices in the room having occupancy sensors may send updates to the owner when the room is accessed.
- processing engine 306 integrates or otherwise uses extrinsic information 412 from extrinsic sources to improve the functioning of one or more processing paradigms.
- Extrinsic information 412 may be used to interpret data received from a device, to determine a characteristic of the environment near the device (e.g., outside a structure that the device is enclosed in), to determine services or products available to the user, to identify a social network or social-network information, to determine contact information of entities (e.g., public-service entities such as an emergency-response team, the police or a hospital) near the device, to identify statistical or environmental conditions, trends or other information associated with a home or neighborhood, and so forth.
- entities e.g., public-service entities such as an emergency-response team, the police or a hospital
- FIG. 5 illustrates a representative operating environment 500 in which a server system 508 (also sometimes called a “hub device server system,” “video server system,” or “hub server system”) provides data processing for monitoring and facilitating review of motion events in video streams captured by video cameras 118 .
- the server system 508 receives video data from video sources 522 (including cameras 118 ) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or the smart home environments 100 of FIG. 1 ).
- Each video source 522 may be bound to one or more reviewer accounts, and the server system 508 provides video monitoring data for the video source 522 to client devices 504 associated with the reviewer accounts.
- the portable electronic device 166 is an example of the client device 504 .
- the smart home provider server system 164 or a component thereof serves as the server system 508 .
- the server system 508 is a dedicated video processing server that provides video processing services to video sources and client devices 504 independent of other services provided by the server system 508 .
- each of the video sources 522 includes one or more video cameras 118 that capture video and send the captured video to the server system 508 substantially in real-time.
- each of the video sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one or more cameras 118 and the server system 508 .
- the controller device receives the video data from the one or more cameras 118 , optionally, performs some preliminary processing on the video data, and sends the video data to the server system 508 on behalf of the one or more cameras 118 substantially in real-time.
- each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or the server system 508 .
- each of the client devices 504 includes a client-side module 502 .
- the client-side module 502 communicates with a server-side module 506 executed on the server system 508 through the one or more networks 162 .
- the client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with the server-side module 506 .
- the server-side module 506 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on a respective client device 504 .
- the server-side module 506 also provides server-side functionalities for video processing and camera control for any number of the video sources 522 , including any number of control devices and the cameras 118 .
- the server-side module 506 includes one or more processors 512 , a video storage database 514 , device and account databases 516 , an I/O interface to one or more client devices 518 , and an I/O interface to one or more video sources 520 .
- the I/O interface to one or more clients 518 facilitates the client-facing input and output processing for the server-side module 506 .
- the databases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account.
- the I/O interface to one or more video sources 520 facilitates communications with one or more video sources 522 (e.g., groups of one or more cameras 118 and associated controller devices).
- the video storage database 514 stores raw video data received from the video sources 522 , as well as various types of metadata, such as motion events, event categories, event category models, event filters, and event masks, for use in data processing for event monitoring and review for each reviewer account.
- Examples of a representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices.
- PDA personal digital assistant
- EGPS enhanced general packet radio service
- POS point-of-sale
- the server system 508 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, the server system 508 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of the server system 508 . In some implementations, the server system 508 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices, or other data processing devices.
- third party service providers e.g., third-party cloud service providers
- the server-client environment 500 shown in FIG. 5 includes both a client-side portion (e.g., the client-side module 502 ) and a server-side portion (e.g., the server-side module 506 ).
- the division of functionalities between the client and server portions of operating environment 500 can vary in different implementations.
- the division of functionalities between the video source 522 and the server system 508 can vary in different implementations.
- client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the server system 508 ).
- operating environment 500 that involves the server system 508 , the video sources 522 and the video cameras 118 is merely an example. Many aspects of operating environment 500 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like).
- smart thermostats 102 e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like.
- the network interface device 160 and the hub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device of the video sources 522 - n.
- the network interface device 160 and the hub device 180 optionally communicate with each other via a sub-network 162 A.
- the hub device 180 optionally includes one or more built-in sensors (not shown), including, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes.
- built-in sensors including, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes.
- the radios 640 enable one or more radio communication networks in the smart home environments, and allow a hub device to communicate with smart devices.
- the radios 640 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Communication interfaces 604 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Memory 606 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 606 or alternatively the non-volatile memory within memory 606 , includes a non-transitory computer readable storage medium.
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices (e.g., the memory of any of the smart devices in smart home environment 100 , FIG. 1 ), and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 606 optionally, stores a subset of the modules and data structures identified above.
- memory 606 optionally, stores additional modules and data structures not described above.
- FIG. 7A is a block diagram illustrating the server system 508 in accordance with some implementations.
- the server system 508 typically includes one or more processing units (CPUs) 702 , one or more network interfaces 704 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices), memory 706 , and one or more communication buses 708 for interconnecting these components (sometimes called a chipset).
- Memory 706 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices. Memory 706 , optionally, includes one or more storage devices remotely located from one or more processing units 702 . Memory 706 , or alternatively the non-volatile memory within memory 706 , includes a non-transitory computer readable storage medium. In some implementations, memory 706 , or the non-transitory computer readable storage medium of memory 706 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 706 optionally, stores a subset of the modules and data structures identified above.
- memory 706 optionally, stores additional modules and data structures not described above.
- FIG. 7B illustrates various data structures used by some implementations, including an event record 7168 - i, a user profile 7163 - i, and a device profile 7165 - i.
- the event record 7168 - i corresponds to a motion event i and data for the motion event i.
- the data for motion event i includes motion start (also sometimes called cuepoint) data 71681 , event segments data 71682 , raw video data 71683 , motion end data 71684 , event features data 71685 , scene features data 71686 , associated user information 71687 , and associated devices information 71688 .
- the event record 7168 - i includes only a subset of the above data.
- the event record 7168 - i includes additional event data not shown such as data regarding event/motion masks.
- Motion start data 71681 includes date and time information such as a timestamp and optionally includes additional information such as information regarding the amount of motion present and/or the motion start location.
- motion end data 71684 includes date and time information such as a timestamp and optionally includes additional information such as information regarding the amount of motion present and/or the motion end location.
- Event segments 71682 includes information regarding segmentation of motion event i.
- event segments are stored separately from the raw video data 71683 .
- the event segments are stored at a lower display resolution than the raw video data.
- the event segments are optionally stored at 480p or 780p and the raw video data is stored at 1080i or 1080p. Storing the event segments at a lower display resolution enables the system to devote less time and resources to retrieving and processing the event segments.
- the event segments are not stored separately and the segmentation information includes references to the raw video data 71683 as well as date and time information for reproducing the event segments.
- Event features data 71685 includes information regarding event features such as event categorizations/classifications, object masks, motion masks, identified/recognized/tracked motion objects (also sometimes called blobs), information regarding features of the motion objects (e.g., object color, object dimensions, velocity, size changes, etc.), information regarding activity in zones of interest, and the like.
- Scene features data 71686 includes information regarding the scene in which the event took place such as depth map information, information regarding the location of windows, televisions, fans, the ceiling/floor, etc., information regarding whether the scene is indoors or outdoors, information regarding zones of interest, and the like.
- Associated user information 71687 includes information regarding users associated with the event such as users identified in the event, users receiving notification of the event, and the like. In some instances, the associated user information 71687 includes a link, pointer, or reference to a user profile 7163 for to the user. Associated devices information 71688 includes information regarding the device or devices involved in the event (e.g., a camera 118 that recorded the event). In some instances, the associated devices information 71688 includes a link, pointer, or reference to a device profile 7165 for the device.
- the user profile 7163 - i corresponds to a user i associated with the smart home network (e.g., smart home network 202 ) such as a user of a hub device 204 , a user identified by a hub device 204 , a user who receives notifications from a hub device 204 or from the server system 508 , and the like.
- the user profile 7163 - i includes user preferences 71631 , user settings 71632 , associated devices information 71633 , and associated events information 71634 .
- the user profile 7163 - i includes only a subset of the above data.
- the user profile 7163 - i includes additional user information not shown such as information regarding other users associated with the user i.
- the user preferences 71631 include explicit user preferences input by the user as well as implicit and/or inferred user preferences determined by the system (e.g., server system 508 and/or client device 504 ). In some instances, the inferred user preferences are based on historical user activity and/or historical activity of other users.
- the user settings 71632 include information regarding settings set by the user i such as notification settings, device settings, and the like. In some instances, the user settings 71632 include device settings for devices associated with the user i.
- Associated devices information 71633 includes information regarding devices associated with the user i such as devices within the user's smart home environment 100 and/or client devices 504 . In some instances, associated devices information 71633 includes a link, pointer, or reference to a corresponding device profile 7165 . Associated events information 71634 includes information regarding events associated with user i such as events in which user i was identified, events for which user i was notified, events corresponding to user i's smart home environment 100 , and the like. In some instances, the associated events information 71634 includes a link, pointer, or reference to a corresponding event record 7168 .
- the device profile 7165 - i corresponds to a device i associated with a smart home network (e.g., smart home network 202 ) such a hub device 204 , a camera 118 , a client device 504 , and the like.
- the device profile 7165 - i includes device settings 71651 , associated devices information 71652 , associated user information 71653 , associated event information 71654 , and environmental data 71655 .
- the device profile 7165 - i includes only a subset of the above data.
- the device profile 7165 - i includes additional device information not shown such as information regarding whether the device is currently active.
- Device settings 71651 include information regarding the current settings of device i such as positioning information, mode of operation information, and the like. In some instances, the device settings 71651 are user-specific and are set by respective users of the device i.
- Associated devices information 71652 includes information regarding other devices associated with device i such as other devices linked to device i and/or other devices in the same smart home network as device i. In some instances, associated devices information 71652 includes a link, pointer, or reference to a respective device profile 7165 corresponding to the associated device.
- Associated user information 71653 includes information regarding users associated with the device such as users receiving notifications from the device, users registered with the device, users associated with the smart home network of the device, and the like. In some instances, associated user information 71653 includes a link, pointer, or reference to a user profile 7163 corresponding to the associated user.
- Associated event information 71654 includes information regarding events associated with the device i such as historical events involving the device i. In some instances, associated event information 71654 includes a link, pointer, or reference to an event record 7168 corresponding to the associated event.
- Environmental data 71655 includes information regarding the environment of device i such as information regarding whether the device is outdoors or indoors, information regarding the light level of the environment, information regarding the amount of activity expected in the environment (e.g., information regarding whether the device is in a private residence versus a busy commercial property), information regarding environmental objects (e.g., depth mapping information for a camera), and the like.
- FIG. 7C illustrates various data structures used by some implementations, including event categories 7170 and confidence criteria 7171 .
- Event categories 7170 include a plurality of categories, such as an unknown person(s) event category 71702 , a known person(s) event category 71704 , a zone event category 71706 , an animal event category 71708 , a vehicle event category 71710 , an audio event category 71712 , and an alert event category 71714 .
- the event categories 7170 are predetermined or preset.
- the event categories 7170 are generated based on event clustering, such as described below with respect to FIG. 11D .
- the event categories 7170 are arranged into an event category hierarchy (e.g., with the most important or most urgent categories at the top).
- the event categories 7170 are optionally arranged into an event category hierarchy such that unknown person(s) event 71702 is at the top of the hierarchy and alert event 71714 is at the bottom of the hierarchy.
- the unknown person(s) event category 71702 is assigned to events involving an unknown or unidentified person.
- the known person(s) event category 71704 is assigned to events involving a known (e.g., identified) person.
- the zone event category 71706 is assigned to events involving a zone of interest (e.g., a zone of interest defined by a user).
- the animal event category 71708 is assigned to events involving an animal, such as a pet or livestock. In some implementations, the animal event category 71708 is divided into two categories, one for known animals and one for unknown animals.
- the vehicle event category 71710 is assigned to events involving a vehicle, such as a car, truck, boat, or airplane. In some implementations, the vehicle event category 71710 is divided into two categories, one for recognized vehicles and one for unrecognized vehicles.
- the audio event category 71712 is assigned to events involving audio (e.g., audio captured by a smart device in the smart home environment 100 ). In some implementations, the audio event category 71712 is divided into multiple categories based on various characteristics of the audio event. For example, a category for human voices and a category for music.
- event categories 7170 include additional event categories not shown in FIG. 7C .
- event categories 7170 include event categories that are a combination of the event categories shown in FIG. 7C .
- an event involving an unknown person in a zone of interest is optionally assigned to an event category for unknown person(s) and zone(s) of interest.
- an event involving multiple categories is assigned to the event category with the highest position in the event category hierarchy.
- the confidence criteria 7171 include a plurality of thresholds, such as 50% threshold 71716 , 70% threshold 71714 , and 95% threshold 71712 .
- each threshold is associated with a particular type of alert.
- each threshold is associated with a particular descriptive phrase for use in an alert.
- the system determines whether a confidence score exceeds a particular threshold, such as threshold 71716 . In some implementations, the system determines whether the confidence score meets or exceeds the particular threshold.
- a ‘general’ alert is associated with a confidence score for person detection below the confidence threshold 71716 .
- the ‘general’ alert states “Activity detected.”
- a ‘possible’ alert is associated with a confidence score for person detection above confidence threshold 71716 , but below confidence threshold 71714 .
- the ‘possible’ alert states “Activity, possibly involving a person, detected.”
- a ‘likely’ alert is associated with a confidence score for person detection above confidence threshold 71714 , but below confidence threshold 71712 .
- the ‘likely’ alert states “Activity, likely involving a person, detected.” Further, a ‘person’ alert is associated with a confidence score for person detection above confidence threshold 71712 . In this example, the ‘person’ alert states “Activity involving a person detected.”
- FIG. 8 is a block diagram illustrating a representative client device 504 associated with a user account in accordance with some implementations.
- the client device 504 typically, includes one or more processing units (CPUs) 802 , one or more network interfaces 804 , memory 806 , and one or more communication buses 808 for interconnecting these components (sometimes called a chipset).
- the client device also includes a user interface 810 and one or more built-in sensors 890 (e.g., accelerometer and gyroscope).
- User interface 810 includes one or more output devices 812 that enable presentation of media content, including one or more speakers and/or one or more visual displays.
- User interface 810 also includes one or more input devices 814 , including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- the client devices use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard.
- the client device includes one or more cameras, scanners, or photo sensor units for capturing images (not shown).
- the client device includes a location detection device 816 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the client device.
- GPS global positioning satellite
- Memory 806 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices. Memory 806 , optionally, includes one or more storage devices remotely located from one or more processing units 802 . Memory 806 , or alternatively the non-volatile memory within memory 806 , includes a non-transitory computer readable storage medium. In some implementations, memory 806 , or the non-transitory computer readable storage medium of memory 806 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 806 optionally, stores a subset of the modules and data structures identified above.
- memory 806 optionally, stores additional modules and data structures not described above.
- FIG. 9 is a block diagram illustrating a representative smart device 204 in accordance with some implementations.
- the smart device 204 e.g., any devices of a smart home environment 100 , FIGS. 1 and 2
- the smart device 204 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 902 , one or more communication interfaces 904 , memory 906 , radios 940 , and one or more communication buses 908 for interconnecting these components (sometimes called a chipset).
- user interface 910 includes one or more output devices 912 that enable presentation of media content, including one or more speakers and/or one or more visual displays.
- user interface 910 also includes one or more input devices 914 , including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- some smart devices 204 use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard.
- the smart device 204 includes one or more image/video capture devices 918 (e.g., cameras, video cameras, scanners, photo sensor units).
- the client device includes a location detection device 916 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the smart device 204 .
- the built-in sensors 990 include, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes.
- the radios 940 enable one or more radio communication networks in the smart home environments, and allow a smart device 204 to communicate with other devices.
- the radios 940 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Communication interfaces 904 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Memory 906 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 906 or alternatively the non-volatile memory within memory 906 , includes a non-transitory computer readable storage medium.
- a smart device 204 performs some or all of the data processing described above with respect to data processing module 7144 of server system 508 ( FIG. 7A ).
- data processing module 9322 performs some or all of the data processing described above with respect to data processing module 7144 of server system 508 .
- device data 934 includes data described above with respect to server database 716 , such as event categories 7170 , confidence criteria 7171 , and alert criteria 7172 .
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 906 optionally, stores a subset of the modules and data structures identified above.
- memory 906 optionally, stores additional modules and data structures not described above.
- FIG. 10 is a block diagram illustrating the smart home provider server system 164 in accordance with some implementations.
- the smart home provider server system is part of the server system 508 .
- the smart home provider server system comprises server system 508 .
- the smart home provider server system 164 typically, includes one or more processing units (CPUs) 1002 , one or more network interfaces 1004 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices), memory 1006 , and one or more communication buses 1008 for interconnecting these components (sometimes called a chipset).
- Memory 1006 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices. Memory 1006 , optionally, includes one or more storage devices remotely located from one or more processing units 1002 . Memory 1006 , or alternatively the non-volatile memory within memory 1006 , includes a non-transitory computer readable storage medium. In some implementations, memory 1006 , or the non-transitory computer readable storage medium of memory 1006 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 1006 optionally, stores a subset of the modules and data structures identified above.
- memory 1006 optionally, stores additional modules and data structures not described above.
- any of the devices and systems described herein are interchangeable with one another and may be performed by any of the other devices or systems, where the corresponding sub-modules of these functions may additionally and/or alternatively be located within and executed by any of the devices and systems.
- a hub device 180 may determine when a motion event candidate has started and generate corresponding motion start information, or the server system 508 may make the determination and generate the information instead.
- the devices and systems shown in and described with respect to FIGS. 6-10 are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations.
- FIG. 11A illustrates a representative system architecture 1100 and FIG. 11B illustrates a corresponding data processing pipeline 1112 .
- the server system 508 includes functional modules for an event processor 7146 , an event categorizer 7148 , and a user-facing frontend 7150 , as discussed above with respect to FIG. 7A .
- the event processor 7146 obtains the motion event candidates (e.g., by processing the video stream or by receiving the motion start information from the video source 522 ).
- the event categorizer 7148 categorizes the motion event candidates into different event categories.
- the user-facing frontend 7150 generates event alerts and facilitates review of the motion events by a reviewer through a review interface on a client device 504 .
- the client facing frontend also receives user edits on the event categories, user preferences for alerts and event filters, and zone definitions for zones of interest.
- the event categorizer optionally revises event categorization models and results based on the user edits received by the user-facing frontend.
- the server system 508 also includes a video and source data database 1106 , event categorization modules database 1108 , and event data and event masks database 1110 . In some implementations, each of these databases is part of the server database 716 (e.g., part of data storage database 7160 ).
- the server system 508 receives the video stream 1104 from the video source 522 and optionally receives motion event candidate information 1102 such as motion start information and video source information 1103 such as device settings for camera 118 (e.g., a device profile 7165 for camera 118 ).
- the event processor sub-module 7146 communicates with the video source 522 .
- the server system sends alerts for motion events 1105 and motion event timeline information 1107 to the client device 504 .
- the client device 504 receives the alerts 1105 and presents them to a user of the client device.
- the server system sends alert information to the client device 504 and the client device generates the alert based on the alert information.
- the server system 508 optionally receives user information from the client device 504 such as edits on event categories 1109 and zone definitions 1111 .
- the data processing pipeline 1112 processes a live video feed received from a video source 522 (e.g., including a camera 118 and an optional controller device) in real-time to identify and categorize motion events in the live video feed, and sends real-time event alerts and a refreshed event timeline to a client device 504 associated with a reviewer account bound to the video source 522 .
- the data processing pipeline 1112 also processes stored video feeds from a video source 522 to reevaluate and/or re-categorize motion events as necessary, such as when new information is obtained regarding the motion event and/or when new information is obtained regarding motion event categories (e.g., a new activity zone is obtained from the user).
- video data is captured at the video source 522 ( 1113 )
- the video data is processed to determine if any potential motion event candidates are present in the video stream.
- a potential motion event candidate detected in the video data is also sometimes referred to as a cuepoint.
- Motion start detection ( 1114 ) triggers performance of a more thorough event identification process on a video segment (also sometimes called a “video slice” or “slice”) corresponding to the motion event candidate.
- the video data is initially processed at the video source 522 .
- the video source sends motion event candidate information, such as motion start information, to the server system 508 .
- the video data is processed at the server system 508 for motion start detection.
- the video stream is stored on server system 508 (e.g., in video and source data database 1106 ).
- the video stream is stored on a server distinct from server system 508 .
- the relevant portion of the video stream is retrieved from storage (e.g., from video and source data database 1106 ).
- the more thorough event identification process includes segmenting ( 1115 ) the video stream into multiple segments then categorizing the motion event candidate within each segment ( 1116 ).
- categorizing the motion event candidate includes an aggregation of background factors, motion entity detection identification, motion vector generation for each motion entity, motion entity features, and scene features to generate motion features ( 11166 ) for the motion event candidate.
- the event identification process further includes categorizing each segment ( 11167 ), generating or updating a motion event log ( 11168 ) based on categorization of a segment, generating an alert for the motion event ( 11169 ) based on categorization of a segment, categorizing the complete motion event ( 1119 ), updating the motion event log ( 1120 ) based on the complete motion event, and generating an alert for the motion event ( 1121 ) based on the complete motion event.
- a categorization is based on a determination that the motion event candidate is within a particular zone of interest.
- a categorization is based on a determination that the motion event candidate involves one or more particular zones of interest.
- the categorization is based on detection of one or more objects (e.g., a particular vehicle) and/or one or more entities (e.g., a family member or a family pet). In some implementations, the categorization is based on a confidence level for the detection of the one or more objects and/or the one or more entities. For example, a first category is utilized for a confidence level that meets or exceeds a particular threshold and a second category is utilized for a confidence level that does not meet or exceed the particular threshold.
- the event analysis and categorization process may be performed by the video source 522 and the server system 508 cooperatively, and the division of the tasks may vary in different implementations, for different equipment capability configurations, and/or for different network and server load situations.
- the server system 508 categorizes the motion event candidate
- the result of the event detection and categorization may be sent to a reviewer associated with the video source 522 .
- the server system 508 also determines an event mask for each motion event candidate and caches the event mask for later use in event retrieval based on selected zone(s) of interest.
- the server system 508 stores raw or compressed video data (e.g., in a video and source data database 1106 ), event categorization models (e.g., in an event categorization model database 1108 ), and event masks and other event metadata (e.g., in an event data and event mask database 1110 ) for each of the video sources 522 .
- the video data is stored at one or more display resolutions such as 480p, 780p, 1080i, 1080p, and the like.
- the system architecture 1100 includes the video source 522 .
- the video source 522 transmits a live video feed to the remote server system 508 via one or more networks (e.g., the network(s) 162 ).
- the transmission of the video data is continuous as the video data is captured by the camera 118 .
- the transmission of video data is irrespective of the content of the video data, and the video data is uploaded from the video source 522 to the server system 508 for storage irrespective of whether any motion event has been captured in the video data.
- the video data may be stored at a local storage device of the video source 522 by default, and only video portions corresponding to motion event candidates detected in the video stream are uploaded to the server system 508 (e.g., in real-time).
- the video source 522 dynamically determines at what display resolution the video stream is to be uploaded to the server system 508 . In some implementations, the video source 522 dynamically determines which parts of the video stream are to be uploaded to the server system 508 . For example, in some implementations, depending on the current server load and network conditions, the video source 522 optionally prioritizes the uploading of video portions corresponding to newly detected motion event candidates ahead of other portions of the video stream that do not contain any motion event candidates; or the video source 522 uploads the video portions corresponding to newly detected motion event candidates at higher display resolutions than the other portions of the video stream.
- the video source 522 implements two parallel upload connections, one for uploading the continuous video stream captured by the camera 118 , and the other for uploading video portions corresponding to detected motion event candidates. At any given time, the video source 522 determines whether the uploading of the continuous video stream needs to be suspended temporarily to ensure that sufficient bandwidth is given to the uploading of the video segments corresponding to newly detected motion event candidates.
- the video stream uploaded for cloud storage is at a lower quality (e.g., lower resolution, lower frame rate, higher compression, etc.) than the video segments uploaded for motion event processing.
- the video source 522 includes a camera 118 , and an optional controller device.
- the camera 118 includes sufficient on-board processing power to perform all necessary local video processing tasks (e.g., cuepoint detection for motion event candidates, video uploading prioritization, network connection management, etc.), and the camera 118 communicates with the server system 508 directly, without any controller device acting as an intermediary.
- the camera 118 captures the video data and sends the video data to the controller device for the necessary local video processing tasks.
- the controller device optionally performs the local processing tasks for multiple cameras. For example, there may be multiple cameras in one smart home environment (e.g., the smart home environment 100 , FIG.
- a single controller device receives the video data from each camera and processes the video data to detect motion event candidates in the video stream from each camera.
- the controller device is responsible for allocating sufficient outgoing network bandwidth to transmitting video segments containing motion event candidates from each camera to the server before using the remaining bandwidth to transmit the video stream from each camera to the server system 508 .
- the continuous video stream is sent and stored at one server facility while the video segments containing motion event candidates are send to and processed at a different server facility.
- the video data is optionally processed locally at the video source 522 in real-time to determine whether there are any cuepoints in the video data that warrant performance of a more thorough event identification process.
- the video source 522 sends motion event candidate information, such as cuepoint detections, to the server system 508 .
- the video source 522 sends additional metadata, such as the amount of motion between frames, to the server system 508 .
- Cuepoint detection is a first layer motion event identification which is intended to be slightly over-inclusive, such that real motion events are a subset of all identified cuepoints.
- cuepoint detection is based on the number of motion pixels in each frame of the video stream.
- any method of identifying motion pixels in a frame may be used.
- a Gaussian mixture model is optionally used to determine the number of motion pixels in each frame of the video stream.
- a cuepoint is detected when the total number of motion pixels in a current image frame exceeds a predetermined threshold.
- a running sum of total motion pixel count is calculated for a predetermined number of consecutive frames as each new frame is processed, and a cuepoint is detected when the running sum exceeds a predetermined threshold.
- a profile of total motion pixel count over time is obtained.
- a cuepoint is detected when the profile of total motion pixel count for a current frame sequence of a predetermined length (e.g., 30 seconds) meets a predetermined trigger criterion (e.g., total pixel count under the profile>a threshold motion pixel count).
- the cuepoint detection calculations are based on where in the scene the motion occurs. For example, a lower threshold is required for motion occurring in or near a preset zone of interest.
- a higher threshold is required for motion occurring in or near a preset zone that has been denoted as likely containing less significant motion events (e.g., a zone of interest where notifications are disabled).
- cuepoints are suppressed for motion occurring within a zone of interest where notifications are disabled.
- cuepoint detection is based on one or more additional inputs such as audio inputs to an associated microphone.
- a cuepoint may be based at least in-part on the sound of breaking glass and/or a human voice.
- the beginning of a cuepoint is the time when the total motion pixel count meets a predetermined threshold (e.g., 50 motion pixels).
- a predetermined threshold e.g. 50 motion pixels.
- the start of the motion event candidate corresponding to a cuepoint is the beginning of the cuepoint.
- the start of the motion event candidate is a predetermined lead time (e.g., 5 seconds) before the beginning of the cuepoint.
- the start of a motion event candidate is used to process a video portion corresponding to the motion event candidate for a more thorough event identification process.
- the thresholds for detecting cuepoints are adjusted over time based on performance feedback. For example, if too many false positives are detected, the threshold for motion pixel count is optionally increased. If too many motion events are missed, the threshold for motion pixel count is optionally decreased. In some implementations, the thresholds for detecting cuepoints are based on where in the scene the motion is detected. In some implementations, the thresholds are based on whether the motion is detected within a particular zone of interest. In some implementations, the threshold are set and/or adjusted by users (e.g., a user of client device 504 , FIG. 5 ). For example, a threshold is adjusted by adjusting a corresponding motion sensitivity slider within a user interface.
- the profile is smoothed to remove short dips in total motion pixel count.
- momentary stops or slowing downs may occur during the motion, and such momentary stops or slowing downs are reflected as short dips in the profile of total motion pixel count. Removing these short dips from the profile helps to provide a more accurate measure of the extent of motion for cuepoint detection. Since cuepoint detection is intended to be slightly over-inclusive, by smoothing out the motion pixel profile, cuepoints for motion events that contain momentary stops or slowing downs of the moving objects would less likely be missed by the cuepoint detection.
- a change in camera state may change pixel values in the image frames drastically even though no motion has occurred in the scene captured in the video stream.
- each camera state change is noted in the cuepoint detection process, and a detected cuepoint is optionally suppressed if its occurrence overlaps with one of the predetermined camera state changes.
- the total motion pixel count in each frame is weighed differently if accompanied with a camera state change. For example, the total motion pixel count is optionally adjusted by a fraction (e.g., 10 %) if it is accompanied by a camera state change, such as an IR mode switch.
- the motion pixel profile is reset after each camera state change.
- a fast initial increase in total motion pixel count may indicate a global scene change or a lighting change, e.g., when the curtain is drawn, or when the camera is pointed in a different direction or moved to a different location by a user.
- a detected cuepoint is optionally suppressed.
- the suppressed cuepoint undergoes an edge case recovery process to determine whether the cuepoint is in fact not due to lighting change or camera movement, but rather a valid motion event candidate that needs to be recovered and reported for subsequent event processing.
- the profile of motion pixel count is reset when such fast initial increase in total motion pixel count is detected and a corresponding cuepoint is suppressed.
- a cuepoint is evaluated based on an importance score associated with the cuepoint.
- the importance score is generated based on factors such as whether one or more zones of interest are involved, the amount of motion detected, the type of motion detected (e.g., velocity, angle, etc.), and the like.
- the cuepoint is associated with motion occurring within a zone of interest where notifications are disabled, the importance score is decreased.
- the cuepoint is associated with motion occurring in a zone of interest where notifications are enabled, the importance score is increased.
- the cuepoint detection generally occurs at the video source 522 , and immediately after a cuepoint is detected in the live video stream, the video source 522 sends an event alert to the server system 508 to trigger the subsequent event processing.
- the video source 522 includes a video camera with very limited on-board processing power and no controller device, and the cuepoint detection described herein is performed by the server system 508 on the continuous video stream transmitted from the camera to the server system 508 .
- the video source 522 sends additional video source information 1103 to the server system 508 .
- This additional video source information 1103 may include information regarding a camera state (e.g., IR mode, AE mode, DTPZ settings, etc.) and/or information regarding the environment in which the video source 522 is located (e.g., indoors, outdoors, night-time, day-time, etc.).
- the video source information 1103 is used by the server system 508 to perform cuepoint detection and/or to categorize motion event candidates within the video stream 1104 .
- the video portion after the detected cuepoint is divided into multiple segments, as shown in FIG. 11F .
- the segmentation continues until motion end information (sometimes also called an “end-of-motion signal”) is obtained.
- the segmentation occurs within the server system 508 (e.g., by the event processor module 7146 ).
- each of the multiple segments is of the same or similar duration (e.g., each segment has a 10-12 second duration).
- the first segment has a shorter duration than the subsequent segments. Keeping the first segment short allows for real time initial categorization and alerts based on processing the first segment. The initial categorization may then be revised based on processing of subsequent segments.
- a new segment is generated if the motion entity enters a new zone of interest.
- the motion end information is based on a change in the motion detected within the video stream.
- the motion end information is, optionally, generated when the amount of motion detected within the video stream falls below a threshold amount or declines steeply.
- the motion end information is generated by the video source 522 , while in other implementations, the motion end information is generated by the server system 508 (e.g., the event processor module 7146 ).
- the motion end information is generated based on a particular amount of time passing since the motion start information was generated (e.g., a time-out event).
- motion end information may be generated for a particular motion event candidate if either the amount of motion meets predetermined criterion (e.g., 1%, 5%, or 15% of the pixels in the scene) or the duration of the motion event candidate meets predetermined criterion (e.g., 30, 60, or 120 seconds), whichever occurs first.
- predetermined criterion e.g., 1%, 5%, or 15% of the pixels in the scene
- predetermined criterion e.g., 30, 60, or 120 seconds
- the video stream is captured ( 1113 ) and the motion start information corresponding to a motion event candidate is obtained ( 1114 ).
- the video stream is segmented ( 1115 ) as discussed above.
- each segment is processed and categorized ( 1116 ). As will be discussed in greater detail below, this processing includes obtaining information about the background in the scene (e.g., background factors) ( 11161 ), identifying motion entities ( 11162 ), and obtaining motion vectors ( 11163 ).
- the processing also includes identifying additional features of each motion entity (motion entity features), such as the amount of a particular color within the motion entity and/or the height-to-width ratio of the motion entity ( 11164 ).
- identifying motion entities includes performing object and/or entity recognition on the motion entities.
- the motion features include information regarding what, if any, zones of interest were involved with the motion entity.
- the processing also includes identifying additional features of the scene, such as the ratio of particular colors within the scene, audio information corresponding to the scene, and/or the total amount of motion within the scene ( 11165 ).
- the scene features include information regarding zones of interest within the scene.
- the background factors, motion entities, motion vectors, and any additional motion entity and/or scene features are aggregated to generate resulting motion features ( 11166 ).
- the resulting motion features are categorized and a category is assigned to the motion event candidate ( 11167 ).
- a log entry is generated for the motion event candidate ( 11168 ), and the assigned category is stored within.
- an alert is generated and sent to the client device 504 ( 11169 ).
- the final segment is processed and categorized ( 1116 ).
- multi-segment features are processed ( 1118 ).
- multi-segment features optionally include features generated by comparing motion event categories, event masks, motion entity features, and the like from the various segments comprising the event. For example, motion event masks for individual segments are combined to form a single motion event mask across all segments.
- an event category is assigned based on the multi-segment features ( 1119 ).
- the event category is assigned based on the multi-segment features and the categories assigned to the individual segments.
- the event log corresponding to the motion event candidate is updated ( 1120 ).
- an alert is generated based on the event category ( 1121 ).
- the alert is based on a confidence level for the event category.
- a video portion corresponding to the motion event candidate, or a particular segment within the video portion is used to identify a motion track of a motion entity in the video segment.
- the identification of motion track is optionally performed locally at the video source 522 or remotely at the server system 508 .
- motion track information is included in the motion event candidate information 1102 sent from the video source 522 to the server system 508 .
- the identification of the motion track based on a video segment corresponding to a motion event candidate is performed at the server system 508 by an event processor module.
- the event processor module receives an alert for a cuepoint detected in the video stream, and retrieves the video portion corresponding to the cuepoint from cloud storage (e.g., the video data database 1106 , FIG. 11A ) or from the video source 522 .
- the video portion used to identify the motion track may be of higher quality than the video uploaded for cloud storage, and the video portion is retrieved from the video source 522 separately from the continuous video feed uploaded from the video source 522 .
- the event processor module 7146 obtains background factors and performs motion entity detection identification, motion vector generation for each motion entity, and feature identification. Once the event processor module 7146 completes these tasks, the event categorizer module 7148 aggregates all of the information and generates a categorization for the motion event candidate. In some implementations, false positive suppression is optionally performed to reject some motion event candidates before the motion event candidates are submitted for event categorization. In some implementations, determining whether a motion event candidate is a false positive includes determining whether the motion event candidate occurred in a particular zone. In some implementations, determining whether a motion event candidate is a false positive includes analyzing an importance score for the motion event candidate.
- the importance score for the motion event candidate is optionally the same as the importance score for the corresponding cuepoint, or incorporates the importance score for the corresponding cuepoint.
- the importance score for a motion event candidate is optionally based on zones of interest involved with the motion event candidate, background features, motion vectors, scene features, entity features, motion features, motion tracks, and the like.
- the video source 522 has sufficient processing capabilities to perform, and does perform, the background estimation, motion entity identification, the motion vector generation, and/or the feature identification.
- the motion vector representing a motion event candidate is a simple two-dimensional linear vector defined by a start coordinate and an end coordinate of a motion entity (also sometimes called a “motion object”) in a scene depicted in the video portion, and the motion event categorization is based on the motion vector.
- a motion vector for a motion event candidate is independently generated for each segment.
- a single motion vector is used for all segments and the motion vector is revised as each segment is processed.
- simplifying the representative motion vector and off-loading the motion vector generation from the event processor module of the video server system 508 to the video source 522 can help to realize the real-time event categorization and alert generation for many video sources in parallel.
- track lengths for the motion tracks are determined.
- the track lengths are independently determined for each segment.
- the track lengths are revised as each subsequent segment is processed.
- “short tracks” with track lengths smaller than a predetermined threshold e.g., 8 frames are suppressed, as they are likely due to trivial movements, such as leaves shifting in the wind, water shimmering in the pond, etc.
- pairs of short tracks that are roughly opposite in direction are suppressed as “noisy tracks.”
- the cuepoint is determined to be a false positive, and no motion event candidate is sent to the event categorizer for event categorization.
- the motion event candidate is categorized as a non-event. If at least one motion track remains after the false positive suppression is performed, a motion vector is generated for each remaining motion track. In other words, multiple motion entities may be identified within a particular video segment.
- the false positive suppression occurring after the cuepoint detection and before the motion vector generation is the second layer false positive suppression, which removes false positives based on the characteristics of the motion tracks.
- motion entity identification is performed by subtracting the estimated background from each frame of the video segment.
- a foreground motion mask is then obtained by masking all pixel locations that have no motion pixels.
- the background factors obtained by the event processor module include a foreground motion mask.
- An example of a motion mask is shown in FIG. 11C -(a). The example motion mask shows the motion pixels in one frame of the video segment in white, and the rest of the pixels in black.
- the motion track is used to generate a two-dimensional linear motion vector which only takes into account the beginning and end locations of the motion track (e.g., as shown by the dotted arrow in FIG. 11C -(b)).
- the beginning and end locations are determined on a per segment basis.
- the beginning location is determined based on the first segment and the end location is determined based on the last segment.
- the motion vector is a non-linear motion vector that traces the entire motion track from the first frame to the last frame of the frame sequence in which the motion entity has moved.
- the motion masks corresponding to each motion entity detected in the video segment are aggregated across all frames of the video segment to create an event mask for the motion event involving the motion entity.
- an event mask is created for each individual segment.
- an event mask is created from a first segment and is updated as subsequent segments are processed. As shown in FIG. 11C -(b), in the event mask, all pixel locations containing motion pixels in less than a threshold number of frames (and/or less than a threshold fraction of frames) are masked and shown in black, while all pixel locations containing motion pixels in at least the threshold number of frames (and/or at least a threshold fraction of frames) are shown in white.
- the active portion of the event mask indicates all areas in the scene depicted in the video segment that have been accessed by the motion entity during its movement in the scene.
- the event mask for each motion event is stored at the server system 508 or a component thereof (e.g., the event information database 7166 , FIG. 7A ), and used to selectively retrieve motion events that enter or touch a particular zone of interest within the scene depicted in the video stream of a camera.
- the event masks for previous event candidates are retrieved and compared to the new zone of interest to generate and/or re-categorize events.
- a motion mask is created based on an aggregation of motion pixels from a short frame sequence in the video segment.
- the pixel count at each pixel location in the motion mask is the sum of the motion pixel count at that pixel location from all frames in the short frame sequence. All pixel locations in the motion mask with less than a threshold number of motion pixels (e.g., motion pixel count > 4 for 10 consecutive frames) are masked. Thus, the unmasked portions of the motion mask for each such short frame sequence indicates a dominant motion region for the short frame sequence.
- a motion track is optionally created based on the path taken by the dominant motion regions identified from a series of consecutive short frame sequences.
- an event mask is optionally generated by aggregating all motion pixels from all frames of the video segment at each pixel location, and masking all pixel locations that have less than a threshold number of motion pixels.
- the event mask generated this way is no longer a binary event mask, but is a two-dimensional histogram.
- the height of the histogram at each pixel location is the sum of the number of frames that contain a motion pixel at that pixel location.
- This type of non-binary event mask is also referred to as a motion energy map, and illustrates the regions of the video scene that are most active during a motion event.
- the characteristics of the motion energy maps for different types of motion events are optionally used to differentiate them from one another.
- the motion energy map of a motion event candidate is vectorized to generate the representative motion vector for use in event categorization.
- the motion energy map of a motion event is generated and cached by the video server system and used for real-time zone monitoring and/or retroactive event identification for newly created zones of interest.
- a live event mask is generated based on the motion masks of frames that have been processed, and is continuously updated until all frames (or segments) of the motion event have been processed.
- the live event mask of a motion event in progress is used to determine if the motion event is an event of interest for a particular zone of interest.
- the server system 508 After the server system 508 obtains the representative motion vector for a new motion event candidate (e.g., either by generating the motion vector from the video segment corresponding to a newly detected cuepoint, or by receiving the motion vector from the video source 522 ), the server system 508 proceeds to categorize the motion event candidate based at least in part on its representative motion vector.
- the categorization of motion events is performed by training a categorizer and/or a categorization model based on a training data set containing motion vectors corresponding to various known event categories.
- known event categories may include: a person running, a person jumping, a person walking, a dog running, a bird flying, a car passing by, a door opening, a door closing, leaves rustling, etc.).
- the common characteristics of each known event category that distinguish the motion events of the event category from motion events of other event categories are extracted through the training.
- the event categorizer module 7148 examines the new motion vector in light of the common characteristics of each known event category (e.g., based on a Euclidean distance between the new motion vector and a canonical vector representing each known event type), and determines the most likely event category for the new motion vector from among the known event categories.
- motion event categorization based on pre-established motion event categories is an acceptable way to categorize motion events
- this categorization technique may only be suitable for use when the variety of motion events handled by the server system 508 is relatively few in number and already known before any motion event is processed.
- the server system 508 serves a large number of clients with cameras used in many different environmental settings, resulting in motion events of many different types.
- each reviewer may be interested in different types of motion events, and may not know what types of events they would be interested in before certain real world events have happened (e.g., some object has gone missing in a monitored location).
- it is desirable to have an event categorization technique that can handle any number of event categories based on actual camera use, and automatically adjust (e.g., create and retire) event categories through machine learning based on the actual video data that is received over time.
- the categorization of motion events is based at least in part on a density-based clustering technique (e.g., DBscan) that forms clusters based on density distributions of motion events (e.g., motion events as represented by their respective motion vectors) in a vector event space.
- a density-based clustering technique e.g., DBscan
- regions with sufficiently high densities of motion vectors are promoted as recognized vector categories, and all motion vectors within each promoted region are deemed to belong to a respective recognized vector category associated with that promoted region.
- regions that are not sufficiently dense are not promoted or recognized as vector categories. Instead, such non-promoted regions are collectively associated with a category for unrecognized vector, and all motion vectors within such non-promoted regions are optionally deemed to be unrecognized motion events at the present time.
- the event categorizer places the new motion vector into the vector event space according to its value. If the new motion vector is sufficiently close to or falls within an existing dense cluster, the vector category associated with the dense cluster is assigned to the new motion vector. If the new motion vector is not sufficiently close to any existing cluster, the new motion vector forms its own cluster of one member, and is assigned to the category of unrecognized events. If the new motion vector is sufficiently close to or falls within an existing sparse cluster, the cluster is updated with the addition of the new motion vector. If the updated cluster is now a dense cluster, the updated cluster is promoted, and all motion vectors (including the new motion vector) in the updated cluster are assigned to a new vector category created for the updated cluster.
- clusters that have not been updated for at least a threshold expiration period are retired. The retirement of old static clusters helps to remove residual effects of motion events that are no longer valid, for example, due to relocation of the camera that resulted in a scene change.
- FIG. 11D illustrates an example process for the event categorizer of the server system 508 to (1) gradually learn new vector categories based on received motion events, (2) assign newly received motion vector to recognized vector categories or an unrecognized vector category, and (3) gradually adapt the recognized vector categories to the more recent motion events by retiring old static clusters and associated vector categories, if any.
- the example process is provided in the context of a density-based clustering algorithm (e.g., sequential DBscan).
- a person skilled in the art will recognize that other clustering algorithms that allow growth of clusters based on new vector inputs can also be used in various implementations.
- sequential DBscan allows growth of a cluster based on density reachability and density connectedness.
- a point q is directly density-reachable from a point p if it is not farther away than a given distance ⁇ (i.e., is part of its ⁇ -neighborhood) and ifp is surrounded by sufficiently many points M such that one may considerp and q to be part of a cluster.
- a cluster is defined by two properties: (1) all points within the cluster are mutually density-connected, and (2) if a point is density-reachable from any point of the cluster, it is part of the cluster as well.
- the clusters formed based on density connectedness and density reachability can have all shapes and sizes, in other words, motion event candidates from a video source (e.g., as represented by motion vectors in a dataset) can fall into non-linearly separable clusters based on this density-based clustering algorithm, when they cannot be adequately clustered by K-means or Gaussian Mixture EM clustering techniques.
- the values of ⁇ and M are adjusted by the server system 508 for each video source and/or video stream, such that clustering quality can be improved for different camera usage settings.
- the four parameters are stored and sequentially updated for each cluster.
- the four parameters include: (1) cluster creation time, (2) cluster weight, (3) cluster center, and (4) cluster radius.
- the creation time for a given cluster records the time when the given cluster was created.
- the cluster weight for a given cluster records a member count for the cluster.
- a decay rate is associated with the member count parameter, such that the cluster weight decays over time if an insufficient number of new members are added to the cluster during that time. This decaying cluster weight parameter helps to automatically fade out old static clusters that are no longer valid.
- the cluster center of a given cluster is the weighted average of points in the given cluster.
- the cluster radius of a given cluster is the weighted spread of points in the given cluster (analogous to a weighted variance of the cluster). It is defined that clusters have a maximum radius of ⁇ /2.
- a cluster is considered to be a dense cluster when it contains at least M/2 points.
- FIG. 11D -(a) shows the early state of the event vector space 1124 .
- two motion vectors e.g., represented as two points
- Each motion vector forms its own cluster (e.g., c 1 and c 2 , respectively) in the event space 1124 .
- the respective creation time, cluster weight, cluster center, and cluster radius for each of the two clusters are recorded.
- no recognized vector category exists in the event space, and the motion events represented by the two motion vectors are assigned to the category of unrecognized vectors.
- the event indicators of the two events indicate that they are unrecognized events on the event timeline, for example, in the manner shown in FIG. 13A , discussed below.
- a new motion vector is received and placed in the event space 1124 at time t 2 .
- the new motion vector is density-reachable from the existing point in cluster c 2 and thus falls within the existing cluster c 2 .
- the cluster center, cluster weight, and cluster radius of cluster c 2 are updated based on the entry of the new motion vector.
- the new motion vector is also assigned to the category of unrecognized vectors.
- the event indicator of the new motion event is added to the event timeline in real-time, and has the appearance associated with the category for unrecognized events.
- FIG. 11D -(c) illustrates that, at time t 3 , two new clusters c 3 and c 4 have been established and grown in size (e.g., cluster weight and radius) based on a number of new motion vectors received during the time interval between t 2 and t 3 .
- size e.g., cluster weight and radius
- the cluster weights for clusters c 1 and c 2 have decayed gradually due to the lack of new members during this period of time. Up to this point, no recognized vector category has been established, and all motion events are assigned to the category of unrecognized vectors.
- the event indicators of the motion events have an appearance associated with the category for unrecognized events (e.g., as the event indicator 1322 B shows in FIG. 13A ).
- the event indicators of the motion events each time a new motion event is added to the event space 1124 , a corresponding event indicator for the new event is added to the timeline associated with the present video source.
- FIG. 11D -(d) illustrates that, at time t 4 , another new motion vector has been added to the event space 1124 , and the new motion vector falls within the existing cluster c 3 .
- the cluster center, cluster weight, and cluster radius of cluster c 3 are updated based on the addition of the new motion vector, and the updated cluster c 3 has become a dense cluster based on a predetermined density requirement (e.g., a cluster is considered dense when it contains at least M/2 points).
- a predetermined density requirement e.g., a cluster is considered dense when it contains at least M/2 points.
- the previously unrecognized events in cluster C 3 are now recognized events of the new vector category.
- the event categorizer notifies the user-facing frontend of the video server system 508 about a corresponding new event category.
- the user-facing frontend determines whether a reviewer interface for the video stream corresponding to the event space 1124 is currently displayed on a client device 504 . If a reviewer interface is currently displayed, the user-facing frontend causes the client device 504 to retroactively modify the display characteristics of the event indicators for the motion events in cluster C 3 to reflect the newly established vector category in the review interface.
- the user-facing frontend will cause the event indicators for the motion events previously within cluster c 3 (and now in cluster C 3 ) to take on a color assigned to the new event category).
- the event indicator of the new motion event will also take on the color assigned to the new event category. This is illustrated in the review interface 1308 in FIG. 13A by the striping of the event indicators 1322 F, 1322 H, 1322 J, 1322 K, and 1322 L to reflect the established event category (supposing that cluster C 3 corresponds to Event Cat. B here).
- FIG. 11D -(e) illustrates that, at time t 5 , two new motion vectors have been received in the interval between t 4 and t 5 .
- One of the two new motion vectors falls within the existing dense cluster C 3 , and is associated with the recognized vector category of cluster C 3 .
- the event categorizer notifies the user-facing frontend regarding the event categorization result. Consequently, the event indicator of the motion event represented by the newly categorized motion vector is given the appearance associated with the recognized event category of cluster C 3 .
- a pop-up notification for the newly recognized motion event is presented over the timeline associated with the event space.
- FIG. 11D -(e) further illustrates that, at time t 5 , one of the two new motion vectors is density reachable from both of the existing clusters c 1 and c 5 , and thus qualifies as a member for both clusters.
- the arrival of this new motion vector halts the gradual decay in cluster weight that cluster c 1 that has sustained since time t i .
- the arrival of the new motion vector also causes the existing clusters c 1 and c 5 to become density-connected, and as a result, to merge into a larger cluster c 5 .
- the cluster center, cluster weight, cluster radius, and optionally the creation time for cluster c 5 are updated accordingly.
- cluster c 2 remains unchanged, and its cluster weight decays further over time.
- FIG. 11D -(f) illustrates that, at time t 6 , the weight of the existing cluster c 2 has reached below a threshold weight, and is thus deleted from the event space 1124 as a whole.
- the pruning of inactive sparse clusters allows the event space to remain fairly noise-free and keeps the clusters easily separable.
- the motion events represented by the motion vectors in the deleted sparse clusters e.g., cluster c 2
- the motion events represented by the motion vectors in the deleted sparse clusters are kept in the timeline and given a new appearance associated with a category for trivial or uncommon events.
- the motion events represented by the motion vectors in the deleted sparse cluster are optionally gathered and presented to the user or an administrator to determine whether they should be removed from the event space and the event timeline.
- FIG. 11D -(f) further illustrates that, at time t 6 , a new motion vector is assigned to the existing cluster c 5 , which causes the cluster weight, cluster radius, and cluster center of cluster c 5 to be updated accordingly.
- the updated cluster c 5 now reaches the threshold for qualifying as a dense cluster, and is thus promoted to a dense cluster status (and relabeled as cluster C 5 ).
- a new vector category is created for cluster C 5 . All motion vectors in cluster C 5 (which were previously in clusters c 1 and c 4 ) are removed from the category for unrecognized motion events, and assigned to the newly created vector category for cluster C 5 .
- the creation of the new category and the retroactive appearance change for the event indicators of the motion events in the new category are reflected in the reviewer interface, and optionally notified to the reviewer.
- FIG. 11D -(g) illustrates that, at time t 7 , cluster C 5 continues to grow with some of the subsequently received motion vectors. A new cluster c 6 has been created and has grown with some of the subsequently received motion vectors. Cluster C 3 has not seen any growth since time t 5 , and its cluster weight has gradually decayed over time.
- FIG. 11D -(h) shows that, at a later time t 8 , dense cluster C 3 is retired (deleted from the event space 1124 ) when its cluster weight has fallen below a predetermined cluster retirement threshold.
- motion events represented by the motion vectors within the retired cluster C 3 are removed from the event timeline for the corresponding video source.
- the motion events represented by the motion vectors as well as the retired event category associated with the retired cluster C 3 are stored as obsolete motion events, apart from the other more current motion events.
- the video data and motion event data for obsolete events are optionally compressed and archived, and require a recall process to reload into the timeline.
- the event categorizer 7148 when an event category is retired, notifies the user-facing frontend 7150 to remove the event indicators for the motion events in the retired event category from the timeline.
- the motion events in the retired category when a vector category is retired, are assigned to a category for retired events and their event indicators are retroactively given the appearance associated with the category for retired events in the timeline.
- FIG. 11D -(h) further illustrates that, at time t 8 , cluster c 6 has grown substantially, and has been promoted as a dense cluster (relabeled as cluster C 6 ) and given its own vector category.
- cluster C 6 cluster C 6
- FIG. 11D -(h) further illustrates that, at time t 8 , cluster c 6 has grown substantially, and has been promoted as a dense cluster (relabeled as cluster C 6 ) and given its own vector category.
- cluster C 6 dense cluster
- FIG. 11D -(h) further illustrates that, at time t 8 , cluster c 6 has grown substantially, and has been promoted as a dense cluster (relabeled as cluster C 6 ) and given its own vector category.
- the categorization of each segment is based in part on the event categories associated with each motion vector within the segment. For example, the event categories associated with each motion vector are aggregated with other factors/features to generate motion features ( 11166 ) for a segment. In some implementations, the categorization of the motion event ( 1119 ) is based in part on the event categories associated with each motion vector.
- the creation of a new category causes real-time changes in the review interface provided to a client device 504 associated with the video source 522 .
- motion events are first represented as uncategorized motion events, and as each vector category is created over time, the characteristics of event indicators for past motion events in that vector category are changed to reflect the newly recognized vector category. Subsequent motion events falling within the recognized categories also have event indicators showing their respective categories.
- the currently recognized categories are optionally presented in the review interface for user selection as event filters. The user may choose any subset of the currently known categories (e.g., each recognized event categories and respective categories for trivial events, rare events, obsolete events, and unrecognized events) to selectively view or receive notifications for motion events within the subset of categories.
- a user may review past motion events and their categories on the event timeline.
- the user is allowed to edit the event category assignments 1109 , for example, by removing one or more past motion events from a known event category.
- the user-facing frontend notifies the event categorizer of the edits.
- the event categorizer removes the motion vectors of the removed motion events from the cluster corresponding to the event category, and re-computes the cluster parameters (e.g., cluster weight, cluster center, and cluster radius).
- the removal of motion events from a recognized cluster optionally causes other motion events that are similar to the removed motion events to be removed from the recognized cluster as well.
- manual removal of one or more motion events from a recognized category may cause one or more motion events to be added to event category due to the change in cluster center and cluster radius.
- the event category models are stored in the event category models database 1108 ( FIG. 11A ), and is retrieved and updated in accordance with the user edits.
- one event category model is established for one camera.
- a composite model based on the motion events from multiple related cameras e.g., cameras reported to serve a similar purpose, or have a similar scene, etc.
- the timeline for one camera may show event categories discovered based on motion events in the video streams of its related cameras, even though no event for such categories have been seen in the camera's own video stream.
- event data and event masks of past motion events are stored in the event data and event mask database 1110 ( FIG. 11A ).
- the client device 504 receives user input to select one or more filters to selectively review past motion events, and selectively receive event alerts for future motion events.
- the client device 504 passes the user selected filter(s) to the user-facing frontend 7150 , and the user-facing frontend retrieves the events of interest based on the information in the event data and event mask database 1110 .
- the selectable filters include one or more recognized event categories, and optionally any of the categories for unrecognized motion events, rare events, and/or obsolete events.
- the user-facing frontend retrieves all past motion events associated with the selected event category, and present them to the user (e.g., on the timeline, or in an ordered list shown in a review interface).
- the past motion events associated with the selected event category e.g., Event Cat. B
- the past motion events associated with the unselected event category e.g., Event Cat. A
- the past motion events associated with the selected event categories e.g., Event Cat. B
- motion events in the unselected event categories e.g., Event Cat. A
- the selectable filters in addition to event categories, other types of event filters can also be selected individually or combined with selected event categories.
- the selectable filters also include a human filter, which can be one or more characteristics associated with events involving a human being.
- the one or more characteristics that can be used as a human filter include a characteristic shape (e.g., aspect ratio, size, shape, and the like) of the motion entity, audio comprising human speech, motion entities having human facial characteristics, etc.
- the selectable filters also include a filter based on similarity. For example, the user can select one or more example motion events, and be presented one or more other past motion events that are similar to the selected example motion events.
- the aspect of similarity is optionally specified by the user.
- the user may select “color content,” “number of moving objects in the scene,” “shape and/or size of motion entity,” and/or “length of motion track,” etc, as the aspect(s) by which similarity between two motion events are measured.
- the user may choose to combine two or more filters and be shown the motion events that satisfy all of the filters combined.
- the user may choose multiple filters that will act separately, and be shown the motion events that satisfy at least one of the selected filters.
- the user may be interested in past motion events that have occurred within a zone of interest.
- the zone of interest can also be used as an event filter to retrieve past events and generate notifications for new events.
- the user may define one or more zones of interest in a scene depicted in the video stream.
- the zone of interest may enclose an object, for example, a chair, a door, a window, or a shelf, located in the scene. Once a zone of interest is created, it is included as one of the selectable filters for selectively reviewing past motion events that had entered or touched the zone.
- the user may also choose to receive alerts for future events that enter a zone of interest, for example, by selecting an alert affordance associated with zone.
- the server system 508 receives the definitions of zones of interest from the client device 504 , and stores the zones of interest in association with the reviewer account currently active on the client device 504 .
- the user-facing frontend searches the event data database 1110 ( FIG. 11A ) to retrieve all past events that have motion entity(s) within the selected zone of interest. This retrospective search of event of interest can be performed irrespective of whether the zone of interest had existed before the occurrence of the retrieved past event(s).
- the user does not need to know where in the scene he/she may be interested in monitoring before hand, and can retroactively query the event database to retrieve past motion events based on a newly created zone of interest.
- the scene There is no requirement for the scene to be divided into predefined zones first, and past events be tagged with the zones in which they occur when the past events were first processed and stored.
- the retrospective zone search based on newly created or selected zones of interest is implemented through a regular database query where the relevant features of each past event (e.g., which regions the motion entity had entered during the motion event) are determined on the fly, and compared to the zones of interest.
- the server optionally defines a few default zones of interest (e.g., eight (2 ⁇ 4) predefined rectangular sectors within the scene), and each past event is optionally tagged with the particular default zones of interest that the motion entity has entered.
- the user can merely select one or more of the default zones of interest to retrieve the past events that touched or entered the selected default zones of interest.
- event masks each recording the extent of a motion region accessed by a motion entity during a given motion event are stored in the event data and event masks database 1110 ( FIG. 11A ).
- the event masks provide a faster and more efficient way of retrieving past motion events that have touched or entered a newly created zone of interest.
- the scene of the video stream is divided into a grid, and the event mask of each motion event is recorded as an array of flags that indicates whether motion had occurred within each grid location during the motion event.
- the zone of interest includes at least one of the grid location at which motion has occurred during the motion event
- the motion event is deemed to be relevant to the zone of interest and is retrieved for presentation.
- the user-facing frontend imposes a minimum threshold on the number of grid locations that have seen motion during the motion event, in order to retrieve motion events that have at least the minimum number of grid locations that included motion. In other words, if the motion region of a motion event barely touched the zone of interest, it may not be retrieved for failing to meet the minimum threshold on grid locations that have seen motion during the motion event.
- an overlap factor is determined for the event mask of each past motion event and a selected zone of interest, and if the overlapping factor exceeds a predetermined overlap threshold, the motion event is deemed to be a relevant motion event for the selected zone of interest.
- the overlap factor is a simple sum of all overlapping grid locations or pixel locations. In some implementations, more weight is given to the central region of the zone of interest than the peripheral region of the zone of interest during calculation of the overlap factor.
- the event mask is a motion energy mask that stores the histogram of pixel count at each pixel location within the event mask. In some implementations, the overlap factor is weighted by the pixel count at the pixel locations that the motion energy map overlaps with the zone of interest.
- the retrospective search for motion events that are relevant to a newly created zone of interest can be performed relatively quickly, and makes the user experience for reviewing the events-of-interest more seamless.
- Creation of a new zone of interest, or selecting a zone of interest to retrieve past motion events that are not previously associated with the zone of interest provides many usage possibilities, and greatly expands the utility of stored motion events.
- motion event data e.g., event categories, event masks
- wasteful storage of extra metadata tags may be avoided in some implementations.
- the filters can be used for not only past motion events, but also new motion events that have just occurred or are still in progress. For example, when the video data of a detected motion event candidate is processed, a live motion mask is created and updated based on each frame of the motion event as the frame is received by the server system 508 . In other words, after the live event mask is generated, it is updated as each new frame of the motion event is processed. In some implementations, the live event mask is compared to the zone of interest on the fly, and as soon as a sufficient overlap factor is accumulated, an alert is generated, and the motion event is identified as an event of interest for the zone of interest.
- an alert is presented on the review interface (e.g., as a pop-up) as the motion event is detected and categorized, and the real-time alert optionally is formatted to indicate its associated zone of interest. This provides real-time monitoring of the zone of interest in some implementations.
- the event mask of the motion event is generated after the motion event is completed, and the determination of the overlap factor is based on a comparison of the completed event mask and the zone of interest. Since the generation of the event mask is substantially in real-time, real-time monitoring of the zone of interest may also be realized this way in some implementations.
- the event mask of a new and/or old motion event is compared to each of the selected zones of interest. For a new motion event, if the overlap factor for any of the selected zones of interest exceeds the overlap threshold, an alert is generated for the new motion event as an event of interest associated with the zone(s) that are triggered. For a previously stored motion event, if the overlap factor for any of the selected zones of interest exceeds the overlap threshold, the stored motion event is retrieved and presented to the user as an event of interest associated with the zone(s) that are triggered.
- a motion entity in a motion event may enter different zones at different times during the motion event.
- a single alert e.g., a pop-up notification over the timeline
- the alert can be optionally updated to indicate the additional zones that are triggered when the live event mask touches those zones at later times during the motion event.
- one alert is generated for each zone of interest when the live event mask of the motion event touches the zone of interest.
- FIG. 11E illustrates an example process by which respective overlapping factors are calculated for a motion event and several zones of interest.
- the zones of interest may be defined after the motion event has occurred and the event mask of the motion event has been stored, such as in the scenario of retrospective zone search.
- the zones of interest may also be defined before the motion event has occurred in the context of zone monitoring.
- zone monitoring can rely on a live event mask that is being updated as the motion event is in progress.
- zone monitoring relies on a completed event mask that is formed immediately after the motion event is completed.
- motion masks 1125 for a frame sequence of a motion event are generated as the motion event is processed for motion vector generation. Based on the motion masks 1125 of the frames, an event mask 1126 is created.
- the creation of an event mask based on motion masks has been discussed earlier with respect to FIG. 11C , and is not repeated herein.
- the motion masks 1125 shown in FIG. 11E are all the motion masks of a past motion event, thus, the event mask 1126 is a complete event mask stored for the motion event.
- the event mask After the event mask has been stored, when a new zone of interest (e.g., Zone B among the selected zones of interest 1127 ) is created later, the event mask 1126 is compared to Zone B, and an overlap factor between the event mask 1126 and Zone B is determined.
- Overlap B (within Overlap 1128 ) is detected between the event mask 1126 and Zone B, and an overlap factor based on Overlap B also exceeds an overlap threshold for qualifying the motion event as an event of interest for Zone B.
- the motion event will be selectively retrieved and presented to the reviewer, when the reviewer selects Zone B as a zone of interest for a present review session.
- a zone of interest is created and selected for zone monitoring.
- an event mask is created in real-time for the new motion event and the event mask is compared to the selected zone of interest. For example, if Zone B is selected for zone monitoring, when the Overlap B is detected, an alert associated with Zone B is generated and sent to the reviewer in real-time.
- the live event mask when a live event mask is used for zone monitoring, the live event mask is updated with the motion mask of each new frame of a new motion event that has just been processed.
- the live motion mask is compared to the selected zone(s) of interest 1127 at different times (e.g., every 5 frames) during the motion event to determine the overlap factor for each of the zones of interest. For example, if all of zones A, B, and C are selected for zone monitoring, at several times during the new motion event, the live event mask is compared to the selected zones of interest 1127 to determine their corresponding overlap factors. In this example, eventually, two overlap regions are found: Overlap A is an overlap between the event mask 1126 and Zone A, and Overlap B is an overlap between the event mask 1126 and Zone B.
- the motion event is identified as an event of interest for both Zone A and Zone B, but not for Zone C.
- alerts will be generated for the motion event for both Zone A and Zone B.
- the live event mask is compared to the selected zones as the motion mask of each frame is added to the live event mask, Overlap A will be detected before Overlap B, and the alert for Zone A will be triggered before the alert for Zone B.
- the motion event is detected and categorized independently of the existence of the zones of interest.
- the importance score for a motion event is based on the involvement of zones of interest.
- the importance score for a motion event is recalculated when new zones are obtained and/or activated.
- the zone monitoring does not rely on raw image information within the selected zones; instead, the zone monitoring can take into account the raw image information from the entire scene. Specifically, the motion information during the entire motion event, rather than the motion information confined within the selected zone, is abstracted into an event mask, before the event mask is used to determine whether the motion event is an event of interest for the selected zone. In other words, the context of the motion within the selected zones is preserved, and the event category of the motion event can be provided to the user to provide more meaning to the zone monitoring results.
- FIG. 11F shows an event being segmented and processed in accordance with some implementations.
- each segment is processed by server system 508 ( FIG. 11A ).
- motion start information for Event 1 1130 is obtained and an initial segment 1131 , denoted as Slice 1 , is generated.
- Slice 1 is then assigned to a queue (also sometimes called a “pipeline”) associated with a particular categorizer ( 1135 ).
- FIG. 11F shows Slicel assigned to categorizer queue 1138 , denoted as categorizer queue 2 .
- Categorizer queue 2 corresponds to categorizer 1141 , denoted as categorizer 2 .
- the assignment is based on a load balancing scheme.
- the relative amount of data assigned to each of categorizer queuel 1137 , categorizer queue 2 1138 , categorizer queue 3 1139 , and categorizer queue 4 1140 is compared and the system determines that categorizer queue 2 has the least amount of data currently assigned. Therefore, Slice 1 is assigned to categorizer queue 2 . In some implementations, Slice 1 is assigned to an idle queue. As shown, once Slicel has been assigned to a particular queue, all subsequent segments from Event 1 (e.g., S 1 ice 2 1132 , S 1 ice 3 1333 , and S 1 ice 4 1334 ) are assigned to the same queue ( 1136 ). This allows for information such as background factors to be shared across segments.
- FIG. 11G shows segments of a particular event (Eventl 1130 ) being assigned to a categorizer and processed in accordance with some implementations.
- Slice 1 denoted as an initial segment ( 1143 )
- categorizer queue 3 based on load balancing ( 1146 ). Since Slice 1 is denoted as an initial segment, the event comprising Slicel (Event 1 ) is also assigned to categorizer queue 3 and this assignment in stored ( 1148 ) in a cache 1149 .
- Slicel is stored in memory (e.g., a location within database 1155 ) associated with categorizer 3 ( 1151 ) and is eventually processed ( 1154 ) by categorizer 3 1153 (e.g., when it reaches the top of the queue).
- S 1 ice 2 1132 denoted as a non-initial segment of Event 1 ( 1144 ), is obtained and the cache is checked to determine which queue Event 1 was assigned ( 1147 ).
- S 1 ice 2 is stored in memory associated with categorizer 3 ( 1152 ) and is processed in turn ( 1154 ).
- One or more additional segments are optionally processed in a similar manner as S 1 ice 2 .
- SliceN 1142 denoted as the final segment of Event 1 ( 1145 ), it is processed in a similar manner as S 1 ice 2 , and Event 1 is marked as completed.
- the assignment of Event 1 in the cache 1149 , and the memory locations used to store the segments of Event 1 in the database 1155 are cleared and/or marked as available (e.g., available to be used for subsequent events).
- FIG. 12A illustrates a representative system and process for segmenting and categorizing a motion event candidate, in accordance with some implementations.
- server system 508 optionally includes a front end server 1202 and a back end server 1204 and smart home environment 522 includes a camera 118 .
- the back end server is separate and distinct from the server system 508 (not shown).
- the back end server 1204 includes the event categorizer 7148 and the front end server 1202 includes the event processor 7146 ( FIG. 7A ).
- the camera sends a video stream to the front end server 1202 of server system 508 ( 1206 ).
- the front end server 1202 identifies motion start information ( 1207 ) or the camera 118 identifies the motion start information and sends it to the front end server 1202 ( 1208 ).
- the front end server 1202 begins segmenting the video stream ( 1210 ) and sends the first segment to the back end server 1204 to be categorized ( 1212 ).
- the back end server 1204 categorizes the motion event candidate within the first segment ( 1214 ).
- the back end server 1204 either sends the categorization information back to the front end server ( 1216 ), or stores the categorization information locally, or both. This process is repeated for the second segment ( 1218 , 1220 , 1222 ) and any subsequent segments.
- the front end server 1202 identifies motion end information ( 1225 ) or the camera 118 identifies the motion end information and sends it to the front end server 1202 ( 1224 ). Once the motion end information is obtained, the front end server 1202 ends the video segmentation ( 1226 ) and sends the final segment to the back end server 1204 to be processed ( 1228 ).
- the back end server 1204 categorizes the motion event candidate in the final segment ( 1230 ) and optionally sends the categorization information back to the front end server ( 1232 ). In some implementations, after all individual segments have been categorized, multi-segment categorization is performed by either the front end server 1202 or the back end server 1204 .
- FIG. 12B illustrates a representative system and process for providing an alert for a motion event candidate, in accordance with some implementations.
- smart home environment 522 includes a camera 118 .
- Camera 118 is communicatively coupled to server system 508 , which in turn is communicatively coupled to client device 504 .
- client device 504 is communicatively coupled to camera 118 .
- camera 118 performs the operations shown in FIG. 12B to be performed by server system 508 .
- server system 508 includes a front end server 1202 and a back end server 1204 as shown in FIG. 12A .
- the camera sends a video stream to the server system 508 ( 1206 ).
- the front end server 1202 identifies motion start information ( 1207 ) or the camera 118 identifies the motion start information and sends it to the front end server 1202 ( 1208 ).
- camera 118 detects a motion start event and sends video stream ( 1206 ) to server system 508 in response to detecting the motion start event.
- the server system 508 categorizes ( 1234 ) the motion event candidate and generates ( 1236 ) a confidence level for the categorization.
- the server system 508 categorizes an event candidate as “a person walking past the living room window” and generates a confidence level of 84% for the categorization.
- the confidence level is based on a person detection algorithm accurately recognizing the motion entity as a person walking.
- the server system 508 sends ( 1238 ) an alert, or alert information such as the assigned category and confidence level, to the client device 504 .
- the server system 508 sends the alert, or alert information, to multiple client devices.
- the client device 504 receives the alert, or alert information, and presents ( 1240 ) an alert to a user of the client device.
- presenting the alert comprises displaying a user interface such as user interface 1400 in FIG. 14A .
- presenting the alert includes generating an audio alert.
- presenting the alert includes causing the client device to vibrate.
- presenting the alert includes activing one or more lights on the client device.
- server system 508 sends updated alert information and the client device either presents a new alert or updates a previous alert based on the updated alert information.
- the client device 504 includes one or more speakers enabled to output sound, zero or more microphones enabled to receive sound input, and a touch screen 1306 enabled to receive one or more contacts and display information (e.g., media content, webpages and/or user interfaces for an application).
- FIGS. 13A-13C illustrate example user interfaces for monitoring and facilitating review of motion events in accordance with some implementations.
- the device detects inputs on a touch-sensitive surface that is separate from the display.
- the touch sensitive surface has a primary axis that corresponds to a primary axis on the display.
- the device detects contacts with the touch-sensitive surface at locations that correspond to respective locations on the display. In this way, user inputs detected by the device on the touch-sensitive surface are used by the device to manipulate the user interface on the display of the device when the touch-sensitive surface is separate from the display. It should be understood that similar methods are, optionally, used for other user interfaces described herein.
- finger inputs e.g., finger contacts, finger tap gestures, finger swipe gestures, etc.
- one or more of the finger inputs are replaced with input from another input device (e.g., a mouse based input or stylus input).
- a swipe gesture is, optionally, replaced with a mouse click (e.g., instead of a contact) followed by movement of the cursor along the path of the swipe (e.g., instead of movement of the contact).
- a tap gesture is, optionally, replaced with a mouse click while the cursor is located over the location of the tap gesture (e.g., instead of detection of the contact followed by ceasing to detect the contact).
- multiple user inputs are simultaneously detected, it should be understood that multiple computer mice are, optionally, used simultaneously, or a mouse and finger contacts are, optionally, used simultaneously.
- FIGS. 13A-13C show user interface 1308 displayed on client device 504 (e.g., a tablet, laptop, mobile phone, or the like); however, one skilled in the art will appreciate that the user interfaces shown in FIGS. 13A-13C may be implemented on other similar computing devices.
- client device 504 e.g., a tablet, laptop, mobile phone, or the like
- the client device 504 is the portable electronic device 166 ( FIG. 1 ) such as a laptop, tablet, or mobile phone.
- the user of the client device 504 (sometimes also herein called a “reviewer”) executes an application (e.g., the client-side module 502 , FIG. 5 ) used to monitor and control the smart home environment 100 and logs into a user account registered with the smart home provider system 164 or a component thereof (e.g., the server system 508 , FIGS. 5 and 7 ).
- the smart home environment 100 includes the one or more cameras 118 , whereby the user of the client device 504 is able to control, review, and monitor video feeds from the one or more cameras 118 with the user interfaces for the application displayed on the client device 504 shown in FIGS. 13A-13C .
- FIG. 13A illustrates the client device 504 displaying a first implementation of a video monitoring user interface (UI) of the application on the touch screen 1306 .
- the video monitoring UI includes three distinct regions: a first region 1303 , a second region 1305 , and a third region 1307 .
- the first region 1303 includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100 .
- the respective camera is located on the back porch of the user's domicile or pointed out of a window of the user's domicile.
- the first region 1303 includes the time 1311 of the video feed being displayed in the first region 1303 and also an indicator 1312 indicating that the video feed being displayed in the first region 1303 is a live video feed.
- the second region 1305 includes an event timeline 1310 and a current video feed indicator 1309 indicating the temporal position of the video feed displayed in the first region 1303 (i.e., the point of playback for the video feed displayed in the first region 1303 ).
- the video feed displayed in the first region 1303 is a live video feed from the respective camera.
- the video feed displayed in the first region 1303 may be previously recorded video footage.
- the user of the client device 504 may drag the indicator 1309 to any position on the event timeline 1310 causing the client device 504 to display the video feed from that point in time forward in the first region 1303 .
- the user of the client device 504 may perform a substantially horizontal swipe gesture on the event timeline 1310 to scrub between points of the recorded video footage causing the indicator 1309 to move on the event timeline 1310 and also causing the client device 504 to display the video feed from that point in time forward in the first region 1303 .
- the second region 1305 also includes affordances 1313 for changing the scale of the event timeline 1310 : a 5 minute affordance 1313 A for changing the scale of the event timeline 1310 to 5 minutes and a 1 hour affordance 1313 B for changing the scale of the event timeline 1310 to 1 hour.
- the scale of the event timeline 1310 is 1 hour as evinced by the darkened border surrounding the 1 hour affordance 1313 B and also the temporal tick marks shown on the event timeline 1310 .
- the second region 1305 also includes affordances 1314 for changing the date associated with the event timeline 1310 to any day within the preceding week: Monday affordance 1314 A, Tuesday affordance 1314 B, Wednesday affordance 1314 C, Thursday affordance 1314 D, Friday affordance 1314 E, Saturday affordance 1314 F, Sunday affordance 1314 G, and Today affordance 1314 H.
- the event timeline 1310 is associated with the video feed from today as evinced by the darkened border surrounding Today affordance 1314 H.
- an affordance is a user interface element that is user selectable or manipulable on a graphical user interface.
- the second region 1305 further includes: “Make Time-Lapse” affordance 1315 , which, when activated (e.g., via a tap gesture), enables the user of the client device 504 to select a portion of the event timeline 1310 for generation of a time-lapse video clip; “Make Clip” affordance 1316 , which, when activated (e.g., via a tap gesture), enables the user of the client device 504 to select a motion event or a portion of the event timeline 1310 to save as a video clip; and “Make Zone” affordance 1317 , which, when activated (e.g., via a tap gesture), enables the user of the client device 504 to create a zone of interest on the current field of view of the respective camera.
- the time-lapse video clip and saved non-time-lapse video clips are associated with the user account of the user of the client device 504 and stored by the server system 508 (e.g., in the video storage database 516 , FIG. 5 ).
- the user of the client device 504 is able to access his/her saved time-lapse video clip and saved non-time-lapse video clips by entering the login credentials for his/her for user account.
- the video monitoring UI also includes a third region 1307 with a list of categories with recognized event categories and created zones of interest.
- the time-lapse video clip is generated by the client device 504 , the server system 508 , or a combination thereof.
- motion events within the selected portion of the event timeline 1310 are played at a slower speed than the balance of the selected portion of the event timeline 1310 .
- motion events within the selected portion of the event timeline 1310 that are assigned to enabled event categories and motion events within the selected portion of the event timeline 1310 that touch or overlap enabled zones are played at a slower speed than the balance of the selected portion of the event timeline 1310 including motion events assigned to disabled event categories and motion events that touch or overlap disabled zones.
- FIG. 13A also illustrates the client device 504 displaying the event timeline 1310 in the second region 1305 with event indicators 1322 B, 1322 F, 1322 H, 1322 I, 1322 J, 1322 K, and 1322 L corresponding to detected motion events.
- the location of a respective event indicator 1322 on the event timeline 1310 correlates with the time at which a motion event corresponding to the respective event indicator 1322 was detected.
- the detected motion events corresponding to the event indicators 1322 B and 13221 are categorized as Cat.
- a events (as denoted by the indicators' solid white fill) and the detected motion events corresponding to event indicators 1322 F, 1322 H, 1322 I, 1322 K, and 1322 L are categorized as Cat.
- the list of categories in the third region 1307 includes an entry for categorized motion events with a filter affordance for enabling/disabling display of event indicators for the corresponding categories of motion events on the event timeline 1310 .
- the list of categories in the third region 1307 includes an entry 1324 A for event category A and an entry for event category B.
- Each entry includes: a display characteristic indicator ( 1325 A and 1325 B) representing the display characteristic for event indicators corresponding to motion events assigned to the respective event category; an indicator filter ( 1326 A and 1326 B) for enabling/disabling display of event indicators on the event timeline 1310 for motion events assigned to the respective event category; and a notifications indicator ( 1327 A and 1327 B) for enabling/disabling notifications sent in response to detection of motion events assigned to the respective event category.
- a display characteristic indicator 1325 A and 1325 B
- an indicator filter 1326 A and 1326 B
- a notifications indicator 1327 A and 1327 B
- FIG. 13A display of event indicators for motion events corresponding to event categories A and B are enabled, as evinced by the check mark in indicator filters 1326 A and 1326 B.
- FIG. 13A further shows the notifications indicator 1327 A in the third region 1307 as disabled, shown by the line through the notifications indicator 1327 A.
- the notifications are messages sent by the server system 508 ( FIG. 5 ) via email to an email address linked to the user's account and/or via a SMS or voice call to a phone number linked to the user's account.
- the notifications are audible tones or vibrations provided by the client device 504 .
- FIG. 13A further illustrates the client device 504 displaying a dialog box 1323 for a respective motion event correlated with the event indicator 1322 B (e.g., in response to detecting selection of the event indicator 1322 B).
- the dialog box 1323 may be displayed in response to sliding or hovering over the event indicator 1322 B.
- the dialog box 1323 includes the time the respective motion event was detected (e.g., 11:37:40 am) and a preview 1332 of the respective motion event (e.g., a static image, a series of images, or a video clip).
- a preview 1332 of the respective motion event e.g., a static image, a series of images, or a video clip.
- the dialog box 1323 also includes an affordance 1333 , which, when activated (e.g., with a tap gesture), causes the client device 504 to display an editing user interface (UI) for the event category to which the respective motion event is assigned (if any) and/or the zone or interest which the respective motion event touches or overlaps (if any).
- FIG. 13A also illustrates the client device 504 detecting a contact 1334 (e.g., a tap gesture) at a location corresponding to the entry 1324 B for event category B on the touch screen 1306 .
- a contact 1334 e.g., a tap gesture
- FIG. 13B illustrates the client device 504 displaying an editing user interface (UI) for event category B in response to detecting selection of the entry 1324 B in FIG. 13A .
- the editing UI for event category B includes two distinct regions: a first region 1335 ; and a second region 1337 .
- the first region 1335 includes representations 1336 (sometimes also herein called “sprites”) of motion events assigned to event category B, where a representation 1336 A corresponds to the motion event correlated with the event indicator 1322 F, a representation 1336 B corresponds to the motion event correlated with an event indicator 1322 G, a representation 1336 C corresponds to the motion event correlated with the event indicator 1322 L, a representation 1336 D corresponds to the motion event correlated with the event indicator 1322 K, and a representation 1336 E corresponds to the motion event correlated with the event indicator 1322 J.
- each of the representations 1336 is a series of frames or a video clip of a respective motion event assigned to event category B. For example, in FIG.
- each of the representations 1336 corresponds to a motion event of a bird flying from left to right across the field of view of the respective camera.
- each of the representations 1336 is associated with a checkbox 1341 .
- the checkboxes 1341 enable the user of the client device 504 to remove motion events incorrectly assigned to an event category so that similar motion events are not assigned to the event category in the future.
- the first region 1335 further includes: a save/exit affordance 1338 for saving changes made to event category B or exiting the editing UI for event category B; a label text entry box 1339 for renaming the label for the event category from the default name (“event category B”) to a custom name; and a notifications indicator 1340 for enabling/disabling notifications sent in response to detection of motion events assigned to event category B.
- the second region 1337 includes a representation of the video feed from the respective camera with a linear motion vector 1342 representing the typical path of motion for motion events assigned event category B.
- the representation of the video feed is a static image recently captured from the video feed or the live video feed.
- FIG. 13B also illustrates the client device 504 detecting a contact 1343 (e.g., a tap gesture) at a location corresponding to the checkbox 1341 C on the touch screen 1306 and a contact 1344 (e.g., a tap gesture) at a location corresponding to the checkbox 1341 E on the touch screen 1306 .
- a contact 1343 e.g., a tap gesture
- a contact 1344 e.g., a tap gesture
- FIG. 13C illustrates the client device 504 displaying a first portion of a motion events feed 1397 (e.g., in response to detecting selection of the “Motion Events Feed” affordance).
- the motion events feed 1397 includes representations 1398 of motion events.
- each of the representations 1398 is associated with a time at which the motion event was detected, and each of the representations 1398 is associated with an event category to which it is assigned to the motion event (if any) and/or a zone which it touches or overlaps (if any).
- FIG. 13C illustrates the client device 504 displaying a first portion of a motion events feed 1397 (e.g., in response to detecting selection of the “Motion Events Feed” affordance).
- the motion events feed 1397 includes representations 1398 of motion events.
- each of the representations 1398 is associated with a time at which the motion event was detected, and each of the representations 1398 is associated with an event category to which it is assigned to the motion event (if any) and/
- each of the representations 1398 is associated with a unique display characteristic indicator 1325 representing the display characteristic for the event category to which it is assigned (if any) and/or the zone which it touches or overlaps (if any).
- the representation 1398 A corresponds to a respective motion event that was detected at 10:39:45 am.
- the motion events feed 1397 also includes: an exit affordance 1399 , which, when activated (e.g., via a tap gesture), causes the client device 504 to display a previous user interface (e.g., the video monitoring UI in FIG. 13A ); and a filtering affordance 13100 , which, when activated (e.g., via a tap gesture), causes the client device 504 to display a filtering pane.
- the motion events feed 1397 further includes a scroll bar 13101 for viewing the balance of the representations 1398 in the motion events feed 1397 .
- FIG. 14A illustrates user interface 1400 for providing event alerts, in accordance with some implementations.
- FIG. 14A shows client device 504 displaying user interface 1400 on touch screen 1102 .
- the user interface 1400 includes alert section 1402 displaying a home alert.
- the home alert includes an alert message 1404 indicating the category of the motion event (e.g., a person event category) and the time the motion event occurred (12:32 PM).
- user interface 1400 comprises a home screen.
- user interface 1400 comprises a lock screen.
- a smart home application is opened or launched (e.g., utilizing user interface module 826 , FIG. 8 ).
- a video monitoring user interface is displayed, such as user interface 1308 in FIG. 13A .
- the user selection of the alert section 1402 comprises a user swipe gesture over the portion of the touch screen 1102 corresponding to the alert section 1402 .
- the user selection of the alert section 1402 comprises a user tap gesture, or double-tap gesture, over the portion of the touch screen 1102 corresponding to the alert section 1402 .
- the alert includes additional information not shown in FIG. 14A , such as information regarding the smart devices involved in the motion event (e.g., the camera that captured the motion event) and/or information regarding the duration of the motion event.
- alert section 1402 includes one or more of: an affordance for opening a smart home application that presented to the alert, an affordance for initiating playback of the motion event, an affordance for ignoring or cancelling the alert, and an affordance for snoozing the alert.
- user interface 1400 includes a plurality of alert sections, each alert section corresponding to a distinct event.
- user interface 1400 includes a first alert section for a first alert corresponding to a motion event that occurred at 12:10 PM, and a second alert section for a second alert corresponding to an audio event that occurred at 12:45 PM.
- the plurality of alert sections is sorted chronologically (e.g., with most recent alerts displayed on top). In some implementations, the plurality of alert sections is sorted by importance.
- FIGS. 14B-14C illustrate example event alerts, in accordance with some implementations.
- Alert 1406 includes alert message 1408 indicating that a general motion event had occurred at a particular time (12:32 PM).
- alert 1406 is generated in accordance with a determination that the motion event included no particular entities or objects.
- alert 1406 is generated in accordance with a determination that no particular entities or objects in the motion event were recognized with sufficient confidence (e.g., above a predetermined confidence threshold).
- Alert 1410 includes alert message 1412 indicating that a motion event involving a particular zone (Zone A) had occurred at 12:32 PM.
- the particular zone is a zone of interest denoted by a user of the smart home application.
- “Zone A” is a user-defined title for the particular zone.
- Alert 1414 includes alert message 1416 indicating that a motion event likely involving a person had occurred at 12:32 PM.
- alert 1414 conveys information regarding both an event category for the motion event and the corresponding confidence level for the category. For example, an instance of a person was detected in the motion event with a corresponding confidence level above confidence threshold 71714 ( FIG. 7C ) but below confidence threshold 71712 .
- Alert 1418 includes alert message 1420 indicating that a motion event involving a person had occurred during a particular time period (12:32 PM-12:35 PM).
- alert 1414 conveys information regarding both an event category for the motion event and a duration of the motion event.
- the alert message 1420 corresponds to an event category with a high corresponding confidence level, such as a confidence level above confidence threshold 71712 ( FIG. 7C ).
- alert 1414 is generated as a first alert for a particular motion event and alert 1418 is generated as a second alert or updated alert for the particular motion event.
- alert 1414 is generated based on an initial event category and corresponding confidence level for the motion event, such as an event category assigned after analyzing a few seconds (e.g., 5, 10, 15, or 30 seconds) of the motion event.
- alert 1418 is generated after analyzing the entire 3 minute event.
- Alert 1422 includes alert message 1424 indicating that a motion event involving an unknown person had occurred at a particular time (12:32 PM).
- an unknown person comprises an unrecognized detected person.
- a person is detected, but the person cannot be identified via facial recognition or otherwise.
- alert 1422 is generated in accordance with a determination that the person is not recognized as any particular person with a confidence score meeting particular criteria.
- the detected person is determined to be a known person, “John”, with a confidence score of 48 and is determined to be “Paul” with a confidence score of 36.
- a confidence score below a confidence threshold results in the detected person not being identified as the known person.
- the detected person is not identified as either “John” or “Paul” and the corresponding alert message 1424 states “unknown person.”
- Alert 1426 includes alert message 1428 indicating that activity was detected at a particular time (12:32 PM). In some implementations, alert message 1428 is equivalent to alert message 1408 . In some implementations, alert 1428 is generated in accordance with a determination that the activity included no particular entities or objects. In some implementations, alert 1428 is generated in accordance with a determination that no particular entities or objects in the motion event were recognized with sufficient confidence (e.g., above a predetermined confidence threshold).
- Alert 1430 includes alert message 1432 indicating that activity involving a particular animal (Sparky the dog) was detected at a particular time (12:32 PM).
- alert message 1432 corresponds to entity detection identifying a dog entity in the activity (e.g., motion event) and entity recognition identifying the dog entity as Sparky the dog.
- alert message 1432 corresponds to a particular event category for Sparky the dog.
- Alert 1434 includes alert message 1436 indicating that an alert event involving a person occurred at a particular time (12:32 PM).
- an alert event comprises an event detected by a non-camera smart device, such as a smart thermostat, a smart hazard detector, a smart door lock, or the like.
- a smart hazard detector detects smoke and triggers an alert event.
- an alert event triggered by a non-camera smart device is associated with a particular portion of a video feed from a camera.
- an alert event triggered by a smart door lock is associated with a camera feed from a camera directed at the door in which the smart door lock is installed.
- a user may view video footage of the front door for a period of time immediately after the alert triggered by the smart door lock.
- the alert event was determined to involve a person based on an analysis of information from one or more smart devices, such as visual data from a camera or audio data from a microphone.
- alert message 1436 corresponds to a high confidence score for the person detection, such as a confidence score above confidence threshold 71712 ( FIG. 7C ).
- alert message 1440 corresponds to a confidence score for the object detection meeting certain criteria, such as within a particular confidence range. For example, a confidence score for the vehicle detection is above confidence threshold 71714 , but below confidence threshold 71712 ( FIG. 7C ).
- FIGS. 15D-15F illustrate a multi-pass approach to person detection, in accordance with some implementations.
- FIG. 15D shows the results of an initial person detection analysis.
- three bounding boxes, bounding box 1510 , bounding box 1512 , and bounding box 1514 are displayed.
- the bounding boxes each correspond to an instance of a potential person based on the initial analysis.
- FIG. 15E shows a region 1516 selected for use with a second person detection analysis. Region 1516 is selected such that it encompasses both bounding box 1510 and bounding box 1514 .
- the potential person in bounding box 1512 is identified as a false positive (e.g., based on a previous analysis such as the analysis of the image in FIG. 15C ).
- a second region is selected to encompass bounding box 1512 .
- region 1516 is selected such that it encompasses bounding boxes 1510 , 1512 , and 1514 .
- FIG. 15F shows the results of a second person detection analysis performed on region 1516 .
- FIG. 15F shows bounding box 1518 , corresponding to bounding box 1510 , containing a detected person; and bounding box 1520 corresponding to bounding box 1514 containing a second detected person.
- FIGS. 16A-16C illustrate examples of alert logic for use with some implementations.
- FIG. 16A shows an example of alert logic for use in a smart home system. As shown in FIG. 16A , after an alert has been generated, the system forgoes generating any subsequent alerts for a predetermined amount of time (e.g., 30 minutes).
- FIG. 16A shows motion 1604 detected at time 0 and generation of a corresponding motion alert 1602 .
- FIG. 16A also shows subsequent motion, such as motion 1608 , detected within 30 minutes after generation of motion alert 1602 and the system forgoing generating any corresponding alerts.
- FIG. 16A further shows motion 1610 detected at time 30 and generation of a corresponding motion alert 1606 .
- FIG. 16B shows another example of alert logic for use in a smart home system.
- the system determines whether motion has been detected in a preceding predetermined amount of time (e.g., 30 minutes). If no motion has been detected in the preceding predetermined amount of time, the system generates an alert for the motion.
- FIG. 16B shows motion 1614 detected at time 0 and generation of a corresponding motion alert 1612 .
- FIG. 16B also shows subsequent motion, such as motion 1616 , detected within 30 minutes after any preceding motion, and the system forgoing generating any corresponding alerts.
- FIG. 16B further shows motion 1620 detected at time 63 , more than 30 minutes after the previous motion 1616 at time 31 , and generation of a corresponding motion alert 1618 .
- FIG. 16B further shows a series of motion detected after motion 1620 , including motion 1622 , and the system forgoing generating any additional alerts.
- motion is grouped into events and an alert is generated for each event.
- two instances of detected motion generate a single alert if it is determined that the two instances comprise a single motion event, and the two instances of detected motion generate two alerts if it is determined that the two instances comprise two distinct motion events.
- FIG. 16C shows an example of alert logic with multiple types of alerts for use in a smart home system.
- the system detects both motion and persons.
- a person is detected when detected motion is determined to comprise an instance of a person with a sufficiently high confidence score, such as a confidence score above confidence threshold 71716 ( FIG. 7C ).
- person detection is performed independently of motion detection.
- person detection comprises analyzing individual images within the video stream to determine if any of the images contain a person.
- FIG. 16C shows motion 1632 detected at time 0 and generation of a corresponding motion alert 1630 .
- FIG. 16C also shows detected motion 1638 and a detected person 1636 at time 25 .
- the system determines whether a person has been detected within a preceding predetermined amount of time (e.g., 10 minutes). In accordance with a determination that a person has not been detected within the preceding predetermined amount of time, the system generates person alert 1634 . In some implementations, in accordance with a determination that multiple types of detections have occurred, the system generates only a single alert. In some implementations, the system generates an alert for the detection type with the highest priority.
- a preceding predetermined amount of time e.g. 10 minutes
- the system generates an alert for the detection type highest in a detection type hierarchy.
- FIG. 16C also shows a person 1640 detected at time 38 and the system forgoing generating an alert in accordance with a determination that a person had been detected within a preceding predetermined amount of time (e.g., 10 minutes).
- FIG. 16C also shows motion 1642 detected at time 63 and the system forgoing generating an alert in accordance with a determination that either motion or a person had been detected within a preceding predetermined amount of time (e.g., 30 minutes).
- a preceding predetermined amount of time e.g. 30 minutes.
- person 1640 is detected at time 38 and motion 1642 is detected at time 63 and thus the time between detections is 25 minutes, which is less than the 30 minute threshold for generating a motion alert.
- the system forgoes generating an alert in accordance with a determination that either a detection of the detection type or a detection type higher in a detection type hierarchy has been detected within a preceding predetermined amount of time.
- FIG. 16C also shows a person 1646 detected at time 69 and the system generating person alert 1644 in accordance with a determination that a person has not been detected within a preceding predetermined amount of time (e.g., 10 minutes).
- distinct detection types correspond to distinct predetermined amounts of time. For example, a person detection corresponds to a 10 minute amount of time, an audio detection corresponds to a 20 minute amount of time, and a motion detection corresponds to a 30 minute amount of time.
- the predetermined amounts of time are stored in a database, such as server database 716 ( FIG. 7A ).
- the predetermined amounts of time comprise alert criteria 7172 ( FIG. 7A ).
- FIG. 16C also shows a person 1650 detected at time 89 and the system generating person alert 1648 in accordance with a determination that a person has not been detected within a preceding predetermined amount of time (e.g., 10 minutes).
- FIGS. 17A-17C illustrate a flowchart representation of a method 1700 of person detection in a video feed, in accordance with some implementations.
- FIG. 18 illustrates a flowchart representation of a method 1800 for providing event alerts, in accordance with some implementations.
- the methods 1700 and 1800 are performed by: (1) one or more electronic devices of one or more systems, such as the devices of a smart home environment 100 , FIG. 1 ; (2) one or more computing systems, such as smart home provider server system 164 of FIG. 1 and/or server system 508 of FIG. 5 ; or (3) a combination thereof.
- methods 1700 and 1800 are performed by a smart device 204 ( FIG. 9 ) or a component thereof, such as data processing module 9322 .
- methods 1700 and 1800 are performed by a client device 504 ( FIG. 8 ) or a component thereof, such as alert module 8284 .
- methods 1700 and 1800 described herein are entirely interchangeable, and respective operations of the methods 1700 and 1800 are performed by any of the aforementioned devices, systems, or combination of devices and/or systems.
- methods 1700 and 1800 are governed by instructions that are stored in a non-transitory computer-readable storage medium and that are executed by one or more processors of a device/computing system, such as the one or more CPU(s) 702 of server system 508 and/or the one or more CPU(s) 1002 of smart home provider server system 164 .
- a computing system such as the server system 508 of FIG. 5 .
- FIGS. 17A-17C Referring now to FIGS. 17A-17C .
- the system obtains ( 1702 ) a video feed.
- the system obtains the video feed from a camera 118 within the smart home environment 100 ( FIG. 1 ).
- the system obtains the video feed via network interface(s) 704 utilizing network communication module 712 ( FIG. 7A ).
- the system obtains or identifies ( 1704 ) an event indicator.
- the system receives the event indicator from a camera 118 .
- the camera 118 determines if sufficient motion is present in the video feed. If sufficient motion is detected, the camera sends the event indicator to the system.
- the server system receives the video feed from the camera and determines if sufficient motion is present in the video feed. If sufficient motion is detected, the system generates an event indicator.
- the event indicator indicates that a motion event candidate is present in a portion of the video feed.
- the event indicator comprises a cuepoint, such as those discussed above with reference to FIG. 11B .
- the event indicator comprises motion start information.
- the system utilizes data processing module 7144 ( FIG. 7A ) to analyze the video feed and determine if sufficient motion is present.
- the event indicator includes a timestamp of when the event began.
- the system obtains ( 1706 ) a plurality of pre-event images (e.g., 5, 10, or 15 images) from the video feed.
- the system stores the received video feed and, in response to obtaining or identifying an event indicator, retrieves the plurality of pre-event images from storage.
- server system 508 stores the video feed in server database 716 and retrieves the plurality of pre-event images using event processor sub-module 7146 .
- the plurality of pre-event images comprises the plurality of images immediately preceding the timestamp of the event indicator.
- the plurality of pre-event images comprises a plurality of consecutive images.
- the plurality of pre-event images comprises images taken at intervals before the timestamp of the event indicator.
- the plurality of pre-event images comprises 10 images where each image is selected for each minute preceding the event indicator.
- the timestamp of the event indicator is time 0
- the first image is the image at time ⁇ 30
- the second image is the image at time ⁇ 90
- the third image is the image at time ⁇ 150
- the plurality of pre-event images comprise every 10th, 30th, 60th, or the like image from the video feed preceding to the event indicator.
- the pre-event images are selected based on analysis of the video feed. For example, the system performs video analysis to identify images likely to include information relevant to the event.
- the system obtains one or more post-event images and processes them with the plurality of pre-event images.
- the one or more post-event images are images determined to not involve motion.
- the one or more post-event images are utilized to identify false positives and background for the scene.
- the system determines ( 1708 ) whether a first image of the plurality of pre-event images includes one or more potential instances of a person. In some implementations, in accordance with a determination that the first image of the plurality of pre-event images does not include one or more potential instances of a person, the system performs operation 1716 . In some implementations, the system utilizes object detection sub-module 7152 to determine whether the first image includes one or more potential instances of a person. In some implementations, the system denotes a bounding box around each potential instance of a person. For example, FIG. 15A shows an image containing two potential instances of a person corresponding to bounding box 1502 and bounding box 1504 .
- determining whether an image includes one or more potential instances of a person includes identifying one or more potential instances and assigning a confidence score to each of the potential instances. In some implementations, if the confidence score meets one or more criteria the system denotes the corresponding instance with a bounding box for further analysis. In some implementations, the determining includes analyzes the one or more potential instances to determine whether one or more of the potential instances comprise false positives.
- the system utilizes facial detection to determine whether the first image includes one or more potential instances of a person. In some implementations, the system utilizes historical information for the camera to determine whether the first image includes one or more potential instances of a person. In some implementations, the system utilizes heuristics to determine whether the first image includes one or more potential instances of a person. In some implementations, the system distinguishes the foreground of an image from the background and analyzes the foreground to determine whether the first image includes one or more potential instances of a person. In some implementations, the system distinguishes the foreground of the image from the background based on prior training and/or analysis of previous images captured by the camera.
- the system utilizes scalable object detection with a deep neural network to determine whether the first image includes one or more potential instances of a person. Scalable object detection using deep neural networks is described in detail in the following paper: Erhan, Chester et al., “Scalable Object Detection using Deep Neural Networks,” 2013 , which is hereby incorporated by reference in its entirety.
- the system utilizes a deep network-based object detector to determine whether the image includes one or more potential instances of a person.
- the system utilizes a single shot multibox detector to determine whether the image includes one or more potential instances of a person. A single shot multibox detector is described in detail in the following paper: Liu, Wei et al., “SSD: Single Shot MultiBox Detector,” 2015, which is hereby incorporated by reference in its entirety.
- the system analyzes the one or more potential instances to determine whether the one or more potential instances are false positives.
- the analyzing includes analyzing the dimensions of the potential instances (e.g., the height, width, and proportionality). In some implementations, the analyzing is performed as part of the determination as to whether the first image includes the one or more potential instances of a person.
- the system denotes ( 1710 ) one or more regions encompassing the potential instances of a person.
- the system denotes a square region encompassing each potential instance of a person in the image.
- the system denotes a rectangular region, triangular region, circular region, or other like encompassing the potential instances of a person.
- the denoted region is the smallest such region that encompasses the potential instances of a person (e.g., the smallest square region to encompass all potential instances of a person).
- the region is denoted so as to include a boundary region around the potential instances of a person (e.g., a 10, 50, or 100 pixel boundary region).
- the system utilizes regioning sub-module 7154 to denote the one or more regions encompassing the potential instances of a person.
- FIG. 15B shows region 1506 encompassing bounding boxes 1502 and 1504 .
- the system determines ( 1712 ) whether the one or more regions include a person.
- the system utilizes scalable object detection with a deep neural network to determine whether the region includes one or more persons.
- the system utilizes a deep network-based object detector to determine whether the region includes one or more persons.
- the system utilizes a single shot multibox detector to determine whether the region includes one or more persons.
- the system utilizes a same algorithm to determine whether the image includes one or more potential persons and to determine whether the region includes one or more persons.
- determining whether the one or more regions include a person includes identifying one or more potential persons and assigning a confidence score to each.
- the system denotes the potential person as a person.
- the system utilizes object detection sub-module 7152 to determine whether the region includes one or more persons. For example, FIG. 15C shows a person detected within region 1506 denoted by bounding box 1508 .
- the system utilizes facial detection to determine whether the one or more regions include one or more persons.
- the system distinguishes the foreground of a region from the background and analyzes the foreground to determine whether the region includes one or more persons.
- the system stores ( 1714 ) information regarding the included persons.
- the system stores the information in server database 716 .
- the system stores the information in event information database 7166 or event records 7168 .
- the information regarding the included persons includes information as to the location of the persons within the image.
- the information includes information such as dimensions, coloring, posture, and the like regarding the included persons.
- the system stores information regarding all the potential instances of a person. In some implementations, the system stores information regarding potential instance(s) of a person that do not comprise a person. For example, the system determines that a particular potential instance of a person does not comprise a person and stores information regarding the potential instance (e.g., location, size, etc.) along with information denoting the potential instance as not comprising a person (e.g., a false positive).
- the potential instance e.g., location, size, etc.
- the system determines ( 1716 ) whether plurality of pre-event images include any additional images to be processed. In accordance with a determination that the plurality of pre-event images includes another image to be processed, the system repeats operation 1708 on the next image. Thus, the system analyzes each image of the plurality of pre-event images. For example, if the plurality of pre-event images includes 10 images the system analyzes each of the 10 images. In some implementations, the system analyzes the plurality of pre-event images simultaneously. In some implementations, the system assigns each image to a separate thread to be processed independently (e.g., in parallel). In some implementations, the system does not process any additional images in accordance with a determination that a processed image included a person. In some implementations, the system does not process any additional images in accordance with a confidence level indicating that a processed image included a person.
- the system obtains ( 1718 ) a plurality of post-event images (e.g., 5, 10, 15, or 30 images) from the video feed.
- a plurality of post-event images e.g., 5, 10, 15, or 30 images
- the system stores the received video feed and, in response to obtaining or identifying an event indicator, retrieves the plurality of post-event images from storage.
- server system 508 stores the video feed in server database 716 and retrieves the plurality of post-event images using event processor sub-module 7146 .
- the plurality of post-event images comprises the plurality of images immediately subsequent the timestamp of the event indicator.
- the plurality of post-event images comprises a plurality of consecutive images.
- the plurality of post-event images comprises images taken at intervals after the timestamp of the event indicator.
- the plurality of post-event images comprises 10 images where each image is selected for each minute subsequent to the time stamp of the event indicator.
- the timestamp of the event indicator is time 0
- the first image is the image at time 0
- the second image is the image at time 60
- the third image is the image at time 120
- the plurality of post-event images comprise every 10th, 30th, 60th, or the like image from the video feed subsequent to the event indicator.
- the system analyzes the plurality of post-event images before the plurality of pre-event images. In some implementations, the system analyzes the plurality of post-event images in parallel with the plurality of pre-event images. In some implementations, the post-event images are selected based on analysis of the video feed. For example, the system performs video analysis to identify images likely to include information relevant to the event. In some implementations, images corresponding to the start or stop of motion are selected. In some implementations, images corresponding to an end of a motion track (e.g., a motion stop or exit activity) are selected. In some implementations, the post-event images are selected based on the quality of the image. For example, images that are blurry or saturated are not selected.
- the system determines ( 1720 ) whether a first image of the plurality of post-event images includes one or more potential instances of a person. In accordance with a determination that the first image of the plurality of post-event images does not include one or more potential instances of a person, the system performs operation 1734 . In some implementations, operation 1720 comprises operation 1708 . In some implementations, the system utilizes object detection sub-module 7152 to determine whether the first image includes one or more potential instances of a person. In some implementations, the system denotes a bounding box around each potential instance of a person.
- the system compares the one or more potential instances of a person with stored persons information (e.g., information stored during operation 1714 ). For example, the system compares the one or more potential instances of a person with information regarding potential instances of a person detected in the pre-event images that were determined not to comprise a person (e.g., false positives). Thus, in accordance with some implementations, the system eliminates false positives prior to denoting one or more regions encompassing the potential instances of a person or determining whether the one or more regions include a person.
- stored persons information e.g., information stored during operation 1714
- the system compares the one or more potential instances of a person with information regarding potential instances of a person detected in the pre-event images that were determined not to comprise a person (e.g., false positives).
- the system eliminates false positives prior to denoting one or more regions encompassing the potential instances of a person or determining whether the one or more regions include a person.
- the system denotes ( 1722 ) one or more regions encompassing the potential instances of a person.
- operation 1722 comprises operation 1710 .
- the system denotes the one or more regions so as to exclude one or more potential instances determined to be false positives (e.g., not comprise a person).
- the system denotes the one or more regions without regard to one or more potential instances determined to be false positives (e.g., not comprise a person).
- the system denotes a region encompassing each potential instance of a person in the image.
- the system determines ( 1724 ) whether the one or more regions include a person. In some implementations, operation 1724 comprises operation 1712 . In some implementations, the system utilizes a deep network-based object detector to determine whether the region includes one or more persons. In some implementations, the system utilizes a single shot multibox detector to determine whether the region includes one or more persons. In some implementations, the system utilizes a same algorithm to determine whether the image includes one or more potential persons and to determine whether the region includes one or more persons.
- the system compares ( 1726 ) information regarding the included person from operation 1724 with stored persons information (e.g., information stored during operation 1714 ).
- stored persons information e.g., information stored during operation 1714 .
- the system utilizes data processing module 7144 and/or object detection sub-module 7152 to compare the information.
- comparing the information includes comparing the location of the included person with the location of the stored persons within the image.
- the plurality of post-event images is processed before any pre-event images are processed. In some implementations, the plurality of pre-event images are processed in accordance with a determination that at least one post-event image includes a person.
- the system determines ( 1728 ) whether a match is found between the information regarding the included person and the stored persons information.
- the system utilizes data processing module 7144 and/or object detection sub-module 7152 to determine whether the match is found.
- determining whether a match is found comprises determining whether the included person is in the same location as one of the stored persons within the image.
- the system disregards ( 1730 ) the included person.
- the system denotes the included person as not part of the event.
- the system determines whether the match comprises a match to a potential instance of a person previously determined to be a false positive. In some implementations, in accordance with a determination that the match comprises a match to a potential instance of a person previously determined to be a false positive, the system disregards the included person.
- the system in accordance with a determination that the match does not comprise a match to a potential instance of a person previously determined to be a false positive, denotes the image as containing the included person. In some implementations, in accordance with a determination that the match does not comprise a match to a potential instance of a person previously determined to be a false positive, the system denotes the image as containing the included person as a non-participant in the event.
- the system denotes ( 1732 ) the image as containing the included person. In some implementations, the system denotes the image as containing the included person by adding or updating metadata associated with the image. In some implementations, the system stores the information regarding the included person in a database, such as database 716 ( FIG. 7A ). In some implementations, the system stores the information in the event information database 7166 .
- the system determines ( 1734 ) whether plurality of post-event images include any additional images to be processed. In accordance with a determination that the plurality of post-event images includes another image to be processed, the system repeats operation 1720 on the next image. Thus, the system analyzes each image of the plurality of post-event images. For example, if the plurality of post-event images includes 10 images the system analyzes each of the 10 images. In some implementations, the system analyzes the plurality of post-event images simultaneously. In some implementations, the system assigns each image to a separate thread to be processed independently (e.g., in parallel). In some implementations, the system does not process any additional images in accordance with a determination that a processed image included a person. In some implementations, the system does not process any additional images in accordance with a confidence level indicating that a processed image included a person.
- the system determines ( 1736 ) whether plurality of post-event images include an image denoted as containing a person. In some implementations, the system determines whether the plurality of post-event images include an image denoted as containing a person by analyzing metadata for the plurality of post-event images. In some implementations, the system determines whether the plurality of post-event images include an image denoted as containing a person by utilizing a database, such as server database 716 or event information database 7166 .
- the system denotes ( 1738 ) the motion event corresponding to the event indicator as involving the person.
- the system denotes the motion event corresponding to the event indicator as containing a person by editing or adding metadata for the motion event.
- the system denotes the motion event corresponding to the event indicator as containing a person by storing the information in a database, such as event information database 7166 or event records 7168 .
- the system denotes the motion event corresponding to the event indicator as involving the person in accordance with a determination that the person was a participant in the motion event.
- the system denotes the motion event corresponding to the event indicator as involving the person in accordance with a determination that the person was detected in multiple post-event images.
- the system obtains a video feed, the video feed comprising a plurality of images.
- the system obtains the video feed from a camera 118 within the smart home environment 100 ( FIG. 1 ).
- the system obtains the video feed via network interface(s) 704 utilizing network communication module 712 ( FIG. 7A ).
- the plurality of images comprise the plurality of post-event images obtained in operation 1718 .
- the system analyzes the image to determine whether the image includes a person.
- the system utilizes a deep network-based object detector to determine whether the image includes one or more persons.
- the system utilizes a single shot multibox detector to determine whether the image includes one or more persons.
- determining whether the image includes a person includes identifying one or more potential persons and assigning a confidence score to each. In some implementations, if the confidence score meets one or more criteria the system denotes the potential person as a person.
- the system utilizes object detection sub-module 7152 to determine whether the image includes one or more persons.
- the analyzing includes: (1) determining that the image includes a potential instance of a person by analyzing the image at a first resolution; (2) in accordance with the determination that the image includes the potential instance, denoting a region around the potential instance, where the area of the region is less than the area of the image; (3) determining whether the region includes an instance of the person by analyzing the region at a second resolution, greater than the first resolution; and (4) in accordance with a determination that the region includes the instance of the person, determining that the image includes the person.
- FIGS. 15A-15C illustrate the analyzing including: (1) determining that the image includes a potential instance of a person ( 1502 , FIG.
- the region is analyzed at the same resolution as the image. In some implementations, the region is analyzed at a lower resolution than the image. In some implementations, the region comprises the image. In some implementations: (1) the video feed comprises a high resolution video feed, and (2) the system, prior to analyzing the image at the first resolution, downsamples the image from an initial resolution to the first resolution.
- (1) analyzing the image at the first resolution comprises utilizing a person detection algorithm to analyze the image
- (2) analyzing the region at the second resolution comprises utilizing the same person detection algorithm to analyze the region.
- the system forgoes determining whether the region includes an instance of a person.
- the system assigns a confidence score to the potential instance; and, in accordance with a determination that the confidence score meets one or more predetermined criteria, the system forgoes determining whether the region includes an instance of a person.
- the system determines whether the image includes a person based on the analysis of the image at the first resolution.
- the system assigns a confidence score to the image. For example, the system assigns a confidence score to the image in FIG. 15A based on the analysis of the instance of the person in bounding box 1508 ( FIG. 15C ). In some implementations, the system utilizes object detection sub-module 7152 to assign the confidence score to the image.
- the confidence score is based on the analysis of the image at the first resolution. For example, a confidence score for the image in FIG. 15A is based on the analysis illustrated in FIG. 15A (e.g., the analysis of the potential instances of a person in bounding boxes 1502 and 1504 ). In some implementations, the confidence score is based on the analysis of the region at the second resolution. For example, a confidence score for the image in FIG. 15A is based on the analysis illustrated in FIG. 15C (e.g., the analysis of the instance of a person in bounding box 1508 ). In some implementations, the confidence score comprises an aggregation of information from the analysis of the image and the analysis of the region.
- the system in some implementations: (1) the video feed includes a motion event, and (2) in accordance with a determination that the confidence score for at least one image of the plurality of images exceeds a predetermined threshold, the system denotes the motion event as involving a person.
- FIGS. 15D-15I illustrate images that include a motion event—a person walking through the field of view.
- the system in accordance with a determination that the confidence score for either the image in FIG. 15D or the image in FIG. 15G exceeds a predetermined threshold (e.g., confidence threshold 71716 , FIG. 7C ), the system denotes the motion event as involving a person (e.g., the person in bounding box 1530 , FIG. 15I ).
- the system determines whether a detected person is a participant in the motion event and, in accordance with a determination that the identified person is a participant, the system denotes the motion event as involving a person. In some implementations, the system denotes the motion event by adding/updating information in a database, such as event information database 7166 or event records 7168 ( FIG. 7A ). In some implementations, the system utilizes event processor sub-module 7146 and/or event categorizer sub-module 7148 to determine whether a confidence score for at least one image of the plurality of images exceeds a predetermined threshold. In some implementations, the system utilizes object detection sub-module 7152 to determine whether a confidence score for at least one image of the plurality of images exceeds a predetermined threshold.
- the video feed includes at least one of a motion event, an audio event, and an alert event.
- the video feed includes metadata denoting times when an audio or alert event occurred.
- the metadata is stored in a database, such as event information database 7166 or event records 7168 .
- the system in accordance with a determination that the confidence score for at least one image of the plurality of images corresponding to an event exceeds a predetermined threshold, the system denotes the event as involving a person.
- determining that the image includes the potential instance of the person comprises: (1) detecting the potential instance of the person; (2) assigning a confidence score to the potential instance of the person; and (3) in accordance with a determination that the confidence score meets one or more predetermined criteria (e.g., confidence criteria 7171 , FIG. 7A ), determining that the images include the potential instance of the person. For example, as illustrated in FIG. 15D a potential instance of a person is detected within bounding box 1512 . In this example, a confidence score is assigned to the potential instance of a person, and, as show in FIG. 15E , the region 1516 does not encompass bounding box 1512 due to the confidence score failing to meet the predetermined criteria.
- predetermined criteria e.g., confidence criteria 7171 , FIG. 7A
- assigning the confidence score to the potential instance of the person comprises assigning the confidence score based on analysis of one or more additional images (e.g., images preceding or subsequent to the image that includes the potential instance of the person).
- the system in accordance with a determination that the region includes the person, denotes the image as containing a person. For example, in accordance with a determination that region 1506 ( FIG. 15B ) includes a person (e.g., the person in bounding box 1508 , FIG. 15C ), the system denotes the image shown in FIG. 15A as containing a person. In some implementations, the system denotes the image as containing a person by adding or updating information in a database, such as event information database 7166 or data storage database 7160 . In some implementations, denoting the image as containing a person comprises adding or updating metadata for the image.
- the system in accordance with a determination that the region does not include the person, denotes the image as not containing a person. In some implementations, the system denotes the image as not containing a person by adding or updating information in a database, such as event information database 7166 or data storage database 7160 . In some implementations, denoting the image as not containing a person comprises adding or updating metadata for the image. In some implementations, in accordance with a determination that the region does not include the person, the system forgoes denoting the image (e.g., forgoes denoting the image as containing, or not containing, a person).
- the system determines whether the region includes one or more persons other than the potential person; and (2) in accordance with a determination that the region includes the one or more other persons, denotes the image as containing a person. For example, the system analyzes an image and determines that it includes one potential instance of a person. The system denotes a region around the potential instance, and then analyzes the region to determine whether it includes any persons. In this example, as a result of the analysis of the region, the system determines that the region includes two persons: one corresponding to the potential instance, and one not detected in the analysis of the entire image. In another example, the system determines that the region includes one person, but not one corresponding to the potential instance.
- the system analyzes the entire image and flags a jacket hanging on the wall next to a window as a potential person.
- the system denotes a region encompassing the jacket and the window and analyzes the region. In analyzing the region the system determines that the jacket is not a person, but that a person is present outside the window.
- determining whether the region includes an instance of the person comprises re-analyzing the potential instance of the person.
- determining whether the region includes an instance of the person comprises utilizing a deep network-based object detector to determine whether the region includes one or more persons.
- determining whether the region includes an instance of the person comprises utilizing a single shot multibox detector.
- the system utilizes object detection sub-module 7152 to determine whether the region includes one or more persons.
- the system (1) determines that one or more images of the plurality of images includes a person; (2) obtains a second plurality of images, the second plurality of images preceding the motion event; (3) for each image in the second plurality of images, analyzes the image to determine whether the image includes the person; (4) in accordance with a determination that one or more images of the second plurality of images do not include the person, denotes the motion event as involving the person; and (5) in accordance with a determination that one or more images of the second plurality of images include the person, forgoes denoting the motion event as involving the person.
- the system determines whether a person is a participant in an event by analyzing images preceding the event to determine if the person was already present in the scene prior to the event occurring.
- FIGS. 15D-15I illustrate images that include a motion event—a person walking through the field of view.
- FIGS. 15D-15I also include a person sitting in a chair reading.
- the system analyzes the image shown in FIG. 15A and determines that a person is present within bounding box 1502 . The system then forgoes denoting the motion event in FIGS. 15D-15I as including the person within bounding box 1502 as the system determines that the person was not a participant in the motion event.
- the second plurality of images comprises the plurality of pre-event images obtained in operation 1706 .
- the system : (1) in accordance with a determination that an image includes multiple potential instances of a person, denotes a region around each potential instance; and (2) for each region, determines whether the region includes an instance of a person by analyzing the region at a second resolution, greater than the first resolution.
- a region is denoted around a subset of the multiple potential instances. For example, in the image shown in FIG. 15E the region 1516 encompasses bounding boxes 1510 and 1514 , but not bounding box 1512 .
- the system utilizes regioning sub-module 7154 to denote a region.
- the system : (1) in accordance with a determination that an image includes multiple potential instances of a person, denotes a region encompassing each potential instance; and (2) determines whether the region includes one or more instances of a person by analyzing the region at a second resolution, greater than the first resolution. For example, in the image shown in FIG. 15H the region 1526 encompasses both bounding box 1524 and bounding box 1522 .
- the system utilizes regioning sub-module 7154 to denote the region and objection detection sub-module 7152 to analyze the denoted region.
- the system determines whether the region includes one or more instances of a person by analyzing the region at a second resolution less than the first resolution.
- the system determines whether the region includes one or more instances of a person by analyzing the region at the first resolution.
- the system determines an approximate age of the potential person. For example, the system determines whether the potential person is an infant, toddler, adolescent, or adult. In some implementations, the system determines the approximate age of the potential person based on one or more of the potential person's dimensions (e.g., weight and/or height). In some implementations, the system categorizes potential persons as either children or adults based on the potential person's dimensions.
- the system determines an approximate age of the potential person. For example, the system determines whether the potential person is an infant, toddler, adolescent, or adult. In some implementations, the system determines the approximate age of the potential person based on one or more of the potential person's dimensions (e.g., weight and/or height). In some implementations, the system categorizes potential persons as either children or adults based on the potential person's dimensions.
- the system for each image in the plurality of images, analyzes the image to determine whether the image includes a particular object, the analyzing including: (1) determining whether the image includes a potential instance of the particular object by analyzing the image at a first resolution; (2) in accordance with a determination that the image includes a potential instance, denoting a region around the potential instance, wherein the area of the region is less than the area of the image; (3) determining whether the region includes an instance of the particular object by analyzing the region at a second resolution, greater than the first resolution; and (4) in accordance with a determination that the region includes an instance of the particular object, determining that the image includes the particular object.
- the system utilizes scalable object detection with a deep neural network to determine whether the first image includes the particular object. In some implementations, the system utilizes a deep network-based object detector to determine whether the image includes the particular object. In some implementations, the system utilizes a single shot multibox detector to determine whether the image includes the particular object.
- the particular object comprises a vehicle, such as a car, truck, boat, or airplane. In some implementations, the particular object comprises a weapon. In some implementations, the particular object comprises an entity such as an animal (e.g., a pet).
- the system determines whether the motion event involves a person by analyzing one or more relationships between images including persons of the plurality of images. In some implementations, determining whether the motion event involves a person comprises determining whether the person appears in distinct locations in respective images of the plurality of images. For example, FIGS. 15D-15I illustrate images that include a motion event—a person walking through the field of view. In this example, the system determines that the person in bounding box 1514 ( FIG. 15D ) and bounding box 1524 ( FIG. 15G ) is a participant in the motion event because the person's location has changed between images. Conversely, the system determines that the person in bounding box 1510 ( FIG. 15D ) and bounding box 1522 ( FIG.
- the system denotes the motion event as involving the person in bounding box 1514 , but does not denote the motion event as involving the person in bounding box 1510 .
- the system utilizing event processor sub-module 7146 to analyze the one or more relationships between images that include person(s).
- the system analyzes whether a detected person has an associated motion track for the motion event.
- the system determines that a detected person with an associated motion track is involved in the motion event, and a detected person without an associated motion track is not involved in the motion event.
- the system determines that the motion event involves a person in accordance with a determination that the person was detected in multiple images with a variance in location from image to image. In some implementations, the system generates a track for the person based on the person's detected location within each image of the plurality of images, and determines that the motion event involves the person in accordance with a determination that the person's track meets certain criteria (e.g., is longer than some predefined threshold). In some implementations, the system stores information regarding detected person within the plurality of images. In some implementations, the system aggregates the stored information along with other event information (e.g., as discussed infra with respect to FIG. 11B ) to determine whether the motion event involves the person.
- the system determines that the motion event involves a person in accordance with a determination that the person was detected in multiple images with a variance in location from image to image. In some implementations, the system generates a track for the person based on the person's detected location within each image of the plurality of images, and
- the system sends the stored information, along with other event information, to a categorizer to process the event (e.g., categorizer 2 1141 , FIG. 11F ).
- the categorizer determines whether the motion event involves the person.
- the categorizer assigns a category to the motion event, where the category indicates whether the motion event involves the person.
- the categorizer sends the assigned category to the system.
- the categorizer comprises a support vector machine classifier, a decision tree classifier, or the like.
- one or more of the above method operations are performed by a smart device, such as smart device 204 ( FIG. 9 ). In some implementations, one or more of the above method operations are performed by a camera 118 ( FIG. 1 ).
- FIGS. 17A-17C have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein are also applicable in an analogous manner to the method 1700 described above with respect to FIGS. 17A-17C .
- the system obtains ( 1802 ) a particular event category for a particular event.
- the system obtains the particular event category from a categorizer, such as categorizer 1141 in FIG. 11F .
- the categorizer is a component of the system, such as event categorizer sub-module 7148 .
- the categorizer is separate and distinct from the system.
- the system determines ( 1804 ) a category location within a category hierarchy for the particular event category.
- the particular event category is an event involving an unknown person (e.g., unknown person(s) event 71702 ) and the system determines that it is at the top of an event hierarchy as shown in FIG. 7C .
- the system analyzes a category hierarchy to determine where in the hierarchy the particular event category is located.
- the category hierarchy is stored in a database, such as event information database 7166 or event categories 7170 .
- the system utilizes event categorizer sub-module 7148 to determine the category location within the category hierarchy.
- the category hierarchy includes a category for unrecognized events.
- the system determines ( 1806 ) whether a timer associated with the particular event category meets one or more predetermined criteria. For example, the system determines whether the timer exceeds a preset amount of time, such as 10 minutes, 30 minutes, or 90 minutes. In some implementations, a distinct timer is utilized for each event category within the category hierarchy. In some implementations, the system utilizes alert sub-module 7151 to determine whether the timer associated with the particular event category meets the one or more predetermined criteria.
- the system forgoes ( 1814 ) generating an alert for the particular event. For example, the system determines that the timer indicates that it has been less than 10 minutes since the last alert was generated for the particular event's category and the predetermined criteria comprise waiting at least 10 minutes between alerts for the particular event's category.
- FIG. 16B shows motion 1616 detected within 30 minutes after preceding motion and the system forgoing generating an activity alert.
- the system generates an indicator for the particular event (e.g., a visual indicator on an event timeline within a smart home application), but forgoes generating an alert.
- the system generates an indicator such as indicator 1322 B in FIG. 13A .
- the system stores information regarding the particular event (e.g., in event records 7168 , FIG. 7A ), but forgoes generating an alert.
- the system In accordance with a determination that the timer associated with the particular event category meets the one or more predetermined criteria, the system generates ( 1808 ) an alert for the particular event.
- the system utilizes alert sub-module 7151 to generate the alert. For example, the system determines that the timer indicates that it has been more than 30 minutes since the last alert was generated for the particular event's category or for a category above the particular event's category within the category hierarchy.
- the predetermined criteria comprise waiting at least 30 minutes between alerts for the particular event's category.
- FIG. 16B shows motion 1620 detected more than 30 minutes after preceding motion and the system generating activity alert 1618 .
- the alert indicates the particular event's category. For example, the alert in FIG. 14A indicates that the particular event is categorized as a motion event involving a person.
- the system analyzes one or more timestamps for the particular event category to determine whether or not to generate an alert for the particular event. For example, the system analyzes the timestamp for the most recently generated alert for the particular event. In another example, the system analyzes the timestamps for the most recently generated alert for the particular event as well as the most recently generated alerts for event categories higher in the category hierarchy than the particular event's category.
- the system resets ( 1810 ) the timer associated with the particular event category. In some implementations, the system resets the timer in response to generating the alert for the particular event. In some implementations, the system stores a timestamp for the generated alert (e.g., stores the timestamp within server database 716 ). In some implementations, the system resets the timer in accordance with the determination that the timer meets the one or more predetermined criteria.
- the system resets ( 1812 ) one or more timers associated with categories below the particular event category in the category hierarchy.
- the particular event category comprises unknown person(s) event category 71702 and the system resets the timer for each event category below unknown person(s) event category 71702 in event categories 7170 ( FIG. 7C ).
- the system resets the one or more timers in response to generating the alert for the particular event.
- the system resets the one or more timers in accordance with the determination that the timer for the particular event category meets the one or more predetermined criteria.
- the system (1) obtains a first category of a plurality of motion categories for a first motion event, the first motion event corresponding to a first plurality of video frames from a camera; (2) sends a first alert indicative of the first category to a user associated with the camera; (3) after sending the first alert, obtains a second category of the plurality of motion categories for a second motion event, the second motion event corresponding to a second plurality of video frames from the camera; (4) in accordance with a determination that the second category is the same as (or substantially the same as) the first category, determines whether a predetermined amount of time has elapsed since the sending of the first alert; (5) in accordance with a determination that the predetermined amount of time has elapsed, sends a second alert indicative of the second category to the user; and (6) in accordance with a determination that the predetermined amount of time has not elapsed, forgoes sending the second alert.
- the first category and the second category comprise a known person(s) event category 71704 ( FIG. 7C ) and the system determines that at least 30 minutes have elapsed since the first alert was sent.
- FIG. 16C shows person detection 1646 at time 69 and person detection 1650 at time 89 .
- person detection 1646 and person detection 1650 both correspond to the same event category (e.g., unknown person(s) event 71702 , FIG. 7C ).
- the system determines that at least 10 minutes have elapsed since person alert 1644 , corresponding to person detection 1646 was sent. In accordance with this determination, the system sends person alert 1648 , corresponding to person detection 1650 .
- the system assigns a particular alert type to each event and the system sends a new alert in accordance with a determination that at least a predetermined amount of time has elapsed since the last alert of the particular alert type was sent. In some implementations, determining whether a predetermined amount of time has elapsed since the sending of the first alert comprises determining whether a timer associated with the second category meets one or more predetermined criteria. In some implementations, the system obtains the first event category from a categorizer, such as categorizer 1141 in FIG. 11F . In some implementations, the categorizer is a component of the system, such as event categorizer sub-module 7148 . In some implementations, the categorizer is separate and distinct from the system.
- the system utilizes event categorizer sub-module 7148 to obtain the first and second categories.
- the system utilizes alert sub-module 7151 and/or network communication module 712 to send the first alert.
- the first alert is presented at a client device, such as client device 504 in FIG. 14A .
- the system utilizes data processing module 7144 or a component thereof (e.g., event categorizer sub-module 7148 ) to determine whether the second category is the same as the first category.
- the predetermined amount of time is based on the category. For example, events of type unknown person(s) event 71702 have a predetermined amount of time of 10 minutes and events of type animal event 71708 have a predetermined amount of time of 30 minutes. In some implementations, the predetermined amount of time is based at least in part on an importance metric associated with the first category. For example, more important categories have alerts sent more frequently than less important categories. In some implementations, the predetermined amount of time is based on a confidence level for the event category. For example, a particular event is assigned known person(s) event type 71704 ( FIG. 7C ) with a corresponding confidence level of 65.
- alerts for known person(s) events with confidence levels above 50 are sent no more than every 20 minutes while known person(s) events with confidence levels below 50 are sent no more than every 30 minutes.
- the plurality of event categories includes a categories based on the confidence level. For example, a first event category comprises a known persons event with a confidence score above 90 and a second event category comprises a known persons event with a confidence score below 90.
- the plurality of motion event categories has a particular category hierarchy
- the system : (a) in accordance with a determination that the second category is not the same as the first category, determines whether a predetermined amount of time has elapsed since sending an alert indicative of the second category or a category above the second category in the category hierarchy; (b) in accordance with a determination that the predetermined amount of time has elapsed since sending an alert indicative of the second category or a category above the second category in the category hierarchy, sends the second alert indicative of the second category to the user; and (c) in accordance with a determination that the predetermined amount of time has not elapsed since sending an alert indicative of the second category or a category above the second category in the category hierarchy, forgoes sending the second alert.
- FIG. 16C shows a person detection 1640 at time 38 and a motion detection 1642 at time 63 .
- person detection 1640 corresponds to a person event category
- motion detection 1642 corresponds to a general motion event category.
- the system determines that the event category for the person detection 1640 differs from the event category for the motion detection 1642 .
- the system determines how much time has elapsed since an event of general motion event category or a higher category in the event category hierarchy. In this example, 31 minutes have elapsed since the last motion detection and 25 minutes have elapsed since the last person detection. If the predetermined amount of time is 30 minutes, the system will not send an alert because only 25 minutes have elapsed since the previous person event (corresponding to person detection 1640 ) and person events are higher in the event category hierarchy than general motion events.
- the category hierarchy comprises a plurality of motion event categories and a plurality of confidence levels.
- the category hierarchy includes a first entry for the first category with a first confidence level and a second entry for the first category and a second confidence.
- sending the first alert to the user comprises utilizing a first delivery method for sending the first alert to the user
- sending the second alert to the user in accordance with a determination that the second category is not the same as the first category comprises utilizing a second delivery method for sending the second alert.
- utilizing the second delivery method comprises sending the second alert to different devices than the first delivery method; and/or causing the devices to react differently.
- the first delivery method includes an audio alert and the second delivery method does not include an audio alert.
- the first delivery method comprises sending the alert to only one client device associated with the smart home environment.
- the second delivery method comprises sending the alert to all client devices associated with the smart home environment.
- the second delivery method utilizes different display characteristics for presenting the alert than the first delivery method.
- the first delivery method causes the alert shown in FIG. 14A to have a grey border and the second delivery method causes the alert shown in FIG. 14A to have a red border.
- the system (1) the system generates a confidence level for an association of the motion event candidate with the first category; and (2) the first alert is indicative of the first category and the confidence level. For example, the system determines that a particular motion event, or motion event candidate, is most likely an event involving a person and generates a corresponding confidence level of 76. In this example, the system sends an alert, such as alert 1414 in FIG. 14B indicating the event category (a person event) and the confidence level (likely involving).
- the category hierarchy is based on at least one of: a user preference of the user; a user profile of the user; and a group profile of a group that includes the user.
- the user preference comprises an express user preference obtained from the user.
- the user preference comprises an implied user preference (e.g., based on prior user activity, heuristics, and the like).
- information for the user profile of the user is received from the user.
- information for the user profile of the user is generated by the system (e.g., based on prior user activity, heuristics, and the like).
- the category hierarchy is based on at least one of: placement of the camera (e.g., indoors or outdoors); a camera type of the camera; one or more settings of the camera; and a time of the motion event candidate.
- placement of the camera e.g., indoors or outdoors
- a camera type of the camera assigns higher position within the category hierarchy to vehicle events than a category hierarchy for an indoor camera assigns to the vehicle events.
- the camera type of the camera includes information regarding the capabilities of the camera. For example, a category hierarchy for a camera with a high quality microphone assigns higher position within the category hierarchy to audio events than a category hierarchy for a camera with a lower quality microphone assigns to the audio events.
- the one or more settings of the camera include information regarding an operating state of the camera (e.g., low light mode). For example, a category hierarchy for a camera in low light mode assigns higher position within the category hierarchy to events involving a moving light than a category hierarchy for a camera in a higher light mode assigns to the events involving a moving light.
- the one or more settings of the camera include a device profile.
- the one or more settings comprise one or more settings set by a user in the smart home.
- the one or more settings include a category hierarchy for the camera set at least in part by a user. For example, the user denotes animal events 71708 ( FIG. 7C ) as being at the top of the category hierarchy.
- the time of the motion event candidate comprises information regarding one or more of: time of day, time of week, time of month, time of year, and the like. For example, audio events occurring at night are higher in a category hierarchy than audio events occurring during the day.
- the time of the motion event candidate comprises information regarding a time corresponding to the user being away from the smart home or a time corresponding to the user being in the smart home. For example, vehicle events occurring while a user is away from the smart home are higher in a category hierarchy than vehicle events that occur while the user is home.
- the system (1) analyzes one or more audio events corresponding to the first motion event; and (2) determines an event category based on the analyzed one or more audio events and the first category; where the first alert is indicative of the event category.
- the alert indicates that sound was present.
- the alert indicates the type of sound present.
- the alert includes an affordance to playback at least a portion of the audio event.
- the system assigns a motion event category and an event category, distinct from the motion event category. For example, the motion event category is “John moving in the living room” and the event category is “John singing and dancing in the living room.” In some implementations, the system assigns a motion event category and an audio event category.
- the audio event category is independent of the motion event category.
- the motion event category is “John moving in the living room” and the audio event category is “John talking.”
- the system utilizes data processing module 7144 ( FIG. 7A ) or a component thereof, such as event processor sub-module 7146 or event categorizer sub-module 7148 , to analyze the one or more audio events and/or determine the event category.
- the system (1) receives a plurality of video frames from a camera, the plurality of video frames including a motion event candidate; (2) categorizes the motion event candidate by processing the plurality of video frames, the categorizing including: (a) associating the motion event candidate with a first category of a plurality of motion event categories; and (b) generating a confidence level for the association of the motion event candidate with the first category; and (3) sends an alert indicative of the first category and the confidence level to a user associated with the camera.
- FIGS. 14A-14C show examples of alerts indicative of categories and confidence levels.
- the system includes the camera. In some implementations, the camera is communicatively coupled to the system.
- the categorizing includes associating the motion event candidate with a plurality of categories; and generating a confidence level for the association of the motion event candidate with each of the plurality of categories. In some implementations, an alert is generated for the category with the highest confidence level.
- the system utilizes network interface(s) 704 in conjunction with network communication module 712 to receive the plurality of video frames. In some implementations, the system utilizes event categorizer sub-module 7148 and event categories 7170 to categorize the motion event candidate. In some implementations, the system utilizes event categorizer sub-module 7148 and event categories 7170 to generate the confidence level.
- the system utilizes network interface(s) 704 in conjunction with network communication module 712 to send the alert.
- the system sends alert information to a client device and the client device generates an alert based on the alert information.
- the system sends an alert to the client device and the client device presents the alert to the user.
- sending an alert indicative of the first category and the confidence level to the user associated with the camera comprising sending the alert indicative of the first category and the confidence level to the user associated with the camera in accordance with a determination that a descriptive alerts option is enabled.
- the system obtains a descriptive phrase indicative of the confidence level; and (2) sending the alert indicative of the first category and the confidence level comprises sending the alert with the obtained phrase.
- a confidence level above confidence threshold 71716 ( FIG. 7C ) and below confidence threshold 71714 corresponds to the phrase “may involve.”
- the first category comprises animal event 71708 and the confidence level is 55 and therefore the alert message states “Activity that may involve Mr. Paws was detected.”
- a confidence level above confidence threshold 71714 ( FIG. 7C ) and below confidence threshold 71712 corresponds to the phrase “likely involves.”
- a confidence level above confidence threshold 71712 ( FIG. 7C ) corresponds to the term “involving.”
- the first category comprises vehicle event 71710 and the confidence level is 97 and therefore the alert message states “Activity involving a vehicle was detected.”
- the first category indicates that the motion event involves at least one of: a person; a known person; and an unknown person.
- the first category indicates that a specific person, such as “Joe” was involved.
- the first category indicates that an unrecognized person (e.g., an intruder) was involved.
- the first category indicates a recognized object or entity is involved, such as a vehicle, a pet, a weapon, or wildlife.
- sending an alert for an event involving a known person includes sending the name of the person.
- the alert message states that “A motion event involving Sally occurred.”
- a known person is determined using facial recognition (e.g., in conjunction with person detection).
- a known person is determined using gait detection.
- the first category indicates that the motion event involves a particular portion of a field of view of the camera.
- a camera has a field of view that includes a door.
- a motion event involving the door such as a person entering through the door, is assigned an event category indicative of the door.
- the alert message for a person entering through the door states that “A person has entered through the living room door.”
- the first category indicates that the motion event involves a zone of interest.
- alert 1410 in FIG. 14B indicates that the motion event involves Zone A.
- the motion event category assigned to the motion comprises a Zone A motion category.
- the alert indicates whether the confidence level meets one or more predefined criteria. In some implementations, the alert indicates whether or not the confidence level exceeds one or more thresholds. For example, alert 1414 in FIG. 14B includes alert message 1416 stating “likely involving a person” indicating that the confidence level for the person event category exceeds confidence threshold 71714 ( FIG. 7C ).
- the system selects a first delivery method of a plurality of delivery methods for sending the alert to the user, where the first delivery method is based at least in part on the confidence level; and (2) sending the alert to the user comprises utilizing a first delivery method for sending the alert to the user.
- a first delivery method for sending the alert to the user.
- the delivery method is based on the event category and the confidence level.
- some delivery methods include sending the alert to different devices than other delivery methods.
- some delivery methods cause the devices to react differently than other delivery methods.
- some delivery methods include an audio alert and other delivery methods do not include an audio alert.
- the first delivery method comprises sending the alert to only one client device associated with the smart home environment. In some implementations, the first delivery method comprises sending the alert to all client devices associated with the smart home environment. In some implementations, some delivery methods utilize different display characteristics for presenting the alert than other delivery methods.
- categorizing the motion event candidate by processing the plurality of video frames comprises categorizing the motion event candidate by processing the plurality of video frames and analyzing information received from a device distinct from the camera.
- the system uses information obtained from multiple smart devices, such as multiple cameras, to categorize the event.
- the system uses audio obtained from a smart television to categorize a motion event candidate captured by a camera in the same room as the smart television.
- categorizing the motion event candidate by processing the plurality of video frames comprises analyzing at least one of: total amount of motion in the video frames; direction of motion detected in the video frames; velocity of motion detected in the video frames; and whether motion detected in the video frames corresponds to a recognized activity.
- total amount of motion in the video frames comprises total amount of motion in a particular video frame of the plurality of video frames.
- categorizing the motion event candidate by processing the plurality of video frames comprises analyzing one or more motion tracks.
- the motion event candidate is categorized utilizing processing pipeline 1112 ( FIG. 11B ).
- the system analyzes one or more audio events corresponding to the motion event candidate; and (2) generating the confidence level comprises generating the confidence level based at least in part on the analyzed one or more audio events.
- the system obtains audio information (e.g., raw or preprocessed audio information) and generates the confidence level based at least in part on the audio information. For example, analysis of the motion event candidate indicates that the motion event candidate includes a person screaming. Analysis of contemporaneous audio data capture by a nearby device indicates that a person is screaming. In this example, the system generates a confidence level based on the analysis of the motion event candidate and analysis of the contemporaneous audio.
- the system sends an alert in accordance with a determination that motion has ceased. For example, a camera set in a busy location sends a motion stop alert after a predetermined amount of inactivity (e.g., 5, 10, or 15 minutes).
- a predetermined amount of inactivity e.g., 5, 10, or 15 minutes.
- one or more of the above method operations are performed by a smart device, such as smart device 204 ( FIG. 9 ). In some implementations, one or more of the above method operations are performed by a camera 118 . In some implementations, one or more of the above method operations are performed by a client device 504 .
- the users may be provided with an opportunity to opt in/out of programs or features that may collect personal information (e.g., information about a user's preferences or usage of a smart device).
- personal information e.g., information about a user's preferences or usage of a smart device.
- certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be anonymized so that the personally identifiable information cannot be determined for or associated with the user, and so that user preferences or user interactions are generalized (for example, generalized based on user demographics) rather than associated with a particular user.
- stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art, so the ordering and groupings presented herein are not an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
- first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first category could be termed a second category, and, similarly, a second category could be termed a first category, without departing from the scope of the various described implementations. The first category and the second category are both categories, but they are not necessarily the same category.
- the term “if” is, optionally, construed to mean “when” or “upon” or “in response to determining” or “in response to detecting” or “in accordance with a determination that,” depending on the context.
- the phrase “if it is determined” or “if [a stated condition or event] is detected” is, optionally, construed to mean “upon determining” or “in response to determining” or “upon detecting [the stated condition or event]” or “in response to detecting [the stated condition or event]” or “in accordance with a determination that [a stated condition or event] is detected,” depending on the context.
Abstract
Description
- This application is related to U.S. patent application Ser. No. ______ (Attorney Docket Number 104248-5147), filed ______, entitled “Methods and Systems for Person Detection in a Video Feed,” U.S. patent application Ser. No. ______ (Attorney Docket Number 104248-5146), filed , entitled “Methods and Systems for Providing Event Alerts,” and U.S. patent application Ser. No. 14/738,034, filed Jun. 12, 2015, entitled “Systems and Methods for Categorizing Motion Event Candidates,” all of which are hereby incorporated by reference in their entirety.
- This relates generally to providing alerts, including but not limited to, providing alerts for categorized motion events.
- Video surveillance produces a large amount of continuous video data over the course of hours, days, and even months. Such video data includes many long and uneventful portions that are of no significance or interest to a reviewer. In some existing video surveillance systems, motion detection is used to trigger alerts or video recording. However, using motion detection as the only means for selecting video segments for user review may still produce too many video segments that are of no interest to the reviewer. For example, some detected motions are generated by normal activities that routinely occur at the monitored location, and it is tedious and time consuming to manually scan through all of the normal activities recorded on video to identify a small number of activities that warrant special attention. In addition, when the sensitivity of the motion detection is set too high for the location being monitored, trivial movements (e.g., movements of tree leaves, shifting of the sunlight, etc.) can account for a large amount of video being recorded and/or reviewed. On the other hand, when the sensitivity of the motion detection is set too low for the location being monitored, the surveillance system may fail to record and present video data on some important and useful events.
- It is a challenge to accurately identify and categorize meaningful segments of a video stream, and to convey this information to a user in an efficient, intuitive, and convenient manner. Human-friendly techniques for discovering, categorizing, and notifying users of events of interest are in great need.
- Accordingly, there is a need for systems and/or devices with more efficient, accurate, and intuitive methods for event identification, categorization, and presentation. Such systems, devices, and methods optionally complement or replace conventional systems, devices, and methods for event identification, categorization, and/or presentation.
- In one aspect, some implementations include a method performed at a computing system having one or more processors and memory coupled to the one or more processors. The method includes: (1) obtaining a first category of a plurality of motion categories for a first motion event, the first motion event corresponding to a first plurality of video frames from a camera; (2) sending a first alert indicative of the first category to a user associated with the camera; (3) after sending the first alert, obtaining a second category of the plurality of motion categories for a second motion event, the second motion event corresponding to a second plurality of video frames from the camera; (4) in accordance with a determination that the second category is the same as (or substantially the same as) the first category, determining whether a predetermined amount of time has elapsed since the sending of the first alert; (5) in accordance with a determination that the predetermined amount of time has elapsed, sending a second alert indicative of the second category to the user; and (6) in accordance with a determination that the predetermined amount of time has not elapsed, forgoing sending the second alert.
- In another aspect, some implementations include a method performed at a computing system having one or more processors and memory coupled to the one or more processors. The method includes: (1) receiving a plurality of video frames from a camera, the plurality of video frames including a motion event candidate; (2) categorizing the motion event candidate by processing the plurality of video frames, the categorizing including: (a) associating the motion event candidate with a first category of a plurality of motion event categories; and (b) generating a confidence level (also sometimes called a confidence score) for the association of the motion event candidate with the first category; and (3) sending an alert indicative of the first category and the confidence level to a user associated with the camera.
- In another aspect, some implementations include a method performed at a computing system having one or more processors and memory coupled to the one or more processors. The method includes: (1) obtaining a video feed, the video feed comprising a plurality of images; and (2) for each image in the plurality of images, analyzing the image to determine whether the image includes a person, the analyzing including: (a) determining that the image includes a potential instance of a person by analyzing the image at a first resolution; (b) in accordance with the determination that the image includes the potential instance, denoting a region around the potential instance, wherein the area of the region is less than the area of the image; (c) determining whether the region includes an instance of the person by analyzing the region at a second resolution, greater than the first resolution; and (d) in accordance with a determination that the region includes the instance of the person, determining that the image includes the person.
- In yet another aspect, some implementations include a server system including one or more processors and memory coupled to the one or more processors, the memory storing one or more programs configured to be executed by the one or more processors, the one or more programs including instructions for performing any of the methods described herein.
- In yet another aspect, some implementations include a computing device including one or more processors and memory coupled to the one or more processors, the memory storing one or more programs configured to be executed by the one or more processors, the one or more programs including instructions for performing any of the methods described herein. For example, the methods described herein are performed by client device 504 (
FIG. 8 ) and/or smart device 204 (FIG. 9 ). - In yet another aspect, some implementations include a computing system including one or more processors and memory coupled to the one or more processors, the memory storing one or more programs configured to be executed by the one or more processors, the one or more programs including instructions for performing any of the methods described herein. For example, the methods described herein are performed by a plurality of devices coupled together to form a system, such as one or more client devices and one or more servers.
- In yet another aspect, some implementations include a non-transitory computer-readable storage medium storing one or more programs for execution by one or more processors of a storage device, the one or more programs including instructions for performing any of the methods described herein.
- Thus, devices, storage mediums, and computing systems are provided with methods for providing event alerts, thereby increasing the effectiveness, efficiency, and user satisfaction with such systems. Such methods may complement or replace conventional methods for providing event alerts.
- For a better understanding of the various described implementations, reference should be made to the Description of Implementations below, in conjunction with the following drawings in which like reference numerals refer to corresponding parts throughout the figures.
-
FIG. 1 is an example smart home environment, in accordance with some implementations. -
FIG. 2 is a block diagram illustrating an example network architecture that includes a smart home network, in accordance with some implementations. -
FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment ofFIG. 1 is integrated, in accordance with some implementations. -
FIG. 4 illustrates an abstracted functional view of the extensible devices and services platform ofFIG. 3 , with reference to a processing engine as well as devices of the smart home environment, in accordance with some implementations. -
FIG. 5 is a representative operating environment in which a server system interacts with client devices and hub devices communicatively coupled to local smart devices, in accordance with some implementations. -
FIG. 6 is a block diagram illustrating a representative hub device, in accordance with some implementations. -
FIG. 7A is a block diagram illustrating a representative server system, in accordance with some implementations. -
FIGS. 7B-7C illustrate various data structures used by some implementations. -
FIG. 8 is a block diagram illustrating a representative client device, in accordance with some implementations. -
FIG. 9 is a block diagram illustrating a representative smart device, in accordance with some implementations. -
FIG. 10 is a block diagram illustrating a representative smart home provider server system, in accordance with some implementations. -
FIG. 11A illustrates a representative system architecture for video analysis and categorization, in accordance with some implementations. -
FIG. 11B illustrates a representative processing pipeline for video analysis and categorization, in accordance with some implementations. -
FIG. 11C illustrates an example motion mask and an example event mask generated based on video data, in accordance with some implementations. -
FIG. 11D illustrates a representative process for learning event categories and categorizing motion events, in accordance with some implementations. -
FIG. 11E illustrates a representative process for identifying an event of interest based on selected zones of interest, in accordance with some implementations. -
FIG. 11F illustrates a representative process for segmenting and categorizing a motion event candidate, in accordance with some implementations. -
FIG. 11G illustrates a representative process for categorizing a motion event candidate, in accordance with some implementations. -
FIG. 12A illustrates a representative system and process for segmenting and categorizing a motion event candidate, in accordance with some implementations. -
FIG. 12B illustrates a representative system and process for providing an alert for a motion event candidate, in accordance with some implementations. -
FIGS. 13A-13C illustrate example user interfaces on a client device for reviewing and revising motion events, in accordance with some implementations. -
FIG. 14A illustrates a representative user interface for providing event alerts, in accordance with some implementations. -
FIGS. 14B-14C illustrate example event alerts, in accordance with some implementations. -
FIGS. 15A-15I illustrate examples of person detection in a video feed, in accordance with some implementations. -
FIGS. 16A-16C illustrate examples of alert logic for use with some implementations. -
FIGS. 17A-17C illustrate a flowchart representation of a method of person detection in a video feed, in accordance with some implementations. -
FIG. 18 illustrates a flowchart representation of a method for providing event alerts, in accordance with some implementations. - Like reference numerals refer to corresponding parts throughout the several views of the drawings.
- Reference will now be made in detail to implementations, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the various described implementations. However, it will be apparent to one of ordinary skill in the art that the various described implementations may be practiced without these specific details. In other instances, well-known methods, procedures, components, circuits, and networks have not been described in detail so as not to unnecessarily obscure aspects of the implementations.
- It is to be appreciated that “smart home environments” may refer to smart environments for homes such as a single-family house, but the scope of the present teachings is not so limited. The present teachings are also applicable, without limitation, to duplexes, townhomes, multi-unit apartment buildings, hotels, retail stores, office buildings, industrial buildings, and more generally to any living space or work space.
- It is also to be appreciated that while the terms user, customer, installer, homeowner, occupant, guest, tenant, landlord, repair person, and the like may be used to refer to the person or persons acting in the context of some particularly situations described herein, these references do not limit the scope of the present teachings with respect to the person or persons who are performing such actions. Thus, for example, the terms user, customer, purchaser, installer, subscriber, and homeowner may often refer to the same person in the case of a single-family residential dwelling, because the head of the household is often the person who makes the purchasing decision, buys the unit, and installs and configures the unit, and is also one of the users of the unit. However, in other scenarios, such as a landlord-tenant environment, the customer may be the landlord with respect to purchasing the unit, the installer may be a local apartment supervisor, a first user may be the tenant, and a second user may again be the landlord with respect to remote control functionality. Importantly, while the identity of the person performing the action may be germane to a particular advantage provided by one or more of the implementations, such identity should not be construed in the descriptions that follow as necessarily limiting the scope of the present teachings to those particular individuals having those particular identities.
-
FIG. 1 is an examplesmart home environment 100 in accordance with some implementations.Smart home environment 100 includes a structure 150 (e.g., a house, office building, garage, or mobile home) with various integrated devices. It will be appreciated that devices may also be integrated into asmart home environment 100 that does not include anentire structure 150, such as an apartment, condominium, or office space. Further, thesmart home environment 100 may control and/or be coupled to devices outside of theactual structure 150. Indeed, several devices in thesmart home environment 100 need not be physically within thestructure 150. For example, a device controlling apool heater 114 orirrigation system 116 may be located outside of thestructure 150. - The depicted
structure 150 includes a plurality ofrooms 152, separated at least partly from each other viawalls 154. Thewalls 154 may include interior walls or exterior walls. Each room may further include afloor 156 and aceiling 158. Devices may be mounted on, integrated with and/or supported by awall 154,floor 156 orceiling 158. - In some implementations, the integrated devices of the
smart home environment 100 include intelligent, multi-sensing, network-connected devices that integrate seamlessly with each other in a smart home network (e.g., 202FIG. 2 ) and/or with a central server or a cloud-computing system to provide a variety of useful smart home functions. Thesmart home environment 100 may include one or more intelligent, multi-sensing, network-connected thermostats 102 (hereinafter referred to as “smart thermostats 102”), one or more intelligent, network-connected, multi-sensing hazard detection units 104 (hereinafter referred to as “smart hazard detectors 104”), one or more intelligent, multi-sensing, network-connectedentryway interface devices 106 and 120 (hereinafter referred to as “smart doorbells 106” and “smart door locks 120”), and one or more intelligent, multi-sensing, network-connected alarm systems 122 (hereinafter referred to as “smart alarm systems 122”). - In some implementations, the one or more
smart thermostats 102 detect ambient climate characteristics (e.g., temperature and/or humidity) and control aHVAC system 103 accordingly. For example, a respectivesmart thermostat 102 includes an ambient temperature sensor. - The one or more
smart hazard detectors 104 may include thermal radiation sensors directed at respective heat sources (e.g., a stove, oven, other appliances, a fireplace, etc.). For example, asmart hazard detector 104 in a kitchen 153 includes a thermal radiation sensor directed at a stove/oven 112. A thermal radiation sensor may determine the temperature of the respective heat source (or a portion thereof) at which it is directed and may provide corresponding blackbody radiation data as output. - The
smart doorbell 106 and/or thesmart door lock 120 may detect a person's approach to or departure from a location (e.g., an outer door), control doorbell/door locking functionality (e.g., receive user inputs from a portable electronic device 166-1 to actuate bolt of the smart door lock 120), announce a person's approach or departure via audio or visual means, and/or control settings on a security system (e.g., to activate or deactivate the security system when occupants go and come). - The
smart alarm system 122 may detect the presence of an individual within close proximity (e.g., using built-in IR sensors), sound an alarm (e.g., through a built-in speaker, or by sending commands to one or more external speakers), and send notifications to entities or users within/outside of thesmart home network 100. In some implementations, thesmart alarm system 122 also includes one or more input devices or sensors (e.g., keypad, biometric scanner, NFC transceiver, microphone) for verifying the identity of a user, and one or more output devices (e.g., display, speaker). In some implementations, thesmart alarm system 122 may also be set to an “armed” mode, such that detection of a trigger condition or event causes the alarm to be sounded unless a disarming action is performed. - In some implementations, the
smart home environment 100 includes one or more intelligent, multi-sensing, network-connected wall switches 108 (hereinafter referred to as “smart wall switches 108”), along with one or more intelligent, multi-sensing, network-connected wall plug interfaces 110 (hereinafter referred to as “smart wall plugs 110”). The smart wall switches 108 may detect ambient lighting conditions, detect room-occupancy states, and control a power and/or dim state of one or more lights. In some instances, smart wall switches 108 may also control a power state or speed of a fan, such as a ceiling fan. The smart wall plugs 110 may detect occupancy of a room or enclosure and control supply of power to one or more wall plugs (e.g., such that power is not supplied to the plug if nobody is at home). - In some implementations, the
smart home environment 100 ofFIG. 1 includes a plurality of intelligent, multi-sensing, network-connected appliances 112 (hereinafter referred to as “smart appliances 112”), such as refrigerators, stoves, ovens, televisions, washers, dryers, lights, stereos, intercom systems, garage-door openers, floor fans, ceiling fans, wall air conditioners, pool heaters, irrigation systems, security systems, space heaters, window AC units, motorized duct vents, and so forth. In some implementations, when plugged in, an appliance may announce itself to the smart home network, such as by indicating what type of appliance it is, and it may automatically integrate with the controls of the smart home. Such communication by the appliance to the smart home may be facilitated by either a wired or wireless communication protocol. The smart home may also include a variety ofnon-communicating legacy appliances 140, such as old conventional washer/dryers, refrigerators, and the like, which may be controlled by smart wall plugs 110. Thesmart home environment 100 may further include a variety of partially communicatinglegacy appliances 142, such as infrared (“IR”) controlled wall air conditioners or other IR-controlled devices, which may be controlled by IR signals provided by thesmart hazard detectors 104 or the smart wall switches 108. - In some implementations, the
smart home environment 100 includes one or more network-connectedcameras 118 that are configured to provide video monitoring and security in thesmart home environment 100. Thecameras 118 may be used to determine occupancy of thestructure 150 and/orparticular rooms 152 in thestructure 150, and thus may act as occupancy sensors. For example, video captured by thecameras 118 may be processed to identify the presence of an occupant in the structure 150 (e.g., in a particular room 152). Specific individuals may be identified based, for example, on their appearance (e.g., height, face) and/or movement (e.g., their walk/gait).Cameras 118 may additionally include one or more sensors (e.g., IR sensors, motion detectors), input devices (e.g., microphone for capturing audio), and output devices (e.g., speaker for outputting audio). - The
smart home environment 100 may additionally or alternatively include one or more other occupancy sensors (e.g., thesmart doorbell 106, smart door locks 120, touch screens, IR sensors, microphones, ambient light sensors, motion detectors,smart nightlights 170, etc.). In some implementations, thesmart home environment 100 includes radio-frequency identification (RFID) readers (e.g., in eachroom 152 or a portion thereof) that determine occupancy based on RFID tags located on or embedded in occupants. For example, RFID readers may be integrated into thesmart hazard detectors 104. - The
smart home environment 100 may also include communication with devices outside of the physical home but within a proximate geographical range of the home. For example, thesmart home environment 100 may include a pool heater monitor 114 that communicates a current pool temperature to other devices within thesmart home environment 100 and/or receives commands for controlling the pool temperature. Similarly, thesmart home environment 100 may include anirrigation monitor 116 that communicates information regarding irrigation systems within thesmart home environment 100 and/or receives control information for controlling such irrigation systems. - By virtue of network connectivity, one or more of the smart home devices of
FIG. 1 may further allow a user to interact with the device even if the user is not proximate to the device. For example, a user may communicate with a device using a computer (e.g., a desktop computer, laptop computer, or tablet) or other portable electronic device 166 (e.g., a mobile phone, such as a smart phone). A webpage or application may be configured to receive communications from the user and control the device based on the communications and/or to present information about the device's operation to the user. For example, the user may view a current set point temperature for a device (e.g., a stove) and adjust it using a computer. The user may be in the structure during this remote communication or outside the structure. - As discussed above, users may control smart devices in the
smart home environment 100 using a network-connected computer or portableelectronic device 166. In some examples, some or all of the occupants (e.g., individuals who live in the home) may register theirdevice 166 with thesmart home environment 100. Such registration may be made at a central server to authenticate the occupant and/or the device as being associated with the home and to give permission to the occupant to use the device to control the smart devices in the home. An occupant may use theirregistered device 166 to remotely control the smart devices of the home, such as when the occupant is at work or on vacation. The occupant may also use their registered device to control the smart devices when the occupant is actually located inside the home, such as when the occupant is sitting on a couch inside the home. It should be appreciated that instead of or in addition to registeringdevices 166, thesmart home environment 100 may make inferences about which individuals live in the home and are therefore occupants and whichdevices 166 are associated with those individuals. As such, the smart home environment may “learn” who is an occupant and permit thedevices 166 associated with those individuals to control the smart devices of the home. - In some implementations, in addition to containing processing and sensing capabilities,
devices - In some implementations, the smart devices serve as wireless or wired repeaters. In some implementations, a first one of the smart devices communicates with a second one of the smart devices via a wireless router. The smart devices may further communicate with each other via a connection (e.g., network interface 160) to a network, such as the
Internet 162. Through theInternet 162, the smart devices may communicate with a smart home provider server system 164 (also called a central server system and/or a cloud-computing system herein). The smart homeprovider server system 164 may be associated with a manufacturer, support entity, or service provider associated with the smart device(s). In some implementations, a user is able to contact customer support using a smart device itself rather than needing to use other communication means, such as a telephone or Internet-connected computer. In some implementations, software updates are automatically sent from the smart homeprovider server system 164 to smart devices (e.g., when available, when purchased, or at routine intervals). - In some implementations, the
network interface 160 includes a conventional network device (e.g., a router), and thesmart home environment 100 ofFIG. 1 includes ahub device 180 that is communicatively coupled to the network(s) 162 directly or via thenetwork interface 160. Thehub device 180 is further communicatively coupled to one or more of the above intelligent, multi-sensing, network-connected devices (e.g., smart devices of the smart home environment 100). Each of these smart devices optionally communicates with thehub device 180 using one or more radio communication networks available at least in the smart home environment 100 (e.g., ZigBee, Z-Wave, Insteon, Bluetooth, Wi-Fi and other radio communication networks). In some implementations, thehub device 180 and devices coupled with/to the hub device can be controlled and/or interacted with via an application running on a smart phone, household controller, laptop, tablet computer, game console or similar electronic device. In some implementations, a user of such controller application can view the status of the hub device or coupled smart devices, configure the hub device to interoperate with smart devices newly introduced to the home network, commission new smart devices, and adjust or view settings of connected smart devices, etc. In some implementations the hub device extends capabilities of low capability smart device to match capabilities of the highly capable smart devices of the same type, integrates functionality of multiple different device types—even across different communication protocols, and is configured to streamline adding of new devices and commissioning of the hub device. In some implementations,hub device 180 further comprises a local storage device for storing data related to, or output by, smart devices ofsmart home environment 100. In some implementations, the data includes one or more of: video data output by a camera device, metadata output by a smart device, settings information for a smart device, usage logs for a smart device, and the like. - In some implementations,
smart home environment 100 includes a local storage device for storing data related to, or output by, smart devices ofsmart home environment 100. In some implementations, the data includes one or more of: video data output by a camera device (e.g., camera 118), metadata output by a smart device, settings information for a smart device, usage logs for a smart device, and the like. In some implementations, the local storage device is communicatively coupled to one or more smart devices via a smart home network (e.g.,smart home network 202,FIG. 2 ). In some implementations, the local storage device is selectively coupled to one or more smart devices via a wired and/or wireless communication network. In some implementations, the local storage device is used to store video data when external network conditions are poor. For example, the local storage device is used when an encoding bitrate ofcamera 118 exceeds the available bandwidth of the external network (e.g., network(s) 162). In some implementations, the local storage device temporarily stores video data from one or more cameras (e.g., camera 118) prior to transferring the video data to a server system (e.g.,server system 508,FIG. 5 ). In some implementations, the local storage device is a component of a camera device. In some implementations, each camera device includes a local storage. In some implementations, the local storage device performs some or all of the data processing described below with respect to server system 508 (FIG. 7A ). In some implementations, the local storage device stores some or all of the data described below with respect toserver system 508, such asdata storage database 7160,account database 7162,device information database 7164, andevent information database 7166. In some implementations, the local storage device performs some or all of the operations described herein with respect to theserver system 508. -
FIG. 2 is a block diagram illustrating anexample network architecture 200 that includes asmart home network 202 in accordance with some implementations. In some implementations, thesmart devices 204 in the smart home environment 100 (e.g.,devices hub device 180 to create a mesh network insmart home network 202. In some implementations, one or moresmart devices 204 in thesmart home network 202 operate as a smart home controller. Additionally and/or alternatively,hub device 180 operates as the smart home controller. In some implementations, a smart home controller has more computing power than other smart devices. In some implementations, a smart home controller processes inputs (e.g., fromsmart devices 204,electronic device 166, and/or smart home provider server system 164) and sends commands (e.g., tosmart devices 204 in the smart home network 202) to control operation of thesmart home environment 100. In some implementations, some of thesmart devices 204 in the smart home network 202 (e.g., in the mesh network) are “spokesman” nodes (e.g., 204-1) and others are “low-powered” nodes (e.g., 204-9). Some of the smart devices in thesmart home environment 100 are battery powered, while others have a regular and reliable power source, such as by connecting to wiring (e.g., to 120V line voltage wires) behind thewalls 154 of the smart home environment. The smart devices that have a regular and reliable power source are referred to as “spokesman” nodes. These nodes are typically equipped with the capability of using a wireless protocol to facilitate bidirectional communication with a variety of other devices in thesmart home environment 100, as well as with the smart homeprovider server system 164. In some implementations, one or more “spokesman” nodes operate as a smart home controller. On the other hand, the devices that are battery powered are the “low-power” nodes. These nodes tend to be smaller than spokesman nodes and typically only communicate using wireless protocols that require very little power, such as Zigbee, 6LoWPAN, etc. - In some implementations, some low-power nodes are incapable of bidirectional communication. These low-power nodes send messages, but they are unable to “listen”. Thus, other devices in the
smart home environment 100, such as the spokesman nodes, cannot send information to these low-power nodes. - In some implementations, some low-power nodes are capable of only a limited bidirectional communication. For example, other devices are able to communicate with the low-power nodes only during a certain time period.
- As described, in some implementations, the smart devices serve as low-power and spokesman nodes to create a mesh network in the
smart home environment 100. In some implementations, individual low-power nodes in the smart home environment regularly send out messages regarding what they are sensing, and the other low-powered nodes in the smart home environment—in addition to sending out their own messages—forward the messages, thereby causing the messages to travel from node to node (i.e., device to device) throughout thesmart home network 202. In some implementations, the spokesman nodes in thesmart home network 202, which are able to communicate using a relatively high-power communication protocol, such as IEEE 802.11, are able to switch to a relatively low-power communication protocol, such as IEEE 802.15.4, to receive these messages, translate the messages to other communication protocols, and send the translated messages to other spokesman nodes and/or the smart home provider server system 164 (using, e.g., the relatively high-power communication protocol). Thus, the low-powered nodes using low-power communication protocols are able to send and/or receive messages across the entiresmart home network 202, as well as over theInternet 162 to the smart homeprovider server system 164. In some implementations, the mesh network enables the smart homeprovider server system 164 to regularly receive data from most or all of the smart devices in the home, make inferences based on the data, facilitate state synchronization across devices within and outside of thesmart home network 202, and send commands to one or more of the smart devices to perform tasks in the smart home environment. - As described, the spokesman nodes and some of the low-powered nodes are capable of “listening.” Accordingly, users, other devices, and/or the smart home
provider server system 164 may communicate control commands to the low-powered nodes. For example, a user may use the electronic device 166 (e.g., a smart phone) to send commands over the Internet to the smart homeprovider server system 164, which then relays the commands to one or more spokesman nodes in thesmart home network 202. The spokesman nodes may use a low-power protocol to communicate the commands to the low-power nodes throughout thesmart home network 202, as well as to other spokesman nodes that did not receive the commands directly from the smart homeprovider server system 164. - In some implementations, a smart nightlight 170 (
FIG. 1 ), which is an example of asmart device 204, is a low-power node. In addition to housing a light source, thesmart nightlight 170 houses an occupancy sensor, such as an ultrasonic or passive IR sensor, and an ambient light sensor, such as a photo resistor or a single-pixel sensor that measures light in the room. In some implementations, thesmart nightlight 170 is configured to activate the light source when its ambient light sensor detects that the room is dark and when its occupancy sensor detects that someone is in the room. In other implementations, thesmart nightlight 170 is simply configured to activate the light source when its ambient light sensor detects that the room is dark. Further, in some implementations, thesmart nightlight 170 includes a low-power wireless communication chip (e.g., a ZigBee chip) that regularly sends out messages regarding the occupancy of the room and the amount of light in the room, including instantaneous messages coincident with the occupancy sensor detecting the presence of a person in the room. As mentioned above, these messages may be sent wirelessly (e.g., using the mesh network) from node to node (i.e., smart device to smart device) within thesmart home network 202 as well as over theInternet 162 to the smart homeprovider server system 164. - Other examples of low-power nodes include battery-operated versions of the
smart hazard detectors 104. Thesesmart hazard detectors 104 are often located in an area without access to constant and reliable power and may include any number and type of sensors, such as smoke/fire/heat sensors (e.g., thermal radiation sensors), carbon monoxide/dioxide sensors, occupancy/motion sensors, ambient light sensors, ambient temperature sensors, humidity sensors, and the like. Furthermore,smart hazard detectors 104 may send messages that correspond to each of the respective sensors to the other devices and/or the smart homeprovider server system 164, such as by using the mesh network as described above. - Examples of spokesman nodes include
smart doorbells 106,smart thermostats 102, smart wall switches 108, and smart wall plugs 110. These devices are often located near and connected to a reliable power source, and therefore may include more power-consuming components, such as one or more communication chips capable of bidirectional communication in a variety of protocols. - In some implementations, the
smart home environment 100 includes service robots 168 (FIG. 1 ) that are configured to carry out, in an autonomous manner, any of a variety of household tasks. - As explained above with reference to
FIG. 1 , in some implementations, thesmart home environment 100 ofFIG. 1 includes ahub device 180 that is communicatively coupled to the network(s) 162 directly or via thenetwork interface 160. Thehub device 180 is further communicatively coupled to one or more of the smart devices using a radio communication network that is available at least in thesmart home environment 100. Communication protocols used by the radio communication network include, but are not limited to, ZigBee, Z-Wave, Insteon, EuOcean, Thread, OSIAN, Bluetooth Low Energy and the like. In some implementations, thehub device 180 not only converts the data received from each smart device to meet the data format requirements of thenetwork interface 160 or the network(s) 162, but also converts information received from thenetwork interface 160 or the network(s) 162 to meet the data format requirements of the respective communication protocol associated with a targeted smart device. In some implementations, in addition to data format conversion, thehub device 180 further processes the data received from the smart devices or information received from thenetwork interface 160 or the network(s) 162 preliminary. For example, thehub device 180 can integrate inputs from multiple sensors/connected devices (including sensors/devices of the same and/or different types), perform higher level processing on those inputs—e.g., to assess the overall environment and coordinate operation among the different sensors/devices—and/or provide instructions to the different devices based on the collection of inputs and programmed processing. It is also noted that in some implementations, thenetwork interface 160 and thehub device 180 are integrated to one network device. Functionality described herein is representative of particular implementations of smart devices, control application(s) running on representative electronic device(s) (such as a smart phone), hub device(s) 180, and server(s) coupled to hub device(s) via the Internet or other Wide Area Network. All or a portion of this functionality and associated operations can be performed by any elements of the described system—for example, all or a portion of the functionality described herein as being performed by an implementation of the hub device can be performed, in different system implementations, in whole or in part on the server, one or more connected smart devices and/or the control application, or different combinations thereof -
FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment ofFIG. 1 is integrated, in accordance with some implementations. The extensible devices andservices platform 300 includes smart homeprovider server system 164. Each of the intelligent, network-connected devices described with reference toFIG. 1 (e.g., 102, 104, 106, 108, 110, 112, 114, 116 and 118, identified simply as “devices” inFIGS. 2-4 ) may communicate with the smart homeprovider server system 164. For example, a connection to theInternet 162 may be established either directly (for example, using 3G/4G connectivity to a wireless carrier), or through a network interface 160 (e.g., a router, switch, gateway, hub device, or an intelligent, dedicated whole-home controller node), or through any combination thereof. - In some implementations, the devices and
services platform 300 communicates with and collects data from the smart devices of thesmart home environment 100. In addition, in some implementations, the devices andservices platform 300 communicates with and collects data from a plurality of smart home environments across the world. For example, the smart homeprovider server system 164 collectshome data 302 from the devices of one or moresmart home environments 100, where the devices may routinely transmit home data or may transmit home data in specific instances (e.g., when a device queries the home data 302). Example collectedhome data 302 includes, without limitation, power consumption data, blackbody radiation data, occupancy data, HVAC settings and usage data, carbon monoxide levels data, carbon dioxide levels data, volatile organic compounds levels data, sleeping schedule data, cooking schedule data, inside and outside temperature humidity data, television viewership data, inside and outside noise level data, pressure data, video data, etc. - In some implementations, the smart home
provider server system 164 provides one ormore services 304 to smart homes and/or third parties.Example services 304 include, without limitation, software updates, customer support, sensor data collection/logging, remote access, remote or distributed control, and/or use suggestions (e.g., based on collected home data 302) to improve performance, reduce utility cost, increase safety, etc. In some implementations, data associated with theservices 304 is stored at the smart homeprovider server system 164, and the smart homeprovider server system 164 retrieves and transmits the data at appropriate times (e.g., at regular intervals, upon receiving a request from a user, etc.). - In some implementations, the extensible devices and
services platform 300 includes aprocessing engine 306, which may be concentrated at a single server or distributed among several different computing entities without limitation. In some implementations, theprocessing engine 306 includes engines configured to receive data from the devices of smart home environments 100 (e.g., via theInternet 162 and/or a network interface 160), to index the data, to analyze the data and/or to generate statistics based on the analysis or as part of the analysis. In some implementations, the analyzed data is stored as derivedhome data 308. - Results of the analysis or statistics may thereafter be transmitted back to the device that provided home data used to derive the results, to other devices, to a server providing a web page to a user of the device, or to other non-smart device entities. In some implementations, usage statistics (e.g., relative to use of other devices), usage patterns, and/or statistics summarizing sensor readings are generated by the
processing engine 306 and transmitted. The results or statistics may be provided via theInternet 162. In this manner, theprocessing engine 306 may be configured and programmed to derive a variety of useful information from thehome data 302. A single server may include one or more processing engines. - The derived
home data 308 may be used at different granularities for a variety of useful purposes, ranging from explicit programmed control of the devices on a per-home, per-neighborhood, or per-region basis (for example, demand-response programs for electrical utilities), to the generation of inferential abstractions that may assist on a per-home basis (for example, an inference may be drawn that the homeowner has left for vacation and so security detection equipment may be put on heightened sensitivity), to the generation of statistics and associated inferential abstractions that may be used for government or charitable purposes. For example,processing engine 306 may generate statistics about device usage across a population of devices and send the statistics to device users, service providers or other entities (e.g., entities that have requested the statistics and/or entities that have provided monetary compensation for the statistics). - In some implementations, to encourage innovation and research and to increase products and services available to users, the devices and
services platform 300 exposes a range of application programming interfaces (APIs) 310 to third parties, such ascharities 314, governmental entities 316 (e.g., the Food and Drug Administration or the Environmental Protection Agency), academic institutions 318 (e.g., university researchers), businesses 320 (e.g., providing device warranties or service to related equipment, targeting advertisements based on home data),utility companies 324, and other third parties. The APIs 310 are coupled to and permit third-party systems to communicate with the smart homeprovider server system 164, including theservices 304, theprocessing engine 306, thehome data 302, and the derivedhome data 308. In some implementations, the APIs 310 allow applications executed by the third parties to initiate specific data processing tasks that are executed by the smart homeprovider server system 164, as well as to receive dynamic updates to thehome data 302 and the derivedhome data 308. - For example, third parties may develop programs and/or applications (e.g., web applications or mobile applications) that integrate with the smart home
provider server system 164 to provide services and information to users. Such programs and applications may be, for example, designed to help users reduce energy consumption, to preemptively service faulty equipment, to prepare for high service demands, to track past service performance, etc., and/or to perform other beneficial functions or tasks. -
FIG. 4 illustrates an abstractedfunctional view 400 of the extensible devices andservices platform 300 ofFIG. 3 , with reference to aprocessing engine 306 as well as devices of the smart home environment, in accordance with some implementations. Even though devices situated in smart home environments will have a wide variety of different individual capabilities and limitations, the devices may be thought of as sharing common characteristics in that each device is a data consumer 402 (DC), a data source 404 (DS), a services consumer 406 (SC), and a services source 408 (SS). Advantageously, in addition to providing control information used by the devices to achieve their local and immediate objectives, the extensible devices andservices platform 300 may also be configured to use the large amount of data that is generated by these devices. In addition to enhancing or optimizing the actual operation of the devices themselves with respect to their immediate functions, the extensible devices andservices platform 300 may be directed to “repurpose” that data in a variety of automated, extensible, flexible, and/or scalable ways to achieve a variety of useful objectives. These objectives may be predefined or adaptively identified based on, e.g., usage patterns, device efficiency, and/or user input (e.g., requesting specific functionality). -
FIG. 4 showsprocessing engine 306 as including a number of processing paradigms 410. In some implementations,processing engine 306 includes a managedservices paradigm 410a that monitors and manages primary or secondary device functions. The device functions may include ensuring proper operation of a device given user inputs, estimating that (e.g., and responding to an instance in which) an intruder is or is attempting to be in a dwelling, detecting a failure of equipment coupled to the device (e.g., a light bulb having burned out), implementing or otherwise responding to energy demand response events, providing a heat-source alert, and/or alerting a user of a current or predicted future event or characteristic. In some implementations,processing engine 306 includes an advertising/communication paradigm 410b that estimates characteristics (e.g., demographic information), desires and/or products of interest of a user based on device usage. Services, promotions, products or upgrades may then be offered or automatically provided to the user. In some implementations,processing engine 306 includes asocial paradigm 410c that uses information from a social network, provides information to a social network (for example, based on device usage), and/or processes data associated with user and/or device interactions with the social network platform. For example, a user's status as reported to their trusted contacts on the social network may be updated to indicate when the user is home based on light detection, security system inactivation or device usage detectors. As another example, a user may be able to share device-usage statistics with other users. In yet another example, a user may share HVAC settings that result in low power bills and other users may download the HVAC settings to theirsmart thermostat 102 to reduce their power bills. - In some implementations,
processing engine 306 includes a challenges/rules/compliance/rewards paradigm 410d that informs a user of challenges, competitions, rules, compliance regulations and/or rewards and/or that uses operation data to determine whether a challenge has been met, a rule or regulation has been complied with and/or a reward has been earned. The challenges, rules, and/or regulations may relate to efforts to conserve energy, to live safely (e.g., reducing the occurrence of heat-source alerts) (e.g., reducing exposure to toxins or carcinogens), to conserve money and/or equipment life, to improve health, etc. For example, one challenge may involve participants turning down their thermostat by one degree for one week. Those participants that successfully complete the challenge are rewarded, such as with coupons, virtual currency, status, etc. Regarding compliance, an example involves a rental-property owner making a rule that no renters are permitted to access certain owner's rooms. The devices in the room having occupancy sensors may send updates to the owner when the room is accessed. - In some implementations,
processing engine 306 integrates or otherwise usesextrinsic information 412 from extrinsic sources to improve the functioning of one or more processing paradigms.Extrinsic information 412 may be used to interpret data received from a device, to determine a characteristic of the environment near the device (e.g., outside a structure that the device is enclosed in), to determine services or products available to the user, to identify a social network or social-network information, to determine contact information of entities (e.g., public-service entities such as an emergency-response team, the police or a hospital) near the device, to identify statistical or environmental conditions, trends or other information associated with a home or neighborhood, and so forth. -
FIG. 5 illustrates arepresentative operating environment 500 in which a server system 508 (also sometimes called a “hub device server system,” “video server system,” or “hub server system”) provides data processing for monitoring and facilitating review of motion events in video streams captured byvideo cameras 118. As shown inFIG. 5 , theserver system 508 receives video data from video sources 522 (including cameras 118) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or thesmart home environments 100 ofFIG. 1 ). Eachvideo source 522 may be bound to one or more reviewer accounts, and theserver system 508 provides video monitoring data for thevideo source 522 toclient devices 504 associated with the reviewer accounts. For example, the portableelectronic device 166 is an example of theclient device 504. - In some implementations, the smart home
provider server system 164 or a component thereof serves as theserver system 508. In some implementations, theserver system 508 is a dedicated video processing server that provides video processing services to video sources andclient devices 504 independent of other services provided by theserver system 508. - In some implementations, each of the
video sources 522 includes one ormore video cameras 118 that capture video and send the captured video to theserver system 508 substantially in real-time. In some implementations, each of thevideo sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one ormore cameras 118 and theserver system 508. The controller device receives the video data from the one ormore cameras 118, optionally, performs some preliminary processing on the video data, and sends the video data to theserver system 508 on behalf of the one ormore cameras 118 substantially in real-time. In some implementations, each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or theserver system 508. - As shown in
FIG. 5 , in accordance with some implementations, each of theclient devices 504 includes a client-side module 502. The client-side module 502 communicates with a server-side module 506 executed on theserver system 508 through the one ormore networks 162. The client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with the server-side module 506. The server-side module 506 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on arespective client device 504. The server-side module 506 also provides server-side functionalities for video processing and camera control for any number of thevideo sources 522, including any number of control devices and thecameras 118. - In some implementations, the server-
side module 506 includes one ormore processors 512, avideo storage database 514, device andaccount databases 516, an I/O interface to one ormore client devices 518, and an I/O interface to one ormore video sources 520. The I/O interface to one ormore clients 518 facilitates the client-facing input and output processing for the server-side module 506. Thedatabases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account. The I/O interface to one ormore video sources 520 facilitates communications with one or more video sources 522 (e.g., groups of one ormore cameras 118 and associated controller devices). Thevideo storage database 514 stores raw video data received from thevideo sources 522, as well as various types of metadata, such as motion events, event categories, event category models, event filters, and event masks, for use in data processing for event monitoring and review for each reviewer account. - Examples of a
representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices. - Examples of the one or
more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet. The one ormore networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol. - In some implementations, the
server system 508 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, theserver system 508 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of theserver system 508. In some implementations, theserver system 508 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices, or other data processing devices. - The server-
client environment 500 shown inFIG. 5 includes both a client-side portion (e.g., the client-side module 502) and a server-side portion (e.g., the server-side module 506). The division of functionalities between the client and server portions of operatingenvironment 500 can vary in different implementations. Similarly, the division of functionalities between thevideo source 522 and theserver system 508 can vary in different implementations. For example, in some implementations, client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the server system 508). Similarly, in some implementations, a respective one of thevideo sources 522 is a simple video capturing device that continuously captures and streams video data to theserver system 508 without no or limited local preliminary processing on the video data. Although many aspects of the present technology are described from the perspective of theserver system 508, the corresponding actions performed by theclient device 504 and/or thevideo sources 522 would be apparent to ones skilled in the art without any creative efforts. Similarly, some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts. Furthermore, some aspects of the present technology may be performed by theserver system 508, theclient device 504, and thevideo sources 522 cooperatively. - It should be understood that operating
environment 500 that involves theserver system 508, thevideo sources 522 and thevideo cameras 118 is merely an example. Many aspects of operatingenvironment 500 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g.,smart thermostats 102,smart hazard detectors 104,smart doorbells 106, smart wall plugs 110,appliances 112 and the like). - The electronic devices, the client devices, and the server system communicate with each other using the one or
more communication networks 162. In an example smart home environment, two or more devices (e.g., thenetwork interface device 160, thehub device 180, and the client devices 504-m) are located in close proximity to each other, such that they could be communicatively coupled in thesame sub-network 162A via wired connections, a WLAN or a Bluetooth Personal Area Network (PAN). The Bluetooth PAN is optionally established based on classical Bluetooth technology or Bluetooth Low Energy (BLE) technology. This smart home environment further includes one or more otherradio communication networks 162B through which at least some of the electronic devices of the video sources 522-n exchange data with thehub device 180. Alternatively, in some situations, some of the electronic devices of the video sources 522-n communicate with thenetwork interface device 160 directly via thesame sub-network 162A that couplesdevices network 162C), both the client device 504-m and the electronic devices of the video sources 522-n communicate directly via the network(s) 162 without passing thenetwork interface device 160 or thehub device 180. - In some implementations, during normal operation, the
network interface device 160 and thehub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device of the video sources 522-n. As explained above, thenetwork interface device 160 and thehub device 180 optionally communicate with each other via asub-network 162A. -
FIG. 6 is a block diagram illustrating arepresentative hub device 180 in accordance with some implementations. In some implementations, thehub device 180 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 602, one ormore communication interfaces 604,memory 606,radios 640, and one ormore communication buses 608 for interconnecting these components (sometimes called a chipset). In some implementations, thehub device 180 includes one ormore input devices 610 such as one or more buttons for receiving input. In some implementations, thehub device 180 includes one ormore output devices 612 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, etc. Furthermore, in some implementations, thehub device 180 uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, thehub device 180 includes alocation detection device 614, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of thehub device 180. - The
hub device 180 optionally includes one or more built-in sensors (not shown), including, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes. - The
radios 640 enable one or more radio communication networks in the smart home environments, and allow a hub device to communicate with smart devices. In some implementations, theradios 640 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document. - Communication interfaces 604 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
-
Memory 606 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 606, or alternatively the non-volatile memory withinmemory 606, includes a non-transitory computer readable storage medium. In some implementations,memory 606, or the non-transitory computer readable storage medium ofmemory 606, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating logic 616 including procedures for handling various basic system services and for performing hardware dependent tasks; - Hub
device communication module 618 for connecting to and communicating with other network devices (e.g.,network interface 160, such as a router that provides Internet connectivity, networked storage devices, network routing devices,server system 508, etc.) connected to one ormore networks 162 via one or more communication interfaces 604 (wired or wireless); -
Radio Communication Module 620 for connecting thehub device 180 to other devices (e.g., controller devices,smart devices 204 insmart home environment 100, client devices 504) via one or more radio communication devices (e.g., radios 640); - User interface module 622 for providing and displaying a user interface in which settings, captured data, and/or other data for one or more devices (e.g.,
smart devices 204 in smart home environment 100) can be configured and/or viewed; and -
Hub device database 624, including but not limited to:-
Sensor information 6240 for storing and managing data received, detected, and/or transmitted by one or more sensors of thehub device 180 and/or one or more other devices (e.g.,smart devices 204 in smart home environment 100); -
Device settings 6242 for storing operational settings for one or more devices (e.g., coupledsmart devices 204 in smart home environment 100); and - Communication protocol information 6244 for storing and managing protocol information for one or more protocols (e.g., standard wireless protocols, such as ZigBee, Z-Wave, etc., and/or custom or standard wired protocols, such as Ethernet).
-
-
- Each of the above identified elements (e.g., modules stored in memory 206 of hub device 180) may be stored in one or more of the previously mentioned memory devices (e.g., the memory of any of the smart devices in
smart home environment 100,FIG. 1 ), and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise rearranged in various implementations. In some implementations,memory 606, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 606, optionally, stores additional modules and data structures not described above. -
FIG. 7A is a block diagram illustrating theserver system 508 in accordance with some implementations. Theserver system 508 typically includes one or more processing units (CPUs) 702, one or more network interfaces 704 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices),memory 706, and one ormore communication buses 708 for interconnecting these components (sometimes called a chipset).Memory 706 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 706, optionally, includes one or more storage devices remotely located from one ormore processing units 702.Memory 706, or alternatively the non-volatile memory withinmemory 706, includes a non-transitory computer readable storage medium. In some implementations,memory 706, or the non-transitory computer readable storage medium ofmemory 706, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 710 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 712 for connecting theserver system 508 to other systems and devices (e.g., client devices, electronic devices, and systems connected to one ormore networks 162,FIGS. 1-5 ) via one or more network interfaces 704 (wired or wireless); - Server-
side module 714, which provides server-side functionalities for device control, data processing, and data review, including, but not limited to:-
Data receiving module 7140 for receiving data from electronic devices (e.g., video data from acamera 118,FIG. 1 ) via thehub device 180, and preparing the received data for further processing and storage in thedata storage database 7160; - Hub and
device control module 7142 for generating and sending server-initiated control commands to modify operation modes of electronic devices (e.g., devices of a smart home environment 100), and/or receiving (e.g., from client devices 504) and forwarding user-initiated control commands to modify operation modes of the electronic devices; -
Data processing module 7144 for processing the data provided by the electronic devices, and/or preparing and sending processed data to a device for review (e.g.,client devices 504 for review by a user), including, but not limited to:-
Event processor sub-module 7146 for processing event candidates and/or events within a received video stream (e.g., a video stream from cameras 188); -
Event categorizer sub-module 7148 for categorizing event candidates and/or events within the received video stream; -
User interface sub-module 7150 for communicating with a user (e.g., sending notifications and receiving user edits and zone definitions and the like), including, but not limited to:-
Alert sub-module 7151 generating and sending alerts to a user or client device; and
-
-
Object detection sub-module 7152 for identifying objects and/or entities within an image and/or a video feed, including, but not limited to:- Regioning sub-module 7154 for selecting and/or analyzing regions around potential instance(s) of objects and/or entities; and
-
-
-
Server database 716, including but not limited to:-
Data storage database 7160 for storing data associated with each electronic device (e.g., each camera) of each user account, as well as data processing models, processed data results, and other relevant metadata (e.g., names of data results, location of electronic device, creation time, duration, settings of the electronic device, etc.) associated with the data, wherein (optionally) all or a portion of the data and/or processing associated with thehub device 180 or smart devices are stored securely; -
Account database 7162 for storing account information for user accounts, including user account information such as user profiles 7163, information and settings for linked hub devices and electronic devices (e.g., hub device identifications), hub device specific secrets, relevant user and hardware characteristics (e.g., service tier, device model, storage capacity, processing capabilities, etc.), user interface settings, data review preferences, etc., where the information for associated electronic devices includes, but is not limited to, one or more device identifiers (e.g., MAC address and UUID), device specific secrets, and displayed titles; -
Device information database 7164 for storing device information related to one or more devices such asdevice profiles 7165, e.g., device identifiers and hub device specific secrets, independently of whether the corresponding hub devices have been associated with any user account; and -
Event information database 7166 for storing event information such asevent records 7168,event categories 7170,confidence criteria 7171, andalert criteria 7172, e.g., event log information, event categories, confidence levels, and the like.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise rearranged in various implementations. In some implementations,
memory 706, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 706, optionally, stores additional modules and data structures not described above. -
FIG. 7B illustrates various data structures used by some implementations, including an event record 7168-i, a user profile 7163-i, and a device profile 7165-i. The event record 7168-i corresponds to a motion event i and data for the motion event i. In some instances, the data for motion event i includes motion start (also sometimes called cuepoint)data 71681,event segments data 71682,raw video data 71683,motion end data 71684, event featuresdata 71685, scene featuresdata 71686, associated user information 71687, and associateddevices information 71688. In some instances, the event record 7168-i includes only a subset of the above data. In some instances, the event record 7168-i includes additional event data not shown such as data regarding event/motion masks. -
Motion start data 71681 includes date and time information such as a timestamp and optionally includes additional information such as information regarding the amount of motion present and/or the motion start location. Similarly,motion end data 71684 includes date and time information such as a timestamp and optionally includes additional information such as information regarding the amount of motion present and/or the motion end location. -
Event segments 71682 includes information regarding segmentation of motion event i. In some instances, event segments are stored separately from theraw video data 71683. In some instances, the event segments are stored at a lower display resolution than the raw video data. For example, the event segments are optionally stored at 480p or 780p and the raw video data is stored at 1080i or 1080p. Storing the event segments at a lower display resolution enables the system to devote less time and resources to retrieving and processing the event segments. In some instances, the event segments are not stored separately and the segmentation information includes references to theraw video data 71683 as well as date and time information for reproducing the event segments. - Event features
data 71685 includes information regarding event features such as event categorizations/classifications, object masks, motion masks, identified/recognized/tracked motion objects (also sometimes called blobs), information regarding features of the motion objects (e.g., object color, object dimensions, velocity, size changes, etc.), information regarding activity in zones of interest, and the like. Scene featuresdata 71686 includes information regarding the scene in which the event took place such as depth map information, information regarding the location of windows, televisions, fans, the ceiling/floor, etc., information regarding whether the scene is indoors or outdoors, information regarding zones of interest, and the like. - Associated user information 71687 includes information regarding users associated with the event such as users identified in the event, users receiving notification of the event, and the like. In some instances, the associated user information 71687 includes a link, pointer, or reference to a user profile 7163 for to the user.
Associated devices information 71688 includes information regarding the device or devices involved in the event (e.g., acamera 118 that recorded the event). In some instances, the associateddevices information 71688 includes a link, pointer, or reference to adevice profile 7165 for the device. - The user profile 7163-i corresponds to a user i associated with the smart home network (e.g., smart home network 202) such as a user of a
hub device 204, a user identified by ahub device 204, a user who receives notifications from ahub device 204 or from theserver system 508, and the like. In some instances, the user profile 7163-i includesuser preferences 71631,user settings 71632, associateddevices information 71633, and associatedevents information 71634. In some instances, the user profile 7163-i includes only a subset of the above data. In some instances, the user profile 7163-i includes additional user information not shown such as information regarding other users associated with the user i. - The
user preferences 71631 include explicit user preferences input by the user as well as implicit and/or inferred user preferences determined by the system (e.g.,server system 508 and/or client device 504). In some instances, the inferred user preferences are based on historical user activity and/or historical activity of other users. Theuser settings 71632 include information regarding settings set by the user i such as notification settings, device settings, and the like. In some instances, theuser settings 71632 include device settings for devices associated with the user i. -
Associated devices information 71633 includes information regarding devices associated with the user i such as devices within the user'ssmart home environment 100 and/orclient devices 504. In some instances, associateddevices information 71633 includes a link, pointer, or reference to acorresponding device profile 7165.Associated events information 71634 includes information regarding events associated with user i such as events in which user i was identified, events for which user i was notified, events corresponding to user i'ssmart home environment 100, and the like. In some instances, the associatedevents information 71634 includes a link, pointer, or reference to acorresponding event record 7168. - The device profile 7165-i corresponds to a device i associated with a smart home network (e.g., smart home network 202) such a
hub device 204, acamera 118, aclient device 504, and the like. In some instances, the device profile 7165-i includesdevice settings 71651, associateddevices information 71652, associateduser information 71653, associatedevent information 71654, andenvironmental data 71655. In some instances, the device profile 7165-i includes only a subset of the above data. In some instances, the device profile 7165-i includes additional device information not shown such as information regarding whether the device is currently active. -
Device settings 71651 include information regarding the current settings of device i such as positioning information, mode of operation information, and the like. In some instances, thedevice settings 71651 are user-specific and are set by respective users of the device i.Associated devices information 71652 includes information regarding other devices associated with device i such as other devices linked to device i and/or other devices in the same smart home network as device i. In some instances, associateddevices information 71652 includes a link, pointer, or reference to arespective device profile 7165 corresponding to the associated device. -
Associated user information 71653 includes information regarding users associated with the device such as users receiving notifications from the device, users registered with the device, users associated with the smart home network of the device, and the like. In some instances, associateduser information 71653 includes a link, pointer, or reference to a user profile 7163 corresponding to the associated user. -
Associated event information 71654 includes information regarding events associated with the device i such as historical events involving the device i. In some instances, associatedevent information 71654 includes a link, pointer, or reference to anevent record 7168 corresponding to the associated event. -
Environmental data 71655 includes information regarding the environment of device i such as information regarding whether the device is outdoors or indoors, information regarding the light level of the environment, information regarding the amount of activity expected in the environment (e.g., information regarding whether the device is in a private residence versus a busy commercial property), information regarding environmental objects (e.g., depth mapping information for a camera), and the like. -
FIG. 7C illustrates various data structures used by some implementations, includingevent categories 7170 andconfidence criteria 7171.Event categories 7170 include a plurality of categories, such as an unknown person(s)event category 71702, a known person(s)event category 71704, a zone event category 71706, ananimal event category 71708, avehicle event category 71710, anaudio event category 71712, and analert event category 71714. In some implementations, theevent categories 7170 are predetermined or preset. In some implementations, theevent categories 7170 are generated based on event clustering, such as described below with respect toFIG. 11D . In some implementations, theevent categories 7170 are arranged into an event category hierarchy (e.g., with the most important or most urgent categories at the top). For example, theevent categories 7170 are optionally arranged into an event category hierarchy such that unknown person(s)event 71702 is at the top of the hierarchy andalert event 71714 is at the bottom of the hierarchy. - In some implementations, the unknown person(s)
event category 71702 is assigned to events involving an unknown or unidentified person. In some implementations, the known person(s)event category 71704 is assigned to events involving a known (e.g., identified) person. In some implementations, the zone event category 71706 is assigned to events involving a zone of interest (e.g., a zone of interest defined by a user). In some implementations, theanimal event category 71708 is assigned to events involving an animal, such as a pet or livestock. In some implementations, theanimal event category 71708 is divided into two categories, one for known animals and one for unknown animals. In some implementations, thevehicle event category 71710 is assigned to events involving a vehicle, such as a car, truck, boat, or airplane. In some implementations, thevehicle event category 71710 is divided into two categories, one for recognized vehicles and one for unrecognized vehicles. In some implementations, theaudio event category 71712 is assigned to events involving audio (e.g., audio captured by a smart device in the smart home environment 100). In some implementations, theaudio event category 71712 is divided into multiple categories based on various characteristics of the audio event. For example, a category for human voices and a category for music. - In some implementations,
event categories 7170 include additional event categories not shown inFIG. 7C . In some implementations,event categories 7170 include event categories that are a combination of the event categories shown inFIG. 7C . For example, an event involving an unknown person in a zone of interest is optionally assigned to an event category for unknown person(s) and zone(s) of interest. In some implementations, an event involving multiple categories is assigned to the event category with the highest position in the event category hierarchy. - In some implementations, the
confidence criteria 7171 include a plurality of thresholds, such as 50% threshold % threshold % threshold 71712. In some implementations, each threshold is associated with a particular type of alert. In some implementations, each threshold is associated with a particular descriptive phrase for use in an alert. In some implementations, the system determines whether a confidence score exceeds a particular threshold, such asthreshold 71716. In some implementations, the system determines whether the confidence score meets or exceeds the particular threshold. - As an example of linking particular alerts to particular confidence levels, a ‘general’ alert is associated with a confidence score for person detection below the
confidence threshold 71716. In this example, the ‘general’ alert states “Activity detected.” Further, a ‘possible’ alert is associated with a confidence score for person detection aboveconfidence threshold 71716, but belowconfidence threshold 71714. In this example, the ‘possible’ alert states “Activity, possibly involving a person, detected.” Further, a ‘likely’ alert is associated with a confidence score for person detection aboveconfidence threshold 71714, but belowconfidence threshold 71712. In this example, the ‘likely’ alert states “Activity, likely involving a person, detected.” Further, a ‘person’ alert is associated with a confidence score for person detection aboveconfidence threshold 71712. In this example, the ‘person’ alert states “Activity involving a person detected.” -
FIG. 8 is a block diagram illustrating arepresentative client device 504 associated with a user account in accordance with some implementations. Theclient device 504, typically, includes one or more processing units (CPUs) 802, one ormore network interfaces 804,memory 806, and one ormore communication buses 808 for interconnecting these components (sometimes called a chipset). Optionally, the client device also includes a user interface 810 and one or more built-in sensors 890 (e.g., accelerometer and gyroscope). User interface 810 includes one ormore output devices 812 that enable presentation of media content, including one or more speakers and/or one or more visual displays. User interface 810 also includes one ormore input devices 814, including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls. Furthermore, some the client devices use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, the client device includes one or more cameras, scanners, or photo sensor units for capturing images (not shown). Optionally, the client device includes alocation detection device 816, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the client device. -
Memory 806 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 806, optionally, includes one or more storage devices remotely located from one ormore processing units 802.Memory 806, or alternatively the non-volatile memory withinmemory 806, includes a non-transitory computer readable storage medium. In some implementations,memory 806, or the non-transitory computer readable storage medium ofmemory 806, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 818 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 820 for connecting theclient device 504 to other systems and devices (e.g., client devices, electronic devices, and systems connected to one ormore networks 162,FIGS. 1-5 ) via one or more network interfaces 804 (wired or wireless); -
Input processing module 822 for detecting one or more user inputs or interactions from one of the one ormore input devices 814 and interpreting the detected input or interaction; - One or
more applications 824 for execution by the client device (e.g., games, social network applications, smart home applications, and/or other web or non-web based applications) for controlling devices (e.g., sending commands, configuring settings, etc. to hub devices and/or other client or electronic devices) and for reviewing data captured by the devices (e.g., device status and settings, captured data, or other information regarding the hub device or other connected devices); - User interface module 826 for providing and displaying a user interface in which settings, captured data, and/or other data for one or more devices (e.g.,
smart devices 204 in smart home environment 100) can be configured and/or viewed; - Client-
side module 828, which provides client-side functionalities for device control, data processing and data review, including but not limited to:- Hub device and
device control module 8280 for generating control commands for modifying an operating mode of the hub device or the electronic devices in accordance with user inputs; and -
Data review module 8282 for providing user interfaces for reviewing data processed by theserver system 508; -
Alert module 8284 for generating and/or presenting alerts for events occurring within the smart home environment, such as motion events, audio events, and alarm events; and
- Hub device and
-
Client data 830 storing data associated with the user account and electronic devices, including, but is not limited to:-
Account data 8300 storing information related to both user accounts loaded on the client device and electronic devices (e.g., of the video sources 522) associated with the user accounts, wherein such information includes cached login credentials, hub device identifiers (e.g., MAC addresses and UUIDs), electronic device identifiers (e.g., MAC addresses and UUIDs), user interface settings, display preferences, authentication tokens and tags, password keys, etc.; and - Local
data storage database 8302 for selectively storing raw or processed data associated with electronic devices (e.g., of thevideo sources 522, such as a camera 118).
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, modules or data structures, and thus various subsets of these modules may be combined or otherwise rearranged in various implementations. In some implementations,
memory 806, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 806, optionally, stores additional modules and data structures not described above. -
FIG. 9 is a block diagram illustrating a representativesmart device 204 in accordance with some implementations. In some implementations, the smart device 204 (e.g., any devices of asmart home environment 100,FIGS. 1 and 2 ) includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 902, one ormore communication interfaces 904,memory 906,radios 940, and one ormore communication buses 908 for interconnecting these components (sometimes called a chipset). In some implementations, user interface 910 includes one ormore output devices 912 that enable presentation of media content, including one or more speakers and/or one or more visual displays. In some implementations, user interface 910 also includes one ormore input devices 914, including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls. Furthermore, somesmart devices 204 use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, thesmart device 204 includes one or more image/video capture devices 918 (e.g., cameras, video cameras, scanners, photo sensor units). Optionally, the client device includes a location detection device 916, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of thesmart device 204. - The built-in
sensors 990 include, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes. - The
radios 940 enable one or more radio communication networks in the smart home environments, and allow asmart device 204 to communicate with other devices. In some implementations, theradios 940 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document. - Communication interfaces 904 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
-
Memory 906 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 906, or alternatively the non-volatile memory withinmemory 906, includes a non-transitory computer readable storage medium. In some implementations,memory 906, or the non-transitory computer readable storage medium ofmemory 906, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating logic 920 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Device communication module 922 for connecting to and communicating with other network devices (e.g.,network interface 160, such as a router that provides Internet connectivity, networked storage devices, network routing devices,server system 508, etc.) connected to one ormore networks 162 via one or more communication interfaces 904 (wired or wireless); -
Radio Communication Module 924 for connecting thesmart device 204 to other devices (e.g., controller devices,smart devices 204 insmart home environment 100, client devices 504) via one or more radio communication devices (e.g., radios 940) -
Input processing module 926 for detecting one or more user inputs or interactions from the one ormore input devices 914 and interpreting the detected inputs or interactions; - User interface module 928 for providing and displaying a user interface in which settings, captured data, and/or other data for one or more devices (e.g., the
smart device 204, and/or other devices in smart home environment 100) can be configured and/or viewed; - One or
more applications 930 for execution by the smart device 930 (e.g., games, social network applications, smart home applications, and/or other web or non-web based applications) for controlling devices (e.g., executing commands, sending commands, and/or configuring settings of thesmart device 204 and/or other client/electronic devices), and for reviewing data captured by devices (e.g., device status and settings, captured data, or other information regarding thesmart device 204 and/or other client/electronic devices); - Device-
side module 932, which provides device-side functionalities for device control, data processing and data review, including but not limited to:-
Command receiving module 9320 for receiving, forwarding, and/or executing instructions and control commands (e.g., from aclient device 504, from a smart homeprovider server system 164, from user inputs detected on the user interface 910, etc.) for operating thesmart device 204; -
Data processing module 9322 for processing data captured or received by one or more inputs (e.g.,input devices 914, image/video capture devices 918, location detection device 916), sensors (e.g., built-in sensors 990), interfaces (e.g., communication interfaces 904, radios 940), and/or other components of thesmart device 204, and for preparing and sending processed data to a device for review (e.g.,client devices 504 for review by a user); and
-
-
Device data 934 storing data associated with devices (e.g., the smart device 204), including, but is not limited to:-
Account data 9340 storing information related to user accounts loaded on thesmart device 204, wherein such information includes cached login credentials, smart device identifiers (e.g., MAC addresses and UUIDs), user interface settings, display preferences, authentication tokens and tags, password keys, etc.; and - Local
data storage database 9342 for selectively storing raw or processed data associated with the smart device 204 (e.g., video surveillance footage captured by a camera 118).
-
-
- In some implementations, a
smart device 204, such as acamera 118, performs some or all of the data processing described above with respect todata processing module 7144 of server system 508 (FIG. 7A ). In some implementations,data processing module 9322 performs some or all of the data processing described above with respect todata processing module 7144 ofserver system 508. In some implementations,device data 934 includes data described above with respect toserver database 716, such asevent categories 7170,confidence criteria 7171, andalert criteria 7172. - Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise rearranged in various implementations. In some implementations,
memory 906, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 906, optionally, stores additional modules and data structures not described above. -
FIG. 10 is a block diagram illustrating the smart homeprovider server system 164 in accordance with some implementations. In some implementations, the smart home provider server system is part of theserver system 508. In some implementations, the smart home provider server system comprisesserver system 508. The smart homeprovider server system 164, typically, includes one or more processing units (CPUs) 1002, one or more network interfaces 1004 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices),memory 1006, and one ormore communication buses 1008 for interconnecting these components (sometimes called a chipset).Memory 1006 includes high-speed random access memory, such as DRAM, SRAM, DDR SRAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 1006, optionally, includes one or more storage devices remotely located from one ormore processing units 1002.Memory 1006, or alternatively the non-volatile memory withinmemory 1006, includes a non-transitory computer readable storage medium. In some implementations,memory 1006, or the non-transitory computer readable storage medium ofmemory 1006, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 1010 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 1012 for connecting the smart homeprovider server system 164 to other systems and devices (e.g., client devices, electronic devices, and systems connected to one ormore networks 162,FIGS. 1-5 ) via one or more network interfaces 1004 (wired or wireless); - Server-
side module 1014, which provides server-side functionalities for device control, data processing and data review, including but not limited to:-
Data receiving module 10140 for receiving data from electronic devices (e.g., video data from acamera 118,FIG. 1 ), and preparing the received data for further processing and storage in thedata storage database 10160; -
Device control module 10142 for generating and sending server-initiated control commands to modify operation modes of electronic devices (e.g., devices of a smart home environment 100), and/or receiving (e.g., from client devices 504) and forwarding user-initiated control commands to modify operation modes of the electronic devices; -
Data processing module 10144 for processing the data provided by the electronic devices, and/or preparing and sending processed data to a device for review (e.g.,client devices 504 for review by a user); and
-
-
Server database 1016, including but not limited to:-
Data storage database 10160 for storing data associated with each electronic device (e.g., each camera) of each user account, as well as data processing models, processed data results, and other relevant metadata (e.g., names of data results, location of electronic device, creation time, duration, settings of the electronic device, etc.) associated with the data, wherein (optionally) all or a portion of the data and/or processing associated with the electronic devices are stored securely; and -
Account database 10162 for storing account information for user accounts, including user account information, information and settings for linked hub devices and electronic devices (e.g., hub device identifications), hub device specific secrets, relevant user and hardware characteristics (e.g., service tier, device model, storage capacity, processing capabilities, etc.), user interface settings, data review preferences, etc., where the information for associated electronic devices includes, but is not limited to, one or more device identifiers (e.g., MAC address and UUID), device specific secrets, and displayed titles.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise rearranged in various implementations. In some implementations,
memory 1006, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 1006, optionally, stores additional modules and data structures not described above. - Furthermore, in some implementations, the functions of any of the devices and systems described herein (e.g.,
hub device 180,server system 508,client device 504,smart device 204, smart home provider server system 164) are interchangeable with one another and may be performed by any of the other devices or systems, where the corresponding sub-modules of these functions may additionally and/or alternatively be located within and executed by any of the devices and systems. As one example, ahub device 180 may determine when a motion event candidate has started and generate corresponding motion start information, or theserver system 508 may make the determination and generate the information instead. The devices and systems shown in and described with respect toFIGS. 6-10 are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations. -
FIG. 11A illustrates arepresentative system architecture 1100 andFIG. 11B illustrates a correspondingdata processing pipeline 1112. In some implementations, theserver system 508 includes functional modules for anevent processor 7146, anevent categorizer 7148, and a user-facingfrontend 7150, as discussed above with respect toFIG. 7A . Theevent processor 7146 obtains the motion event candidates (e.g., by processing the video stream or by receiving the motion start information from the video source 522). Theevent categorizer 7148 categorizes the motion event candidates into different event categories. The user-facingfrontend 7150 generates event alerts and facilitates review of the motion events by a reviewer through a review interface on aclient device 504. The client facing frontend also receives user edits on the event categories, user preferences for alerts and event filters, and zone definitions for zones of interest. The event categorizer optionally revises event categorization models and results based on the user edits received by the user-facing frontend. Theserver system 508 also includes a video andsource data database 1106, eventcategorization modules database 1108, and event data andevent masks database 1110. In some implementations, each of these databases is part of the server database 716 (e.g., part of data storage database 7160). - The
server system 508 receives thevideo stream 1104 from thevideo source 522 and optionally receives motionevent candidate information 1102 such as motion start information andvideo source information 1103 such as device settings for camera 118 (e.g., adevice profile 7165 for camera 118). In some implementations, theevent processor sub-module 7146 communicates with thevideo source 522. In some implementations, the server system sends alerts formotion events 1105 and motionevent timeline information 1107 to theclient device 504. In some implementations, theclient device 504 receives thealerts 1105 and presents them to a user of the client device. In some implementations, the server system sends alert information to theclient device 504 and the client device generates the alert based on the alert information. Theserver system 508 optionally receives user information from theclient device 504 such as edits onevent categories 1109 andzone definitions 1111. - The
data processing pipeline 1112 processes a live video feed received from a video source 522 (e.g., including acamera 118 and an optional controller device) in real-time to identify and categorize motion events in the live video feed, and sends real-time event alerts and a refreshed event timeline to aclient device 504 associated with a reviewer account bound to thevideo source 522. Thedata processing pipeline 1112 also processes stored video feeds from avideo source 522 to reevaluate and/or re-categorize motion events as necessary, such as when new information is obtained regarding the motion event and/or when new information is obtained regarding motion event categories (e.g., a new activity zone is obtained from the user). - After video data is captured at the video source 522 (1113), the video data is processed to determine if any potential motion event candidates are present in the video stream. A potential motion event candidate detected in the video data is also sometimes referred to as a cuepoint. Thus, the initial detection of a motion event candidate is referred to as motion start detection and/or cuepoint detection. Motion start detection (1114) triggers performance of a more thorough event identification process on a video segment (also sometimes called a “video slice” or “slice”) corresponding to the motion event candidate. In some implementations, the video data is initially processed at the
video source 522. Thus, in some implementations, the video source sends motion event candidate information, such as motion start information, to theserver system 508. In some implementations, the video data is processed at theserver system 508 for motion start detection. In some implementations, the video stream is stored on server system 508 (e.g., in video and source data database 1106). In some implementations, the video stream is stored on a server distinct fromserver system 508. In some implementations, after a cuepoint is detected, the relevant portion of the video stream is retrieved from storage (e.g., from video and source data database 1106). - In some implementations, the more thorough event identification process includes segmenting (1115) the video stream into multiple segments then categorizing the motion event candidate within each segment (1116). In some implementations, categorizing the motion event candidate includes an aggregation of background factors, motion entity detection identification, motion vector generation for each motion entity, motion entity features, and scene features to generate motion features (11166) for the motion event candidate. In some implementations, the event identification process further includes categorizing each segment (11167), generating or updating a motion event log (11168) based on categorization of a segment, generating an alert for the motion event (11169) based on categorization of a segment, categorizing the complete motion event (1119), updating the motion event log (1120) based on the complete motion event, and generating an alert for the motion event (1121) based on the complete motion event. In some implementations, a categorization is based on a determination that the motion event candidate is within a particular zone of interest. In some implementations, a categorization is based on a determination that the motion event candidate involves one or more particular zones of interest. In some implementations, the categorization is based on detection of one or more objects (e.g., a particular vehicle) and/or one or more entities (e.g., a family member or a family pet). In some implementations, the categorization is based on a confidence level for the detection of the one or more objects and/or the one or more entities. For example, a first category is utilized for a confidence level that meets or exceeds a particular threshold and a second category is utilized for a confidence level that does not meet or exceed the particular threshold.
- The event analysis and categorization process may be performed by the
video source 522 and theserver system 508 cooperatively, and the division of the tasks may vary in different implementations, for different equipment capability configurations, and/or for different network and server load situations. After theserver system 508 categorizes the motion event candidate, the result of the event detection and categorization may be sent to a reviewer associated with thevideo source 522. - In some implementations, the
server system 508 also determines an event mask for each motion event candidate and caches the event mask for later use in event retrieval based on selected zone(s) of interest. - In some implementations, the
server system 508 stores raw or compressed video data (e.g., in a video and source data database 1106), event categorization models (e.g., in an event categorization model database 1108), and event masks and other event metadata (e.g., in an event data and event mask database 1110) for each of the video sources 522. In some implementations, the video data is stored at one or more display resolutions such as 480p, 780p, 1080i, 1080p, and the like. - The above is an overview of the
system architecture 1100 and thedata processing pipeline 1112 for event processing in video monitoring. More details of the processing pipeline and processing techniques are provided below. - As shown in
FIG. 11A , thesystem architecture 1100 includes thevideo source 522. Thevideo source 522 transmits a live video feed to theremote server system 508 via one or more networks (e.g., the network(s) 162). In some implementations, the transmission of the video data is continuous as the video data is captured by thecamera 118. In some implementations, the transmission of video data is irrespective of the content of the video data, and the video data is uploaded from thevideo source 522 to theserver system 508 for storage irrespective of whether any motion event has been captured in the video data. In some implementations, the video data may be stored at a local storage device of thevideo source 522 by default, and only video portions corresponding to motion event candidates detected in the video stream are uploaded to the server system 508 (e.g., in real-time). - In some implementations, the
video source 522 dynamically determines at what display resolution the video stream is to be uploaded to theserver system 508. In some implementations, thevideo source 522 dynamically determines which parts of the video stream are to be uploaded to theserver system 508. For example, in some implementations, depending on the current server load and network conditions, thevideo source 522 optionally prioritizes the uploading of video portions corresponding to newly detected motion event candidates ahead of other portions of the video stream that do not contain any motion event candidates; or thevideo source 522 uploads the video portions corresponding to newly detected motion event candidates at higher display resolutions than the other portions of the video stream. This upload prioritization helps to ensure that important motion events are detected and alerted to the reviewer in real-time, even when the network conditions and server load are less than optimal. In some implementations, thevideo source 522 implements two parallel upload connections, one for uploading the continuous video stream captured by thecamera 118, and the other for uploading video portions corresponding to detected motion event candidates. At any given time, thevideo source 522 determines whether the uploading of the continuous video stream needs to be suspended temporarily to ensure that sufficient bandwidth is given to the uploading of the video segments corresponding to newly detected motion event candidates. - In some implementations, the video stream uploaded for cloud storage is at a lower quality (e.g., lower resolution, lower frame rate, higher compression, etc.) than the video segments uploaded for motion event processing.
- As shown in
FIG. 11A , thevideo source 522 includes acamera 118, and an optional controller device. In some implementations, thecamera 118 includes sufficient on-board processing power to perform all necessary local video processing tasks (e.g., cuepoint detection for motion event candidates, video uploading prioritization, network connection management, etc.), and thecamera 118 communicates with theserver system 508 directly, without any controller device acting as an intermediary. In some implementations, thecamera 118 captures the video data and sends the video data to the controller device for the necessary local video processing tasks. The controller device optionally performs the local processing tasks for multiple cameras. For example, there may be multiple cameras in one smart home environment (e.g., thesmart home environment 100,FIG. 1 ), and a single controller device receives the video data from each camera and processes the video data to detect motion event candidates in the video stream from each camera. The controller device is responsible for allocating sufficient outgoing network bandwidth to transmitting video segments containing motion event candidates from each camera to the server before using the remaining bandwidth to transmit the video stream from each camera to theserver system 508. In some implementations, the continuous video stream is sent and stored at one server facility while the video segments containing motion event candidates are send to and processed at a different server facility. - As shown in
FIG. 11A , after video data is captured by thecamera 118, the video data is optionally processed locally at thevideo source 522 in real-time to determine whether there are any cuepoints in the video data that warrant performance of a more thorough event identification process. Thus, in some implementations, thevideo source 522 sends motion event candidate information, such as cuepoint detections, to theserver system 508. In some implementations, thevideo source 522 sends additional metadata, such as the amount of motion between frames, to theserver system 508. - Cuepoint detection is a first layer motion event identification which is intended to be slightly over-inclusive, such that real motion events are a subset of all identified cuepoints. In some implementations, cuepoint detection is based on the number of motion pixels in each frame of the video stream. In some implementations, any method of identifying motion pixels in a frame may be used. For example, a Gaussian mixture model is optionally used to determine the number of motion pixels in each frame of the video stream. In some implementations, when the total number of motion pixels in a current image frame exceeds a predetermined threshold, a cuepoint is detected. In some implementations, a running sum of total motion pixel count is calculated for a predetermined number of consecutive frames as each new frame is processed, and a cuepoint is detected when the running sum exceeds a predetermined threshold. In some implementations, a profile of total motion pixel count over time is obtained. In some implementations, a cuepoint is detected when the profile of total motion pixel count for a current frame sequence of a predetermined length (e.g., 30 seconds) meets a predetermined trigger criterion (e.g., total pixel count under the profile>a threshold motion pixel count). In some implementations, the cuepoint detection calculations are based on where in the scene the motion occurs. For example, a lower threshold is required for motion occurring in or near a preset zone of interest. In some implementations, a higher threshold is required for motion occurring in or near a preset zone that has been denoted as likely containing less significant motion events (e.g., a zone of interest where notifications are disabled). In some implementations, cuepoints are suppressed for motion occurring within a zone of interest where notifications are disabled.
- In some implementations, cuepoint detection is based on one or more additional inputs such as audio inputs to an associated microphone. For example, a cuepoint may be based at least in-part on the sound of breaking glass and/or a human voice.
- In some implementations, the beginning of a cuepoint is the time when the total motion pixel count meets a predetermined threshold (e.g., 50 motion pixels). In some implementations, the start of the motion event candidate corresponding to a cuepoint is the beginning of the cuepoint. In some implementations, the start of the motion event candidate is a predetermined lead time (e.g., 5 seconds) before the beginning of the cuepoint. In some implementations, the start of a motion event candidate is used to process a video portion corresponding to the motion event candidate for a more thorough event identification process.
- In some implementations, the thresholds for detecting cuepoints are adjusted over time based on performance feedback. For example, if too many false positives are detected, the threshold for motion pixel count is optionally increased. If too many motion events are missed, the threshold for motion pixel count is optionally decreased. In some implementations, the thresholds for detecting cuepoints are based on where in the scene the motion is detected. In some implementations, the thresholds are based on whether the motion is detected within a particular zone of interest. In some implementations, the threshold are set and/or adjusted by users (e.g., a user of
client device 504,FIG. 5 ). For example, a threshold is adjusted by adjusting a corresponding motion sensitivity slider within a user interface. - In some implementations, before the profile of the total motion pixel count for a frame sequence is evaluated for cuepoint detection, the profile is smoothed to remove short dips in total motion pixel count. In general, once motion has started, momentary stops or slowing downs may occur during the motion, and such momentary stops or slowing downs are reflected as short dips in the profile of total motion pixel count. Removing these short dips from the profile helps to provide a more accurate measure of the extent of motion for cuepoint detection. Since cuepoint detection is intended to be slightly over-inclusive, by smoothing out the motion pixel profile, cuepoints for motion events that contain momentary stops or slowing downs of the moving objects would less likely be missed by the cuepoint detection.
- In some implementations, a change in camera state (e.g., IR mode, AE mode, DTPZ settings, etc.) may change pixel values in the image frames drastically even though no motion has occurred in the scene captured in the video stream. In some implementations, each camera state change is noted in the cuepoint detection process, and a detected cuepoint is optionally suppressed if its occurrence overlaps with one of the predetermined camera state changes. In some implementations, the total motion pixel count in each frame is weighed differently if accompanied with a camera state change. For example, the total motion pixel count is optionally adjusted by a fraction (e.g., 10%) if it is accompanied by a camera state change, such as an IR mode switch. In some implementations, the motion pixel profile is reset after each camera state change.
- Sometimes, a fast initial increase in total motion pixel count may indicate a global scene change or a lighting change, e.g., when the curtain is drawn, or when the camera is pointed in a different direction or moved to a different location by a user. In some implementations, when the initial increase in total motion pixel count in the profile of total motion pixel count exceeds a predetermined rate, a detected cuepoint is optionally suppressed. In some implementations, the suppressed cuepoint undergoes an edge case recovery process to determine whether the cuepoint is in fact not due to lighting change or camera movement, but rather a valid motion event candidate that needs to be recovered and reported for subsequent event processing. In some implementations, the profile of motion pixel count is reset when such fast initial increase in total motion pixel count is detected and a corresponding cuepoint is suppressed.
- In some implementations, a cuepoint is evaluated based on an importance score associated with the cuepoint. The importance score is generated based on factors such as whether one or more zones of interest are involved, the amount of motion detected, the type of motion detected (e.g., velocity, angle, etc.), and the like. In some implementations, if the cuepoint is associated with motion occurring within a zone of interest where notifications are disabled, the importance score is decreased. In some implementations, if the cuepoint is associated with motion occurring in a zone of interest where notifications are enabled, the importance score is increased.
- In some implementations, the cuepoint detection generally occurs at the
video source 522, and immediately after a cuepoint is detected in the live video stream, thevideo source 522 sends an event alert to theserver system 508 to trigger the subsequent event processing. In some implementations, thevideo source 522 includes a video camera with very limited on-board processing power and no controller device, and the cuepoint detection described herein is performed by theserver system 508 on the continuous video stream transmitted from the camera to theserver system 508. - In some implementations, the
video source 522 sends additionalvideo source information 1103 to theserver system 508. This additionalvideo source information 1103 may include information regarding a camera state (e.g., IR mode, AE mode, DTPZ settings, etc.) and/or information regarding the environment in which thevideo source 522 is located (e.g., indoors, outdoors, night-time, day-time, etc.). In some implementations, thevideo source information 1103 is used by theserver system 508 to perform cuepoint detection and/or to categorize motion event candidates within thevideo stream 1104. - In some implementations, after the cuepoint detection, the video portion after the detected cuepoint is divided into multiple segments, as shown in
FIG. 11F . In some implementations, the segmentation continues until motion end information (sometimes also called an “end-of-motion signal”) is obtained. In some implementations, the segmentation occurs within the server system 508 (e.g., by the event processor module 7146). - In some implementations, each of the multiple segments is of the same or similar duration (e.g., each segment has a 10-12 second duration). In some implementations, the first segment has a shorter duration than the subsequent segments. Keeping the first segment short allows for real time initial categorization and alerts based on processing the first segment. The initial categorization may then be revised based on processing of subsequent segments. In some implementations, a new segment is generated if the motion entity enters a new zone of interest.
- In some implementations, the motion end information is based on a change in the motion detected within the video stream. The motion end information is, optionally, generated when the amount of motion detected within the video stream falls below a threshold amount or declines steeply. In some implementations, the motion end information is generated by the
video source 522, while in other implementations, the motion end information is generated by the server system 508 (e.g., the event processor module 7146). In some implementations, the motion end information is generated based on a particular amount of time passing since the motion start information was generated (e.g., a time-out event). For example, motion end information may be generated for a particular motion event candidate if either the amount of motion meets predetermined criterion (e.g., 1%, 5%, or 15% of the pixels in the scene) or the duration of the motion event candidate meets predetermined criterion (e.g., 30, 60, or 120 seconds), whichever occurs first. - As shown in
FIG. 11B , in some implementations, the video stream is captured (1113) and the motion start information corresponding to a motion event candidate is obtained (1114). After the motion start information is obtained, the video stream is segmented (1115) as discussed above. Next, each segment is processed and categorized (1116). As will be discussed in greater detail below, this processing includes obtaining information about the background in the scene (e.g., background factors) (11161), identifying motion entities (11162), and obtaining motion vectors (11163). In some implementations, the processing also includes identifying additional features of each motion entity (motion entity features), such as the amount of a particular color within the motion entity and/or the height-to-width ratio of the motion entity (11164). In some implementations, identifying motion entities (11162) includes performing object and/or entity recognition on the motion entities. In some implementations, the motion features include information regarding what, if any, zones of interest were involved with the motion entity. In some implementations, the processing also includes identifying additional features of the scene, such as the ratio of particular colors within the scene, audio information corresponding to the scene, and/or the total amount of motion within the scene (11165). In some implementations, the scene features include information regarding zones of interest within the scene. Next, the background factors, motion entities, motion vectors, and any additional motion entity and/or scene features are aggregated to generate resulting motion features (11166). The resulting motion features are categorized and a category is assigned to the motion event candidate (11167). In some implementations, a log entry is generated for the motion event candidate (11168), and the assigned category is stored within. In some implementations, an alert is generated and sent to the client device 504 (11169). Once the motion end information is obtained, the final segment is processed and categorized (1116). In some implementations, after all segments are categorized, multi-segment features are processed (1118). These multi-segment features optionally include features generated by comparing motion event categories, event masks, motion entity features, and the like from the various segments comprising the event. For example, motion event masks for individual segments are combined to form a single motion event mask across all segments. In some implementations, after the multi-segment features are processed, an event category is assigned based on the multi-segment features (1119). In some implementations, the event category is assigned based on the multi-segment features and the categories assigned to the individual segments. In some implementations, the event log corresponding to the motion event candidate is updated (1120). In some implementations, an alert is generated based on the event category (1121). In some implementations, the alert is based on a confidence level for the event category. - In some implementations, after a motion event candidate is detected in the video stream, a video portion corresponding to the motion event candidate, or a particular segment within the video portion, is used to identify a motion track of a motion entity in the video segment. The identification of motion track is optionally performed locally at the
video source 522 or remotely at theserver system 508. In some implementations, motion track information is included in the motionevent candidate information 1102 sent from thevideo source 522 to theserver system 508. In some implementations, the identification of the motion track based on a video segment corresponding to a motion event candidate is performed at theserver system 508 by an event processor module. In some implementations, the event processor module receives an alert for a cuepoint detected in the video stream, and retrieves the video portion corresponding to the cuepoint from cloud storage (e.g., thevideo data database 1106,FIG. 11A ) or from thevideo source 522. In some implementations, the video portion used to identify the motion track may be of higher quality than the video uploaded for cloud storage, and the video portion is retrieved from thevideo source 522 separately from the continuous video feed uploaded from thevideo source 522. - In some implementations, after the event processor module obtains the video portion corresponding to a motion event candidate, the
event processor module 7146 obtains background factors and performs motion entity detection identification, motion vector generation for each motion entity, and feature identification. Once theevent processor module 7146 completes these tasks, theevent categorizer module 7148 aggregates all of the information and generates a categorization for the motion event candidate. In some implementations, false positive suppression is optionally performed to reject some motion event candidates before the motion event candidates are submitted for event categorization. In some implementations, determining whether a motion event candidate is a false positive includes determining whether the motion event candidate occurred in a particular zone. In some implementations, determining whether a motion event candidate is a false positive includes analyzing an importance score for the motion event candidate. The importance score for the motion event candidate is optionally the same as the importance score for the corresponding cuepoint, or incorporates the importance score for the corresponding cuepoint. The importance score for a motion event candidate is optionally based on zones of interest involved with the motion event candidate, background features, motion vectors, scene features, entity features, motion features, motion tracks, and the like. - In some implementations, the
video source 522 has sufficient processing capabilities to perform, and does perform, the background estimation, motion entity identification, the motion vector generation, and/or the feature identification. - In some implementations, the motion vector representing a motion event candidate is a simple two-dimensional linear vector defined by a start coordinate and an end coordinate of a motion entity (also sometimes called a “motion object”) in a scene depicted in the video portion, and the motion event categorization is based on the motion vector. In some implementations, a motion vector for a motion event candidate is independently generated for each segment. In some implementations, a single motion vector is used for all segments and the motion vector is revised as each segment is processed. The advantage of using the simple two-dimensional linear motion vector for event categorization is that the event data is very compact, and fast to compute and transmit over a network. When network bandwidth and/or server load is constrained, simplifying the representative motion vector and off-loading the motion vector generation from the event processor module of the
video server system 508 to thevideo source 522 can help to realize the real-time event categorization and alert generation for many video sources in parallel. - In some implementations, after motion tracks in a video segment corresponding to a motion event candidate are determined, track lengths for the motion tracks are determined. In some implementations, the track lengths are independently determined for each segment. In some implementations, the track lengths are revised as each subsequent segment is processed. In some implementations, “short tracks” with track lengths smaller than a predetermined threshold (e.g., 8 frames) are suppressed, as they are likely due to trivial movements, such as leaves shifting in the wind, water shimmering in the pond, etc. In some implementations, pairs of short tracks that are roughly opposite in direction are suppressed as “noisy tracks.” In some implementations, after the track suppression, if there are no motion tracks remaining for the video segment, the cuepoint is determined to be a false positive, and no motion event candidate is sent to the event categorizer for event categorization. In some implementations, after the track suppression, if there are no motion tracks remaining, the motion event candidate is categorized as a non-event. If at least one motion track remains after the false positive suppression is performed, a motion vector is generated for each remaining motion track. In other words, multiple motion entities may be identified within a particular video segment. The false positive suppression occurring after the cuepoint detection and before the motion vector generation is the second layer false positive suppression, which removes false positives based on the characteristics of the motion tracks.
- In some implementations, motion entity identification is performed by subtracting the estimated background from each frame of the video segment. A foreground motion mask is then obtained by masking all pixel locations that have no motion pixels. In some implementations, the background factors obtained by the event processor module include a foreground motion mask. An example of a motion mask is shown in
FIG. 11C -(a). The example motion mask shows the motion pixels in one frame of the video segment in white, and the rest of the pixels in black. Once motion entities are identified in each frame, the same motion entity across multiple frames of the video segment are correlated through a matching algorithm (e.g., a Hungarian matching algorithm), and a motion track for the motion entity is determined based on the “movement” of the motion entity across the multiple frames of the video segment. - In some implementations, the motion track is used to generate a two-dimensional linear motion vector which only takes into account the beginning and end locations of the motion track (e.g., as shown by the dotted arrow in
FIG. 11C -(b)). In some implementations, the beginning and end locations are determined on a per segment basis. In some implementations, the beginning location is determined based on the first segment and the end location is determined based on the last segment. In some implementations, the motion vector is a non-linear motion vector that traces the entire motion track from the first frame to the last frame of the frame sequence in which the motion entity has moved. - In some implementations, the motion masks corresponding to each motion entity detected in the video segment are aggregated across all frames of the video segment to create an event mask for the motion event involving the motion entity. In some implementations, an event mask is created for each individual segment. In some implementations, an event mask is created from a first segment and is updated as subsequent segments are processed. As shown in
FIG. 11C -(b), in the event mask, all pixel locations containing motion pixels in less than a threshold number of frames (and/or less than a threshold fraction of frames) are masked and shown in black, while all pixel locations containing motion pixels in at least the threshold number of frames (and/or at least a threshold fraction of frames) are shown in white. The active portion of the event mask (e.g., shown in white) indicates all areas in the scene depicted in the video segment that have been accessed by the motion entity during its movement in the scene. In some implementations, the event mask for each motion event is stored at theserver system 508 or a component thereof (e.g., theevent information database 7166,FIG. 7A ), and used to selectively retrieve motion events that enter or touch a particular zone of interest within the scene depicted in the video stream of a camera. In some implementations, when a new zone of interest is created, the event masks for previous event candidates are retrieved and compared to the new zone of interest to generate and/or re-categorize events. - In some implementations, a motion mask is created based on an aggregation of motion pixels from a short frame sequence in the video segment. The pixel count at each pixel location in the motion mask is the sum of the motion pixel count at that pixel location from all frames in the short frame sequence. All pixel locations in the motion mask with less than a threshold number of motion pixels (e.g., motion pixel count >4 for 10 consecutive frames) are masked. Thus, the unmasked portions of the motion mask for each such short frame sequence indicates a dominant motion region for the short frame sequence. In some implementations, a motion track is optionally created based on the path taken by the dominant motion regions identified from a series of consecutive short frame sequences.
- In some implementations, an event mask is optionally generated by aggregating all motion pixels from all frames of the video segment at each pixel location, and masking all pixel locations that have less than a threshold number of motion pixels. The event mask generated this way is no longer a binary event mask, but is a two-dimensional histogram. The height of the histogram at each pixel location is the sum of the number of frames that contain a motion pixel at that pixel location. This type of non-binary event mask is also referred to as a motion energy map, and illustrates the regions of the video scene that are most active during a motion event. The characteristics of the motion energy maps for different types of motion events are optionally used to differentiate them from one another. Thus, in some implementations, the motion energy map of a motion event candidate is vectorized to generate the representative motion vector for use in event categorization. In some implementations, the motion energy map of a motion event is generated and cached by the video server system and used for real-time zone monitoring and/or retroactive event identification for newly created zones of interest.
- In some implementations, a live event mask is generated based on the motion masks of frames that have been processed, and is continuously updated until all frames (or segments) of the motion event have been processed. In some implementations, the live event mask of a motion event in progress is used to determine if the motion event is an event of interest for a particular zone of interest.
- In some implementations, after the
server system 508 obtains the representative motion vector for a new motion event candidate (e.g., either by generating the motion vector from the video segment corresponding to a newly detected cuepoint, or by receiving the motion vector from the video source 522), theserver system 508 proceeds to categorize the motion event candidate based at least in part on its representative motion vector. - In some implementations, the categorization of motion events (also sometimes referred to as “activity recognition”) is performed by training a categorizer and/or a categorization model based on a training data set containing motion vectors corresponding to various known event categories. For example, known event categories may include: a person running, a person jumping, a person walking, a dog running, a bird flying, a car passing by, a door opening, a door closing, leaves rustling, etc.). The common characteristics of each known event category that distinguish the motion events of the event category from motion events of other event categories are extracted through the training. Thus, when a new motion vector corresponding to an unknown event category is received, the
event categorizer module 7148 examines the new motion vector in light of the common characteristics of each known event category (e.g., based on a Euclidean distance between the new motion vector and a canonical vector representing each known event type), and determines the most likely event category for the new motion vector from among the known event categories. - Although motion event categorization based on pre-established motion event categories is an acceptable way to categorize motion events, this categorization technique may only be suitable for use when the variety of motion events handled by the
server system 508 is relatively few in number and already known before any motion event is processed. In some instances, theserver system 508 serves a large number of clients with cameras used in many different environmental settings, resulting in motion events of many different types. In addition, each reviewer may be interested in different types of motion events, and may not know what types of events they would be interested in before certain real world events have happened (e.g., some object has gone missing in a monitored location). Thus, it is desirable to have an event categorization technique that can handle any number of event categories based on actual camera use, and automatically adjust (e.g., create and retire) event categories through machine learning based on the actual video data that is received over time. - In some implementations, the categorization of motion events is based at least in part on a density-based clustering technique (e.g., DBscan) that forms clusters based on density distributions of motion events (e.g., motion events as represented by their respective motion vectors) in a vector event space. Regions with sufficiently high densities of motion vectors are promoted as recognized vector categories, and all motion vectors within each promoted region are deemed to belong to a respective recognized vector category associated with that promoted region. In contrast, regions that are not sufficiently dense are not promoted or recognized as vector categories. Instead, such non-promoted regions are collectively associated with a category for unrecognized vector, and all motion vectors within such non-promoted regions are optionally deemed to be unrecognized motion events at the present time.
- In some implementations, each time a new motion vector is to be categorized, the event categorizer places the new motion vector into the vector event space according to its value. If the new motion vector is sufficiently close to or falls within an existing dense cluster, the vector category associated with the dense cluster is assigned to the new motion vector. If the new motion vector is not sufficiently close to any existing cluster, the new motion vector forms its own cluster of one member, and is assigned to the category of unrecognized events. If the new motion vector is sufficiently close to or falls within an existing sparse cluster, the cluster is updated with the addition of the new motion vector. If the updated cluster is now a dense cluster, the updated cluster is promoted, and all motion vectors (including the new motion vector) in the updated cluster are assigned to a new vector category created for the updated cluster. If the updated cluster is still not sufficiently dense, no new category is created, and the new motion vector is assigned to the category of unrecognized events. In some implementations, clusters that have not been updated for at least a threshold expiration period are retired. The retirement of old static clusters helps to remove residual effects of motion events that are no longer valid, for example, due to relocation of the camera that resulted in a scene change.
-
FIG. 11D illustrates an example process for the event categorizer of theserver system 508 to (1) gradually learn new vector categories based on received motion events, (2) assign newly received motion vector to recognized vector categories or an unrecognized vector category, and (3) gradually adapt the recognized vector categories to the more recent motion events by retiring old static clusters and associated vector categories, if any. The example process is provided in the context of a density-based clustering algorithm (e.g., sequential DBscan). However, a person skilled in the art will recognize that other clustering algorithms that allow growth of clusters based on new vector inputs can also be used in various implementations. - For reference, sequential DBscan allows growth of a cluster based on density reachability and density connectedness. A point q is directly density-reachable from a point p if it is not farther away than a given distance ε (i.e., is part of its ε-neighborhood) and ifp is surrounded by sufficiently many points M such that one may considerp and q to be part of a cluster. q is called density-reachable from p if there is a sequence p1, . . . pn of points with p1=p and pn−p where each pi+1 is directly density-reachable from pi. Since the relation of density-reachable is not symmetric, another notion of density-connectedness is introduced. Two points p and q are density-connected if there is a point o such that both p and q are density-reachable from o. Density-connectedness is symmetric. A cluster is defined by two properties: (1) all points within the cluster are mutually density-connected, and (2) if a point is density-reachable from any point of the cluster, it is part of the cluster as well. The clusters formed based on density connectedness and density reachability can have all shapes and sizes, in other words, motion event candidates from a video source (e.g., as represented by motion vectors in a dataset) can fall into non-linearly separable clusters based on this density-based clustering algorithm, when they cannot be adequately clustered by K-means or Gaussian Mixture EM clustering techniques. In some implementations, the values of ε and M are adjusted by the
server system 508 for each video source and/or video stream, such that clustering quality can be improved for different camera usage settings. - In some implementations, during the categorization process, four parameters are stored and sequentially updated for each cluster. The four parameters include: (1) cluster creation time, (2) cluster weight, (3) cluster center, and (4) cluster radius. The creation time for a given cluster records the time when the given cluster was created. The cluster weight for a given cluster records a member count for the cluster. In some implementations, a decay rate is associated with the member count parameter, such that the cluster weight decays over time if an insufficient number of new members are added to the cluster during that time. This decaying cluster weight parameter helps to automatically fade out old static clusters that are no longer valid. The cluster center of a given cluster is the weighted average of points in the given cluster. The cluster radius of a given cluster is the weighted spread of points in the given cluster (analogous to a weighted variance of the cluster). It is defined that clusters have a maximum radius of ε/2. A cluster is considered to be a dense cluster when it contains at least M/2 points. When a new motion vector comes into the event space, if the new motion vector is density-reachable from any existing member of a given cluster, the new motion vector is included in the existing cluster; and if the new motion vector is not density-reachable from any existing member of any existing cluster in the event space, the new motion vector forms its own cluster. Thus, at least one cluster is updated or created when a new motion vector comes into the event space.
-
FIG. 11D -(a) shows the early state of theevent vector space 1124. At time t1, two motion vectors (e.g., represented as two points) have been received by the event categorizer. Each motion vector forms its own cluster (e.g., c1 and c2, respectively) in theevent space 1124. The respective creation time, cluster weight, cluster center, and cluster radius for each of the two clusters are recorded. At this time, no recognized vector category exists in the event space, and the motion events represented by the two motion vectors are assigned to the category of unrecognized vectors. In some implementations, on the frontend, the event indicators of the two events indicate that they are unrecognized events on the event timeline, for example, in the manner shown inFIG. 13A , discussed below. - After some time, a new motion vector is received and placed in the
event space 1124 at time t2. As shown inFIG. 11D -(b), the new motion vector is density-reachable from the existing point in cluster c2 and thus falls within the existing cluster c2. The cluster center, cluster weight, and cluster radius of cluster c2 are updated based on the entry of the new motion vector. The new motion vector is also assigned to the category of unrecognized vectors. In some implementations, the event indicator of the new motion event is added to the event timeline in real-time, and has the appearance associated with the category for unrecognized events. -
FIG. 11D -(c) illustrates that, at time t3, two new clusters c3 and c4 have been established and grown in size (e.g., cluster weight and radius) based on a number of new motion vectors received during the time interval between t2 and t3. In the meantime, neither cluster c1 nor cluster c2 have seen any growth. The cluster weights for clusters c1 and c2 have decayed gradually due to the lack of new members during this period of time. Up to this point, no recognized vector category has been established, and all motion events are assigned to the category of unrecognized vectors. In some implementations, if the motion events are reviewed in a review interface on theclient device 504, the event indicators of the motion events have an appearance associated with the category for unrecognized events (e.g., as theevent indicator 1322B shows inFIG. 13A ). In some implementations, each time a new motion event is added to theevent space 1124, a corresponding event indicator for the new event is added to the timeline associated with the present video source. -
FIG. 11D -(d) illustrates that, at time t4, another new motion vector has been added to theevent space 1124, and the new motion vector falls within the existing cluster c3. The cluster center, cluster weight, and cluster radius of cluster c3 are updated based on the addition of the new motion vector, and the updated cluster c3 has become a dense cluster based on a predetermined density requirement (e.g., a cluster is considered dense when it contains at least M/2 points). Once cluster c3 has achieved the dense cluster status (and re-labeled as C3), a new vector category is established for cluster C3. When the new vector category is established for cluster C3, all the motion vectors currently within cluster C3 are associated with the new vector category. In other words, the previously unrecognized events in cluster C3 are now recognized events of the new vector category. In some implementations, as soon as the new vector category is established, the event categorizer notifies the user-facing frontend of thevideo server system 508 about a corresponding new event category. The user-facing frontend determines whether a reviewer interface for the video stream corresponding to theevent space 1124 is currently displayed on aclient device 504. If a reviewer interface is currently displayed, the user-facing frontend causes theclient device 504 to retroactively modify the display characteristics of the event indicators for the motion events in cluster C3 to reflect the newly established vector category in the review interface. For example, as soon as the new event category corresponding to the new vector category is established by the event categorizer, the user-facing frontend will cause the event indicators for the motion events previously within cluster c3 (and now in cluster C3) to take on a color assigned to the new event category). In addition, the event indicator of the new motion event will also take on the color assigned to the new event category. This is illustrated in thereview interface 1308 inFIG. 13A by the striping of theevent indicators -
FIG. 11D -(e) illustrates that, at time t5, two new motion vectors have been received in the interval between t4 and t5. One of the two new motion vectors falls within the existing dense cluster C3, and is associated with the recognized vector category of cluster C3. Once the motion vector is assigned to cluster C3, the event categorizer notifies the user-facing frontend regarding the event categorization result. Consequently, the event indicator of the motion event represented by the newly categorized motion vector is given the appearance associated with the recognized event category of cluster C3. Optionally, a pop-up notification for the newly recognized motion event is presented over the timeline associated with the event space. -
FIG. 11D -(e) further illustrates that, at time t5, one of the two new motion vectors is density reachable from both of the existing clusters c1 and c5, and thus qualifies as a member for both clusters. The arrival of this new motion vector halts the gradual decay in cluster weight that cluster c1 that has sustained since time ti. The arrival of the new motion vector also causes the existing clusters c1 and c5 to become density-connected, and as a result, to merge into a larger cluster c5. The cluster center, cluster weight, cluster radius, and optionally the creation time for cluster c5 are updated accordingly. At this time, cluster c2 remains unchanged, and its cluster weight decays further over time. -
FIG. 11D -(f) illustrates that, at time t6, the weight of the existing cluster c2 has reached below a threshold weight, and is thus deleted from theevent space 1124 as a whole. The pruning of inactive sparse clusters allows the event space to remain fairly noise-free and keeps the clusters easily separable. In some implementations, the motion events represented by the motion vectors in the deleted sparse clusters (e.g., cluster c2) are retroactively removed from the event timeline on the review interface. In some implementations, the motion events represented by the motion vectors in the deleted sparse clusters (e.g., cluster c2) are kept in the timeline and given a new appearance associated with a category for trivial or uncommon events. In some implementations, the motion events represented by the motion vectors in the deleted sparse cluster (e.g., cluster c2) are optionally gathered and presented to the user or an administrator to determine whether they should be removed from the event space and the event timeline. -
FIG. 11D -(f) further illustrates that, at time t6, a new motion vector is assigned to the existing cluster c5, which causes the cluster weight, cluster radius, and cluster center of cluster c5 to be updated accordingly. The updated cluster c5 now reaches the threshold for qualifying as a dense cluster, and is thus promoted to a dense cluster status (and relabeled as cluster C5). A new vector category is created for cluster C5. All motion vectors in cluster C5 (which were previously in clusters c1 and c4) are removed from the category for unrecognized motion events, and assigned to the newly created vector category for cluster C5. The creation of the new category and the retroactive appearance change for the event indicators of the motion events in the new category are reflected in the reviewer interface, and optionally notified to the reviewer. -
FIG. 11D -(g) illustrates that, at time t7, cluster C5 continues to grow with some of the subsequently received motion vectors. A new cluster c6 has been created and has grown with some of the subsequently received motion vectors. Cluster C3 has not seen any growth since time t5, and its cluster weight has gradually decayed over time. -
FIG. 11D -(h) shows that, at a later time t8, dense cluster C3 is retired (deleted from the event space 1124) when its cluster weight has fallen below a predetermined cluster retirement threshold. In some implementations, motion events represented by the motion vectors within the retired cluster C3 are removed from the event timeline for the corresponding video source. In some implementations, the motion events represented by the motion vectors as well as the retired event category associated with the retired cluster C3 are stored as obsolete motion events, apart from the other more current motion events. For example, the video data and motion event data for obsolete events are optionally compressed and archived, and require a recall process to reload into the timeline. In some implementations, when an event category is retired, theevent categorizer 7148 notifies the user-facingfrontend 7150 to remove the event indicators for the motion events in the retired event category from the timeline. In some implementations, when a vector category is retired, the motion events in the retired category are assigned to a category for retired events and their event indicators are retroactively given the appearance associated with the category for retired events in the timeline. -
FIG. 11D -(h) further illustrates that, at time t8, cluster c6has grown substantially, and has been promoted as a dense cluster (relabeled as cluster C6) and given its own vector category. Thus, on the event review interface, a new vector category is provided, and the appearance of the event indicators for motion events in cluster C6 is retroactively changed to reflect the newly recognized vector category. - In some implementations, the categorization of each segment (11167) is based in part on the event categories associated with each motion vector within the segment. For example, the event categories associated with each motion vector are aggregated with other factors/features to generate motion features (11166) for a segment. In some implementations, the categorization of the motion event (1119) is based in part on the event categories associated with each motion vector.
- Based on the above process, as motion vectors are collected in the event space over time, the most common event categories emerge gradually without manual intervention. In some implementations, the creation of a new category causes real-time changes in the review interface provided to a
client device 504 associated with thevideo source 522. For example, in some implementations, motion events are first represented as uncategorized motion events, and as each vector category is created over time, the characteristics of event indicators for past motion events in that vector category are changed to reflect the newly recognized vector category. Subsequent motion events falling within the recognized categories also have event indicators showing their respective categories. The currently recognized categories are optionally presented in the review interface for user selection as event filters. The user may choose any subset of the currently known categories (e.g., each recognized event categories and respective categories for trivial events, rare events, obsolete events, and unrecognized events) to selectively view or receive notifications for motion events within the subset of categories. - In some implementations, a user may review past motion events and their categories on the event timeline. In some implementations, the user is allowed to edit the
event category assignments 1109, for example, by removing one or more past motion events from a known event category. When the user has edited the event category composition of a particular event category by removing one or more past motion events from the event category, the user-facing frontend notifies the event categorizer of the edits. In some implementations, the event categorizer removes the motion vectors of the removed motion events from the cluster corresponding to the event category, and re-computes the cluster parameters (e.g., cluster weight, cluster center, and cluster radius). In some implementations, the removal of motion events from a recognized cluster optionally causes other motion events that are similar to the removed motion events to be removed from the recognized cluster as well. In some implementations, manual removal of one or more motion events from a recognized category may cause one or more motion events to be added to event category due to the change in cluster center and cluster radius. In some implementations, the event category models are stored in the event category models database 1108 (FIG. 11A ), and is retrieved and updated in accordance with the user edits. - In some implementations, one event category model is established for one camera. In some implementations, a composite model based on the motion events from multiple related cameras (e.g., cameras reported to serve a similar purpose, or have a similar scene, etc.) is created and used to categorize motion events detected in the video stream of each of the multiple related cameras. In such implementations, the timeline for one camera may show event categories discovered based on motion events in the video streams of its related cameras, even though no event for such categories have been seen in the camera's own video stream.
- In some implementations, event data and event masks of past motion events are stored in the event data and event mask database 1110 (
FIG. 11A ). In some implementations, theclient device 504 receives user input to select one or more filters to selectively review past motion events, and selectively receive event alerts for future motion events. - In some implementations, the
client device 504 passes the user selected filter(s) to the user-facingfrontend 7150, and the user-facing frontend retrieves the events of interest based on the information in the event data andevent mask database 1110. In some implementations, the selectable filters include one or more recognized event categories, and optionally any of the categories for unrecognized motion events, rare events, and/or obsolete events. When a recognized event category is selected as a filter, the user-facing frontend retrieves all past motion events associated with the selected event category, and present them to the user (e.g., on the timeline, or in an ordered list shown in a review interface). For example, when the user selects one of the two recognized event categories in the review interface, the past motion events associated with the selected event category (e.g., Event Cat. B) are shown on the timeline, while the past motion events associated with the unselected event category (e.g., Event Cat. A) are removed from the timeline. In some implementations, when the user selects to edit a particular event category (e.g., Event Cat. B), the past motion events associated with the selected event categories (e.g., Event Cat. B) are presented in the first region of the editing user interface, while motion events in the unselected event categories (e.g., Event Cat. A) are not shown. - In some implementations, in addition to event categories, other types of event filters can also be selected individually or combined with selected event categories. For example, in some implementations, the selectable filters also include a human filter, which can be one or more characteristics associated with events involving a human being. For example, the one or more characteristics that can be used as a human filter include a characteristic shape (e.g., aspect ratio, size, shape, and the like) of the motion entity, audio comprising human speech, motion entities having human facial characteristics, etc. In some implementations, the selectable filters also include a filter based on similarity. For example, the user can select one or more example motion events, and be presented one or more other past motion events that are similar to the selected example motion events. In some implementations, the aspect of similarity is optionally specified by the user. For example, the user may select “color content,” “number of moving objects in the scene,” “shape and/or size of motion entity,” and/or “length of motion track,” etc, as the aspect(s) by which similarity between two motion events are measured. In some implementations, the user may choose to combine two or more filters and be shown the motion events that satisfy all of the filters combined. In some implementations, the user may choose multiple filters that will act separately, and be shown the motion events that satisfy at least one of the selected filters.
- In some implementations, the user may be interested in past motion events that have occurred within a zone of interest. The zone of interest can also be used as an event filter to retrieve past events and generate notifications for new events. In some implementations, the user may define one or more zones of interest in a scene depicted in the video stream. The zone of interest may enclose an object, for example, a chair, a door, a window, or a shelf, located in the scene. Once a zone of interest is created, it is included as one of the selectable filters for selectively reviewing past motion events that had entered or touched the zone. In addition, the user may also choose to receive alerts for future events that enter a zone of interest, for example, by selecting an alert affordance associated with zone.
- In some implementations, the server system 508 (e.g., the user-facing frontend of the server system 508) receives the definitions of zones of interest from the
client device 504, and stores the zones of interest in association with the reviewer account currently active on theclient device 504. When a zone of interest is selected as a filter for reviewing motion events, the user-facing frontend searches the event data database 1110 (FIG. 11A ) to retrieve all past events that have motion entity(s) within the selected zone of interest. This retrospective search of event of interest can be performed irrespective of whether the zone of interest had existed before the occurrence of the retrieved past event(s). In other words, the user does not need to know where in the scene he/she may be interested in monitoring before hand, and can retroactively query the event database to retrieve past motion events based on a newly created zone of interest. There is no requirement for the scene to be divided into predefined zones first, and past events be tagged with the zones in which they occur when the past events were first processed and stored. - In some implementations, the retrospective zone search based on newly created or selected zones of interest is implemented through a regular database query where the relevant features of each past event (e.g., which regions the motion entity had entered during the motion event) are determined on the fly, and compared to the zones of interest. In some implementations, the server optionally defines a few default zones of interest (e.g., eight (2×4) predefined rectangular sectors within the scene), and each past event is optionally tagged with the particular default zones of interest that the motion entity has entered. In such implementations, the user can merely select one or more of the default zones of interest to retrieve the past events that touched or entered the selected default zones of interest.
- In some implementations, event masks (e.g., the example event mask shown in
FIG. 11C ) each recording the extent of a motion region accessed by a motion entity during a given motion event are stored in the event data and event masks database 1110 (FIG. 11A ). The event masks provide a faster and more efficient way of retrieving past motion events that have touched or entered a newly created zone of interest. - In some implementations, the scene of the video stream is divided into a grid, and the event mask of each motion event is recorded as an array of flags that indicates whether motion had occurred within each grid location during the motion event. When the zone of interest includes at least one of the grid location at which motion has occurred during the motion event, the motion event is deemed to be relevant to the zone of interest and is retrieved for presentation. In some implementations, the user-facing frontend imposes a minimum threshold on the number of grid locations that have seen motion during the motion event, in order to retrieve motion events that have at least the minimum number of grid locations that included motion. In other words, if the motion region of a motion event barely touched the zone of interest, it may not be retrieved for failing to meet the minimum threshold on grid locations that have seen motion during the motion event.
- In some implementations, an overlap factor is determined for the event mask of each past motion event and a selected zone of interest, and if the overlapping factor exceeds a predetermined overlap threshold, the motion event is deemed to be a relevant motion event for the selected zone of interest.
- In some implementations, the overlap factor is a simple sum of all overlapping grid locations or pixel locations. In some implementations, more weight is given to the central region of the zone of interest than the peripheral region of the zone of interest during calculation of the overlap factor. In some implementations, the event mask is a motion energy mask that stores the histogram of pixel count at each pixel location within the event mask. In some implementations, the overlap factor is weighted by the pixel count at the pixel locations that the motion energy map overlaps with the zone of interest.
- By storing the event mask at the time that the motion event is processed, the retrospective search for motion events that are relevant to a newly created zone of interest can be performed relatively quickly, and makes the user experience for reviewing the events-of-interest more seamless. Creation of a new zone of interest, or selecting a zone of interest to retrieve past motion events that are not previously associated with the zone of interest provides many usage possibilities, and greatly expands the utility of stored motion events. In other words, motion event data (e.g., event categories, event masks) can be stored in anticipation of different uses, without requiring such uses to be tagged and stored at the time when the event occurs. Thus, wasteful storage of extra metadata tags may be avoided in some implementations.
- In some implementations, the filters can be used for not only past motion events, but also new motion events that have just occurred or are still in progress. For example, when the video data of a detected motion event candidate is processed, a live motion mask is created and updated based on each frame of the motion event as the frame is received by the
server system 508. In other words, after the live event mask is generated, it is updated as each new frame of the motion event is processed. In some implementations, the live event mask is compared to the zone of interest on the fly, and as soon as a sufficient overlap factor is accumulated, an alert is generated, and the motion event is identified as an event of interest for the zone of interest. In some implementations, an alert is presented on the review interface (e.g., as a pop-up) as the motion event is detected and categorized, and the real-time alert optionally is formatted to indicate its associated zone of interest. This provides real-time monitoring of the zone of interest in some implementations. - In some implementations, the event mask of the motion event is generated after the motion event is completed, and the determination of the overlap factor is based on a comparison of the completed event mask and the zone of interest. Since the generation of the event mask is substantially in real-time, real-time monitoring of the zone of interest may also be realized this way in some implementations.
- In some implementations, if multiple zones of interest are selected at any given time for a scene, the event mask of a new and/or old motion event is compared to each of the selected zones of interest. For a new motion event, if the overlap factor for any of the selected zones of interest exceeds the overlap threshold, an alert is generated for the new motion event as an event of interest associated with the zone(s) that are triggered. For a previously stored motion event, if the overlap factor for any of the selected zones of interest exceeds the overlap threshold, the stored motion event is retrieved and presented to the user as an event of interest associated with the zone(s) that are triggered.
- In some implementations, if a live event mask is used to monitor zones of interest, a motion entity in a motion event may enter different zones at different times during the motion event. In some implementations, a single alert (e.g., a pop-up notification over the timeline) is generated at the time that the motion event triggers a zone of interest for the first time, and the alert can be optionally updated to indicate the additional zones that are triggered when the live event mask touches those zones at later times during the motion event. In some implementations, one alert is generated for each zone of interest when the live event mask of the motion event touches the zone of interest.
-
FIG. 11E illustrates an example process by which respective overlapping factors are calculated for a motion event and several zones of interest. The zones of interest may be defined after the motion event has occurred and the event mask of the motion event has been stored, such as in the scenario of retrospective zone search. Alternatively, the zones of interest may also be defined before the motion event has occurred in the context of zone monitoring. In some implementations, zone monitoring can rely on a live event mask that is being updated as the motion event is in progress. In some implementations, zone monitoring relies on a completed event mask that is formed immediately after the motion event is completed. - As shown in the upper portion of
FIG. 11E ,motion masks 1125 for a frame sequence of a motion event are generated as the motion event is processed for motion vector generation. Based on themotion masks 1125 of the frames, anevent mask 1126 is created. The creation of an event mask based on motion masks has been discussed earlier with respect toFIG. 11C , and is not repeated herein. - Suppose that the
motion masks 1125 shown inFIG. 11E are all the motion masks of a past motion event, thus, theevent mask 1126 is a complete event mask stored for the motion event. After the event mask has been stored, when a new zone of interest (e.g., Zone B among the selected zones of interest 1127) is created later, theevent mask 1126 is compared to Zone B, and an overlap factor between theevent mask 1126 and Zone B is determined. In this particular example, Overlap B (within Overlap 1128) is detected between theevent mask 1126 and Zone B, and an overlap factor based on Overlap B also exceeds an overlap threshold for qualifying the motion event as an event of interest for Zone B. As a result, the motion event will be selectively retrieved and presented to the reviewer, when the reviewer selects Zone B as a zone of interest for a present review session. - In some implementations, a zone of interest is created and selected for zone monitoring. During the zone monitoring, when a new motion event is processed in real-time, an event mask is created in real-time for the new motion event and the event mask is compared to the selected zone of interest. For example, if Zone B is selected for zone monitoring, when the Overlap B is detected, an alert associated with Zone B is generated and sent to the reviewer in real-time.
- In some implementations, when a live event mask is used for zone monitoring, the live event mask is updated with the motion mask of each new frame of a new motion event that has just been processed. The live motion mask is compared to the selected zone(s) of
interest 1127 at different times (e.g., every 5 frames) during the motion event to determine the overlap factor for each of the zones of interest. For example, if all of zones A, B, and C are selected for zone monitoring, at several times during the new motion event, the live event mask is compared to the selected zones ofinterest 1127 to determine their corresponding overlap factors. In this example, eventually, two overlap regions are found: Overlap A is an overlap between theevent mask 1126 and Zone A, and Overlap B is an overlap between theevent mask 1126 and Zone B. No overlap is found between theevent mask 1126 and Zone C. Thus, the motion event is identified as an event of interest for both Zone A and Zone B, but not for Zone C. As a result, alerts will be generated for the motion event for both Zone A and Zone B. In some implementations, if the live event mask is compared to the selected zones as the motion mask of each frame is added to the live event mask, Overlap A will be detected before Overlap B, and the alert for Zone A will be triggered before the alert for Zone B. - In some implementations, the motion event is detected and categorized independently of the existence of the zones of interest. In some implementations, the importance score for a motion event is based on the involvement of zones of interest. In some implementations, the importance score for a motion event is recalculated when new zones are obtained and/or activated. In some implementations, the zone monitoring does not rely on raw image information within the selected zones; instead, the zone monitoring can take into account the raw image information from the entire scene. Specifically, the motion information during the entire motion event, rather than the motion information confined within the selected zone, is abstracted into an event mask, before the event mask is used to determine whether the motion event is an event of interest for the selected zone. In other words, the context of the motion within the selected zones is preserved, and the event category of the motion event can be provided to the user to provide more meaning to the zone monitoring results.
-
FIG. 11F shows an event being segmented and processed in accordance with some implementations. In some implementations, each segment is processed by server system 508 (FIG. 11A ). As shown inFIG. 11F , motion start information forEvent1 1130 is obtained and aninitial segment 1131, denoted as Slice1, is generated. Slice1 is then assigned to a queue (also sometimes called a “pipeline”) associated with a particular categorizer (1135).FIG. 11F shows Slicel assigned tocategorizer queue 1138, denoted as categorizer queue2. Categorizer queue2 corresponds tocategorizer 1141, denoted as categorizer2. In some implementations, the assignment is based on a load balancing scheme. For example, the relative amount of data assigned to each of categorizer queuel 1137,categorizer queue2 1138,categorizer queue3 1139, andcategorizer queue4 1140 is compared and the system determines that categorizer queue2 has the least amount of data currently assigned. Therefore, Slice1 is assigned to categorizer queue2. In some implementations, Slice1 is assigned to an idle queue. As shown, once Slicel has been assigned to a particular queue, all subsequent segments from Event 1 (e.g.,S1ice2 1132,S1ice3 1333, and S1ice4 1334) are assigned to the same queue (1136). This allows for information such as background factors to be shared across segments. -
FIG. 11G shows segments of a particular event (Eventl 1130) being assigned to a categorizer and processed in accordance with some implementations. As shown inFIG. 11G , Slice1, denoted as an initial segment (1143), is assigned tocategorizer queue 3 based on load balancing (1146). Since Slice1 is denoted as an initial segment, the event comprising Slicel (Event1) is also assigned tocategorizer queue 3 and this assignment in stored (1148) in acache 1149. Slicel is stored in memory (e.g., a location within database 1155) associated with categorizer 3 (1151) and is eventually processed (1154) by categorizer3 1153 (e.g., when it reaches the top of the queue). Next,S1ice2 1132, denoted as a non-initial segment of Event1 (1144), is obtained and the cache is checked to determine which queue Event1 was assigned (1147). In accordance with the determination that Event1 was assigned tocategorizer queue 3, S1ice2 is stored in memory associated with categorizer 3 (1152) and is processed in turn (1154). One or more additional segments are optionally processed in a similar manner as S1ice2. OnceSliceN 1142, denoted as the final segment of Event1 (1145), is obtained, it is processed in a similar manner as S1ice2, and Event1 is marked as completed. In some implementations, as SliceN is being processed (or upon completion of it being processed) the assignment of Event1 in thecache 1149, and the memory locations used to store the segments of Event1 in thedatabase 1155, are cleared and/or marked as available (e.g., available to be used for subsequent events). -
FIG. 12A illustrates a representative system and process for segmenting and categorizing a motion event candidate, in accordance with some implementations. As shown inFIG. 12A ,server system 508 optionally includes afront end server 1202 and aback end server 1204 andsmart home environment 522 includes acamera 118. In some implementations, the back end server is separate and distinct from the server system 508 (not shown). In some implementations, theback end server 1204 includes theevent categorizer 7148 and thefront end server 1202 includes the event processor 7146 (FIG. 7A ). - To start the process, the camera sends a video stream to the
front end server 1202 of server system 508 (1206). Next, either thefront end server 1202 identifies motion start information (1207) or thecamera 118 identifies the motion start information and sends it to the front end server 1202 (1208). Once the motion start information is obtained, thefront end server 1202 begins segmenting the video stream (1210) and sends the first segment to theback end server 1204 to be categorized (1212). Theback end server 1204 categorizes the motion event candidate within the first segment (1214). Once the motion event candidate is categorized, theback end server 1204 either sends the categorization information back to the front end server (1216), or stores the categorization information locally, or both. This process is repeated for the second segment (1218, 1220, 1222) and any subsequent segments. Next, either thefront end server 1202 identifies motion end information (1225) or thecamera 118 identifies the motion end information and sends it to the front end server 1202 (1224). Once the motion end information is obtained, thefront end server 1202 ends the video segmentation (1226) and sends the final segment to theback end server 1204 to be processed (1228). Theback end server 1204 categorizes the motion event candidate in the final segment (1230) and optionally sends the categorization information back to the front end server (1232). In some implementations, after all individual segments have been categorized, multi-segment categorization is performed by either thefront end server 1202 or theback end server 1204. -
FIG. 12B illustrates a representative system and process for providing an alert for a motion event candidate, in accordance with some implementations. As shown inFIG. 12B ,smart home environment 522 includes acamera 118.Camera 118 is communicatively coupled toserver system 508, which in turn is communicatively coupled toclient device 504. In some implementations,client device 504 is communicatively coupled tocamera 118. In some implementations,camera 118 performs the operations shown inFIG. 12B to be performed byserver system 508. In some implementations,server system 508 includes afront end server 1202 and aback end server 1204 as shown inFIG. 12A . - As discussed above with respect to
FIG. 12A , the camera sends a video stream to the server system 508 (1206). Next, either thefront end server 1202 identifies motion start information (1207) or thecamera 118 identifies the motion start information and sends it to the front end server 1202 (1208). In some implementations,camera 118 detects a motion start event and sends video stream (1206) toserver system 508 in response to detecting the motion start event. Theserver system 508 categorizes (1234) the motion event candidate and generates (1236) a confidence level for the categorization. For example, theserver system 508 categorizes an event candidate as “a person walking past the living room window” and generates a confidence level of 84% for the categorization. In this example, the confidence level is based on a person detection algorithm accurately recognizing the motion entity as a person walking. After categorizing (1234) the motion event candidate and generating the confidence level (1236), theserver system 508 sends (1238) an alert, or alert information such as the assigned category and confidence level, to theclient device 504. In some implementations, theserver system 508 sends the alert, or alert information, to multiple client devices. Theclient device 504 receives the alert, or alert information, and presents (1240) an alert to a user of the client device. In some implementations, presenting the alert comprises displaying a user interface such asuser interface 1400 inFIG. 14A . In some implementations, presenting the alert includes generating an audio alert. In some implementations, presenting the alert includes causing the client device to vibrate. In some implementations, presenting the alert includes activing one or more lights on the client device. In some implementations,server system 508 sends updated alert information and the client device either presents a new alert or updates a previous alert based on the updated alert information. - Attention is now directed towards implementations of user interfaces and associated processes that may be implemented on a
respective client device 504. In some implementations, theclient device 504 includes one or more speakers enabled to output sound, zero or more microphones enabled to receive sound input, and atouch screen 1306 enabled to receive one or more contacts and display information (e.g., media content, webpages and/or user interfaces for an application).FIGS. 13A-13C illustrate example user interfaces for monitoring and facilitating review of motion events in accordance with some implementations. - Although some of the examples that follow will be given with reference to inputs on touch screen 1306 (where the touch sensitive surface and the display are combined), in some implementations, the device detects inputs on a touch-sensitive surface that is separate from the display. In some implementations, the touch sensitive surface has a primary axis that corresponds to a primary axis on the display. In accordance with these implementations, the device detects contacts with the touch-sensitive surface at locations that correspond to respective locations on the display. In this way, user inputs detected by the device on the touch-sensitive surface are used by the device to manipulate the user interface on the display of the device when the touch-sensitive surface is separate from the display. It should be understood that similar methods are, optionally, used for other user interfaces described herein.
- Additionally, while the following examples are given primarily with reference to finger inputs (e.g., finger contacts, finger tap gestures, finger swipe gestures, etc.), it should be understood that, in some implementations, one or more of the finger inputs are replaced with input from another input device (e.g., a mouse based input or stylus input). For example, a swipe gesture is, optionally, replaced with a mouse click (e.g., instead of a contact) followed by movement of the cursor along the path of the swipe (e.g., instead of movement of the contact). As another example, a tap gesture is, optionally, replaced with a mouse click while the cursor is located over the location of the tap gesture (e.g., instead of detection of the contact followed by ceasing to detect the contact). Similarly, when multiple user inputs are simultaneously detected, it should be understood that multiple computer mice are, optionally, used simultaneously, or a mouse and finger contacts are, optionally, used simultaneously.
-
FIGS. 13A-13C show user interface 1308 displayed on client device 504 (e.g., a tablet, laptop, mobile phone, or the like); however, one skilled in the art will appreciate that the user interfaces shown inFIGS. 13A-13C may be implemented on other similar computing devices. - For example, the
client device 504 is the portable electronic device 166 (FIG. 1 ) such as a laptop, tablet, or mobile phone. Continuing with this example, the user of the client device 504 (sometimes also herein called a “reviewer”) executes an application (e.g., the client-side module 502,FIG. 5 ) used to monitor and control thesmart home environment 100 and logs into a user account registered with the smarthome provider system 164 or a component thereof (e.g., theserver system 508,FIGS. 5 and 7 ). In this example, thesmart home environment 100 includes the one ormore cameras 118, whereby the user of theclient device 504 is able to control, review, and monitor video feeds from the one ormore cameras 118 with the user interfaces for the application displayed on theclient device 504 shown inFIGS. 13A-13C . -
FIG. 13A illustrates theclient device 504 displaying a first implementation of a video monitoring user interface (UI) of the application on thetouch screen 1306. InFIG. 13A , the video monitoring UI includes three distinct regions: afirst region 1303, asecond region 1305, and athird region 1307. InFIG. 13A , thefirst region 1303 includes a video feed from a respective camera among the one ormore camera 118 associated with thesmart home environment 100. For example, the respective camera is located on the back porch of the user's domicile or pointed out of a window of the user's domicile. Thefirst region 1303 includes thetime 1311 of the video feed being displayed in thefirst region 1303 and also anindicator 1312 indicating that the video feed being displayed in thefirst region 1303 is a live video feed. - In
FIG. 13A , thesecond region 1305 includes anevent timeline 1310 and a currentvideo feed indicator 1309 indicating the temporal position of the video feed displayed in the first region 1303 (i.e., the point of playback for the video feed displayed in the first region 1303). InFIG. 13A , the video feed displayed in thefirst region 1303 is a live video feed from the respective camera. In some implementations, the video feed displayed in thefirst region 1303 may be previously recorded video footage. For example, the user of theclient device 504 may drag theindicator 1309 to any position on theevent timeline 1310 causing theclient device 504 to display the video feed from that point in time forward in thefirst region 1303. In another example, the user of theclient device 504 may perform a substantially horizontal swipe gesture on theevent timeline 1310 to scrub between points of the recorded video footage causing theindicator 1309 to move on theevent timeline 1310 and also causing theclient device 504 to display the video feed from that point in time forward in thefirst region 1303. - The
second region 1305 also includes affordances 1313 for changing the scale of the event timeline 1310: a 5minute affordance 1313A for changing the scale of theevent timeline 1310 to 5 minutes and a 1hour affordance 1313B for changing the scale of theevent timeline 1310 to 1 hour. InFIG. 13A , the scale of theevent timeline 1310 is 1 hour as evinced by the darkened border surrounding the 1hour affordance 1313B and also the temporal tick marks shown on theevent timeline 1310. Thesecond region 1305 also includes affordances 1314 for changing the date associated with theevent timeline 1310 to any day within the preceding week:Monday affordance 1314A,Tuesday affordance 1314B,Wednesday affordance 1314C,Thursday affordance 1314D,Friday affordance 1314E,Saturday affordance 1314F,Sunday affordance 1314G, andToday affordance 1314H. InFIG. 13A , theevent timeline 1310 is associated with the video feed from today as evinced by the darkened border surroundingToday affordance 1314H. In some implementations, an affordance is a user interface element that is user selectable or manipulable on a graphical user interface. - In
FIG. 13A , thesecond region 1305 further includes: “Make Time-Lapse”affordance 1315, which, when activated (e.g., via a tap gesture), enables the user of theclient device 504 to select a portion of theevent timeline 1310 for generation of a time-lapse video clip; “Make Clip”affordance 1316, which, when activated (e.g., via a tap gesture), enables the user of theclient device 504 to select a motion event or a portion of theevent timeline 1310 to save as a video clip; and “Make Zone”affordance 1317, which, when activated (e.g., via a tap gesture), enables the user of theclient device 504 to create a zone of interest on the current field of view of the respective camera. In some embodiments, the time-lapse video clip and saved non-time-lapse video clips are associated with the user account of the user of theclient device 504 and stored by the server system 508 (e.g., in thevideo storage database 516,FIG. 5 ). In some embodiments, the user of theclient device 504 is able to access his/her saved time-lapse video clip and saved non-time-lapse video clips by entering the login credentials for his/her for user account. InFIG. 13A , the video monitoring UI also includes athird region 1307 with a list of categories with recognized event categories and created zones of interest. - In some implementations, the time-lapse video clip is generated by the
client device 504, theserver system 508, or a combination thereof. In some implementations, motion events within the selected portion of theevent timeline 1310 are played at a slower speed than the balance of the selected portion of theevent timeline 1310. In some implementations, motion events within the selected portion of theevent timeline 1310 that are assigned to enabled event categories and motion events within the selected portion of theevent timeline 1310 that touch or overlap enabled zones are played at a slower speed than the balance of the selected portion of theevent timeline 1310 including motion events assigned to disabled event categories and motion events that touch or overlap disabled zones. -
FIG. 13A also illustrates theclient device 504 displaying theevent timeline 1310 in thesecond region 1305 withevent indicators event timeline 1310 correlates with the time at which a motion event corresponding to the respective event indicator 1322 was detected. The detected motion events corresponding to theevent indicators event indicators third region 1307 includes an entry for categorized motion events with a filter affordance for enabling/disabling display of event indicators for the corresponding categories of motion events on theevent timeline 1310. - In
FIG. 13A , the list of categories in thethird region 1307 includes anentry 1324A for event category A and an entry for event category B. Each entry includes: a display characteristic indicator (1325A and 1325B) representing the display characteristic for event indicators corresponding to motion events assigned to the respective event category; an indicator filter (1326A and 1326B) for enabling/disabling display of event indicators on theevent timeline 1310 for motion events assigned to the respective event category; and a notifications indicator (1327A and 1327B) for enabling/disabling notifications sent in response to detection of motion events assigned to the respective event category. InFIG. 13A , display of event indicators for motion events corresponding to event categories A and B are enabled, as evinced by the check mark inindicator filters FIG. 13A further shows thenotifications indicator 1327A in thethird region 1307 as disabled, shown by the line through thenotifications indicator 1327A. In some implementations, the notifications are messages sent by the server system 508 (FIG. 5 ) via email to an email address linked to the user's account and/or via a SMS or voice call to a phone number linked to the user's account. In some implementations, the notifications are audible tones or vibrations provided by theclient device 504. -
FIG. 13A further illustrates theclient device 504 displaying adialog box 1323 for a respective motion event correlated with theevent indicator 1322B (e.g., in response to detecting selection of theevent indicator 1322B). In some implementations, thedialog box 1323 may be displayed in response to sliding or hovering over theevent indicator 1322B. InFIG. 13A , thedialog box 1323 includes the time the respective motion event was detected (e.g., 11:37:40 am) and apreview 1332 of the respective motion event (e.g., a static image, a series of images, or a video clip). InFIG. 13A , thedialog box 1323 also includes anaffordance 1333, which, when activated (e.g., with a tap gesture), causes theclient device 504 to display an editing user interface (UI) for the event category to which the respective motion event is assigned (if any) and/or the zone or interest which the respective motion event touches or overlaps (if any).FIG. 13A also illustrates theclient device 504 detecting a contact 1334 (e.g., a tap gesture) at a location corresponding to theentry 1324B for event category B on thetouch screen 1306. -
FIG. 13B illustrates theclient device 504 displaying an editing user interface (UI) for event category B in response to detecting selection of theentry 1324B inFIG. 13A . InFIG. 13B , the editing UI for event category B includes two distinct regions: afirst region 1335; and asecond region 1337. Thefirst region 1335 includes representations 1336 (sometimes also herein called “sprites”) of motion events assigned to event category B, where arepresentation 1336A corresponds to the motion event correlated with theevent indicator 1322F, arepresentation 1336B corresponds to the motion event correlated with anevent indicator 1322G, arepresentation 1336C corresponds to the motion event correlated with theevent indicator 1322L, arepresentation 1336D corresponds to the motion event correlated with theevent indicator 1322K, and arepresentation 1336E corresponds to the motion event correlated with theevent indicator 1322J. In some implementations, each of the representations 1336 is a series of frames or a video clip of a respective motion event assigned to event category B. For example, inFIG. 13B , each of the representations 1336 corresponds to a motion event of a bird flying from left to right across the field of view of the respective camera. InFIG. 13B , each of the representations 1336 is associated with a checkbox 1341. In some implementations, when a respective checkbox 1341 is unchecked (e.g., with a tap gesture) the motion event corresponding to the respective checkbox 1341 is removed from the event category B and, in some circumstances, the event category B is re-computed based on the removed motion event. For example, the checkboxes 1341 enable the user of theclient device 504 to remove motion events incorrectly assigned to an event category so that similar motion events are not assigned to the event category in the future. - In
FIG. 13B , thefirst region 1335 further includes: a save/exit affordance 1338 for saving changes made to event category B or exiting the editing UI for event category B; a labeltext entry box 1339 for renaming the label for the event category from the default name (“event category B”) to a custom name; and anotifications indicator 1340 for enabling/disabling notifications sent in response to detection of motion events assigned to event category B. InFIG. 13B , thesecond region 1337 includes a representation of the video feed from the respective camera with alinear motion vector 1342 representing the typical path of motion for motion events assigned event category B. In some implementations, the representation of the video feed is a static image recently captured from the video feed or the live video feed.FIG. 13B also illustrates theclient device 504 detecting a contact 1343 (e.g., a tap gesture) at a location corresponding to thecheckbox 1341C on thetouch screen 1306 and a contact 1344 (e.g., a tap gesture) at a location corresponding to thecheckbox 1341E on thetouch screen 1306. For example, the user of theclient device 504 intends to remove the motion events corresponding to therepresentations -
FIG. 13C illustrates theclient device 504 displaying a first portion of a motion events feed 1397 (e.g., in response to detecting selection of the “Motion Events Feed” affordance). InFIG. 13C , the motion events feed 1397 includes representations 1398 of motion events. InFIG. 13C , each of the representations 1398 is associated with a time at which the motion event was detected, and each of the representations 1398 is associated with an event category to which it is assigned to the motion event (if any) and/or a zone which it touches or overlaps (if any). InFIG. 13C , each of the representations 1398 is associated with a unique display characteristic indicator 1325 representing the display characteristic for the event category to which it is assigned (if any) and/or the zone which it touches or overlaps (if any). For example, therepresentation 1398A corresponds to a respective motion event that was detected at 10:39:45 am. - In
FIG. 13C , the motion events feed 1397 also includes: anexit affordance 1399, which, when activated (e.g., via a tap gesture), causes theclient device 504 to display a previous user interface (e.g., the video monitoring UI inFIG. 13A ); and afiltering affordance 13100, which, when activated (e.g., via a tap gesture), causes theclient device 504 to display a filtering pane. InFIG. 13C , the motion events feed 1397 further includes ascroll bar 13101 for viewing the balance of the representations 1398 in the motion events feed 1397. -
FIG. 14A illustratesuser interface 1400 for providing event alerts, in accordance with some implementations.FIG. 14A showsclient device 504 displayinguser interface 1400 ontouch screen 1102. Theuser interface 1400 includesalert section 1402 displaying a home alert. The home alert includes analert message 1404 indicating the category of the motion event (e.g., a person event category) and the time the motion event occurred (12:32 PM). In some implementations,user interface 1400 comprises a home screen. In some implementations,user interface 1400 comprises a lock screen. In some implementations, in response to a user selection ofalert section 1402, a smart home application is opened or launched (e.g., utilizing user interface module 826,FIG. 8 ). In some implementations, in response to a user selection ofalert section 1402, a video monitoring user interface is displayed, such asuser interface 1308 inFIG. 13A . In some implementations, the user selection of thealert section 1402 comprises a user swipe gesture over the portion of thetouch screen 1102 corresponding to thealert section 1402. In some implementations, the user selection of thealert section 1402 comprises a user tap gesture, or double-tap gesture, over the portion of thetouch screen 1102 corresponding to thealert section 1402. In some implementations, the alert includes additional information not shown inFIG. 14A , such as information regarding the smart devices involved in the motion event (e.g., the camera that captured the motion event) and/or information regarding the duration of the motion event. In some implementations,alert section 1402 includes one or more of: an affordance for opening a smart home application that presented to the alert, an affordance for initiating playback of the motion event, an affordance for ignoring or cancelling the alert, and an affordance for snoozing the alert. - In some implementations,
user interface 1400 includes a plurality of alert sections, each alert section corresponding to a distinct event. For example,user interface 1400 includes a first alert section for a first alert corresponding to a motion event that occurred at 12:10 PM, and a second alert section for a second alert corresponding to an audio event that occurred at 12:45 PM. In some implementations, the plurality of alert sections is sorted chronologically (e.g., with most recent alerts displayed on top). In some implementations, the plurality of alert sections is sorted by importance. -
FIGS. 14B-14C illustrate example event alerts, in accordance with some implementations.Alert 1406 includesalert message 1408 indicating that a general motion event had occurred at a particular time (12:32 PM). In some implementations, alert 1406 is generated in accordance with a determination that the motion event included no particular entities or objects. In some implementations, alert 1406 is generated in accordance with a determination that no particular entities or objects in the motion event were recognized with sufficient confidence (e.g., above a predetermined confidence threshold). -
Alert 1410 includesalert message 1412 indicating that a motion event involving a particular zone (Zone A) had occurred at 12:32 PM. In some implementations, the particular zone is a zone of interest denoted by a user of the smart home application. In some implementations, “Zone A” is a user-defined title for the particular zone. -
Alert 1414 includesalert message 1416 indicating that a motion event likely involving a person had occurred at 12:32 PM. Thus, alert 1414 conveys information regarding both an event category for the motion event and the corresponding confidence level for the category. For example, an instance of a person was detected in the motion event with a corresponding confidence level above confidence threshold 71714 (FIG. 7C ) but belowconfidence threshold 71712. -
Alert 1418 includesalert message 1420 indicating that a motion event involving a person had occurred during a particular time period (12:32 PM-12:35 PM). Thus, alert 1414 conveys information regarding both an event category for the motion event and a duration of the motion event. In some implementations, thealert message 1420 corresponds to an event category with a high corresponding confidence level, such as a confidence level above confidence threshold 71712 (FIG. 7C ). In accordance with some implementations, alert 1414 is generated as a first alert for a particular motion event and alert 1418 is generated as a second alert or updated alert for the particular motion event. For example, alert 1414 is generated based on an initial event category and corresponding confidence level for the motion event, such as an event category assigned after analyzing a few seconds (e.g., 5, 10, 15, or 30 seconds) of the motion event. In this example, alert 1418 is generated after analyzing the entire 3 minute event. -
Alert 1422 includesalert message 1424 indicating that a motion event involving an unknown person had occurred at a particular time (12:32 PM). In some implementations, an unknown person comprises an unrecognized detected person. For example, a person is detected, but the person cannot be identified via facial recognition or otherwise. In some implementations, alert 1422 is generated in accordance with a determination that the person is not recognized as any particular person with a confidence score meeting particular criteria. For example, the detected person is determined to be a known person, “John”, with a confidence score of 48 and is determined to be “Paul” with a confidence score of 36. In this example, a confidence score below a confidence threshold (e.g.,confidence threshold 71716,FIG. 7C ) results in the detected person not being identified as the known person. Thus, the detected person is not identified as either “John” or “Paul” and the correspondingalert message 1424 states “unknown person.” -
Alert 1426 includesalert message 1428 indicating that activity was detected at a particular time (12:32 PM). In some implementations,alert message 1428 is equivalent to alertmessage 1408. In some implementations, alert 1428 is generated in accordance with a determination that the activity included no particular entities or objects. In some implementations, alert 1428 is generated in accordance with a determination that no particular entities or objects in the motion event were recognized with sufficient confidence (e.g., above a predetermined confidence threshold). -
Alert 1430 includesalert message 1432 indicating that activity involving a particular animal (Sparky the dog) was detected at a particular time (12:32 PM). In some implementations,alert message 1432 corresponds to entity detection identifying a dog entity in the activity (e.g., motion event) and entity recognition identifying the dog entity as Sparky the dog. In some implementations,alert message 1432 corresponds to a particular event category for Sparky the dog. -
Alert 1434 includesalert message 1436 indicating that an alert event involving a person occurred at a particular time (12:32 PM). In some implementations, an alert event comprises an event detected by a non-camera smart device, such as a smart thermostat, a smart hazard detector, a smart door lock, or the like. For example, a smart hazard detector detects smoke and triggers an alert event. In some implementations, an alert event triggered by a non-camera smart device is associated with a particular portion of a video feed from a camera. For example, an alert event triggered by a smart door lock is associated with a camera feed from a camera directed at the door in which the smart door lock is installed. Thus, a user (e.g., a user of the smart home application) may view video footage of the front door for a period of time immediately after the alert triggered by the smart door lock. In some implementations, the alert event was determined to involve a person based on an analysis of information from one or more smart devices, such as visual data from a camera or audio data from a microphone. In some implementations,alert message 1436 corresponds to a high confidence score for the person detection, such as a confidence score above confidence threshold 71712 (FIG. 7C ). -
Alert 1438 includesalert message 1440 indicating that an audio event, probably involving a vehicle, occurred at a particular time (12:32 PM). In some implementations, an audio event comprises an event detected by one or more microphones (e.g., one or more microphones of a smart device 204). In some implementations, an audio event detected by a microphone is associated with a particular portion of a video feed from a camera. For example, an audio event triggered by a microphone on a smart thermostat is associated with a camera feed from a camera located in the vicinity of the smart thermostat (e.g., within the same room or space). Thus, a user may view video footage for a period of time immediately before, during, and/or immediately after the detected audio event. In some implementations, the audio event was determined to probably involve a vehicle based on an analysis of information from one or more smart devices, such as visual data from a camera or the detected audio data. In some implementations,alert message 1440 corresponds to a confidence score for the object detection meeting certain criteria, such as within a particular confidence range. For example, a confidence score for the vehicle detection is aboveconfidence threshold 71714, but below confidence threshold 71712 (FIG. 7C ). -
Alert 1442 includesalert message 1444 indicating that an event involving an identified person (Jack) and an unknown person occurred within a particular zone of interest (Zone A) at a particular time (12:32 PM). In some implementations, the event comprises one or more of: a motion event, an audio event, and an alert event. In some implementations, thealert message 1444 indicates that the person denoted as “Jack” was identified with a high confidence level, such as a confidence score for the person recognition above confidence threshold 71712 (FIG. 7C ). In some implementations, thealert message 1444 indicates that the person denoted as “unknown person” was either not identified or not identified with a high enough confidence level. For example, the unknown person was not identified as being any particular person with a corresponding confidence score above confidence threshold 71716 (FIG. 7C ). In some implementations, thealert message 1444 indicates that the event occurred at least in part within Zone A. In some implementations, Zone A corresponds to a user-defined zone of interest. In some implementations, Zone A corresponds to a recognized zone within a scene (e.g., a front door of a dwelling). In some implementations, alert 1442 corresponds to an event category for events involving a known person, an unknown person, and a zone of interest. In some implementations, alert 1442 corresponds to multiple event categories, such as an event category for events involving a recognized person, an event category for events involving an unknown person, and an event category for events involving a zone of interest. - In some implementations, one or more alert presentation characteristics are adjusted based on the corresponding event category. For example, alerts involving unknown persons, such as alert 1422, include an audio component whereas alerts involving known entities, such as alert 1430 do not include an audio component. In some implementations, one or more alert display characteristics are adjusted based on the corresponding event category. For example, alerts involving a zone of interest, such as alert 1410, include a colored border (e.g., a color corresponding to the particular zone of interest), whereas alerts not involving a zone of interest, such as alert 1408, include a black border. In some implementations, one or more alert presentation characteristics are adjusted based on the time since the event was detected (or occurred).
-
FIGS. 15A-15I illustrate examples of person detection in a video feed, in accordance with some implementations.FIGS. 15A-15C illustrate a multi-pass approach to person detection, in accordance with some implementations.FIG. 15A shows the results of an initial person detection analysis. InFIG. 15A two bounding boxes,bounding box 1502 andbounding box 1504, are displayed. The bounding boxes each correspond to an instance of a potential person based on the initial analysis.FIG. 15B shows aregion 1506 selected for use with a second person detection analysis.Region 1506 is selected such that it encompasses bothbounding box 1502 andbounding box 1504. In some implementations,region 1506 comprises a square region. In some implementations,region 1506 comprises a region with a rectangular shape, triangular shape, circular shape, and etcetera. In some implementations, multiple regions are selected (e.g., a region around each bounding box). In some implementations, a particular bounding box is the selected region.FIG. 15C shows the results of a second person detection analysis performed onregion 1506.FIG. 15C showsbounding box 1508, corresponding to boundingbox 1502, containing a detected person.FIG. 15C does not have a bounding box corresponding to boundingbox 1504 as the second analysis determined that the jacket on the chair was not a person. Thus, the detected instance of the potential person withinbounding box 1504 comprises a false positive. In some implementations, theregion 1506 shownFIG. 15C is analyzed at a higher resolution during the second analysis than theregion 1506 was analyzed during the first analysis. For example, the image shown inFIG. 15A (e.g., an image corresponding to the field of view of a camera) is analyzed with a resolution of 1280×720 and the image shown inFIG. 15C (e.g., an image corresponding to region 1506) is analyzed with a resolution of 1280×720. Thus, in this example, the resolution ofregion 1506 improves fromFIG. 15A toFIG. 15C . -
FIGS. 15D-15F illustrate a multi-pass approach to person detection, in accordance with some implementations.FIG. 15D shows the results of an initial person detection analysis. InFIG. 15D three bounding boxes,bounding box 1510,bounding box 1512, andbounding box 1514, are displayed. The bounding boxes each correspond to an instance of a potential person based on the initial analysis.FIG. 15E shows aregion 1516 selected for use with a second person detection analysis.Region 1516 is selected such that it encompasses bothbounding box 1510 andbounding box 1514. In some implementations, the potential person inbounding box 1512 is identified as a false positive (e.g., based on a previous analysis such as the analysis of the image inFIG. 15C ). In some implementations, a second region is selected to encompassbounding box 1512. In some implementations,region 1516 is selected such that it encompasses boundingboxes FIG. 15F shows the results of a second person detection analysis performed onregion 1516.FIG. 15F showsbounding box 1518, corresponding to boundingbox 1510, containing a detected person; andbounding box 1520 corresponding to boundingbox 1514 containing a second detected person. -
FIGS. 15G-15I illustrate a multi-pass approach to person detection, in accordance with some implementations.FIG. 15G shows the results of an initial person detection analysis. InFIG. 15G two bounding boxes,bounding box 1522 andbounding box 1524, are displayed. The bounding boxes each correspond to an instance of a potential person based on the initial analysis.FIG. 15H shows aregion 1526 selected for use with a second person detection analysis.Region 1526 is selected such that it encompasses bothbounding box 1522 andbounding box 1524.FIG. 15I shows the results of a second person detection analysis performed onregion 1526.FIG. 15I showsbounding box 1528, corresponding to boundingbox 1522, containing a first detected person; andbounding box 1530 corresponding to boundingbox 1524 containing a second detected person. -
FIGS. 16A-16C illustrate examples of alert logic for use with some implementations.FIG. 16A shows an example of alert logic for use in a smart home system. As shown inFIG. 16A , after an alert has been generated, the system forgoes generating any subsequent alerts for a predetermined amount of time (e.g., 30 minutes).FIG. 16A showsmotion 1604 detected attime 0 and generation of acorresponding motion alert 1602.FIG. 16A also shows subsequent motion, such asmotion 1608, detected within 30 minutes after generation ofmotion alert 1602 and the system forgoing generating any corresponding alerts.FIG. 16A further showsmotion 1610 detected attime 30 and generation of acorresponding motion alert 1606. -
FIG. 16B shows another example of alert logic for use in a smart home system. As shown inFIG. 16B , when motion is detected, the system determines whether motion has been detected in a preceding predetermined amount of time (e.g., 30 minutes). If no motion has been detected in the preceding predetermined amount of time, the system generates an alert for the motion.FIG. 16B showsmotion 1614 detected attime 0 and generation of acorresponding motion alert 1612.FIG. 16B also shows subsequent motion, such asmotion 1616, detected within 30 minutes after any preceding motion, and the system forgoing generating any corresponding alerts.FIG. 16B further showsmotion 1620 detected at time 63, more than 30 minutes after theprevious motion 1616 at time 31, and generation of acorresponding motion alert 1618.FIG. 16B further shows a series of motion detected aftermotion 1620, includingmotion 1622, and the system forgoing generating any additional alerts. - In some implementations, motion is grouped into events and an alert is generated for each event. Thus, two instances of detected motion generate a single alert if it is determined that the two instances comprise a single motion event, and the two instances of detected motion generate two alerts if it is determined that the two instances comprise two distinct motion events.
-
FIG. 16C shows an example of alert logic with multiple types of alerts for use in a smart home system. As shown inFIG. 16C , the system detects both motion and persons. In some implementations, a person is detected when detected motion is determined to comprise an instance of a person with a sufficiently high confidence score, such as a confidence score above confidence threshold 71716 (FIG. 7C ). In some implementations, person detection is performed independently of motion detection. In some implementations, person detection comprises analyzing individual images within the video stream to determine if any of the images contain a person. -
FIG. 16C showsmotion 1632 detected attime 0 and generation of acorresponding motion alert 1630.FIG. 16C also shows detectedmotion 1638 and a detectedperson 1636 at time 25. In response to the detected person, the system determines whether a person has been detected within a preceding predetermined amount of time (e.g., 10 minutes). In accordance with a determination that a person has not been detected within the preceding predetermined amount of time, the system generates person alert 1634. In some implementations, in accordance with a determination that multiple types of detections have occurred, the system generates only a single alert. In some implementations, the system generates an alert for the detection type with the highest priority. In some implementations, the system generates an alert for the detection type highest in a detection type hierarchy.FIG. 16C also shows aperson 1640 detected at time 38 and the system forgoing generating an alert in accordance with a determination that a person had been detected within a preceding predetermined amount of time (e.g., 10 minutes). -
FIG. 16C also showsmotion 1642 detected at time 63 and the system forgoing generating an alert in accordance with a determination that either motion or a person had been detected within a preceding predetermined amount of time (e.g., 30 minutes). In the example ofFIG. 16C ,person 1640 is detected at time 38 andmotion 1642 is detected at time 63 and thus the time between detections is 25 minutes, which is less than the 30 minute threshold for generating a motion alert. In some implementations, the system forgoes generating an alert in accordance with a determination that either a detection of the detection type or a detection type higher in a detection type hierarchy has been detected within a preceding predetermined amount of time. In some implementations, the system forgoes generating an alert in accordance with a sole determination that a detection of the detection type has been detected within a preceding predetermined amount of time. -
FIG. 16C also shows aperson 1646 detected at time 69 and the system generating person alert 1644 in accordance with a determination that a person has not been detected within a preceding predetermined amount of time (e.g., 10 minutes). In some implementations, distinct detection types correspond to distinct predetermined amounts of time. For example, a person detection corresponds to a 10 minute amount of time, an audio detection corresponds to a 20 minute amount of time, and a motion detection corresponds to a 30 minute amount of time. In some implementations, the predetermined amounts of time are stored in a database, such as server database 716 (FIG. 7A ). In some implementations, the predetermined amounts of time comprise alert criteria 7172 (FIG. 7A ).FIG. 16C also shows aperson 1650 detected at time 89 and the system generating person alert 1648 in accordance with a determination that a person has not been detected within a preceding predetermined amount of time (e.g., 10 minutes). - Attention is now directed to the flowchart representations of
FIGS. 17A-17C and 18 .FIGS. 17A-17C illustrate a flowchart representation of amethod 1700 of person detection in a video feed, in accordance with some implementations.FIG. 18 illustrates a flowchart representation of amethod 1800 for providing event alerts, in accordance with some implementations. - In some implementations, the
methods smart home environment 100,FIG. 1 ; (2) one or more computing systems, such as smart homeprovider server system 164 ofFIG. 1 and/orserver system 508 ofFIG. 5 ; or (3) a combination thereof. In some implementations,methods FIG. 9 ) or a component thereof, such asdata processing module 9322. In some implementations,methods FIG. 8 ) or a component thereof, such asalert module 8284. Thus, in some implementations, the operations of themethods methods methods server system 508 and/or the one or more CPU(s) 1002 of smart homeprovider server system 164. For convenience,methods server system 508 ofFIG. 5 . - Referring now to
FIGS. 17A-17C . - The system obtains (1702) a video feed. In some implementations, the system obtains the video feed from a
camera 118 within the smart home environment 100 (FIG. 1 ). In some implementations, the system obtains the video feed via network interface(s) 704 utilizing network communication module 712 (FIG. 7A ). - The system obtains or identifies (1704) an event indicator. In some implementations, the system receives the event indicator from a
camera 118. In some implementations, thecamera 118 determines if sufficient motion is present in the video feed. If sufficient motion is detected, the camera sends the event indicator to the system. In some implementations, the server system receives the video feed from the camera and determines if sufficient motion is present in the video feed. If sufficient motion is detected, the system generates an event indicator. In some implementations, the event indicator indicates that a motion event candidate is present in a portion of the video feed. In some implementations, the event indicator comprises a cuepoint, such as those discussed above with reference toFIG. 11B . In some implementations, the event indicator comprises motion start information. In some implementations, the system utilizes data processing module 7144 (FIG. 7A ) to analyze the video feed and determine if sufficient motion is present. In some implementations, the event indicator includes a timestamp of when the event began. - The system obtains (1706) a plurality of pre-event images (e.g., 5, 10, or 15 images) from the video feed. In some implementations, the system stores the received video feed and, in response to obtaining or identifying an event indicator, retrieves the plurality of pre-event images from storage. For example,
server system 508 stores the video feed inserver database 716 and retrieves the plurality of pre-event images usingevent processor sub-module 7146. In some implementations, the plurality of pre-event images comprises the plurality of images immediately preceding the timestamp of the event indicator. In some implementations, the plurality of pre-event images comprises a plurality of consecutive images. In some implementations, the plurality of pre-event images comprises images taken at intervals before the timestamp of the event indicator. For example, the plurality of pre-event images comprises 10 images where each image is selected for each minute preceding the event indicator. For example, the timestamp of the event indicator istime 0, the first image is the image at time −30, the second image is the image at time −90, the third image is the image at time −150, and so on. In some implementations, the plurality of pre-event images comprise every 10th, 30th, 60th, or the like image from the video feed preceding to the event indicator. In some implementations, the pre-event images are selected based on analysis of the video feed. For example, the system performs video analysis to identify images likely to include information relevant to the event. - In some implementations, the system obtains one or more post-event images and processes them with the plurality of pre-event images. In some implementations, the one or more post-event images are images determined to not involve motion. In some implementations, the one or more post-event images are utilized to identify false positives and background for the scene.
- The system determines (1708) whether a first image of the plurality of pre-event images includes one or more potential instances of a person. In some implementations, in accordance with a determination that the first image of the plurality of pre-event images does not include one or more potential instances of a person, the system performs
operation 1716. In some implementations, the system utilizesobject detection sub-module 7152 to determine whether the first image includes one or more potential instances of a person. In some implementations, the system denotes a bounding box around each potential instance of a person. For example,FIG. 15A shows an image containing two potential instances of a person corresponding to boundingbox 1502 andbounding box 1504. In some implementations, determining whether an image includes one or more potential instances of a person includes identifying one or more potential instances and assigning a confidence score to each of the potential instances. In some implementations, if the confidence score meets one or more criteria the system denotes the corresponding instance with a bounding box for further analysis. In some implementations, the determining includes analyzes the one or more potential instances to determine whether one or more of the potential instances comprise false positives. - In some implementations, the system utilizes facial detection to determine whether the first image includes one or more potential instances of a person. In some implementations, the system utilizes historical information for the camera to determine whether the first image includes one or more potential instances of a person. In some implementations, the system utilizes heuristics to determine whether the first image includes one or more potential instances of a person. In some implementations, the system distinguishes the foreground of an image from the background and analyzes the foreground to determine whether the first image includes one or more potential instances of a person. In some implementations, the system distinguishes the foreground of the image from the background based on prior training and/or analysis of previous images captured by the camera. In some implementations, the system utilizes scalable object detection with a deep neural network to determine whether the first image includes one or more potential instances of a person. Scalable object detection using deep neural networks is described in detail in the following paper: Erhan, Dumitru et al., “Scalable Object Detection using Deep Neural Networks,” 2013, which is hereby incorporated by reference in its entirety. In some implementations, the system utilizes a deep network-based object detector to determine whether the image includes one or more potential instances of a person. In some implementations, the system utilizes a single shot multibox detector to determine whether the image includes one or more potential instances of a person. A single shot multibox detector is described in detail in the following paper: Liu, Wei et al., “SSD: Single Shot MultiBox Detector,” 2015, which is hereby incorporated by reference in its entirety.
- In some implementations, after identifying the one or more potential instances of a person, the system analyzes the one or more potential instances to determine whether the one or more potential instances are false positives. In some implementations, the analyzing includes analyzing the dimensions of the potential instances (e.g., the height, width, and proportionality). In some implementations, the analyzing is performed as part of the determination as to whether the first image includes the one or more potential instances of a person.
- In accordance with a determination that the first image of the plurality of pre-event images includes one or more potential instances of a person, the system denotes (1710) one or more regions encompassing the potential instances of a person. In some implementations, the system denotes a square region encompassing each potential instance of a person in the image. In some implementations, the system denotes a rectangular region, triangular region, circular region, or other like encompassing the potential instances of a person. In some implementations, the denoted region is the smallest such region that encompasses the potential instances of a person (e.g., the smallest square region to encompass all potential instances of a person). In some implementations, the region is denoted so as to include a boundary region around the potential instances of a person (e.g., a 10, 50, or 100 pixel boundary region). In some implementations, the system utilizes regioning sub-module 7154 to denote the one or more regions encompassing the potential instances of a person. For example,
FIG. 15B showsregion 1506 encompassing boundingboxes - The system determines (1712) whether the one or more regions include a person. In some implementations, the system utilizes scalable object detection with a deep neural network to determine whether the region includes one or more persons. In some implementations, the system utilizes a deep network-based object detector to determine whether the region includes one or more persons. In some implementations, the system utilizes a single shot multibox detector to determine whether the region includes one or more persons. In some implementations, the system utilizes a same algorithm to determine whether the image includes one or more potential persons and to determine whether the region includes one or more persons. In some implementations, determining whether the one or more regions include a person includes identifying one or more potential persons and assigning a confidence score to each. In some implementations, if the confidence score meets one or more criteria the system denotes the potential person as a person. In some implementations, the system utilizes
object detection sub-module 7152 to determine whether the region includes one or more persons. For example,FIG. 15C shows a person detected withinregion 1506 denoted by boundingbox 1508. In some implementations, the system utilizes facial detection to determine whether the one or more regions include one or more persons. In some implementations, the system distinguishes the foreground of a region from the background and analyzes the foreground to determine whether the region includes one or more persons. - In accordance with a determination that the one or more regions include a person, the system stores (1714) information regarding the included persons. In some implementations, the system stores the information in
server database 716. In some implementations, the system stores the information inevent information database 7166 orevent records 7168. In some implementations, the information regarding the included persons includes information as to the location of the persons within the image. In some implementations, the information includes information such as dimensions, coloring, posture, and the like regarding the included persons. - In some implementations, the system stores information regarding all the potential instances of a person. In some implementations, the system stores information regarding potential instance(s) of a person that do not comprise a person. For example, the system determines that a particular potential instance of a person does not comprise a person and stores information regarding the potential instance (e.g., location, size, etc.) along with information denoting the potential instance as not comprising a person (e.g., a false positive).
- The system determines (1716) whether plurality of pre-event images include any additional images to be processed. In accordance with a determination that the plurality of pre-event images includes another image to be processed, the system repeats
operation 1708 on the next image. Thus, the system analyzes each image of the plurality of pre-event images. For example, if the plurality of pre-event images includes 10 images the system analyzes each of the 10 images. In some implementations, the system analyzes the plurality of pre-event images simultaneously. In some implementations, the system assigns each image to a separate thread to be processed independently (e.g., in parallel). In some implementations, the system does not process any additional images in accordance with a determination that a processed image included a person. In some implementations, the system does not process any additional images in accordance with a confidence level indicating that a processed image included a person. - In accordance with a determination that the plurality of pre-event images does not include another image to be processed, the system obtains (1718) a plurality of post-event images (e.g., 5, 10, 15, or 30 images) from the video feed. In some implementations, the system stores the received video feed and, in response to obtaining or identifying an event indicator, retrieves the plurality of post-event images from storage. For example,
server system 508 stores the video feed inserver database 716 and retrieves the plurality of post-event images usingevent processor sub-module 7146. In some implementations, the plurality of post-event images comprises the plurality of images immediately subsequent the timestamp of the event indicator. In some implementations, the plurality of post-event images comprises a plurality of consecutive images. In some implementations, the plurality of post-event images comprises images taken at intervals after the timestamp of the event indicator. For example, the plurality of post-event images comprises 10 images where each image is selected for each minute subsequent to the time stamp of the event indicator. For example, the timestamp of the event indicator istime 0, the first image is the image attime 0, the second image is the image attime 60, the third image is the image attime 120, and so on. In some implementations, the plurality of post-event images comprise every 10th, 30th, 60th, or the like image from the video feed subsequent to the event indicator. In some implementations, the system analyzes the plurality of post-event images before the plurality of pre-event images. In some implementations, the system analyzes the plurality of post-event images in parallel with the plurality of pre-event images. In some implementations, the post-event images are selected based on analysis of the video feed. For example, the system performs video analysis to identify images likely to include information relevant to the event. In some implementations, images corresponding to the start or stop of motion are selected. In some implementations, images corresponding to an end of a motion track (e.g., a motion stop or exit activity) are selected. In some implementations, the post-event images are selected based on the quality of the image. For example, images that are blurry or saturated are not selected. - The system determines (1720) whether a first image of the plurality of post-event images includes one or more potential instances of a person. In accordance with a determination that the first image of the plurality of post-event images does not include one or more potential instances of a person, the system performs
operation 1734. In some implementations,operation 1720 comprisesoperation 1708. In some implementations, the system utilizesobject detection sub-module 7152 to determine whether the first image includes one or more potential instances of a person. In some implementations, the system denotes a bounding box around each potential instance of a person. - In some implementations, in accordance with a determination that the first image of the plurality of post-event images includes one or more potential instances of a person, the system compares the one or more potential instances of a person with stored persons information (e.g., information stored during operation 1714). For example, the system compares the one or more potential instances of a person with information regarding potential instances of a person detected in the pre-event images that were determined not to comprise a person (e.g., false positives). Thus, in accordance with some implementations, the system eliminates false positives prior to denoting one or more regions encompassing the potential instances of a person or determining whether the one or more regions include a person.
- In accordance with a determination that the first image of the plurality of post-event images includes one or more potential instances of a person, the system denotes (1722) one or more regions encompassing the potential instances of a person. In some implementations,
operation 1722 comprisesoperation 1710. In some implementations, the system denotes the one or more regions so as to exclude one or more potential instances determined to be false positives (e.g., not comprise a person). In some implementations, the system denotes the one or more regions without regard to one or more potential instances determined to be false positives (e.g., not comprise a person). In some implementations, the system denotes a region encompassing each potential instance of a person in the image. - The system determines (1724) whether the one or more regions include a person. In some implementations,
operation 1724 comprisesoperation 1712. In some implementations, the system utilizes a deep network-based object detector to determine whether the region includes one or more persons. In some implementations, the system utilizes a single shot multibox detector to determine whether the region includes one or more persons. In some implementations, the system utilizes a same algorithm to determine whether the image includes one or more potential persons and to determine whether the region includes one or more persons. - In accordance with a determination that the one or more regions include a person, the system compares (1726) information regarding the included person from
operation 1724 with stored persons information (e.g., information stored during operation 1714). In some implementations, the system utilizesdata processing module 7144 and/or objectdetection sub-module 7152 to compare the information. In some implementations, comparing the information includes comparing the location of the included person with the location of the stored persons within the image. - In some implementations, the plurality of post-event images is processed before any pre-event images are processed. In some implementations, the plurality of pre-event images are processed in accordance with a determination that at least one post-event image includes a person.
- The system determines (1728) whether a match is found between the information regarding the included person and the stored persons information. In some implementations, the system utilizes
data processing module 7144 and/or objectdetection sub-module 7152 to determine whether the match is found. In some implementations, determining whether a match is found comprises determining whether the included person is in the same location as one of the stored persons within the image. - In accordance with a determination that a match is found, the system disregards (1730) the included person. In some implementations, in accordance with a determination that a match is found, the system denotes the included person as not part of the event. In some implementations, the system determines whether the match comprises a match to a potential instance of a person previously determined to be a false positive. In some implementations, in accordance with a determination that the match comprises a match to a potential instance of a person previously determined to be a false positive, the system disregards the included person. In some implementations, in accordance with a determination that the match does not comprise a match to a potential instance of a person previously determined to be a false positive, the system denotes the image as containing the included person. In some implementations, in accordance with a determination that the match does not comprise a match to a potential instance of a person previously determined to be a false positive, the system denotes the image as containing the included person as a non-participant in the event.
- In accordance with a determination that a match is not found, the system denotes (1732) the image as containing the included person. In some implementations, the system denotes the image as containing the included person by adding or updating metadata associated with the image. In some implementations, the system stores the information regarding the included person in a database, such as database 716 (
FIG. 7A ). In some implementations, the system stores the information in theevent information database 7166. - The system determines (1734) whether plurality of post-event images include any additional images to be processed. In accordance with a determination that the plurality of post-event images includes another image to be processed, the system repeats
operation 1720 on the next image. Thus, the system analyzes each image of the plurality of post-event images. For example, if the plurality of post-event images includes 10 images the system analyzes each of the 10 images. In some implementations, the system analyzes the plurality of post-event images simultaneously. In some implementations, the system assigns each image to a separate thread to be processed independently (e.g., in parallel). In some implementations, the system does not process any additional images in accordance with a determination that a processed image included a person. In some implementations, the system does not process any additional images in accordance with a confidence level indicating that a processed image included a person. - The system determines (1736) whether plurality of post-event images include an image denoted as containing a person. In some implementations, the system determines whether the plurality of post-event images include an image denoted as containing a person by analyzing metadata for the plurality of post-event images. In some implementations, the system determines whether the plurality of post-event images include an image denoted as containing a person by utilizing a database, such as
server database 716 orevent information database 7166. - In accordance with a determination that the plurality of post-event images include an image denoted as containing a person, the system denotes (1738) the motion event corresponding to the event indicator as involving the person. In some implementations, the system denotes the motion event corresponding to the event indicator as containing a person by editing or adding metadata for the motion event. In some implementations, the system denotes the motion event corresponding to the event indicator as containing a person by storing the information in a database, such as
event information database 7166 orevent records 7168. In some implementations, the system denotes the motion event corresponding to the event indicator as involving the person in accordance with a determination that the person was a participant in the motion event. For example, in accordance with a determination that the person was in motion, the person was in a region in which motion occurred, and/or the person corresponds to a motion track. In some implementations, the system denotes the motion event corresponding to the event indicator as involving the person in accordance with a determination that the person was detected in multiple post-event images. - In some implementations, the system obtains a video feed, the video feed comprising a plurality of images. In some implementations, the system obtains the video feed from a
camera 118 within the smart home environment 100 (FIG. 1 ). In some implementations, the system obtains the video feed via network interface(s) 704 utilizing network communication module 712 (FIG. 7A ). In some implementations, the plurality of images comprise the plurality of post-event images obtained inoperation 1718. - In some implementations, for each image in the plurality of images, the system analyzes the image to determine whether the image includes a person. In some implementations, the system utilizes a deep network-based object detector to determine whether the image includes one or more persons. In some implementations, the system utilizes a single shot multibox detector to determine whether the image includes one or more persons. In some implementations, determining whether the image includes a person includes identifying one or more potential persons and assigning a confidence score to each. In some implementations, if the confidence score meets one or more criteria the system denotes the potential person as a person. In some implementations, the system utilizes
object detection sub-module 7152 to determine whether the image includes one or more persons. - In some implementations, the analyzing includes: (1) determining that the image includes a potential instance of a person by analyzing the image at a first resolution; (2) in accordance with the determination that the image includes the potential instance, denoting a region around the potential instance, where the area of the region is less than the area of the image; (3) determining whether the region includes an instance of the person by analyzing the region at a second resolution, greater than the first resolution; and (4) in accordance with a determination that the region includes the instance of the person, determining that the image includes the person. For example,
FIGS. 15A-15C illustrate the analyzing including: (1) determining that the image includes a potential instance of a person (1502,FIG. 15A ); (2) denoting a region around the potential instance (1506,FIG. 15B ); (3) determining whether the region includes an instance of the person (FIG. 15C ); and (4) determining that the image includes the person (1508,FIG. 15C ). In some implementations, the region is analyzed at the same resolution as the image. In some implementations, the region is analyzed at a lower resolution than the image. In some implementations, the region comprises the image. In some implementations: (1) the video feed comprises a high resolution video feed, and (2) the system, prior to analyzing the image at the first resolution, downsamples the image from an initial resolution to the first resolution. In some implementations: (1) analyzing the image at the first resolution comprises utilizing a person detection algorithm to analyze the image, and (2) analyzing the region at the second resolution comprises utilizing the same person detection algorithm to analyze the region. In some implementations, in accordance with a determination that the region comprises at least a threshold amount of the image, such as 80%, 90, or the like, the system forgoes determining whether the region includes an instance of a person. In some implementations, the system assigns a confidence score to the potential instance; and, in accordance with a determination that the confidence score meets one or more predetermined criteria, the system forgoes determining whether the region includes an instance of a person. In some implementations, when the system forgoes determining whether the region includes an instance of a person, the system determines whether the image includes a person based on the analysis of the image at the first resolution. - In some implementations, for each image of the plurality of images, the system assigns a confidence score to the image. For example, the system assigns a confidence score to the image in
FIG. 15A based on the analysis of the instance of the person in bounding box 1508 (FIG. 15C ). In some implementations, the system utilizesobject detection sub-module 7152 to assign the confidence score to the image. - In some implementations, the confidence score is based on the analysis of the image at the first resolution. For example, a confidence score for the image in
FIG. 15A is based on the analysis illustrated inFIG. 15A (e.g., the analysis of the potential instances of a person in boundingboxes 1502 and 1504). In some implementations, the confidence score is based on the analysis of the region at the second resolution. For example, a confidence score for the image inFIG. 15A is based on the analysis illustrated inFIG. 15C (e.g., the analysis of the instance of a person in bounding box 1508). In some implementations, the confidence score comprises an aggregation of information from the analysis of the image and the analysis of the region. - In some implementations: (1) the video feed includes a motion event, and (2) in accordance with a determination that the confidence score for at least one image of the plurality of images exceeds a predetermined threshold, the system denotes the motion event as involving a person. For example,
FIGS. 15D-15I illustrate images that include a motion event—a person walking through the field of view. Thus, in accordance with a determination that the confidence score for either the image inFIG. 15D or the image inFIG. 15G exceeds a predetermined threshold (e.g.,confidence threshold 71716,FIG. 7C ), the system denotes the motion event as involving a person (e.g., the person inbounding box 1530,FIG. 15I ). In some implementations, the system determines whether a detected person is a participant in the motion event and, in accordance with a determination that the identified person is a participant, the system denotes the motion event as involving a person. In some implementations, the system denotes the motion event by adding/updating information in a database, such asevent information database 7166 or event records 7168 (FIG. 7A ). In some implementations, the system utilizesevent processor sub-module 7146 and/or event categorizer sub-module 7148 to determine whether a confidence score for at least one image of the plurality of images exceeds a predetermined threshold. In some implementations, the system utilizesobject detection sub-module 7152 to determine whether a confidence score for at least one image of the plurality of images exceeds a predetermined threshold. - In some implementations, the video feed includes at least one of a motion event, an audio event, and an alert event. In some implementations, the video feed includes metadata denoting times when an audio or alert event occurred. In some implementations, the metadata is stored in a database, such as
event information database 7166 orevent records 7168. In some implementations, in accordance with a determination that the confidence score for at least one image of the plurality of images corresponding to an event exceeds a predetermined threshold, the system denotes the event as involving a person. - In some implementations, determining that the image includes the potential instance of the person comprises: (1) detecting the potential instance of the person; (2) assigning a confidence score to the potential instance of the person; and (3) in accordance with a determination that the confidence score meets one or more predetermined criteria (e.g.,
confidence criteria 7171,FIG. 7A ), determining that the images include the potential instance of the person. For example, as illustrated inFIG. 15D a potential instance of a person is detected withinbounding box 1512. In this example, a confidence score is assigned to the potential instance of a person, and, as show inFIG. 15E , theregion 1516 does not encompassbounding box 1512 due to the confidence score failing to meet the predetermined criteria. Conversely, a potential instance of a person is detected withinbounding box 1510 and theregion 1516 encompasses boundingbox 1510 because the confidence score for the potential instance of a person inbounding box 1510 meets the predetermined criteria. In some implementations, assigning the confidence score to the potential instance of the person comprises assigning the confidence score based on analysis of one or more additional images (e.g., images preceding or subsequent to the image that includes the potential instance of the person). - In some implementations, in accordance with a determination that the region includes the person, the system denotes the image as containing a person. For example, in accordance with a determination that region 1506 (
FIG. 15B ) includes a person (e.g., the person inbounding box 1508,FIG. 15C ), the system denotes the image shown inFIG. 15A as containing a person. In some implementations, the system denotes the image as containing a person by adding or updating information in a database, such asevent information database 7166 ordata storage database 7160. In some implementations, denoting the image as containing a person comprises adding or updating metadata for the image. - In some implementations, in accordance with a determination that the region does not include the person, the system denotes the image as not containing a person. In some implementations, the system denotes the image as not containing a person by adding or updating information in a database, such as
event information database 7166 ordata storage database 7160. In some implementations, denoting the image as not containing a person comprises adding or updating metadata for the image. In some implementations, in accordance with a determination that the region does not include the person, the system forgoes denoting the image (e.g., forgoes denoting the image as containing, or not containing, a person). - In some implementations, the system: (1) determines whether the region includes one or more persons other than the potential person; and (2) in accordance with a determination that the region includes the one or more other persons, denotes the image as containing a person. For example, the system analyzes an image and determines that it includes one potential instance of a person. The system denotes a region around the potential instance, and then analyzes the region to determine whether it includes any persons. In this example, as a result of the analysis of the region, the system determines that the region includes two persons: one corresponding to the potential instance, and one not detected in the analysis of the entire image. In another example, the system determines that the region includes one person, but not one corresponding to the potential instance. For example, the system analyzes the entire image and flags a jacket hanging on the wall next to a window as a potential person. The system denotes a region encompassing the jacket and the window and analyzes the region. In analyzing the region the system determines that the jacket is not a person, but that a person is present outside the window. In some implementations, determining whether the region includes an instance of the person comprises re-analyzing the potential instance of the person. In some implementations, determining whether the region includes an instance of the person comprises utilizing a deep network-based object detector to determine whether the region includes one or more persons. In some implementations, determining whether the region includes an instance of the person comprises utilizing a single shot multibox detector. In some implementations, the system utilizes
object detection sub-module 7152 to determine whether the region includes one or more persons. - In some implementations, the system: (1) determines that one or more images of the plurality of images includes a person; (2) obtains a second plurality of images, the second plurality of images preceding the motion event; (3) for each image in the second plurality of images, analyzes the image to determine whether the image includes the person; (4) in accordance with a determination that one or more images of the second plurality of images do not include the person, denotes the motion event as involving the person; and (5) in accordance with a determination that one or more images of the second plurality of images include the person, forgoes denoting the motion event as involving the person. In some implementations, the system determines whether a person is a participant in an event by analyzing images preceding the event to determine if the person was already present in the scene prior to the event occurring. For example,
FIGS. 15D-15I illustrate images that include a motion event—a person walking through the field of view.FIGS. 15D-15I also include a person sitting in a chair reading. In accordance with some implementations, the system analyzes the image shown inFIG. 15A and determines that a person is present withinbounding box 1502. The system then forgoes denoting the motion event inFIGS. 15D-15I as including the person withinbounding box 1502 as the system determines that the person was not a participant in the motion event. In some implementations, the second plurality of images comprises the plurality of pre-event images obtained inoperation 1706. - In some implementations, the system: (1) in accordance with a determination that an image includes multiple potential instances of a person, denotes a region around each potential instance; and (2) for each region, determines whether the region includes an instance of a person by analyzing the region at a second resolution, greater than the first resolution. In some implementations, a region is denoted around a subset of the multiple potential instances. For example, in the image shown in
FIG. 15E theregion 1516 encompasses boundingboxes box 1512. In some implementations, the system utilizes regioning sub-module 7154 to denote a region. - In some implementations, the system: (1) in accordance with a determination that an image includes multiple potential instances of a person, denotes a region encompassing each potential instance; and (2) determines whether the region includes one or more instances of a person by analyzing the region at a second resolution, greater than the first resolution. For example, in the image shown in
FIG. 15H theregion 1526 encompasses bothbounding box 1524 andbounding box 1522. In some implementations, the system utilizes regioning sub-module 7154 to denote the region andobjection detection sub-module 7152 to analyze the denoted region. In some implementations, the system determines whether the region includes one or more instances of a person by analyzing the region at a second resolution less than the first resolution. In some implementations, the system determines whether the region includes one or more instances of a person by analyzing the region at the first resolution. - In some implementations, the system determines an approximate age of the potential person. For example, the system determines whether the potential person is an infant, toddler, adolescent, or adult. In some implementations, the system determines the approximate age of the potential person based on one or more of the potential person's dimensions (e.g., weight and/or height). In some implementations, the system categorizes potential persons as either children or adults based on the potential person's dimensions.
- In some implementations, the system, for each image in the plurality of images, analyzes the image to determine whether the image includes a particular object, the analyzing including: (1) determining whether the image includes a potential instance of the particular object by analyzing the image at a first resolution; (2) in accordance with a determination that the image includes a potential instance, denoting a region around the potential instance, wherein the area of the region is less than the area of the image; (3) determining whether the region includes an instance of the particular object by analyzing the region at a second resolution, greater than the first resolution; and (4) in accordance with a determination that the region includes an instance of the particular object, determining that the image includes the particular object. In some implementations, the system utilizes scalable object detection with a deep neural network to determine whether the first image includes the particular object. In some implementations, the system utilizes a deep network-based object detector to determine whether the image includes the particular object. In some implementations, the system utilizes a single shot multibox detector to determine whether the image includes the particular object. In some implementations, the particular object comprises a vehicle, such as a car, truck, boat, or airplane. In some implementations, the particular object comprises a weapon. In some implementations, the particular object comprises an entity such as an animal (e.g., a pet).
- In some implementations, the system determines whether the motion event involves a person by analyzing one or more relationships between images including persons of the plurality of images. In some implementations, determining whether the motion event involves a person comprises determining whether the person appears in distinct locations in respective images of the plurality of images. For example,
FIGS. 15D-15I illustrate images that include a motion event—a person walking through the field of view. In this example, the system determines that the person in bounding box 1514 (FIG. 15D ) and bounding box 1524 (FIG. 15G ) is a participant in the motion event because the person's location has changed between images. Conversely, the system determines that the person in bounding box 1510 (FIG. 15D ) and bounding box 1522 (FIG. 15G ) is not a participant in the motion event because the person's location has not changed between images. In this example, the system denotes the motion event as involving the person inbounding box 1514, but does not denote the motion event as involving the person inbounding box 1510. In some implementations, the system utilizingevent processor sub-module 7146 to analyze the one or more relationships between images that include person(s). In some implementations, the system analyzes whether a detected person has an associated motion track for the motion event. In some implementations, the system determines that a detected person with an associated motion track is involved in the motion event, and a detected person without an associated motion track is not involved in the motion event. In some implementations, the system determines that the motion event involves a person in accordance with a determination that the person was detected in multiple images with a variance in location from image to image. In some implementations, the system generates a track for the person based on the person's detected location within each image of the plurality of images, and determines that the motion event involves the person in accordance with a determination that the person's track meets certain criteria (e.g., is longer than some predefined threshold). In some implementations, the system stores information regarding detected person within the plurality of images. In some implementations, the system aggregates the stored information along with other event information (e.g., as discussed infra with respect toFIG. 11B ) to determine whether the motion event involves the person. In some implementations, the system sends the stored information, along with other event information, to a categorizer to process the event (e.g., categorizer2 1141,FIG. 11F ). In some implementations, the categorizer determines whether the motion event involves the person. In some implementations, the categorizer assigns a category to the motion event, where the category indicates whether the motion event involves the person. In some implementations, the categorizer sends the assigned category to the system. In some implementations, the categorizer comprises a support vector machine classifier, a decision tree classifier, or the like. - In some implementations, one or more of the above method operations are performed by a smart device, such as smart device 204 (
FIG. 9 ). In some implementations, one or more of the above method operations are performed by a camera 118 (FIG. 1 ). - It should be understood that the particular order in which the operations in
FIGS. 17A-17C have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed. One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein are also applicable in an analogous manner to themethod 1700 described above with respect toFIGS. 17A-17C . - Referring now to
FIG. 18 . The system obtains (1802) a particular event category for a particular event. For example, the system obtains the particular event category from a categorizer, such ascategorizer 1141 inFIG. 11F . In some implementations, the categorizer is a component of the system, such asevent categorizer sub-module 7148. In some implementations, the categorizer is separate and distinct from the system. - The system determines (1804) a category location within a category hierarchy for the particular event category. For example, the particular event category is an event involving an unknown person (e.g., unknown person(s) event 71702) and the system determines that it is at the top of an event hierarchy as shown in
FIG. 7C . In some implementations, the system analyzes a category hierarchy to determine where in the hierarchy the particular event category is located. In some implementations, the category hierarchy is stored in a database, such asevent information database 7166 orevent categories 7170. In some implementations, the system utilizes event categorizer sub-module 7148 to determine the category location within the category hierarchy. In some implementations, the category hierarchy includes a category for unrecognized events. - The system determines (1806) whether a timer associated with the particular event category meets one or more predetermined criteria. For example, the system determines whether the timer exceeds a preset amount of time, such as 10 minutes, 30 minutes, or 90 minutes. In some implementations, a distinct timer is utilized for each event category within the category hierarchy. In some implementations, the system utilizes alert sub-module 7151 to determine whether the timer associated with the particular event category meets the one or more predetermined criteria.
- In accordance with a determination that the timer associated with the particular event category does not meet the one or more predetermined criteria, the system forgoes (1814) generating an alert for the particular event. For example, the system determines that the timer indicates that it has been less than 10 minutes since the last alert was generated for the particular event's category and the predetermined criteria comprise waiting at least 10 minutes between alerts for the particular event's category. As another example,
FIG. 16B showsmotion 1616 detected within 30 minutes after preceding motion and the system forgoing generating an activity alert. In some implementations, the system generates an indicator for the particular event (e.g., a visual indicator on an event timeline within a smart home application), but forgoes generating an alert. For example, the system generates an indicator such asindicator 1322B inFIG. 13A . In some implementations, the system stores information regarding the particular event (e.g., inevent records 7168,FIG. 7A ), but forgoes generating an alert. - In accordance with a determination that the timer associated with the particular event category meets the one or more predetermined criteria, the system generates (1808) an alert for the particular event. In some implementations, the system utilizes alert sub-module 7151 to generate the alert. For example, the system determines that the timer indicates that it has been more than 30 minutes since the last alert was generated for the particular event's category or for a category above the particular event's category within the category hierarchy. In this example, the predetermined criteria comprise waiting at least 30 minutes between alerts for the particular event's category. As another example,
FIG. 16B showsmotion 1620 detected more than 30 minutes after preceding motion and the system generatingactivity alert 1618. In some implementations, the alert indicates the particular event's category. For example, the alert inFIG. 14A indicates that the particular event is categorized as a motion event involving a person. - In some implementations, the system analyzes one or more timestamps for the particular event category to determine whether or not to generate an alert for the particular event. For example, the system analyzes the timestamp for the most recently generated alert for the particular event. In another example, the system analyzes the timestamps for the most recently generated alert for the particular event as well as the most recently generated alerts for event categories higher in the category hierarchy than the particular event's category.
- The system resets (1810) the timer associated with the particular event category. In some implementations, the system resets the timer in response to generating the alert for the particular event. In some implementations, the system stores a timestamp for the generated alert (e.g., stores the timestamp within server database 716). In some implementations, the system resets the timer in accordance with the determination that the timer meets the one or more predetermined criteria.
- The system resets (1812) one or more timers associated with categories below the particular event category in the category hierarchy. For example, the particular event category comprises unknown person(s)
event category 71702 and the system resets the timer for each event category below unknown person(s)event category 71702 in event categories 7170 (FIG. 7C ). In some implementations, the system resets the one or more timers in response to generating the alert for the particular event. In some implementations, the system resets the one or more timers in accordance with the determination that the timer for the particular event category meets the one or more predetermined criteria. - In some implementations, the system: (1) obtains a first category of a plurality of motion categories for a first motion event, the first motion event corresponding to a first plurality of video frames from a camera; (2) sends a first alert indicative of the first category to a user associated with the camera; (3) after sending the first alert, obtains a second category of the plurality of motion categories for a second motion event, the second motion event corresponding to a second plurality of video frames from the camera; (4) in accordance with a determination that the second category is the same as (or substantially the same as) the first category, determines whether a predetermined amount of time has elapsed since the sending of the first alert; (5) in accordance with a determination that the predetermined amount of time has elapsed, sends a second alert indicative of the second category to the user; and (6) in accordance with a determination that the predetermined amount of time has not elapsed, forgoes sending the second alert. For example, the first category and the second category comprise a known person(s) event category 71704 (
FIG. 7C ) and the system determines that at least 30 minutes have elapsed since the first alert was sent. As another example,FIG. 16C showsperson detection 1646 at time 69 andperson detection 1650 at time 89. In some implementations,person detection 1646 andperson detection 1650 both correspond to the same event category (e.g., unknown person(s)event 71702,FIG. 7C ). In this example, the system determines that at least 10 minutes have elapsed since person alert 1644, corresponding toperson detection 1646 was sent. In accordance with this determination, the system sends person alert 1648, corresponding toperson detection 1650. In some implementations, the system assigns a particular alert type to each event and the system sends a new alert in accordance with a determination that at least a predetermined amount of time has elapsed since the last alert of the particular alert type was sent. In some implementations, determining whether a predetermined amount of time has elapsed since the sending of the first alert comprises determining whether a timer associated with the second category meets one or more predetermined criteria. In some implementations, the system obtains the first event category from a categorizer, such ascategorizer 1141 inFIG. 11F . In some implementations, the categorizer is a component of the system, such asevent categorizer sub-module 7148. In some implementations, the categorizer is separate and distinct from the system. In some implementations, the system utilizes event categorizer sub-module 7148 to obtain the first and second categories. In some implementations, the system utilizes alert sub-module 7151 and/ornetwork communication module 712 to send the first alert. In some implementations, the first alert is presented at a client device, such asclient device 504 inFIG. 14A . In some implementations, the system utilizesdata processing module 7144 or a component thereof (e.g., event categorizer sub-module 7148) to determine whether the second category is the same as the first category. - In some implementations, the predetermined amount of time is based on the category. For example, events of type unknown person(s)
event 71702 have a predetermined amount of time of 10 minutes and events oftype animal event 71708 have a predetermined amount of time of 30 minutes. In some implementations, the predetermined amount of time is based at least in part on an importance metric associated with the first category. For example, more important categories have alerts sent more frequently than less important categories. In some implementations, the predetermined amount of time is based on a confidence level for the event category. For example, a particular event is assigned known person(s) event type 71704 (FIG. 7C ) with a corresponding confidence level of 65. In this example, alerts for known person(s) events with confidence levels above 50 are sent no more than every 20 minutes while known person(s) events with confidence levels below 50 are sent no more than every 30 minutes. In some implementations, the plurality of event categories includes a categories based on the confidence level. For example, a first event category comprises a known persons event with a confidence score above 90 and a second event category comprises a known persons event with a confidence score below 90. - In some implementations: (1) the plurality of motion event categories has a particular category hierarchy, and (2) the system: (a) in accordance with a determination that the second category is not the same as the first category, determines whether a predetermined amount of time has elapsed since sending an alert indicative of the second category or a category above the second category in the category hierarchy; (b) in accordance with a determination that the predetermined amount of time has elapsed since sending an alert indicative of the second category or a category above the second category in the category hierarchy, sends the second alert indicative of the second category to the user; and (c) in accordance with a determination that the predetermined amount of time has not elapsed since sending an alert indicative of the second category or a category above the second category in the category hierarchy, forgoes sending the second alert. For example,
FIG. 16C shows aperson detection 1640 at time 38 and amotion detection 1642 at time 63. In accordance with some implementations,person detection 1640 corresponds to a person event category andmotion detection 1642 corresponds to a general motion event category. In this example, the system determines that the event category for theperson detection 1640 differs from the event category for themotion detection 1642. The system then determines how much time has elapsed since an event of general motion event category or a higher category in the event category hierarchy. In this example, 31 minutes have elapsed since the last motion detection and 25 minutes have elapsed since the last person detection. If the predetermined amount of time is 30 minutes, the system will not send an alert because only 25 minutes have elapsed since the previous person event (corresponding to person detection 1640) and person events are higher in the event category hierarchy than general motion events. - In some implementations, the category hierarchy comprises a plurality of motion event categories and a plurality of confidence levels. For example, the category hierarchy includes a first entry for the first category with a first confidence level and a second entry for the first category and a second confidence.
- In some implementations: (1) sending the first alert to the user comprises utilizing a first delivery method for sending the first alert to the user, and (2) sending the second alert to the user in accordance with a determination that the second category is not the same as the first category comprises utilizing a second delivery method for sending the second alert. For example, utilizing the second delivery method comprises sending the second alert to different devices than the first delivery method; and/or causing the devices to react differently. As another example, the first delivery method includes an audio alert and the second delivery method does not include an audio alert. In some implementations, the first delivery method comprises sending the alert to only one client device associated with the smart home environment. In some implementations, the second delivery method comprises sending the alert to all client devices associated with the smart home environment. In some implementations, the second delivery method utilizes different display characteristics for presenting the alert than the first delivery method. For example, the first delivery method causes the alert shown in
FIG. 14A to have a grey border and the second delivery method causes the alert shown inFIG. 14A to have a red border. - In some implementations: (1) the system generates a confidence level for an association of the motion event candidate with the first category; and (2) the first alert is indicative of the first category and the confidence level. For example, the system determines that a particular motion event, or motion event candidate, is most likely an event involving a person and generates a corresponding confidence level of 76. In this example, the system sends an alert, such as alert 1414 in
FIG. 14B indicating the event category (a person event) and the confidence level (likely involving). - In some implementations, the category hierarchy is based on at least one of: a user preference of the user; a user profile of the user; and a group profile of a group that includes the user. In some implementations, the user preference comprises an express user preference obtained from the user. In some implementations, the user preference comprises an implied user preference (e.g., based on prior user activity, heuristics, and the like). In some implementations, information for the user profile of the user is received from the user. In some implementations, information for the user profile of the user is generated by the system (e.g., based on prior user activity, heuristics, and the like).
- In some implementations, the category hierarchy is based on at least one of: placement of the camera (e.g., indoors or outdoors); a camera type of the camera; one or more settings of the camera; and a time of the motion event candidate. For example, a category hierarchy for an outdoor camera assigns higher position within the category hierarchy to vehicle events than a category hierarchy for an indoor camera assigns to the vehicle events. In some implementations, the camera type of the camera includes information regarding the capabilities of the camera. For example, a category hierarchy for a camera with a high quality microphone assigns higher position within the category hierarchy to audio events than a category hierarchy for a camera with a lower quality microphone assigns to the audio events. In some implementations, the one or more settings of the camera include information regarding an operating state of the camera (e.g., low light mode). For example, a category hierarchy for a camera in low light mode assigns higher position within the category hierarchy to events involving a moving light than a category hierarchy for a camera in a higher light mode assigns to the events involving a moving light. In some implementations, the one or more settings of the camera include a device profile. In some implementations, the one or more settings comprise one or more settings set by a user in the smart home. In some implementations, the one or more settings include a category hierarchy for the camera set at least in part by a user. For example, the user denotes animal events 71708 (
FIG. 7C ) as being at the top of the category hierarchy. In some implementations, the time of the motion event candidate comprises information regarding one or more of: time of day, time of week, time of month, time of year, and the like. For example, audio events occurring at night are higher in a category hierarchy than audio events occurring during the day. In some implementations, the time of the motion event candidate comprises information regarding a time corresponding to the user being away from the smart home or a time corresponding to the user being in the smart home. For example, vehicle events occurring while a user is away from the smart home are higher in a category hierarchy than vehicle events that occur while the user is home. - In some implementations, the system: (1) analyzes one or more audio events corresponding to the first motion event; and (2) determines an event category based on the analyzed one or more audio events and the first category; where the first alert is indicative of the event category. In some implementations, the alert indicates that sound was present. In some implementations, the alert indicates the type of sound present. In some implementations, the alert includes an affordance to playback at least a portion of the audio event. In some implementations, the system assigns a motion event category and an event category, distinct from the motion event category. For example, the motion event category is “John moving in the living room” and the event category is “John singing and dancing in the living room.” In some implementations, the system assigns a motion event category and an audio event category. In some implementations, the audio event category is independent of the motion event category. For example, the motion event category is “John moving in the living room” and the audio event category is “John talking.” In some implementations, the system utilizes data processing module 7144 (
FIG. 7A ) or a component thereof, such asevent processor sub-module 7146 orevent categorizer sub-module 7148, to analyze the one or more audio events and/or determine the event category. - In some implementations, the system: (1) receives a plurality of video frames from a camera, the plurality of video frames including a motion event candidate; (2) categorizes the motion event candidate by processing the plurality of video frames, the categorizing including: (a) associating the motion event candidate with a first category of a plurality of motion event categories; and (b) generating a confidence level for the association of the motion event candidate with the first category; and (3) sends an alert indicative of the first category and the confidence level to a user associated with the camera. For example,
FIGS. 14A-14C show examples of alerts indicative of categories and confidence levels. In some implementations, the system includes the camera. In some implementations, the camera is communicatively coupled to the system. In some implementations, the categorizing includes associating the motion event candidate with a plurality of categories; and generating a confidence level for the association of the motion event candidate with each of the plurality of categories. In some implementations, an alert is generated for the category with the highest confidence level. In some implementations, the system utilizes network interface(s) 704 in conjunction withnetwork communication module 712 to receive the plurality of video frames. In some implementations, the system utilizesevent categorizer sub-module 7148 andevent categories 7170 to categorize the motion event candidate. In some implementations, the system utilizesevent categorizer sub-module 7148 andevent categories 7170 to generate the confidence level. In some implementations, the system utilizes network interface(s) 704 in conjunction withnetwork communication module 712 to send the alert. In some implementations, the system sends alert information to a client device and the client device generates an alert based on the alert information. In some implementations, the system sends an alert to the client device and the client device presents the alert to the user. In some implementations, sending an alert indicative of the first category and the confidence level to the user associated with the camera comprising sending the alert indicative of the first category and the confidence level to the user associated with the camera in accordance with a determination that a descriptive alerts option is enabled. - In some implementations: (1) the system obtains a descriptive phrase indicative of the confidence level; and (2) sending the alert indicative of the first category and the confidence level comprises sending the alert with the obtained phrase. For example, a confidence level above confidence threshold 71716 (
FIG. 7C ) and belowconfidence threshold 71714 corresponds to the phrase “may involve.” For example, the first category comprisesanimal event 71708 and the confidence level is 55 and therefore the alert message states “Activity that may involve Mr. Paws was detected.” As another example, a confidence level above confidence threshold 71714 (FIG. 7C ) and belowconfidence threshold 71712 corresponds to the phrase “likely involves.” As another example, a confidence level above confidence threshold 71712 (FIG. 7C ) corresponds to the term “involving.” For example, the first category comprisesvehicle event 71710 and the confidence level is 97 and therefore the alert message states “Activity involving a vehicle was detected.” - In some implementations, the first category indicates that the motion event involves at least one of: a person; a known person; and an unknown person. For example, the first category indicates that a specific person, such as “Joe” was involved. As another example, the first category indicates that an unrecognized person (e.g., an intruder) was involved. In some implementations, the first category indicates a recognized object or entity is involved, such as a vehicle, a pet, a weapon, or wildlife. In some implementations, sending an alert for an event involving a known person includes sending the name of the person. For example, the alert message states that “A motion event involving Sally occurred.” In some implementations, a known person is determined using facial recognition (e.g., in conjunction with person detection). In some implementations, a known person is determined using gait detection.
- In some implementations, the first category indicates that the motion event involves a particular portion of a field of view of the camera. For example, a camera has a field of view that includes a door. In this example, a motion event involving the door, such as a person entering through the door, is assigned an event category indicative of the door. For example, the alert message for a person entering through the door states that “A person has entered through the living room door.” In some implementations, the first category indicates that the motion event involves a zone of interest. For example, alert 1410 in
FIG. 14B indicates that the motion event involves Zone A. In this example, the motion event category assigned to the motion comprises a Zone A motion category. - In some implementations, the alert indicates whether the confidence level meets one or more predefined criteria. In some implementations, the alert indicates whether or not the confidence level exceeds one or more thresholds. For example, alert 1414 in
FIG. 14B includesalert message 1416 stating “likely involving a person” indicating that the confidence level for the person event category exceeds confidence threshold 71714 (FIG. 7C ). - In some implementations: (1) the system selects a first delivery method of a plurality of delivery methods for sending the alert to the user, where the first delivery method is based at least in part on the confidence level; and (2) sending the alert to the user comprises utilizing a first delivery method for sending the alert to the user. For example, an alert for a person event with a high confidence level is pushed to more user devices than an alert for a person event with a lower confidence level. In some implementations, the delivery method is based on the event category and the confidence level. For example, some delivery methods include sending the alert to different devices than other delivery methods. As another example, some delivery methods cause the devices to react differently than other delivery methods. As another example, some delivery methods include an audio alert and other delivery methods do not include an audio alert. In some implementations, the first delivery method comprises sending the alert to only one client device associated with the smart home environment. In some implementations, the first delivery method comprises sending the alert to all client devices associated with the smart home environment. In some implementations, some delivery methods utilize different display characteristics for presenting the alert than other delivery methods.
- In some implementations, categorizing the motion event candidate by processing the plurality of video frames comprises categorizing the motion event candidate by processing the plurality of video frames and analyzing information received from a device distinct from the camera. For example, the system uses information obtained from multiple smart devices, such as multiple cameras, to categorize the event. As another example, the system uses audio obtained from a smart television to categorize a motion event candidate captured by a camera in the same room as the smart television.
- In some implementations, categorizing the motion event candidate by processing the plurality of video frames comprises analyzing at least one of: total amount of motion in the video frames; direction of motion detected in the video frames; velocity of motion detected in the video frames; and whether motion detected in the video frames corresponds to a recognized activity. In some implementations, total amount of motion in the video frames comprises total amount of motion in a particular video frame of the plurality of video frames. In some implementations, categorizing the motion event candidate by processing the plurality of video frames comprises analyzing one or more motion tracks. In some implementations, the motion event candidate is categorized utilizing processing pipeline 1112 (
FIG. 11B ). - In some implementations: (1) the system analyzes one or more audio events corresponding to the motion event candidate; and (2) generating the confidence level comprises generating the confidence level based at least in part on the analyzed one or more audio events. In some implementations, the system obtains audio information (e.g., raw or preprocessed audio information) and generates the confidence level based at least in part on the audio information. For example, analysis of the motion event candidate indicates that the motion event candidate includes a person screaming. Analysis of contemporaneous audio data capture by a nearby device indicates that a person is screaming. In this example, the system generates a confidence level based on the analysis of the motion event candidate and analysis of the contemporaneous audio.
- In some implementations, the system sends an alert in accordance with a determination that motion has ceased. For example, a camera set in a busy location sends a motion stop alert after a predetermined amount of inactivity (e.g., 5, 10, or 15 minutes).
- In some implementations, one or more of the above method operations are performed by a smart device, such as smart device 204 (
FIG. 9 ). In some implementations, one or more of the above method operations are performed by acamera 118. In some implementations, one or more of the above method operations are performed by aclient device 504. - It should be understood that the particular order in which the operations in
FIG. 18 have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed. One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein are also applicable in an analogous manner to themethod 1800 described above with respect toFIG. 18 . - For situations in which the systems discussed above collect information about users, the users may be provided with an opportunity to opt in/out of programs or features that may collect personal information (e.g., information about a user's preferences or usage of a smart device). In addition, in some implementations, certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be anonymized so that the personally identifiable information cannot be determined for or associated with the user, and so that user preferences or user interactions are generalized (for example, generalized based on user demographics) rather than associated with a particular user.
- Although some of various drawings illustrate a number of logical stages in a particular order, stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art, so the ordering and groupings presented herein are not an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
- It will also be understood that, although the terms first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first category could be termed a second category, and, similarly, a second category could be termed a first category, without departing from the scope of the various described implementations. The first category and the second category are both categories, but they are not necessarily the same category.
- The terminology used in the description of the various described implementations herein is for the purpose of describing particular implementations only and is not intended to be limiting. As used in the description of the various described implementations and the appended claims, the singular forms “a”, “an” and “the” are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will also be understood that the term “and/or” as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms “includes,” “including,” “comprises,” and/or “comprising,” when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.
- As used herein, the term “if” is, optionally, construed to mean “when” or “upon” or “in response to determining” or “in response to detecting” or “in accordance with a determination that,” depending on the context. Similarly, the phrase “if it is determined” or “if [a stated condition or event] is detected” is, optionally, construed to mean “upon determining” or “in response to determining” or “upon detecting [the stated condition or event]” or “in response to detecting [the stated condition or event]” or “in accordance with a determination that [a stated condition or event] is detected,” depending on the context.
- The foregoing description, for purpose of explanation, has been described with reference to specific implementations. However, the illustrative discussions above are not intended to be exhaustive or to limit the scope of the claims to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The implementations were chosen in order to best explain the principles underlying the claims and their practical applications, to thereby enable others skilled in the art to best use the implementations with various modifications as are suited to the particular uses contemplated.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/207,463 US10192415B2 (en) | 2016-07-11 | 2016-07-11 | Methods and systems for providing intelligent alerts for events |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/207,463 US10192415B2 (en) | 2016-07-11 | 2016-07-11 | Methods and systems for providing intelligent alerts for events |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180012460A1 true US20180012460A1 (en) | 2018-01-11 |
US10192415B2 US10192415B2 (en) | 2019-01-29 |
Family
ID=60910523
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/207,463 Active 2036-10-27 US10192415B2 (en) | 2016-07-11 | 2016-07-11 | Methods and systems for providing intelligent alerts for events |
Country Status (1)
Country | Link |
---|---|
US (1) | US10192415B2 (en) |
Cited By (98)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180233010A1 (en) * | 2017-02-13 | 2018-08-16 | Ring Inc. | Neighborhood alert mode for triggering multi-device recording, multi-camera motion tracking, and multi-camera event stitching for audio/video recording and communication devices |
US20180285633A1 (en) * | 2017-03-31 | 2018-10-04 | Avigilon Corporation | Unusual motion detection method and system |
US20180357870A1 (en) * | 2017-06-07 | 2018-12-13 | Amazon Technologies, Inc. | Behavior-aware security systems and associated methods |
US20190182329A1 (en) * | 2016-10-08 | 2019-06-13 | People Power Company | Systems and methods for evaluating sensor data for occupancy detection and responsively controlling control devices |
US10360798B2 (en) * | 2017-05-08 | 2019-07-23 | Nokia Technologies Oy | System and method for trust parameters in vehicle warning messages |
US10432774B2 (en) * | 2017-12-01 | 2019-10-01 | Sfara, Inc. | Personal alarm system and method |
US20190392588A1 (en) * | 2018-01-25 | 2019-12-26 | Malogic Holdings Limited | Cloud Server-Based Mice Intelligent Monitoring System And Method |
US10685060B2 (en) | 2016-02-26 | 2020-06-16 | Amazon Technologies, Inc. | Searching shared video footage from audio/video recording and communication devices |
WO2020123124A1 (en) * | 2018-12-14 | 2020-06-18 | Google Llc | Methods, systems, and media for identifying videos containing objectionable content |
US10742500B2 (en) * | 2017-09-20 | 2020-08-11 | Microsoft Technology Licensing, Llc | Iteratively updating a collaboration site or template |
US10748414B2 (en) | 2016-02-26 | 2020-08-18 | A9.Com, Inc. | Augmenting and sharing data from audio/video recording and communication devices |
US10762646B2 (en) | 2016-02-26 | 2020-09-01 | A9.Com, Inc. | Neighborhood alert mode for triggering multi-device recording, multi-camera locating, and multi-camera event stitching for audio/video recording and communication devices |
US10762754B2 (en) | 2016-02-26 | 2020-09-01 | Amazon Technologies, Inc. | Sharing video footage from audio/video recording and communication devices for parcel theft deterrence |
US10767883B2 (en) * | 2014-12-08 | 2020-09-08 | Encycle Corporation | Smart thermostat orchestration |
US10841542B2 (en) | 2016-02-26 | 2020-11-17 | A9.Com, Inc. | Locating a person of interest using shared video footage from audio/video recording and communication devices |
US10867128B2 (en) | 2017-09-12 | 2020-12-15 | Microsoft Technology Licensing, Llc | Intelligently updating a collaboration site or template |
US20210021461A1 (en) * | 2019-07-19 | 2021-01-21 | Razberi Technologies, Inc. | Switch monitoring system and method of use |
US10917618B2 (en) | 2016-02-26 | 2021-02-09 | Amazon Technologies, Inc. | Providing status information for secondary devices with video footage from audio/video recording and communication devices |
US10938592B2 (en) * | 2017-07-21 | 2021-03-02 | Pearson Education, Inc. | Systems and methods for automated platform-based algorithm monitoring |
US10956545B1 (en) * | 2016-11-17 | 2021-03-23 | Alarm.Com Incorporated | Pin verification |
US10984486B2 (en) | 2014-02-28 | 2021-04-20 | Christine E. Akutagawa | Device for implementing body fluid analysis and social networking event planning |
US11010643B1 (en) * | 2017-05-10 | 2021-05-18 | Waylens, Inc | System and method to increase confidence of roadway object recognition through gamified distributed human feedback |
US11030708B2 (en) | 2014-02-28 | 2021-06-08 | Christine E. Akutagawa | Method of and device for implementing contagious illness analysis and tracking |
US20210182664A1 (en) * | 2017-11-16 | 2021-06-17 | Samsung Electronics Co., Ltd. | Neural network training method and device |
CN113065513A (en) * | 2021-01-27 | 2021-07-02 | 武汉星巡智能科技有限公司 | Method, device and equipment for optimizing self-training confidence threshold of intelligent camera |
US11062581B2 (en) * | 2017-10-23 | 2021-07-13 | Hewlett-Packard Development Company, L.P. | Modification of responses to robot detections |
US11132888B2 (en) | 2007-04-23 | 2021-09-28 | Icontrol Networks, Inc. | Method and system for providing alternate network access |
US11146637B2 (en) | 2014-03-03 | 2021-10-12 | Icontrol Networks, Inc. | Media content management |
US11153266B2 (en) | 2004-03-16 | 2021-10-19 | Icontrol Networks, Inc. | Gateway registry methods and systems |
US20210327232A1 (en) * | 2018-09-05 | 2021-10-21 | Nec Corporation | Apparatus and a method for adaptively managing event-related data in a control room |
CN113537166A (en) * | 2021-09-15 | 2021-10-22 | 北京科技大学 | Alarm method, alarm device and storage medium |
US11175793B2 (en) | 2004-03-16 | 2021-11-16 | Icontrol Networks, Inc. | User interface in a premises network |
US11184322B2 (en) | 2004-03-16 | 2021-11-23 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11182060B2 (en) | 2004-03-16 | 2021-11-23 | Icontrol Networks, Inc. | Networked touchscreen with integrated interfaces |
US11184529B2 (en) * | 2014-06-26 | 2021-11-23 | Ainemo Inc. | Smart recording system |
US11182622B2 (en) * | 2016-12-05 | 2021-11-23 | Google Llc | Systems and methods for locating image data for selected regions of interest |
US11190578B2 (en) | 2008-08-11 | 2021-11-30 | Icontrol Networks, Inc. | Integrated cloud system with lightweight gateway for premises automation |
US11194320B2 (en) | 2007-02-28 | 2021-12-07 | Icontrol Networks, Inc. | Method and system for managing communication connectivity |
US11201755B2 (en) | 2004-03-16 | 2021-12-14 | Icontrol Networks, Inc. | Premises system management using status signal |
US11212192B2 (en) | 2007-06-12 | 2021-12-28 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11218878B2 (en) | 2007-06-12 | 2022-01-04 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11223998B2 (en) | 2009-04-30 | 2022-01-11 | Icontrol Networks, Inc. | Security, monitoring and automation controller access and use of legacy security control panel information |
US11240059B2 (en) | 2010-12-20 | 2022-02-01 | Icontrol Networks, Inc. | Defining and implementing sensor triggered response rules |
US11244545B2 (en) | 2004-03-16 | 2022-02-08 | Icontrol Networks, Inc. | Cross-client sensor user interface in an integrated security network |
US11258625B2 (en) | 2008-08-11 | 2022-02-22 | Icontrol Networks, Inc. | Mobile premises automation platform |
US11277465B2 (en) | 2004-03-16 | 2022-03-15 | Icontrol Networks, Inc. | Generating risk profile using data of home monitoring and security system |
US11296950B2 (en) | 2013-06-27 | 2022-04-05 | Icontrol Networks, Inc. | Control system user interface |
US11310199B2 (en) | 2004-03-16 | 2022-04-19 | Icontrol Networks, Inc. | Premises management configuration and control |
US11316753B2 (en) | 2007-06-12 | 2022-04-26 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11316958B2 (en) | 2008-08-11 | 2022-04-26 | Icontrol Networks, Inc. | Virtual device systems and methods |
US11341840B2 (en) | 2010-12-17 | 2022-05-24 | Icontrol Networks, Inc. | Method and system for processing security event data |
US11343380B2 (en) | 2004-03-16 | 2022-05-24 | Icontrol Networks, Inc. | Premises system automation |
US20220189267A1 (en) * | 2020-12-14 | 2022-06-16 | Ava Video Security Limited | Security system |
US11367340B2 (en) | 2005-03-16 | 2022-06-21 | Icontrol Networks, Inc. | Premise management systems and methods |
US11368327B2 (en) | 2008-08-11 | 2022-06-21 | Icontrol Networks, Inc. | Integrated cloud system for premises automation |
US11378922B2 (en) | 2004-03-16 | 2022-07-05 | Icontrol Networks, Inc. | Automation system with mobile interface |
US11393108B1 (en) | 2016-02-26 | 2022-07-19 | Amazon Technologies, Inc. | Neighborhood alert mode for triggering multi-device recording, multi-camera locating, and multi-camera event stitching for audio/video recording and communication devices |
US11398147B2 (en) | 2010-09-28 | 2022-07-26 | Icontrol Networks, Inc. | Method, system and apparatus for automated reporting of account and sensor zone information to a central station |
US11405463B2 (en) | 2014-03-03 | 2022-08-02 | Icontrol Networks, Inc. | Media content management |
US11410531B2 (en) | 2004-03-16 | 2022-08-09 | Icontrol Networks, Inc. | Automation system user interface with three-dimensional display |
US11412027B2 (en) | 2007-01-24 | 2022-08-09 | Icontrol Networks, Inc. | Methods and systems for data communication |
US11418518B2 (en) | 2006-06-12 | 2022-08-16 | Icontrol Networks, Inc. | Activation of gateway device |
US11424980B2 (en) | 2005-03-16 | 2022-08-23 | Icontrol Networks, Inc. | Forming a security network including integrated security system components |
US11423756B2 (en) | 2007-06-12 | 2022-08-23 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US20220292643A1 (en) * | 2021-03-12 | 2022-09-15 | Flyreel, Inc. | Face detection and blurring methods and systems |
US11451409B2 (en) | 2005-03-16 | 2022-09-20 | Icontrol Networks, Inc. | Security network integrating security system and network devices |
US11488041B2 (en) * | 2018-12-11 | 2022-11-01 | Morgan Stanley Services Group Inc. | System and method for predicting incidents using log text analytics |
US11489812B2 (en) | 2004-03-16 | 2022-11-01 | Icontrol Networks, Inc. | Forming a security network including integrated security system components and network devices |
US11496568B2 (en) | 2005-03-16 | 2022-11-08 | Icontrol Networks, Inc. | Security system with networked touchscreen |
US11537186B2 (en) | 2004-03-16 | 2022-12-27 | Icontrol Networks, Inc. | Integrated security system with parallel processing architecture |
US11582065B2 (en) | 2007-06-12 | 2023-02-14 | Icontrol Networks, Inc. | Systems and methods for device communication |
US11595364B2 (en) | 2005-03-16 | 2023-02-28 | Icontrol Networks, Inc. | System for data routing in networks |
US11601810B2 (en) | 2007-06-12 | 2023-03-07 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11611568B2 (en) | 2007-06-12 | 2023-03-21 | Icontrol Networks, Inc. | Communication protocols over internet protocol (IP) networks |
US11615697B2 (en) | 2005-03-16 | 2023-03-28 | Icontrol Networks, Inc. | Premise management systems and methods |
US11625161B2 (en) | 2007-06-12 | 2023-04-11 | Icontrol Networks, Inc. | Control system user interface |
US11646907B2 (en) | 2007-06-12 | 2023-05-09 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11677577B2 (en) | 2004-03-16 | 2023-06-13 | Icontrol Networks, Inc. | Premises system management using status signal |
KR102543936B1 (en) * | 2022-07-14 | 2023-06-16 | 남창환 | Apparatus and Method for Recognizing Sign Language |
EP4167206A3 (en) * | 2021-09-27 | 2023-06-28 | Arlo Technologies, Inc. | Monitoring system and method capable of evaluating events and sending different types of notifications to a user device based on the evaluation |
US11700142B2 (en) | 2005-03-16 | 2023-07-11 | Icontrol Networks, Inc. | Security network integrating security system and network devices |
EP4210004A1 (en) * | 2022-01-10 | 2023-07-12 | Sony Semiconductor Solutions Corporation | An animal detecting device, system, method and computer program |
US11706279B2 (en) | 2007-01-24 | 2023-07-18 | Icontrol Networks, Inc. | Methods and systems for data communication |
US11706045B2 (en) | 2005-03-16 | 2023-07-18 | Icontrol Networks, Inc. | Modular electronic display platform |
US11729255B2 (en) | 2008-08-11 | 2023-08-15 | Icontrol Networks, Inc. | Integrated cloud system with lightweight gateway for premises automation |
US11750414B2 (en) | 2010-12-16 | 2023-09-05 | Icontrol Networks, Inc. | Bidirectional security sensor communication for a premises security system |
US11758026B2 (en) | 2008-08-11 | 2023-09-12 | Icontrol Networks, Inc. | Virtual device systems and methods |
US11754986B2 (en) | 2016-10-08 | 2023-09-12 | People Power Company | Systems and methods for evaluating sensor data of internet-of-things (IoT) devices and responsively controlling control devices |
US11792036B2 (en) | 2008-08-11 | 2023-10-17 | Icontrol Networks, Inc. | Mobile premises automation platform |
US11792330B2 (en) | 2005-03-16 | 2023-10-17 | Icontrol Networks, Inc. | Communication and automation in a premises management system |
US11803617B1 (en) * | 2017-05-10 | 2023-10-31 | Waylens, Inc. | System and method to increase confidence of roadway object recognition through gamified distributed human feedback |
US11811845B2 (en) | 2004-03-16 | 2023-11-07 | Icontrol Networks, Inc. | Communication protocols over internet protocol (IP) networks |
US11816323B2 (en) | 2008-06-25 | 2023-11-14 | Icontrol Networks, Inc. | Automation system user interface |
WO2023220554A1 (en) * | 2022-05-10 | 2023-11-16 | Google Llc | Sharing intelligence-derived information in home networks |
US11824675B2 (en) | 2005-03-16 | 2023-11-21 | Icontrol Networks, Inc. | Networked touchscreen with integrated interfaces |
US11831462B2 (en) | 2007-08-24 | 2023-11-28 | Icontrol Networks, Inc. | Controlling data routing in premises management systems |
US11916870B2 (en) | 2004-03-16 | 2024-02-27 | Icontrol Networks, Inc. | Gateway registry methods and systems |
US11916928B2 (en) | 2008-01-24 | 2024-02-27 | Icontrol Networks, Inc. | Communication protocols over internet protocol (IP) networks |
Families Citing this family (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9729785B2 (en) * | 2015-01-19 | 2017-08-08 | Microsoft Technology Licensing, Llc | Profiles identifying camera capabilities that are usable concurrently |
US10380429B2 (en) * | 2016-07-11 | 2019-08-13 | Google Llc | Methods and systems for person detection in a video feed |
CN108024088B (en) * | 2016-10-31 | 2020-07-03 | 杭州海康威视系统技术有限公司 | Video polling method and device |
US10839203B1 (en) | 2016-12-27 | 2020-11-17 | Amazon Technologies, Inc. | Recognizing and tracking poses using digital imagery captured from multiple fields of view |
US10699421B1 (en) | 2017-03-29 | 2020-06-30 | Amazon Technologies, Inc. | Tracking objects in three-dimensional space using calibrated visual cameras and depth cameras |
US11783010B2 (en) | 2017-05-30 | 2023-10-10 | Google Llc | Systems and methods of person recognition in video streams |
US10489654B1 (en) * | 2017-08-04 | 2019-11-26 | Amazon Technologies, Inc. | Video analysis method and system |
US10664688B2 (en) | 2017-09-20 | 2020-05-26 | Google Llc | Systems and methods of detecting and responding to a visitor to a smart home environment |
US11232294B1 (en) | 2017-09-27 | 2022-01-25 | Amazon Technologies, Inc. | Generating tracklets from digital imagery |
US11030442B1 (en) * | 2017-12-13 | 2021-06-08 | Amazon Technologies, Inc. | Associating events with actors based on digital imagery |
US11284041B1 (en) | 2017-12-13 | 2022-03-22 | Amazon Technologies, Inc. | Associating items with actors based on digital imagery |
US11468681B1 (en) | 2018-06-28 | 2022-10-11 | Amazon Technologies, Inc. | Associating events with actors using digital imagery and machine learning |
US11482045B1 (en) | 2018-06-28 | 2022-10-25 | Amazon Technologies, Inc. | Associating events with actors using digital imagery and machine learning |
US11468698B1 (en) | 2018-06-28 | 2022-10-11 | Amazon Technologies, Inc. | Associating events with actors using digital imagery and machine learning |
US10635979B2 (en) * | 2018-07-20 | 2020-04-28 | Google Llc | Category learning neural networks |
US11373315B2 (en) * | 2019-08-30 | 2022-06-28 | Tata Consultancy Services Limited | Method and system for tracking motion of subjects in three dimensional scene |
US11163372B2 (en) | 2020-04-01 | 2021-11-02 | Toyota Motor North America, Inc | Transport gait and gesture interpretation |
US11443516B1 (en) | 2020-04-06 | 2022-09-13 | Amazon Technologies, Inc. | Locally and globally locating actors by digital cameras and machine learning |
US11398094B1 (en) | 2020-04-06 | 2022-07-26 | Amazon Technologies, Inc. | Locally and globally locating actors by digital cameras and machine learning |
EP3989537B1 (en) * | 2020-10-23 | 2023-05-03 | Axis AB | Alert generation based on event detection in a video feed |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090316956A1 (en) * | 2008-06-23 | 2009-12-24 | Hitachi, Ltd. | Image Processing Apparatus |
US20130242093A1 (en) * | 2012-03-15 | 2013-09-19 | Behavioral Recognition Systems, Inc. | Alert directives and focused alert directives in a behavioral recognition system |
US20150279182A1 (en) * | 2014-04-01 | 2015-10-01 | Objectvideo, Inc. | Complex event recognition in a sensor network |
US9158974B1 (en) * | 2014-07-07 | 2015-10-13 | Google Inc. | Method and system for motion vector-based video monitoring and event categorization |
US20160241818A1 (en) * | 2015-02-18 | 2016-08-18 | Honeywell International Inc. | Automatic alerts for video surveillance systems |
US20170257612A1 (en) * | 2013-09-09 | 2017-09-07 | Arris Enterprises Llc | Generating alerts based upon detector outputs |
US20180096197A1 (en) * | 2012-04-19 | 2018-04-05 | Intelligence Based Intergrated Security Systems, Inc. | Technique for providing security to an area |
Family Cites Families (168)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5237408A (en) | 1991-08-02 | 1993-08-17 | Presearch Incorporated | Retrofitting digital video surveillance system |
US6046745A (en) | 1996-03-25 | 2000-04-04 | Hitachi, Ltd. | Three-dimensional model making device and its method |
AUPO894497A0 (en) | 1997-09-02 | 1997-09-25 | Xenotech Research Pty Ltd | Image processing method and apparatus |
US6400378B1 (en) | 1997-09-26 | 2002-06-04 | Sony Corporation | Home movie maker |
US6697103B1 (en) | 1998-03-19 | 2004-02-24 | Dennis Sunga Fernandez | Integrated network for monitoring remote objects |
KR100303727B1 (en) | 1998-04-28 | 2001-09-24 | 구자홍 | Adaptive display speed control system |
US6816184B1 (en) | 1998-04-30 | 2004-11-09 | Texas Instruments Incorporated | Method and apparatus for mapping a location from a video image to a map |
US7023469B1 (en) | 1998-04-30 | 2006-04-04 | Texas Instruments Incorporated | Automatic video monitoring system which selectively saves information |
KR100274397B1 (en) | 1998-06-18 | 2000-12-15 | 구자홍 | Memory operation method of Time-lapse video recorder |
USD450059S1 (en) | 1998-07-31 | 2001-11-06 | Sony Corporation | Computer generated image for a display panel or screen |
US6144375A (en) | 1998-08-14 | 2000-11-07 | Praja Inc. | Multi-perspective viewer for content-based interactivity |
US6970183B1 (en) | 2000-06-14 | 2005-11-29 | E-Watch, Inc. | Multimedia surveillance and monitoring system including network configuration |
US6366296B1 (en) | 1998-09-11 | 2002-04-02 | Xerox Corporation | Media browser using multimodal analysis |
US6647200B1 (en) | 1998-10-29 | 2003-11-11 | Securion 24 Co., Ltd. | Digital recorder, monitoring system, remote monitoring system, monitor image retrieval method, remote image reproduction method, recording medium and computer data signal |
US6748421B1 (en) | 1998-12-23 | 2004-06-08 | Canon Kabushiki Kaisha | Method and system for conveying video messages |
JP3826598B2 (en) | 1999-01-29 | 2006-09-27 | 株式会社日立製作所 | Image monitoring apparatus and recording medium |
US6895557B1 (en) | 1999-07-21 | 2005-05-17 | Ipix Corporation | Web-based media submission tool |
US6476858B1 (en) | 1999-08-12 | 2002-11-05 | Innovation Institute | Video monitoring and security system |
US7995096B1 (en) | 1999-09-23 | 2011-08-09 | The Boeing Company | Visual security operations system |
US6424370B1 (en) | 1999-10-08 | 2002-07-23 | Texas Instruments Incorporated | Motion based event detection system and method |
US20020002425A1 (en) | 1999-11-30 | 2002-01-03 | Dossey James F. | Computer controlled irrigation and environment management system |
US6665423B1 (en) | 2000-01-27 | 2003-12-16 | Eastman Kodak Company | Method and system for object-oriented motion-based video description |
US6600784B1 (en) | 2000-02-02 | 2003-07-29 | Mitsubishi Electric Research Laboratories, Inc. | Descriptor for spatial distribution of motion activity in compressed video |
US7823066B1 (en) | 2000-03-03 | 2010-10-26 | Tibco Software Inc. | Intelligent console for content-based interactivity |
EP1279081B1 (en) | 2000-05-01 | 2012-01-04 | iRobot Corporation | Method and system for remote control of mobile robot |
US7522745B2 (en) | 2000-08-31 | 2009-04-21 | Grasso Donald P | Sensor and imaging system |
US7433493B1 (en) | 2000-09-06 | 2008-10-07 | Hitachi, Ltd. | Abnormal behavior detector |
US7710457B2 (en) | 2001-01-10 | 2010-05-04 | Ip Holdings, Inc. | Motion detector camera having a flash |
JP2003059955A (en) | 2001-08-08 | 2003-02-28 | Matsushita Electric Ind Co Ltd | Apparatus and method for packaging electronic component |
US6778180B2 (en) | 2001-09-28 | 2004-08-17 | The United States Of America As Represented By The Administrator Of The National Aeronautics And Space Administration | Video image tracking engine |
US7016415B2 (en) | 2002-07-16 | 2006-03-21 | Broadcom Corporation | Modifying motion control signals based on input video characteristics |
US6879656B2 (en) | 2002-07-23 | 2005-04-12 | General Electric Company | Method and apparatus for deriving motion information from projection data |
USD499740S1 (en) | 2002-10-17 | 2004-12-14 | Pioneer Digital Technologies, Inc. | Minimized graphical timeline for a display |
USD491956S1 (en) | 2002-10-17 | 2004-06-22 | Pioneer Digital Technologies, Inc. | Graphical timeline for a display |
US20040100560A1 (en) | 2002-11-22 | 2004-05-27 | Stavely Donald J. | Tracking digital zoom in a digital video camera |
US20040174434A1 (en) | 2002-12-18 | 2004-09-09 | Walker Jay S. | Systems and methods for suggesting meta-information to a camera user |
US20040123328A1 (en) | 2002-12-20 | 2004-06-24 | Ecamsecure, Inc. | Mobile surveillance vehicle |
US7095786B1 (en) | 2003-01-11 | 2006-08-22 | Neo Magic Corp. | Object tracking using adaptive block-size matching along object boundary and frame-skipping when object motion is low |
US7421727B2 (en) | 2003-02-14 | 2008-09-02 | Canon Kabushiki Kaisha | Motion detecting system, motion detecting method, motion detecting apparatus, and program for implementing the method |
US20100002070A1 (en) | 2004-04-30 | 2010-01-07 | Grandeye Ltd. | Method and System of Simultaneously Displaying Multiple Views for Video Surveillance |
US7440634B2 (en) | 2003-06-17 | 2008-10-21 | The Trustees Of Columbia University In The City Of New York | Method for de-blurring images of moving objects |
US7440613B2 (en) | 2003-09-12 | 2008-10-21 | Sony Corporation | Binary mask interpolation |
US20080303903A1 (en) | 2003-12-02 | 2008-12-11 | Connexed Technologies Inc. | Networked video surveillance system |
US20050132414A1 (en) | 2003-12-02 | 2005-06-16 | Connexed, Inc. | Networked video surveillance system |
EP1704710A4 (en) | 2003-12-24 | 2007-09-19 | Walker Digital Llc | Method and apparatus for automatically capturing and managing images |
US9191228B2 (en) | 2005-03-16 | 2015-11-17 | Icontrol Networks, Inc. | Cross-client sensor user interface in an integrated security network |
US20050246119A1 (en) | 2004-04-16 | 2005-11-03 | Koodali Anurag T | Event occurrence graph |
US8427538B2 (en) | 2004-04-30 | 2013-04-23 | Oncam Grandeye | Multiple view and multiple object processing in wide-angle video camera |
WO2005119577A1 (en) | 2004-06-01 | 2005-12-15 | Sarnoff Corporation | Method and apparatus for detecting suspicious activities |
US8051087B2 (en) | 2004-07-04 | 2011-11-01 | Yahoo! Inc. | Customized geographical location indexing |
US7990422B2 (en) | 2004-07-19 | 2011-08-02 | Grandeye, Ltd. | Automatically expanding the zoom capability of a wide-angle video camera |
US7629995B2 (en) | 2004-08-06 | 2009-12-08 | Sony Corporation | System and method for correlating camera views |
US20060072847A1 (en) | 2004-10-01 | 2006-04-06 | Microsoft Corporation | System for automatic image cropping based on image saliency |
JP4487191B2 (en) | 2004-12-24 | 2010-06-23 | カシオ計算機株式会社 | Image processing apparatus and image processing program |
WO2006094090A2 (en) | 2005-02-28 | 2006-09-08 | Westec Interactive Security, Inc. | Central monitoring/managed surveillance system and method |
US7760908B2 (en) | 2005-03-31 | 2010-07-20 | Honeywell International Inc. | Event packaged video sequence |
US20070002141A1 (en) | 2005-04-19 | 2007-01-04 | Objectvideo, Inc. | Video-based human, non-human, and/or motion verification system and method |
USD555661S1 (en) | 2005-04-27 | 2007-11-20 | Samsung Electronics Co., Ltd. | Mobile phone display panel with menus |
USD621413S1 (en) | 2005-08-05 | 2010-08-10 | Google Inc. | Display screen of a communications terminal with teardrop-shaped marker icon |
KR100718088B1 (en) | 2005-08-19 | 2007-05-16 | 삼성전자주식회사 | Security camera |
US8024768B2 (en) | 2005-09-15 | 2011-09-20 | Penthera Partners, Inc. | Broadcasting video content to devices having different video presentation capabilities |
US7443304B2 (en) | 2005-12-09 | 2008-10-28 | Honeywell International Inc. | Method and system for monitoring a patient in a premises |
US7421455B2 (en) | 2006-02-27 | 2008-09-02 | Microsoft Corporation | Video search and services |
US8941733B2 (en) | 2006-02-27 | 2015-01-27 | Robert Bosch Gmbh | Video retrieval system, method and computer program for surveillance of moving objects |
JP4525618B2 (en) | 2006-03-06 | 2010-08-18 | ソニー株式会社 | Video surveillance system and video surveillance program |
US20070257986A1 (en) | 2006-05-05 | 2007-11-08 | Ivanov Yuri A | Method for processing queries for surveillance tasks |
US7685519B1 (en) | 2006-07-18 | 2010-03-23 | Intuit Inc. | Process and apparatus for providing a customizable content tooltip |
US20080122926A1 (en) | 2006-08-14 | 2008-05-29 | Fuji Xerox Co., Ltd. | System and method for process segmentation using motion detection |
US20080051648A1 (en) | 2006-08-25 | 2008-02-28 | Suri Jasjit S | Medical image enhancement system |
CN101512596B (en) | 2006-09-14 | 2012-06-13 | 富士通株式会社 | Method and apparatus for processing image |
JP4843482B2 (en) | 2006-12-27 | 2011-12-21 | 株式会社東芝 | Information processing apparatus and program |
US7840031B2 (en) | 2007-01-12 | 2010-11-23 | International Business Machines Corporation | Tracking a range of body movement based on 3D captured image streams of a user |
US20080178069A1 (en) | 2007-01-22 | 2008-07-24 | Stallings Richard W | Content Authoring System and Method |
US8300890B1 (en) | 2007-01-29 | 2012-10-30 | Intellivision Technologies Corporation | Person/object image and screening |
WO2008098321A1 (en) | 2007-02-15 | 2008-08-21 | Security Agency Sigma Jsc | Mobile system and method for remote control and viewing |
US8494234B1 (en) | 2007-03-07 | 2013-07-23 | MotionDSP, Inc. | Video hashing system and method |
US8295597B1 (en) | 2007-03-14 | 2012-10-23 | Videomining Corporation | Method and system for segmenting people in a physical space based on automatic behavior analysis |
US20080244453A1 (en) | 2007-04-01 | 2008-10-02 | Jason Edward Cafer | Iconic event timeline with latitude snapping and method for providing the same |
EP2145468B1 (en) | 2007-04-11 | 2012-09-12 | GVBB Holdings S.A.R.L | Method and apparatus for enhancing digital video effects (dve) |
USD597100S1 (en) | 2007-06-08 | 2009-07-28 | Apple Inc. | Icon for a portion of a display screen |
WO2009012289A1 (en) | 2007-07-16 | 2009-01-22 | Cernium Corporation | Apparatus and methods for video alarm verification |
US8619140B2 (en) | 2007-07-30 | 2013-12-31 | International Business Machines Corporation | Automatic adjustment of area monitoring based on camera motion |
US8456293B1 (en) | 2007-10-22 | 2013-06-04 | Alarm.Com Incorporated | Providing electronic content based on sensor data |
US8630497B2 (en) | 2007-11-27 | 2014-01-14 | Intelliview Technologies Inc. | Analyzing a segment of video |
US8204273B2 (en) | 2007-11-29 | 2012-06-19 | Cernium Corporation | Systems and methods for analysis of video content, event notification, and video content provision |
USD590412S1 (en) | 2007-12-27 | 2009-04-14 | Yahoo! Inc. | Graphical user interface for displaying content selections on a display panel |
US8102427B2 (en) | 2008-02-14 | 2012-01-24 | Sri International | Camera egomotion estimation from an infra-red image sequence for night vision |
GB2471036B (en) | 2008-03-03 | 2012-08-22 | Videoiq Inc | Object matching for tracking, indexing, and search |
US9571798B2 (en) | 2008-03-19 | 2017-02-14 | Aleksej Alekseevich GORILOVSKIJ | Device for displaying the situation outside a building with a lift |
WO2009121053A2 (en) | 2008-03-28 | 2009-10-01 | On-Net Surveillance Systems, Inc. | Method and systems for video collection and analysis thereof |
US9215781B2 (en) | 2008-04-16 | 2015-12-15 | Avo Usa Holding 2 Corporation | Energy savings and improved security through intelligent lighting systems |
CN101582063A (en) | 2008-05-13 | 2009-11-18 | 华为技术有限公司 | Video service system, video service device and extraction method for key frame thereof |
US8311283B2 (en) | 2008-07-06 | 2012-11-13 | Automotive Research&Testing Center | Method for detecting lane departure and apparatus thereof |
US8200669B1 (en) | 2008-08-21 | 2012-06-12 | Adobe Systems Incorporated | Management of smart tags via hierarchy |
US8284258B1 (en) | 2008-09-18 | 2012-10-09 | Grandeye, Ltd. | Unusual event detection in wide-angle video (based on moving object trajectories) |
USD625323S1 (en) | 2008-10-01 | 2010-10-12 | Nintendo Co., Ltd. | Display with changeable computer-generated icons |
US9280759B2 (en) | 2008-12-24 | 2016-03-08 | Blackboard Inc. | Method and system for displaying plural notifications from plural sources |
WO2010086866A1 (en) | 2009-02-02 | 2010-08-05 | Eyesight Mobile Technologies Ltd. | System and method for object recognition and tracking in a video stream |
US8467768B2 (en) | 2009-02-17 | 2013-06-18 | Lookout, Inc. | System and method for remotely securing or recovering a mobile device |
US8537219B2 (en) | 2009-03-19 | 2013-09-17 | International Business Machines Corporation | Identifying spatial locations of events within video image data |
US8587653B1 (en) | 2009-04-30 | 2013-11-19 | Verint Systems, Inc. | Modifying the resolution of video before transferring to a display system |
GB0907870D0 (en) | 2009-05-07 | 2009-06-24 | Univ Catholique Louvain | Systems and methods for the autonomous production of videos from multi-sensored data |
US8340654B2 (en) | 2009-05-26 | 2012-12-25 | Lextech Labs Llc | Apparatus and method for video display and control for portable device |
US9380292B2 (en) | 2009-07-31 | 2016-06-28 | 3Dmedia Corporation | Methods, systems, and computer-readable storage media for generating three-dimensional (3D) images of a scene |
US8305447B1 (en) | 2009-08-27 | 2012-11-06 | Wong Thomas K | Security threat detection system |
US9788017B2 (en) | 2009-10-07 | 2017-10-10 | Robert Laganiere | Video analytics with pre-processing at the source end |
US8547327B2 (en) | 2009-10-07 | 2013-10-01 | Qualcomm Incorporated | Proximity object tracker |
NO332170B1 (en) | 2009-10-14 | 2012-07-16 | Cisco Systems Int Sarl | Camera control device and method |
US8707194B1 (en) | 2009-11-20 | 2014-04-22 | Amazon Technologies, Inc. | System and method for decentralized performance monitoring of host systems |
US8676493B2 (en) | 2009-11-30 | 2014-03-18 | Honeywell International Inc. | Systems and methods for better alarm management |
US8510677B2 (en) | 2010-01-06 | 2013-08-13 | Apple Inc. | Device, method, and graphical user interface for navigating through a range of values |
CN102906763A (en) | 2010-01-28 | 2013-01-30 | 美国路通创新科技公司 | Document imaging system having camera-scanner apparatus and personal computer based processing software |
US8861842B2 (en) | 2010-02-05 | 2014-10-14 | Sri International | Method and apparatus for real-time pedestrian detection for urban driving |
CN102236899B (en) | 2010-05-07 | 2013-12-04 | 株式会社理光 | Method and device for detecting objects |
CA2748061A1 (en) | 2010-08-04 | 2012-02-04 | Iwatchlife Inc. | Video analytics as a trigger for video communications |
US9247212B2 (en) | 2010-08-26 | 2016-01-26 | Blast Motion Inc. | Intelligent motion capture element |
US9320957B2 (en) | 2010-08-26 | 2016-04-26 | Blast Motion Inc. | Wireless and visual hybrid motion capture system |
US8743204B2 (en) | 2011-01-07 | 2014-06-03 | International Business Machines Corporation | Detecting and monitoring event occurrences using fiber optic sensors |
US8767030B2 (en) | 2011-04-07 | 2014-07-01 | Tara Chand Singhal | System and method for a grooming mirror in a portable electronic device with a user-facing camera |
US9928707B2 (en) | 2011-05-16 | 2018-03-27 | Garrett Thermal Systems Limited | Surveillance system |
US8902085B1 (en) | 2011-05-17 | 2014-12-02 | Raytheon Company | Integrated 3D audiovisual threat cueing system |
US9402034B2 (en) | 2011-07-29 | 2016-07-26 | Apple Inc. | Adaptive auto exposure adjustment |
US9269243B2 (en) | 2011-10-07 | 2016-02-23 | Siemens Aktiengesellschaft | Method and user interface for forensic video search |
US9696897B2 (en) | 2011-10-19 | 2017-07-04 | The Regents Of The University Of California | Image-based measurement tools |
US9025836B2 (en) | 2011-10-28 | 2015-05-05 | Intellectual Ventures Fund 83 Llc | Image recomposition from face detection and facial features |
US8594488B1 (en) | 2012-03-13 | 2013-11-26 | Google Inc. | Methods and systems for video retargeting using motion saliency |
JP5489144B1 (en) | 2012-04-27 | 2014-05-14 | コニカミノルタ株式会社 | Beam forming method and ultrasonic diagnostic apparatus |
EP2660774B1 (en) | 2012-04-30 | 2021-09-01 | BlackBerry Limited | Image processing method |
SE537427C2 (en) | 2012-08-20 | 2015-04-28 | Mindmancer AB | Method and computer program product for monitoring systems and monitoring systems |
US9070020B2 (en) | 2012-08-21 | 2015-06-30 | International Business Machines Corporation | Determination of train presence and motion state in railway environments |
US9047400B2 (en) | 2012-08-29 | 2015-06-02 | Freescale Semiconductor, Inc. | Data processor device for handling a watchpoint and method thereof |
US20140082497A1 (en) | 2012-09-17 | 2014-03-20 | Fanhattan Llc | System and method for browsing and accessing live media content |
US9165535B2 (en) | 2012-09-27 | 2015-10-20 | Google Inc. | System and method for determining a zoom factor of content displayed on a display device |
US20140108558A1 (en) | 2012-10-12 | 2014-04-17 | Citrix Systems, Inc. | Application Management Framework for Secure Data Sharing in an Orchestration Framework for Connected Devices |
KR101245057B1 (en) | 2012-10-16 | 2013-03-18 | (주)아이아이에스티 | Method and apparatus for sensing a fire |
US9251121B2 (en) | 2012-11-21 | 2016-02-02 | Honeywell International Inc. | Determining pushback direction |
EP2768216A4 (en) | 2012-12-25 | 2015-10-28 | Huawei Tech Co Ltd | Video play method, terminal and system |
US20140313142A1 (en) | 2013-03-07 | 2014-10-23 | Tactus Technology, Inc. | Method for remotely sharing touch |
US8982277B2 (en) | 2013-04-25 | 2015-03-17 | Broadcom Corporation | System and method for processing video data |
US8688483B2 (en) | 2013-05-17 | 2014-04-01 | Watts And Associates, Inc. | Systems, computer-implemented methods, and computer medium to determine premiums and indemnities for supplemental crop insurance |
US9904852B2 (en) | 2013-05-23 | 2018-02-27 | Sri International | Real-time object detection, tracking and occlusion reasoning |
US8823795B1 (en) | 2013-07-26 | 2014-09-02 | SkyBell Technologies, Inc. | Doorbell communication systems and methods |
US8941736B1 (en) | 2013-07-26 | 2015-01-27 | SkyBell Technologies, Inc. | Doorbell communication systems and methods |
US20150046184A1 (en) | 2013-08-12 | 2015-02-12 | Dental Imaging Technologies Corporation | Managing dental photographs acquired by portable computing devices |
JP2015042002A (en) | 2013-08-23 | 2015-03-02 | 株式会社東芝 | Method, electronic apparatus, and program |
KR20160048199A (en) | 2013-08-29 | 2016-05-03 | 브이아이디 스케일, 인크. | User-adaptive video telephony |
US20150085060A1 (en) | 2013-09-20 | 2015-03-26 | Microsoft Corporation | User experience for conferencing with a touch screen display |
US8958602B1 (en) | 2013-09-27 | 2015-02-17 | The United States Of America As Represented By The Secretary Of The Navy | System for tracking maritime domain targets from full motion video |
EP3060118A4 (en) | 2013-10-24 | 2017-07-19 | Breathevision Ltd. | Motion monitor |
NL2012327B1 (en) | 2013-12-13 | 2016-06-21 | Utc Fire & Security B V | Selective intrusion detection systems. |
EP3087482B1 (en) | 2013-12-24 | 2019-11-06 | Pelco, Inc. | Method and apparatus for intelligent video pruning |
US20150181088A1 (en) | 2013-12-25 | 2015-06-25 | Geovision Inc. | Ip camera apparatus |
KR102104413B1 (en) | 2014-01-16 | 2020-04-24 | 한화테크윈 주식회사 | Surveillance camera and digital video recorder |
US20150234571A1 (en) | 2014-02-17 | 2015-08-20 | Microsoft Corporation | Re-performing demonstrations during live presentations |
US20160042621A1 (en) | 2014-06-13 | 2016-02-11 | William Daylesford Hogg | Video Motion Detection Method and Alert Management |
CN104079881B (en) | 2014-07-01 | 2017-09-12 | 中磊电子（苏州）有限公司 | The relative monitoring method of supervising device |
US9600723B1 (en) | 2014-07-03 | 2017-03-21 | Google Inc. | Systems and methods for attention localization using a first-person point-of-view device |
US9449229B1 (en) | 2014-07-07 | 2016-09-20 | Google Inc. | Systems and methods for categorizing motion event candidates |
US9621798B2 (en) | 2014-07-07 | 2017-04-11 | GM Global Technology Operations LLC | Grid-based image resolution enhancement for video processing module |
US9420331B2 (en) | 2014-07-07 | 2016-08-16 | Google Inc. | Method and system for categorizing detected motion events |
US9396397B2 (en) | 2014-10-21 | 2016-07-19 | Motorola Solutions, Inc. | Methods and systems for object-recognition and link integration in a composite video stream |
US9576469B2 (en) | 2014-12-30 | 2017-02-21 | Google Inc. | Systems and methods of adaptively adjusting a sensor of a security system |
JP6459521B2 (en) | 2015-01-07 | 2019-01-30 | 株式会社リコー | Imaging optical system, camera device and stereo camera device |
US20170162230A1 (en) | 2015-12-04 | 2017-06-08 | Livestream LLC | Interactive digital camera for live crop editing and recording of video streams |
US10506198B2 (en) | 2015-12-04 | 2019-12-10 | Livestream LLC | Video stream encoding system with live crop editing and recording |
US9613524B1 (en) | 2016-04-27 | 2017-04-04 | Ecolink Intelligent Technologies, Inc. | Reduced false alarm security system |
US9674453B1 (en) | 2016-10-26 | 2017-06-06 | Cisco Technology, Inc. | Using local talker position to pan sound relative to video frames at a remote location |
JP6786378B2 (en) | 2016-12-26 | 2020-11-18 | キヤノン株式会社 | Information processing equipment, information processing methods and programs |
-
2016
- 2016-07-11 US US15/207,463 patent/US10192415B2/en active Active
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090316956A1 (en) * | 2008-06-23 | 2009-12-24 | Hitachi, Ltd. | Image Processing Apparatus |
US20130242093A1 (en) * | 2012-03-15 | 2013-09-19 | Behavioral Recognition Systems, Inc. | Alert directives and focused alert directives in a behavioral recognition system |
US20180096197A1 (en) * | 2012-04-19 | 2018-04-05 | Intelligence Based Intergrated Security Systems, Inc. | Technique for providing security to an area |
US20170257612A1 (en) * | 2013-09-09 | 2017-09-07 | Arris Enterprises Llc | Generating alerts based upon detector outputs |
US20150279182A1 (en) * | 2014-04-01 | 2015-10-01 | Objectvideo, Inc. | Complex event recognition in a sensor network |
US9158974B1 (en) * | 2014-07-07 | 2015-10-13 | Google Inc. | Method and system for motion vector-based video monitoring and event categorization |
US20160241818A1 (en) * | 2015-02-18 | 2016-08-18 | Honeywell International Inc. | Automatic alerts for video surveillance systems |
Non-Patent Citations (2)
Title |
---|
Central Intelligence Agency "Words of Estimative Probability". * |
Verified date for NPL reference U * |
Cited By (148)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11343380B2 (en) | 2004-03-16 | 2022-05-24 | Icontrol Networks, Inc. | Premises system automation |
US11153266B2 (en) | 2004-03-16 | 2021-10-19 | Icontrol Networks, Inc. | Gateway registry methods and systems |
US11410531B2 (en) | 2004-03-16 | 2022-08-09 | Icontrol Networks, Inc. | Automation system user interface with three-dimensional display |
US11656667B2 (en) | 2004-03-16 | 2023-05-23 | Icontrol Networks, Inc. | Integrated security system with parallel processing architecture |
US11916870B2 (en) | 2004-03-16 | 2024-02-27 | Icontrol Networks, Inc. | Gateway registry methods and systems |
US11537186B2 (en) | 2004-03-16 | 2022-12-27 | Icontrol Networks, Inc. | Integrated security system with parallel processing architecture |
US11893874B2 (en) | 2004-03-16 | 2024-02-06 | Icontrol Networks, Inc. | Networked touchscreen with integrated interfaces |
US11277465B2 (en) | 2004-03-16 | 2022-03-15 | Icontrol Networks, Inc. | Generating risk profile using data of home monitoring and security system |
US11489812B2 (en) | 2004-03-16 | 2022-11-01 | Icontrol Networks, Inc. | Forming a security network including integrated security system components and network devices |
US11182060B2 (en) | 2004-03-16 | 2021-11-23 | Icontrol Networks, Inc. | Networked touchscreen with integrated interfaces |
US11184322B2 (en) | 2004-03-16 | 2021-11-23 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11449012B2 (en) | 2004-03-16 | 2022-09-20 | Icontrol Networks, Inc. | Premises management networking |
US11175793B2 (en) | 2004-03-16 | 2021-11-16 | Icontrol Networks, Inc. | User interface in a premises network |
US11310199B2 (en) | 2004-03-16 | 2022-04-19 | Icontrol Networks, Inc. | Premises management configuration and control |
US11810445B2 (en) | 2004-03-16 | 2023-11-07 | Icontrol Networks, Inc. | Cross-client sensor user interface in an integrated security network |
US11677577B2 (en) | 2004-03-16 | 2023-06-13 | Icontrol Networks, Inc. | Premises system management using status signal |
US11811845B2 (en) | 2004-03-16 | 2023-11-07 | Icontrol Networks, Inc. | Communication protocols over internet protocol (IP) networks |
US11625008B2 (en) | 2004-03-16 | 2023-04-11 | Icontrol Networks, Inc. | Premises management networking |
US11601397B2 (en) | 2004-03-16 | 2023-03-07 | Icontrol Networks, Inc. | Premises management configuration and control |
US11782394B2 (en) | 2004-03-16 | 2023-10-10 | Icontrol Networks, Inc. | Automation system with mobile interface |
US11201755B2 (en) | 2004-03-16 | 2021-12-14 | Icontrol Networks, Inc. | Premises system management using status signal |
US11757834B2 (en) | 2004-03-16 | 2023-09-12 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11588787B2 (en) | 2004-03-16 | 2023-02-21 | Icontrol Networks, Inc. | Premises management configuration and control |
US11244545B2 (en) | 2004-03-16 | 2022-02-08 | Icontrol Networks, Inc. | Cross-client sensor user interface in an integrated security network |
US11626006B2 (en) | 2004-03-16 | 2023-04-11 | Icontrol Networks, Inc. | Management of a security system at a premises |
US11378922B2 (en) | 2004-03-16 | 2022-07-05 | Icontrol Networks, Inc. | Automation system with mobile interface |
US11368429B2 (en) | 2004-03-16 | 2022-06-21 | Icontrol Networks, Inc. | Premises management configuration and control |
US11824675B2 (en) | 2005-03-16 | 2023-11-21 | Icontrol Networks, Inc. | Networked touchscreen with integrated interfaces |
US11451409B2 (en) | 2005-03-16 | 2022-09-20 | Icontrol Networks, Inc. | Security network integrating security system and network devices |
US11595364B2 (en) | 2005-03-16 | 2023-02-28 | Icontrol Networks, Inc. | System for data routing in networks |
US11424980B2 (en) | 2005-03-16 | 2022-08-23 | Icontrol Networks, Inc. | Forming a security network including integrated security system components |
US11700142B2 (en) | 2005-03-16 | 2023-07-11 | Icontrol Networks, Inc. | Security network integrating security system and network devices |
US11496568B2 (en) | 2005-03-16 | 2022-11-08 | Icontrol Networks, Inc. | Security system with networked touchscreen |
US11367340B2 (en) | 2005-03-16 | 2022-06-21 | Icontrol Networks, Inc. | Premise management systems and methods |
US11792330B2 (en) | 2005-03-16 | 2023-10-17 | Icontrol Networks, Inc. | Communication and automation in a premises management system |
US11615697B2 (en) | 2005-03-16 | 2023-03-28 | Icontrol Networks, Inc. | Premise management systems and methods |
US11706045B2 (en) | 2005-03-16 | 2023-07-18 | Icontrol Networks, Inc. | Modular electronic display platform |
US11418518B2 (en) | 2006-06-12 | 2022-08-16 | Icontrol Networks, Inc. | Activation of gateway device |
US11706279B2 (en) | 2007-01-24 | 2023-07-18 | Icontrol Networks, Inc. | Methods and systems for data communication |
US11418572B2 (en) | 2007-01-24 | 2022-08-16 | Icontrol Networks, Inc. | Methods and systems for improved system performance |
US11412027B2 (en) | 2007-01-24 | 2022-08-09 | Icontrol Networks, Inc. | Methods and systems for data communication |
US11809174B2 (en) | 2007-02-28 | 2023-11-07 | Icontrol Networks, Inc. | Method and system for managing communication connectivity |
US11194320B2 (en) | 2007-02-28 | 2021-12-07 | Icontrol Networks, Inc. | Method and system for managing communication connectivity |
US11132888B2 (en) | 2007-04-23 | 2021-09-28 | Icontrol Networks, Inc. | Method and system for providing alternate network access |
US11663902B2 (en) | 2007-04-23 | 2023-05-30 | Icontrol Networks, Inc. | Method and system for providing alternate network access |
US11625161B2 (en) | 2007-06-12 | 2023-04-11 | Icontrol Networks, Inc. | Control system user interface |
US11316753B2 (en) | 2007-06-12 | 2022-04-26 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11218878B2 (en) | 2007-06-12 | 2022-01-04 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11582065B2 (en) | 2007-06-12 | 2023-02-14 | Icontrol Networks, Inc. | Systems and methods for device communication |
US11646907B2 (en) | 2007-06-12 | 2023-05-09 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11611568B2 (en) | 2007-06-12 | 2023-03-21 | Icontrol Networks, Inc. | Communication protocols over internet protocol (IP) networks |
US11894986B2 (en) | 2007-06-12 | 2024-02-06 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11212192B2 (en) | 2007-06-12 | 2021-12-28 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11423756B2 (en) | 2007-06-12 | 2022-08-23 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11601810B2 (en) | 2007-06-12 | 2023-03-07 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11722896B2 (en) | 2007-06-12 | 2023-08-08 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11632308B2 (en) | 2007-06-12 | 2023-04-18 | Icontrol Networks, Inc. | Communication protocols in integrated systems |
US11815969B2 (en) | 2007-08-10 | 2023-11-14 | Icontrol Networks, Inc. | Integrated security system with parallel processing architecture |
US11831462B2 (en) | 2007-08-24 | 2023-11-28 | Icontrol Networks, Inc. | Controlling data routing in premises management systems |
US11916928B2 (en) | 2008-01-24 | 2024-02-27 | Icontrol Networks, Inc. | Communication protocols over internet protocol (IP) networks |
US11816323B2 (en) | 2008-06-25 | 2023-11-14 | Icontrol Networks, Inc. | Automation system user interface |
US11616659B2 (en) | 2008-08-11 | 2023-03-28 | Icontrol Networks, Inc. | Integrated cloud system for premises automation |
US11729255B2 (en) | 2008-08-11 | 2023-08-15 | Icontrol Networks, Inc. | Integrated cloud system with lightweight gateway for premises automation |
US11190578B2 (en) | 2008-08-11 | 2021-11-30 | Icontrol Networks, Inc. | Integrated cloud system with lightweight gateway for premises automation |
US11792036B2 (en) | 2008-08-11 | 2023-10-17 | Icontrol Networks, Inc. | Mobile premises automation platform |
US11711234B2 (en) | 2008-08-11 | 2023-07-25 | Icontrol Networks, Inc. | Integrated cloud system for premises automation |
US11368327B2 (en) | 2008-08-11 | 2022-06-21 | Icontrol Networks, Inc. | Integrated cloud system for premises automation |
US11316958B2 (en) | 2008-08-11 | 2022-04-26 | Icontrol Networks, Inc. | Virtual device systems and methods |
US11962672B2 (en) | 2008-08-11 | 2024-04-16 | Icontrol Networks, Inc. | Virtual device systems and methods |
US11758026B2 (en) | 2008-08-11 | 2023-09-12 | Icontrol Networks, Inc. | Virtual device systems and methods |
US11258625B2 (en) | 2008-08-11 | 2022-02-22 | Icontrol Networks, Inc. | Mobile premises automation platform |
US11641391B2 (en) | 2008-08-11 | 2023-05-02 | Icontrol Networks Inc. | Integrated cloud system with lightweight gateway for premises automation |
US11665617B2 (en) | 2009-04-30 | 2023-05-30 | Icontrol Networks, Inc. | Server-based notification of alarm event subsequent to communication failure with armed security system |
US11223998B2 (en) | 2009-04-30 | 2022-01-11 | Icontrol Networks, Inc. | Security, monitoring and automation controller access and use of legacy security control panel information |
US11553399B2 (en) | 2009-04-30 | 2023-01-10 | Icontrol Networks, Inc. | Custom content for premises management |
US11284331B2 (en) | 2009-04-30 | 2022-03-22 | Icontrol Networks, Inc. | Server-based notification of alarm event subsequent to communication failure with armed security system |
US11778534B2 (en) | 2009-04-30 | 2023-10-03 | Icontrol Networks, Inc. | Hardware configurable security, monitoring and automation controller having modular communication protocol interfaces |
US11856502B2 (en) | 2009-04-30 | 2023-12-26 | Icontrol Networks, Inc. | Method, system and apparatus for automated inventory reporting of security, monitoring and automation hardware and software at customer premises |
US11601865B2 (en) | 2009-04-30 | 2023-03-07 | Icontrol Networks, Inc. | Server-based notification of alarm event subsequent to communication failure with armed security system |
US11356926B2 (en) | 2009-04-30 | 2022-06-07 | Icontrol Networks, Inc. | Hardware configurable security, monitoring and automation controller having modular communication protocol interfaces |
US11900790B2 (en) | 2010-09-28 | 2024-02-13 | Icontrol Networks, Inc. | Method, system and apparatus for automated reporting of account and sensor zone information to a central station |
US11398147B2 (en) | 2010-09-28 | 2022-07-26 | Icontrol Networks, Inc. | Method, system and apparatus for automated reporting of account and sensor zone information to a central station |
US11750414B2 (en) | 2010-12-16 | 2023-09-05 | Icontrol Networks, Inc. | Bidirectional security sensor communication for a premises security system |
US11341840B2 (en) | 2010-12-17 | 2022-05-24 | Icontrol Networks, Inc. | Method and system for processing security event data |
US11240059B2 (en) | 2010-12-20 | 2022-02-01 | Icontrol Networks, Inc. | Defining and implementing sensor triggered response rules |
US11296950B2 (en) | 2013-06-27 | 2022-04-05 | Icontrol Networks, Inc. | Control system user interface |
US11030708B2 (en) | 2014-02-28 | 2021-06-08 | Christine E. Akutagawa | Method of and device for implementing contagious illness analysis and tracking |
US11397997B2 (en) | 2014-02-28 | 2022-07-26 | Christine E. Akutagawa | Device for implementing body fluid analysis and social networking event planning |
US10984486B2 (en) | 2014-02-28 | 2021-04-20 | Christine E. Akutagawa | Device for implementing body fluid analysis and social networking event planning |
US11405463B2 (en) | 2014-03-03 | 2022-08-02 | Icontrol Networks, Inc. | Media content management |
US11146637B2 (en) | 2014-03-03 | 2021-10-12 | Icontrol Networks, Inc. | Media content management |
US11943301B2 (en) | 2014-03-03 | 2024-03-26 | Icontrol Networks, Inc. | Media content management |
US11184529B2 (en) * | 2014-06-26 | 2021-11-23 | Ainemo Inc. | Smart recording system |
US10767883B2 (en) * | 2014-12-08 | 2020-09-08 | Encycle Corporation | Smart thermostat orchestration |
US11158067B1 (en) | 2016-02-26 | 2021-10-26 | Amazon Technologies, Inc. | Neighborhood alert mode for triggering multi-device recording, multi-camera locating, and multi-camera event stitching for audio/video recording and communication devices |
US10762646B2 (en) | 2016-02-26 | 2020-09-01 | A9.Com, Inc. | Neighborhood alert mode for triggering multi-device recording, multi-camera locating, and multi-camera event stitching for audio/video recording and communication devices |
US10917618B2 (en) | 2016-02-26 | 2021-02-09 | Amazon Technologies, Inc. | Providing status information for secondary devices with video footage from audio/video recording and communication devices |
US10685060B2 (en) | 2016-02-26 | 2020-06-16 | Amazon Technologies, Inc. | Searching shared video footage from audio/video recording and communication devices |
US10748414B2 (en) | 2016-02-26 | 2020-08-18 | A9.Com, Inc. | Augmenting and sharing data from audio/video recording and communication devices |
US11399157B2 (en) | 2016-02-26 | 2022-07-26 | Amazon Technologies, Inc. | Augmenting and sharing data from audio/video recording and communication devices |
US11393108B1 (en) | 2016-02-26 | 2022-07-19 | Amazon Technologies, Inc. | Neighborhood alert mode for triggering multi-device recording, multi-camera locating, and multi-camera event stitching for audio/video recording and communication devices |
US10979636B2 (en) | 2016-02-26 | 2021-04-13 | Amazon Technologies, Inc. | Triggering actions based on shared video footage from audio/video recording and communication devices |
US11335172B1 (en) | 2016-02-26 | 2022-05-17 | Amazon Technologies, Inc. | Sharing video footage from audio/video recording and communication devices for parcel theft deterrence |
US11240431B1 (en) | 2016-02-26 | 2022-02-01 | Amazon Technologies, Inc. | Sharing video footage from audio/video recording and communication devices |
US10762754B2 (en) | 2016-02-26 | 2020-09-01 | Amazon Technologies, Inc. | Sharing video footage from audio/video recording and communication devices for parcel theft deterrence |
US10796440B2 (en) | 2016-02-26 | 2020-10-06 | Amazon Technologies, Inc. | Sharing video footage from audio/video recording and communication devices |
US10841542B2 (en) | 2016-02-26 | 2020-11-17 | A9.Com, Inc. | Locating a person of interest using shared video footage from audio/video recording and communication devices |
US20190182329A1 (en) * | 2016-10-08 | 2019-06-13 | People Power Company | Systems and methods for evaluating sensor data for occupancy detection and responsively controlling control devices |
US11754986B2 (en) | 2016-10-08 | 2023-09-12 | People Power Company | Systems and methods for evaluating sensor data of internet-of-things (IoT) devices and responsively controlling control devices |
US10956545B1 (en) * | 2016-11-17 | 2021-03-23 | Alarm.Com Incorporated | Pin verification |
US20220027638A1 (en) * | 2016-12-05 | 2022-01-27 | Google Llc | Systems and Methods for Locating Image Data for Selected Regions of Interest |
US11182622B2 (en) * | 2016-12-05 | 2021-11-23 | Google Llc | Systems and methods for locating image data for selected regions of interest |
US11721107B2 (en) * | 2016-12-05 | 2023-08-08 | Google Llc | Systems and methods for locating image data for selected regions of interest |
US20180233010A1 (en) * | 2017-02-13 | 2018-08-16 | Ring Inc. | Neighborhood alert mode for triggering multi-device recording, multi-camera motion tracking, and multi-camera event stitching for audio/video recording and communication devices |
US11580783B2 (en) | 2017-03-31 | 2023-02-14 | Motorola Solutions, Inc. | Unusual motion detection method and system |
US20180285633A1 (en) * | 2017-03-31 | 2018-10-04 | Avigilon Corporation | Unusual motion detection method and system |
US10878227B2 (en) * | 2017-03-31 | 2020-12-29 | Avigilon Corporation | Unusual motion detection method and system |
US10360798B2 (en) * | 2017-05-08 | 2019-07-23 | Nokia Technologies Oy | System and method for trust parameters in vehicle warning messages |
US11803617B1 (en) * | 2017-05-10 | 2023-10-31 | Waylens, Inc. | System and method to increase confidence of roadway object recognition through gamified distributed human feedback |
US11010643B1 (en) * | 2017-05-10 | 2021-05-18 | Waylens, Inc | System and method to increase confidence of roadway object recognition through gamified distributed human feedback |
US20180357870A1 (en) * | 2017-06-07 | 2018-12-13 | Amazon Technologies, Inc. | Behavior-aware security systems and associated methods |
US10936655B2 (en) | 2017-06-07 | 2021-03-02 | Amazon Technologies, Inc. | Security video searching systems and associated methods |
US11621865B2 (en) * | 2017-07-21 | 2023-04-04 | Pearson Education, Inc. | Systems and methods for automated platform-based algorithm monitoring |
US10938592B2 (en) * | 2017-07-21 | 2021-03-02 | Pearson Education, Inc. | Systems and methods for automated platform-based algorithm monitoring |
US20210152385A1 (en) * | 2017-07-21 | 2021-05-20 | Pearson Education, Inc. | Systems and methods for automated platform-based algorithm monitoring |
US10867128B2 (en) | 2017-09-12 | 2020-12-15 | Microsoft Technology Licensing, Llc | Intelligently updating a collaboration site or template |
US10742500B2 (en) * | 2017-09-20 | 2020-08-11 | Microsoft Technology Licensing, Llc | Iteratively updating a collaboration site or template |
US11062581B2 (en) * | 2017-10-23 | 2021-07-13 | Hewlett-Packard Development Company, L.P. | Modification of responses to robot detections |
US11681912B2 (en) * | 2017-11-16 | 2023-06-20 | Samsung Electronics Co., Ltd. | Neural network training method and device |
US20210182664A1 (en) * | 2017-11-16 | 2021-06-17 | Samsung Electronics Co., Ltd. | Neural network training method and device |
US10432774B2 (en) * | 2017-12-01 | 2019-10-01 | Sfara, Inc. | Personal alarm system and method |
US10977805B2 (en) * | 2018-01-25 | 2021-04-13 | Malogic Holdings Limited | Cloud server-based mice intelligent monitoring system and method |
US20190392588A1 (en) * | 2018-01-25 | 2019-12-26 | Malogic Holdings Limited | Cloud Server-Based Mice Intelligent Monitoring System And Method |
US20210327232A1 (en) * | 2018-09-05 | 2021-10-21 | Nec Corporation | Apparatus and a method for adaptively managing event-related data in a control room |
US11488041B2 (en) * | 2018-12-11 | 2022-11-01 | Morgan Stanley Services Group Inc. | System and method for predicting incidents using log text analytics |
US11956484B2 (en) | 2018-12-14 | 2024-04-09 | Google Llc | Methods, systems, and media for identifying videos containing objectionable content |
WO2020123124A1 (en) * | 2018-12-14 | 2020-06-18 | Google Llc | Methods, systems, and media for identifying videos containing objectionable content |
US20210021461A1 (en) * | 2019-07-19 | 2021-01-21 | Razberi Technologies, Inc. | Switch monitoring system and method of use |
US11757706B2 (en) * | 2019-07-19 | 2023-09-12 | Razberi Secure Technologies, Llc | Switch monitoring system and method of use |
US20220189267A1 (en) * | 2020-12-14 | 2022-06-16 | Ava Video Security Limited | Security system |
CN113065513A (en) * | 2021-01-27 | 2021-07-02 | 武汉星巡智能科技有限公司 | Method, device and equipment for optimizing self-training confidence threshold of intelligent camera |
US20220292643A1 (en) * | 2021-03-12 | 2022-09-15 | Flyreel, Inc. | Face detection and blurring methods and systems |
US11699257B2 (en) * | 2021-03-12 | 2023-07-11 | Flyreel, Inc. | Face detection and blurring methods and systems |
CN113537166A (en) * | 2021-09-15 | 2021-10-22 | 北京科技大学 | Alarm method, alarm device and storage medium |
EP4167206A3 (en) * | 2021-09-27 | 2023-06-28 | Arlo Technologies, Inc. | Monitoring system and method capable of evaluating events and sending different types of notifications to a user device based on the evaluation |
EP4210004A1 (en) * | 2022-01-10 | 2023-07-12 | Sony Semiconductor Solutions Corporation | An animal detecting device, system, method and computer program |
WO2023220554A1 (en) * | 2022-05-10 | 2023-11-16 | Google Llc | Sharing intelligence-derived information in home networks |
KR102543936B1 (en) * | 2022-07-14 | 2023-06-16 | 남창환 | Apparatus and Method for Recognizing Sign Language |
Also Published As
Publication number | Publication date |
---|---|
US10192415B2 (en) | 2019-01-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11587320B2 (en) | Methods and systems for person detection in a video feed | |
US11721186B2 (en) | Systems and methods for categorizing motion events | |
US10192415B2 (en) | Methods and systems for providing intelligent alerts for events | |
US10957171B2 (en) | Methods and systems for providing event alerts | |
US11062580B2 (en) | Methods and systems for updating an event timeline with event indicators | |
US9449229B1 (en) | Systems and methods for categorizing motion event candidates | |
US10977918B2 (en) | Method and system for generating a smart time-lapse video clip | |
US20210125475A1 (en) | Methods and devices for presenting video information | |
US9489580B2 (en) | Method and system for cluster-based video monitoring and event categorization |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HEITZ, GEORGE ALBAN, III;BAPAT, AKSHAY R.;NARIYAWALA, MEHUL;SIGNING DATES FROM 20160811 TO 20160816;REEL/FRAME:039459/0583 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
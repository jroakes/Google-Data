US6694311B1 - Method and apparatus for fast query approximation using adaptive query vector projection - Google Patents
Method and apparatus for fast query approximation using adaptive query vector projection Download PDFInfo
- Publication number
- US6694311B1 US6694311B1 US09/489,773 US48977300A US6694311B1 US 6694311 B1 US6694311 B1 US 6694311B1 US 48977300 A US48977300 A US 48977300A US 6694311 B1 US6694311 B1 US 6694311B1
- Authority
- US
- United States
- Prior art keywords
- query
- vector
- projection elements
- projection
- query vector
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
- G06F16/2264—Multidimensional index structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2453—Query optimisation
- G06F16/24534—Query rewriting; Transformation
- G06F16/24547—Optimisations to support specific applications; Extensibility of optimisers
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99934—Query formulation, input preparation, or translation
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
- Y10S707/99945—Object-oriented database structure processing
Definitions
- the present invention generally relates to information query methodologies and, more particularly, to methods and apparatus for performing fast query approximation using adaptive query vector projection.
- Multimedia databases are gaining new functionalities that allow searching by the audio, visual and textual features of the content.
- content-based image query methods use feature vectors to search for images where the feature vector proximity determines the image similarity.
- the content-based query methods do not scale well to large databases since the high-dimensionality of the vectors makes them incompatible with traditional multi-dimensional indexing methods.
- Multi-dimensional index structures such as R-trees, SS-trees and SR-trees are well suited for vectors of a few dimensions but become extremely inefficient for more than ten dimensions. Since content-based query methods often utilize vectors with greater than 256 dimensions, other approaches such as dimensionality reduction and pre-;filtering are needed.
- SVD singular value decomposition
- DCT discrete cosine transform
- dimensionality reduction techniques can speed up querying by using fewer dimensions, they also allow the data to be indexed by multi-dimensional index structures.
- the integration of dimensionality reduction and multi-dimensional indexing has been investigated in several algorithms and system, such as FastMap, RCSVD, SVDD, and QBIC.
- the FastMap algorithm compacts time-series data into two-dimensional streams that are indexed by the R-tree.
- RCSVD integrates recursive clustering with SVD in order to better compact multi-dimensional vectors.
- RCSVD indexes the compacted vectors using an R-tree.
- the IBM (of Armonk, N.Y.) Query by Image Content (QBIC) system uses dimensionality reduction in a staged query system in order to index color images using high-dimensional color histograms.
- the images are indexed using only three dimensions, which are derived from the mean image color in the three color channels.
- This stage pre-filters the next stage, in which the actual histogram distances are computed for the smaller set of surviving items.
- the present invention provides a new query-centric approach that addresses the shortcomings of the existing dimensionality reduction methods.
- Key features of the methodology of the invention are that the system stores a redundant projection library of transformation building blocks for the target vectors. Then, the system rapidly searches for the optimal transformation at query-time.
- the projection library provides an extremely large number of different ways for compacting the vectors. For example, for 128-dimensional vectors, the projection library of 448 projection elements provides O(10 16 ) unique complete transformations and O(10 33 ) unique incomplete projections.
- the invention involves the use of a fast strategy for searching the projection library at query-time to select the best set of projection elements for computing the query.
- the present invention selects the best transformation, on-the-fly, by analyzing the query vector.
- the method selects the elements that correspond to the most significant space and frequency dimensions of each specific query vector. This eliminates the potential for mismatch between the query vector and the transformation, as happens with SVD, DCT, DFT, and Haar transform. This results in greater compaction of the query vector, improved efficiency in processing each query, and speed-up in query response time.
- the system stores redundant data in the projection library. This may be done by compressing and efficiently storing the projection elements.
- the approach has many advantages.
- the projections of the query vector can be either complete or incomplete. If complete, the system computes the query with perfect precision. If incomplete, the system approximates the query. Since the system can select incomplete projections to compact the energy of the query vectors into any number of dimensions, the method allows a flexible query-time tradeoff between query precision and query response time.
- the present invention is suitable for scalable content-based query systems since it works by adaptively selecting and utilizing the most significant space and frequency dimensions of each specific query vector in order to efficiently process each query.
- the present invention is directed towards apparatus and methods for querying by similarity in databases of high-dimensional vectors.
- the invention comprises projecting the query vector into a redundant library and selecting the best set of projection elements for processing the query.
- the invention also comprises a mathematical decomposition of the vectors into the library that guarantees that any complete set of projection elements represents the vectors perfectly and can be used to compute the vector proximities with perfect precision.
- the invention also provides for small and non-redundant sets of projection elements to form approximations of the vectors and the vector proximities.
- the invention provides for selecting non-redundant sets of projection elements to efficiently compute the similarity queries while admitting small losses in precision.
- the invention provides for determining the query efficiency at query time by selecting the transformation of the query vector using a large number of alternative projections, on the following bases: (i) efficiency—the size of the selected element set, or equivalently, the dimensionality of the transformed query vector; (ii) query vector precision—the approximation of the reconstructed projected query vector to the actual query vector; and (iii) query results precision—the bound on the error in the computed similarity between the query and the target vectors.
- the invention provides a framework for greatly improving query efficiency and allowing the user to tradeoff query-response time and query-precision.
- FIG. 1 is a block diagram illustrating a networked information system suitable for implementing high-dimensional vector querying according to the present invention
- FIG. 2 is a block diagram illustrating a fast query approximation system using a query vector projection access method according to the present invention
- FIGS. 3A and 3B are diagrams illustrating a projection library according to the present invention for storing leaf nodes of a space and frequency graph, with FIG. 3A relating to a complete and non-redundant set of projection elements and FIG. 3B relating to an incomplete and non-redundant set of projection elements;
- FIGS. 4A and 4B are diagrams illustrating results of a query process using a 512 dimensional query vector in accordance with the present invention
- FIGS. 5A through 5D are respective diagrams illustrating average retrieval effectiveness for four content-based image queries in accordance with the present invention.
- FIG. 6 is a flow diagram illustrating a fast adaptive transformation algorithm according to one embodiment of the present invention.
- FIG. 7 is a flow diagram illustrating a fast adaptive query computation algorithm according to one embodiment of the present invention.
- FIG. 8 is a block diagram illustrating a hardware implementation of a fast query approximation system according to one embodiment of the present invention.
- FIG. 1 depicts an example of a networked client-server information system which is suitable for implementing high-dimensional vector querying according to the present invention.
- a client application 100 issues a similarity search request,.i.e., query 102 , based on the content or features of an image 104 viewed in accordance with the application 100 .
- the query can be represented as a multi-dimensional vector or histogram.
- a database system 106 resident at a server 108 , compares the query vector to target vectors in the database. It is to be understood that the target vectors may have been previously generated, processed and stored in the database system 106 via a partition, compression and storage module 110 , also resident at the server 108 .
- large images 112 may be partitioned, compressed and stored in the database system 106 in accordance with the module 110 .
- the database system 106 retrieves the items with the target vectors that are most similar to the query vector.
- the results 114 of the retrieval operation are returned to the client application 100 .
- the database system 106 can represent the target vectors using a redundant projection library that advantageously provides flexibility and efficiency in computing the query results.
- the feature descriptor for the image can be represented using a redundant projection vector that also advantageously provides flexibility and efficiency in computing the query results.
- FIG. 1 also shows a multi-resolution sub-region access system 116 , an image view 118 and a multi-dimensional analysis system 120 . While these elements are not necessary for implementing the invention, they may be part of the networked client-server information system.
- the multi-resolution sub-region access system 116 retrieves views of the large images from the database 106 .
- the views 118 are optionally passed to the multi-dimensional analysis system 120 for feature extraction or further analysis of the image view data.
- an example of such a networked client-server information system as illustrated in FIG. 1 may include an arrangement wherein a user at a personal computer or workstation (client) executing the application 100 submits a similarity search request 102 to a server 108 at which the database system 106 resides.
- the client and server may preferably be connected via a public information network such as, for example, the Internet or World Wide Web (WWW), however, the client and server may alternatively be connected via a private network, a local area network, or some other suitable network.
- a public information network such as, for example, the Internet or World Wide Web (WWW)
- WWW World Wide Web
- FIG. 2 depicts a fast query approximation system 200 using a query vector projection access method according to the present invention. It is to be appreciated that such a system 200 and associated methodology may be implemented in accordance with the client-server networked information system illustrated in FIG. 1 .
- the method comprises an off-line phase (A) and an on-line phase (B).
- the system 200 obtains target vectors 202 of images which will comprise the content of the database and performs a spatial and frequency graph vector analysis 204 on the target vectors v t .
- a projection library 206 of projection elements 207 is constructed.
- Projection elements are then stored in store 208 for use by the database system 210 in response to a user query. That is, the projection elements are stored in association with the data in the database 210 .
- the projection elements then provide a description of the data in the cases when the target vectors 202 correspond to feature vectors extracted from the data.
- the projection elements serve as meta-data or, in other words, provide a meta-data description of the data in the database.
- the meta-data may correspond to audio, video, image and/or time-series data associated with the database.
- the meta-data may also correspond to such aspects of the data as color, texture, shape, and/or motion. Further details of these target vector analysis operations will be explained below.
- auser 212 sets a query precision bound (1 ⁇ ) 214 and issues a query vector (v q ) 216 .
- the query precision bound allows the user to tradeoff query-response time and query-precision.
- the system performs a spatial and frequency graph vector analysis 218 on the query vector 216 .
- the system selects the transformation of v q that compacts its energy into a small number of dimensions.
- the system selects the projection elements 222 for v q and each v t that result in a loss of similarity precision less than ⁇ .
- the system computes the similarity of v q and each v t from the inner product 224 of the projection elements 222 .
- the system then ranks 226 the target vectors v t according to the similarity scores and returns the results 228 to the user 212 .
- the system analyzes (i.e., vector analysis 218 ) the query vector 216 and reduces the dimensionality of the query and target vectors 202 on the basis of the analysis. This significantly differs from existing methods that derive the transformation by analyzing the target vectors a priori.
- the methodology of the invention better characterizes the query since it adapts to the specific characteristics of each query vector.
- the construction of the projection library 206 is one important part of the inventive query method.
- the projection library 206 provides the building blocks for deriving the transformations of the query.
- the projection library 206 is constructed using a space and frequency graph.
- the space and frequency graph decomposes the vectors in space via binary spatial segmentation and in frequency via a two-band Haar filter bank.
- the stored elements of the projection library correspond to the leaf nodes of the space and frequency graph.
- the spatial segmentation (S) and frequency (F) operators are defined as follows, and as also described in the above-referenced U.S. patent application identified by Ser. No. 09/079,662 and entitled “Interactive Representation and Retrieval of Multi-dimensional Data Using View Elements,”:
- H i (M) has size 2 M+1 ⁇ 2 M .
- H i ( 1 ) ( 2 2 , ( - 1 ) ′ ⁇ ⁇ 2 2 ) .
- the space and frequency analyses is iterated using a space and frequency graph.
- the commutativity of the space and frequency operations is essential to their integration in the space and frequency graph.
- each element v i,j,k,l corresponds to a space and frequency localized projection of the vector v, where i and j give the spatial and frequency resolution of the projection, and k and l give the spatial and frequency location of the projection.
- the original vector v is placed at the root of the space and frequency graph v 0,0,0,0 .
- the decomposition of v i,j,k,l is generated as follows:
- H 0 and H 1 generate v i,j+1,k,2l and v i,j+1,k,2l+1 as follows:
- the commutativity carries over to the synthesis operations in the space and frequency graph.
- the system 200 constructs the projection library from the leaf nodes of the space and frequency graph, as illustrated in FIGS. 3A and 3B.
- Each S and F transition path corresponds to a spatial or frequency decomposition of a projection element v i,j,k,l , respectively.
- Each set of spatial segmentation operations in an S transition path requires O(N) multiplies, and each set of frequency analysis operations in an F transition path requires O(N) additions and multiplies, where N is the dimensionality of the vector v.
- the perfect reconstruction properties of S i , H j , and G j allows that any complete set of elements ⁇ v* i,j,k,l ⁇ reconstructs the vector v.
- the system can represent a vector v with perfect precision by any complete and non-redundant set of the elements.
- the projection library provides an extremely large number of ways of selecting the elements to transform the vectors.
- FIG. 3A depicts an eight-dimensional, complete, and non-redundant set of projection elements 306 (shown in dark shade in FIG. 3 A).
- FIG. 3B depicts a two-dimensional, incomplete, non-redundant set of projection elements 308 (shown in dark shade in FIG. 3 B).
- the system can select the set that provides the best query approximation performance. Table 1 below summarizes these results for various dimensionalities N of vector v:
- Table 1 illustrates projection library size and complexity for an N-dimensional vector: depth of space and frequency decomposition (D), number of transition elements in the space and frequency graph (N t ), number of projections elements (N p ), amount of data expansion (E p ), and number of unique complete transformations (B p ) and incomplete projections (B pi ).
- the system measures the similarity of feature vectors to discriminate between items in the database.
- the query v q and target vectors v t are points in an N-dimensional space, v q , v t ⁇ R N .
- Vector similarity is derived from proximity in multi-dimensional space using a distance metric D(q,t).
- any non-redundant and complete set of elements forms an orthonormal transformation T.
- any non-redundant and incomplete set of elements forms a projection, or transformation that is not of full rank.
- the query system first searches the projection library to find the best transformation of the query vector. Then, the system computes the query using the high-energy projection elements of the selected transformation.
- the access method of the present invention first finds a complete transformation of the query vector that has good energy compaction properties.
- the algorithm requires a two-way decision for each intermediate node in the space and frequency graph. Overall, it requires O(N/2 log 2 N) decisions.
- a fast adaptive transformation algorithm, according to the invention, employed by the selection module 220 of FIG. 2 will first be explained in detail, followed by a detailed explanation of a fast adaptive query computation algorithm, according to the invention, employed in accordance with blocks 224 and 226 of FIG. 2 .
- the system selects the transformation from the projection library that best compacts the query vector as illustrated in the methodology 600 of FIG. 6 and as follows:
- v i,j,k,l is a terminal projection element then set C* i,j,k,l ⁇ C i,j,k,l .
- the fast adaptive transformation algorithm rapidly searches the projection library and selects the set of projection elements that maximizes the energy compaction function. Since the selected transformation has good energy compaction, the system next uses its projection elements in sorted order of maximum energy to compute the query.
- the query computation procedure guarantees that the system computes the query within a given precision bound 1 ⁇ (recall that the precision bound is preferably provided by the user). This requires the analysis of the transformed query and target vector energies in each stage of the query.
- the algorithm computes the residual energy in the query and target vectors and makes the worst case assumption that the residual energy is retained in the same projection elements for the query and target vectors. This alignment maximizes the residual energy intersection and provides a bound for the error in the query computation.
- the system performs the query within a precision bound of 1 ⁇ as illustrated in the methodology 700 of FIG. 7 and as follows:
- R p n (q, t) ⁇ square root over ((1 ⁇ E q n )(1 ⁇ E t n )) ⁇ .
- Algorithm 2 tracks the precision of the similarity computation of the query vector v q with each target vector v t .
- the system uses a greater number of dimensions for those target vectors v t for which the residual energy intersection R p n (q,t) is not within the error bound ⁇ .
- the system uses fewer dimensions for those target vectors v t for which R p n (q, t) ⁇ .
- the system adds projection elements until it computes each query within the error bound R p n (q, t) ⁇ .
- FIGS. 4A and 4B illustrates the query computation process for querying of 512 dimensional color histograms.
- the query computations are shown for query vector v q ( 430 , 450 ) with a similar target vector v t1 ( 425 ) (FIG. 4A) and a dissimilar target vector v t2 ( 445 ) (FIG. 4 B).
- the error R p n (q, t) 415 , 435 ) drops.
- R p n (q, t) serves as a good approximation of the actual error in the similarity score S p n (q, t) ( 420 ) since v q and v t1 are similar.
- S p n (q, t) the similarity score
- R p n (q, t) bounds but does not closely approximate actual error in S p n (q, t) ( 440 ).
- the access method according to the invention is evaluated using content-based image query experiments on a database of 512 dimensional color histograms generated from a collection of 11,000 color photographs.
- the histograms were generated by transforming the color photographs to HSV (hue saturation value) color space and quantizing to 512 colors.
- the histograms were normalized to one.
- Four image retrieval experiments were conducted of content-based queries for images of beaches (14), horses (26), nature (46) and sunsets (46). Each of these 132 images was used in turn to query the database. Different sized sets of projection elements were used and the average retrieval effectiveness was computed over the queries.
- FIGS. 5A through 5D show the retrieval effectiveness results of each of the four experiments, respectively.
- the average retrieval effectiveness of the 14 beach image queries was measured in terms of precision and recall using a subjective binary measure of relevance of each image in the database to each query. As shown in FIG. 5A, using all 512 dimensions of the query histograms gives the best performance ( 510 ). However, using 32 projection elements causes little drop in the retrieval effectiveness ( 530 ). Using 16 projection elements lowers the precision for high recall values ( 525 ). Using 8 projection elements drops the precision by only 0.1 in the top twenty matches ( 520 ). Using only 4 projection elements drops the precision by 0.35 in the top twenty matches ( 515 ).
- FIGS. 5B, 5 C and 5 D show the results for queries of horses, nature and sunsets, respectively.
- FIG. 5B shows the average retrieval effectiveness for the queries of horse images. Using 8 projection elements allows the horse queries to be computed with only a slight loss in precision.
- FIG. 5C shows the results for the 46 queries of nature images. Using 4 projection elements for the nature images causes a drop in precision by a significant amount but 8 projection elements suffices well.
- FIG. 5D shows the results for 46 queries of sunsets. Using 4 projection elements drops the sunsets query precision by only 0.05 in the top twenty matches.
- FIG. 8 a block diagram is shown of an exemplary hardware implementation of the system 200 of FIG. 2 .
- the system 200 may be implemented in accordance with a processor 802 , a memory 804 and I/O devices 806 .
- processor as used herein is intended to include any processing device, such as, for example, one that includes a CPU (central processing unit).
- the processor may be a digital signal processor, as is well known in the art.
- memory as used herein is intended to include memory associated with a processor or CPU, such as, for example, RAM, ROM, a fixed memory device (e.g., hard drive), a removable memory device (e.g., diskette), flash memory, etc.
- I/O devices or “I/O devices” as used herein is intended to include, for example, one or more input devices, e.g., keyboard, for entering data to the processing unit, and/or one or more output devices, e.g., CRT display and/or printer, for presenting results associated with the processing unit.
- processor may refer to more than one processing device and that various elements associated with a processing device may be shared by other processing devices.
- software components including instructions or code for performing the methodologies of the invention, as described herein, may be stored in one or more of the associated memory devices (e.g., ROM, fixed or removable memory) and, when ready to be utilized, loaded in part or in whole (e.g., into RAM) and executed by a CPU.
- ROM read-only memory
- RAM random access memory
- FIG. 1 a client-server networked information embodiment
- all or portions of the system may be implemented on a server-based computer system having a configuration as shown in FIG. 8, while entry of a user query and generation of a query vector may be implemented on a client-based computer system also having a configuration as shown in FIG. 8 .
- the user may view results of the query computation at the client computer upon receipt from the server.
- methods and apparatus are provided in accordance with the invention for querying by similarity in large collections of high-dimensional vectors by adaptively projecting each query vector into a library of projection elements; by selecting the set of elements that minimizes the work for processing each query; and by adaptively selecting the set of elements in order to exercise the trade off between query precision and query response time.
- the present invention provides for the storage of the projected vector as a meta-data description of data to enable content-based querying of the data.
Abstract
Description
TABLE 1 | ||||||
N | D | Nt | Np | Ep | Bp | Bpi |
4 | 2 | 3 | 4 | 2 | 2 | 7 |
8 | 3 | 6 | 12 | 3 | 7 | 82 |
16 | 4 | 10 | 32 | 4 | 82 | 11,047 |
32 | 5 | 15 | 80 | 5 | 11,047 | 1.9 × 108 |
64 | 6 | 21 | 192 | 16 | 1.9 × 108 | 6.4 × 1016 |
128 | 7 | 28 | 448 | 7 | 6.4 × 1016 | 6.7 × 1033 |
256 | 8 | 36 | 1,024 | 8 | 6.7 × 1033 | 7.2 × 1067 |
512 | 9 | 45 | 2,304 | 9 | 7.2 × 1067 | 8.4 × 10135 |
1,024 | 10 | 55 | 5,120 | 10 | 8.4 × 10135 | |
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/489,773 US6694311B1 (en) | 1999-01-25 | 2000-01-24 | Method and apparatus for fast query approximation using adaptive query vector projection |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11700699P | 1999-01-25 | 1999-01-25 | |
US09/489,773 US6694311B1 (en) | 1999-01-25 | 2000-01-24 | Method and apparatus for fast query approximation using adaptive query vector projection |
Publications (1)
Publication Number | Publication Date |
---|---|
US6694311B1 true US6694311B1 (en) | 2004-02-17 |
Family
ID=31190573
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/489,773 Expired - Lifetime US6694311B1 (en) | 1999-01-25 | 2000-01-24 | Method and apparatus for fast query approximation using adaptive query vector projection |
Country Status (1)
Country | Link |
---|---|
US (1) | US6694311B1 (en) |
Cited By (40)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020039442A1 (en) * | 2000-07-26 | 2002-04-04 | Jahng Surng Gahb | Image indexing and retrieval method using the rosette pattern for the improvement of retrieval efficiency and performance |
US20020057343A1 (en) * | 2000-06-30 | 2002-05-16 | Ronk Lawrence J. | Image object ranking |
US20020176626A1 (en) * | 2000-11-08 | 2002-11-28 | Keaton Patricia A. | Image and video indexing scheme for content analysis |
US20030214603A1 (en) * | 2002-05-20 | 2003-11-20 | Manning John Palmer | Video image formatting technique |
US20060009963A1 (en) * | 2004-07-12 | 2006-01-12 | Xerox Corporation | Method and apparatus for identifying bilingual lexicons in comparable corpora |
US20060100969A1 (en) * | 2004-11-08 | 2006-05-11 | Min Wang | Learning-based method for estimating cost and statistics of complex operators in continuous queries |
US20060190465A1 (en) * | 2005-02-24 | 2006-08-24 | Nahava Inc. | Method and apparatus for efficient indexed storage for unstructured content |
US20070031035A1 (en) * | 2005-08-04 | 2007-02-08 | Gunnar Hovden | System and method for effectively implementing a texture feature detector |
US20080025596A1 (en) * | 2006-06-12 | 2008-01-31 | D&S Consultants, Inc. | System and Method for Machine Learning using a Similarity Inverse Matrix |
US20080034311A1 (en) * | 2006-08-01 | 2008-02-07 | Raul Aguaviva | Method and system for debugging a graphics pipeline subunit |
US7340460B1 (en) * | 2003-04-04 | 2008-03-04 | Yahoo! Inc. | Vector analysis of histograms for units of a concept network in search query processing |
US20080228768A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Individual Identification by Attribute |
US20080247313A1 (en) * | 2007-04-03 | 2008-10-09 | Microsoft Corporation | Slot-Cache for Caching Aggregates of Data with Different Expiry Times |
US20080313161A1 (en) * | 2007-06-12 | 2008-12-18 | Microsoft Corporation | Discosql: distributed processing of structured queries |
US7500187B1 (en) * | 1999-11-04 | 2009-03-03 | Panasonic Corporation | Creation assisting method and apparatus utilizing element indexes |
US7555412B2 (en) | 2007-02-09 | 2009-06-30 | Microsoft Corporation | Communication efficient spatial search in a sensor data web portal |
US20090204551A1 (en) * | 2004-11-08 | 2009-08-13 | International Business Machines Corporation | Learning-Based Method for Estimating Costs and Statistics of Complex Operators in Continuous Queries |
US20100063843A1 (en) * | 2008-09-10 | 2010-03-11 | Expanse Networks, Inc. | Masked Data Record Access |
US20100063830A1 (en) * | 2008-09-10 | 2010-03-11 | Expanse Networks, Inc. | Masked Data Provider Selection |
US20100076985A1 (en) * | 2004-12-30 | 2010-03-25 | Google Inc. | Classification of ambiguous geographic references |
US20100076950A1 (en) * | 2008-09-10 | 2010-03-25 | Expanse Networks, Inc. | Masked Data Service Selection |
US20100169340A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Pangenetic Web Item Recommendation System |
US20100169262A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Mobile Device for Pangenetic Web |
US20100169313A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Pangenetic Web Item Feedback System |
US20100169342A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Pangenetic Web Satisfaction Prediction System |
US20110087665A1 (en) * | 2009-10-12 | 2011-04-14 | Weare Christopher B | Client playlist generation |
US7941442B2 (en) | 2007-04-18 | 2011-05-10 | Microsoft Corporation | Object similarity search in high-dimensional vector spaces |
US20110153356A1 (en) * | 2008-09-10 | 2011-06-23 | Expanse Networks, Inc. | System, Method and Software for Healthcare Selection Based on Pangenetic Data |
US20110286627A1 (en) * | 2009-11-19 | 2011-11-24 | Stanford University | Method and apparatus for tracking and recognition with rotation invariant feature descriptors |
US8788286B2 (en) | 2007-08-08 | 2014-07-22 | Expanse Bioinformatics, Inc. | Side effects prediction using co-associating bioattributes |
US9031870B2 (en) | 2008-12-30 | 2015-05-12 | Expanse Bioinformatics, Inc. | Pangenetic web user behavior prediction system |
US9710492B2 (en) | 2008-11-12 | 2017-07-18 | Nokia Technologies Oy | Method and apparatus for representing and identifying feature descriptors utilizing a compressed histogram of gradients |
US20170322987A1 (en) * | 2014-10-26 | 2017-11-09 | Hewlett Packard Enterprise Development Lp | Processing a query using transformed raw data |
US10191990B2 (en) | 2016-11-21 | 2019-01-29 | Comcast Cable Communications, Llc | Content recommendation system with weighted metadata annotations |
US10191949B2 (en) | 2015-06-18 | 2019-01-29 | Nbcuniversal Media, Llc | Recommendation system using a transformed similarity matrix |
TWI678617B (en) * | 2017-05-23 | 2019-12-01 | 美商谷歌有限責任公司 | "system, computer-implemented method, and apparatus for accessing data in multi-dimensional tensors using adders" |
US10534607B2 (en) | 2017-05-23 | 2020-01-14 | Google Llc | Accessing data in multi-dimensional tensors using adders |
US10795889B2 (en) | 2015-08-06 | 2020-10-06 | Micro Focus Llc | Query path with aggregate projection |
US11322227B2 (en) | 2008-12-31 | 2022-05-03 | 23Andme, Inc. | Finding relatives in a database |
US11882344B2 (en) | 2016-03-03 | 2024-01-23 | Comcast Cable Communications, Llc | Determining points of interest in a content item |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5276771A (en) * | 1991-12-27 | 1994-01-04 | R & D Associates | Rapidly converging projective neural network |
US5913205A (en) * | 1996-03-29 | 1999-06-15 | Virage, Inc. | Query optimization for visual information retrieval system |
US6014671A (en) | 1998-04-14 | 2000-01-11 | International Business Machines Corporation | Interactive retrieval and caching of multi-dimensional data using view elements |
US6084595A (en) * | 1998-02-24 | 2000-07-04 | Virage, Inc. | Indexing method for image search engine |
US6192150B1 (en) * | 1998-11-16 | 2001-02-20 | National University Of Singapore | Invariant texture matching method for image retrieval |
US6334129B1 (en) * | 1998-01-30 | 2001-12-25 | Canon Kabushiki Kaisha | Data processing apparatus and method |
-
2000
- 2000-01-24 US US09/489,773 patent/US6694311B1/en not_active Expired - Lifetime
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5276771A (en) * | 1991-12-27 | 1994-01-04 | R & D Associates | Rapidly converging projective neural network |
US5913205A (en) * | 1996-03-29 | 1999-06-15 | Virage, Inc. | Query optimization for visual information retrieval system |
US6334129B1 (en) * | 1998-01-30 | 2001-12-25 | Canon Kabushiki Kaisha | Data processing apparatus and method |
US6084595A (en) * | 1998-02-24 | 2000-07-04 | Virage, Inc. | Indexing method for image search engine |
US6014671A (en) | 1998-04-14 | 2000-01-11 | International Business Machines Corporation | Interactive retrieval and caching of multi-dimensional data using view elements |
US6192150B1 (en) * | 1998-11-16 | 2001-02-20 | National University Of Singapore | Invariant texture matching method for image retrieval |
Non-Patent Citations (1)
Title |
---|
U.S. patent application Ser. No. 09/079,662, Castelli et al., filed May 14, 1998, "Interactive Representation and Retrieval of Multi-Dimensional Data Using View Elements." |
Cited By (118)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7500187B1 (en) * | 1999-11-04 | 2009-03-03 | Panasonic Corporation | Creation assisting method and apparatus utilizing element indexes |
US7386170B2 (en) * | 2000-06-30 | 2008-06-10 | Texas Instruments Incorporated | Image object ranking |
US20020057343A1 (en) * | 2000-06-30 | 2002-05-16 | Ronk Lawrence J. | Image object ranking |
US20020039442A1 (en) * | 2000-07-26 | 2002-04-04 | Jahng Surng Gahb | Image indexing and retrieval method using the rosette pattern for the improvement of retrieval efficiency and performance |
US6795591B2 (en) * | 2000-07-26 | 2004-09-21 | Multiway Systems Co. Ltd. | Image indexing and retrieval method using the rosette pattern for the improvement of retrieval efficiency and performance |
US7046851B2 (en) * | 2000-11-08 | 2006-05-16 | California Institute Of Technology | Image and video indexing scheme for content analysis |
USRE43896E1 (en) | 2000-11-08 | 2013-01-01 | California Institute Of Technology | Image and video indexing scheme for content analysis |
US20020176626A1 (en) * | 2000-11-08 | 2002-11-28 | Keaton Patricia A. | Image and video indexing scheme for content analysis |
US20030214603A1 (en) * | 2002-05-20 | 2003-11-20 | Manning John Palmer | Video image formatting technique |
US7184093B2 (en) * | 2002-05-20 | 2007-02-27 | Thomson Licensing | Video image formatting technique |
US7340460B1 (en) * | 2003-04-04 | 2008-03-04 | Yahoo! Inc. | Vector analysis of histograms for units of a concept network in search query processing |
US20060009963A1 (en) * | 2004-07-12 | 2006-01-12 | Xerox Corporation | Method and apparatus for identifying bilingual lexicons in comparable corpora |
US7620539B2 (en) * | 2004-07-12 | 2009-11-17 | Xerox Corporation | Methods and apparatuses for identifying bilingual lexicons in comparable corpora using geometric processing |
US20060100969A1 (en) * | 2004-11-08 | 2006-05-11 | Min Wang | Learning-based method for estimating cost and statistics of complex operators in continuous queries |
US20090204551A1 (en) * | 2004-11-08 | 2009-08-13 | International Business Machines Corporation | Learning-Based Method for Estimating Costs and Statistics of Complex Operators in Continuous Queries |
US8856143B2 (en) * | 2004-12-30 | 2014-10-07 | Google Inc. | Classification of ambiguous geographic references |
US20100076985A1 (en) * | 2004-12-30 | 2010-03-25 | Google Inc. | Classification of ambiguous geographic references |
US9323738B2 (en) | 2004-12-30 | 2016-04-26 | Google Inc. | Classification of ambiguous geographic references |
US20110202540A1 (en) * | 2005-02-24 | 2011-08-18 | Nahava Inc. | Method and apparatus for efficient indexed storage for unstructured content |
US8032476B2 (en) | 2005-02-24 | 2011-10-04 | Nahava Inc. | Method and apparatus for efficient indexed storage for unstructured content |
US20060190465A1 (en) * | 2005-02-24 | 2006-08-24 | Nahava Inc. | Method and apparatus for efficient indexed storage for unstructured content |
US20100076981A1 (en) * | 2005-02-24 | 2010-03-25 | Nahava Inc. | Method and Apparatus for Efficient Indexed Storage for Unstructured Content |
US7650320B2 (en) | 2005-02-24 | 2010-01-19 | Nahava Inc. | Method and system for efficient indexed storage for unstructured content |
WO2006091739A3 (en) * | 2005-02-24 | 2009-04-16 | Nahava Inc | Method and apparatus for efficient indexed storage for unstructured content |
US20070031035A1 (en) * | 2005-08-04 | 2007-02-08 | Gunnar Hovden | System and method for effectively implementing a texture feature detector |
US7609885B2 (en) * | 2005-08-04 | 2009-10-27 | Sony Corporation | System and method for effectively implementing a texture feature detector |
US7840060B2 (en) * | 2006-06-12 | 2010-11-23 | D&S Consultants, Inc. | System and method for machine learning using a similarity inverse matrix |
US20080025596A1 (en) * | 2006-06-12 | 2008-01-31 | D&S Consultants, Inc. | System and Method for Machine Learning using a Similarity Inverse Matrix |
US20080034311A1 (en) * | 2006-08-01 | 2008-02-07 | Raul Aguaviva | Method and system for debugging a graphics pipeline subunit |
US7555412B2 (en) | 2007-02-09 | 2009-06-30 | Microsoft Corporation | Communication efficient spatial search in a sensor data web portal |
US11581098B2 (en) | 2007-03-16 | 2023-02-14 | 23Andme, Inc. | Computer implemented predisposition prediction in a genetics platform |
US20080228767A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Attribute Method and System |
US11600393B2 (en) | 2007-03-16 | 2023-03-07 | 23Andme, Inc. | Computer implemented modeling and prediction of phenotypes |
US11735323B2 (en) | 2007-03-16 | 2023-08-22 | 23Andme, Inc. | Computer implemented identification of genetic similarity |
US11791054B2 (en) | 2007-03-16 | 2023-10-17 | 23Andme, Inc. | Comparison and identification of attribute similarity based on genetic markers |
US11581096B2 (en) | 2007-03-16 | 2023-02-14 | 23Andme, Inc. | Attribute identification based on seeded learning |
US8655908B2 (en) | 2007-03-16 | 2014-02-18 | Expanse Bioinformatics, Inc. | Predisposition modification |
US11545269B2 (en) | 2007-03-16 | 2023-01-03 | 23Andme, Inc. | Computer implemented identification of genetic similarity |
US11515046B2 (en) | 2007-03-16 | 2022-11-29 | 23Andme, Inc. | Treatment determination and impact analysis |
US11515047B2 (en) | 2007-03-16 | 2022-11-29 | 23Andme, Inc. | Computer implemented identification of modifiable attributes associated with phenotypic predispositions in a genetics platform |
US11495360B2 (en) | 2007-03-16 | 2022-11-08 | 23Andme, Inc. | Computer implemented identification of treatments for predicted predispositions with clinician assistance |
US20080228820A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Efficiently Compiling Co-associating Bioattributes |
US20110016105A1 (en) * | 2007-03-16 | 2011-01-20 | Expanse Networks, Inc. | Predisposition Modification |
US20110040791A1 (en) * | 2007-03-16 | 2011-02-17 | Expanse Networks, Inc. | Weight and Diet Attribute Combination Discovery |
US11482340B1 (en) | 2007-03-16 | 2022-10-25 | 23Andme, Inc. | Attribute combination discovery for predisposition determination of health conditions |
US7941434B2 (en) * | 2007-03-16 | 2011-05-10 | Expanse Networks, Inc. | Efficiently compiling co-associating bioattributes |
US11348692B1 (en) | 2007-03-16 | 2022-05-31 | 23Andme, Inc. | Computer implemented identification of modifiable attributes associated with phenotypic predispositions in a genetics platform |
US11348691B1 (en) | 2007-03-16 | 2022-05-31 | 23Andme, Inc. | Computer implemented predisposition prediction in a genetics platform |
US20110184944A1 (en) * | 2007-03-16 | 2011-07-28 | Expanse Networks, Inc. | Longevity analysis and modifiable attribute identification |
US20110184656A1 (en) * | 2007-03-16 | 2011-07-28 | Expanse Networks, Inc. | Efficiently Determining Condition Relevant Modifiable Lifestyle Attributes |
US10991467B2 (en) | 2007-03-16 | 2021-04-27 | Expanse Bioinformatics, Inc. | Treatment determination and impact analysis |
US11621089B2 (en) | 2007-03-16 | 2023-04-04 | 23Andme, Inc. | Attribute combination discovery for predisposition determination of health conditions |
US20080228723A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Predisposition Prediction Using Attribute Combinations |
US8051033B2 (en) | 2007-03-16 | 2011-11-01 | Expanse Networks, Inc. | Predisposition prediction using attribute combinations |
US8055643B2 (en) | 2007-03-16 | 2011-11-08 | Expanse Networks, Inc. | Predisposition modification |
US8065324B2 (en) | 2007-03-16 | 2011-11-22 | Expanse Networks, Inc. | Weight and diet attribute combination discovery |
US10957455B2 (en) | 2007-03-16 | 2021-03-23 | Expanse Bioinformatics, Inc. | Computer implemented identification of genetic similarity |
US8185461B2 (en) | 2007-03-16 | 2012-05-22 | Expanse Networks, Inc. | Longevity analysis and modifiable attribute identification |
US20080228797A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Creation of Attribute Combination Databases Using Expanded Attribute Profiles |
US10896233B2 (en) | 2007-03-16 | 2021-01-19 | Expanse Bioinformatics, Inc. | Computer implemented identification of genetic similarity |
US8224835B2 (en) | 2007-03-16 | 2012-07-17 | Expanse Networks, Inc. | Expanding attribute profiles |
US10803134B2 (en) | 2007-03-16 | 2020-10-13 | Expanse Bioinformatics, Inc. | Computer implemented identification of genetic similarity |
US10379812B2 (en) | 2007-03-16 | 2019-08-13 | Expanse Bioinformatics, Inc. | Treatment determination and impact analysis |
US9582647B2 (en) | 2007-03-16 | 2017-02-28 | Expanse Bioinformatics, Inc. | Attribute combination discovery for predisposition determination |
US20080228735A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Lifestyle Optimization and Behavior Modification |
US20080228705A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Predisposition Modification Using Co-associating Bioattributes |
US9170992B2 (en) | 2007-03-16 | 2015-10-27 | Expanse Bioinformatics, Inc. | Treatment determination and impact analysis |
US8458121B2 (en) | 2007-03-16 | 2013-06-04 | Expanse Networks, Inc. | Predisposition prediction using attribute combinations |
US20080228768A1 (en) * | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Individual Identification by Attribute |
US8788283B2 (en) | 2007-03-16 | 2014-07-22 | Expanse Bioinformatics, Inc. | Modifiable attribute identification |
US8606761B2 (en) | 2007-03-16 | 2013-12-10 | Expanse Bioinformatics, Inc. | Lifestyle optimization and behavior modification |
US8655899B2 (en) | 2007-03-16 | 2014-02-18 | Expanse Bioinformatics, Inc. | Attribute method and system |
US8185355B2 (en) | 2007-04-03 | 2012-05-22 | Microsoft Corporation | Slot-cache for caching aggregates of data with different expiry times |
US20080247313A1 (en) * | 2007-04-03 | 2008-10-09 | Microsoft Corporation | Slot-Cache for Caching Aggregates of Data with Different Expiry Times |
US8224849B2 (en) | 2007-04-18 | 2012-07-17 | Microsoft Corporation | Object similarity search in high-dimensional vector spaces |
US20110194780A1 (en) * | 2007-04-18 | 2011-08-11 | Microsoft Corporation | Object similarity search in high-dimensional vector spaces |
US7941442B2 (en) | 2007-04-18 | 2011-05-10 | Microsoft Corporation | Object similarity search in high-dimensional vector spaces |
US7840585B2 (en) | 2007-06-12 | 2010-11-23 | Microsoft Corporation | DISCOSQL: distributed processing of structured queries |
US20080313161A1 (en) * | 2007-06-12 | 2008-12-18 | Microsoft Corporation | Discosql: distributed processing of structured queries |
US8788286B2 (en) | 2007-08-08 | 2014-07-22 | Expanse Bioinformatics, Inc. | Side effects prediction using co-associating bioattributes |
US8458097B2 (en) | 2008-09-10 | 2013-06-04 | Expanse Networks, Inc. | System, method and software for healthcare selection based on pangenetic data |
US8326648B2 (en) | 2008-09-10 | 2012-12-04 | Expanse Networks, Inc. | System for secure mobile healthcare selection |
US20100076950A1 (en) * | 2008-09-10 | 2010-03-25 | Expanse Networks, Inc. | Masked Data Service Selection |
US20100063830A1 (en) * | 2008-09-10 | 2010-03-11 | Expanse Networks, Inc. | Masked Data Provider Selection |
US8452619B2 (en) | 2008-09-10 | 2013-05-28 | Expanse Networks, Inc. | Masked data record access |
US20110153356A1 (en) * | 2008-09-10 | 2011-06-23 | Expanse Networks, Inc. | System, Method and Software for Healthcare Selection Based on Pangenetic Data |
US20100063843A1 (en) * | 2008-09-10 | 2010-03-11 | Expanse Networks, Inc. | Masked Data Record Access |
US8200509B2 (en) | 2008-09-10 | 2012-06-12 | Expanse Networks, Inc. | Masked data record access |
US9710492B2 (en) | 2008-11-12 | 2017-07-18 | Nokia Technologies Oy | Method and apparatus for representing and identifying feature descriptors utilizing a compressed histogram of gradients |
US11514085B2 (en) | 2008-12-30 | 2022-11-29 | 23Andme, Inc. | Learning system for pangenetic-based recommendations |
US9031870B2 (en) | 2008-12-30 | 2015-05-12 | Expanse Bioinformatics, Inc. | Pangenetic web user behavior prediction system |
US8386519B2 (en) | 2008-12-30 | 2013-02-26 | Expanse Networks, Inc. | Pangenetic web item recommendation system |
US20100169340A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Pangenetic Web Item Recommendation System |
US20100169262A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Mobile Device for Pangenetic Web |
US8655915B2 (en) | 2008-12-30 | 2014-02-18 | Expanse Bioinformatics, Inc. | Pangenetic web item recommendation system |
US11003694B2 (en) | 2008-12-30 | 2021-05-11 | Expanse Bioinformatics | Learning systems for pangenetic-based recommendations |
US20100169313A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Pangenetic Web Item Feedback System |
US20100169342A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Pangenetic Web Satisfaction Prediction System |
US8255403B2 (en) | 2008-12-30 | 2012-08-28 | Expanse Networks, Inc. | Pangenetic web satisfaction prediction system |
US11657902B2 (en) | 2008-12-31 | 2023-05-23 | 23Andme, Inc. | Finding relatives in a database |
US11468971B2 (en) | 2008-12-31 | 2022-10-11 | 23Andme, Inc. | Ancestry finder |
US11935628B2 (en) | 2008-12-31 | 2024-03-19 | 23Andme, Inc. | Finding relatives in a database |
US11508461B2 (en) | 2008-12-31 | 2022-11-22 | 23Andme, Inc. | Finding relatives in a database |
US11322227B2 (en) | 2008-12-31 | 2022-05-03 | 23Andme, Inc. | Finding relatives in a database |
US11776662B2 (en) | 2008-12-31 | 2023-10-03 | 23Andme, Inc. | Finding relatives in a database |
US20110087665A1 (en) * | 2009-10-12 | 2011-04-14 | Weare Christopher B | Client playlist generation |
US8572098B2 (en) * | 2009-10-12 | 2013-10-29 | Microsoft Corporation | Client playlist generation |
US20110286627A1 (en) * | 2009-11-19 | 2011-11-24 | Stanford University | Method and apparatus for tracking and recognition with rotation invariant feature descriptors |
US8687891B2 (en) * | 2009-11-19 | 2014-04-01 | Stanford University | Method and apparatus for tracking and recognition with rotation invariant feature descriptors |
US20170322987A1 (en) * | 2014-10-26 | 2017-11-09 | Hewlett Packard Enterprise Development Lp | Processing a query using transformed raw data |
US10854331B2 (en) * | 2014-10-26 | 2020-12-01 | Hewlett Packard Enterprise Development Lp | Processing a query using transformed raw data |
US10191949B2 (en) | 2015-06-18 | 2019-01-29 | Nbcuniversal Media, Llc | Recommendation system using a transformed similarity matrix |
US10795889B2 (en) | 2015-08-06 | 2020-10-06 | Micro Focus Llc | Query path with aggregate projection |
US11882344B2 (en) | 2016-03-03 | 2024-01-23 | Comcast Cable Communications, Llc | Determining points of interest in a content item |
US11244017B2 (en) | 2016-11-21 | 2022-02-08 | Comcast Cable Communications, Llc | Content recommendation system with weighted metadata annotations |
US10191990B2 (en) | 2016-11-21 | 2019-01-29 | Comcast Cable Communications, Llc | Content recommendation system with weighted metadata annotations |
US10534607B2 (en) | 2017-05-23 | 2020-01-14 | Google Llc | Accessing data in multi-dimensional tensors using adders |
TWI678617B (en) * | 2017-05-23 | 2019-12-01 | 美商谷歌有限責任公司 | "system, computer-implemented method, and apparatus for accessing data in multi-dimensional tensors using adders" |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6694311B1 (en) | Method and apparatus for fast query approximation using adaptive query vector projection | |
EP1025514B1 (en) | Multidimensional data clustering and dimension reduction for indexing and searching | |
Ferhatosmanoglu et al. | Vector approximation based indexing for non-uniform high dimensional data sets | |
Rui et al. | Image retrieval: Past, present, and future | |
Wang et al. | Content-based image indexing and searching using Daubechies' wavelets | |
US6134541A (en) | Searching multidimensional indexes using associated clustering and dimension reduction information | |
US7272593B1 (en) | Method and apparatus for similarity retrieval from iterative refinement | |
US5647058A (en) | Method for high-dimensionality indexing in a multi-media database | |
US6633868B1 (en) | System and method for context-based document retrieval | |
US5940825A (en) | Adaptive similarity searching in sequence databases | |
Albuz et al. | Scalable color image indexing and retrieval using vector wavelets | |
US20020178149A1 (en) | Content -based similarity retrieval system for image data | |
Alexandrov et al. | Adaptive filtering and indexing for image databases | |
Vadivel et al. | Characteristics of weighted feature vector in content-based image retrieval applications | |
Ghosh et al. | Similarity-based text clustering: A comparative study | |
Li et al. | Introduction to Content‐Based Image Retrieval—Overview of Key Techniques | |
Mejdoub et al. | Fast indexing method for image retrieval using tree-structured lattices | |
Cheikh | MUVIS-a system for content-based image retrieval | |
Smith | Query vector projection access method | |
Valova et al. | Retrieval by Color Features in Image Databases. | |
Irtaza et al. | Correlated networks for content based image retrieval | |
Albuz et al. | Scalable image indexing and retrieval using wavelets | |
Natsev et al. | CAMEL: concept annotated image libraries | |
Surong et al. | Image retrieval using dominant color descriptor | |
Li et al. | S-STIR: similarity search through iterative refinement |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:SMITH, JOHN R.;REEL/FRAME:010701/0548Effective date: 20000124 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026894/0001Effective date: 20110817 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
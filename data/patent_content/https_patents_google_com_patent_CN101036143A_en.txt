CN101036143A - Multi-stage query processing system and method for use with tokenspace repository - Google Patents
Multi-stage query processing system and method for use with tokenspace repository Download PDFInfo
- Publication number
- CN101036143A CN101036143A CNA2005800341289A CN200580034128A CN101036143A CN 101036143 A CN101036143 A CN 101036143A CN A2005800341289 A CNA2005800341289 A CN A2005800341289A CN 200580034128 A CN200580034128 A CN 200580034128A CN 101036143 A CN101036143 A CN 101036143A
- Authority
- CN
- China
- Prior art keywords
- document
- mark
- query
- document identifier
- processing system
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
Abstract
A multi-stage query processing system and method enables multi-stage query scoring, including ''snippet'' generation, through incremental document reconstruction facilitated by a multi-tiered mapping scheme. At one or more stages of a multi-stage query processing system a set of relevancy scores are used to select a subset of documents for presentation as an ordered list to a user. The set of relevancy scores can be derived in part from one or more sets of relevancy scores determined in prior stages of the multi-stage query processing system. In some embodiments, the multi-stage query processing system is capable of executing one or more passes on a user query, and using information from each pass to expand the user query for use in a subsequent pass to improve the relevancy of documents in the ordered list.
Description
Related application
The application relates on August 13rd, 2004 and proposes, application number is 10/917,745, the U.S. Patent application of " Systemand Method For Encoding and Decoding Variable-Length Data " (" being used for variable length data is carried out the system and method for Code And Decode ") by name, and proposition on August 13rd, 2004, application number is 10/917,739, the U.S. Patent application of " Document Compression System andMethod For Use With Tokenspace Repository " (" the document compressibility and the method that are used for mark space data bank ") by name, the full content of these applications is incorporated into herein, with for referencial use.
Technical field
Generally speaking, the disclosed embodiments relate to data handling system and method, specifically, relate to the multistage query processing system and the method for the collection of document that is used to have relative index (below, be referred to as " mark (token) space data bank ").
Background technology
Information retrieval system (for example, search engine) makes the inquiry and the index of the document that is generated according to document sets (for example WWW) be complementary.Typical reverse index (inverse index) comprises the word in each document, and the pointer that points to their positions in document.DPS (Document Processing System) prepares inverted index (inverted index) by using the content of automatic or manual process processing from document, page or leaf or address that document sets retrieved.DPS (Document Processing System) can also be stored in the each several part of the interior perhaps content of document in the data bank, uses when response is inquired about for query processor.
Exist demand always, be associated with inquiry to guarantee Query Result to more complicated search and the technology of keeping the score (scoring technique).Some technology of keeping the score may require candidate documents is carried out part reconstruct, the query term of being found in for example definite document or the context of key word.Make us feeling regrettably, introduce the reduction that such complicated technology may cause search performance owing to related extra processing and expense.
Summary of the invention
The disclosed embodiments comprise and a kind of multistage query processing system and method that is used for mark space data bank.Described multistage query processing system and method increase progressively document reconstruct and can multistage inquiry keep the score by what simplified by the multilayer mapping scheme, comprise that " fragment (snippet) " generates.Multistage query processing system one or multistage, use the set of correlativity score, select composition group collection to present to the user as ordered list.This correlativity score set can partly be derived in determined one or more correlativity score set from the first prime of described multistage query processing system.In certain embodiments, multistage query processing system can carry out one or multipass to user inquiring, and can use the information from each time, and expansion is used for back one time user inquiring, to improve the correlativity of the document in the ordered list.
Description of drawings
Fig. 1 is the block scheme of the embodiment of information retrieval system.
Fig. 2 is the conceptual block diagram of embodiment of the dictionary maker of Fig. 1.
Fig. 3 A is the block scheme that is used for the embodiment of coded system mark space data bank, that document is encoded.
Fig. 3 B is the block scheme that is used for the embodiment of decode system mark space data bank, that document is decoded.
Fig. 3 C is the block scheme of embodiment that is used for document properties is carried out the attribute coding/decode system of coding/decoding.
Fig. 4 is the block scheme of embodiment that is used for the query processing system of mark space data bank.
Fig. 5 is the block scheme of embodiment that is used for the multistage query processing system of mark space data bank.
Fig. 6 is the block scheme of the embodiment of mark space data bank server.
Fig. 7 is the block scheme of the embodiment of query processing server.
Fig. 8 A is the block scheme of second embodiment in signifying word document information storehouse; And Fig. 8 B is the conceptual block diagram of second embodiment of the dictionary maker of Fig. 1.
Fig. 9 A is the concept map of coding process that is used for the embodiment of dictionary maker, and Fig. 9 B has described the example data structure of the mark that is used for presentation code.
Among a plurality of figure in these figure, identical reference marker is indicated corresponding part.
Embodiment
System survey
Fig. 1 is the block scheme of the embodiment of information retrieval system 100.Information retrieval system 100 comprises DPS (Document Processing System) 102 and query processing system 104.Information retrieval system 100 can (for example can respond the inquiry retrieving information for any, file, Email, application program etc.) system, including, but not limited to, be used on such as one or more networks of Internet (for example, via WWW) or in-house network (Intranet) or the user's computer in this locality on carry out one or more computer systems of clear and definite or implicit document searching.Notice that " document " means document, webpage, Email, special use (application specific) document and data structure, instant message and handle (IM) message, audio file, video file and can reside in any other data or application program on one or more computer systems.
DPS (Document Processing System)
DPS (Document Processing System) 102 generally includes one or more document informations storehouse 106, dictionary maker 108, coding/decoding system 110 and mark space data bank 112.Coding/decoding system 110 is search file from one or more document informations storehouse 106, document is resolved to mark, use is encoded to a kind of compressed format to mark from the mapping of dictionary maker 108, then the mark of coding is stored in the mark space data bank 112.
" mark " can be any object of being found usually in document, including, but not limited to, item, phrase, punctuate, html tag etc.After resolving, the set of document is expressed as the mark sequence.And each mark in this mark sequence all has the mark position, and the position of this mark in collection of document also represented in this mark position.For example, first mark in the document set can be endowed position 0, and second mark in the document set can be endowed position 1, or the like.
It should be noted that in some embodiments, adopt with the diverse set of computers of computing machine that is used for document is decoded to come document is encoded.For example, net wriggling (crawling) system can comprise the DPS (Document Processing System) 102 that document is encoded, and query processing system 104 can be decoded to the selected portion of coded document.In such embodiment, document reverse index and mark space data bank 112 or its copy by DPS (Document Processing System) 102 is worked out are used by query processing system 104.
Query processing system
In certain embodiments, one or more query processors 114 resolve to a plurality of query terms (terms) to an inquiry, and these query terms are transformed into query expression (for example, boolean sets expression formula) by one or more query processors 114.Use query term that mark space reverse index 116 is indexed,, more fully this is described hereinafter with reference to Fig. 4 with retrieval mark position.In certain embodiments, the mark position is used for multistage query processing system, this multistage query processing system is used for document associated with the query is kept the score, as described in Figure 5.Corresponding to query term, query processor 114 generates the ordered list of presenting to user's document via one or more communication patterns (for example display device, audio frequency etc.).
The dictionary maker
Fig. 2 is the conceptual block diagram of embodiment of the dictionary maker 108 of Fig. 1.Dictionary maker 108 comprises overall dictionary formatter (builder) 202 and include file formatter 204.
Overall situation dictionary formatter
Overall situation dictionary formatter 202 search file from document information storehouse 106, and, generate overall dictionary 206 by unique overall mark identifier (GTokenID) being given each the unique mark that is included in the document.In certain embodiments, document information storehouse 106 logically or physically is divided into a plurality of parts, sometimes they is called subregion (partition), and generates independently overall dictionary 206 at each subregion.In one embodiment, the set of billions of documents is drawn and is divided into thousands of subregions, each subregion is handled, to generate overall dictionary 206.Typical overall dictionary 206 can comprise millions of unique marks.
In certain embodiments, before document being resolved to mark and mark handled, the collection of document that be encoded (for example, the document in subregion) is classified according to one or more criterions.This classification to document helps the document of signifying word is carried out efficient coding, because used the document of similar set of letters to be placed in the collection of document by phase near-earth each other.Therefore, compare with opposite situation,, each include file (following described) will on average cover a bigger part of collection of document, and the coding of document will take less space.In one embodiment, at first according to language collection of document is classified, then, at every kind of language, according to URL document is classified, wherein the field of the host name of URL part is reversed successively.For example, after classifying,, will classify to the French document according to URL then according to language all French collection of document together.When carrying out the branch time-like according to URL, each URL comprises the pattern of a h1.h2...hy.hz/n1/n2... at first, and wherein, h1.h2...hy.hz comprises the host name part of URL, and/n1/n2 represents the remaining part of URL.Before classifying, URL is remapped to pattern hy.hz...hy.hz/n1/n2... according to URL.For example, URL "
Www.google.com/about.html "Be remapped to " com
.google.www/about.html "By the host name field of counter-rotating URL before classifying, can classify to document according to the mutual logic proximity of document according to URL.Therefore, can gather together the document of similar type (in sets of documentation) at a certain concrete syntax; In sets of documentation, together the collection of document on each site at each Doctype; In document, together at the collection of document of the different branches of site at each site; Or the like.
In certain embodiments, use one or more clustering techniques that document is sorted.Can use the item (term), the word or expression that are included in the document, sets of documentation is made into and the trooping of various conceptual dependencies.For example, can be used for document ordering the content of taking a sample and/or about the classification information of document about the general information of document (for example, embedding the document that identified or the metadata relevant), from the document that is identified with the document that is identified.
In certain embodiments, when document is advanced to resolve, the information (in Fig. 2, not described) of relevant each the unique mark that is identified of overall situation dictionary formatter 202 storages, for example, the number of times of the appearance of the unique mark of each in the collection of document, and the language (if present) relevant with described unique mark.Can determine the language relevant according to the language relevant with the document of wherein finding described unique mark with this mark.When in the document relevant, finding special symbols, can use any suitable method to determine the language relevant with this mark with more than one language.A kind of suitable method is a statistical method, this method in parse documents set so that use when identifying unique mark.At first, each mark is given the language of first document of wherein finding this mark, then, each appearance in succession at the mark in the document that appears at a kind of language different with the current language of giving this mark, only when the number of (pseudorandom) selection is less than 1/N at random between 0 and 1, this mark is all given another kind of language again, and wherein, N is the current number of times of the appearance of described mark.In some other embodiment, can use any similar or suitable language to give mechanism, make the unique mark of language and each be associated.In certain embodiments, language is not associated with unique mark of representing punctuation mark.In yet another embodiment, in the time that the unique mark of language and each can be associated,, ignore the language association when handling N (for example 256) during the mark of frequent appearance.Therefore, ignored the language relevant effectively with the punctuate mark.
In certain embodiments, according to the frequency that unique mark occurs, the tabulation and the relevant frequency and the language message of unique mark are classified.As selection, next, can also classify, to help collection of document is saved the coding in space to clauses and subclauses.For example, in one embodiment, at first all unique marks are classified according to occurrence frequency.Then the resulting tabulation of unique mark is divided into frequency band (band).For example, top frequency band, that is, frequency band 0 can comprise maximum 255 or 256 marks (that is, those have the mark of high frequency).Second frequency band, promptly frequency band 1, can comprise maximum 2
14Individual (promptly 65536) mark does not contain the mark in the frequency band 0.The 3rd frequency band, promptly frequency band 2, can comprise in the tabulation of unique mark of being classified ensuing 2
14Individual (promptly 65536) mark.Certainly, in some other embodiment, the number of the mark in each frequency band can be different.Next, according to second set of criteria, the mark in each frequency band is classified.For example, in one embodiment, alphabet sequence, promptly by the numeral and alphabetical value, the mark in first frequency band is classified.At first, the mark in each other frequency band is classified, by letter is suitable they are classified then by language.Therefore, except that frequency band 0,, the mark of being classified in each frequency band is divided into groups, and in each group of languages, mark is classified by letter is suitable according to language.In some other embodiment, can use other sorting criterion, to the classification of the unique mark in each frequency band.
Assorting process has produced the tabulation of the classification of unique mark, and each unique mark has corresponding position in tabulation.Then, give unique overall mark identifier (below, also be referred to as " GTokenID ") to each unique mark of classifying.GTokenID is according to being used to realize that the platform of DPS (Document Processing System) 102 can comprise any suitable data type and width (for example, the signless integer of 32 bits).In certain embodiments, give unique mark of being classified GTokenID, so that can give the GTokenID of little value to high frequency mark by increasing order, and the GTokenID that gives big value to the low-frequency degree mark.More particularly, in one embodiment, each mark in the mark tabulation of being classified is given the overall mark identifier of 32 bits that equal the numerical value position in its tabulation at unique mark.So the GtokenID of (that is, hexadecimal format 00000000) is given and equaled 0 to first mark in tabulation, second mark in tabulation given and equaled 1 GtokenID, or the like.Herein, the results set that GTokenID is mapped to unique mark value calls overall dictionary 206.In certain embodiments, in fact overall dictionary 206 comprises two mapping structures, and one is mapped to mark to GTokenID, and another mark is mapped to GTokenID.During cataloged procedure, use the mapping of mark, and when the some parts of document is decoded, use the mapping of GTokenID to mark to GTokenID.
To more fully be explained as following, unique mark be sorted, be helped to reduce to store the required amount of space of include file 208 according to frequency.In those embodiment that wherein classified in the district of unique mark according to other criterion except that occurrence frequency, situation is all the more so, because the mark of giving in the frequency band that hangs down GTokenID has higher occurrence frequency than the mark in the frequency band of giving higher GTokenID.
In certain embodiments, to those " special " marks than the more frequent appearance of common mark, for example html tag and punctuate are given prefix 205 parts (for example, the GTokenID of the GtokenID that has occupied in the overall dictionary 206
0-GTokenID
N-1) GtokenID.Can be all other GTokenID displacement distribute to the last special GTokenID of prefix 205.
In above discussion, GTokenID is described as fixed-length value, for example the signless integer value of 32 bits.Yet, also can be considered as variable-length identifier to these same GTokenID, because when equaling 0 most significant byte (or bit) in order to store when GTokenID encoded, can during encoding, to block or shield.For example, in certain embodiments, having less than 2
8All GTokenID of value be encoded to the byte value, having less than 2
16All GTokenID of value be encoded to two byte values, and having less than 2
24All GTokenID of value be encoded to three byte values.Under this mode, compare with mark with low occurrence frequency, represent to have in the collection of document the mark of high occurrence frequency with the GTokenID of shorter length.
In following described embodiment, filled the LTokenID that regular length is arranged in the data bank of mark space, rather than the GTokenID of variable-length.Yet, the LTokenID in the data bank of mark space is shone upon back original token (certainly, they also be variable-length), need to store a large amount of " include file ", and the include file content comprises GTokenID.In order effectively to store include file, can be used as variable length value to the GtokenID in each include file.As selection, the GtokenID in each include file also can be used as such tabulation: at first it is carried out the Delta coding, use the encoding scheme of variable-length that resulting Delta value is encoded then.
The include file formatter
After having generated overall dictionary 206, generate include file set 208 by include file formatter 204, use for coding/decoding system 110.Each clauses and subclauses in the include file 208 comprise GTokenID and corresponding local mark identifier (LTokenID).The position of the clauses and subclauses in the include file 208 has hinted the LTokenID of each clauses and subclauses, does not therefore need the explicitly storage.Each corresponding include file 208 only is used for different, the corresponding concrete scope of the mark position of signifying word document is carried out Code And Decode, thereby allows each include file 208 to use identical LTokenID set.For example, when 204 pairs of entire document of include file formatter were resolved, preceding P unique mark at include file formatter 204 is run into generated first include file 208 (that is include file A) with P (for example 256) clauses and subclauses.In case P unique mark is the scope of effective mark position at first include file 208 for it then before having run into, generation comprises start symbol position Start_Pos
A" effective range mapping " 210 in first entry.Give unique GTokenID each LTokenID among P LTokenID in first include file 208.When giving GTokenID all LTokenID, at include file formatter 204 all following P that run into unique marks, (for example generate second include file 208, include file B), and produce second entry in effective range mapping 210, wherein effective range mapping 210 comprises that second include file 208 is the start symbol position Start_Pos of effective position range for it
BTherefore, can use include file B to having the scope of falling into Start_Pos
B～Start_Pos
C-1In the document of signifying word in the mark of a position decode, as shown in Figure 2.
For concrete example is provided, in one embodiment, the LTokenID in each include file has value 0～255, and each value is represented by the signless integer of 8 bits, and GTokenID is the signless integer of 32 bits.By from mark position 0, until having identified P (for example 256) different mark predesignating number, the scanned document set generates first include file.The GTokenID of this P different marks is collected (assemble) in tabulation.In certain embodiments, according to magnitude value the GTokenID in the tabulation is classified, wherein, minimum GTokenID is in the top of tabulation.Then, according to the position of GTokenID in the tabulation, give GTokenID in the tabulation LTokenID.For example, be one that 0 LTokenID gives the GTokenID in the tabulation, be one that 1 LTokenID gives the next GTokenID in the tabulation, or the like.Resulting mapping from LTokenID to GTokenID is called include file 208.From Start_Pos
A～Start_Pos
BThe scope of mark position be associated with this include file.By from following the position Start_Pos of the rearmost position that is associated with first include file closely
BThe set of beginning scanned document generates second include file.This one scan continues, and until the P that has identified predetermined number different mark, in this position, uses and identical process described above, generates second include file.Include file formatter 204 continues to generate at the mark position range in succession in the collection of document sequence of include file 208, and the institute's markedness in document all is mapped to include file 208.
In an optional embodiment, preceding F LTokenID in each include file 208 keeps the mark to F in the collection of document (popular) the most popular.For this F LTokenID, LTokenID always equals GTokenID.This valuation scheme helps the fast decoding to document.All when to having F-1 or when decoding, can it being mapped directly to mark according to overall dictionary, and need not at first LTokenID to be mapped to corresponding GTokenID less than the LTokenID (in the data bank of mark space) of the value of F-1.
Use identical LTokenID set (for example 0～255) at each include file 208.In order to help condensed document, compare with GTokenID (for example 4 bytes), LTokenID has width smaller (for example 1 byte).This stand out (3 bytes) shows and is used for the minimizing of the document storage of signifying word in the byte data of every mark of mark space data bank 112.One wherein each LtokenID take among the embodiment of a byte, support data structure to take up space (in this document ignoring other, below will be described them) situation under, the collection of document with 1,000,000,000 marks will take 1,000,000,000 bytes (1GB) in the mark space data bank 112.
When having finished the process of generation include file 208,, each mark in the document of signifying word is associated with include file 208 according to the position of each mark in the document of signifying word.Note,, then can be associated this mark with more than one include file 208 if the unique mark of each in the document of signifying word appears in the more than one position range.In one embodiment, general document has about 1100 marks, and general include file 208 is included about 1000 marks.
After having generated each include file 208, coding/decoding system 110 is mapped to LTokenID to the mark in the appropriate section of collection of document, and they are stored in the mark space data bank 112, to be used for subsequent retrieval.By this mapping, each mark in the document information storehouse 106 is mapped to the LTokenID of the regular length (for example byte) in the mark space data bank 112.So, during decoding/decompression, in mark space data bank 112, skip to another mark position, and need not the to slow down skip list of decode procedure or the data structure of equivalence are possible from a mark position.
In certain embodiments, before needs carry out document reconstruct, with compressed format include file 208 is encoded, and it is stored.In one embodiment, to GTokenID tabulation the carrying out Delta coding of being classified in each include file 208, press compressed format then, preferable way be by help to include file fast with the effective form of decoding and reconstruct, the tabulation of resulting Delta value is encoded.On August 13rd, 2004 proposed, sequence number is 10/917, pending trial U.S. Patent application 745, " System andMethod for Encoding and Decoding Variable-Length Data " (" being used for variable length data is carried out the system and method for Code And Decode ") by name has been described a kind of suitable data structure and coding/decoding method.
For particular document is decompressed, the include file 208 relevant with the mark position range of the document de-compressed into the mapping that LTokenID is converted to the conversion table of corresponding GTokenID or work out (build) according to the clauses and subclauses of include file 208.So, can be by reading the LTokenID that is stored at the regular length in the mark space data bank 112 of the document, and in visit the document at the include file of each mark position so that LTokenID is converted to corresponding GTokenID, finish decoding to the document of the signifying word in the mark space data bank 112.Then, use overall dictionary 206 that GTokenID is mapped to corresponding mark (for example, text and punctuate), thus reconstruct certain part of entire document or document.
Coded system
Fig. 3 A is the block scheme of the embodiment of coded system 300 that the document of mark space data bank is encoded.Coded system 300 comprises optional preprocessor 302, optional Delta scrambler 304 and variable length data scrambler 306.For example, the variable length data type can comprise various data types, but is not limited to integer, character string, floating number, fixed-point number etc.Variable-length data package is drawn together, but is not limited to text, image, figure, audio samples etc.
In certain embodiments, preprocessor 302 receives the tabulation of information, and this preprocessor sorts to information in order to carry out efficient coding.Preprocessor 302 can use one or more sorting algorithms, is data sorting monotonic sequence.For example, if integer set is classified according to value, then with regard to size adjacent integer with adjacent to each other, so, Delta scrambler 304 is generated be used to encode, be the Delta value of fractional value integer.Delta scrambler 304 receives the data of ordering, and Delta scrambler 304 calculates poor between the phase adjacency pair of data of ordering, to obtain the integer of fractional value.Variable length data scrambler 306 receives the integer of fractional values, and is these digital coding a kind of compressed format that can effectively be decoded.On August 13rd, 2004 proposed, sequence number is 10/917, in the pending trial U.S. Patent application 745, " System and Method for Encoding and Decoding Variable-Length Data " by name, an example of suitable variable length data scrambler 306 has been described.
Can use all or part of of coded system 300, the various information that DPS (Document Processing System) 102 is generated are encoded.In certain embodiments, use preprocessor 302 that the GTokenID in each include file 208 is classified, to guarantee and immediate round values on the size to be carried out the Delta coding.Then, carry out the Delta coding by 304 couples of GTokenID that sorted of Delta scrambler, so that difference or residual value to be provided.Then, using variable length data scrambler 306, is differential coding a compressed format by group (for example, the group of 4 values).In certain embodiments, by a reverse index, the tabulation of mark position is similarly encoded, to help the quick and effective decoding to the position, Fig. 4 is described more comprehensively as reference.
Help fast and the compressed format of effectively decoding although variable length data scrambler 306 provides a kind of, also can be used for DPS (Document Processing System) 102 to other known encoding scheme, with the tabulation (for example, CCITT-G4, LZW etc.) of compressed information.
Decode system
Fig. 3 B is the block scheme of the embodiment of decode system 308 that the document in the data bank of mark space is decoded.Decode system 308 comprises variable length data demoder 310 and optional Delta demoder 312.In certain embodiments, receive the data encoded group by variable length data demoder 310, variable length data demoder 310 is decoded to each group by one or more displacement/shielding tables.Delta demoder 312 receives the data of being decoded, Delta demoder 312 calculate operation and, thereby produce the data of Delta decoding, this is equivalent to original information list.On August 13rd, 2004 proposed, sequence number is 10/917, in the pending trial U.S. Patent application 745, by name " System and Method for Encoding and DecodingVariable-Length Data ", the use to displacement/shielding table has been described more fully in the process that the variable-length round values of group coding is decoded.
Attribute coding/decode system
Fig. 3 C is the block scheme of embodiment that is used for document properties is carried out the attribute coding/decode system 314 of coding/decoding.Attribute coding/decode system 314 comprises coding/decoding system 320, and coding/decoding system 320 is encoded to attribute record 318 to attribute information 322, to be stored in the attribute list 316.The attribute of document is determined on mark ground one by one, wherein adopts 0 or 1 bit value to represent to the existence of each attribute of marking or do not exist.For example, can conceptually be expressed as the attribute record in the attribute list 318 mapping of A * K bit, wherein, A is the number of coded attribute, and K is the number of its attribute by the mark of attribute record 318 expressions.If A is 8, K is 32, and each attribute record 318 can be at 8 attributes of each storage of 32 marks so.Can encode to each attribute record 318,, can during query processing, decode to selected attribute record very fast simultaneously with the shared amount of space of packed attribute table.On August 13rd, 2004 proposed, sequence number is 10/917, in the pending trial U.S. Patent application 745, " System and Method for Encoding and Decoding Variable-Length Data " by name, a kind of suitable method that is used for attribute record 318 is carried out Code And Decode has been described.As selection, also can carry out run length coding to the information in each attribute record.
Be recorded in the community set in the attribute list 316, (for example can comprise one or more font attributes, runic, underscore etc.), one or more documents location attribute (for example, exercise question, title etc.), metadata and can be used for any other characteristic or feature to being distinguished between the mark in the collection of document.In certain embodiments, encode, and when being stored in them in the data bank of mark space, the attribute of the mark in the collection of document is identified, and they are encoded, as described above at document to signifying word.Coded attribute is used for the rank of one or more correlativity scores, and Fig. 5 is more fully described as reference.
Document information storehouse encoding and decoding system--second embodiment
Fig. 8 A and 8B are the block scheme of an embodiment, wherein, by the mode slightly different with mode described above the document (" mark space data bank ") of one group of signifying word are encoded.As described above, 202 pairs of collection of document of overall dictionary formatter 106 carry out signifying word, identify all unique marks and give all unique marks overall mark identifier.The result is overall dictionary 206.Next, regional dictionary formatter 804 is handled the document set (by signifying word).Conceptually collection of document is divided into zone 820, then each zone 820 is divided into piece 822.Zone dictionary formatter 804 is at each zone establishment " dictionary ", and promptly dictionary 830, and coded system 810 generates the set of the mark 832 that is encoded and the set that is used for each regional piece displacement 834 for each zone.The mark 832 of zone dictionary 830, coding and piece displacement 834 (below, will be described respectively them in more detail) form the coded representation in each zone 820 of collection of document jointly.
In one embodiment, collection of document is divided into zone 820, and each zone 820 (perhaps except final area) has predetermined fixed size, such as 8192 marks (or any other suitable size).Each piece 822 in zone 820 also has a predefined fixed size, such as 64 marks (or any other suitable size).
In one embodiment, at " dictionary " 830 of respective regions 820 ordered list for the longest mark sequence with high-repetition-rate, or any similar structure.Can determine their multiplicity in described zone by the table of establishment candidate mark string in described zone, select optimal candidate then, until reaching the largest lexicon size, establishment dictionary 830.In the exemplary embodiment, the largest lexicon size is 64 marks, yet, in other embodiments, also can use any other suitable size restriction.To be described as following, dictionary 830 usefulness are made context that each piece 822 of respective regions 820 is encoded, thus expression that can the high compression zone.In certain embodiments, can encode to one or more regional dictionaries 830 by a kind of compressed format, for example, use in this document propose in 13 days Augusts in 2004 of previous institute reference, sequence number is the coding method described in the U.S. Patent application 10/917,745, " System andMethod for Encoding and Decoding Variable-Length Data " by name.
With reference to Fig. 9 A and 9B, in one embodiment, coded system 810 is encoded to each piece 822 of mark as follows.Dictionary 830 at respective regions is treated as a tight mark set before described mark.To last one, sequentially handle described mark from first,, and, comprise regional dictionary 830, be complementary as much as possible the longest matching score sequence in succession mark and the previous mark sequence each mark.If find the first presequence of coupling, then generate by " copy code ".Otherwise, generate " character code ", with the expression mark.Then institute's markedness that current code covered is treated as previous mark, to be used for the processing in succession of the next mark of piece (if present).As shown in Fig. 9 B, on behalf of " code " of the mark set in the piece, each can comprise a type field 902.If code is " character code ", then the second portion 904 of code is represented overall mark identifier.In certain embodiments, the number of the required bit of overall mark identifier is represented in these type field 902 expressions.For example, in one embodiment, type code 902 can be represented 7 kinds of different character codes at most, and each is planted all has corresponding overall mark identifier length.In some other embodiment, the number of dissimilar codes can be greater or less than 8 (for example, an expression copies code, and remaining represents character code).If character code is " a copy code ", then the second portion 906 of code can comprise pointer 908 and length 910, wherein, pointer 908 is pointed out which local beginning of before preceding text, length 910 is pointed out the length (that is the number of the mark that will be copied) of the sequence of mating during decoding.So, such as, if coded system 810 has been found matching sequence of the marks that the position of 4 31 marks before the current location begins, then at the code of this sequence will for:
<type＝copy，ptr＝31，length＝4>
The maximum of sequence that the length (being measured by bit) of copy code will depend on maximum mark length, the coupling of the maximum mark length of regional dictionary 830 and piece allows the number of length and different code.In an example, type field 902 is that 3 bits (allowing 8 type codes), pointer field 908 are 7 bits, and length field 910 is 2 bits, altogether 12 bits.In some other embodiment, also can use other bit length at each field of copy code.Point out the length (being measured) of each character code by bit by the type of character code.
Refer back to Fig. 8 B, when the piece in 810 pairs of zones of coded system was encoded, coded system 810 generated the set of pointer to the piece displacement 834 at the position of the mark of the coding of each piece in this zone.In one embodiment, the piece displacement of first piece in this zone is the pointer that enters mark space data bank, and is the relative displacement of first starting position in relatively should the zone at each other piece displacement in this zone.In one embodiment, be stored in regional dictionary 830 and piece displacement 834 according to the starting position in the zone of dividing by the fixed area size 820 in addition in the data structure of the table of index or equivalence.From another perspective, given area code to each zone 820, this area code comprises the starting position that it is divided by the fixed area size, and by area code to one or more data structures of wherein having stored regional dictionary 830 and piece displacement 834 index in addition.
By location to the regional dictionary 830 of respective regions, use positions at the piece of 834 pairs of codings of piece displacement in zone 820, to decoding,, realize decoding then to this regional piece 822 to produce the sequence of overall mark identifier at described code collection.Next, can use overall dictionary 206, the sequence of resulting overall mark identifier or its any subclass are converted to a corresponding symbol or a set.
Query processing system
Fig. 4 is the block scheme of embodiment of the first order that is used for the query processing system 104 of mark space data bank.Query processing system 104 comprises overall dictionary 402, mark space reverse index 408, first order look-up table 406 and second level look-up table 410.Overall situation dictionary 402 receives query term or string, and overall dictionary 402 uses table or the mapping of working out according to the clauses and subclauses of overall dictionary 402, and query term is converted to GTokenID.Reverse index 408 receives GTokenID, and reverse index 408 comprises mapping 404, and mapping 404 is mapped to the index record 412 that is stored in the reverse index 408 to GTokenID.Use mapping 404 each index record 412 that is identified to comprise the tabulation of mark position, this tabulation is directly corresponding to the mark position in the mark space data bank 112.In certain embodiments, after generating overall dictionary, generate reverse index 408, and can travel through document with being used to generate include file same all over during, generate reverse index 408.
In certain embodiments, reverse index 408 provides list of locations, and this list of locations can be used as the index that enters first order look-up table 406.When inquiry comprised a plurality of, reverse index 408 produced a plurality of list of locations.For fear of must be at searching for whole DocID map Figure 41 0 corresponding to clauses and subclauses of each position in one or more list of locations, first order look-up table 406 has the clauses and subclauses at each block of locations in the data bank of mark space.For example, each piece can have the size of 32768 positions, and each clauses and subclauses can have the pointer of sensing at the first entry in the DocID look-up table 410 of relevant position piece.So first order look-up table 406 can convert one or more list of locations to the starting point position of the document identifier (DocID clauses and subclauses) 412 in the second level look-up table 410.As selection, also can be referred to as the DocID look-up table to table 406 and 410.Each clauses and subclauses 412 in the second level look-up table 410 comprise the beginning data bank position of DocID (document identifier) and respective document.In second level look-up table 410, last mark in any document all is in tight position before the starting position that next heading 412 is identified.The starting point position Start_Pos that second level look-up table 410 receives at DocID
A-Z, second level look-up table 410 converts the starting point position at a DocID of each query term tabulation.
In certain embodiments, first order query processor 416 comprises the logic 416 of the set that is used to bear results.Logic 416 merges the tabulation of DocID according to inquiry or the specified Boolean logic of query tree, to form the results set of DocID.Logic 416 can also be filtered the tabulation of mark position selectively, to eliminate the mark position be not arranged in corresponding to the document of the DocID of results set.And, can also use DocID and mark position in each document that is identified of DocID, the function of will keeping the score is applied to results set, so that score (being referred to as the inquiry score sometimes) is associated with each DocID in the results set.
Multistage query processing
Fig. 5 is the block scheme of embodiment that utilizes the multistage query processing system 500 of mark space data bank 524.In certain embodiments, query processing system 500 comprises that 4 query processings and correlativity score generate level, promptly comprise first order query processor 510, second level query processor 514, third level query processor 518 and the 4th query level processor 520.Note, in system 500, can use query processor level more or less, depend on concrete application.According to the application scenario, every grade is calculated one or more correlativity scores set that can return to the user and the correlativity score that is generated in they and the first prime is made up.
Query processing--level 1
At Fig. 4 first order query processor 510 has been described prevailingly.504 pairs of query strings of query parser 502 carry out signifying word, and it is resolved to query term (that is, each the different item in the inquiry being treated as mark).The query term of signifying word is used conversion tables or mapping to convert corresponding GTokenID to by overall dictionary mapping 508, as previous with reference to Fig. 2 and 4 described.Because the user can use specific operational character (operator) in their query string, comprise boolean, adjacency or proximity operational character, so system 500 can become query parse query term and operational character.Operational character can be by specialization form (for example, AND, OR), with the form appearance of the punctuate (for example, question mark) that keeps or the item (term) of reservation.Under the situation of natural language processing (NLP) system, no matter can how to express operational character, can both be in employed language identifying operation symbol (for example, preposition, conjunction, order relation etc.) impliedly.Also can comprise other query processing in the first order query processor 510, for example deletion finishes word (for example " a ", " the " etc.) and Xiang Gan (that is, removing the word prefix).
Next, query expansion device 506 is handled the tabulation of GTokenID, and query expansion device 506 generated queries tree or other inquiry are represented, and considered employed any operational character (for example Boolean expression) in the query string.As selection, query expansion device 506 can also be by the variety of way expanding query.For example, can convert query term to subtree, this subtree comprises described and one or more synonym lexical item, perhaps relevant other with query term, and the item in the subtree is relative to each other by OR operational character or father node.
To be described in more detail as following, in certain embodiments, according to the sequence of the query processing level shown in Fig. 5, one or many is located in the Richard and askes.In each time (removing last time), generate additional queries expansion item (following will an explanation) to this, then, these additive terms are added to query tree.Also can be query tree as the tree of keeping the score, the tree of keeping the score have with query tree in a relevant weight.The query tree of being expanded can also comprise and not require in the document that appears at corresponding to inquiry, but with they be used for to corresponding to the item that replenishes of keeping the score of the correlativity of the document of inquiry and subtree.If there is more than one query term, then during first pass, can calculate weight, to improve Search Results at query term.
In certain embodiments, the first pass of Ergodic Theory 500 is handled the random sample from the document of document sets.Can concentrate the number of the document of matching inquiry to estimate entire document according to selecting the size of random sample by one or more small random samples of system's 500 uses.In some other embodiment, in the first pass of Ergodic Theory 500, use first document sets (for example, the set of inquiry session phase), and Ergodic Theory 500 second or in succession time, use second, different document sets.Use previous inquiry session phase set, can make system 500 can determine common other relevant item that appears at jointly in the similar inquiry.Query expansion device 506 can use these continuous item expansion inquiries of each time in succession.
First order query processor 510 uses mark space reverse index 512 of query term search, and sign and inquiry document matching.First order query processor 510 visit mark space reverse indexs 512, tabulation with the mark position (being also referred to as data bank position, mark space) that produces the query tree discipline, and visit DocID map Figure 51 6 is to produce at the set corresponding to the DocID of the document of mark position.In addition, first order processor 510 is also carried out by inquiry or the pointed Boolean logic of query tree, to generate the set corresponding to the DocID of inquiry.In certain embodiments, first order query processor 510 calculates first S set of the correlativity score between inquiry and each document also according to one or more algorithms of keeping the score
1In a word, the algorithm of keeping the score provides correlativity according to one or more inquiry characteristics to the document of each coupling, described inquiry characteristic comprises, but be not limited to the existence of one or more query terms or do not exist, proximity that frequency, Boolean logic realizations, query term weight, the popularity (for example, is independent of the importance of document or the score of popularity or interconnectivity) of document, query term are mutual, context, attribute etc.In one embodiment, correlativity score S
1First set based on the existence that comprises query term, frequency and the epidemic one group of factor of document.
In certain embodiments, first S set of correlativity score
1Can be used for selecting to present to as ordered list user's document, then, the user can click and follow the internal pointer of pointing to selected document simply.In some other embodiment, first S set of correlativity score
1And DocID and corresponding position be provided in second level query processor 514, to be further processed.
Query processing--level 2
Second level query processor 514 from first order query processor 510 receive the set of DocID, at the tabulation of the data bank position, mark space of respective document and first S set of correlativity score
1Second level query processor 514 uses described list of locations, according to the proximity or the relative position of the query term of being found in the document, generates second S set of correlativity score
2When in a document, the item in the inquiry is when closely occurring mutually, compares when occurring by big distance with every, and described document more may be relevant with described inquiry.Therefore, compare by the document that a certain distance occurs with its discipline, if query term occurs adjacent to each other, promptly the phase near-earth occurs, then second S set of correlativity score
2Be used to arrange the grade of document higher.In certain embodiments, second S set of correlativity score
2Can be used for selecting being used to present to as ordered list the X document at user's top, then, the user can click and follow the internal pointer of pointing to selected document simply.In certain embodiments, partly according to first S set of correlativity score
1Derive second S set of correlativity score
2(for example,, adjust S by according to second level query processor 514 employed additional score factors
1Score), with generate one that submit to the user, with by the further ordered list of the documents of processing of third level query processor 518.
Query processing--level 3
In certain embodiments, second level query processor 514 is coupled to third level query processor 518, to handle the item attribute (for example font attribute, exercise question, title, metadata etc.) of in an attribute list 522, having been encoded, as above described with reference to Fig. 3 C.Third level query processor 518 from second level query processor 514 receive the set of DocID, at the tabulation of the data bank position, mark space of respective document, and second S set of correlativity score
2As selection, third level query processor also can receive first S set of correlativity score
1And second S set of correlativity score
2
Some studies show that its importance to document is represented at the position of the item in the document.For example, aspect weight, appear at the item in the exercise question with a certain inquiry document matching, may overweight the query term in the body that appears at the document.Similar, appear in first section of chapter title or the document query term with appear at document in not too critical positions in compare, probably more can the expository writing shelves and the correlativity of described inquiry.Can be used to indicate other attribute of correlativity to comprise bold text, underline text and font size.Therefore, use with described query term document matching in the attribute of mark, determine the 3rd S set of correlativity score
3With reference to Fig. 3 C, for the attribute of the query term in the access document (that is, being complementary with query term or the attribute of the mark that is associated), the index operation that enters attribute list 316 (522 among Fig. 5) is carried out in the mark position of using the query term in the document.More particularly, if the number of the mark of its attribute being encoded by each attribute record 318 is K, then the index that is used to enter attribute list 316 divided by the mark position of K.In certain embodiments, the one or more records 318 of the attribute that is identified with coding, compressed format stored, therefore,, must decode to it in order to determine the attribute relevant with each query term.
In certain embodiments, the 3rd S set of correlativity score
3Can be used for selecting as Y the document of ordered list to the top that the user submits to, then, the user can click and follow the internal pointer of pointing to selected document simply.In certain embodiments, partly according to first and second S set of one or more correlativity scores
1And S
2Derive the 3rd S set of correlativity score
3, with generation present to the user, and the ordered list of the documents further handled by the 4th query level processor 520.In certain embodiments, by the additional score factor that is produced according to third level query processor 518, adjust S
2Score produces S
3Score.
Query processing--level 4
The 4th query level processor 520 is from the set of third level query processor 518 reception DocID, corresponding to the tabulation of the position the document of described DocID and the 3rd S set of correlativity score
3The 4th query level processor 520 can also receive first and second S set of correlativity score selectively
1And S
2The 4th query level processor 520 is coupled to decode system 527, and then decode system 527 is coupled to one or more include file mappings 523, mark space data bank 524 and one or more overall dictionary mapping 508.More than, at Fig. 1 and Fig. 2, include file mapping 523, mark space data bank 524 and overall dictionary mapping 508 have been described.
Based on context the 4th query level processor 520 generates the 4th S set of correlativity score
4, and can generate " fragment " for one or more documents listed in the results set.Fragment generally includes and appears at the key word text on every side that will be searched for from the fraction text of document.In one embodiment, in order to generate fragment at document listed in the results set, query processor occurs decoding with the mark that ascertains the number in advance afterwards before to being arranged in each query term that appears at document for the first time, thereby reconstruct one or more textual portions of document, select to be included in the subclass of the textual portions in the fragment then.Use the list of locations in the results set, decode system 527 can be selected the some parts of the document required include file 523 of decoding, and wherein the described some parts of document is before query term occurs in the document and some parts afterwards.Selected include file 523 and overall dictionary 508 are used for the LTokenID of mark space data bank is converted to GTokenID, are used for then GTokenID is converted to mark, as described in Figure 2 above.
In certain embodiments, the 4th S set of correlativity score
4Can be used for selecting as Z the document of ordered list to the top that the user submits to, then, the user can click and follow the internal pointer of pointing to selected document simply.In certain embodiments, partly according to first, second and the 3rd S set of one or more correlativity scores
1, S
2And S
3Derive the 4th S set of correlativity score
4, with generate submit to the user, and the ordered list of the document further handled by relevance feedback module 517.In an optional embodiment, last level query processor for those formerly the document of the correlativity score aspect that produced of query processor level with top score generate fragment, but do not generate a new S set of correlativity score
4
In certain embodiments, the final set of correlativity score is provided in a relevance feedback module 517, the document in the results set that the last query level of relevance feedback module 517 bases is produced generates one or more new query expansion items.For example, relevance feedback module 517 can realize one or more known relevance feedback algorithms, comprise, but be not limited to based on the spurious correlation feedback algorithm (based on the spurious correlation feedback algorithm of a certain complete Web page or leaf) of shelves scheme in full, DOM Document Object Model (DOM) segmentation, based on the demonstration (VIPS) of page or leaf segmentation, use the conceptual dependency feedback of notion dot matrix etc.The relevance feedback algorithm can be analyzed the document of examining (vet) according to previous query processing level, and can be according to analysis result generated query expansion item.New query expansion item is provided in query expansion device 506, and query expansion device 506 generates will be by one or more query processor 510,514,518 and 520 handled new query expressions.So multistage query processing system 500 can be carried out more than twice or twice at an inquiry, and use information, generate the inquiry that has improved, thereby will finally cause the user can receive the document of more heterogeneous pass from each time.
In one embodiment, when the first pass of carrying out inquiry was handled, last query level processor 520 produced some long fragments, before for example comprising that query term is each in the document and occurring and (for example 10～40) mark of N afterwards.If fragment surpasses a predefined length, then can block this fragment.Inquiry and the fragment that last query level 520 is produced are provided in relevance feedback module 517 with the correlativity score, with the set of generated query expansion item, and as selection, but the also set of generated query item weight.During second around reason of the inquiry of expansion, last query level 520 produces the fragment of the suitable weak point of some length, and be used for having the highest, i.e. the content displayed together of lists of documents in the results set of best score.
In one embodiment, query processing system comprises L parallel inquiry treatment subsystem, and each inquiry treatment subsystem comprises at the reverse index 512 of the respective subset of one group of document and mark space data bank 524.For example, query processing system can comprise more than 1000 parallel query processing subsystem.All inquiry treatment subsystem can be shared relevance feedback module 517 (Fig. 5).During the first pass of traversal queries disposal system, handle inquiry by the sub-fraction of parallel query processing subsystem, and during second time, handle inquiry by whole query processing system.For example; can be divided into S subclass (for example 32 subclass) to query processing system; and the result according to the version of the normalization that hash function is applied to inquiry gives one of these subclass each inquiry, then mod is applied to the result that hash function produces.Can call each subclass of query processing system " subregion " of query processing system, and can call each inquiry treatment subsystem " child partition ".
The fundamental purpose that the first pass of inquiry is handled is that the set of generation query expansion item, and query term weight are to improve the quality of the Query Result that is produced by second around reason of inquiring about.As long as document suitably, distributed between all inquiry treatment subsystem randomly, then inquiring about only needs the minority subsystem to be handled, and just can produce a set of query expansion item in query processing system.Query expansion device 506 uses the query expansion item to produce the query tree or the query expression of expansion, by query processing level (in one second around reason of inquiry) they is handled then, as described above.For example, can expand to " New York (photo or image, perhaps image or photo) " to inquiry " photo in New York ".Can results set and the fragment that last query level during second time is produced be formatd, to be shown (perhaps more generally say, submitted to) by receiving computing machine or equipment of inquiring about from it.
In one embodiment, handling with the first pass of inquiring about all over execution on the different data bank in succession.For example, primary data data bank at first pass, can be a data data bank of the inquiry before handled, and the data bank that is used in succession time can be used for the collection of document of query mappings to a reverse index of the document of this data bank for having.
The document process server
Fig. 6 is the block scheme of the embodiment of mark space data bank server 600.Server 600 can or comprise the part of the distributed processing system(DPS) of a plurality of computer systems for computer system independently.Usually, server 600 comprises one or more processing units (CPU) 604, one or more network or other communication interface 608, storer 602 and one or more communication bus 606 of these parts that are used to interconnect.Server 600 can comprise user interface selectively, for example, and display and keyboard.Storer 602 can comprise high-speed random access memory, can also comprise nonvolatile memory, for example one or more disk storage devices.Storer 602 can comprise the massage storage away from one or more central processing units 604.
Storer 602 storage operating systems 610 (for example, Linux or Unix), network communication module 612, dictionary maker 614 (for example the dictionary maker 108), coded system 616 (for example, coded system 300), one or more overall dictionary 618 (for example, overall situation dictionary 206), one or more include file 620 (for example, include file 208), mark space data bank 622 (for example, mark space data bank 112), attribute record 624 (for example, attribute record table 316) and effective range mapping 626 (for example, the effective range mapping 210).The operation of each parts in these parts has below been described at Fig. 1～5.
The query processing server
Fig. 7 is the block scheme of the embodiment of query processing server 700.Server 700 can or be a part that comprises the distributed processing system(DPS) of a plurality of computer systems for computer system independently.Usually, server 700 comprise one or more processing units (CPU) 704, one or more network or other communication interface 708, storer 702, one or more communication bus 706 of these parts that are used to interconnect.Server 700 can comprise user interface selectively, for example, and display and keyboard.Storer 702 can comprise high-speed random access memory, can also comprise nonvolatile memory, for example one or more disk storage devices.Storer 702 can comprise the massage storage away from one or more central processing units 704.
Storer 702 storage operating systems 710 (for example, Linux or Unix), network communication module 712, mark space reverse index 714 (for example, mark space reverse index 408), decode system 716 (for example, decode system 308), one or more dictionary conversion tables or (for example shine upon 718, derived from overall dictionary 206 and include file include file 208), effective range mapping 720 (for example, effective range mapping 210), DocID mapping 722 (for example, DocID mapping 410), query parser 724 (for example, query parser 504), query tree 726, one or more query processors 728 (for example, query processor 510,514,518 and 520), attribute record 730 (for example, attribute record table 316), and mark space data bank 732 (for example, mark space data bank 112).The operation of each parts in these parts has below been described at Fig. 1～5.
With reference to specific embodiment, carry out above description explanatoryly.Yet these illustrative discussion are not intended to describe in exhaustive manner the present invention, are not intended to the present invention is limited to disclosed precise forms yet.In view of above description, be possible with changing to many modifications of the present invention.The selection of these embodiment and description, be intended to explain fully principle of the present invention and actual application thereof, thereby can make other those of skill in the art in this technical field carry out many-sided modification with different embodiment to the present invention, the concrete application of being considered to adapt to, thus can make full use of the present invention and different embodiment.
Claims (9)
1. one kind is used for handling the method for inquiring about at multistage query processing system, comprising:
Respond one or more query terms, gather from indexed search first document identifier;
At the condensed document set of at least one subclass of gathering corresponding to first document identifier, generate first set of correlativity score;
At least a portion that the described condensed document that decompresses is gathered, to recover the set of first mark, wherein, first mark set that is recovered is associated corresponding to the position in the condensed document set of first document identifier set with described; And
First set according to the mark set that is recovered generates the additional queries item;
Use described additional queries item, formulate inquiry newly; And
Handle described new inquiry, with from the set of described indexed search second document identifier, and generate second set of correlativity score based on described additional queries item to small part.
2. method according to claim 1 also comprises:
At least a portion that the described condensed document that decompresses is gathered, to recover the set of second mark, wherein, second mark set that is recovered is associated corresponding to the position in the condensed document set of second document identifier set with described; And
Use second mark set that is recovered, one or more parts of the described condensed document set of reconstruct.
3. method according to claim 1 also comprises: the part of institute's reconstruct is presented to the user with the ordered list of the document of selecting based on second set of described correlativity score at least in part from the set of described condensed document.
4. method according to claim 1, wherein, second set of described correlativity score is based on the one or more positions corresponding to the query term in the described condensed document set of second document identifier set.
5. method according to claim 1, wherein, second set of described correlativity score is based on the distance between the query term in gathering corresponding to the described condensed document of second document identifier set.
6. method according to claim 3, wherein, second set of described correlativity score is based on the context that wherein uses query term in the described condensed document set corresponding to the set of second document identifier.
7. in multistage query processing system, handle the method for inquiring about for one kind, comprising:
Respond one or more query terms, the set of the retrieval first information;
According to first information set, generate at least one additional queries item;
Use described at least one additional queries item, formulate inquiry newly, this new inquiry has a plurality of query terms; And
Handle described new inquiry, gather from the indexed search document identifier;
Condensed document set at least one subclass of gathering corresponding to described document identifier generates the set of correlativity score;
At least a portion that the described condensed document that decompresses is gathered, to recover the mark set, wherein, the set of the mark that recovered is associated with the position of one or more query terms of described a plurality of query terms in gathering corresponding to the described condensed document of described document identifier set; And
At least a portion according to described document identifier set generates lists of documents, and this tabulation comprises the information corresponding at least a portion of the mark set that is recovered.
8. the computer-readable medium of a storage instruction on it when the processor in the multistage query processing system is carried out described instruction, causes processor to carry out following operation:
Respond one or more query terms, gather from indexed search first document identifier;
At the condensed document set of at least one subclass of gathering corresponding to first document identifier, generate first set of correlativity score;
At least a portion that the described condensed document that decompresses is gathered, to recover the set of first mark, wherein, first mark that is recovered is gathered and is associated corresponding to the position in the described condensed document set of first document identifier set; And
First set according to the mark set that is recovered generates the additional queries item;
Use described additional queries item, formulate inquiry newly; And
Handle described new inquiry, with from the set of described indexed search second document identifier, and generate second set of correlativity score based on described additional queries item to small part.
9. multistage query processing system comprises:
Be used to respond one or more query terms, from the parts of indexed search first document identifier set;
Be used for condensed document set, generate the parts of first set of correlativity score at least one subclass of gathering corresponding to first document identifier;
Be used to decompress at least a portion of described condensed document set, to recover the parts of first mark set, wherein, first mark set that is recovered is associated with position in gathering corresponding to the described condensed document of first document identifier set; And
Be used for first set, generate the parts of additional queries item according to the mark set that is recovered;
Be used to use described additional queries item, formulate the parts of new inquiry; And
Be used to handle described new inquiry, from described indexed search second document identifier set, and to the parts of small part based on second set of described additional queries item generation correlativity score.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/917,746 | 2004-08-13 | ||
US10/917,746 US8407239B2 (en) | 2004-08-13 | 2004-08-13 | Multi-stage query processing system and method for use with tokenspace repository |
Related Child Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201110121210.2A Division CN102142038B (en) | 2004-08-13 | 2005-08-08 | Multi-stage query processing system and method for use with tokenspace repository |
CN201010144526A Division CN101799834A (en) | 2004-08-13 | 2005-08-08 | Multi-stage query processing system and method for use with tokenspace repository |
Publications (1)
Publication Number | Publication Date |
---|---|
CN101036143A true CN101036143A (en) | 2007-09-12 |
Family
ID=35462201
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201010144526A Pending CN101799834A (en) | 2004-08-13 | 2005-08-08 | Multi-stage query processing system and method for use with tokenspace repository |
CN201110121210.2A Active CN102142038B (en) | 2004-08-13 | 2005-08-08 | Multi-stage query processing system and method for use with tokenspace repository |
CNA2005800341289A Pending CN101036143A (en) | 2004-08-13 | 2005-08-08 | Multi-stage query processing system and method for use with tokenspace repository |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201010144526A Pending CN101799834A (en) | 2004-08-13 | 2005-08-08 | Multi-stage query processing system and method for use with tokenspace repository |
CN201110121210.2A Active CN102142038B (en) | 2004-08-13 | 2005-08-08 | Multi-stage query processing system and method for use with tokenspace repository |
Country Status (6)
Country | Link |
---|---|
US (2) | US8407239B2 (en) |
EP (1) | EP1779273B1 (en) |
JP (1) | JP4805267B2 (en) |
KR (1) | KR101157693B1 (en) |
CN (3) | CN101799834A (en) |
WO (1) | WO2006020595A1 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2014169874A1 (en) * | 2013-08-12 | 2014-10-23 | 中兴通讯股份有限公司 | Table entry management device, table entry management method, and computer storage medium |
CN111368057A (en) * | 2020-03-05 | 2020-07-03 | 腾讯科技（深圳）有限公司 | Phrase query method and device, computer equipment and storage medium |
Families Citing this family (158)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7580921B2 (en) | 2004-07-26 | 2009-08-25 | Google Inc. | Phrase identification in an information retrieval system |
US7567959B2 (en) | 2004-07-26 | 2009-07-28 | Google Inc. | Multiple index based information retrieval system |
US7702618B1 (en) | 2004-07-26 | 2010-04-20 | Google Inc. | Information retrieval system for archiving multiple document versions |
US7711679B2 (en) | 2004-07-26 | 2010-05-04 | Google Inc. | Phrase-based detection of duplicate documents in an information retrieval system |
US7584175B2 (en) * | 2004-07-26 | 2009-09-01 | Google Inc. | Phrase-based generation of document descriptions |
US8051096B1 (en) | 2004-09-30 | 2011-11-01 | Google Inc. | Methods and systems for augmenting a token lexicon |
WO2006108162A2 (en) * | 2005-04-06 | 2006-10-12 | Getty Images, Inc. | Digital asset management system, including customizable metadata model for asset cataloging and permissioning of digital assets, such as for use with digital images and songs |
US8200688B2 (en) | 2006-03-07 | 2012-06-12 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices |
US20080235209A1 (en) * | 2007-03-20 | 2008-09-25 | Samsung Electronics Co., Ltd. | Method and apparatus for search result snippet analysis for query expansion and result filtering |
US8510453B2 (en) * | 2007-03-21 | 2013-08-13 | Samsung Electronics Co., Ltd. | Framework for correlating content on a local network with information on an external network |
US8863221B2 (en) * | 2006-03-07 | 2014-10-14 | Samsung Electronics Co., Ltd. | Method and system for integrating content and services among multiple networks |
US8209724B2 (en) * | 2007-04-25 | 2012-06-26 | Samsung Electronics Co., Ltd. | Method and system for providing access to information of potential interest to a user |
US8115869B2 (en) | 2007-02-28 | 2012-02-14 | Samsung Electronics Co., Ltd. | Method and system for extracting relevant information from content metadata |
US8843467B2 (en) * | 2007-05-15 | 2014-09-23 | Samsung Electronics Co., Ltd. | Method and system for providing relevant information to a user of a device in a local network |
US7805424B2 (en) * | 2006-04-12 | 2010-09-28 | Microsoft Corporation | Querying nested documents embedded in compound XML documents |
US20070271228A1 (en) * | 2006-05-17 | 2007-11-22 | Laurent Querel | Documentary search procedure in a distributed system |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
US8661029B1 (en) | 2006-11-02 | 2014-02-25 | Google Inc. | Modifying search result ranking based on implicit user feedback |
US8037051B2 (en) * | 2006-11-08 | 2011-10-11 | Intertrust Technologies Corporation | Matching and recommending relevant videos and media to individual search engine results |
US7908281B2 (en) * | 2006-11-22 | 2011-03-15 | Architecture Technology Corporation | Dynamic assembly of information pedigrees |
US8935269B2 (en) * | 2006-12-04 | 2015-01-13 | Samsung Electronics Co., Ltd. | Method and apparatus for contextual search and query refinement on consumer electronics devices |
US20090055393A1 (en) * | 2007-01-29 | 2009-02-26 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices based on metadata information |
US8086594B1 (en) | 2007-03-30 | 2011-12-27 | Google Inc. | Bifurcated document relevance scoring |
US7702614B1 (en) | 2007-03-30 | 2010-04-20 | Google Inc. | Index updating using segment swapping |
US8166045B1 (en) | 2007-03-30 | 2012-04-24 | Google Inc. | Phrase extraction using subphrase scoring |
US7693813B1 (en) | 2007-03-30 | 2010-04-06 | Google Inc. | Index server architecture using tiered and sharded phrase posting lists |
US8166021B1 (en) | 2007-03-30 | 2012-04-24 | Google Inc. | Query phrasification |
US7925655B1 (en) | 2007-03-30 | 2011-04-12 | Google Inc. | Query scheduling using hierarchical tiers of index servers |
US8977255B2 (en) | 2007-04-03 | 2015-03-10 | Apple Inc. | Method and system for operating a multi-function portable electronic device using voice-activation |
WO2008124536A1 (en) * | 2007-04-04 | 2008-10-16 | Seeqpod, Inc. | Discovering and scoring relationships extracted from human generated lists |
US9286385B2 (en) | 2007-04-25 | 2016-03-15 | Samsung Electronics Co., Ltd. | Method and system for providing access to information of potential interest to a user |
US9092510B1 (en) | 2007-04-30 | 2015-07-28 | Google Inc. | Modifying search result ranking based on a temporal element of user feedback |
US8768932B1 (en) * | 2007-05-14 | 2014-07-01 | Google Inc. | Method and apparatus for ranking search results |
US8117185B2 (en) * | 2007-06-26 | 2012-02-14 | Intertrust Technologies Corporation | Media discovery and playlist generation |
US8117223B2 (en) | 2007-09-07 | 2012-02-14 | Google Inc. | Integrating external related phrase information into a phrase-based indexing information retrieval system |
US8176068B2 (en) | 2007-10-31 | 2012-05-08 | Samsung Electronics Co., Ltd. | Method and system for suggesting search queries on electronic devices |
US8775441B2 (en) * | 2008-01-16 | 2014-07-08 | Ab Initio Technology Llc | Managing an archive for approximate string matching |
US8126929B2 (en) * | 2008-03-27 | 2012-02-28 | International Business Machines Corporation | Method and apparatus for encoding list of variable length structures to support bi-directional scans |
US9253154B2 (en) | 2008-08-12 | 2016-02-02 | Mcafee, Inc. | Configuration management for a capture/registration system |
US20100042610A1 (en) * | 2008-08-15 | 2010-02-18 | Microsoft Corporation | Rank documents based on popularity of key metadata |
US8938465B2 (en) * | 2008-09-10 | 2015-01-20 | Samsung Electronics Co., Ltd. | Method and system for utilizing packaged content sources to identify and provide information based on contextual information |
US8676904B2 (en) | 2008-10-02 | 2014-03-18 | Apple Inc. | Electronic devices with voice command and contextual data processing capabilities |
US8484215B2 (en) | 2008-10-23 | 2013-07-09 | Ab Initio Technology Llc | Fuzzy data operations |
US8473442B1 (en) | 2009-02-25 | 2013-06-25 | Mcafee, Inc. | System and method for intelligent state management |
US9009146B1 (en) | 2009-04-08 | 2015-04-14 | Google Inc. | Ranking search results based on similar queries |
US10706373B2 (en) | 2011-06-03 | 2020-07-07 | Apple Inc. | Performing actions associated with task items that represent tasks to perform |
US8447760B1 (en) | 2009-07-20 | 2013-05-21 | Google Inc. | Generating a related set of documents for an initial set of documents |
US20110022600A1 (en) * | 2009-07-22 | 2011-01-27 | Ecole Polytechnique Federale De Lausanne Epfl | Method of data retrieval, and search engine using such a method |
US8498974B1 (en) | 2009-08-31 | 2013-07-30 | Google Inc. | Refining search results |
US8972391B1 (en) | 2009-10-02 | 2015-03-03 | Google Inc. | Recent interest based relevance scoring |
US20130166303A1 (en) * | 2009-11-13 | 2013-06-27 | Adobe Systems Incorporated | Accessing media data using metadata repository |
US8739262B2 (en) * | 2009-12-18 | 2014-05-27 | Sabre Glbl Inc. | Tokenized data security |
US20110184946A1 (en) * | 2010-01-28 | 2011-07-28 | International Business Machines Corporation | Applying synonyms to unify text search with faceted browsing classification |
US10956475B2 (en) * | 2010-04-06 | 2021-03-23 | Imagescan, Inc. | Visual presentation of search results |
WO2011137386A1 (en) | 2010-04-30 | 2011-11-03 | Orbis Technologies, Inc. | Systems and methods for semantic search, content correlation and visualization |
US9623119B1 (en) * | 2010-06-29 | 2017-04-18 | Google Inc. | Accentuating search results |
US8731939B1 (en) | 2010-08-06 | 2014-05-20 | Google Inc. | Routing queries based on carrier phrase registration |
US8806615B2 (en) * | 2010-11-04 | 2014-08-12 | Mcafee, Inc. | System and method for protecting specified data combinations |
US10515147B2 (en) * | 2010-12-22 | 2019-12-24 | Apple Inc. | Using statistical language models for contextual lookup |
US8798366B1 (en) | 2010-12-28 | 2014-08-05 | Amazon Technologies, Inc. | Electronic book pagination |
US9069767B1 (en) | 2010-12-28 | 2015-06-30 | Amazon Technologies, Inc. | Aligning content items to identify differences |
US9846688B1 (en) | 2010-12-28 | 2017-12-19 | Amazon Technologies, Inc. | Book version mapping |
US9002867B1 (en) | 2010-12-30 | 2015-04-07 | Google Inc. | Modifying ranking data based on document changes |
BR112013016608A2 (en) * | 2011-01-04 | 2016-09-27 | Thomson Licensing | automatic translation of universal plug search criteria and reproduction |
US9881009B1 (en) | 2011-03-15 | 2018-01-30 | Amazon Technologies, Inc. | Identifying book title sets |
US8510860B2 (en) | 2011-03-15 | 2013-08-13 | Architecture Technology Corporation | Local storage of information pedigrees |
US9824138B2 (en) * | 2011-03-25 | 2017-11-21 | Orbis Technologies, Inc. | Systems and methods for three-term semantic search |
DE102011101146A1 (en) * | 2011-05-11 | 2012-11-15 | Abb Technology Ag | Multi-level method and device for interactive retrieval of device data of an automation system |
US8812496B2 (en) * | 2011-10-24 | 2014-08-19 | Xerox Corporation | Relevant persons identification leveraging both textual data and social context |
EP3855321A1 (en) * | 2011-11-15 | 2021-07-28 | AB Initio Technology LLC | Data clustering based on variant token networks |
US8862605B2 (en) * | 2011-11-18 | 2014-10-14 | International Business Machines Corporation | Systems, methods and computer program products for discovering a text query from example documents |
US8700561B2 (en) | 2011-12-27 | 2014-04-15 | Mcafee, Inc. | System and method for providing data protection workflows in a network environment |
US20150078674A1 (en) * | 2012-02-20 | 2015-03-19 | Wenfei Jiang | Component sorting based encoding for 3d mesh compression |
US9177171B2 (en) * | 2012-03-11 | 2015-11-03 | International Business Machines Corporation | Access control for entity search |
US9015080B2 (en) | 2012-03-16 | 2015-04-21 | Orbis Technologies, Inc. | Systems and methods for semantic inference and reasoning |
US10417037B2 (en) | 2012-05-15 | 2019-09-17 | Apple Inc. | Systems and methods for integrating third party services with a digital assistant |
US8805848B2 (en) | 2012-05-24 | 2014-08-12 | International Business Machines Corporation | Systems, methods and computer program products for fast and scalable proximal search for search queries |
US9536528B2 (en) | 2012-07-03 | 2017-01-03 | Google Inc. | Determining hotword suitability |
US8751477B2 (en) * | 2012-10-05 | 2014-06-10 | Iac Search & Media, Inc. | Quality control system for providing results in response to queries |
US9189531B2 (en) | 2012-11-30 | 2015-11-17 | Orbis Technologies, Inc. | Ontology harmonization and mediation systems and methods |
CN104969289B (en) | 2013-02-07 | 2021-05-28 | 苹果公司 | Voice trigger of digital assistant |
US9235626B2 (en) | 2013-03-13 | 2016-01-12 | Google Inc. | Automatic generation of snippets based on context and user interest |
US10652394B2 (en) | 2013-03-14 | 2020-05-12 | Apple Inc. | System and method for processing voicemail |
US10748529B1 (en) | 2013-03-15 | 2020-08-18 | Apple Inc. | Voice activated device for use with a voice-based digital assistant |
US9501506B1 (en) | 2013-03-15 | 2016-11-22 | Google Inc. | Indexing system |
US10366149B2 (en) * | 2013-03-15 | 2019-07-30 | Wolfram Research, Inc. | Multimedia presentation authoring tools |
CN103136372B (en) * | 2013-03-21 | 2016-03-02 | 陕西通信信息技术有限公司 | URL quick position, classification and filter method in network trusted sexual behaviour management |
US9268823B2 (en) | 2013-05-10 | 2016-02-23 | International Business Machines Corporation | Partial match derivation using text analysis |
US9483568B1 (en) | 2013-06-05 | 2016-11-01 | Google Inc. | Indexing system |
US20140366091A1 (en) * | 2013-06-07 | 2014-12-11 | Amx, Llc | Customized information setup, access and sharing during a live conference |
US10176167B2 (en) | 2013-06-09 | 2019-01-08 | Apple Inc. | System and method for inferring user intent from speech inputs |
US9195703B1 (en) | 2013-06-27 | 2015-11-24 | Google Inc. | Providing context-relevant information to users |
US10169711B1 (en) | 2013-06-27 | 2019-01-01 | Google Llc | Generalized engine for predicting actions |
US9298852B2 (en) | 2013-06-27 | 2016-03-29 | Google Inc. | Reranking query completions |
US9146918B2 (en) | 2013-09-13 | 2015-09-29 | International Business Machines Corporation | Compressing data for natural language processing |
US9229987B2 (en) | 2013-09-30 | 2016-01-05 | Protegrity Corporation | Mapping between tokenization domains |
US10210156B2 (en) | 2014-01-10 | 2019-02-19 | International Business Machines Corporation | Seed selection in corpora compaction for natural language processing |
US9715875B2 (en) | 2014-05-30 | 2017-07-25 | Apple Inc. | Reducing the need for manual start/end-pointing and trigger phrases |
US9966065B2 (en) | 2014-05-30 | 2018-05-08 | Apple Inc. | Multi-command single utterance input method |
US10170123B2 (en) | 2014-05-30 | 2019-01-01 | Apple Inc. | Intelligent assistant for home automation |
US9338493B2 (en) | 2014-06-30 | 2016-05-10 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US10362133B1 (en) * | 2014-12-22 | 2019-07-23 | Palantir Technologies Inc. | Communication data processing architecture |
US9886953B2 (en) | 2015-03-08 | 2018-02-06 | Apple Inc. | Virtual assistant activation |
US10460227B2 (en) | 2015-05-15 | 2019-10-29 | Apple Inc. | Virtual assistant in a communication session |
US10200824B2 (en) | 2015-05-27 | 2019-02-05 | Apple Inc. | Systems and methods for proactively identifying and surfacing relevant content on a touch-sensitive device |
US20160378747A1 (en) | 2015-06-29 | 2016-12-29 | Apple Inc. | Virtual assistant for media playback |
US10242008B2 (en) | 2015-07-06 | 2019-03-26 | International Business Machines Corporation | Automatic analysis of repository structure to facilitate natural language queries |
US10331312B2 (en) | 2015-09-08 | 2019-06-25 | Apple Inc. | Intelligent automated assistant in a media environment |
US10747498B2 (en) | 2015-09-08 | 2020-08-18 | Apple Inc. | Zero latency digital assistant |
US10671428B2 (en) | 2015-09-08 | 2020-06-02 | Apple Inc. | Distributed personal assistant |
US10740384B2 (en) | 2015-09-08 | 2020-08-11 | Apple Inc. | Intelligent automated assistant for media search and playback |
CN105335493B (en) * | 2015-10-21 | 2017-08-29 | 广州神马移动信息科技有限公司 | A kind of method and device of layered filtration document |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US10956666B2 (en) | 2015-11-09 | 2021-03-23 | Apple Inc. | Unconventional virtual assistant interactions |
US10223066B2 (en) | 2015-12-23 | 2019-03-05 | Apple Inc. | Proactive assistance based on dialog communication between devices |
RU2632134C2 (en) * | 2015-12-28 | 2017-10-02 | Общество С Ограниченной Ответственностью "Яндекс" | Method and system of processing of search requests |
US10977284B2 (en) | 2016-01-29 | 2021-04-13 | Micro Focus Llc | Text search of database with one-pass indexing including filtering |
US10586535B2 (en) | 2016-06-10 | 2020-03-10 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
DK179415B1 (en) | 2016-06-11 | 2018-06-14 | Apple Inc | Intelligent device arbitration and control |
DK201670540A1 (en) | 2016-06-11 | 2018-01-08 | Apple Inc | Application integration with a digital assistant |
US11204787B2 (en) | 2017-01-09 | 2021-12-21 | Apple Inc. | Application integration with a digital assistant |
US10282369B2 (en) * | 2017-03-08 | 2019-05-07 | Centri Technology, Inc. | Fast indexing and searching of encoded documents |
US10423638B2 (en) | 2017-04-27 | 2019-09-24 | Google Llc | Cloud inference system |
US10726832B2 (en) | 2017-05-11 | 2020-07-28 | Apple Inc. | Maintaining privacy of personal information |
DK180048B1 (en) | 2017-05-11 | 2020-02-04 | Apple Inc. | MAINTAINING THE DATA PROTECTION OF PERSONAL INFORMATION |
DK201770427A1 (en) | 2017-05-12 | 2018-12-20 | Apple Inc. | Low-latency intelligent automated assistant |
DK179745B1 (en) | 2017-05-12 | 2019-05-01 | Apple Inc. | SYNCHRONIZATION AND TASK DELEGATION OF A DIGITAL ASSISTANT |
DK179496B1 (en) | 2017-05-12 | 2019-01-15 | Apple Inc. | USER-SPECIFIC Acoustic Models |
US10303715B2 (en) | 2017-05-16 | 2019-05-28 | Apple Inc. | Intelligent automated assistant for media exploration |
US20180336892A1 (en) | 2017-05-16 | 2018-11-22 | Apple Inc. | Detecting a trigger of a digital assistant |
US11411578B1 (en) * | 2017-12-31 | 2022-08-09 | Teradata Us, Inc. | Bit reordering compression |
US10990630B2 (en) * | 2018-02-27 | 2021-04-27 | International Business Machines Corporation | Generating search results based on non-linguistic tokens |
US10818288B2 (en) | 2018-03-26 | 2020-10-27 | Apple Inc. | Natural assistant interaction |
US11145294B2 (en) | 2018-05-07 | 2021-10-12 | Apple Inc. | Intelligent automated assistant for delivering content from user experiences |
US10928918B2 (en) | 2018-05-07 | 2021-02-23 | Apple Inc. | Raise to speak |
US10892996B2 (en) | 2018-06-01 | 2021-01-12 | Apple Inc. | Variable latency device coordination |
DK180639B1 (en) | 2018-06-01 | 2021-11-04 | Apple Inc | DISABILITY OF ATTENTION-ATTENTIVE VIRTUAL ASSISTANT |
DK179822B1 (en) | 2018-06-01 | 2019-07-12 | Apple Inc. | Voice interaction at a primary device to access call functionality of a companion device |
US11462215B2 (en) | 2018-09-28 | 2022-10-04 | Apple Inc. | Multi-modal inputs for voice commands |
US11475898B2 (en) | 2018-10-26 | 2022-10-18 | Apple Inc. | Low-latency multi-speaker speech recognition |
US11348573B2 (en) | 2019-03-18 | 2022-05-31 | Apple Inc. | Multimodality in digital assistant systems |
US11475884B2 (en) | 2019-05-06 | 2022-10-18 | Apple Inc. | Reducing digital assistant latency when a language is incorrectly determined |
US11423908B2 (en) | 2019-05-06 | 2022-08-23 | Apple Inc. | Interpreting spoken requests |
DK201970509A1 (en) | 2019-05-06 | 2021-01-15 | Apple Inc | Spoken notifications |
US11307752B2 (en) | 2019-05-06 | 2022-04-19 | Apple Inc. | User configurable task triggers |
US11140099B2 (en) | 2019-05-21 | 2021-10-05 | Apple Inc. | Providing message response suggestions |
US11496600B2 (en) | 2019-05-31 | 2022-11-08 | Apple Inc. | Remote execution of machine-learned models |
DK201970510A1 (en) | 2019-05-31 | 2021-02-11 | Apple Inc | Voice identification in digital assistant systems |
US11289073B2 (en) | 2019-05-31 | 2022-03-29 | Apple Inc. | Device text to speech |
DK180129B1 (en) | 2019-05-31 | 2020-06-02 | Apple Inc. | User activity shortcut suggestions |
US11360641B2 (en) | 2019-06-01 | 2022-06-14 | Apple Inc. | Increasing the relevance of new available information |
US11227599B2 (en) | 2019-06-01 | 2022-01-18 | Apple Inc. | Methods and user interfaces for voice-based control of electronic devices |
US11488406B2 (en) | 2019-09-25 | 2022-11-01 | Apple Inc. | Text detection using global geometry estimators |
US11061543B1 (en) | 2020-05-11 | 2021-07-13 | Apple Inc. | Providing relevant data items based on context |
US11043220B1 (en) | 2020-05-11 | 2021-06-22 | Apple Inc. | Digital assistant hardware abstraction |
US11490204B2 (en) | 2020-07-20 | 2022-11-01 | Apple Inc. | Multi-device audio adjustment coordination |
US11438683B2 (en) | 2020-07-21 | 2022-09-06 | Apple Inc. | User identification using headphones |
US20240086911A1 (en) * | 2022-09-12 | 2024-03-14 | Bank Of America Corporation | Systems, methods, and apparatuses for tracking and logging resource transfers via a distributed network |
Family Cites Families (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5374928A (en) | 1987-05-25 | 1994-12-20 | Megaword International Pty. Ltd. | Method of processing a text in order to store the text in memory |
JPH03266039A (en) | 1990-03-16 | 1991-11-27 | Fujitsu Ltd | Free format data link processing system |
US5325091A (en) | 1992-08-13 | 1994-06-28 | Xerox Corporation | Text-compression technique using frequency-ordered array of word-number mappers |
CA2124752C (en) | 1993-06-30 | 2005-04-12 | Mark Zbikowski | Meta-data structure and handling |
US5488364A (en) | 1994-02-28 | 1996-01-30 | Sam H. Eulmi | Recursive data compression |
JPH08255155A (en) * | 1995-03-16 | 1996-10-01 | Fuji Xerox Co Ltd | Device and method for full-text registered word retrieval |
US5855015A (en) * | 1995-03-20 | 1998-12-29 | Interval Research Corporation | System and method for retrieval of hyperlinked information resources |
JP3422350B2 (en) | 1996-02-09 | 2003-06-30 | 日本電信電話株式会社 | Additional search word candidate presentation method, document search method, and their devices |
JP3108015B2 (en) * | 1996-05-22 | 2000-11-13 | 松下電器産業株式会社 | Hypertext search device |
JPH1049549A (en) | 1996-05-29 | 1998-02-20 | Matsushita Electric Ind Co Ltd | Document retrieving device |
US5946716A (en) | 1996-05-30 | 1999-08-31 | Hewlett-Packard Company | Sectored virtual memory management system and translation look-aside buffer (TLB) for the same |
US6076051A (en) * | 1997-03-07 | 2000-06-13 | Microsoft Corporation | Information retrieval utilizing semantic representation of text |
US6233575B1 (en) | 1997-06-24 | 2001-05-15 | International Business Machines Corporation | Multilevel taxonomy based on features derived from training documents classification using fisher values as discrimination values |
US5987457A (en) * | 1997-11-25 | 1999-11-16 | Acceleration Software International Corporation | Query refinement method for searching documents |
US5991713A (en) | 1997-11-26 | 1999-11-23 | International Business Machines Corp. | Efficient method for compressing, storing, searching and transmitting natural language text |
US6055526A (en) * | 1998-04-02 | 2000-04-25 | Sun Microsystems, Inc. | Data indexing technique |
US6388585B1 (en) | 1998-08-11 | 2002-05-14 | Matsushita Electric Ind Co Ltd | Method for data compression and decompression using decompression instructions |
JP3816680B2 (en) | 1998-11-02 | 2006-08-30 | 株式会社リコー | Document search apparatus, document search method, and computer-readable recording medium storing a program for executing the method |
US6885319B2 (en) | 1999-01-29 | 2005-04-26 | Quickshift, Inc. | System and method for generating optimally compressed data from a plurality of data compression/decompression engines implementing different data compression algorithms |
US6631373B1 (en) | 1999-03-02 | 2003-10-07 | Canon Kabushiki Kaisha | Segmented document indexing and search |
US6353825B1 (en) * | 1999-07-30 | 2002-03-05 | Verizon Laboratories Inc. | Method and device for classification using iterative information retrieval techniques |
AU2001249123A1 (en) * | 2000-03-15 | 2001-09-24 | Hiawatha Island Software Co., Inc. | System and method for providing computer network search services |
US6553457B1 (en) | 2000-04-19 | 2003-04-22 | Western Digital Technologies, Inc. | Tag memory disk cache architecture |
US6728722B1 (en) | 2000-08-28 | 2004-04-27 | Sun Microsystems, Inc. | General data structure for describing logical data spaces |
US6563439B1 (en) | 2000-10-31 | 2003-05-13 | Intel Corporation | Method of performing Huffman decoding |
US20020091671A1 (en) | 2000-11-23 | 2002-07-11 | Andreas Prokoph | Method and system for data retrieval in large collections of data |
US7092936B1 (en) | 2001-08-22 | 2006-08-15 | Oracle International Corporation | System and method for search and recommendation based on usage mining |
JP4118571B2 (en) | 2002-02-15 | 2008-07-16 | 株式会社リコー | Document search apparatus, document search method, and recording medium |
US6832294B2 (en) | 2002-04-22 | 2004-12-14 | Sun Microsystems, Inc. | Interleaved n-way set-associative external cache |
US20030204500A1 (en) * | 2002-04-25 | 2003-10-30 | Jean-Francois Delpech | Process and apparatus for automatic retrieval from a database and for automatic enhancement of such database |
US8374958B2 (en) | 2002-08-29 | 2013-02-12 | Alcatel Lucent | Method and apparatus for the payment of internet content |
JP4154971B2 (en) | 2002-09-18 | 2008-09-24 | 富士ゼロックス株式会社 | Image processing device |
US7287025B2 (en) | 2003-02-12 | 2007-10-23 | Microsoft Corporation | Systems and methods for query expansion |
US20040225497A1 (en) | 2003-05-05 | 2004-11-11 | Callahan James Patrick | Compressed yet quickly searchable digital textual data format |
US20050210009A1 (en) * | 2004-03-18 | 2005-09-22 | Bao Tran | Systems and methods for intellectual property management |
US8612208B2 (en) * | 2004-04-07 | 2013-12-17 | Oracle Otc Subsidiary Llc | Ontology for use with a system, method, and computer readable medium for retrieving information and response to a query |
US20060036599A1 (en) * | 2004-08-09 | 2006-02-16 | Glaser Howard J | Apparatus, system, and method for identifying the content representation value of a set of terms |
-
2004
- 2004-08-13 US US10/917,746 patent/US8407239B2/en active Active
-
2005
- 2005-08-08 EP EP05784308.8A patent/EP1779273B1/en active Active
- 2005-08-08 CN CN201010144526A patent/CN101799834A/en active Pending
- 2005-08-08 WO PCT/US2005/028192 patent/WO2006020595A1/en active Application Filing
- 2005-08-08 JP JP2007525718A patent/JP4805267B2/en active Active
- 2005-08-08 KR KR1020077005777A patent/KR101157693B1/en active IP Right Grant
- 2005-08-08 CN CN201110121210.2A patent/CN102142038B/en active Active
- 2005-08-08 CN CNA2005800341289A patent/CN101036143A/en active Pending
-
2013
- 2013-03-26 US US13/851,036 patent/US9146967B2/en active Active
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2014169874A1 (en) * | 2013-08-12 | 2014-10-23 | 中兴通讯股份有限公司 | Table entry management device, table entry management method, and computer storage medium |
CN104378295A (en) * | 2013-08-12 | 2015-02-25 | 中兴通讯股份有限公司 | Table item management device and table item management method |
CN104378295B (en) * | 2013-08-12 | 2019-03-26 | 中兴通讯股份有限公司 | List item managing device and entry management method |
CN111368057A (en) * | 2020-03-05 | 2020-07-03 | 腾讯科技（深圳）有限公司 | Phrase query method and device, computer equipment and storage medium |
CN111368057B (en) * | 2020-03-05 | 2023-08-22 | 腾讯科技（深圳）有限公司 | Phrase query method, device, computer equipment and storage medium |
Also Published As
Publication number | Publication date |
---|---|
CN101799834A (en) | 2010-08-11 |
US9146967B2 (en) | 2015-09-29 |
EP1779273B1 (en) | 2019-06-19 |
CN102142038B (en) | 2014-05-28 |
JP2008510228A (en) | 2008-04-03 |
WO2006020595A1 (en) | 2006-02-23 |
US20060036593A1 (en) | 2006-02-16 |
JP4805267B2 (en) | 2011-11-02 |
KR20070049664A (en) | 2007-05-11 |
US20130212092A1 (en) | 2013-08-15 |
US8407239B2 (en) | 2013-03-26 |
EP1779273A1 (en) | 2007-05-02 |
KR101157693B1 (en) | 2012-06-21 |
CN102142038A (en) | 2011-08-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN101036143A (en) | Multi-stage query processing system and method for use with tokenspace repository | |
US7917480B2 (en) | Document compression system and method for use with tokenspace repository | |
US8504553B2 (en) | Unstructured and semistructured document processing and searching | |
US20020152219A1 (en) | Data interexchange protocol | |
CN1904886A (en) | Method and apparatus for establishing link structure between multiple documents | |
CN101079070A (en) | Computer and method for response of information query | |
Hon et al. | Space-efficient frameworks for top-k string retrieval | |
CN1703692A (en) | System and method of creating and using compact linguistic data | |
CN1317114A (en) | Search system and method for retrieval of data, and use thereof in search engine | |
CN1687926A (en) | Method of PDF file information extraction system based on XML | |
CN1928862A (en) | System and method for obtaining words or phrases unit translation information based on data excavation | |
US20070208733A1 (en) | Query Correction Using Indexed Content on a Desktop Indexer Program | |
CN1687925A (en) | Method for realizing bilingual web page searching | |
CN1873643A (en) | Method and system to enhance query performance of search engines using lexical affinities | |
CN1601520A (en) | System and method for the recognition of organic chemical names in text documents | |
Konow et al. | Faster and smaller inverted indices with treaps | |
Claude et al. | Indexes for highly repetitive document collections | |
Arroyuelo et al. | To index or not to index: time-space trade-offs in search engines with positional ranking functions | |
CN101055593A (en) | Tibetan web page and its code identification method | |
Arroyuelo et al. | To index or not to index: Time–space trade-offs for positional ranking functions in search engines | |
Tsegay et al. | Document compaction for efficient query biased snippet generation | |
CN1955979A (en) | Automatic extraction device, method and program of essay title and correlation information | |
Garratt et al. | A survey of alternative designs for a search engine storage structure | |
Al-Jedady et al. | Query retrieval enhancement based on Huffman index terms encoding | |
CN1095573C (en) | Quick character and word identification method |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
C06 | Publication | ||
PB01 | Publication | ||
C10 | Entry into substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
AD01 | Patent right deemed abandoned |
Effective date of abandoning: 20070912 |
|
C20 | Patent right or utility model deemed to be abandoned or is abandoned |
US20170139879A1 - Simulated hyperlinks on a mobile device - Google Patents
Simulated hyperlinks on a mobile device Download PDFInfo
- Publication number
- US20170139879A1 US20170139879A1 US14/945,348 US201514945348A US2017139879A1 US 20170139879 A1 US20170139879 A1 US 20170139879A1 US 201514945348 A US201514945348 A US 201514945348A US 2017139879 A1 US2017139879 A1 US 2017139879A1
- Authority
- US
- United States
- Prior art keywords
- selection
- mobile application
- centered
- mobile
- simulated hyperlink
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G06F17/2235—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/48—Program initiating; Program switching, e.g. by interrupt
- G06F9/4806—Task transfer initiation or dispatching
- G06F9/4843—Task transfer initiation or dispatching by program, e.g. task dispatcher, supervisor, operating system
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9558—Details of hyperlinks; Management of linked annotations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0483—Interaction with page-structured environments, e.g. book metaphor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04842—Selection of displayed objects or displayed text elements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/134—Hyperlinking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/289—Phrasal analysis, e.g. finite state techniques or chunking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
- G06F9/453—Help systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
Definitions
- mobile applications Due to the use of mobile devices, such as smartphones and tablets, user interaction with mobile applications has been increasing. As users move away from web-based browsers to using mobile devices they often lose the ability to easily transfer data from one mobile app to another. In general, mobile applications are single purpose and very good at one specific thing, but moving information between mobile applications can be cumbersome and a user may not know which app is good for a given purpose, or even when to look for an app to help them out.
- Implementations provide simulated hyperlinks for content generated on a mobile device.
- the simulated hyperlink may perform an operation or provide the user with the opportunity to select between two operations after receiving an action from the user (e.g., a long tap, hard tap, etc.) indicative of intent to initiate an operation.
- the operations may be intents for other mobile applications and can be based on a simulated hyperlink model trained using a mapping of websites to mobile applications and on a repository of crawled documents with anchor tags.
- a client device employing disclosed implementations makes a centered selection from the content closest to a location of the action.
- the centered selection can include a fixed quantity of words appearing to the right of and to the left of a center word, e.g., a word or text equivalent for an image located closest to a location of the action.
- the system may pad the fixed quantity of words if needed, e.g., to avoid using words in other sections or paragraphs.
- the centered selection is used to provide context for the model to select an operation and make an intelligent selection from the centered selection to use as a parameter for the operation.
- the system may automatically perform the operation, may get user approval prior to performing the operation, or may offer two or more operations.
- a mobile device may include a display device, at least one processor, and memory storing instructions that, when executed by the at least one processor, cause the mobile device to perform operations including generating a centered selection responsive to detecting an action on content displayed on the display device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given a centered selection, the operation being associated with an intent for a mobile application, and initiating at least one of a) display of a user interface permitting selection of the operation, which uses the intent, or b) performance of the operation using the intent.
- the simulated hyperlink model may also be trained to provide an intelligent selection from the centered selection and initiating the operation occurs using the intelligent selection as a parameter for the intent.
- a method includes identifying, from a document corpus, one or more documents having a hyperlink to a whitelisted website, the whitelisted website being one of a plurality of websites in a mapping of websites to mobile applications, generating positive training examples for a simulated hyperlink model using the one or more documents, each positive training example having a centered selection generated from the respective document, a website, a weight corresponding to a page rank of the website, and a mobile application mapped to the website, and training the simulated hyperlink model, using the positive training examples, to predict an operation for the mobile application given the centered selection.
- a method includes generating, responsive to detecting a simulated hyperlink indication, a centered selection from content displayed on a display of a mobile computing device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given the centered selection, the operation being associated with an intent for a mobile application, and initiating the operation using the intent.
- a computer program product embodied on a computer-readable storage device includes instructions that, when executed by at least one processor formed in a substrate, cause a computing device to perform any of the disclosed methods, operations, or processes.
- Another general aspect includes a system and/or a method for extracting text displayed on a screen in response to a user action and providing an operation for selected portions of the text located proximate the location for the action, substantially as shown in and/or described in connection with at least one of the figures, and as set forth more completely in the claims.
- implementations may provide a way for a user to seamlessly transfer information between mobile applications, enabling a user to lookup additional information with minimal effort.
- implementations may improve the user experience by suggesting applications that can help the user find/handle information, even though the user may not have knowledge of the application. Thus implementations help the user discover more effective or popular tools.
- implementations improve the user experience by helping the user perform tasks more quickly, e.g. with fewer gestures from the user.
- the operations suggested may be customized for the user of the mobile device, making it more likely that the user finds the suggested operation helpful.
- Implementations also provide operations for any selected text, not just text that corresponds to an entity in a personal or public knowledge graph. Thus, implementations have broader utility than entity-based operation suggestion systems. Implementations improve the user experience by predicting applications that help the user find out more information about a selection and by enabling the user to navigate to the application with minimal input from the user. Implementations also provide context for operation selection, generating better or more accurate suggested operations, which can allow for automatic initiation of the operation with higher accuracy. These advantages all improve the user experience.
- FIG. 1 is a block diagram illustrating an example system in accordance with the disclosed subject matter.
- FIG. 2A is an example display of a mobile computing device and a centered selection generated responsive to an action, in accordance with the disclosed subject matter.
- FIG. 2B is an example display of a mobile computing device with a suggested operation for an intelligent selection from the centered selection of FIG. 2A , in accordance with the disclosed subject matter.
- FIG. 3A is another example display of a mobile computing device and a centered selection generated responsive to an action, in accordance with the disclosed subject matter.
- FIG. 3B is an example display of a mobile computing device with two suggested operations for an intelligent selection from the centered selection of FIG. 3A , in accordance with the disclosed subject matter.
- FIG. 4 illustrates a flow diagram of an example process for suggesting operations in response to an action associated with content displayed on a mobile computing device, in accordance with disclosed implementations.
- FIG. 5 illustrates a flow diagram of an example process for generating a simulated hyperlink model, in accordance with disclosed implementations.
- FIG. 6 shows an example of a computer device that can be used to implement the described techniques.
- FIG. 7 shows an example of a distributed computer device that can be used to implement the described techniques.
- Implementations include systems and methods that automatically select text in response to a user action and predict or automatically perform an operation for the selected text.
- the system may perform the operation using an intelligent selection taken from a centered selection that is based on a location of the action.
- the intelligent selection may be text displayed on the screen or text equivalent for an image displayed on the screen.
- the text or image displayed on the screen need not be an existing hyperlink.
- the application that generated the text or image for display did not associate the operation with the text/image.
- the action which differs from a single-click action typically associated with intent to follow a hyperlink, triggers a classifier that predicts the operation for the text or image based on surrounding context.
- the context may be derived from the content surrounding the location of the action.
- the context may be in the form of a centered selection, which includes text or padding tokens surrounding the text (or text equivalent for an image) closest to a location of the action.
- the operation predicted by the classifier is not a default action, such as a copy or insert operation, but is predicted based on the context of the action, e.g., the centered selection.
- the system may determine the operation based on the centered selection and may automatically perform the operation or may ask the user to confirm performance of the operation.
- the operation may be for a mobile application or a type of mobile application.
- the operation may initiate launch of a mobile application corresponding to the operation with an intent that takes a selected portion, e.g., intelligent selection, from the centered selection as a parameter.
- An intent is an operation supported by a mobile application.
- a search intent and a share intent are common types of intent.
- the search intent allows the system to link to, or activate, a mobile application in its search state given a query parameter.
- the system may use nonstandard intents as well. For example, a mobile applicant may indicate an intent in a manifest file. Such nonstandard intents are supported by the mobile application but not necessarily by the operating system.
- an operation may include any intent that can take the intelligent selection as a parameter.
- the system can operate across all applications used on a mobile device, making the user experience consistent.
- the simulated hyperlink functionality thus need not be limited to a particular mobile application.
- the simulated hyperlink functionality limited to recognized entities, e.g., entities represented in a personal or public knowledge base.
- the operations performed via a simulated hyperlink may be for mobile applications that the user has not yet installed and, thus, can serve as a way to inform the user about useful mobile applications.
- FIG. 1 is a block diagram of a simulated hyperlink system in accordance with an example implementation.
- the system 100 may be used to initiate an operation in response to an action by the user based on content displayed on a mobile device, even when the action is performed on content that is not a hyperlink or otherwise actionable.
- the operation may be an intent (e.g., standard or nonstandard) for a mobile application or a copy command, or a user interface that enables the user to select from among two or more operations or to install a mobile application the user has not yet installed on the mobile device.
- the operation may also launch a web mirror for the mobile application.
- the mobile application When a mobile application is represented by the operation, the mobile application may be referred to as the destination application and the mobile application that generated the content selected by the user may be considered a source application.
- the simulated hyperlink system provides a way to move content from the source application to the destination application with no input from the user except the action.
- the operation(s) offered or performed in response to the action may be based on a model, e.g., a machine learning model trained to predict one or more operations given a centered selection.
- the depiction of system 100 in FIG. 1 is a client-server system, with some data processing occurring at a server 110 . However, other configurations and applications may be used. For example, the data processing may occur exclusively on the client device 150 . In some implementations, a user of the client device 150 may indicate that portions of the processing be performed at the server 110 . Thus, implementations are not limited to the exact configurations illustrated.
- the simulated hyperlink system 100 may include a server 110 , which may be a computing device or devices that take the form of a number of different devices, for example a standard server, a group of such servers, or a rack server system.
- server 110 may be implemented in a distributed manner across multiple computing devices.
- server 110 may be implemented in a personal computer, for example a laptop computer.
- the server 110 may be an example of computer device 600 , as depicted in FIG. 6 , or system 700 , as depicted in FIG. 7 .
- Server 110 may include one or more processors formed in a substrate configured to execute one or more machine executable instructions or pieces of software, firmware, or a combination thereof.
- the processors can be semiconductor-based—that is, the processors can include semiconductor material that can perform digital logic.
- the server 110 can also include one or more computer memories.
- the memories for example, a main memory, may be configured to store one or more pieces of data, either temporarily, permanently, semi-permanently, or a combination thereof.
- the memories may include any type of storage device that stores information in a format that can be read and/or executed by the one or more processors.
- the memories may include volatile memory, non-volatile memory, or a combination thereof, and store modules or engines that, when executed by the one or more processors, perform certain operations.
- the modules may be stored in an external storage device and loaded into the memory of server 110 .
- the modules of the simulated hyperlink system 100 may include a simulated hyperlink engine 120 .
- the simulated hyperlink engine 120 may be configured to generate training examples for training the simulated hyperlink model 130 based on a mapping 132 of whitelisted websites to mobile applications.
- the whitelisted websites may be websites that are useful for performing operations.
- the websites may be websites that include a search interface and provide content in response to a query.
- Non-exhaustive examples of such websites include shopping sites, wikis, reservation sites, rating sites, travel sites, ticket sites, etc.
- the whitelist and the mapping of whitelisted websites to mobile applications is curated by hand and provided to the simulated hyperlink engine 120 .
- an intent e.g., search, share, etc.
- the simulated hyperlink engine 120 may generate the whitelist and the mapping 132 .
- the simulated hyperlink engine 120 may search mobile application manifests 136 to determine websites mentioned in the manifests 136 .
- Such manifests 136 conventionally include information about an application, such as the developer, an icon, a description, a version, etc. Some of this information may be used to help users decide whether to install the application. Some of the information may be intended for other application developers, such as application programming interfaces (APIs), and intents supported by the mobile application. Some mobile applications may include nonstandard intents and these intents may be identified in the manifests 136 .
- APIs application programming interfaces
- the manifests 136 may thus contain various kinds of data about the mobile application, and sometimes a manifest includes a reference to a website that offers functionality similar to that of the mobile application. Such websites are sometimes referred to as web mirrors.
- the manifest for a mobile application may be submitted by the mobile application developer to a web store.
- the simulated hyperlink engine 120 may consider any website mentioned in the mobile application manifests 136 a whitelisted website and may map the website to the mobile application, e.g., by adding the website and mobile application to the website-mobile application map 132 . If a mobile application supports more than one intent, the simulated hyperlink engine 120 may add multiple records mapping the website to the mobile application, each one having a different intent.
- the mapping may also include other uniform resource indicators (URIs) mapped to a mobile application. While http and https are the most common URI type, the anchor tag of a hyperlink sometimes includes other URIs in the destination. For example, “mailto:” is a URI that can be mapped to an email application and “tel:” is a URI that can be mapped to a dialing application. These non-http URIs may map to a mobile application or mobile application type, as they typically perform a specific function.
- URIs uniform resource indicators
- the simulated hyperlink engine 120 may generate entries in the website-mobile application map 132 using an emulator 122 .
- the emulator 122 may be configured to emulate a client device in a batch environment. In other words, the emulator 122 may be configured to execute a mobile application and determine screen content generated by the mobile application. In some implementations, the emulator 122 may send an intent with a query to a mobile application and determine whether the mobile application returns content, or in other words returns results for the query.
- the content may be information in a frame buffer. In some implementations, the content may be information used by the operating system to generate a frame buffer. In some implementations, the content may be from an API.
- the emulator 122 may find an equivalent website, e.g., one that returns the same or similar results for the query.
- the emulator 122 may add the website and the mobile application and the intent to the website-mobile application map 132 .
- the simulated hyperlink engine 120 may use the website-mobile application map 132 and crawled documents 134 to generate positive training examples for training the simulated hyperlink model 130 .
- the crawled documents 134 may include documents available via the Internet and may represent an index generated from the source documents.
- the crawled documents 134 may also include other documents that link to documents available via the Internet.
- the simulated hyperlink engine 120 may be configured to inspect hyperlinks in crawled documents 134 for hyperlinks that link to a website or URI in the map 132 . When such a hyperlink is identified, the system may use it to generate a positive training example for the simulated hyperlink model 130 .
- the anchor text i.e., the words that are part of the hyperlink and appear between the anchor-begin tag and anchor-end tag
- the simulated hyperlink engine 120 may include a training example that teaches the simulated hyperlink model 130 that given the anchor text, the mobile application is a good candidate for finding more information about the anchor text.
- the simulated hyperlink engine 120 may provide a centered selection from the source document in crawled documents 134 with the training example.
- the centered selection may provide context for helping the simulated hyperlink model 130 predict the mobile application correctly.
- a centered selection may include the anchor text padded on either side by words surrounding the hyperlink from the source document.
- the centered selection has a fixed length, or in other words a preselected quantity of words.
- the centered selection may include thirteen words.
- the anchor text may represent the middle of the centered selection.
- a hyperlink may include three words as part of the anchor tag (i.e., after the begin-anchor tag and before the end-anchor tag), the three words may occur in positions 6 , 7 , and 8 of the centered selection.
- the anchor text may be padded on either side by words from the source document that appear just prior to and just after the anchor text.
- words are not taken from a different paragraph, page, or section in the source document.
- the centered selection may be padded with a token that represents the absence of words. For example, if the anchor text appears as the first three words of a sentence in the source document, the centered selection may include five padding tokens, followed by the three words, and then followed by five more words from the sentence.
- the centered selection provides the context of surrounding words to help the simulated hyperlink model 130 determine between different websites used in different contexts with the same or very similar anchor text.
- the simulated hyperlink engine 120 may generate numerous training examples using the crawled documents 134 .
- the simulated hyperlink engine 120 may increase the quantity of positive examples by clustering similar mobile applications.
- the simulated hyperlink engine 120 may cluster mobile applications, e.g., based on data available at a web store or in the mobile application manifests 136 , and may use the clusters to create additional training examples.
- mobile applications in a cluster may be considered a type of mobile application, i.e., a mobile application type, and the website-mobile application map 132 may map the website to the cluster, or in other words the type of mobile application.
- any mobile application in the cluster maps may map to the website and the simulated hyperlink engine 120 may generate training examples for each mobile application in the cluster for anchor text that corresponds to the website.
- the training example may predict the mobile application type, or in other words the cluster, given the anchor text.
- the simulated hyperlink engine 120 may use the emulator 122 to verify whether the mobile applications in a cluster produce similar results. For example, the emulator 122 may be provided the anchor text in a search intent for the mobile applications in a cluster and may compare results returned for the anchor text. If a particular mobile application in the cluster does not provide similar results to the other mobile applications in the cluster, that particular mobile application may be removed from the cluster and used as a negative training example. Accordingly, the simulated hyperlink model 130 may be trained to exclude certain applications. Similarly, the simulated hyperlink engine 120 may use information in the crawled documents 134 and mobile application manifests 136 to generate other negative training examples.
- the query may be used as a negative example for one or more mobile applications.
- the simulated hyperlink engine 120 may also generate other negative training examples, for example by pairing anchor text or a centered selection with a mobile application/website that does not match the website in the anchor tag of the source document.
- the simulated hyperlink model 130 may also be trained to make an intelligent selection from the centered selection.
- the text that is the anchor text may be a positive example of the intelligent selection for that centered selection.
- the simulated hyperlink model 130 may provide an intelligent selection as well as one or more operation as output. Each operation provided as output may have an associated probability score. The probability score may represent how confident the model is that the operation is correctly predicted for the given centered selection.
- the simulated hyperlink model 130 may be any type of machine-learning algorithm, such as a long short-term memory (LSTM) neural network, feed-forward neural network, a support vector machine (SVM) classifier etc., that can predict one or more operations (e.g., intents for mobile applications) given a query.
- the simulated hyperlink engine 120 may train the simulated hyperlink model 130 to accept the query character by character and the model 130 may make a prediction only when the end of input character is encountered.
- the model 130 uses a very small vocabulary making it compact and suitable for storage and execution on a mobile device.
- the model 130 may include a character embedding layer, two LSTM layers with 64 nodes each, and a softmax classification layer.
- the model 130 may be trained to take words as input instead of characters.
- the system may push the simulated hyperlink model 130 to one or more client devices, e.g., client device 150 and client device 190 .
- Client device 150 may be any mobile personal computing device, such as a smartphone or other handheld computing device, a tablet, a wearable computing device, etc., that operates in a closed mobile environment rather than a conventional open web-based environment.
- Client device may also be any personal computing device.
- Client device 150 may be an example of computer device 600 , as depicted in FIG. 6 .
- Client device 150 may be one mobile device used by user 180 .
- User 180 may also have other mobile devices, such as client device 190 .
- Client device 150 may include one or more processors formed in a substrate configured to execute one or more machine executable instructions or pieces of software, firmware, or a combination thereof.
- the client device 150 may thus include one or more computer memories configured to store one or more pieces of data, either temporarily, permanently, semi-permanently, or a combination thereof.
- the client device 150 may thus include applications 155 , which represent machine executable instructions in the form of software, firmware, or a combination thereof.
- the components identified in the applications 155 may be part of the operating system.
- the applications 155 may be mobile applications developed for a mobile processing environment. Conventionally, mobile applications operate in a closed environment, meaning that the user employs separate applications to perform activities usually performed in a web-based browser environment.
- a user of the client device 150 can use a mobile application in mobile applications 155 provided by bookit.com.
- a mobile application may have web pages that mirror the mobile application, e.g., providing the same or similar content as the mobile application.
- the web page(s) e.g., at bookit.com
- the web mirror(s) may be considered a web mirror of the mobile application (e.g., an app provided by or associated with bookit.com).
- the applications 155 may include a screen capture application 160 and a simulated hyperlink application 162 .
- one or more of these applications can be provided by the operating system of the client device 150 .
- one or more of these applications can be downloaded and installed by the user.
- the screen capture application 160 can include various functionalities.
- the screen capture application 160 may be configured to get textual information represented on the screen from an application program interface (API).
- API application program interface
- the screen capture application 160 may be built into the operating system, which can determine the content of text fields displayed on the current screen.
- the screen capture application 160 may be configured to capture the current screen of the client device 150 .
- the screen capture application 160 may capture the screen by copying or reading the contents of the device's frame buffer.
- the captured screen may, thus, be an image and is referred to as a captured image.
- the screen capture application 160 may capture part of the screen.
- the screen capture application 160 may capture some region around the location of the action from the user, i.e., the simulated hyperlink indication.
- the screen capture application 160 may capture a partial region measured in pixels around the location of the action or may ask the API for a particular amount of on-screen text surrounding the location of the action.
- the screen capture image may represent less than all the content displayed on the screen, e.g., a partial screen capture image.
- the screen capture application 160 may capture the screen at intervals.
- the interval can be small, for example every half second or every second.
- the screen capture application 160 may be configured to capture the screen every time a touch event occurs (e.g., every time the user touches the screen to scroll, zoom, click a link etc.), in response to an explicit user request or command, or when the device transitions from one mobile application to another mobile application.
- the screen capture application 160 may increase the interval at which a screen capture occurs when the screen does not change. In other words, when the screen is static, the screen capture application 160 may capture images less often.
- the screen capture application 160 may provide the captured screen images and metadata to a recognition engine, which may be on the client device 150 or a server, such as server 110 .
- the metadata may include the timestamp, the mobile device type, a mobile device identifier, the mobile application running when the screen was captured, e.g., the application that generated the screen, etc.
- the metadata may also include which applications are active, the location of the device, ambient light, motion of the device, etc. The system may use this additional device information to assist in content analysis (e.g., disambiguation), generating suggested operations (e.g., reducing the quantity of suggestions when the device is moving, deciding what content is most relevant), etc.
- the screen capture application 160 can include an indexing engine configured to index a screen capture image according to the text, entities, images, logos, etc. identified in the image.
- the indexing engine may generate index entries for a captured image.
- the indexing engine may be on a server, such as server 110 , and the screen capture application 160 may provide the captured image and/or recognized items in the captured image to the server.
- the index may be an inverted index, where a key value (e.g., word, phrase, entity, image, logo, etc.) is associated with a list of images that include the key value or from which the key value was recognized.
- the index may include metadata (e.g., where on the captured image the key value occurs, a rank for the key value for the image, etc.) associated with each captured image in the list.
- the index may also include a list of captured images indexed by a timestamp.
- the indexing engine may store the index in memory, for example in screen capture index 172 .
- the system may store the index in a user account on a server in addition to or instead of on the client device 150 .
- the user of the client device 150 may control when the screen capture application 160 is active. For example, the user may specify that the screen capture application 160 is active only when other specified mobile applications 155 are running (e.g., only when in a social media mobile application). The user may also manually turn the screen capture application 160 on and off, for example via a settings application.
- the user may invoke the screen capture application 160 with a gesture or action that also invokes the simulated hyperlink application 162 .
- the client device 150 may also include a simulated hyperlink application 162 .
- the simulated hyperlink application 162 may be configured to use simulated hyperlink model 170 or simulated hyperlink model 130 to determine an operation to perform in response to an action, the action being a gesture, input, or a series of gestures or inputs from a user that signals intent to initiate the simulated hyperlink application 162 .
- the action is referred to as a simulated hyperlink indication.
- the action may also invoke the screen capture application 160 .
- the action i.e., a simulated hyperlink indication, may be a long press, a two finger click, a swipe, etc.
- the simulated hyperlink indication may be dragging a selection control to the portion of the screen that receives the selection.
- the selection control may be an icon that can be moved and released.
- the release of the icon may be the action that initiates the simulated hyperlink.
- the simulated hyperlink indication may verbal, e.g., a voice command to select a word or words or an image displayed on the screen. If the action occurs on a portion of the screen with an image, e.g., via the long press over an icon or picture, the simulated hyperlink application 162 may be configured to determine text associated with the image and use the text in place of the image. For example, via image recognition the image may be determined to be of an entity in a knowledge base that has a title, nickname, or common name associated with it.
- simulated hyperlink application 162 may determine text to provide to the simulated hyperlink model 170 . In some implementations, this may include using the screen capture application 160 to perform recognition on the content displayed on the screen. In some implementations, the screen capture application 160 may have already performed recognition on the content.
- the simulated hyperlink application 162 may determine the text that is located closest to a location of the action. The location of the action may be the screen coordinates that correspond to the action.
- the simulated hyperlink application 162 may determine a centered selection based on the location. For example, the simulated hyperlink application 162 may make the word closest to the location of the action the center word and include words to the left of this center word and to the right of this centered word as the centered selection.
- the number of words to the left and the number of words to the right may be equal.
- the simulated hyperlink application 162 may avoid using words from a different paragraph or section in the centered selection. For example, if the center word is the first word in a new paragraph, the simulated hyperlink application 162 may use padding tokens instead of words from the previous paragraph to the left of the center word.
- the simulated hyperlink application 162 may use the selection, e.g., the text closest to the location of the action or the centered selection, as input to the simulated hyperlink model.
- the simulated hyperlink application 162 may use a simulated hyperlink model, such as simulated hyperlink model 170 or simulated hyperlink model 130 , to determine suggested operations for the centered selection.
- the simulated hyperlink model 170 may be a copy of the simulated hyperlink model 130 .
- the simulated hyperlink model 170 may be a personalized copy of the simulated hyperlink model 130 .
- the client device 150 may receive the simulated hyperlink model 130 from the server 110 , or an updated simulated hyperlink model 130 , and may perform further training of the model on the client device 150 .
- the simulated hyperlink application 162 may use user data 176 , which may include queries submitted from the client device 150 or information on the use of certain mobile applications 155 , or screen capture index 172 to generate or re-weight positive training examples for the simulated hyperlink model 170 . These additional training examples may personalize the simulated hyperlink model 170 so that the simulated hyperlink application 162 offers suggested or predicted actions more relevant to the user 180 . For example, if user 180 uses a first reservation mobile application often, but never uses a second reservation mobile application, the simulated hyperlink application 162 may upweight the first reservation mobile application for the model so the simulated hyperlink application 162 suggests the first reservation application and not the second one.
- the simulated hyperlink model 170 is configured or trained to predict an intelligent selection and one or more operations given content from the screen.
- the simulated hyperlink application 162 may provide the model 170 with a centered selection and the model 170 may provide one or more suggested operations as well as an intelligent selection from the centered selection.
- a suggested operation includes an intent for a mobile application.
- the intent may take the intelligent selection as a parameter.
- the operation can also include a default operation, such as a copy operation or a search intent for an Internet search engine.
- the copy operation may copy the intelligent selection to the clipboard and the search engine intent may submit the intelligent selection as an Internet query.
- a default operation may be the operation if no other operation has a high enough confidence or when no operation is predicted.
- the simulated hyperlink application 162 may perform a default operation on, e.g., a copy of, the intelligent selection.
- the system may generate a user interface that offers the copy operation or other default operation and one or two of the suggested operations with highest probability scores for the user to select from.
- the simulated hyperlink application 162 may provide a user-interface that offers the suggested operation(s) to the user of the device in a manner consistent across mobile applications.
- the suggested operations may be in the form of a selectable control.
- the control can be an overlay displayed on top of the screen being displayed, an underlay displayed behind the screen being displayed, or information configured to be added to the current screen in the display buffer of the mobile device.
- the suggested operation control represents information added to a screen generated at the mobile device, whether displayed over, under, or integrated into the screen when it is displayed.
- the suggested operation control may be configured to detect a selection that initiates the corresponding action, e.g., in the form of initiating an intent.
- the suggested operation thus, acts like a hyperlink in an HTML-based document. But unlike an HTML hyperlink, the content selected by the user via the action does not need to be associated with a destination prior to the action, i.e., the simulated hyperlink indication.
- the simulated hyperlink system 100 can turn any content displayed on the screen into a hyperlink and can provide the suggested operation control for any mobile application running on the mobile device, making operations consistent across mobile applications. This consistency improves the user experience.
- the simulated hyperlink application 162 may be a module executing on a server, such as server 110 .
- the screen capture application 160 may provide the content recognized in a captured image and the word closest to the location of the action to the simulated hyperlink application 162 at the server and the simulated hyperlink application 162 may provide the screen capture application 160 with the corresponding operation(s) and intelligent selection using the simulated hyperlink model 130 .
- the screen capture application 160 may use the intelligent selection and corresponding operation(s) to provide the interface with suggested operation controls or to automatically perform an operation using the intelligent selection.
- the screen capture application 160 may integrate the user interface having the suggested operation controls with a current screen. For example, if the screen capture application 160 receives the predicted operations from the simulated hyperlink application 162 , the screen capture application 160 may combine the controls for the predicted operations with the current display content. In some implementations, the screen capture application 160 may generate an overlay, as an underlay, or may interleave the suggested operation controls with the current screen in the display buffer. In some implementations, the screen capture application 160 may be configured to verify that the currently displayed screen is similar enough to the captured screen image before displaying the suggested operation controls.
- the screen capture application 160 may use the coordinates for the control or for the corresponding intelligent selection to determine a visual cue from the captured image and compare the visual cue with the same coordinates for the currently displayed image.
- the screen capture application 160 may be configured to look a short distance for visual elements in the current image that are similar to those for the visual cue. If found, the screen capture application 160 may adjust the coordinates of the suggested operation controls to match the movement of the underlying screen.
- the screen capture application 160 may initiate an activity or mode that displays the captured image, the selected text or image, and the operation controls on top of the current screen. The previously captured image, selected text or image, and operations may be displayed until the user selects an action or cancels the display (e.g., with a cancel or ‘go-back’ command).
- the simulated hyperlink application 162 may use a ranking engine to determine which suggested operations from the model to display. For example, the simulated hyperlink application 162 may choose a quantity (e.g., 3 or 4) of the top ranking, or in other words most probable, operations. As another example, the simulated hyperlink application 162 may choose any operation with a probability score higher than a specified threshold, or a combination of quantity and a threshold. In some implementations, the quantity or threshold may be dependent on metadata about the device, e.g., a lower quantity or higher threshold when the device is moving. In some implementations, the display of the suggested actions may be scrollable, e.g., to allow the user to select from more actions than are initially displayed.
- a quantity e.g., 3 or 4
- the simulated hyperlink application 162 may choose any operation with a probability score higher than a specified threshold, or a combination of quantity and a threshold.
- the quantity or threshold may be dependent on metadata about the device, e.g., a lower quantity or higher threshold when the
- the client device 150 may include data stores 157 , which are stored in the memory of the client device 150 and used by the applications 155 .
- the data stores 157 may include the simulated hyperlink model 170 , the screen capture index 172 , and the user data 176 .
- One or more of these data stores may be associated with a user account or profile.
- the data stores may also reside on server 110 .
- one or more of the data stores 157 may be copies of or subsets of data stored on the server 110 or in another location specified by the user.
- the data stores 157 may be stored on any non-transitory memory.
- the client device 150 may be in communication with the server 110 and with other client devices 190 over network 140 .
- Network 140 may be for example, the Internet, or the network 140 can be a wired or wireless local area network (LAN), wide area network (WAN), etc., implemented using, for example, gateway devices, bridges, switches, and/or so forth.
- Network 140 may also represent a cellular communications network.
- the server 110 may communicate with and transmit data to/from client devices 150 and 190
- client device 150 may communicate with other client devices 190 (not shown).
- the simulated hyperlink system 100 represents one example configuration and implementations may incorporate other configurations. For example, some implementations may combine one or more of the components of the emulator 122 , the simulated hyperlink engine 120 , or the simulated hyperlink application 162 into a single module or engine. Similarly, some implementations may combine one or more of the screen capture application 160 and the simulated hyperlink application 162 into a single module or application. Furthermore, one or more of the components of the simulated hyperlink application 162 or the screen capture application 160 may be performed at the server 110 , while one or more of the components of the emulator 122 or the simulated hyperlink engine 120 may be performed at the client device 150 .
- one or more of the data stores such as the mobile application manifests 136 , the crawled documents 134 , the simulated hyperlink model 130 , or website-mobile application map 132 may be combined into a single data store or may be distributed across multiple computing devices, or may be stored at the client device 150 .
- one or more of the screen capture index 172 and the user data 176 may be stored at the server 110 or another location specified by the user.
- the users may be provided with an opportunity to control whether programs or features collect the user information (e.g., information about a user's social network, social actions or activities, a user's preferences, or a user's current location), or to control whether and/or how to receive content that may be more relevant to the user.
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- search records may be treated so that no personally identifiable information can be determined and/or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by a simulated hyperlink system 100 .
- capabilities may be provided to determine whether provision of functionality described herein is consistent with rights of use of content, layout, functionality or other aspects of the applications used to display content on the device screen, and set capabilities accordingly.
- settings may be provided that limit simulated hyperlinks where not doing so could be in contravention of terms of service, content license, or other limitations on use. Such settings may be manually or automatically made, such as by a user when establishing a new service or device use permissions, or by an app installation routine or the like.
- FIGS. 2A and 2B are example displays 200 a and 200 b of a client computing device in accordance with the disclosed subject matter.
- a simulated hyperlink system such as system 100 of FIG. 1 may provide the display.
- the display may be a display of a mobile device, such as client device 150 of FIG. 1 .
- the user has performed an action, e.g., a simulated hyperlink indication, at location 205 on the display 200 a.
- the location 205 corresponds most closely to the word “Brad” displayed on the screen by the source program.
- the word “Brad” is not a hyperlink, e.g., is not associated with any destination by the source program and appears as normal text (e.g., not underlined or a different color than surrounding text, as typical with a hyperlink).
- the system 100 may use the location 205 to generate centered selection 210 .
- the centered selection 210 includes 13 words taken from content recognized in display 200 a. Of course other implementations may include more or fewer words.
- the center word 215 is “Brad” because it corresponds most closely to location 205 .
- the system 100 may append six words that follow the center word 215 . These six words may be considered right context.
- the system 100 may also prepend six words that appear before the center word 215 . These six words are six words of left context.
- the system 100 may avoid using text that is associated with another paragraph or section of the content.
- the left context or the right context may include padding tokens 220 .
- the padding tokens 220 enable the system 100 to keep the center word 215 centered while avoiding taking words from potentially unrelated context.
- the system 100 adds six padding tokens 220 to the left context of the centered selection 210 .
- the paragraph includes more than six words after the center word 215 , so the right context includes just words recognized from the content and does not need padding tokens.
- the system 100 may provide the centered selection 210 to a simulated hyperlink model.
- the simulated hyperlink model may provide intelligent selection 225 as well as one or more suggested operation in response to the centered selection 210 .
- the system 100 may select an operation with a highest probability and perform that operation using the intelligent selection 215 as a parameter to an intent for the mobile application that corresponds to the operation. For example, if the operation with the highest probability is a movie wiki application, the system 100 may invoke the wiki application with a search or share intent, taking Brad Pitt as the input for the intent. In such an implementation, display 200 b of FIG. 2B is not displayed.
- FIG. 2B illustrates an example of a display 200 b with a user interface that displays the suggested operation as a control, in accordance with disclosed implementations.
- operation control 230 may be an icon that represents the movie wiki application.
- the system may generate the display 200 b if the client device does not automatically perform the operation. If the user selects operation control 230 , the system 100 may activate the movie wiki application (e.g., switch focus to the movie wiki application or in other words the destination application) with a search or other intent.
- a search intent is an operating system standard that opens the application in a search state, or in other words a search user interface. Search intents can work with mobile applications and web applications.
- the search intent may support a parameter, so that the mobile application is provided with the intelligent selection as part of the search intent and opens or activates to a search result page or user interface. Implementations may also use other intents, either standard (i.e., supported by the operating system) or nonstandard (i.e., supported by the mobile application but not by the operating system), that can take the intelligent selection as a parameter.
- selection of operation control 230 may pass the parameter Brad Pitt as a query to the movie wiki mobile application, cause the client device to open or switch focus to the movie wild application, and the movie wiki mobile application may display a result page for the query.
- the system 100 reduces the input needed to perform the selection, search, and context switch required to look up Brad Pitt in the movie wiki application, which improves the user experience.
- the operation illustrated in FIG. 2B is an example only and other suggested operations may be presented to the user.
- the presentation of the operation control in FIG. 2B is illustrated in a bar that overlays part of the screen content generated by the source application. Implementations may include other arrangements, such as a carousel display, a circular display, a menu display, a pop-up window or icon, etc.
- the user interface of display 200 b illustrated in FIG. 2B may be optional, as in some implementations the simulated hyperlink application 162 may automatically initiate the movie wiki application.
- FIG. 3A is another example display 300 a of a mobile computing device in accordance with the disclosed subject matter.
- a client device of a simulated hyperlink system such as system 100 of FIG. 1 may provide the display 300 a of FIG. 3A .
- the user has performed an action, i.e., the simulated hyperlink indication, at location 305 .
- the system 100 may perform recognition on the display 300 a to recognize text generated by the source application.
- the system may determine that location 305 corresponds to the word “Pitt” and make that the center word 315 of a centered selection 310 .
- the system 100 may pad the center word 315 with six words of left context and six words of right context.
- FIG. 1 A client device of a simulated hyperlink system, such as system 100 of FIG. 1 may provide the display 300 a of FIG. 3A .
- the user has performed an action, i.e., the simulated hyperlink indication, at location 305 .
- the system 100 may perform recognition on the display 300 a to recognize
- the system 100 adds one padding token to the left context to avoid using words from a different paragraph while keeping the center word 315 centered.
- the system 100 may pad the center word with more or fewer words in the left context and right context.
- the system 100 may provide the centered selection to the simulated hyperlink model.
- the model may provide intelligent selection 320 and one or more predicted operations for the centered selection.
- FIG. 3B is an example display 300 b of a mobile computing device with two suggested operations for an intelligent selection from the centered selection of FIG. 3A , in accordance with the disclosed subject matter.
- the simulated hyperlink model has provided operation control 330 , which may represent a sports news application.
- the model may not be very certain about this choice, for example because the intelligent selection Brad Pitt is more often associated with movies than sports.
- the model may not be confident about an operation that represents a movie wiki application either.
- the system selects the higher ranking operation, e.g., represented by operation control 330 , for display in the user interface.
- the system may also provide a copy operation 325 in the user interface. Selection of the copy operation copies the intelligent selection 320 onto a clipboard. In some implementations, this may be the default operation performed automatically when no operations predicted by the model have a sufficiently high confidence or there are no predicted operations.
- the operation control 330 may be associated with an icon for the sports news mobile application and selection of control 330 , or in other words of the operation, may launch the sports news application with a search intent.
- the search intent may have the intelligent selection 320 as a parameter. Accordingly, the client device may launch the sports news application to a search result screen that has results responsive the query that includes the intelligent selection 320 .
- the example of FIG. 3B also illustrates a user interface that provides the user with an indication 335 of the intelligent selection 320 .
- the indication 335 may modify the appearance of the text, e.g., by highlighting, circling, or some other method of indicating the text as automatically selected.
- the indication 335 can be an overlay displayed on top of the screen being displayed, an underlay displayed behind the screen being displayed, or information configured to be added to the current screen in the display buffer of the mobile device.
- the user interface illustrated in FIG. 3B may provide the user with an opportunity to modify the intelligent selection, e.g., by expanding or contracting the indication 335 . In such implementations, such a change may be provided to the model as another training example.
- This training example may be used to personalize the model (e.g., by updating simulated hyperlink model 170 ) or may be used as feedback and further training for the general model (e.g., simulated hyperlink model 130 ).
- this feedback may be saved as another positive training example (e.g., that the centered selection predicts that selected operation).
- the system may generate a negative training example, which indicates the centered selection does not predict the operation(s) presented.
- the user may not have one of the mobile applications installed.
- the user may not have the sports news application that corresponds to the operation control 330 installed. Selection of the control 330 may cause the device to initiate a download process for the sports news application.
- the user interface of display 300 b may provide the user with knowledge of operations, or in other words mobile applications, that others consider helpful, even if the user does not know about the mobile applications.
- the system may convert the operation to a search intent for an Internet search mobile application, a dictionary app a wiki app, etc., or just a copy operation as discussed above.
- FIGS. 2A, 2B, 3A, and 3B work on text or images generated by any source application, and not just on text tied to an entity in a knowledge base, text that fits a template for an entity type, or applications that convert certain types of text to a hyperlink. While operation controls are illustrated as icon-based, operation controls could be text based or a combination of text and images. Thus, the operation controls are understood to include text based, image based, or a combination of text and image controls.
- FIG. 4 illustrates a flow diagram of an example process 400 for suggesting operations in response to an action associated with content displayed on a mobile computing device, in accordance with disclosed implementations.
- Process 400 may be performed by a simulated hyperlink system, such as system 100 of FIG. 1 .
- Process 400 may be used to determine an intelligent selection and suggested operations in response to the action, based on the location of the action and a simulated hyperlink model.
- Process 400 may begin by generating a simulated hyperlink model ( 405 ).
- the simulated hyperlink model may provide an intelligent selection and suggested operations, i.e., mobile applications with an intent, in response to a centered selection input.
- the intent can be one of any standard or nonstandard intents.
- FIG. 5 illustrates one example of building a simulated hyperlink model.
- the system may build the model on a server and push the model to a client device.
- the system may receive an action ( 410 ), or in other words, a simulated hyperlink indication, at the client device.
- the action is associated with a location on the screen of the client device.
- the system may use the location and a screen capture image to extract content being displayed and generate a centered selection from the content ( 415 ). For example, the system may perform text and image recognition on the screen capture image to determine the text and text equivalents of images that are currently displayed.
- the system may then determine a word closest to the location of the action.
- the word closest to the location is the center word.
- the system may then pad the center word with other words appearing before and after the center word in the context. The words appearing before the center word are left context and the words appearing after the center word are right context.
- the system may avoid using words from other paragraphs or sections.
- the system may not use words from a different paragraph or a different section in the left context or the right context.
- the system may pad the left context and right context, if needed, with one or more padding tokens.
- the padding tokens take the place of a word in the centered selection and enable the center word to remain in the center of the centered selection while excluding words from different paragraphs/sections/pages and still providing a centered selection with a predefined number of words.
- the predefined number of words may be any odd number and the number of words in the left context equals the number of words in the right context (with a padding token counting as a word).
- the system may provide the centered selection to the simulated hyperlink model ( 420 ).
- the model may be machine-learning algorithm trained to predict an intelligent selection and one or more operations given the centered selection.
- the system provides the centered selection one character at a time to the model to reduce the vocabulary of the model.
- the system may automatically initiate execution of the mobile application represented by an operation with a highest probability that also meets or exceeds a threshold ( 445 ).
- the system may initiate execution of the mobile application with an intent, using the intelligent selection as a parameter in the intent, as described in more detail below.
- the model may provide predicted or suggested operations for the centered selection, which the system may provide to the user ( 425 ).
- the system may provide the predicted or suggested operations when, for example, two or more operations have similar highest probabilities. Thus, the system may be unable to confidently decide the operation for the user.
- the system may also provide the predicted operation when the operation with the highest probability fails to meet a threshold.
- the system may add a copy operation or another default operation (e.g., search for the intelligent selection on the Internet) to the operations presented to the user as part of step 425 .
- the system may provide a selectable control for each operation that enables a user to select the operation.
- the operations represent intents for mobile applications, such as search intents or share intents.
- the operations can also represent search intents for websites, for example when the client device is a laptop running a browser.
- the system may highlight the intelligent selection on the display ( 430 ).
- the intelligent selection is the portion of the centered link that will be used in the intent.
- the intelligent selection could be only the center word, or could be the center word plus one or two surrounding words.
- the user interface may include a way for the user to change the intelligent selection. For example, the user may expand or contract the words included in the intelligent selection.
- the system waits for the user to select an operation control ( 435 , Yes) or to end the operation suggestion interface ( 435 , No). If the user does select a suggested operation ( 435 , Yes), the system may generate a positive training example from the centered selection, intelligent selection, and the selected operation ( 440 ).
- This positive training example can be used to train the model, e.g., either by personalizing a copy of the model on the client device or by further training the original model at the server, e.g., by sending the positive example to the server, with user consent.
- This additional positive example may enable the model to automatically choose the selected operation in the future, rather than display the user interface that requires the user to select an operation.
- the system may then initiate execution of the mobile application represented by the operation with an intent, using the intelligent selection as a parameter in the intent ( 445 ).
- the intent is a standard intent, such as a search intent or share intent.
- the client device switches context from whatever application was currently executing, e.g., the source application, to the mobile application represented by the selected operation, e.g., the destination application.
- the action may be associated with a search interface in a specific website that mirrors the mobile application, and the system may cause the browser to navigate to the search interface with a search intent using the intelligent selection as a parameter.
- the user is able to switch automatically to the destination application (e.g., the mobile application or the web mirror of the mobile application) using only the action received in step 410 .
- the operation may be associated with a mobile application that is not installed on the mobile device.
- the operation for the selected entity may be a secondary operation that, when selected, takes the user to an interface where the user can download and install the mobile application, or initiates installation of the mobile application automatically.
- selection of the operation in step 435 may enable the user to install the mobile application.
- the system may automatically initiate an intent using the intelligent selection as a parameter to open the newly installed mobile application.
- the system may substitute a browser-based search of the intelligent selection.
- the system may provide default options via a user interface, such as a browser search or a cut/copy option, for handling the intelligent selection.
- FIG. 5 illustrates a flow diagram of an example process 500 for generating a simulated hyperlink model, in accordance with disclosed implementations.
- Process 500 may be performed by a simulated hyperlink system, such as system 100 of FIG. 1 .
- Process 500 is an example of step 405 of FIG. 4 and may be used to build a simulated hyperlink model, such as model 130 or model 170 of FIG. 1 .
- Process 500 may begin by obtaining a website to mobile application mapping ( 505 ).
- the mapping may be provided, e.g., curated by hand.
- the system may build the mapping. For example, the system may use mobile application manifests to determine a website mirror for a mobile application.
- the system may augment the mapping by clustering similar mobile applications together and mapping all similar applications to a website mirror. For example, there may be several reservation mobile applications, e.g., for booking a flight, rental car, hotel, etc. and these may be clustered together using conventional clustering algorithms.
- the system may map each application in a cluster to a website mirror.
- the system may use an emulator to determine which mobile applications a website maps to. For example, the emulator may be configured to obtain a query from search records and to simulate execution of various mobile applications (e.g., those available via a web store). The emulator may determine whether a particular mobile application returns results similar to those of the website given the same query. If so, the emulator may map the website to the mobile application.
- the emulator may be configured to provide a query to a mobile application and determine whether the mobile application ends up in a content state, or in other words returns valid search results for the query. If so, the system may find a website mirror, e.g., one that returns similar results given the same query. In any of these manners the system may build the website to mobile application mapping.
- the mapping may include mappings for non http and https URI schemes. For example, the “mailto:” URI may be mapped to an email application, the “tel:” URI may be mapped to a dialing application, a “geo:” URI may be mapped to a map application, etc.
- the system may identify positive training examples for training the model ( 510 ).
- the positive training examples may be extracted from crawled documents, e.g., documents available over the Internet or an Intranet that include anchor tags.
- the crawled documents may be documents indexed by an Internet search engine.
- the system may select links in documents where the destination matches a whitelisted website or URI in the website to mobile application mapping. These links (i.e., the anchor tags and related information) are considered positive examples linking the anchor text to the mobile application(s) associated with the whitelisted website.
- the system may make a centered selection with the anchor text as the center portion, and the anchor text of the link being an example of an intelligent selection for the centered selection.
- the example may include, among other things, a centered selection extracted from the document, the anchor text, which represents an intelligent selection from the centered selection, and the mobile application.
- the system may also generate negative examples.
- a mobile application that does not map to a website that is linked to by the anchor text may be a negative example.
- the system may use the positive training examples and the negative ones to train the simulated hyperlink model ( 515 ).
- the system may provide the trained model to a client device ( 520 ).
- the model may be pushed to client devices when a simulated hyperlink application installed or the model is updated.
- the simulated hyperlink application may pull the model from the server, e.g., as part of an application update.
- the system may determine whether to personalize the model ( 525 ). If no personalization is done ( 525 , No), process 500 ends. Otherwise ( 525 , Yes), the system may identify positive training examples from search records associated with the client device or with the user of the client device ( 530 ).
- the system may use a screen capture index, a user profile or device profile to reweight training examples.
- the system may use the updated examples to further train the model ( 535 ).
- the model may be trained to predict actions most relevant to the user. Process 500 then ends.
- FIG. 6 shows an example of a generic computer device 600 , which may be operated as server 110 , and/or client 150 of FIG. 1 , which may be used with the techniques described here.
- Computing device 600 is intended to represent various example forms of computing devices, such as laptops, desktops, workstations, personal digital assistants, cellular telephones, smartphones, tablets, servers, and other computing devices, including wearable devices.
- the components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 600 includes a processor 602 , memory 604 , a storage device 606 , and expansion ports 610 connected via an interface 608 .
- computing device 600 may include transceiver 646 , communication interface 644 , and a GPS (Global Positioning System) receiver module 648 , among other components, connected via interface 608 .
- Device 600 may communicate wirelessly through communication interface 644 , which may include digital signal processing circuitry where necessary.
- Each of the components 602 , 604 , 606 , 608 , 610 , 640 , 644 , 646 , and 648 may be mounted on a common motherboard or in other manners as appropriate.
- the processor 602 can process instructions for execution within the computing device 600 , including instructions stored in the memory 604 or on the storage device 606 to display graphical information for a GUI on an external input/output device, such as display 616 .
- Display 616 may be a monitor or a flat touchscreen display.
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 600 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 604 stores information within the computing device 600 .
- the memory 604 is a volatile memory unit or units.
- the memory 604 is a non-volatile memory unit or units.
- the memory 604 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the memory 604 may include expansion memory provided through an expansion interface.
- the storage device 606 is capable of providing mass storage for the computing device 600 .
- the storage device 606 may be or include a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in such a computer-readable medium.
- the computer program product may also include instructions that, when executed, perform one or more methods, such as those described above.
- the computer- or machine-readable medium is a storage device such as the memory 604 , the storage device 606 , or memory on processor 602 .
- the interface 608 may be a high speed controller that manages bandwidth-intensive operations for the computing device 600 or a low speed controller that manages lower bandwidth-intensive operations, or a combination of such controllers.
- An external interface 640 may be provided so as to enable near area communication of device 600 with other devices.
- controller 608 may be coupled to storage device 606 and expansion port 614 .
- the expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 600 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 630 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system. In addition, it may be implemented in a computing device, such as a laptop computer 632 , personal computer 634 , or tablet/smart phone 636 . An entire system may be made up of multiple computing devices 600 communicating with each other. Other configurations are possible.
- FIG. 7 shows an example of a generic computer device 700 , which may be server 110 of FIG. 1 , which may be used with the techniques described here.
- Computing device 700 is intended to represent various example forms of large-scale data processing devices, such as servers, blade servers, datacenters, mainframes, and other large-scale computing devices.
- Computing device 700 may be a distributed system having multiple processors, possibly including network attached storage nodes, that are interconnected by one or more communication networks.
- the components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Distributed computing system 700 may include any number of computing devices 780 .
- Computing devices 780 may include a server or rack servers, mainframes, etc. communicating over a local or wide-area network, dedicated optical links, modems, bridges, routers, switches, wired or wireless networks, etc.
- each computing device may include multiple racks.
- computing device 780 a includes multiple racks 758 a - 758 n.
- Each rack may include one or more processors, such as processors 752 a - 752 n and 762 a - 762 n.
- the processors may include data processors, network attached storage devices, and other computer controlled devices.
- one processor may operate as a master processor and control the scheduling and data distribution tasks.
- Processors may be interconnected through one or more rack switches 758 , and one or more racks may be connected through switch 778 .
- Switch 778 may handle communications between multiple connected computing devices 780 .
- Each rack may include memory, such as memory 754 and memory 764 , and storage, such as 756 and 766 .
- Storage 756 and 766 may provide mass storage and may include volatile or non-volatile storage, such as network-attached disks, floppy disks, hard disks, optical disks, tapes, flash memory or other similar solid state memory devices, or an array of devices, including devices in a storage area network or other configurations.
- Storage 756 or 766 may be shared between multiple processors, multiple racks, or multiple computing devices and may include a computer-readable medium storing instructions executable by one or more of the processors.
- Memory 754 and 764 may include, e.g., volatile memory unit or units, a non-volatile memory unit or units, and/or other forms of computer-readable media, such as a magnetic or optical disks, flash memory, cache, Random Access Memory (RAM), Read Only Memory (ROM), and combinations thereof. Memory, such as memory 754 may also be shared between processors 752 a - 752 n. Data structures, such as an index, may be stored, for example, across storage 756 and memory 754 .
- Computing device 780 may include other components not shown, such as controllers, buses, input/output devices, communications modules, etc.
- An entire system such as system 100 , may be made up of multiple computing devices 780 communicating with each other.
- device 780 a may communicate with devices 780 b, 780 c, and 780 d, and these may collectively be known as system 100 .
- system 100 of FIG. 1 may include one or more computing devices 780 . Some of the computing devices may be located geographically close to each other, and others may be located geographically distant.
- the layout of system 700 is an example only and the system may take on other layouts or configurations.
- a mobile device may include a display device, at least one processor, and memory storing instructions that, when executed by the at least one processor, cause the mobile device to perform operations including generating a centered selection responsive to detecting an action on content displayed on the display device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given a centered selection, the operation being associated with an intent for a mobile application, and initiating at least one of a) display of a user interface permitting selection of the operation, which uses the intent, or b) performance of the operation using the intent.
- the simulated hyperlink model may also be trained to provide an intelligent selection from the centered selection and initiating the operation occurs using the intelligent selection as a parameter for the intent.
- initiating display of the user interface can include displaying a menu with an icon for the mobile application and with an option to copy the intelligent selection.
- the operations may also include modifying the appearance of text displayed on the display that corresponds to the intelligent selection.
- the operations may also include initiating, responsive to receiving a selection of the operation from the user interface, performance of the operation using the intelligent selection.
- Such implementations may include generating a positive training example using the centered selection, the mobile application and/or up-weighting a weight for the positive training example.
- initiating display of the user interface includes displaying an icon for the mobile application.
- the centered selection may include a word nearest a location for the action and an equal quantity of words from the content that appears prior to the word nearest the location and following the word nearest the location.
- the words prior to and following the word nearest the location exclude words in different paragraphs and generating the centered selection include determining that the quantity of words prior to the word nearest the location is less than the equal quantity and adding padding tokens to the centered selection, the padding tokens being counted as words prior to the word nearest the location, so that the quantity of words prior to the word nearest the location s the equal quantity.
- the operations may also include receiving the simulated hyperlink model from a server, generating training examples from hyperlinks in a screen capture index for a user of the mobile device, and using the training examples to train the simulated hyperlink model, resulting in a personalized simulated hyperlink model.
- a method includes identifying, from a document corpus, one or more documents having a hyperlink to a whitelisted website, the whitelisted website being one of a plurality of websites in a mapping of websites to mobile applications, generating positive training examples for a simulated hyperlink model using the one or more documents, each positive training example having a centered selection generated from the respective document, a website, a weight corresponding to a page rank of the website, and a mobile application mapped to the website, and training the simulated hyperlink model, using the positive training examples, to predict an operation for the mobile application given the centered selection.
- the method may also include identifying a website in a manifest of a first mobile application; and adding the website and the first mobile application to the mapping.
- the manifest specifies an intent and the operation for the mobile application is the intent.
- the mobile application may be a first mobile application and the method also includes clustering similar mobile applications in a web store, the first mobile application appearing in a first cluster, identifying a document with a hyperlink to the website, determining an intelligent selection based on the hyperlink, verifying that a result generated by the first mobile application for the intelligent selection is similar to a result generated by a second mobile application for the intelligent selection, the second mobile application being in the first cluster, and adding, responsive to the verifying, the website and the second mobile application to the mapping.
- the method may also include personalizing the model based on a screen capture index for a user of a mobile device.
- the mapping may include records mapping a non-http uniform resource indicator (URI) to a mobile application and the one ore more documents include a hyperlink using the non-http URI.
- the centered selection includes anchor text for the hyperlink and the model is further trained to predict the anchor text as an intelligent selection.
- URI uniform resource indicator
- a method includes generating, responsive to detecting a simulated hyperlink indication, a centered selection from content displayed on a display of a mobile computing device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given the centered selection, the operation being associated with an intent for a mobile application, and initiating the operation using the intent.
- generating the centered selection can include performing text and image recognition on a screen capture of the content to determine words represented in the content and determining a word closest to a location of the simulated hyperlink model as a center word in the centered selection.
- generating the centered selection can also include using padding tokens in place of words in the centered selection to avoid including words from different sections.
- the simulated hyperlink model may also trained to make an intelligent selection from the centered selection, the intelligent selection representing a portion of the centered selection and using the intelligent selection as a parameter for the intent.
- the operation may be a first operation and the method also includes receiving the first operation and a second operation from the simulated hyperlink model, determining a probability score for the first operation and a probability score for the second operation are similar, providing a user interface that enables a user of the mobile computing device to select the first operation or the second operation, receiving a selection of the first operation, generating a positive training example from the centered selection and the first operation, and initiating the first operation using the intent.
- the method may also include obtaining, responsive to detecting the simulated hyperlink indication, a partial screen capture image, wherein the centered selection is obtained from the partial screen capture image.
- Various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- a programmable processor which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
- Due to the use of mobile devices, such as smartphones and tablets, user interaction with mobile applications has been increasing. As users move away from web-based browsers to using mobile devices they often lose the ability to easily transfer data from one mobile app to another. In general, mobile applications are single purpose and very good at one specific thing, but moving information between mobile applications can be cumbersome and a user may not know which app is good for a given purpose, or even when to look for an app to help them out.
- Implementations provide simulated hyperlinks for content generated on a mobile device. The simulated hyperlink may perform an operation or provide the user with the opportunity to select between two operations after receiving an action from the user (e.g., a long tap, hard tap, etc.) indicative of intent to initiate an operation. The operations may be intents for other mobile applications and can be based on a simulated hyperlink model trained using a mapping of websites to mobile applications and on a repository of crawled documents with anchor tags. A client device employing disclosed implementations makes a centered selection from the content closest to a location of the action. The centered selection can include a fixed quantity of words appearing to the right of and to the left of a center word, e.g., a word or text equivalent for an image located closest to a location of the action. The system may pad the fixed quantity of words if needed, e.g., to avoid using words in other sections or paragraphs. The centered selection is used to provide context for the model to select an operation and make an intelligent selection from the centered selection to use as a parameter for the operation. The system may automatically perform the operation, may get user approval prior to performing the operation, or may offer two or more operations.
- According to certain aspects of the disclosure, a mobile device may include a display device, at least one processor, and memory storing instructions that, when executed by the at least one processor, cause the mobile device to perform operations including generating a centered selection responsive to detecting an action on content displayed on the display device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given a centered selection, the operation being associated with an intent for a mobile application, and initiating at least one of a) display of a user interface permitting selection of the operation, which uses the intent, or b) performance of the operation using the intent. The simulated hyperlink model may also be trained to provide an intelligent selection from the centered selection and initiating the operation occurs using the intelligent selection as a parameter for the intent.
- According to certain aspects of the disclosure, a method includes identifying, from a document corpus, one or more documents having a hyperlink to a whitelisted website, the whitelisted website being one of a plurality of websites in a mapping of websites to mobile applications, generating positive training examples for a simulated hyperlink model using the one or more documents, each positive training example having a centered selection generated from the respective document, a website, a weight corresponding to a page rank of the website, and a mobile application mapped to the website, and training the simulated hyperlink model, using the positive training examples, to predict an operation for the mobile application given the centered selection.
- According to certain aspects of the disclosure, a method includes generating, responsive to detecting a simulated hyperlink indication, a centered selection from content displayed on a display of a mobile computing device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given the centered selection, the operation being associated with an intent for a mobile application, and initiating the operation using the intent.
- In one general aspect, a computer program product embodied on a computer-readable storage device includes instructions that, when executed by at least one processor formed in a substrate, cause a computing device to perform any of the disclosed methods, operations, or processes. Another general aspect includes a system and/or a method for extracting text displayed on a screen in response to a user action and providing an operation for selected portions of the text located proximate the location for the action, substantially as shown in and/or described in connection with at least one of the figures, and as set forth more completely in the claims.
- One or more of the implementations of the subject matter described herein can be implemented so as to realize one or more of the following advantages. As one example, implementations may provide a way for a user to seamlessly transfer information between mobile applications, enabling a user to lookup additional information with minimal effort. As another example, implementations may improve the user experience by suggesting applications that can help the user find/handle information, even though the user may not have knowledge of the application. Thus implementations help the user discover more effective or popular tools. As another example, implementations improve the user experience by helping the user perform tasks more quickly, e.g. with fewer gestures from the user. In some implementations, the operations suggested may be customized for the user of the mobile device, making it more likely that the user finds the suggested operation helpful. Implementations also provide operations for any selected text, not just text that corresponds to an entity in a personal or public knowledge graph. Thus, implementations have broader utility than entity-based operation suggestion systems. Implementations improve the user experience by predicting applications that help the user find out more information about a selection and by enabling the user to navigate to the application with minimal input from the user. Implementations also provide context for operation selection, generating better or more accurate suggested operations, which can allow for automatic initiation of the operation with higher accuracy. These advantages all improve the user experience.
- The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
-
FIG. 1 is a block diagram illustrating an example system in accordance with the disclosed subject matter. -
FIG. 2A is an example display of a mobile computing device and a centered selection generated responsive to an action, in accordance with the disclosed subject matter. -
FIG. 2B is an example display of a mobile computing device with a suggested operation for an intelligent selection from the centered selection ofFIG. 2A , in accordance with the disclosed subject matter. -
FIG. 3A is another example display of a mobile computing device and a centered selection generated responsive to an action, in accordance with the disclosed subject matter. -
FIG. 3B is an example display of a mobile computing device with two suggested operations for an intelligent selection from the centered selection ofFIG. 3A , in accordance with the disclosed subject matter. -
FIG. 4 illustrates a flow diagram of an example process for suggesting operations in response to an action associated with content displayed on a mobile computing device, in accordance with disclosed implementations. -
FIG. 5 illustrates a flow diagram of an example process for generating a simulated hyperlink model, in accordance with disclosed implementations. -
FIG. 6 shows an example of a computer device that can be used to implement the described techniques. -
FIG. 7 shows an example of a distributed computer device that can be used to implement the described techniques. - Like reference symbols in the various drawings indicate like elements.
- Implementations include systems and methods that automatically select text in response to a user action and predict or automatically perform an operation for the selected text. The system may perform the operation using an intelligent selection taken from a centered selection that is based on a location of the action. The intelligent selection may be text displayed on the screen or text equivalent for an image displayed on the screen. The text or image displayed on the screen need not be an existing hyperlink. In other words, the application that generated the text or image for display did not associate the operation with the text/image. Instead, the action, which differs from a single-click action typically associated with intent to follow a hyperlink, triggers a classifier that predicts the operation for the text or image based on surrounding context. The context may be derived from the content surrounding the location of the action. The context may be in the form of a centered selection, which includes text or padding tokens surrounding the text (or text equivalent for an image) closest to a location of the action. The operation predicted by the classifier is not a default action, such as a copy or insert operation, but is predicted based on the context of the action, e.g., the centered selection.
- The system may determine the operation based on the centered selection and may automatically perform the operation or may ask the user to confirm performance of the operation. The operation may be for a mobile application or a type of mobile application. The operation may initiate launch of a mobile application corresponding to the operation with an intent that takes a selected portion, e.g., intelligent selection, from the centered selection as a parameter. An intent is an operation supported by a mobile application. A search intent and a share intent are common types of intent. The search intent allows the system to link to, or activate, a mobile application in its search state given a query parameter. The system may use nonstandard intents as well. For example, a mobile applicant may indicate an intent in a manifest file. Such nonstandard intents are supported by the mobile application but not necessarily by the operating system. In general, an operation may include any intent that can take the intelligent selection as a parameter. The system can operate across all applications used on a mobile device, making the user experience consistent. The simulated hyperlink functionality thus need not be limited to a particular mobile application. Nor is the simulated hyperlink functionality limited to recognized entities, e.g., entities represented in a personal or public knowledge base. Moreover, the operations performed via a simulated hyperlink may be for mobile applications that the user has not yet installed and, thus, can serve as a way to inform the user about useful mobile applications.
-
FIG. 1 is a block diagram of a simulated hyperlink system in accordance with an example implementation. Thesystem 100 may be used to initiate an operation in response to an action by the user based on content displayed on a mobile device, even when the action is performed on content that is not a hyperlink or otherwise actionable. The operation may be an intent (e.g., standard or nonstandard) for a mobile application or a copy command, or a user interface that enables the user to select from among two or more operations or to install a mobile application the user has not yet installed on the mobile device. In some implementations, the operation may also launch a web mirror for the mobile application. When a mobile application is represented by the operation, the mobile application may be referred to as the destination application and the mobile application that generated the content selected by the user may be considered a source application. The simulated hyperlink system provides a way to move content from the source application to the destination application with no input from the user except the action. The operation(s) offered or performed in response to the action may be based on a model, e.g., a machine learning model trained to predict one or more operations given a centered selection. The depiction ofsystem 100 inFIG. 1 is a client-server system, with some data processing occurring at aserver 110. However, other configurations and applications may be used. For example, the data processing may occur exclusively on theclient device 150. In some implementations, a user of theclient device 150 may indicate that portions of the processing be performed at theserver 110. Thus, implementations are not limited to the exact configurations illustrated. - The
simulated hyperlink system 100 may include aserver 110, which may be a computing device or devices that take the form of a number of different devices, for example a standard server, a group of such servers, or a rack server system. For example,server 110 may be implemented in a distributed manner across multiple computing devices. In addition,server 110 may be implemented in a personal computer, for example a laptop computer. Theserver 110 may be an example ofcomputer device 600, as depicted inFIG. 6 , orsystem 700, as depicted inFIG. 7 .Server 110 may include one or more processors formed in a substrate configured to execute one or more machine executable instructions or pieces of software, firmware, or a combination thereof. The processors can be semiconductor-based—that is, the processors can include semiconductor material that can perform digital logic. Theserver 110 can also include one or more computer memories. The memories, for example, a main memory, may be configured to store one or more pieces of data, either temporarily, permanently, semi-permanently, or a combination thereof. The memories may include any type of storage device that stores information in a format that can be read and/or executed by the one or more processors. The memories may include volatile memory, non-volatile memory, or a combination thereof, and store modules or engines that, when executed by the one or more processors, perform certain operations. In some implementations, the modules may be stored in an external storage device and loaded into the memory ofserver 110. - The modules of the
simulated hyperlink system 100 may include asimulated hyperlink engine 120. Thesimulated hyperlink engine 120 may be configured to generate training examples for training thesimulated hyperlink model 130 based on amapping 132 of whitelisted websites to mobile applications. The whitelisted websites may be websites that are useful for performing operations. In other words, the websites may be websites that include a search interface and provide content in response to a query. Non-exhaustive examples of such websites include shopping sites, wikis, reservation sites, rating sites, travel sites, ticket sites, etc. In some implementations, the whitelist and the mapping of whitelisted websites to mobile applications is curated by hand and provided to thesimulated hyperlink engine 120. In some implementations, an intent (e.g., search, share, etc.) may be included in themapping 132. - In some implementations, the simulated hyperlink engine 120 (or another module) may generate the whitelist and the
mapping 132. For example, thesimulated hyperlink engine 120 may search mobile application manifests 136 to determine websites mentioned in themanifests 136.Such manifests 136 conventionally include information about an application, such as the developer, an icon, a description, a version, etc. Some of this information may be used to help users decide whether to install the application. Some of the information may be intended for other application developers, such as application programming interfaces (APIs), and intents supported by the mobile application. Some mobile applications may include nonstandard intents and these intents may be identified in themanifests 136. Themanifests 136 may thus contain various kinds of data about the mobile application, and sometimes a manifest includes a reference to a website that offers functionality similar to that of the mobile application. Such websites are sometimes referred to as web mirrors. The manifest for a mobile application may be submitted by the mobile application developer to a web store. Thesimulated hyperlink engine 120 may consider any website mentioned in the mobile application manifests 136 a whitelisted website and may map the website to the mobile application, e.g., by adding the website and mobile application to the website-mobile application map 132. If a mobile application supports more than one intent, thesimulated hyperlink engine 120 may add multiple records mapping the website to the mobile application, each one having a different intent. - The mapping may also include other uniform resource indicators (URIs) mapped to a mobile application. While http and https are the most common URI type, the anchor tag of a hyperlink sometimes includes other URIs in the destination. For example, “mailto:” is a URI that can be mapped to an email application and “tel:” is a URI that can be mapped to a dialing application. These non-http URIs may map to a mobile application or mobile application type, as they typically perform a specific function.
- In some implementations, the simulated hyperlink engine 120 (or another module) may generate entries in the website-
mobile application map 132 using anemulator 122. Theemulator 122 may be configured to emulate a client device in a batch environment. In other words, theemulator 122 may be configured to execute a mobile application and determine screen content generated by the mobile application. In some implementations, theemulator 122 may send an intent with a query to a mobile application and determine whether the mobile application returns content, or in other words returns results for the query. In some implementations, the content may be information in a frame buffer. In some implementations, the content may be information used by the operating system to generate a frame buffer. In some implementations, the content may be from an API. When the mobile application does return content, theemulator 122 may find an equivalent website, e.g., one that returns the same or similar results for the query. When theemulator 122 finds an equivalent website theemulator 122 may add the website and the mobile application and the intent to the website-mobile application map 132. - The
simulated hyperlink engine 120 may use the website-mobile application map 132 and crawleddocuments 134 to generate positive training examples for training thesimulated hyperlink model 130. The crawleddocuments 134 may include documents available via the Internet and may represent an index generated from the source documents. The crawleddocuments 134 may also include other documents that link to documents available via the Internet. Thesimulated hyperlink engine 120 may be configured to inspect hyperlinks in crawleddocuments 134 for hyperlinks that link to a website or URI in themap 132. When such a hyperlink is identified, the system may use it to generate a positive training example for thesimulated hyperlink model 130. For example, the anchor text (i.e., the words that are part of the hyperlink and appear between the anchor-begin tag and anchor-end tag) may be used to predict the mobile application associated with the whitelisted website. In other words, thesimulated hyperlink engine 120 may include a training example that teaches thesimulated hyperlink model 130 that given the anchor text, the mobile application is a good candidate for finding more information about the anchor text. - In some implementations, the
simulated hyperlink engine 120 may provide a centered selection from the source document in crawleddocuments 134 with the training example. The centered selection may provide context for helping thesimulated hyperlink model 130 predict the mobile application correctly. A centered selection may include the anchor text padded on either side by words surrounding the hyperlink from the source document. In some implementations, the centered selection has a fixed length, or in other words a preselected quantity of words. For example, the centered selection may include thirteen words. In some implementations, the anchor text may represent the middle of the centered selection. Thus, for example, if a hyperlink includes three words as part of the anchor tag (i.e., after the begin-anchor tag and before the end-anchor tag), the three words may occur in positions 6, 7, and 8 of the centered selection. The anchor text may be padded on either side by words from the source document that appear just prior to and just after the anchor text. In some implementations, words are not taken from a different paragraph, page, or section in the source document. In such an implementation, the centered selection may be padded with a token that represents the absence of words. For example, if the anchor text appears as the first three words of a sentence in the source document, the centered selection may include five padding tokens, followed by the three words, and then followed by five more words from the sentence. The centered selection provides the context of surrounding words to help thesimulated hyperlink model 130 determine between different websites used in different contexts with the same or very similar anchor text. Thesimulated hyperlink engine 120 may generate numerous training examples using the crawleddocuments 134. - In some implementations, the
simulated hyperlink engine 120 may increase the quantity of positive examples by clustering similar mobile applications. For example, thesimulated hyperlink engine 120 may cluster mobile applications, e.g., based on data available at a web store or in the mobile application manifests 136, and may use the clusters to create additional training examples. In some implementations, mobile applications in a cluster may be considered a type of mobile application, i.e., a mobile application type, and the website-mobile application map 132 may map the website to the cluster, or in other words the type of mobile application. Thus, any mobile application in the cluster maps may map to the website and thesimulated hyperlink engine 120 may generate training examples for each mobile application in the cluster for anchor text that corresponds to the website. In some implementations, the training example may predict the mobile application type, or in other words the cluster, given the anchor text. In some implementations, thesimulated hyperlink engine 120 may use theemulator 122 to verify whether the mobile applications in a cluster produce similar results. For example, theemulator 122 may be provided the anchor text in a search intent for the mobile applications in a cluster and may compare results returned for the anchor text. If a particular mobile application in the cluster does not provide similar results to the other mobile applications in the cluster, that particular mobile application may be removed from the cluster and used as a negative training example. Accordingly, thesimulated hyperlink model 130 may be trained to exclude certain applications. Similarly, thesimulated hyperlink engine 120 may use information in the crawleddocuments 134 and mobile application manifests 136 to generate other negative training examples. For example, if a particular query lacks a web mirror for a mobile application, i.e., thesimulated hyperlink engine 120 is unable to make a good match between highly ranked web pages for the query and a corresponding mobile application, the query may be used as a negative example for one or more mobile applications. In some implementations, thesimulated hyperlink engine 120 may also generate other negative training examples, for example by pairing anchor text or a centered selection with a mobile application/website that does not match the website in the anchor tag of the source document. - In addition to predicting an operation given a centered selection, the
simulated hyperlink model 130 may also be trained to make an intelligent selection from the centered selection. In the training example, the text that is the anchor text may be a positive example of the intelligent selection for that centered selection. This enables thesimulated hyperlink model 130 choose text from future center selections that most likely represents the main concept and enables the model to select an entire noun phrase (e.g., President of the United States) and not just one word. Thus, thesimulated hyperlink model 130 may provide an intelligent selection as well as one or more operation as output. Each operation provided as output may have an associated probability score. The probability score may represent how confident the model is that the operation is correctly predicted for the given centered selection. - The
simulated hyperlink model 130 may be any type of machine-learning algorithm, such as a long short-term memory (LSTM) neural network, feed-forward neural network, a support vector machine (SVM) classifier etc., that can predict one or more operations (e.g., intents for mobile applications) given a query. In some implementations, thesimulated hyperlink engine 120 may train thesimulated hyperlink model 130 to accept the query character by character and themodel 130 may make a prediction only when the end of input character is encountered. In such implementations, themodel 130 uses a very small vocabulary making it compact and suitable for storage and execution on a mobile device. In some implementations, themodel 130 may include a character embedding layer, two LSTM layers with 64 nodes each, and a softmax classification layer. In some implementations, themodel 130 may be trained to take words as input instead of characters. - The system may push the
simulated hyperlink model 130 to one or more client devices, e.g.,client device 150 andclient device 190.Client device 150 may be any mobile personal computing device, such as a smartphone or other handheld computing device, a tablet, a wearable computing device, etc., that operates in a closed mobile environment rather than a conventional open web-based environment. Client device may also be any personal computing device.Client device 150 may be an example ofcomputer device 600, as depicted inFIG. 6 .Client device 150 may be one mobile device used byuser 180.User 180 may also have other mobile devices, such asclient device 190. -
Client device 150 may include one or more processors formed in a substrate configured to execute one or more machine executable instructions or pieces of software, firmware, or a combination thereof. Theclient device 150 may thus include one or more computer memories configured to store one or more pieces of data, either temporarily, permanently, semi-permanently, or a combination thereof. Theclient device 150 may thus includeapplications 155, which represent machine executable instructions in the form of software, firmware, or a combination thereof. The components identified in theapplications 155 may be part of the operating system. In some implementations theapplications 155 may be mobile applications developed for a mobile processing environment. Conventionally, mobile applications operate in a closed environment, meaning that the user employs separate applications to perform activities usually performed in a web-based browser environment. For example, rather than going to bookit.com to book a hotel, a user of theclient device 150 can use a mobile application inmobile applications 155 provided by bookit.com. As previously discussed, a mobile application may have web pages that mirror the mobile application, e.g., providing the same or similar content as the mobile application. Thus, in some implementations, the web page(s) (e.g., at bookit.com) may be considered a web mirror of the mobile application (e.g., an app provided by or associated with bookit.com). - The
applications 155 may include a screen capture application 160 and asimulated hyperlink application 162. In some implementations, one or more of these applications can be provided by the operating system of theclient device 150. In some implementations, one or more of these applications can be downloaded and installed by the user. - The screen capture application 160 can include various functionalities. In some implementations, the screen capture application 160 may be configured to get textual information represented on the screen from an application program interface (API). In some implementations, the screen capture application 160 may be built into the operating system, which can determine the content of text fields displayed on the current screen. In some implementations, the screen capture application 160 may be configured to capture the current screen of the
client device 150. The screen capture application 160 may capture the screen by copying or reading the contents of the device's frame buffer. The captured screen may, thus, be an image and is referred to as a captured image. In some implementations, the screen capture application 160 may capture part of the screen. For example, the screen capture application 160 may capture some region around the location of the action from the user, i.e., the simulated hyperlink indication. The screen capture application 160 may capture a partial region measured in pixels around the location of the action or may ask the API for a particular amount of on-screen text surrounding the location of the action. Thus, the screen capture image may represent less than all the content displayed on the screen, e.g., a partial screen capture image. - The screen capture application 160 may capture the screen at intervals. The interval can be small, for example every half second or every second. In some implementations, the screen capture application 160 may be configured to capture the screen every time a touch event occurs (e.g., every time the user touches the screen to scroll, zoom, click a link etc.), in response to an explicit user request or command, or when the device transitions from one mobile application to another mobile application. In some implementations, the screen capture application 160 may increase the interval at which a screen capture occurs when the screen does not change. In other words, when the screen is static, the screen capture application 160 may capture images less often. The screen capture application 160 may provide the captured screen images and metadata to a recognition engine, which may be on the
client device 150 or a server, such asserver 110. The metadata may include the timestamp, the mobile device type, a mobile device identifier, the mobile application running when the screen was captured, e.g., the application that generated the screen, etc. In some implementations, the metadata may also include which applications are active, the location of the device, ambient light, motion of the device, etc. The system may use this additional device information to assist in content analysis (e.g., disambiguation), generating suggested operations (e.g., reducing the quantity of suggestions when the device is moving, deciding what content is most relevant), etc. - In some implementations, the screen capture application 160 can include an indexing engine configured to index a screen capture image according to the text, entities, images, logos, etc. identified in the image. Thus, for example, the indexing engine may generate index entries for a captured image. In some implementations the indexing engine may be on a server, such as
server 110, and the screen capture application 160 may provide the captured image and/or recognized items in the captured image to the server. The index may be an inverted index, where a key value (e.g., word, phrase, entity, image, logo, etc.) is associated with a list of images that include the key value or from which the key value was recognized. The index may include metadata (e.g., where on the captured image the key value occurs, a rank for the key value for the image, etc.) associated with each captured image in the list. In some implementations, the index may also include a list of captured images indexed by a timestamp. The indexing engine may store the index in memory, for example inscreen capture index 172. Of course, in some implementations the system may store the index in a user account on a server in addition to or instead of on theclient device 150. The user of theclient device 150 may control when the screen capture application 160 is active. For example, the user may specify that the screen capture application 160 is active only when other specifiedmobile applications 155 are running (e.g., only when in a social media mobile application). The user may also manually turn the screen capture application 160 on and off, for example via a settings application. In some implementations, the user may invoke the screen capture application 160 with a gesture or action that also invokes thesimulated hyperlink application 162. - The
client device 150 may also include asimulated hyperlink application 162. Thesimulated hyperlink application 162 may be configured to usesimulated hyperlink model 170 orsimulated hyperlink model 130 to determine an operation to perform in response to an action, the action being a gesture, input, or a series of gestures or inputs from a user that signals intent to initiate thesimulated hyperlink application 162. The action is referred to as a simulated hyperlink indication. In some implementations, the action may also invoke the screen capture application 160. In some implementations, the action, i.e., a simulated hyperlink indication, may be a long press, a two finger click, a swipe, etc. In some implementations, the simulated hyperlink indication may be dragging a selection control to the portion of the screen that receives the selection. In some implementations, the selection control may be an icon that can be moved and released. The release of the icon may be the action that initiates the simulated hyperlink. In some implementations, the simulated hyperlink indication may verbal, e.g., a voice command to select a word or words or an image displayed on the screen. If the action occurs on a portion of the screen with an image, e.g., via the long press over an icon or picture, thesimulated hyperlink application 162 may be configured to determine text associated with the image and use the text in place of the image. For example, via image recognition the image may be determined to be of an entity in a knowledge base that has a title, nickname, or common name associated with it. - Responsive to the action,
simulated hyperlink application 162 may determine text to provide to thesimulated hyperlink model 170. In some implementations, this may include using the screen capture application 160 to perform recognition on the content displayed on the screen. In some implementations, the screen capture application 160 may have already performed recognition on the content. Thesimulated hyperlink application 162 may determine the text that is located closest to a location of the action. The location of the action may be the screen coordinates that correspond to the action. Thesimulated hyperlink application 162 may determine a centered selection based on the location. For example, thesimulated hyperlink application 162 may make the word closest to the location of the action the center word and include words to the left of this center word and to the right of this centered word as the centered selection. The number of words to the left and the number of words to the right may be equal. In some implementations, thesimulated hyperlink application 162 may avoid using words from a different paragraph or section in the centered selection. For example, if the center word is the first word in a new paragraph, thesimulated hyperlink application 162 may use padding tokens instead of words from the previous paragraph to the left of the center word. - The
simulated hyperlink application 162 may use the selection, e.g., the text closest to the location of the action or the centered selection, as input to the simulated hyperlink model. Thesimulated hyperlink application 162 may use a simulated hyperlink model, such assimulated hyperlink model 170 orsimulated hyperlink model 130, to determine suggested operations for the centered selection. In some implementations, thesimulated hyperlink model 170 may be a copy of thesimulated hyperlink model 130. In some implementations, thesimulated hyperlink model 170 may be a personalized copy of thesimulated hyperlink model 130. For example, theclient device 150 may receive thesimulated hyperlink model 130 from theserver 110, or an updatedsimulated hyperlink model 130, and may perform further training of the model on theclient device 150. For instance, thesimulated hyperlink application 162 may useuser data 176, which may include queries submitted from theclient device 150 or information on the use of certainmobile applications 155, orscreen capture index 172 to generate or re-weight positive training examples for thesimulated hyperlink model 170. These additional training examples may personalize thesimulated hyperlink model 170 so that thesimulated hyperlink application 162 offers suggested or predicted actions more relevant to theuser 180. For example, ifuser 180 uses a first reservation mobile application often, but never uses a second reservation mobile application, thesimulated hyperlink application 162 may upweight the first reservation mobile application for the model so thesimulated hyperlink application 162 suggests the first reservation application and not the second one. - The
simulated hyperlink model 170 is configured or trained to predict an intelligent selection and one or more operations given content from the screen. For example, thesimulated hyperlink application 162 may provide themodel 170 with a centered selection and themodel 170 may provide one or more suggested operations as well as an intelligent selection from the centered selection. A suggested operation includes an intent for a mobile application. The intent may take the intelligent selection as a parameter. The operation can also include a default operation, such as a copy operation or a search intent for an Internet search engine. For example, the copy operation may copy the intelligent selection to the clipboard and the search engine intent may submit the intelligent selection as an Internet query. A default operation may be the operation if no other operation has a high enough confidence or when no operation is predicted. In other words, if the probability score for a predicted operation is not high enough (e.g., doesn't reach a minimum threshold), thesimulated hyperlink application 162 may perform a default operation on, e.g., a copy of, the intelligent selection. In some implementations, the system may generate a user interface that offers the copy operation or other default operation and one or two of the suggested operations with highest probability scores for the user to select from. Thesimulated hyperlink application 162 may provide a user-interface that offers the suggested operation(s) to the user of the device in a manner consistent across mobile applications. In some implementations, the suggested operations may be in the form of a selectable control. The control can be an overlay displayed on top of the screen being displayed, an underlay displayed behind the screen being displayed, or information configured to be added to the current screen in the display buffer of the mobile device. In other words, the suggested operation control represents information added to a screen generated at the mobile device, whether displayed over, under, or integrated into the screen when it is displayed. - The suggested operation control may be configured to detect a selection that initiates the corresponding action, e.g., in the form of initiating an intent. The suggested operation thus, acts like a hyperlink in an HTML-based document. But unlike an HTML hyperlink, the content selected by the user via the action does not need to be associated with a destination prior to the action, i.e., the simulated hyperlink indication. Thus, the
simulated hyperlink system 100 can turn any content displayed on the screen into a hyperlink and can provide the suggested operation control for any mobile application running on the mobile device, making operations consistent across mobile applications. This consistency improves the user experience. - Although illustrated as executing on the
client device 150, in some implementations, thesimulated hyperlink application 162 may be a module executing on a server, such asserver 110. In such implementations, the screen capture application 160 may provide the content recognized in a captured image and the word closest to the location of the action to thesimulated hyperlink application 162 at the server and thesimulated hyperlink application 162 may provide the screen capture application 160 with the corresponding operation(s) and intelligent selection using thesimulated hyperlink model 130. In some implementations, the screen capture application 160 may use the intelligent selection and corresponding operation(s) to provide the interface with suggested operation controls or to automatically perform an operation using the intelligent selection. - When an operation is not performed automatically, the screen capture application 160 may integrate the user interface having the suggested operation controls with a current screen. For example, if the screen capture application 160 receives the predicted operations from the
simulated hyperlink application 162, the screen capture application 160 may combine the controls for the predicted operations with the current display content. In some implementations, the screen capture application 160 may generate an overlay, as an underlay, or may interleave the suggested operation controls with the current screen in the display buffer. In some implementations, the screen capture application 160 may be configured to verify that the currently displayed screen is similar enough to the captured screen image before displaying the suggested operation controls. For example, the screen capture application 160 may use the coordinates for the control or for the corresponding intelligent selection to determine a visual cue from the captured image and compare the visual cue with the same coordinates for the currently displayed image. In some implementations, the screen capture application 160 may be configured to look a short distance for visual elements in the current image that are similar to those for the visual cue. If found, the screen capture application 160 may adjust the coordinates of the suggested operation controls to match the movement of the underlying screen. In some implementations, the screen capture application 160 may initiate an activity or mode that displays the captured image, the selected text or image, and the operation controls on top of the current screen. The previously captured image, selected text or image, and operations may be displayed until the user selects an action or cancels the display (e.g., with a cancel or ‘go-back’ command). - In some implementations, the
simulated hyperlink application 162 may use a ranking engine to determine which suggested operations from the model to display. For example, thesimulated hyperlink application 162 may choose a quantity (e.g., 3 or 4) of the top ranking, or in other words most probable, operations. As another example, thesimulated hyperlink application 162 may choose any operation with a probability score higher than a specified threshold, or a combination of quantity and a threshold. In some implementations, the quantity or threshold may be dependent on metadata about the device, e.g., a lower quantity or higher threshold when the device is moving. In some implementations, the display of the suggested actions may be scrollable, e.g., to allow the user to select from more actions than are initially displayed. - The
client device 150 may includedata stores 157, which are stored in the memory of theclient device 150 and used by theapplications 155. In some implementations, thedata stores 157 may include thesimulated hyperlink model 170, thescreen capture index 172, and theuser data 176. One or more of these data stores may be associated with a user account or profile. Thus, the data stores may also reside onserver 110. In addition, one or more of thedata stores 157 may be copies of or subsets of data stored on theserver 110 or in another location specified by the user. Thedata stores 157 may be stored on any non-transitory memory. - The
client device 150 may be in communication with theserver 110 and withother client devices 190 overnetwork 140.Network 140 may be for example, the Internet, or thenetwork 140 can be a wired or wireless local area network (LAN), wide area network (WAN), etc., implemented using, for example, gateway devices, bridges, switches, and/or so forth.Network 140 may also represent a cellular communications network. Via thenetwork 140, theserver 110 may communicate with and transmit data to/fromclient devices client device 150 may communicate with other client devices 190 (not shown). - The
simulated hyperlink system 100 represents one example configuration and implementations may incorporate other configurations. For example, some implementations may combine one or more of the components of theemulator 122, thesimulated hyperlink engine 120, or thesimulated hyperlink application 162 into a single module or engine. Similarly, some implementations may combine one or more of the screen capture application 160 and thesimulated hyperlink application 162 into a single module or application. Furthermore, one or more of the components of thesimulated hyperlink application 162 or the screen capture application 160 may be performed at theserver 110, while one or more of the components of theemulator 122 or thesimulated hyperlink engine 120 may be performed at theclient device 150. As another example one or more of the data stores, such as the mobile application manifests 136, the crawleddocuments 134, thesimulated hyperlink model 130, or website-mobile application map 132 may be combined into a single data store or may be distributed across multiple computing devices, or may be stored at theclient device 150. Likewise, one or more of thescreen capture index 172 and theuser data 176 may be stored at theserver 110 or another location specified by the user. - To the extent that the
simulated hyperlink system 100 collects and stores user-specific data or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect the user information (e.g., information about a user's social network, social actions or activities, a user's preferences, or a user's current location), or to control whether and/or how to receive content that may be more relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, search records may be treated so that no personally identifiable information can be determined and/or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by asimulated hyperlink system 100. Moreover, capabilities may be provided to determine whether provision of functionality described herein is consistent with rights of use of content, layout, functionality or other aspects of the applications used to display content on the device screen, and set capabilities accordingly. For example, settings may be provided that limit simulated hyperlinks where not doing so could be in contravention of terms of service, content license, or other limitations on use. Such settings may be manually or automatically made, such as by a user when establishing a new service or device use permissions, or by an app installation routine or the like. -
FIGS. 2A and 2B areexample displays system 100 ofFIG. 1 may provide the display. In some implementations, the display may be a display of a mobile device, such asclient device 150 ofFIG. 1 . InFIG. 2A the user has performed an action, e.g., a simulated hyperlink indication, atlocation 205 on thedisplay 200 a. Thelocation 205 corresponds most closely to the word “Brad” displayed on the screen by the source program. The word “Brad” is not a hyperlink, e.g., is not associated with any destination by the source program and appears as normal text (e.g., not underlined or a different color than surrounding text, as typical with a hyperlink). Thesystem 100 may use thelocation 205 to generate centeredselection 210. In the example ofFIG. 2A , thecentered selection 210 includes 13 words taken from content recognized indisplay 200 a. Of course other implementations may include more or fewer words. Thecenter word 215 is “Brad” because it corresponds most closely tolocation 205. Thesystem 100 may append six words that follow thecenter word 215. These six words may be considered right context. Thesystem 100 may also prepend six words that appear before thecenter word 215. These six words are six words of left context. - In the example of
FIG. 2A , thesystem 100 may avoid using text that is associated with another paragraph or section of the content. Thus, the left context or the right context may includepadding tokens 220. Thepadding tokens 220 enable thesystem 100 to keep thecenter word 215 centered while avoiding taking words from potentially unrelated context. Thus, because thecenter word 215 appears at the beginning of a new paragraph indisplay 200 a, thesystem 100 adds sixpadding tokens 220 to the left context of the centeredselection 210. The paragraph includes more than six words after thecenter word 215, so the right context includes just words recognized from the content and does not need padding tokens. - The
system 100 may provide the centeredselection 210 to a simulated hyperlink model. The simulated hyperlink model may provideintelligent selection 225 as well as one or more suggested operation in response to the centeredselection 210. In some implementations, thesystem 100 may select an operation with a highest probability and perform that operation using theintelligent selection 215 as a parameter to an intent for the mobile application that corresponds to the operation. For example, if the operation with the highest probability is a movie wiki application, thesystem 100 may invoke the wiki application with a search or share intent, taking Brad Pitt as the input for the intent. In such an implementation,display 200 b ofFIG. 2B is not displayed. -
FIG. 2B illustrates an example of adisplay 200 b with a user interface that displays the suggested operation as a control, in accordance with disclosed implementations. For example,operation control 230 may be an icon that represents the movie wiki application. The system may generate thedisplay 200 b if the client device does not automatically perform the operation. If the user selectsoperation control 230, thesystem 100 may activate the movie wiki application (e.g., switch focus to the movie wiki application or in other words the destination application) with a search or other intent. A search intent is an operating system standard that opens the application in a search state, or in other words a search user interface. Search intents can work with mobile applications and web applications. The search intent may support a parameter, so that the mobile application is provided with the intelligent selection as part of the search intent and opens or activates to a search result page or user interface. Implementations may also use other intents, either standard (i.e., supported by the operating system) or nonstandard (i.e., supported by the mobile application but not by the operating system), that can take the intelligent selection as a parameter. Thus, selection ofoperation control 230 may pass the parameter Brad Pitt as a query to the movie wiki mobile application, cause the client device to open or switch focus to the movie wild application, and the movie wiki mobile application may display a result page for the query. In this manner thesystem 100 reduces the input needed to perform the selection, search, and context switch required to look up Brad Pitt in the movie wiki application, which improves the user experience. Of course the operation illustrated inFIG. 2B is an example only and other suggested operations may be presented to the user. The presentation of the operation control inFIG. 2B is illustrated in a bar that overlays part of the screen content generated by the source application. Implementations may include other arrangements, such as a carousel display, a circular display, a menu display, a pop-up window or icon, etc. In addition, the user interface ofdisplay 200 b illustrated inFIG. 2B may be optional, as in some implementations thesimulated hyperlink application 162 may automatically initiate the movie wiki application. -
FIG. 3A is anotherexample display 300 a of a mobile computing device in accordance with the disclosed subject matter. A client device of a simulated hyperlink system, such assystem 100 ofFIG. 1 may provide thedisplay 300 a ofFIG. 3A . In the example ofFIG. 3A , the user has performed an action, i.e., the simulated hyperlink indication, atlocation 305. In response, thesystem 100 may perform recognition on thedisplay 300 a to recognize text generated by the source application. The system may determine thatlocation 305 corresponds to the word “Pitt” and make that thecenter word 315 of acentered selection 310. Thesystem 100 may pad thecenter word 315 with six words of left context and six words of right context. In the example ofFIG. 3A , thesystem 100 adds one padding token to the left context to avoid using words from a different paragraph while keeping thecenter word 315 centered. In other implementations, thesystem 100 may pad the center word with more or fewer words in the left context and right context. Thesystem 100 may provide the centered selection to the simulated hyperlink model. The model may provideintelligent selection 320 and one or more predicted operations for the centered selection. -
FIG. 3B is anexample display 300 b of a mobile computing device with two suggested operations for an intelligent selection from the centered selection ofFIG. 3A , in accordance with the disclosed subject matter. In the example ofFIG. 3B , the simulated hyperlink model has providedoperation control 330, which may represent a sports news application. However, the model may not be very certain about this choice, for example because the intelligent selection Brad Pitt is more often associated with movies than sports. However, because of the context (e.g., the basketball tournament), the model may not be confident about an operation that represents a movie wiki application either. In the example ofFIG. 3B , the system selects the higher ranking operation, e.g., represented byoperation control 330, for display in the user interface. In addition, because thesystem 100 is not very confident about this choice, the system may also provide acopy operation 325 in the user interface. Selection of the copy operation copies theintelligent selection 320 onto a clipboard. In some implementations, this may be the default operation performed automatically when no operations predicted by the model have a sufficiently high confidence or there are no predicted operations. Theoperation control 330 may be associated with an icon for the sports news mobile application and selection ofcontrol 330, or in other words of the operation, may launch the sports news application with a search intent. The search intent may have theintelligent selection 320 as a parameter. Accordingly, the client device may launch the sports news application to a search result screen that has results responsive the query that includes theintelligent selection 320. - The example of
FIG. 3B also illustrates a user interface that provides the user with anindication 335 of theintelligent selection 320. Theindication 335 may modify the appearance of the text, e.g., by highlighting, circling, or some other method of indicating the text as automatically selected. Theindication 335 can be an overlay displayed on top of the screen being displayed, an underlay displayed behind the screen being displayed, or information configured to be added to the current screen in the display buffer of the mobile device. In some implementations, the user interface illustrated inFIG. 3B may provide the user with an opportunity to modify the intelligent selection, e.g., by expanding or contracting theindication 335. In such implementations, such a change may be provided to the model as another training example. This training example may be used to personalize the model (e.g., by updating simulated hyperlink model 170) or may be used as feedback and further training for the general model (e.g., simulated hyperlink model 130). In some implementations, when the user selects an operation control this feedback may be saved as another positive training example (e.g., that the centered selection predicts that selected operation). In some implementations, if a user does not select an operation offered in a user interface, the system may generate a negative training example, which indicates the centered selection does not predict the operation(s) presented. These additional training examples can help increase or decrease the probability scores for the predicted operations, either in a personal copy of the model or the general model. - In some implementations, the user may not have one of the mobile applications installed. For example, the user may not have the sports news application that corresponds to the
operation control 330 installed. Selection of thecontrol 330 may cause the device to initiate a download process for the sports news application. Thus, the user interface ofdisplay 300 b may provide the user with knowledge of operations, or in other words mobile applications, that others consider helpful, even if the user does not know about the mobile applications. In some implementations, if the user does not have the sports news application installed the system may convert the operation to a search intent for an Internet search mobile application, a dictionary app a wiki app, etc., or just a copy operation as discussed above. - The user interfaces illustrated in
FIGS. 2A, 2B, 3A, and 3B work on text or images generated by any source application, and not just on text tied to an entity in a knowledge base, text that fits a template for an entity type, or applications that convert certain types of text to a hyperlink. While operation controls are illustrated as icon-based, operation controls could be text based or a combination of text and images. Thus, the operation controls are understood to include text based, image based, or a combination of text and image controls. -
FIG. 4 illustrates a flow diagram of anexample process 400 for suggesting operations in response to an action associated with content displayed on a mobile computing device, in accordance with disclosed implementations.Process 400 may be performed by a simulated hyperlink system, such assystem 100 ofFIG. 1 .Process 400 may be used to determine an intelligent selection and suggested operations in response to the action, based on the location of the action and a simulated hyperlink model.Process 400 may begin by generating a simulated hyperlink model (405). The simulated hyperlink model may provide an intelligent selection and suggested operations, i.e., mobile applications with an intent, in response to a centered selection input. The intent can be one of any standard or nonstandard intents.FIG. 5 illustrates one example of building a simulated hyperlink model. Although not specifically illustrated inFIG. 4 , the system may build the model on a server and push the model to a client device. - The system may receive an action (410), or in other words, a simulated hyperlink indication, at the client device. The action is associated with a location on the screen of the client device. The system may use the location and a screen capture image to extract content being displayed and generate a centered selection from the content (415). For example, the system may perform text and image recognition on the screen capture image to determine the text and text equivalents of images that are currently displayed. The system may then determine a word closest to the location of the action. The word closest to the location is the center word. The system may then pad the center word with other words appearing before and after the center word in the context. The words appearing before the center word are left context and the words appearing after the center word are right context. In some implementations, the system may avoid using words from other paragraphs or sections. Thus, for example, the system may not use words from a different paragraph or a different section in the left context or the right context. In such implementations, the system may pad the left context and right context, if needed, with one or more padding tokens. The padding tokens take the place of a word in the centered selection and enable the center word to remain in the center of the centered selection while excluding words from different paragraphs/sections/pages and still providing a centered selection with a predefined number of words. The predefined number of words may be any odd number and the number of words in the left context equals the number of words in the right context (with a padding token counting as a word).
- The system may provide the centered selection to the simulated hyperlink model (420). The model may be machine-learning algorithm trained to predict an intelligent selection and one or more operations given the centered selection. In some implementations, the system provides the centered selection one character at a time to the model to reduce the vocabulary of the model.
- In some implementations, the system may automatically initiate execution of the mobile application represented by an operation with a highest probability that also meets or exceeds a threshold (445). The system may initiate execution of the mobile application with an intent, using the intelligent selection as a parameter in the intent, as described in more detail below. In some implementations, the model may provide predicted or suggested operations for the centered selection, which the system may provide to the user (425). The system may provide the predicted or suggested operations when, for example, two or more operations have similar highest probabilities. Thus, the system may be unable to confidently decide the operation for the user. The system may also provide the predicted operation when the operation with the highest probability fails to meet a threshold. In some implementations, the system may add a copy operation or another default operation (e.g., search for the intelligent selection on the Internet) to the operations presented to the user as part of step 425. The system may provide a selectable control for each operation that enables a user to select the operation. The operations represent intents for mobile applications, such as search intents or share intents. The operations can also represent search intents for websites, for example when the client device is a laptop running a browser. In some implementations, the system may highlight the intelligent selection on the display (430). The intelligent selection is the portion of the centered link that will be used in the intent. The intelligent selection could be only the center word, or could be the center word plus one or two surrounding words. In an implementation that uses highlighting, for example, the user interface may include a way for the user to change the intelligent selection. For example, the user may expand or contract the words included in the intelligent selection.
- The system waits for the user to select an operation control (435, Yes) or to end the operation suggestion interface (435, No). If the user does select a suggested operation (435, Yes), the system may generate a positive training example from the centered selection, intelligent selection, and the selected operation (440). This positive training example can be used to train the model, e.g., either by personalizing a copy of the model on the client device or by further training the original model at the server, e.g., by sending the positive example to the server, with user consent. This additional positive example may enable the model to automatically choose the selected operation in the future, rather than display the user interface that requires the user to select an operation. The system may then initiate execution of the mobile application represented by the operation with an intent, using the intelligent selection as a parameter in the intent (445). In some implementations, the intent is a standard intent, such as a search intent or share intent. Thus, the client device switches context from whatever application was currently executing, e.g., the source application, to the mobile application represented by the selected operation, e.g., the destination application. In an implementation where the client device is not a mobile device, the action may be associated with a search interface in a specific website that mirrors the mobile application, and the system may cause the browser to navigate to the search interface with a search intent using the intelligent selection as a parameter. Thus, the user is able to switch automatically to the destination application (e.g., the mobile application or the web mirror of the mobile application) using only the action received in
step 410. - In some implementations, the operation may be associated with a mobile application that is not installed on the mobile device. When this occurs, the operation for the selected entity may be a secondary operation that, when selected, takes the user to an interface where the user can download and install the mobile application, or initiates installation of the mobile application automatically. Thus, it is understood that selection of the operation in
step 435 may enable the user to install the mobile application. In some implementations, after the mobile application is successfully installed the system may automatically initiate an intent using the intelligent selection as a parameter to open the newly installed mobile application. In some implementations, if the user does not have a particular mobile application installed, the system may substitute a browser-based search of the intelligent selection. In some implementations, if no operation is specified the system may provide default options via a user interface, such as a browser search or a cut/copy option, for handling the intelligent selection. -
FIG. 5 illustrates a flow diagram of an example process 500 for generating a simulated hyperlink model, in accordance with disclosed implementations. Process 500 may be performed by a simulated hyperlink system, such assystem 100 ofFIG. 1 . Process 500 is an example ofstep 405 ofFIG. 4 and may be used to build a simulated hyperlink model, such asmodel 130 ormodel 170 ofFIG. 1 . Process 500 may begin by obtaining a website to mobile application mapping (505). In some implementations, the mapping may be provided, e.g., curated by hand. In some implementations, the system may build the mapping. For example, the system may use mobile application manifests to determine a website mirror for a mobile application. In some implementations, the system may augment the mapping by clustering similar mobile applications together and mapping all similar applications to a website mirror. For example, there may be several reservation mobile applications, e.g., for booking a flight, rental car, hotel, etc. and these may be clustered together using conventional clustering algorithms. In some implementations, the system may map each application in a cluster to a website mirror. In some implementations, the system may use an emulator to determine which mobile applications a website maps to. For example, the emulator may be configured to obtain a query from search records and to simulate execution of various mobile applications (e.g., those available via a web store). The emulator may determine whether a particular mobile application returns results similar to those of the website given the same query. If so, the emulator may map the website to the mobile application. In some implementations, the emulator may be configured to provide a query to a mobile application and determine whether the mobile application ends up in a content state, or in other words returns valid search results for the query. If so, the system may find a website mirror, e.g., one that returns similar results given the same query. In any of these manners the system may build the website to mobile application mapping. In some implementations, the mapping may include mappings for non http and https URI schemes. For example, the “mailto:” URI may be mapped to an email application, the “tel:” URI may be mapped to a dialing application, a “geo:” URI may be mapped to a map application, etc. - The system may identify positive training examples for training the model (510). The positive training examples may be extracted from crawled documents, e.g., documents available over the Internet or an Intranet that include anchor tags. The crawled documents may be documents indexed by an Internet search engine. The system may select links in documents where the destination matches a whitelisted website or URI in the website to mobile application mapping. These links (i.e., the anchor tags and related information) are considered positive examples linking the anchor text to the mobile application(s) associated with the whitelisted website. The system may make a centered selection with the anchor text as the center portion, and the anchor text of the link being an example of an intelligent selection for the centered selection. Thus, the example may include, among other things, a centered selection extracted from the document, the anchor text, which represents an intelligent selection from the centered selection, and the mobile application. In some implementations, the system may also generate negative examples. For example, a mobile application that does not map to a website that is linked to by the anchor text may be a negative example.
- The system may use the positive training examples and the negative ones to train the simulated hyperlink model (515). The system may provide the trained model to a client device (520). In some implementations, the model may be pushed to client devices when a simulated hyperlink application installed or the model is updated. In some implementations, the simulated hyperlink application may pull the model from the server, e.g., as part of an application update. At the client device, the system may determine whether to personalize the model (525). If no personalization is done (525, No), process 500 ends. Otherwise (525, Yes), the system may identify positive training examples from search records associated with the client device or with the user of the client device (530). For example, the system may use a screen capture index, a user profile or device profile to reweight training examples. The system may use the updated examples to further train the model (535). Thus, the model may be trained to predict actions most relevant to the user. Process 500 then ends.
-
FIG. 6 shows an example of ageneric computer device 600, which may be operated asserver 110, and/orclient 150 ofFIG. 1 , which may be used with the techniques described here.Computing device 600 is intended to represent various example forms of computing devices, such as laptops, desktops, workstations, personal digital assistants, cellular telephones, smartphones, tablets, servers, and other computing devices, including wearable devices. The components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document. -
Computing device 600 includes aprocessor 602,memory 604, astorage device 606, andexpansion ports 610 connected via aninterface 608. In some implementations,computing device 600 may includetransceiver 646,communication interface 644, and a GPS (Global Positioning System)receiver module 648, among other components, connected viainterface 608.Device 600 may communicate wirelessly throughcommunication interface 644, which may include digital signal processing circuitry where necessary. Each of thecomponents - The
processor 602 can process instructions for execution within thecomputing device 600, including instructions stored in thememory 604 or on thestorage device 606 to display graphical information for a GUI on an external input/output device, such asdisplay 616.Display 616 may be a monitor or a flat touchscreen display. In some implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also,multiple computing devices 600 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system). - The
memory 604 stores information within thecomputing device 600. In one implementation, thememory 604 is a volatile memory unit or units. In another implementation, thememory 604 is a non-volatile memory unit or units. Thememory 604 may also be another form of computer-readable medium, such as a magnetic or optical disk. In some implementations, thememory 604 may include expansion memory provided through an expansion interface. - The
storage device 606 is capable of providing mass storage for thecomputing device 600. In one implementation, thestorage device 606 may be or include a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in such a computer-readable medium. The computer program product may also include instructions that, when executed, perform one or more methods, such as those described above. The computer- or machine-readable medium is a storage device such as thememory 604, thestorage device 606, or memory onprocessor 602. - The
interface 608 may be a high speed controller that manages bandwidth-intensive operations for thecomputing device 600 or a low speed controller that manages lower bandwidth-intensive operations, or a combination of such controllers. Anexternal interface 640 may be provided so as to enable near area communication ofdevice 600 with other devices. In some implementations,controller 608 may be coupled tostorage device 606 andexpansion port 614. The expansion port, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter. - The
computing device 600 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as astandard server 630, or multiple times in a group of such servers. It may also be implemented as part of a rack server system. In addition, it may be implemented in a computing device, such as alaptop computer 632,personal computer 634, or tablet/smart phone 636. An entire system may be made up ofmultiple computing devices 600 communicating with each other. Other configurations are possible. -
FIG. 7 shows an example of ageneric computer device 700, which may beserver 110 ofFIG. 1 , which may be used with the techniques described here.Computing device 700 is intended to represent various example forms of large-scale data processing devices, such as servers, blade servers, datacenters, mainframes, and other large-scale computing devices.Computing device 700 may be a distributed system having multiple processors, possibly including network attached storage nodes, that are interconnected by one or more communication networks. The components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document. - Distributed
computing system 700 may include any number of computing devices 780. Computing devices 780 may include a server or rack servers, mainframes, etc. communicating over a local or wide-area network, dedicated optical links, modems, bridges, routers, switches, wired or wireless networks, etc. - In some implementations, each computing device may include multiple racks. For example,
computing device 780 a includes multiple racks 758 a-758 n. Each rack may include one or more processors, such as processors 752 a-752 n and 762 a-762 n. The processors may include data processors, network attached storage devices, and other computer controlled devices. In some implementations, one processor may operate as a master processor and control the scheduling and data distribution tasks. Processors may be interconnected through one or more rack switches 758, and one or more racks may be connected throughswitch 778.Switch 778 may handle communications between multiple connected computing devices 780. - Each rack may include memory, such as
memory 754 andmemory 764, and storage, such as 756 and 766.Storage Storage Memory memory 754 may also be shared between processors 752 a-752 n. Data structures, such as an index, may be stored, for example, acrossstorage 756 andmemory 754. Computing device 780 may include other components not shown, such as controllers, buses, input/output devices, communications modules, etc. - An entire system, such as
system 100, may be made up of multiple computing devices 780 communicating with each other. For example,device 780 a may communicate withdevices system 100. As another example,system 100 ofFIG. 1 may include one or more computing devices 780. Some of the computing devices may be located geographically close to each other, and others may be located geographically distant. The layout ofsystem 700 is an example only and the system may take on other layouts or configurations. - According to certain aspects of the disclosure, a mobile device may include a display device, at least one processor, and memory storing instructions that, when executed by the at least one processor, cause the mobile device to perform operations including generating a centered selection responsive to detecting an action on content displayed on the display device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given a centered selection, the operation being associated with an intent for a mobile application, and initiating at least one of a) display of a user interface permitting selection of the operation, which uses the intent, or b) performance of the operation using the intent.
- This and other aspects can include one or more of the following features. For example, the simulated hyperlink model may also be trained to provide an intelligent selection from the centered selection and initiating the operation occurs using the intelligent selection as a parameter for the intent. In some implementations, initiating display of the user interface can include displaying a menu with an icon for the mobile application and with an option to copy the intelligent selection. In some implementations, the operations may also include modifying the appearance of text displayed on the display that corresponds to the intelligent selection. As another example, the operations may also include initiating, responsive to receiving a selection of the operation from the user interface, performance of the operation using the intelligent selection. Such implementations may include generating a positive training example using the centered selection, the mobile application and/or up-weighting a weight for the positive training example. As another example, wherein initiating display of the user interface includes displaying an icon for the mobile application.
- As another example, the centered selection may include a word nearest a location for the action and an equal quantity of words from the content that appears prior to the word nearest the location and following the word nearest the location. In some implementations, the words prior to and following the word nearest the location exclude words in different paragraphs and generating the centered selection include determining that the quantity of words prior to the word nearest the location is less than the equal quantity and adding padding tokens to the centered selection, the padding tokens being counted as words prior to the word nearest the location, so that the quantity of words prior to the word nearest the location s the equal quantity. As another example, the operations may also include receiving the simulated hyperlink model from a server, generating training examples from hyperlinks in a screen capture index for a user of the mobile device, and using the training examples to train the simulated hyperlink model, resulting in a personalized simulated hyperlink model.
- According to certain aspects of the disclosure, a method includes identifying, from a document corpus, one or more documents having a hyperlink to a whitelisted website, the whitelisted website being one of a plurality of websites in a mapping of websites to mobile applications, generating positive training examples for a simulated hyperlink model using the one or more documents, each positive training example having a centered selection generated from the respective document, a website, a weight corresponding to a page rank of the website, and a mobile application mapped to the website, and training the simulated hyperlink model, using the positive training examples, to predict an operation for the mobile application given the centered selection.
- This and other aspects can include one or more of the following features. For example, the method may also include identifying a website in a manifest of a first mobile application; and adding the website and the first mobile application to the mapping. In some implementations, the manifest specifies an intent and the operation for the mobile application is the intent. As another example, the mobile application may be a first mobile application and the method also includes clustering similar mobile applications in a web store, the first mobile application appearing in a first cluster, identifying a document with a hyperlink to the website, determining an intelligent selection based on the hyperlink, verifying that a result generated by the first mobile application for the intelligent selection is similar to a result generated by a second mobile application for the intelligent selection, the second mobile application being in the first cluster, and adding, responsive to the verifying, the website and the second mobile application to the mapping.
- As another example, the method may also include personalizing the model based on a screen capture index for a user of a mobile device. As another example, the mapping may include records mapping a non-http uniform resource indicator (URI) to a mobile application and the one ore more documents include a hyperlink using the non-http URI. As another example, the centered selection includes anchor text for the hyperlink and the model is further trained to predict the anchor text as an intelligent selection.
- According to certain aspects of the disclosure, a method includes generating, responsive to detecting a simulated hyperlink indication, a centered selection from content displayed on a display of a mobile computing device, providing the centered selection to a simulated hyperlink model, the simulated hyperlink model being trained to predict an operation given the centered selection, the operation being associated with an intent for a mobile application, and initiating the operation using the intent.
- This and other aspects can include one or more of the following features. For example, generating the centered selection can include performing text and image recognition on a screen capture of the content to determine words represented in the content and determining a word closest to a location of the simulated hyperlink model as a center word in the centered selection. As another example, generating the centered selection can also include using padding tokens in place of words in the centered selection to avoid including words from different sections. As another example, the simulated hyperlink model may also trained to make an intelligent selection from the centered selection, the intelligent selection representing a portion of the centered selection and using the intelligent selection as a parameter for the intent. As another example, the operation may be a first operation and the method also includes receiving the first operation and a second operation from the simulated hyperlink model, determining a probability score for the first operation and a probability score for the second operation are similar, providing a user interface that enables a user of the mobile computing device to select the first operation or the second operation, receiving a selection of the first operation, generating a positive training example from the centered selection and the first operation, and initiating the first operation using the intent. As another example, the method may also include obtaining, responsive to detecting the simulated hyperlink indication, a partial screen capture image, wherein the centered selection is obtained from the partial screen capture image.
- Various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms “machine-readable medium” “computer-readable medium” refers to any non-transitory computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory (including Read Access Memory), Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor.
- The systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- A number of implementations have been described. Nevertheless, various modifications may be made without departing from the spirit and scope of the invention. In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other implementations are within the scope of the following claims.
Claims (22)
Priority Applications (11)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/945,348 US10055390B2 (en) | 2015-11-18 | 2015-11-18 | Simulated hyperlinks on a mobile device based on user intent and a centered selection of text |
CN201680062824.9A CN108700987B (en) | 2015-11-18 | 2016-11-17 | Simulated hyperlinks on mobile devices |
GB1805231.6A GB2558108B (en) | 2015-11-18 | 2016-11-17 | Simulated hyperlinks on a mobile device |
DE112016005286.3T DE112016005286T5 (en) | 2015-11-18 | 2016-11-17 | Simulated hyperlinks on a mobile device |
JP2018525568A JP6791963B2 (en) | 2015-11-18 | 2016-11-17 | Pseudo-hyperlinks on mobile devices |
PCT/US2016/062475 WO2017087639A1 (en) | 2015-11-18 | 2016-11-17 | Simulated hyperlinks on a mobile device |
CN202110557172.9A CN113343644A (en) | 2015-11-18 | 2016-11-17 | Simulated hyperlinks on mobile devices |
EP16808861.5A EP3341840A1 (en) | 2015-11-18 | 2016-11-17 | Simulated hyperlinks on a mobile device |
RU2018114074A RU2018114074A (en) | 2015-11-18 | 2016-11-17 | SIMULATED HYPERLINKS ON MOBILE DEVICE |
KR1020187012186A KR102078786B1 (en) | 2015-11-18 | 2016-11-17 | Simulated hyperlinks on a mobile device |
US16/050,763 US10733360B2 (en) | 2015-11-18 | 2018-07-31 | Simulated hyperlinks on a mobile device |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/945,348 US10055390B2 (en) | 2015-11-18 | 2015-11-18 | Simulated hyperlinks on a mobile device based on user intent and a centered selection of text |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/050,763 Continuation US10733360B2 (en) | 2015-11-18 | 2018-07-31 | Simulated hyperlinks on a mobile device |
Publications (2)
Publication Number | Publication Date |
---|---|
US20170139879A1 true US20170139879A1 (en) | 2017-05-18 |
US10055390B2 US10055390B2 (en) | 2018-08-21 |
Family
ID=57517990
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/945,348 Active 2036-03-21 US10055390B2 (en) | 2015-11-18 | 2015-11-18 | Simulated hyperlinks on a mobile device based on user intent and a centered selection of text |
US16/050,763 Active US10733360B2 (en) | 2015-11-18 | 2018-07-31 | Simulated hyperlinks on a mobile device |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/050,763 Active US10733360B2 (en) | 2015-11-18 | 2018-07-31 | Simulated hyperlinks on a mobile device |
Country Status (9)
Country | Link |
---|---|
US (2) | US10055390B2 (en) |
EP (1) | EP3341840A1 (en) |
JP (1) | JP6791963B2 (en) |
KR (1) | KR102078786B1 (en) |
CN (2) | CN108700987B (en) |
DE (1) | DE112016005286T5 (en) |
GB (1) | GB2558108B (en) |
RU (1) | RU2018114074A (en) |
WO (1) | WO2017087639A1 (en) |
Cited By (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170147165A1 (en) * | 2015-11-23 | 2017-05-25 | Lg Electronics Inc. | Mobile device and method of controlling therefor |
US20170277266A1 (en) * | 2016-03-28 | 2017-09-28 | International Business Machines Corporation | Displaying Virtual Target Window on Mobile Device Based on Directional Gesture |
US20170279951A1 (en) * | 2016-03-28 | 2017-09-28 | International Business Machines Corporation | Displaying Virtual Target Window on Mobile Device Based on User Intent |
CN107220094A (en) * | 2017-06-27 | 2017-09-29 | 北京金山安全软件有限公司 | Page loading method and device and electronic equipment |
US9798708B1 (en) | 2014-07-11 | 2017-10-24 | Google Inc. | Annotating relevant content in a screen capture image |
US9965559B2 (en) | 2014-08-21 | 2018-05-08 | Google Llc | Providing automatic actions for mobile onscreen content |
US20180365789A1 (en) * | 2017-06-16 | 2018-12-20 | Yokogawa Electric Corporation | Device management apparatus, device management method, and non-transitory computer readable storage medium |
US10178527B2 (en) | 2015-10-22 | 2019-01-08 | Google Llc | Personalized entity repository |
US20190130905A1 (en) * | 2017-10-29 | 2019-05-02 | International Business Machines Corporation | Creating modular conversations using implicit routing |
US10535005B1 (en) | 2016-10-26 | 2020-01-14 | Google Llc | Providing contextual actions for mobile onscreen content |
US20200145527A1 (en) * | 2017-12-29 | 2020-05-07 | DMAI, Inc. | System and method for personalized and adaptive application management |
US10678571B2 (en) * | 2018-07-13 | 2020-06-09 | Microsoft Technology Licensing, Llc | Image-based skill triggering |
WO2020180034A1 (en) * | 2019-03-05 | 2020-09-10 | 삼성전자 주식회사 | Method and device for providing user-selection-based information |
US10970646B2 (en) | 2015-10-01 | 2021-04-06 | Google Llc | Action suggestions for user-selected content |
US11024294B2 (en) | 2017-12-29 | 2021-06-01 | DMAI, Inc. | System and method for dialogue management |
JP2021515256A (en) * | 2018-03-21 | 2021-06-17 | グーグル エルエルシーＧｏｏｇｌｅ ＬＬＣ | Data transfer within a secure processing environment |
US11054973B1 (en) | 2020-06-01 | 2021-07-06 | Apple Inc. | User interfaces for managing media |
US11222632B2 (en) | 2017-12-29 | 2022-01-11 | DMAI, Inc. | System and method for intelligent initiation of a man-machine dialogue based on multi-modal sensory inputs |
US11237696B2 (en) | 2016-12-19 | 2022-02-01 | Google Llc | Smart assist for repeated actions |
US11321731B2 (en) | 2015-06-05 | 2022-05-03 | Apple Inc. | User interface for loyalty accounts and private label accounts |
US11331807B2 (en) | 2018-02-15 | 2022-05-17 | DMAI, Inc. | System and method for dynamic program configuration |
US11392664B1 (en) * | 2017-08-29 | 2022-07-19 | Massachusetts Mutual Life Insurance Company | Dynamic web application based on events |
US11504856B2 (en) | 2017-12-29 | 2022-11-22 | DMAI, Inc. | System and method for selective animatronic peripheral response for human machine dialogue |
US11580608B2 (en) | 2016-06-12 | 2023-02-14 | Apple Inc. | Managing contact information for communication applications |
US11599241B2 (en) * | 2015-11-30 | 2023-03-07 | Snap Inc. | Network resource location linking and visual content sharing |
Families Citing this family (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
US8977255B2 (en) | 2007-04-03 | 2015-03-10 | Apple Inc. | Method and system for operating a multi-function portable electronic device using voice-activation |
US8676904B2 (en) | 2008-10-02 | 2014-03-18 | Apple Inc. | Electronic devices with voice command and contextual data processing capabilities |
US10417037B2 (en) | 2012-05-15 | 2019-09-17 | Apple Inc. | Systems and methods for integrating third party services with a digital assistant |
CN104969289B (en) | 2013-02-07 | 2021-05-28 | 苹果公司 | Voice trigger of digital assistant |
US9715875B2 (en) | 2014-05-30 | 2017-07-25 | Apple Inc. | Reducing the need for manual start/end-pointing and trigger phrases |
US10170123B2 (en) | 2014-05-30 | 2019-01-01 | Apple Inc. | Intelligent assistant for home automation |
US9338493B2 (en) | 2014-06-30 | 2016-05-10 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US9886953B2 (en) | 2015-03-08 | 2018-02-06 | Apple Inc. | Virtual assistant activation |
US20160378747A1 (en) | 2015-06-29 | 2016-12-29 | Apple Inc. | Virtual assistant for media playback |
US10747498B2 (en) | 2015-09-08 | 2020-08-18 | Apple Inc. | Zero latency digital assistant |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US10586535B2 (en) | 2016-06-10 | 2020-03-10 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
DK201670540A1 (en) | 2016-06-11 | 2018-01-08 | Apple Inc | Application integration with a digital assistant |
DK180048B1 (en) | 2017-05-11 | 2020-02-04 | Apple Inc. | MAINTAINING THE DATA PROTECTION OF PERSONAL INFORMATION |
DK201770427A1 (en) | 2017-05-12 | 2018-12-20 | Apple Inc. | Low-latency intelligent automated assistant |
DK179496B1 (en) | 2017-05-12 | 2019-01-15 | Apple Inc. | USER-SPECIFIC Acoustic Models |
US10928918B2 (en) | 2018-05-07 | 2021-02-23 | Apple Inc. | Raise to speak |
US11145294B2 (en) | 2018-05-07 | 2021-10-12 | Apple Inc. | Intelligent automated assistant for delivering content from user experiences |
DK180639B1 (en) | 2018-06-01 | 2021-11-04 | Apple Inc | DISABILITY OF ATTENTION-ATTENTIVE VIRTUAL ASSISTANT |
US11462215B2 (en) | 2018-09-28 | 2022-10-04 | Apple Inc. | Multi-modal inputs for voice commands |
US11348573B2 (en) | 2019-03-18 | 2022-05-31 | Apple Inc. | Multimodality in digital assistant systems |
US11307752B2 (en) | 2019-05-06 | 2022-04-19 | Apple Inc. | User configurable task triggers |
DK201970509A1 (en) | 2019-05-06 | 2021-01-15 | Apple Inc | Spoken notifications |
US11140099B2 (en) | 2019-05-21 | 2021-10-05 | Apple Inc. | Providing message response suggestions |
US11227599B2 (en) | 2019-06-01 | 2022-01-18 | Apple Inc. | Methods and user interfaces for voice-based control of electronic devices |
US11061543B1 (en) | 2020-05-11 | 2021-07-13 | Apple Inc. | Providing relevant data items based on context |
US11043220B1 (en) | 2020-05-11 | 2021-06-22 | Apple Inc. | Digital assistant hardware abstraction |
US11490204B2 (en) | 2020-07-20 | 2022-11-01 | Apple Inc. | Multi-device audio adjustment coordination |
US11438683B2 (en) | 2020-07-21 | 2022-09-06 | Apple Inc. | User identification using headphones |
CN116954441A (en) * | 2022-04-15 | 2023-10-27 | 华为技术有限公司 | Equipment control method and electronic equipment |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130091463A1 (en) * | 2011-10-05 | 2013-04-11 | Paul Nordstrom | Semantic selection and purpose facilitation |
US8468110B1 (en) * | 2010-07-22 | 2013-06-18 | Intuit Inc. | Real-time user behavior prediction |
US20150100524A1 (en) * | 2013-10-07 | 2015-04-09 | Microsoft Corporation | Smart selection of text spans |
Family Cites Families (165)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR100348915B1 (en) | 1994-05-12 | 2002-12-26 | 마이크로소프트 코포레이션 | TV program selection method and system |
US5946647A (en) | 1996-02-01 | 1999-08-31 | Apple Computer, Inc. | System and method for performing an action on a structure in computer-generated data |
JPH10105562A (en) * | 1996-09-26 | 1998-04-24 | Hitachi Ltd | Retrieval system |
US6662226B1 (en) | 2000-01-27 | 2003-12-09 | Inbit, Inc. | Method and system for activating and capturing screen displays associated with predetermined user interface events |
US8224776B1 (en) | 2000-07-26 | 2012-07-17 | Kdl Scan Designs Llc | Method and system for hosting entity-specific photo-sharing websites for entity-specific digital cameras |
EP1370992A2 (en) | 2000-10-18 | 2003-12-17 | Chipworks | Design analysis workstation for analyzing integrated circuits |
JP2002197104A (en) * | 2000-12-27 | 2002-07-12 | Communication Research Laboratory | Device and method for data retrieval processing, and recording medium recording data retrieval processing program |
CA2481080C (en) | 2002-04-05 | 2010-10-12 | At&T Corp. | Method and system for detecting and extracting named entities from spontaneous communications |
US7421153B1 (en) | 2002-04-05 | 2008-09-02 | Bank Of America Corporation | Image and data processing system |
US7054917B1 (en) | 2002-08-07 | 2006-05-30 | Propel Software Corporation | Method for accelerating delivery of content in a computer network |
US7376696B2 (en) | 2002-08-27 | 2008-05-20 | Intel Corporation | User interface to facilitate exchanging files among processor-based devices |
US20050083413A1 (en) | 2003-10-20 | 2005-04-21 | Logicalis | Method, system, apparatus, and machine-readable medium for use in connection with a server that uses images or audio for initiating remote function calls |
US20080235018A1 (en) | 2004-01-20 | 2008-09-25 | Koninklikke Philips Electronic,N.V. | Method and System for Determing the Topic of a Conversation and Locating and Presenting Related Content |
US7707039B2 (en) | 2004-02-15 | 2010-04-27 | Exbiblio B.V. | Automatic modification of web pages |
US7536382B2 (en) | 2004-03-31 | 2009-05-19 | Google Inc. | Query rewriting with entity detection |
US8078607B2 (en) | 2006-03-30 | 2011-12-13 | Google Inc. | Generating website profiles based on queries from webistes and user activities on the search results |
US7639387B2 (en) | 2005-08-23 | 2009-12-29 | Ricoh Co., Ltd. | Authoring tools using a mixed media environment |
US8745483B2 (en) | 2004-10-07 | 2014-06-03 | International Business Machines Corporation | Methods, systems and computer program products for facilitating visualization of interrelationships in a spreadsheet |
US8812551B2 (en) | 2004-11-18 | 2014-08-19 | International Business Machines Corporation | Client-side manipulation of tables |
US7702611B2 (en) | 2005-01-07 | 2010-04-20 | Xerox Corporation | Method for automatically performing conceptual highlighting in electronic text |
US7653244B2 (en) * | 2005-02-22 | 2010-01-26 | Potts Wesley F | Intelligent importation of information from foreign applications user interface |
KR101046485B1 (en) | 2005-02-28 | 2011-07-04 | 가부시끼가이샤 판다네트 | Go game system |
US7702128B2 (en) | 2005-03-03 | 2010-04-20 | Cssn Inc. Card Scanning Solutions | System and method for scanning a business card from within a contacts address book and directly inserting into the address book database |
US7809722B2 (en) | 2005-05-09 | 2010-10-05 | Like.Com | System and method for enabling search and retrieval from image files based on recognized information |
US7788132B2 (en) * | 2005-06-29 | 2010-08-31 | Google, Inc. | Reviewing the suitability of Websites for participation in an advertising network |
US20070008321A1 (en) | 2005-07-11 | 2007-01-11 | Eastman Kodak Company | Identifying collection images with special events |
US7548915B2 (en) | 2005-09-14 | 2009-06-16 | Jorey Ramer | Contextual mobile content placement on a mobile communication facility |
US7752209B2 (en) | 2005-09-14 | 2010-07-06 | Jumptap, Inc. | Presenting sponsored content on a mobile communication facility |
US7933897B2 (en) | 2005-10-12 | 2011-04-26 | Google Inc. | Entity display priority in a distributed geographic information system |
US7822759B2 (en) | 2005-12-13 | 2010-10-26 | Microsoft Corporation | Query-driven sharing and syndication |
US8533199B2 (en) | 2005-12-14 | 2013-09-10 | Unifi Scientific Advances, Inc | Intelligent bookmarks and information management system based on the same |
US20070168379A1 (en) | 2006-01-17 | 2007-07-19 | Patel Sushma B | Method and apparatus for cataloging screen shots of a program |
CN101075236A (en) | 2006-06-12 | 2007-11-21 | 腾讯科技（深圳）有限公司 | Apparatus and method for accelerating browser webpage display |
US8347237B2 (en) | 2006-06-27 | 2013-01-01 | Palo Alto Research Center Incorporated | Method, apparatus, and program product for efficiently detecting relationships in a comprehension state of a collection of information |
US7917514B2 (en) | 2006-06-28 | 2011-03-29 | Microsoft Corporation | Visual and multi-dimensional search |
US8489987B2 (en) | 2006-07-31 | 2013-07-16 | Ricoh Co., Ltd. | Monitoring and analyzing creation and usage of visual content using image and hotspot interaction |
US9176984B2 (en) | 2006-07-31 | 2015-11-03 | Ricoh Co., Ltd | Mixed media reality retrieval of differentially-weighted links |
JP5223284B2 (en) * | 2006-11-10 | 2013-06-26 | 株式会社リコー | Information retrieval apparatus, method and program |
US8090222B1 (en) | 2006-11-15 | 2012-01-03 | Google Inc. | Selection of an image or images most representative of a set of images |
CN101201827B (en) | 2006-12-14 | 2013-02-20 | 阿里巴巴集团控股有限公司 | Method and system for displaying web page |
US8671341B1 (en) | 2007-01-05 | 2014-03-11 | Linguastat, Inc. | Systems and methods for identifying claims associated with electronic text |
KR101370895B1 (en) | 2007-01-19 | 2014-03-10 | 엘지전자 주식회사 | Method for displaying contents and terminal using the same |
US8869191B2 (en) | 2007-01-23 | 2014-10-21 | Cox Communications, Inc. | Providing a media guide including parental information |
US8214367B2 (en) | 2007-02-27 | 2012-07-03 | The Trustees Of Columbia University In The City Of New York | Systems, methods, means, and media for recording, searching, and outputting display information |
US20080282160A1 (en) * | 2007-04-06 | 2008-11-13 | James Ian Tonnison | Designated screen capturing and automatic image exporting |
US20080275701A1 (en) | 2007-04-25 | 2008-11-06 | Xiaotao Wu | System and method for retrieving data based on topics of conversation |
WO2008137160A1 (en) | 2007-05-07 | 2008-11-13 | Biap, Inc. | Providing personalized resources on-demand over a broadband network to consumer device applications |
US8688089B2 (en) | 2007-06-26 | 2014-04-01 | Gosub 60, Inc. | Methods and systems for providing in-game hot spots |
GB2462399A (en) | 2007-06-28 | 2010-02-10 | Taptu Ltd | Search result ranking |
US7921069B2 (en) | 2007-06-28 | 2011-04-05 | Yahoo! Inc. | Granular data for behavioral targeting using predictive models |
JP2009026096A (en) * | 2007-07-20 | 2009-02-05 | Fuji Xerox Co Ltd | Network system |
WO2009026193A2 (en) | 2007-08-17 | 2009-02-26 | Accupatent, Inc. | System and method for search |
US20090228777A1 (en) | 2007-08-17 | 2009-09-10 | Accupatent, Inc. | System and Method for Search |
US9137377B2 (en) * | 2007-08-22 | 2015-09-15 | Citrix Systems, Inc. | Systems and methods for at least partially releasing an appliance from a private branch exchange |
US8638363B2 (en) | 2009-02-18 | 2014-01-28 | Google Inc. | Automatically capturing information, such as capturing information using a document-aware device |
US8594996B2 (en) | 2007-10-17 | 2013-11-26 | Evri Inc. | NLP-based entity recognition and disambiguation |
WO2009052308A1 (en) | 2007-10-17 | 2009-04-23 | Roseman Neil S | Nlp-based content recommender |
WO2009054619A2 (en) | 2007-10-22 | 2009-04-30 | Moon Key Lee | Augmented reality computer device |
US9159034B2 (en) | 2007-11-02 | 2015-10-13 | Ebay Inc. | Geographically localized recommendations in a computing advice facility |
US20110246471A1 (en) | 2010-04-06 | 2011-10-06 | Selim Shlomo Rakib | Retrieving video annotation metadata using a p2p network |
US8255386B1 (en) | 2008-01-30 | 2012-08-28 | Google Inc. | Selection of documents to place in search index |
JP5336748B2 (en) | 2008-03-06 | 2013-11-06 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Computers, methods, and programs for effectively communicating accessibility issues in content to others |
US8131066B2 (en) | 2008-04-04 | 2012-03-06 | Microsoft Corporation | Image classification |
US7970808B2 (en) | 2008-05-05 | 2011-06-28 | Microsoft Corporation | Leveraging cross-document context to label entity |
US7962444B2 (en) * | 2008-05-19 | 2011-06-14 | Qualcomm Incorporated | System and method for presenting a contextual action for an indicator |
US8630972B2 (en) | 2008-06-21 | 2014-01-14 | Microsoft Corporation | Providing context for web articles |
US20100010987A1 (en) | 2008-07-01 | 2010-01-14 | Barry Smyth | Searching system having a server which automatically generates search data sets for shared searching |
CN101667185B (en) | 2008-09-05 | 2012-10-17 | 深圳富泰宏精密工业有限公司 | Mobile device and fast display method of image thereof |
CN101763357B (en) | 2008-11-13 | 2016-09-14 | 北京搜狗科技发展有限公司 | A kind of method and system for browser to load internet resources |
CN102257502B (en) | 2008-12-18 | 2015-11-25 | 皇家飞利浦电子股份有限公司 | Software error and performance deficiency reporting system |
US8229883B2 (en) | 2009-03-30 | 2012-07-24 | Sap Ag | Graph based re-composition of document fragments for name entity recognition under exploitation of enterprise databases |
CN102379121A (en) | 2009-04-01 | 2012-03-14 | 惠普开发有限公司 | Screen capture |
US8370762B2 (en) | 2009-04-10 | 2013-02-05 | Cellco Partnership | Mobile functional icon use in operational area in touch panel devices |
US8533223B2 (en) | 2009-05-12 | 2013-09-10 | Comcast Interactive Media, LLC. | Disambiguation and tagging of entities |
US20100306249A1 (en) | 2009-05-27 | 2010-12-02 | James Hill | Social network systems and methods |
US20100313141A1 (en) | 2009-06-03 | 2010-12-09 | Tianli Yu | System and Method for Learning User Genres and Styles and for Matching Products to User Preferences |
CN101587495A (en) | 2009-07-08 | 2009-11-25 | 伍帝州 | Method and system for downloading and disposing application through browser and providing application entrance |
US8571319B2 (en) | 2009-07-28 | 2013-10-29 | International Business Machines Corporation | Enhanced screen capture for form manipulation |
US9135277B2 (en) | 2009-08-07 | 2015-09-15 | Google Inc. | Architecture for responding to a visual query |
JP2013506175A (en) | 2009-09-25 | 2013-02-21 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Management of application state information by unified resource identifier (URI) |
KR101651128B1 (en) | 2009-10-05 | 2016-08-25 | 엘지전자 주식회사 | Mobile terminal and method for controlling application execution thereof |
US8131786B1 (en) | 2009-11-23 | 2012-03-06 | Google Inc. | Training scoring models optimized for highly-ranked results |
US8977639B2 (en) | 2009-12-02 | 2015-03-10 | Google Inc. | Actionable search results for visual queries |
US20110128288A1 (en) | 2009-12-02 | 2011-06-02 | David Petrou | Region of Interest Selector for Visual Queries |
US9405772B2 (en) | 2009-12-02 | 2016-08-02 | Google Inc. | Actionable search results for street view visual queries |
US20110145692A1 (en) | 2009-12-16 | 2011-06-16 | Peter Noyes | Method for Tracking Annotations with Associated Actions |
US20110191676A1 (en) | 2010-01-29 | 2011-08-04 | Microsoft Corporation | Cross-Browser Interactivity Recording, Playback, and Editing |
EP2531969A4 (en) | 2010-02-01 | 2013-12-04 | Jumptap Inc | Integrated advertising system |
US20110202864A1 (en) * | 2010-02-15 | 2011-08-18 | Hirsch Michael B | Apparatus and methods of receiving and acting on user-entered information |
US20110225152A1 (en) | 2010-03-15 | 2011-09-15 | Microsoft Corporation | Constructing a search-result caption |
US8799061B1 (en) | 2010-04-26 | 2014-08-05 | Google Inc. | Classifying users for ad targeting |
US8494439B2 (en) | 2010-05-04 | 2013-07-23 | Robert Bosch Gmbh | Application state and activity transfer between devices |
KR101657545B1 (en) | 2010-05-11 | 2016-09-19 | 엘지전자 주식회사 | Mobile terminal and operating method thereof |
US9158846B2 (en) | 2010-06-10 | 2015-10-13 | Microsoft Technology Licensing, Llc | Entity detection and extraction for entity cards |
JP4712118B1 (en) * | 2010-08-12 | 2011-06-29 | ヤフー株式会社 | Mobile terminal, application selection method and program |
US8972467B2 (en) * | 2010-08-31 | 2015-03-03 | Sovanta Ag | Method for selecting a data set from a plurality of data sets by means of an input device |
US20120083294A1 (en) | 2010-09-30 | 2012-04-05 | Apple Inc. | Integrated image detection and contextual commands |
US20120092286A1 (en) | 2010-10-19 | 2012-04-19 | Microsoft Corporation | Synthetic Gesture Trace Generator |
US9189549B2 (en) | 2010-11-08 | 2015-11-17 | Microsoft Technology Licensing, Llc | Presenting actions and providers associated with entities |
EP2646949B1 (en) | 2010-12-01 | 2018-10-03 | Google LLC | Identifying matching source documents in response to a visual query |
KR101757870B1 (en) | 2010-12-16 | 2017-07-26 | 엘지전자 주식회사 | Mobile terminal and control method therof |
US8880555B2 (en) | 2010-12-17 | 2014-11-04 | Facebook, Inc. | Ranking of address book contacts based on social proximity |
KR101741551B1 (en) | 2010-12-20 | 2017-06-15 | 엘지전자 주식회사 | Mobile terminal and Method for controlling application thereof |
WO2012101585A1 (en) | 2011-01-28 | 2012-08-02 | Strangeloop Networks, Inc. | Prioritized image rendering based on position within a web page |
US10242341B2 (en) * | 2011-03-03 | 2019-03-26 | Lenovo (Singapore) Pte. Ltd. | Automatic taskbar grouping by user tasks |
US8341156B1 (en) | 2011-04-04 | 2012-12-25 | Google Inc. | System and method for identifying erroneous business listings |
WO2012142751A1 (en) | 2011-04-19 | 2012-10-26 | Nokia Corporation | Method and apparatus for flexible diversification of recommendation results |
JP2012252742A (en) | 2011-06-02 | 2012-12-20 | Elpida Memory Inc | Semiconductor device |
US9377867B2 (en) | 2011-08-11 | 2016-06-28 | Eyesight Mobile Technologies Ltd. | Gesture based interface system and method |
US9224100B1 (en) * | 2011-09-26 | 2015-12-29 | Google Inc. | Method and apparatus using accelerometer data to serve better ads |
US20150212695A1 (en) | 2011-10-05 | 2015-07-30 | Google Inc. | Suggested action feedback |
US20130097507A1 (en) | 2011-10-18 | 2013-04-18 | Utc Fire And Security Corporation | Filmstrip interface for searching video |
EP2587745A1 (en) | 2011-10-26 | 2013-05-01 | Swisscom AG | A method and system of obtaining contact information for a person or an entity |
CA2854142A1 (en) | 2011-11-01 | 2013-05-10 | Google Inc. | Launching applications from webpages |
US20130117252A1 (en) | 2011-11-09 | 2013-05-09 | Google Inc. | Large-scale real-time fetch service |
US9665643B2 (en) | 2011-12-30 | 2017-05-30 | Microsoft Technology Licensing, Llc | Knowledge-based entity detection and disambiguation |
CN104054092B (en) | 2012-01-31 | 2017-10-24 | 基文影像公司 | System and method for the energy event in image stream in display body |
US10984337B2 (en) * | 2012-02-29 | 2021-04-20 | Microsoft Technology Licensing, Llc | Context-based search query formation |
US9171068B2 (en) | 2012-03-07 | 2015-10-27 | Ut-Battelle, Llc | Recommending personally interested contents by text mining, filtering, and interfaces |
US20130263098A1 (en) | 2012-03-29 | 2013-10-03 | Pawel Piotr Duda | Method and system for testing of mobile web sites |
US9836545B2 (en) | 2012-04-27 | 2017-12-05 | Yahoo Holdings, Inc. | Systems and methods for personalized generalized content recommendations |
WO2013173940A1 (en) | 2012-05-22 | 2013-11-28 | Beijing Baina Info - Tech,Co., Ltd | A method and system for providing application data |
US9582146B2 (en) | 2012-05-29 | 2017-02-28 | Nokia Technologies Oy | Causing display of search results |
US9075974B2 (en) | 2012-07-25 | 2015-07-07 | Google Inc. | Securing information using entity detection |
US9195645B2 (en) * | 2012-07-30 | 2015-11-24 | Microsoft Technology Licensing, Llc | Generating string predictions using contexts |
US10091552B2 (en) | 2012-09-19 | 2018-10-02 | Rovi Guides, Inc. | Methods and systems for selecting optimized viewing portions |
US9165406B1 (en) | 2012-09-21 | 2015-10-20 | A9.Com, Inc. | Providing overlays based on text in a live camera view |
US9274839B2 (en) | 2012-09-27 | 2016-03-01 | Intel Corporation | Techniques for dynamic physical memory partitioning |
US9407824B2 (en) | 2012-11-01 | 2016-08-02 | Google Inc. | Multi-directional content capture on mobile devices |
EP2728481A1 (en) | 2012-11-04 | 2014-05-07 | Rightware Oy | Evaluation of page load performance of web browser |
US20140146200A1 (en) | 2012-11-28 | 2014-05-29 | Research In Motion Limited | Entries to an electronic calendar |
US20150178786A1 (en) | 2012-12-25 | 2015-06-25 | Catharina A.J. Claessens | Pictollage: Image-Based Contextual Advertising Through Programmatically Composed Collages |
US20140188956A1 (en) * | 2012-12-28 | 2014-07-03 | Microsoft Corporation | Personalized real-time recommendation system |
US20140188889A1 (en) | 2012-12-31 | 2014-07-03 | Motorola Mobility Llc | Predictive Selection and Parallel Execution of Applications and Services |
US10445786B2 (en) | 2013-01-23 | 2019-10-15 | Facebook, Inc. | Sponsored interfaces in a social networking system |
US20150169701A1 (en) | 2013-01-25 | 2015-06-18 | Google Inc. | Providing customized content in knowledge panels |
US20140250147A1 (en) | 2013-03-01 | 2014-09-04 | Quixey, Inc. | Generating Search Results Containing State Links to Applications |
US20140279013A1 (en) | 2013-03-13 | 2014-09-18 | Ebay Inc. | Online and offline ecommerce connections |
US9247309B2 (en) | 2013-03-14 | 2016-01-26 | Google Inc. | Methods, systems, and media for presenting mobile content corresponding to media content |
WO2014146265A1 (en) | 2013-03-20 | 2014-09-25 | Nokia Corporation | Method and apparatus for personalized resource recommendations |
US20140298200A1 (en) * | 2013-03-29 | 2014-10-02 | Google Inc. | Providing user interface elements for interactive sessions |
US20140316890A1 (en) | 2013-04-23 | 2014-10-23 | Quixey, Inc. | Entity Bidding |
WO2014176744A1 (en) | 2013-04-28 | 2014-11-06 | Tencent Technology (Shenzhen) Company Limited | An information collection, storage, and sharing platform |
US9786075B2 (en) | 2013-06-07 | 2017-10-10 | Microsoft Technology Licensing, Llc | Image extraction and image-based rendering for manifolds of terrestrial and aerial visualizations |
US9721107B2 (en) | 2013-06-08 | 2017-08-01 | Apple Inc. | Using biometric verification to grant access to redacted content |
KR102136602B1 (en) | 2013-07-10 | 2020-07-22 | 삼성전자 주식회사 | Apparatus and method for processing a content in mobile device |
WO2015027442A1 (en) * | 2013-08-30 | 2015-03-05 | Google Inc. | Content selection with precision controls |
US9329692B2 (en) | 2013-09-27 | 2016-05-03 | Microsoft Technology Licensing, Llc | Actionable content displayed on a touch screen |
US9354778B2 (en) | 2013-12-06 | 2016-05-31 | Digimarc Corporation | Smartphone-based methods and systems |
US10235470B2 (en) * | 2013-12-06 | 2019-03-19 | Here Global B.V. | User retrieval enhancement |
KR102282487B1 (en) * | 2014-05-08 | 2021-07-26 | 삼성전자주식회사 | Apparatus and method for executing application |
US9679078B2 (en) | 2014-05-21 | 2017-06-13 | Facebook, Inc. | Search client context on online social networks |
US9916328B1 (en) | 2014-07-11 | 2018-03-13 | Google Llc | Providing user assistance from interaction understanding |
US8954836B1 (en) | 2014-08-19 | 2015-02-10 | Adlast, Inc. | Systems and methods for directing access to products and services |
US9965559B2 (en) | 2014-08-21 | 2018-05-08 | Google Llc | Providing automatic actions for mobile onscreen content |
US9424668B1 (en) | 2014-08-28 | 2016-08-23 | Google Inc. | Session-based character recognition for document reconstruction |
US9606716B2 (en) | 2014-10-24 | 2017-03-28 | Google Inc. | Drag-and-drop on a mobile device |
JP2015043236A (en) | 2014-11-17 | 2015-03-05 | 富士通株式会社 | Information providing apparatus, information providing method, and program |
WO2016131207A1 (en) * | 2015-02-16 | 2016-08-25 | 锤子软件（北京）有限公司 | Control method, control apparatus and electronic device |
US9336483B1 (en) * | 2015-04-03 | 2016-05-10 | Pearson Education, Inc. | Dynamically updated neural network structures for content distribution networks |
US9703541B2 (en) | 2015-04-28 | 2017-07-11 | Google Inc. | Entity action suggestion on a mobile device |
US10152488B2 (en) * | 2015-05-13 | 2018-12-11 | Samsung Electronics Co., Ltd. | Static-analysis-assisted dynamic application crawling architecture |
US10922094B2 (en) * | 2015-06-05 | 2021-02-16 | Apple Inc. | Systems and methods for proactively providing recommendations to a user of a computing device |
US10970646B2 (en) | 2015-10-01 | 2021-04-06 | Google Llc | Action suggestions for user-selected content |
US10178527B2 (en) | 2015-10-22 | 2019-01-08 | Google Llc | Personalized entity repository |
-
2015
- 2015-11-18 US US14/945,348 patent/US10055390B2/en active Active
-
2016
- 2016-11-17 KR KR1020187012186A patent/KR102078786B1/en active IP Right Grant
- 2016-11-17 WO PCT/US2016/062475 patent/WO2017087639A1/en active Application Filing
- 2016-11-17 JP JP2018525568A patent/JP6791963B2/en active Active
- 2016-11-17 RU RU2018114074A patent/RU2018114074A/en not_active Application Discontinuation
- 2016-11-17 CN CN201680062824.9A patent/CN108700987B/en active Active
- 2016-11-17 CN CN202110557172.9A patent/CN113343644A/en active Pending
- 2016-11-17 DE DE112016005286.3T patent/DE112016005286T5/en active Pending
- 2016-11-17 GB GB1805231.6A patent/GB2558108B/en active Active
- 2016-11-17 EP EP16808861.5A patent/EP3341840A1/en not_active Withdrawn
-
2018
- 2018-07-31 US US16/050,763 patent/US10733360B2/en active Active
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8468110B1 (en) * | 2010-07-22 | 2013-06-18 | Intuit Inc. | Real-time user behavior prediction |
US20130091463A1 (en) * | 2011-10-05 | 2013-04-11 | Paul Nordstrom | Semantic selection and purpose facilitation |
US20150100524A1 (en) * | 2013-10-07 | 2015-04-09 | Microsoft Corporation | Smart selection of text spans |
Cited By (54)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10244369B1 (en) | 2014-07-11 | 2019-03-26 | Google Llc | Screen capture image repository for a user |
US10652706B1 (en) | 2014-07-11 | 2020-05-12 | Google Llc | Entity disambiguation in a mobile environment |
US10592261B1 (en) | 2014-07-11 | 2020-03-17 | Google Llc | Automating user input from onscreen content |
US11704136B1 (en) | 2014-07-11 | 2023-07-18 | Google Llc | Automatic reminders in a mobile environment |
US9798708B1 (en) | 2014-07-11 | 2017-10-24 | Google Inc. | Annotating relevant content in a screen capture image |
US9811352B1 (en) | 2014-07-11 | 2017-11-07 | Google Inc. | Replaying user input actions using screen capture images |
US9886461B1 (en) | 2014-07-11 | 2018-02-06 | Google Llc | Indexing mobile onscreen content |
US9916328B1 (en) | 2014-07-11 | 2018-03-13 | Google Llc | Providing user assistance from interaction understanding |
US10248440B1 (en) | 2014-07-11 | 2019-04-02 | Google Llc | Providing a set of user input actions to a mobile device to cause performance of the set of user input actions |
US10080114B1 (en) | 2014-07-11 | 2018-09-18 | Google Llc | Detection and ranking of entities from mobile onscreen content |
US9965559B2 (en) | 2014-08-21 | 2018-05-08 | Google Llc | Providing automatic actions for mobile onscreen content |
US11734708B2 (en) | 2015-06-05 | 2023-08-22 | Apple Inc. | User interface for loyalty accounts and private label accounts |
US11321731B2 (en) | 2015-06-05 | 2022-05-03 | Apple Inc. | User interface for loyalty accounts and private label accounts |
US10970646B2 (en) | 2015-10-01 | 2021-04-06 | Google Llc | Action suggestions for user-selected content |
US11089457B2 (en) | 2015-10-22 | 2021-08-10 | Google Llc | Personalized entity repository |
US10178527B2 (en) | 2015-10-22 | 2019-01-08 | Google Llc | Personalized entity repository |
US11716600B2 (en) | 2015-10-22 | 2023-08-01 | Google Llc | Personalized entity repository |
US20170147165A1 (en) * | 2015-11-23 | 2017-05-25 | Lg Electronics Inc. | Mobile device and method of controlling therefor |
US11599241B2 (en) * | 2015-11-30 | 2023-03-07 | Snap Inc. | Network resource location linking and visual content sharing |
US10091344B2 (en) * | 2016-03-28 | 2018-10-02 | International Business Machines Corporation | Displaying virtual target window on mobile device based on user intent |
US20170279951A1 (en) * | 2016-03-28 | 2017-09-28 | International Business Machines Corporation | Displaying Virtual Target Window on Mobile Device Based on User Intent |
US10042550B2 (en) * | 2016-03-28 | 2018-08-07 | International Business Machines Corporation | Displaying virtual target window on mobile device based on directional gesture |
US20170277266A1 (en) * | 2016-03-28 | 2017-09-28 | International Business Machines Corporation | Displaying Virtual Target Window on Mobile Device Based on Directional Gesture |
US11580608B2 (en) | 2016-06-12 | 2023-02-14 | Apple Inc. | Managing contact information for communication applications |
US11922518B2 (en) | 2016-06-12 | 2024-03-05 | Apple Inc. | Managing contact information for communication applications |
US10535005B1 (en) | 2016-10-26 | 2020-01-14 | Google Llc | Providing contextual actions for mobile onscreen content |
US11734581B1 (en) | 2016-10-26 | 2023-08-22 | Google Llc | Providing contextual actions for mobile onscreen content |
US11860668B2 (en) | 2016-12-19 | 2024-01-02 | Google Llc | Smart assist for repeated actions |
US11237696B2 (en) | 2016-12-19 | 2022-02-01 | Google Llc | Smart assist for repeated actions |
US20180365789A1 (en) * | 2017-06-16 | 2018-12-20 | Yokogawa Electric Corporation | Device management apparatus, device management method, and non-transitory computer readable storage medium |
CN107220094A (en) * | 2017-06-27 | 2017-09-29 | 北京金山安全软件有限公司 | Page loading method and device and electronic equipment |
WO2019000710A1 (en) * | 2017-06-27 | 2019-01-03 | 北京金山安全软件有限公司 | Page loading method, apparatus and electronic device |
US11392664B1 (en) * | 2017-08-29 | 2022-07-19 | Massachusetts Mutual Life Insurance Company | Dynamic web application based on events |
US11928173B1 (en) | 2017-08-29 | 2024-03-12 | Massachusetts Mutual Life Insurance Company | Dynamic web application based on events |
US20200075009A1 (en) * | 2017-10-29 | 2020-03-05 | International Business Machines Corporation | Creating modular conversations using implicit routing |
US20190130905A1 (en) * | 2017-10-29 | 2019-05-02 | International Business Machines Corporation | Creating modular conversations using implicit routing |
US10546584B2 (en) * | 2017-10-29 | 2020-01-28 | International Business Machines Corporation | Creating modular conversations using implicit routing |
US10665242B2 (en) * | 2017-10-29 | 2020-05-26 | International Business Machines Corporation | Creating modular conversations using implicit routing |
US10957324B2 (en) * | 2017-10-29 | 2021-03-23 | International Business Machines Corporation | Creating modular conversations using implicit routing |
US20200145527A1 (en) * | 2017-12-29 | 2020-05-07 | DMAI, Inc. | System and method for personalized and adaptive application management |
US11222632B2 (en) | 2017-12-29 | 2022-01-11 | DMAI, Inc. | System and method for intelligent initiation of a man-machine dialogue based on multi-modal sensory inputs |
US11190635B2 (en) * | 2017-12-29 | 2021-11-30 | DMAI, Inc. | System and method for personalized and adaptive application management |
US11504856B2 (en) | 2017-12-29 | 2022-11-22 | DMAI, Inc. | System and method for selective animatronic peripheral response for human machine dialogue |
US11024294B2 (en) | 2017-12-29 | 2021-06-01 | DMAI, Inc. | System and method for dialogue management |
US11331807B2 (en) | 2018-02-15 | 2022-05-17 | DMAI, Inc. | System and method for dynamic program configuration |
JP7111818B2 (en) | 2018-03-21 | 2022-08-02 | グーグル エルエルシー | Data transfer within a secure processing environment |
US11392688B2 (en) | 2018-03-21 | 2022-07-19 | Google Llc | Data transfer in secure processing environments |
JP2021515256A (en) * | 2018-03-21 | 2021-06-17 | グーグル エルエルシーＧｏｏｇｌｅ ＬＬＣ | Data transfer within a secure processing environment |
US11907363B2 (en) | 2018-03-21 | 2024-02-20 | Google Llc | Data transfer in secure processing environments |
US10678571B2 (en) * | 2018-07-13 | 2020-06-09 | Microsoft Technology Licensing, Llc | Image-based skill triggering |
WO2020180034A1 (en) * | 2019-03-05 | 2020-09-10 | 삼성전자 주식회사 | Method and device for providing user-selection-based information |
US11617022B2 (en) | 2020-06-01 | 2023-03-28 | Apple Inc. | User interfaces for managing media |
US11330184B2 (en) | 2020-06-01 | 2022-05-10 | Apple Inc. | User interfaces for managing media |
US11054973B1 (en) | 2020-06-01 | 2021-07-06 | Apple Inc. | User interfaces for managing media |
Also Published As
Publication number | Publication date |
---|---|
US20180336170A1 (en) | 2018-11-22 |
WO2017087639A1 (en) | 2017-05-26 |
KR102078786B1 (en) | 2020-02-19 |
CN113343644A (en) | 2021-09-03 |
GB2558108B (en) | 2021-12-15 |
CN108700987A (en) | 2018-10-23 |
GB2558108A (en) | 2018-07-04 |
EP3341840A1 (en) | 2018-07-04 |
US10733360B2 (en) | 2020-08-04 |
JP6791963B2 (en) | 2020-11-25 |
JP2018538616A (en) | 2018-12-27 |
CN108700987B (en) | 2021-05-28 |
US10055390B2 (en) | 2018-08-21 |
GB201805231D0 (en) | 2018-05-16 |
DE112016005286T5 (en) | 2018-08-09 |
KR20180058820A (en) | 2018-06-01 |
RU2018114074A (en) | 2019-12-18 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10733360B2 (en) | Simulated hyperlinks on a mobile device | |
US20210027203A1 (en) | Action suggestions for user-selected content | |
US11573810B1 (en) | Sharing screen content in a mobile environment | |
US9703541B2 (en) | Entity action suggestion on a mobile device | |
US11734581B1 (en) | Providing contextual actions for mobile onscreen content | |
KR20170030382A (en) | Method and system for providing search result of words within content |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SHARIFI, MATTHEW;PETROU, DAVID;REEL/FRAME:037129/0381Effective date: 20151118 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
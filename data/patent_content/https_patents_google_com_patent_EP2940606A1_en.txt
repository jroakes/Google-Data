EP2940606A1 - Searchable index - Google Patents
Searchable index Download PDFInfo
- Publication number
- EP2940606A1 EP2940606A1 EP15165975.2A EP15165975A EP2940606A1 EP 2940606 A1 EP2940606 A1 EP 2940606A1 EP 15165975 A EP15165975 A EP 15165975A EP 2940606 A1 EP2940606 A1 EP 2940606A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- outcome
- token
- query
- user
- features
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
- G06N5/022—Knowledge engineering; Knowledge acquisition
- G06N5/025—Extracting rules from data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/31—Indexing; Data structures therefor; Storage structures
- G06F16/316—Indexing structures
- G06F16/319—Inverted lists
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
Definitions
- Recommendation systems can have separate information retrieval and machine-learned ranking stages.
- the information retrieval stage selects documents (videos, advertisements, music, text documents, etc.) from a corpus based on various signals and the machine-learned system ranks the output of the information retrieval system. For example, when a user enters a query "cat", a contextual information retrieval system may select a set of candidate advertisements that contain the word "cat" from all available advertisements. This set of candidate advertisements can then be ranked based on a machine-learned model that has been trained to predict the likelihood of an advertisement being clicked through by a user based on various features, such as the type of user, the location of the user, the time of day at which the query was made, etc.
- An information retrieval tool is computationally efficient, but can only produce a rough estimate of which items are best recommended to a user.
- a machine-learned model can produce more accurate recommendations, but is often more computationally intensive than an information retrieval tool. Further, because the information retrieval tool is less accurate, it can exclude certain candidates from consideration using the machine-learned model that would otherwise be highly ranked.
- a plurality of rules from a machine learning model may be generated by a computerized machine learning system and received, each rule containing an outcome, one or more features, and an outcome probability predicted by the machine learning model for the one or more features and the outcome.
- An entry for a token-based index may be generated for each of the plurality of rules and may contain one or more tokens based on the one or more features of the rule, the outcome of the rule, and the outcome probability of the rule.
- a query may be received and a subset of tokens that correspond to the query may be identified.
- the token-based index may be searched to obtain a plurality of outcome probabilities based on the subset of tokens.
- An outcome may be selected based on the plurality of outcome probabilities and may be provided to a user.
- a subset of selected outcomes may be ranked. For example, a hundred videos (outcomes) may be ranked by probability and the top twenty may be shown, from highest to lowest probability, to the user.
- Systems and techniques according to the present disclosure may generate or modify one or more indices based on rules and results of a model that is the product of a machine learning system.
- the generated or modified indices may be used to provide results based on a search technique.
- a searchable index may be generated based on rules derived from a machine-learned model.
- the superior intelligence and logic of a machine-learned model can be embodied in an easily-searchable index.
- Standard information retrieval tools can be used to efficiently retrieve data using the index. This can compare favorably to a system that has separate information retrieval and machine-learned ranking stages by eliminating the loss of candidates during the information retrieval stage that would otherwise be highly scored by the machine-learned model. Overall, more candidates can be more accurately ranked in accordance with an implementation of the disclosed subject matter.
- the techniques disclosed herein may be applied to machine-learned models generated using supervised learning data such as labeled examples.
- the labeled examples may be input into a machine learning system and the output from the machine learning system may be a machine-learned model that contains weights that are generated in response to the labeled data.
- the labeled examples may contain both an outcome and properties associated with a specific instance. It will be understood that the weights and outcomes may be unitless numerical values, percentages, counts of occurrences, or other quantification.
- a machine learning system may receive labeled data (e.g., labeled examples) to develop a machine-learned model that contains weights that are generated in response to the supervised labeled data.
- One or more rules may be created by a machine-learned model.
- a rule can include an outcome, a set of features and a probability.
- the rule can include an outcome, a set of features and a probability. For example, the rule:
- the entries in a searchable index can include documents and searchable tokens.
- a token in a machine-learned token-based index can be referred to as an indexed token.
- An indexed token may include a keyword or may not include a keyword.
- an index can include one token that includes the keyword "car" as well as other tokens that do not include keywords but that relate to other features such as location, language and browser settings.
- a feature can include any information known about a user, such as a query text submitted by the user, a browser configuration set by the user, etc.
- a feature can be general state information such as the time of day, a geographic location, etc.
- a webpage can be indexed to produce an entry as follows:
- a standard rule-based machine-learned model can be decomposed into a set of documents and tokens with weights.
- the following rules indicate the likelihood that a user who enters the search keyword "car" into a search engine will select a video about a particular carmaker:
- These rules can be transformed into entries that include a set of searchable tokens corresponding to each video, such as:
- An entry can include an outcome (such as "carmaker_1”), tokens (such as keyword:car) and a weight (such as 3%).
- the tokens can be based on the occurrence of features in a machine-learned rule.
- a weight can correspond to the probability that the outcome will occur based on the occurrence of certain features, represented here as tokens.
- features can be associated with a given user.
- the following table shows the presence (1) or absence (0) of features (query, user location (Europe, America) and whether the user has a high bandwidth connection) for Users A-D: Car Europe America High Bandwidth User A 0 0 1 1 User B 1 0 1 0 User C 0 1 0 1 User D 1 1 0 1
- a machine-learned model can include weights that can indicate the relative contributions of various features to the likelihood of an outcome.
- the table below shows the relative contributions of the features in the table above to the likelihood that a user will select for viewing a particular video A-D: Car Europe America High Bandwidth Video A 0.1 0.4 0.8 0.5 Video B 0.3 0.9 0.7 0.8 Video C 0.5 0.1 0.2 0.1 Video D 0.2 0.6 0.2 0.8
- the presence or absence of a feature for a given user can be used with the weight of the feature for an outcome to determine the likelihood of that outcome for that user. For example, the presence of keyword:car and America for User B combined with the weights for those features for Video C (0.5 and 0.2, respectively) can be used to predict a probability that User B will select Video C for viewing. In similar fashion, the likelihood that each user will choose to view each different video can be calculated. It will be understood that the weights may be unitless numerical values, percentages, counts of occurrences, or other quantification.
- Rules can be generated based on the machine-learned model.
- a rule can correlate at least one feature with a probability of occurrence of a given outcome.
- a number of rules can be generated based on the occurrences of various permutations of features.
- a set of tokens can be generated based on the features in a rule.
- Examples of such tokens can include [keyword:car], [location:Europe] and [bandwidth:high].
- a set of tokens corresponding to a set of features in a rule can be correlated with a probability of a given outcome and indexed.
- the tokens [keyword:car], [location:Europe] and [bandwidth:high] can be correlated with a 4% probability that Video C will be selected to be viewed:
- the compiled index can be easily searched using standard information retrieval tools.
- the generated index is referred to as a token-based index.
- the index is based on tokens that are not limited to keywords.
- one or more ranking techniques can thereafter be employed to further refine the search results in response to a query.
- the index can be used to consider only those tokens corresponding to features for a given user. For example, a search of the index can retrieve all videos for which probabilities have been calculated for a user whose last viewed video was about cats and whose location is America. The resulting videos can be ranked by probability from most to least likely to be selected next for viewing when presented as subsequent viewing options to the user. Descriptions (e.g., thumbnails) for the top-ranked videos in the list can be recommended to the user.
- An outcome may be one for which the machine learning model predicted an outcome value.
- the value may be a weight, likelihood, or probability.
- probability By way of example only, we refer to probability herein.
- the outcome may be any applicable result such as a regression-based prediction, a ranking, a conversion probability, a click through probability, a duration prediction (e.g., how long a user is likely to view/interact with content associated with the outcome), or the like.
- a user viewing video Y and a user viewing the video Z are examples of outcomes.
- outcomes may be selecting a link, selecting a promotion, opening an account, purchasing a product or service, the duration for which a user views a content (e.g., a video, an image, a text, etc.), repeat access (e.g., how likely a user is to revisit content), or the like.
- a content e.g., a video, an image, a text, etc.
- repeat access e.g., how likely a user is to revisit content
- An outcome probability may be represented in any useful form, including integer representations, Boolean categorization, normalization (e.g., the probability value converted into a normalized probability, conversion rate, percentage, etc.). It will be understood that an outcome probability may be any applicable prediction such as a percentage, ratio, or the like and/or may correspond to a prediction of amount spent (e.g., dollars spent), amount of exposure time (e.g., video minutes watched), or the like. As disclosed herein, the outcome probability may be derived from the prediction made by the machine learning model. As an example of an outcome probability, a searchable index may contain multiple entries, each associated with an outcome. Each entry may correspond to an outcome probability that predicts the likelihood of a user selecting the content associated with the outcome. Accordingly, the outcome probability may represent the percentage chance of a user selecting content associated with the outcome.
- a machine-learned model 110 may be trained based on training examples and features.
- a searchable token-based index 120 may be generated based on rules generated by the machine-learned model.
- the searchable token-based index 120 may be organized such that tokens associated with a query 130 may be matched with the tokens in the searchable token-based index 120 and, using a search algorithm, an outcome/outcomes 140 may be selected based on one or more outcome probabilities.
- a machine learning system may be used to generate and/or update models that are used to make predictions and/or provide rankings.
- An instance of a machine learning model-based prediction may contain an outcome, one or more features, and a prediction value.
- a prediction made via a machine learning model multiple features for a given event may be provided to the machine learning model and, based on the presence of the features, the machine learning model may output a probability or prediction.
- a machine learning model that predicts whether a user will view video Y (an example of an outcome) may be provided with features that the user located in the United States, has viewed a music video X in the past, and has set her default language as English (examples of features).
- the machine learning model may contain weights for each of the features (i.e., .5 for being located in the United States, .9 for having viewed music video X, and .3 for setting the default language as English). It will be understood that the machine learning model may contain weights for other features (e.g. the use is located in Canada) however, as those features are not present in this example prediction, their weights may not contribute to the prediction. Alternatively, the lack of presence of a particular feature may be important in predicting an outcome and may be taken into account. For example, the machine learning model may provide a weight for whether the user will view music video Y based on the absence of a feature (e.g., the user is not using a mobile device).
- the prediction value may be normalized to represent a percentage or probability in any applicable manner.
- the instance may contain the outcome: "whether the user will view video Y", the features: “located in the United States”, “viewed video X”, and “default language English”, and the prediction: ".9” (normalized).
- a feature may be any applicable characteristic associated with an instance and may be based on a user (e.g., user demographic, user history, user associations such as user accounts or preferences), a device (e.g., a user device type, device features, device capabilities, device configuration etc.), a current event, or the like. Examples of features can include a user location, a user language preference, a view history, a user account, a user subscription, a device model type, a device screen resolution, a device operating system, a holiday designation, a sporting event occurrence, or the like. Additionally, as disclosed herein, a feature may be a search input (such as a text keyword, an image, an audio file, etc.) received from a user.
- a search input such as a text keyword, an image, an audio file, etc.
- the outcome, features, and/or the prediction may be represented in any useful form such as integer representations, via Boolean categorization, normalized (e.g., the probability value converted into a normalized probability, conversion rate, percentage, etc.).
- the machine learning model may be trained using prior selections of one more users (outcomes), as disclosed herein.
- the prediction made by the machine learning model may be based on the successful selection or lack of selection of an outcome such that the predicted outcome probability may increase based on selected candidate results and may decrease based on unselected outcomes.
- multiple rules based on a machine learning model may be received.
- An instance of a machine learning model-based rule may contain an outcome, one or more features, and an outcome probability.
- an outcome probability As an example of a prediction made via a machine learning model, multiple features for a given event may be provided to the machine learning model and, based on the presence of the features, the machine learning model may output a probability or prediction.
- a machine learning model that predicts whether a user will view video Y (an outcome) may be provided with data that the user located in the United States, has viewed a music video X in the past, and has set her default language as English (features).
- the machine learning model may prescribe weights for each of the features, e.g., .5 for being located in the United States, .9 for having viewed music video X, and .3 for setting the default language as English. Accordingly, the machine learning model may predict that the user will view music video Y with a weight of 1.7 based on the features associated with the rule.
- the probability value may be normalized to represent a percentage or probability in any applicable manner. Here the instance may contain the outcome: "whether the user will view video Y", the features: “located in the United States”, “viewed video X", and “default language English”, and the prediction: ".9" (normalized).
- outcome, features, and/or the probability may be represented in any applicable manner such as hash values, integer representations, Boolean categorization, normalization (e.g., the probability value converted into a normalized probability, conversion rate, percentage, etc.).
- normalization e.g., the probability value converted into a normalized probability, conversion rate, percentage, etc.
- an outcome for "Selecting video X" may be represented with a hash value "e0d123e5f316".
- an instance of a rule based on a machine learning model may be converted into an entry in a searchable feature based index.
- the entry in the searchable feature based index may contain an outcome associated with one or more tokens and an outcome probability.
- a token may be based on a feature contained within a rule.
- the model may predict a probability of 0.9 for the outcome "the user will view video Y" based on various features.
- the token-based index may include the tokens location:US, viewed_ video:X, and "language:English” correlated with the outcome "the user will view video Y" and a probability of 0.9.
- the token-based index may correlate the same tokens to other outcomes, each with its own probability. For example, the same tokens may be correlated to the outcome "the user will view video Z" with a probability of 0.8.
- a searchable token-based index may be an inverted index or a posting list such that it is an index data structure that is configured to store a mapping from content (e.g., words, numbers, values, etc.) to locations in a database file, to documents, or a set of documents.
- the searchable token-based index may allow fast full text searches and may be a database file itself rather than its index.
- a query may be received.
- a query may be generated based on an event caused by a human user, a computer, a database, software, an application, a server, or the like.
- the term query may include any input that can be used to search the index to obtain a probabilities of one or more outcomes based on the occurrence of one or more events. For example, when a user selects a given video, the characteristics of the selection (e.g., identity of the video, topic of the video, location of the user, etc.) can be used as the basis of a query to search the index for outcomes and their respective probabilities that the user will select other videos to watch next.
- the results of the query can predict, for example, that the user will select Video B with a probability of 0.2, Video C with a probability of 0.1 and Video D with a probability of 0.4.
- a query can be formulated based on a subset of tokens that may be identified, step 240, e.g., based on an event. For example, a keyword search for "car” may have been submitted by a user in Canada at 5:07 PM ET with the language setting of the user's browser set to "French.”
- the subset of tokens that may be identified can include keyword:car, location:Canada, time:5:07PMET and language:French. These tokens can be used to search the index for outcomes and probabilities correlated with the same or similar tokens in the index, step 250.
- the tokens associated with a query may be: keyword:car location:USA bandwith:high
- These tokens may correspond, for example, to the following entries in the index, which can efficiently be retrieved using standard index search techniques: Video ID Tokens associated with entry % Video A keyword:car location:USA bandwith:high 45 Video C keyword:car location:USA bandwith:high 24 Video F keyword:car location:USA bandwith:high 76 Video R keyword:car location:USA bandwith:high 55
- One or more outcomes may be selected from the above results, e.g., based on their respective outcome probabilities.
- the outcome Video F has the highest probability of being selected for viewing next. Accordingly, a link to Video F may be provided to a user.
- the next highest-ranked (most probable) videos (Video R and Video A) may also be presented.
- FIG. 3 is an example computer system 20 suitable for implementing embodiments of the presently disclosed subject matter.
- the computer 20 includes a bus 21 which interconnects major components of the computer 20, such as one or more processors 24, memory 27 such as RAM, ROM, flash RAM, or the like, an input/output controller 28, and fixed storage 23 such as a hard drive, flash storage, SAN device, or the like.
- a user display such as a display screen via a display adapter
- user input interfaces such as controllers and associated user input devices
- keyboard, mouse, touchscreen, or the like and other components known in the art to use in or in conjunction with general-purpose computing systems.
- the bus 21 allows data communication between the central processor 24 and the memory 27.
- the RAM is generally the main memory into which the operating system and application programs are loaded.
- the ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) that controls basic hardware operation such as the interaction with peripheral components.
- BIOS Basic Input-Output system
- Applications resident with the computer 20 are generally stored on and accessed via a computer readable medium, such as the fixed storage 23 and/or the memory 27, an optical drive, external storage mechanism, or the like.
- Each component shown may be integral with the computer 20 or may be separate and accessed through other interfaces.
- Other interfaces such as a network interface 29, may provide a connection to remote systems and devices via a telephone link, wired or wireless local- or wide-area network connection, proprietary network connections, or the like.
- the network interface 29 may allow the computer to communicate with other computers via one or more local, wide-area, or other networks, as shown in FIG. 4 .
- FIG. 4 shows an example arrangement according to an embodiment of the disclosed subject matter.
- One or more clients 10, 11, such as local computers, smart phones, tablet computing devices, remote services, and the like may connect to other devices via one or more networks 7.
- the network may be a local network, wide-area network, the Internet, or any other suitable communication network or networks, and may be implemented on any suitable platform including wired and/or wireless networks.
- the clients 10, 11 may communicate with one or more computer systems, such as processing units 14, databases 15, and user interface systems 13.
- clients 10, 11 may communicate with a user interface system 13, which may provide access to one or more other systems such as a database 15, a processing unit 14, or the like.
- the user interface 13 may be a user-accessible web page that provides data from one or more other computer systems.
- the user interface 13 may provide different interfaces to different clients, such as where a human-readable web page is provided to web browser clients 10, and a computer-readable API or other interface is provided to remote service clients 11.
- the user interface 13, database 15, and processing units 14 may be part of an integral system, or may include multiple computer systems communicating via a private network, the Internet, or any other suitable network.
- Processing units 14 may be, for example, part of a distributed system such as a cloud-based computing system, search engine, content delivery system, or the like, which may also include or communicate with a database 15 and/or user interface 13.
- an analysis system 5 may provide back-end processing, such as where stored or acquired data is pre-processed by the analysis system 5 before delivery to the processing unit 14, database 15, and/or user interface 13.
- a machine learning system 5 may provide various prediction models, data analysis, or the like to one or more other systems 13, 14, 15.
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., a user's performance score, a user's work product, a user's provided input, a user's geographic location, and any other similar data associated with a user), or to control whether and/or how to receive instructional course content from the instructional course provider that may be more relevant to the user.
- user information e.g., a user's performance score, a user's work product, a user's provided input, a user's geographic location, and any other similar data associated with a user
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location associated with an instructional course may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by an instructional course provider.
Abstract
Description
- Recommendation systems can have separate information retrieval and machine-learned ranking stages. The information retrieval stage selects documents (videos, advertisements, music, text documents, etc.) from a corpus based on various signals and the machine-learned system ranks the output of the information retrieval system. For example, when a user enters a query "cat", a contextual information retrieval system may select a set of candidate advertisements that contain the word "cat" from all available advertisements. This set of candidate advertisements can then be ranked based on a machine-learned model that has been trained to predict the likelihood of an advertisement being clicked through by a user based on various features, such as the type of user, the location of the user, the time of day at which the query was made, etc. An information retrieval tool is computationally efficient, but can only produce a rough estimate of which items are best recommended to a user. A machine-learned model can produce more accurate recommendations, but is often more computationally intensive than an information retrieval tool. Further, because the information retrieval tool is less accurate, it can exclude certain candidates from consideration using the machine-learned model that would otherwise be highly ranked.
- According to implementations of the disclosed subject matter, a plurality of rules from a machine learning model may be generated by a computerized machine learning system and received, each rule containing an outcome, one or more features, and an outcome probability predicted by the machine learning model for the one or more features and the outcome. An entry for a token-based index may be generated for each of the plurality of rules and may contain one or more tokens based on the one or more features of the rule, the outcome of the rule, and the outcome probability of the rule. A query may be received and a subset of tokens that correspond to the query may be identified. The token-based index may be searched to obtain a plurality of outcome probabilities based on the subset of tokens. An outcome may be selected based on the plurality of outcome probabilities and may be provided to a user. A subset of selected outcomes may be ranked. For example, a hundred videos (outcomes) may be ranked by probability and the top twenty may be shown, from highest to lowest probability, to the user.
- Systems and techniques according to the present disclosure may generate or modify one or more indices based on rules and results of a model that is the product of a machine learning system. The generated or modified indices may be used to provide results based on a search technique. Additional characteristics, advantages, and implementations of the disclosed subject matter may be set forth or apparent from consideration of the following detailed description, drawings, and claims. Moreover, it is to be understood that both the foregoing summary and the following detailed description include examples and are intended to provide further explanation without limiting the scope of the claims.
- The accompanying drawings, which are included to provide a further understanding of the disclosed subject matter, are incorporated in and constitute a part of this specification. The drawings also illustrate implementations of the disclosed subject matter and together with the detailed description serve to explain the principles of implementations of the disclosed subject matter. No attempt is made to show structural details in more detail than may be necessary for a fundamental understanding of the disclosed subject matter and various ways in which it may be practiced.
-
FIG. 1 shows an example illustration for providing outcomes/outcome probabilities via a token-based index, according to an implementation of the disclosed subject matter. -
FIG. 2a shows an example process of generating a token-based index, according to an implementation of the disclosed subject matter. -
FIG. 2b shows an example process of searching a token-based index for outcomes based on outcome probabilities, according to an implementation of the disclosed subject matter. -
FIG. 3 shows a computer according to an implementation of the disclosed subject matter. -
FIG. 4 shows a network configuration according to an implementation of the disclosed subject matter. - According to implementations of the disclosed subject matter, a searchable index may be generated based on rules derived from a machine-learned model. In this way, the superior intelligence and logic of a machine-learned model can be embodied in an easily-searchable index. Standard information retrieval tools can be used to efficiently retrieve data using the index. This can compare favorably to a system that has separate information retrieval and machine-learned ranking stages by eliminating the loss of candidates during the information retrieval stage that would otherwise be highly scored by the machine-learned model. Overall, more candidates can be more accurately ranked in accordance with an implementation of the disclosed subject matter.
- The techniques disclosed herein may be applied to machine-learned models generated using supervised learning data such as labeled examples. The labeled examples may be input into a machine learning system and the output from the machine learning system may be a machine-learned model that contains weights that are generated in response to the labeled data. The labeled examples may contain both an outcome and properties associated with a specific instance. It will be understood that the weights and outcomes may be unitless numerical values, percentages, counts of occurrences, or other quantification. A machine learning system may receive labeled data (e.g., labeled examples) to develop a machine-learned model that contains weights that are generated in response to the supervised labeled data. One or more rules may be created by a machine-learned model.
- A rule can include an outcome, a set of features and a probability. For example, the rule:
- (keyword:car, video:carmaker_1) → .03
- Indicates that when a user submits a search keyword "car" at a search engine (a feature) and the user is presented with an video about carmaker_1 (the outcome), there is a 3% probability that the user will select the video to view it (the probability).
- The entries in a searchable index can include documents and searchable tokens. A token in a machine-learned token-based index can be referred to as an indexed token. An indexed token may include a keyword or may not include a keyword. For example, an index can include one token that includes the keyword "car" as well as other tokens that do not include keywords but that relate to other features such as location, language and browser settings. In general, a feature can include any information known about a user, such as a query text submitted by the user, a browser configuration set by the user, etc. Also, a feature can be general state information such as the time of day, a geographic location, etc. For example, a webpage can be indexed to produce an entry as follows:
- web_page_1: [text:boxcar, 4.0], [image:train, 2.0]
- This indicates that a page of a website ("web_page_1", a document) includes the text string "boxcar" four times and two images of trains.
- In accordance with an implementation of the disclosed subject matter, a standard rule-based machine-learned model can be decomposed into a set of documents and tokens with weights. For example, the following rules indicate the likelihood that a user who enters the search keyword "car" into a search engine will select a video about a particular carmaker:
- (keyword:car, video:carmaker_1) → .03
- (keyword:car, video:carmaker_2) → .05
- These rules can be transformed into entries that include a set of searchable tokens corresponding to each video, such as:
- carmaker_1: [keyword:car, .03]
- carmaker_2: [keyword:car, .05]
- An entry can include an outcome (such as "carmaker_1"), tokens (such as keyword:car) and a weight (such as 3%). The tokens can be based on the occurrence of features in a machine-learned rule. A weight can correspond to the probability that the outcome will occur based on the occurrence of certain features, represented here as tokens.
- Since the data of the implementation has the same structure as a standard web search information retrieval problem, standard web search and other information retrieval techniques can be used, such as inverted indices and posting lists. An implementation thereby can eliminate the need for a separate information retrieval step and can effectively score all of the outcomes using the machine-learned model. In this way, search results can be provided that may be more appropriate to a user than a typical indexed search, for example that may be based on attributes of the user, context of the search, etc.
- In an implementation, features can be associated with a given user. For example, the following table shows the presence (1) or absence (0) of features (query, user location (Europe, America) and whether the user has a high bandwidth connection) for Users A-D:
Car Europe America High Bandwidth User A 0 0 1 1 User B 1 0 1 0 User C 0 1 0 1 User D 1 1 0 1 - A machine-learned model can include weights that can indicate the relative contributions of various features to the likelihood of an outcome. For example, the table below shows the relative contributions of the features in the table above to the likelihood that a user will select for viewing a particular video A-D:
Car Europe America High Bandwidth Video A 0.1 0.4 0.8 0.5 Video B 0.3 0.9 0.7 0.8 Video C 0.5 0.1 0.2 0.1 Video D 0.2 0.6 0.2 0.8 - The presence or absence of a feature for a given user can be used with the weight of the feature for an outcome to determine the likelihood of that outcome for that user. For example, the presence of keyword:car and America for User B combined with the weights for those features for Video C (0.5 and 0.2, respectively) can be used to predict a probability that User B will select Video C for viewing. In similar fashion, the likelihood that each user will choose to view each different video can be calculated. It will be understood that the weights may be unitless numerical values, percentages, counts of occurrences, or other quantification.
- Rules can be generated based on the machine-learned model. A rule can correlate at least one feature with a probability of occurrence of a given outcome. A number of rules can be generated based on the occurrences of various permutations of features.
- In accordance with an implementation, a set of tokens can be generated based on the features in a rule. Examples of such tokens can include [keyword:car], [location:Europe] and [bandwidth:high]. A set of tokens corresponding to a set of features in a rule can be correlated with a probability of a given outcome and indexed. For example, the tokens [keyword:car], [location:Europe] and [bandwidth:high] can be correlated with a 4% probability that Video C will be selected to be viewed:
- Video C: [keyword:car, location:Europe, bandwidth:high, .04]
- This can be stored as a searchable index along with other such results derived from other rules. The compiled index can be easily searched using standard information retrieval tools. The generated index is referred to as a token-based index. The index is based on tokens that are not limited to keywords. Optionally, one or more ranking techniques can thereafter be employed to further refine the search results in response to a query.
- The index can be used to consider only those tokens corresponding to features for a given user. For example, a search of the index can retrieve all videos for which probabilities have been calculated for a user whose last viewed video was about cats and whose location is America. The resulting videos can be ranked by probability from most to least likely to be selected next for viewing when presented as subsequent viewing options to the user. Descriptions (e.g., thumbnails) for the top-ranked videos in the list can be recommended to the user.
- An outcome may be one for which the machine learning model predicted an outcome value. The value may be a weight, likelihood, or probability. By way of example only, we refer to probability herein. The outcome may be any applicable result such as a regression-based prediction, a ranking, a conversion probability, a click through probability, a duration prediction (e.g., how long a user is likely to view/interact with content associated with the outcome), or the like. As discussed in the previous example, a user viewing video Y and a user viewing the video Z are examples of outcomes. Other examples of outcomes may be selecting a link, selecting a promotion, opening an account, purchasing a product or service, the duration for which a user views a content (e.g., a video, an image, a text, etc.), repeat access (e.g., how likely a user is to revisit content), or the like.
- An outcome probability may be represented in any useful form, including integer representations, Boolean categorization, normalization (e.g., the probability value converted into a normalized probability, conversion rate, percentage, etc.). It will be understood that an outcome probability may be any applicable prediction such as a percentage, ratio, or the like and/or may correspond to a prediction of amount spent (e.g., dollars spent), amount of exposure time (e.g., video minutes watched), or the like. As disclosed herein, the outcome probability may be derived from the prediction made by the machine learning model. As an example of an outcome probability, a searchable index may contain multiple entries, each associated with an outcome. Each entry may correspond to an outcome probability that predicts the likelihood of a user selecting the content associated with the outcome. Accordingly, the outcome probability may represent the percentage chance of a user selecting content associated with the outcome.
- Notably, according to implementations of the disclosed subject matter, as shown in
Fig. 1 , a machine-learnedmodel 110 may be trained based on training examples and features. A searchable token-basedindex 120 may be generated based on rules generated by the machine-learned model. The searchable token-basedindex 120 may be organized such that tokens associated with aquery 130 may be matched with the tokens in the searchable token-basedindex 120 and, using a search algorithm, an outcome/outcomes 140 may be selected based on one or more outcome probabilities. - According to an implementation of the disclosed subject matter, a machine learning system may be used to generate and/or update models that are used to make predictions and/or provide rankings. An instance of a machine learning model-based prediction may contain an outcome, one or more features, and a prediction value. As an example of a prediction made via a machine learning model, multiple features for a given event may be provided to the machine learning model and, based on the presence of the features, the machine learning model may output a probability or prediction. As a more specific example, a machine learning model that predicts whether a user will view video Y (an example of an outcome) may be provided with features that the user located in the United States, has viewed a music video X in the past, and has set her default language as English (examples of features). The machine learning model may contain weights for each of the features (i.e., .5 for being located in the United States, .9 for having viewed music video X, and .3 for setting the default language as English). It will be understood that the machine learning model may contain weights for other features (e.g. the use is located in Canada) however, as those features are not present in this example prediction, their weights may not contribute to the prediction. Alternatively, the lack of presence of a particular feature may be important in predicting an outcome and may be taken into account. For example, the machine learning model may provide a weight for whether the user will view music video Y based on the absence of a feature (e.g., the user is not using a mobile device). The prediction value may be normalized to represent a percentage or probability in any applicable manner. Here the instance may contain the outcome: "whether the user will view video Y", the features: "located in the United States", "viewed video X", and "default language English", and the prediction: ".9" (normalized).
- A feature may be any applicable characteristic associated with an instance and may be based on a user (e.g., user demographic, user history, user associations such as user accounts or preferences), a device (e.g., a user device type, device features, device capabilities, device configuration etc.), a current event, or the like. Examples of features can include a user location, a user language preference, a view history, a user account, a user subscription, a device model type, a device screen resolution, a device operating system, a holiday designation, a sporting event occurrence, or the like. Additionally, as disclosed herein, a feature may be a search input (such as a text keyword, an image, an audio file, etc.) received from a user. It will be understood that the outcome, features, and/or the prediction may be represented in any useful form such as integer representations, via Boolean categorization, normalized (e.g., the probability value converted into a normalized probability, conversion rate, percentage, etc.). According to an implementation of the disclosed subject matter, the machine learning model may be trained using prior selections of one more users (outcomes), as disclosed herein. Notably, the prediction made by the machine learning model may be based on the successful selection or lack of selection of an outcome such that the predicted outcome probability may increase based on selected candidate results and may decrease based on unselected outcomes.
- According to an implementation of the disclosed subject matter, as shown in
Fig. 2a , atstep 210, multiple rules based on a machine learning model may be received. An instance of a machine learning model-based rule may contain an outcome, one or more features, and an outcome probability. As an example of a prediction made via a machine learning model, multiple features for a given event may be provided to the machine learning model and, based on the presence of the features, the machine learning model may output a probability or prediction. As a more specific example, a machine learning model that predicts whether a user will view video Y (an outcome) may be provided with data that the user located in the United States, has viewed a music video X in the past, and has set her default language as English (features). The machine learning model may prescribe weights for each of the features, e.g., .5 for being located in the United States, .9 for having viewed music video X, and .3 for setting the default language as English. Accordingly, the machine learning model may predict that the user will view music video Y with a weight of 1.7 based on the features associated with the rule. The probability value may be normalized to represent a percentage or probability in any applicable manner. Here the instance may contain the outcome: "whether the user will view video Y", the features: "located in the United States", "viewed video X", and "default language English", and the prediction: ".9" (normalized). It will be understood that the outcome, features, and/or the probability may be represented in any applicable manner such as hash values, integer representations, Boolean categorization, normalization (e.g., the probability value converted into a normalized probability, conversion rate, percentage, etc.). As an example, an outcome for "Selecting video X" may be represented with a hash value "e0d123e5f316". - At
step 220, an instance of a rule based on a machine learning model may be converted into an entry in a searchable feature based index. The entry in the searchable feature based index may contain an outcome associated with one or more tokens and an outcome probability. A token may be based on a feature contained within a rule. Continuing the previous example, the model may predict a probability of 0.9 for the outcome "the user will view video Y" based on various features. The token-based index may include the tokens location:US, viewed_ video:X, and "language:English" correlated with the outcome "the user will view video Y" and a probability of 0.9. The token-based index may correlate the same tokens to other outcomes, each with its own probability. For example, the same tokens may be correlated to the outcome "the user will view video Z" with a probability of 0.8. - A searchable token-based index may be an inverted index or a posting list such that it is an index data structure that is configured to store a mapping from content (e.g., words, numbers, values, etc.) to locations in a database file, to documents, or a set of documents. The searchable token-based index may allow fast full text searches and may be a database file itself rather than its index.
- At
step 230, inFig. 2b , a query may be received. A query may be generated based on an event caused by a human user, a computer, a database, software, an application, a server, or the like. As used herein, the term query may include any input that can be used to search the index to obtain a probabilities of one or more outcomes based on the occurrence of one or more events. For example, when a user selects a given video, the characteristics of the selection (e.g., identity of the video, topic of the video, location of the user, etc.) can be used as the basis of a query to search the index for outcomes and their respective probabilities that the user will select other videos to watch next. The results of the query can predict, for example, that the user will select Video B with a probability of 0.2, Video C with a probability of 0.1 and Video D with a probability of 0.4. - In an implementation, a query can be formulated based on a subset of tokens that may be identified,
step 240, e.g., based on an event. For example, a keyword search for "car" may have been submitted by a user in Canada at 5:07 PM ET with the language setting of the user's browser set to "French." The subset of tokens that may be identified can include keyword:car, location:Canada, time:5:07PMET and language:French. These tokens can be used to search the index for outcomes and probabilities correlated with the same or similar tokens in the index,step 250. For example, the tokens associated with a query may be:keyword:car location:USA bandwith:high Video ID Tokens associated with entry % Video A keyword:car location:USA bandwith:high 45 Video C keyword:car location:USA bandwith:high 24 Video F keyword:car location:USA bandwith:high 76 Video R keyword:car location:USA bandwith:high 55 - One or more outcomes (above, videos) may be selected from the above results, e.g., based on their respective outcome probabilities. As shown above, the outcome Video F has the highest probability of being selected for viewing next. Accordingly, a link to Video F may be provided to a user. Similarly the next highest-ranked (most probable) videos (Video R and Video A) may also be presented.
- Implementations of the presently disclosed subject matter may be implemented in and used with a variety of component and network architectures.
FIG. 3 is anexample computer system 20 suitable for implementing embodiments of the presently disclosed subject matter. Thecomputer 20 includes abus 21 which interconnects major components of thecomputer 20, such as one ormore processors 24,memory 27 such as RAM, ROM, flash RAM, or the like, an input/output controller 28, and fixedstorage 23 such as a hard drive, flash storage, SAN device, or the like. It will be understood that other components may or may not be included, such as a user display such as a display screen via a display adapter, user input interfaces such as controllers and associated user input devices such as a keyboard, mouse, touchscreen, or the like, and other components known in the art to use in or in conjunction with general-purpose computing systems. - The
bus 21 allows data communication between thecentral processor 24 and thememory 27. The RAM is generally the main memory into which the operating system and application programs are loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) that controls basic hardware operation such as the interaction with peripheral components. Applications resident with thecomputer 20 are generally stored on and accessed via a computer readable medium, such as the fixedstorage 23 and/or thememory 27, an optical drive, external storage mechanism, or the like. - Each component shown may be integral with the
computer 20 or may be separate and accessed through other interfaces. Other interfaces, such as anetwork interface 29, may provide a connection to remote systems and devices via a telephone link, wired or wireless local- or wide-area network connection, proprietary network connections, or the like. For example, thenetwork interface 29 may allow the computer to communicate with other computers via one or more local, wide-area, or other networks, as shown inFIG. 4 . - Many other devices or components (not shown) may be connected in a similar manner, such as document scanners, digital cameras, auxiliary, supplemental, or backup systems, or the like. Conversely, all of the components shown in
FIG. 3 need not be present to practice the present disclosure. The components can be interconnected in different ways from that shown. The operation of a computer such as that shown inFIG. 3 is readily known in the art and is not discussed in detail in this application. Code to implement the present disclosure can be stored in computer-readable storage media such as one or more of thememory 27, fixedstorage 23, remote storage locations, or any other storage mechanism known in the art. -
FIG. 4 shows an example arrangement according to an embodiment of the disclosed subject matter. One ormore clients 10, 11, such as local computers, smart phones, tablet computing devices, remote services, and the like may connect to other devices via one ormore networks 7. The network may be a local network, wide-area network, the Internet, or any other suitable communication network or networks, and may be implemented on any suitable platform including wired and/or wireless networks. Theclients 10, 11 may communicate with one or more computer systems, such asprocessing units 14,databases 15, anduser interface systems 13. In some cases,clients 10, 11 may communicate with auser interface system 13, which may provide access to one or more other systems such as adatabase 15, aprocessing unit 14, or the like. For example, theuser interface 13 may be a user-accessible web page that provides data from one or more other computer systems. Theuser interface 13 may provide different interfaces to different clients, such as where a human-readable web page is provided to web browser clients 10, and a computer-readable API or other interface is provided toremote service clients 11. Theuser interface 13,database 15, andprocessing units 14 may be part of an integral system, or may include multiple computer systems communicating via a private network, the Internet, or any other suitable network.Processing units 14 may be, for example, part of a distributed system such as a cloud-based computing system, search engine, content delivery system, or the like, which may also include or communicate with adatabase 15 and/oruser interface 13. In some arrangements, ananalysis system 5 may provide back-end processing, such as where stored or acquired data is pre-processed by theanalysis system 5 before delivery to theprocessing unit 14,database 15, and/oruser interface 13. For example, amachine learning system 5 may provide various prediction models, data analysis, or the like to one or moreother systems - In situations in which the implementations of the disclosed subject matter collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., a user's performance score, a user's work product, a user's provided input, a user's geographic location, and any other similar data associated with a user), or to control whether and/or how to receive instructional course content from the instructional course provider that may be more relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location associated with an instructional course may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by an instructional course provider.
- The foregoing description, for purpose of explanation, has been described with reference to specific implementations. However, the illustrative discussions above are not intended to be exhaustive or to limit implementations of the disclosed subject matter to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The implementations were chosen and described in order to explain the principles of implementations of the disclosed subject matter and their practical applications, to thereby enable others skilled in the art to utilize those implementations as well as various implementations with various modifications as may be suited to the particular use contemplated.
- Aspects of the invention may be understood from the following numbered paragraphs:
- 1. A method implemented by a computerized machine learning system, said method comprising:
- receiving a plurality of rules from a machine-learned model generated by the computerized machine learning system, each rule comprising an outcome, one or more features, and an outcome probability predicted by the machine-learned model for the one or more features and the outcome; and
- for each of the plurality of rules, generating an entry for a token-based index, the entry comprising:
- one or more tokens based on the one or more features of the rule;
- the outcome of the rule; and
- the outcome probability of the rule.
- 2. The method of paragraph 1, wherein the rules are based on an un-indexed corpus of documents.
- 3. The method of paragraph 1 or 2, wherein the entry is associated with a document.
- 4. The method of paragraph 1, 2 or 3 wherein a plurality of the one or more tokens is based on a query.
- 5. The method of any preceding paragraph, wherein the machine-learned model is trained using prior selections of outcomes by one or more users.
- 6. The method of any preceding paragraph, wherein the token-based index is one selected from the group consisting of an inverted index and a posted list.
- 7. A method implemented by a computerized machine learning system, said method comprising:
- receiving a query;
- identifying at least one token based upon the query;
- matching the at least one identified token to at least one indexed token in a machine-learned token-based index;
- identifying at least one outcome based on the at least one matched token; and
- providing a result for the query based on the at least one matched token and the at least one outcome.
- 8. The method of
paragraph 7, wherein the providing the result for the query is further based on an outcome probability. - 9. The method of
paragraph 7 or 8, wherein the query is based on a keyword. - 10. The method of
paragraph 7, 8 or 9 wherein the query is based on a click through of a document. - 11. The method of any one of
paragraphs 7 to 10, wherein the query is based upon an event. - 12. The method of any one of
paragraphs 7 to 11, wherein the providing a result for the query is based on a plurality of outcomes, each outcome associated with an outcome probability, and further comprising ranking the plurality of outcomes based upon their respective outcome probabilities. - 13. A method implemented by a computerized system, said method comprising:
- receiving a plurality of rules from a machine-learned model generated by the computerized machine learning system, each rule comprising an outcome, one or more features, and an outcome probability predicted by the machine-learned model for the one or more features and the outcome; and
- for each of the plurality of rules, generating an entry for a token-based index, the entry comprising:
- one or more tokens based on the one or more features of the rule;
- the outcome of the rule; and
- the outcome probability of the rule;
- receiving a query;
- identifying at least one token based upon the query;
- matching the at least one identified token to at least one indexed token in a machine-learned token-based index;
- identifying at least one outcome based on the at least one matched token; and providing a result for the query based on the at least one matched token and the at least one outcome.
- 14. A system comprising:
- a processor configured to:
- receive a plurality of rules from a machine-learned model generated by the computerized machine learning system, each rule comprising an outcome, one or more features, and an outcome probability predicted by the machine-learned model for the one or more features and the outcome; and
- for each of the plurality of rules, generate an entry for a token-based index, the entry comprising:
- one or more tokens based on the one or more features of the rule;
- the outcome of the rule; and
- the outcome probability of the rule.
- a processor configured to:
- 15. The system of
paragraph 14, wherein the rules are based on an un-indexed corpus of documents. - 16. The system of
paragraph - 17. The system of
paragraph - 18. The system of any one of
paragraphs 14 to 17, wherein the machine-learned model is trained using prior selections of outcomes by one or more users. - 19. The system of any one of
paragraphs 14 to 18, wherein the token-based index is one selected from the group consisting of an inverted index and a posted list. - 20. A system comprising:
- a processor configured to:
- receive a query;
- identify at least one token based upon the query;
- match the at least one identified token to at least one indexed token in a machine-learned token-based index;
- identify at least one outcome based on the at least one matched token; and provide a result for the query based on the at least one matched token and the at least one outcome.
- a processor configured to:
- 21. The system of
paragraph 20, wherein the providing the result for the query is further based on an outcome probability. - 22. The system of
paragraph - 23. The system of
paragraph - 24. The system of any one of
paragraphs 20 to 23, wherein the query is based upon an event. - 25. The system of any one of
paragraphs 20 to 24, wherein the providing a result for the query is based on a plurality of outcomes, each outcome associated with an outcome probability, and further comprising ranking the plurality of outcomes based upon their respective outcome probabilities.
Claims (15)
- A method implemented by a computerized machine learning system, said method comprising:receiving a plurality of rules from a machine-learned model generated by the computerized machine learning system, each rule comprising an outcome, one or more features, and an outcome probability predicted by the machine-learned model for the one or more features and the outcome; andfor each of the plurality of rules, generating an entry for a token-based index, the entry comprising:one or more tokens based on the one or more features of the rule;the outcome of the rule; andthe outcome probability of the rule.
- The method of claim 1, wherein the rules are based on an un-indexed corpus of documents.
- The method of claims 1 or 2, wherein the entry is associated with a document.
- The method of claims 2 or 3, wherein a plurality of the one or more tokens is based on a query.
- The method of any preceding claim 1, wherein the machine-learned model is trained using prior selections of outcomes by one or more users.
- The method of any preceding claim 1, wherein the token-based index is one selected from the group consisting of an inverted index and a posted list.
- A method implemented by a computerized machine learning system, said method comprising:receiving a query;identifying at least one token based upon the query;matching the at least one identified token to at least one indexed token in a machine-learned token-based index;identifying at least one outcome based on the at least one matched token; andproviding a result for the query based on the at least one matched token and the at least one outcome.
- The method of claim 7, wherein the providing the result for the query is further based on an outcome probability.
- The method of claims 7 or 8, wherein the query is based on a keyword.
- The method of claims 7, 8 or 9 wherein the query is based on a click through of a document.
- The method of claims 7 to 10, wherein the query is based upon an event.
- The method of claims 7 to 11, wherein the providing a result for the query is based on a plurality of outcomes, each outcome associated with an outcome probability, and further comprising ranking the plurality of outcomes based upon their respective outcome probabilities.
- A method implemented by a computerized system, said method comprising:receiving a plurality of rules from a machine-learned model generated by the computerized machine learning system, each rule comprising an outcome, one or more features, and an outcome probability predicted by the machine-learned model for the one or more features and the outcome; andfor each of the plurality of rules, generating an entry for a token-based index, the entry comprising:one or more tokens based on the one or more features of the rule;the outcome of the rule; andthe outcome probability of the rule;receiving a query;identifying at least one token based upon the query;matching the at least one identified token to at least one indexed token in a machine-learned token-based index;identifying at least one outcome based on the at least one matched token; andproviding a result for the query based on the at least one matched token and the at least one outcome.
- A system comprising:a processor configured to:cause a computer to carry out a method according to any preceding claim.
- A computer readable medium comprising a computer program comprising computer readable instructions configured to cause a computer to carry out a method according to any one of claims 1 to 13.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/268,049 US10255319B2 (en) | 2014-05-02 | 2014-05-02 | Searchable index |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2940606A1 true EP2940606A1 (en) | 2015-11-04 |
Family
ID=53015710
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP15165975.2A Ceased EP2940606A1 (en) | 2014-05-02 | 2015-04-30 | Searchable index |
Country Status (3)
Country | Link |
---|---|
US (4) | US10255319B2 (en) |
EP (1) | EP2940606A1 (en) |
CN (1) | CN105045799A (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3188040A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Retrieval of outcomes of precomputed models |
EP3188038A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Evaluation of a training set |
EP3188039A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Recommendations based on predictive model |
EP3188041A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Update of a machine learning system |
Families Citing this family (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9566710B2 (en) | 2011-06-02 | 2017-02-14 | Brain Corporation | Apparatus and methods for operating robotic devices using selective state space training |
US9764468B2 (en) | 2013-03-15 | 2017-09-19 | Brain Corporation | Adaptive predictor apparatus and methods |
US9242372B2 (en) | 2013-05-31 | 2016-01-26 | Brain Corporation | Adaptive robotic interface apparatus and methods |
US9314924B1 (en) | 2013-06-14 | 2016-04-19 | Brain Corporation | Predictive robotic controller apparatus and methods |
US9792546B2 (en) | 2013-06-14 | 2017-10-17 | Brain Corporation | Hierarchical robotic controller apparatus and methods |
US9579789B2 (en) | 2013-09-27 | 2017-02-28 | Brain Corporation | Apparatus and methods for training of robotic control arbitration |
US9463571B2 (en) | 2013-11-01 | 2016-10-11 | Brian Corporation | Apparatus and methods for online training of robots |
US9597797B2 (en) | 2013-11-01 | 2017-03-21 | Brain Corporation | Apparatus and methods for haptic training of robots |
US9358685B2 (en) | 2014-02-03 | 2016-06-07 | Brain Corporation | Apparatus and methods for control of robot actions based on corrective user inputs |
US9881059B2 (en) * | 2014-08-08 | 2018-01-30 | Yahoo Holdings, Inc. | Systems and methods for suggesting headlines |
US9630318B2 (en) | 2014-10-02 | 2017-04-25 | Brain Corporation | Feature detection apparatus and methods for training of robotic navigation |
US9717387B1 (en) | 2015-02-26 | 2017-08-01 | Brain Corporation | Apparatus and methods for programming and training of robotic household appliances |
US10241514B2 (en) | 2016-05-11 | 2019-03-26 | Brain Corporation | Systems and methods for initializing a robot to autonomously travel a trained route |
KR101859050B1 (en) * | 2016-06-02 | 2018-05-21 | 네이버 주식회사 | Method and system for searching map image using context of image |
US9987752B2 (en) | 2016-06-10 | 2018-06-05 | Brain Corporation | Systems and methods for automatic detection of spills |
US10282849B2 (en) | 2016-06-17 | 2019-05-07 | Brain Corporation | Systems and methods for predictive/reconstructive visual object tracker |
US10016896B2 (en) | 2016-06-30 | 2018-07-10 | Brain Corporation | Systems and methods for robotic behavior around moving bodies |
CN106250064B (en) | 2016-08-19 | 2020-05-12 | 深圳大普微电子科技有限公司 | Solid state disk control device and solid state disk data access method based on learning |
US11288591B2 (en) * | 2016-08-23 | 2022-03-29 | Microsoft Technology Licensing, Llc | Per-article personalized models for recommending content email digests with personalized candidate article pools |
US10320927B2 (en) * | 2016-10-20 | 2019-06-11 | Facebook, Inc. | Systems and methods for providing personalized content |
US10274325B2 (en) | 2016-11-01 | 2019-04-30 | Brain Corporation | Systems and methods for robotic mapping |
US10001780B2 (en) | 2016-11-02 | 2018-06-19 | Brain Corporation | Systems and methods for dynamic route planning in autonomous navigation |
US10723018B2 (en) | 2016-11-28 | 2020-07-28 | Brain Corporation | Systems and methods for remote operating and/or monitoring of a robot |
US10377040B2 (en) | 2017-02-02 | 2019-08-13 | Brain Corporation | Systems and methods for assisting a robotic apparatus |
US10852730B2 (en) | 2017-02-08 | 2020-12-01 | Brain Corporation | Systems and methods for robotic mobile platforms |
US10293485B2 (en) | 2017-03-30 | 2019-05-21 | Brain Corporation | Systems and methods for robotic path planning |
US20200265061A1 (en) * | 2017-08-28 | 2020-08-20 | Banjo, Inc. | Signal normalization, event detection, and event notification using agency codes |
US10567235B1 (en) * | 2017-10-02 | 2020-02-18 | Facebook, Inc. | Utilizing multi-point optimization to improve digital content distribution |
MX2020007114A (en) * | 2018-01-10 | 2020-12-09 | Simbe Robotics Inc | Method for detecting and responding to spills and hazards. |
CN110334813A (en) * | 2018-03-28 | 2019-10-15 | 株式会社日立制作所 | Operation management method and operation management system |
JP7259456B2 (en) * | 2019-03-25 | 2023-04-18 | 富士フイルムビジネスイノベーション株式会社 | Information processing device and program |
US11645580B2 (en) | 2020-01-21 | 2023-05-09 | Walmart Apollo, Llc | Robust reinforcement learning in personalized content prediction |
US11314529B2 (en) * | 2020-01-21 | 2022-04-26 | Walmart Apollo, Llc | Dynamical switching between long-term and short-term rewards |
US11367105B2 (en) | 2020-01-21 | 2022-06-21 | Walmart Apollo, Llc | Dynamic evaluation and use of global and contextual personas |
CA3118095C (en) * | 2020-05-12 | 2023-10-10 | Accenture Global Solutions Limited | Artificial intelligence (ai) based document processor |
US11509746B2 (en) * | 2021-02-17 | 2022-11-22 | Salesforce.Com, Inc. | Distributing user requests to cloud computing systems across regions using a machine learning model |
CA3208434A1 (en) * | 2021-03-25 | 2022-09-29 | Heather O. Levesque | Training a machine learning model for hardware component identification |
US11593681B2 (en) * | 2021-03-25 | 2023-02-28 | CAMP Systems International, Inc. | Synthesizing disparate database entries for hardware component identification |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7222127B1 (en) * | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US20080072134A1 (en) * | 2006-09-19 | 2008-03-20 | Sreeram Viswanath Balakrishnan | Annotating token sequences within documents |
US20080133473A1 (en) * | 2006-11-30 | 2008-06-05 | Broder Andrei Z | Efficient multifaceted search in information retrieval systems |
EP2407900A1 (en) * | 2010-07-16 | 2012-01-18 | Google Inc. | Batch prospective searching |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
NO327653B1 (en) * | 2007-12-20 | 2009-09-07 | Fast Search & Transfer As | Procedure for dynamically updating an index and a search engine that implements the same |
AU2010256777A1 (en) * | 2009-06-01 | 2011-12-22 | Google Inc. | Searching methods and devices |
US20110022450A1 (en) * | 2009-07-21 | 2011-01-27 | Rivalroo, Inc. | Comptuer network chat system for display of text and video in a rivalry context |
KR100983003B1 (en) * | 2009-08-19 | 2010-09-17 | 주식회사 컴퍼니원헌드레드 | Target advertisement system and method of mobile communication terminal |
US20110054999A1 (en) * | 2009-08-25 | 2011-03-03 | Yahoo! Inc. | System and method for predicting user navigation within sponsored search advertisements |
US8700543B2 (en) * | 2011-02-12 | 2014-04-15 | Red Contexto Ltd. | Web page analysis system for computerized derivation of webpage audience characteristics |
US9552393B2 (en) * | 2012-01-13 | 2017-01-24 | Business Objects Software Ltd. | Adaptive record linking in a distributed computing system |
US10229167B2 (en) * | 2013-02-27 | 2019-03-12 | Facebook, Inc. | Ranking data items based on received input and user context information |
-
2014
- 2014-05-02 US US14/268,049 patent/US10255319B2/en active Active
-
2015
- 2015-04-30 EP EP15165975.2A patent/EP2940606A1/en not_active Ceased
- 2015-05-04 CN CN201510221966.2A patent/CN105045799A/en active Pending
-
2019
- 2019-03-27 US US16/366,260 patent/US10853360B2/en active Active
-
2020
- 2020-11-30 US US17/107,790 patent/US11782915B2/en active Active
-
2023
- 2023-10-06 US US18/482,756 patent/US20240037096A1/en active Pending
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7222127B1 (en) * | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US20080072134A1 (en) * | 2006-09-19 | 2008-03-20 | Sreeram Viswanath Balakrishnan | Annotating token sequences within documents |
US20080133473A1 (en) * | 2006-11-30 | 2008-06-05 | Broder Andrei Z | Efficient multifaceted search in information retrieval systems |
EP2407900A1 (en) * | 2010-07-16 | 2012-01-18 | Google Inc. | Batch prospective searching |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3188040A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Retrieval of outcomes of precomputed models |
EP3188038A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Evaluation of a training set |
EP3188039A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Recommendations based on predictive model |
EP3188041A1 (en) * | 2015-12-31 | 2017-07-05 | Dassault Systèmes | Update of a machine learning system |
JP2017120646A (en) * | 2015-12-31 | 2017-07-06 | ダッソー システムズＤａｓｓａｕｌｔ Ｓｙｓｔｅｍｅｓ | Retrieval of outcomes of precomputed models |
US10949425B2 (en) | 2015-12-31 | 2021-03-16 | Dassault Systemes | Retrieval of outcomes of precomputed models |
US10963811B2 (en) | 2015-12-31 | 2021-03-30 | Dassault Systemes | Recommendations based on predictive model |
US11176481B2 (en) | 2015-12-31 | 2021-11-16 | Dassault Systemes | Evaluation of a training set |
US11308423B2 (en) | 2015-12-31 | 2022-04-19 | Dassault Systemes | Update of a machine learning system |
Also Published As
Publication number | Publication date |
---|---|
US20190220460A1 (en) | 2019-07-18 |
US11782915B2 (en) | 2023-10-10 |
CN105045799A (en) | 2015-11-11 |
US10853360B2 (en) | 2020-12-01 |
US20240037096A1 (en) | 2024-02-01 |
US10255319B2 (en) | 2019-04-09 |
US20210149890A1 (en) | 2021-05-20 |
US20150317357A1 (en) | 2015-11-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11782915B2 (en) | Searchable index | |
US11176124B2 (en) | Managing a search | |
JP5736469B2 (en) | Search keyword recommendation based on user intention | |
US11580168B2 (en) | Method and system for providing context based query suggestions | |
US10726063B2 (en) | Topic profile query creation | |
CN104835072B (en) | Method and system for compatibility scoring of users in a social network | |
US20190349320A1 (en) | System and method for automatically responding to user requests | |
US20100138402A1 (en) | Method and system for improving utilization of human searchers | |
US10437894B2 (en) | Method and system for app search engine leveraging user reviews | |
CN104933100A (en) | Keyword recommendation method and device | |
CN109933708A (en) | Information retrieval method, device, storage medium and computer equipment | |
WO2020073526A1 (en) | Trust network-based push method, apparatus, computer device, and storage medium | |
US20210279269A1 (en) | Content Fragments Aligned to Content Criteria | |
US20170228464A1 (en) | Finding users in a social network based on document content | |
US20150310016A1 (en) | Method and system for entity recognition in a query | |
CN110162535B (en) | Search method, apparatus, device and storage medium for performing personalization | |
US9418343B2 (en) | Multistage learner for efficiently boosting large datasets | |
US9449095B1 (en) | Revising search queries | |
JP2016110260A (en) | Content search result provision system and content search result provision method | |
JP6167029B2 (en) | RECOMMENDATION INFORMATION GENERATION DEVICE AND RECOMMENDATION INFORMATION GENERATION METHOD | |
WO2010060117A1 (en) | Method and system for improving utilization of human searchers | |
US20160162975A1 (en) | Systems and methods of providing recommendations by generating transition probability data with directed consumption | |
CN110851560A (en) | Information retrieval method, device and equipment | |
US20180067944A1 (en) | Methods and systems for similarity matching | |
US11238052B2 (en) | Refining a search request to a content provider |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
17P | Request for examination filed |
Effective date: 20160426 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
17Q | First examination report despatched |
Effective date: 20160520 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
APBK | Appeal reference recorded |
Free format text: ORIGINAL CODE: EPIDOSNREFNE |
|
APBN | Date of receipt of notice of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA2E |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
APBR | Date of receipt of statement of grounds of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA3E |
|
APAF | Appeal reference modified |
Free format text: ORIGINAL CODE: EPIDOSCREFNE |
|
APBT | Appeal procedure closed |
Free format text: ORIGINAL CODE: EPIDOSNNOA9E |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20210122 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
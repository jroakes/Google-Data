CN113711259A - Discovering clients to support chat sessions - Google Patents
Discovering clients to support chat sessions Download PDFInfo
- Publication number
- CN113711259A CN113711259A CN201980094883.8A CN201980094883A CN113711259A CN 113711259 A CN113711259 A CN 113711259A CN 201980094883 A CN201980094883 A CN 201980094883A CN 113711259 A CN113711259 A CN 113711259A
- Authority
- CN
- China
- Prior art keywords
- chat
- user
- session
- metadata
- annotated
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/01—Customer relationship services
- G06Q30/015—Providing customer assistance, e.g. assisting a customer within a business location or via helpdesk
- G06Q30/016—After-sales
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/38—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/205—Parsing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/107—Computer-aided management of electronic mailing [e-mailing]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/42—Mailbox-related aspects, e.g. synchronisation of mailboxes
Abstract
A method (500) includes receiving a plurality of chat sessions (50) associated with a particular user (12) and a plurality of different business entities (22). For each of the plurality of chat sessions, the method further includes parsing the chat session to obtain any keywords (122), retrieving metadata associated with each parsed keyword (210), annotating the chat session with the metadata, indexing the annotated chat session (132), and storing the indexed chat session (142) in a session data store (230). The method also includes receiving search criteria (350) from a user device (10) associated with the user, retrieving one or more indexed annotated chat sessions that satisfy the received search criteria, and sending search results (360) to the user device.
Description
Technical Field
The present disclosure relates to discovering client chat sessions.
Background
Customers often use electronic communication means such as e-mail to communicate with customer support teams in business departments. These emails may be indexed by an email provider, stored in an email repository managed by the email provider, and searchable in the email repository through an email search interface. A Customer Relationship Management (CRM) system includes software that enables customers to interact with agents of a particular enterprise through a social media platform. For example, the social media platform may allow a user to interact with the profile of the enterprise, and the customer support agent of the enterprise may respond directly to the customer when the profile of the enterprise is integrated with the CRM software. Customers also often contact businesses through online chat systems to obtain customer support. Businesses use CRM software to manage their interactions with customers. While businesses can view chat histories with customers through their CRM software, once a session ends, customers cannot view chat histories.
Disclosure of Invention
One aspect of the present disclosure provides a method of discovering customers to support chat sessions. The method includes receiving, at data processing hardware, a plurality of chat sessions associated with a particular user and a plurality of different business entities, each of the plurality of chat sessions between the user and a corresponding business entity of the plurality of different business entities. For each of the plurality of chat sessions, the method includes the data processing hardware parsing the chat session for any keyword, and for each parsed keyword, the data processing hardware obtaining metadata related to the keyword. The method also includes annotating, by the data processing hardware, the chat session with the metadata and indexing, by the data processing hardware, the annotated chat session. The method also includes the data processing hardware storing the indexed annotated chat session in a session data store in communication with the data processing hardware. The method also includes receiving, at the data processing hardware, search criteria from a user device associated with a user. The method also includes the data processing hardware retrieving the one or more indexed annotated chat sessions that satisfy the received search criteria from a session data store, and the data processing hardware sending search results to the user device. Search results include one or more of the indexed annotated chat sessions retrieved from the session data store.
Implementations of the disclosure may include one or more of the following optional features. In some implementations, each of the plurality of chat sessions includes at least one of text data or voice data. In some examples, obtaining the metadata related to the keyword includes obtaining the metadata from a source different from a source of a corresponding chat session. Optionally, the source of metadata includes at least one of an email repository associated with the user, a calendar repository associated with the user, or a messaging repository associated with the user.
In some implementations, obtaining the metadata related to the keyword includes obtaining the metadata from at least one of a current chat session or one or more previous chat sessions associated with the user. In some examples, the method further includes executing, by the data processing hardware, a chat interface configured to pass chat posts between a user and a corresponding Customer Relationship Management (CRM) system associated with a corresponding business entity of the plurality of different business entities for each of the plurality of chat sessions.
The corresponding CRM systems associated with at least two of the plurality of different business entities may be different. The chat posts may include at least one of comments, messages, notes, questions, or replies posted by the user and/or respective agents of corresponding ones of the plurality of different business entities. In some implementations, indexing the annotated chat session includes indexing the annotated chat session based on a corresponding business entity of a plurality of business entities. When the search results are received by the user device, the search results may cause the user device to display the one or more indexed annotated chat sessions retrieved from the session data store on a graphical user interface executing on the user device.
Another aspect of the present disclosure provides a system for discovering customers to support chat sessions. The system includes data processing hardware and memory hardware in communication with the data processing hardware. The memory hardware stores instructions that, when executed on the data processing hardware, cause the data processing hardware to perform operations. The operations include receiving a plurality of chat sessions associated with a particular user and a plurality of different business entities, each of the plurality of chat sessions between the user and a corresponding business entity of the plurality of different business entities. For each of the plurality of chat sessions, the operations include parsing the chat session for any keywords, and for each parsed keyword, obtaining metadata related to the keyword. The operations also include annotating the chat session with the metadata and indexing the annotated chat session. The operations further comprise storing the indexed annotated chat session in a session data store in communication with the data processing hardware. The operations further include receiving search criteria from a user device associated with the user. Operations further include retrieving from the session data store one or more of the indexed annotated chat sessions that satisfy the received search criteria and sending search results to the user device. Search results include one or more of the indexed annotated chat sessions retrieved from the session data store.
This aspect may include one or more of the following optional features. In some implementations, each of the plurality of chat sessions includes at least one of text data or voice data. In some examples, obtaining the metadata related to the keyword includes obtaining the metadata from a source different from a source of the corresponding chat session. Optionally, the source of metadata includes at least one of an email repository associated with the user, a calendar repository associated with the user, or a messaging repository associated with the user.
In some implementations, obtaining metadata related to the keyword includes obtaining the metadata from at least one of a current chat session or one or more previous chat sessions associated with the user. In some examples, the operations further comprise executing a chat interface configured to communicate chat posts between a user and a corresponding Customer Relationship Management (CRM) system for each of the plurality of chat sessions, the corresponding Customer Relationship Management (CRM) system (25) associated with a corresponding business entity of the plurality of different business entities.
The respective CRM systems associated with at least two of the plurality of different business entities may be different. The chat posts may include at least one of comments, messages, notes, questions, or replies posted by the user and/or respective agents of corresponding ones of the plurality of different business entities. In some implementations, indexing an annotated chat session includes indexing the annotated chat session based on a corresponding business entity of a plurality of business entities. When a search result is received by the user device, the search result causes a chat session to be displayed on a graphical user interface executing on the user device that displays the one or more indexed annotations retrieved from the session data store.
The details of one or more implementations of the disclosure are set forth in the accompanying drawings and the description below. Other aspects, features, and advantages will be apparent from the description and drawings, and from the claims.
Drawings
FIG. 1 is a schematic diagram of an example system for discovering a user chat session.
FIG. 2 is a schematic diagram of a metadata data store of the system of FIG. 1.
FIG. 3A is a schematic diagram of an exemplary search interface of the system of FIG. 1 that receives search criteria from a user device.
FIG. 3B is a schematic diagram of an exemplary search interface of the system of FIG. 1 that returns search results to a user device.
FIG. 4 is a schematic diagram of an exemplary policy controller of the system of FIG. 1.
FIG. 5 is a flow diagram of an example method for discovering a user chat session.
FIG. 6 is a schematic diagram of an example computing device that may be used to implement the systems and methods described herein.
Like reference symbols in the various drawings indicate like elements.
Detailed Description
Enterprises often provide customers with a customer support platform that helps customers query customers for any problems that the customers may encounter when using products and/or services offered by the enterprise. These customer support platforms are increasingly switching to chat-based systems (e.g., instant messaging systems via online portals) to facilitate chat sessions between customers and agents on behalf of these services. Here, a Customer may contact Customer support for an enterprise by initiating a chat session through a particular proprietary software interface managed by the enterprise and configured to communicate with a Customer Relationship Management (CRM) system associated with a particular enterprise for managing Customer support interactions with the Customer. In this case, the enterprise may access the history of the chat session through CRM software executing on the CRM system, but the history of the chat session is unavailable to the customer once the chat session is over. Thus, there is no simple way for a client to retrieve or discover a chat session after it is over.
The present implementation is directed to a centralized chat manager that manages chat sessions between users/customers and different business entities regardless of the type of CRM systems/software used by the business entities. In particular, a particular user may be a customer of a plurality of different business entities, and the centralized chat manager may execute a chat interface configured to facilitate chat sessions between the user and each of the different business entities in a manner such that the type of CRM systems/software used by the different businesses is agnostic to the user. Thereafter, for each chat session that the user has with the corresponding business entity, the centralized chat manager indexes the chat sessions and stores the indexed chat sessions in the session data store. Implementations also include the centralized chat manager executing a search interface (e.g., a web-based application) that a user can access to enter search criteria to locate relevant chat sessions stored in the session data store. Advantageously, the centralized chat manager uses the input search criteria to retrieve and return a plurality of chat sessions related to each other, although the retrieved chat sessions correspond to user interactions with different business entities. In some implementations, the chat interface and the search interface execute as extensions to a web browser or other web-based application.
In some implementations, the centralized chat manager annotates the chat session with relevant metadata (e.g., account number, order number, product purchase history, date, etc.) so that the relevant metadata is available to the user when returning the chat session in search results. The centralized chat manager can obtain metadata from various sources, which can include, but are not limited to, a current chat session, one or more previous chat sessions associated with the user, and/or external sources (e.g., an email database, a calendar database, a text message database, etc.). Thus, implementations of the present disclosure allow users to communicate with various business entities through a consistent interface from a single consolidated service (i.e., a centralized chat manager) to provide users with a rich or complementary history of user interactions with each entity.
Referring to fig. 1, in some implementations, an example system 100 includes user devices 10 associated with respective users 12 and in communication with a remote system 111 via a network 112, 112 a. The user device 10 may correspond to a computing device, such as a desktop workstation, a laptop workstation, a mobile device (e.g., a smartphone or tablet), a wearable device, a smart appliance, a smart display, or a smart speaker. The remote system 111 may be a single computer, multiple computers, or a distributed system (e.g., a cloud environment) having scalable/resilient computing resources 118 (e.g., data processing hardware) and/or storage resources 116 (e.g., memory hardware). Remote system 111 also communicates with one or more agents 20, 20a-n via network 112 b. The networks 112a, 112b may be the same network or different networks. Each agent 20 is associated with a respective entity 22, 22a-n, and each entity 22 may be a unique entity distinct from the other entities 22. For example, each agent 20 may correspond to a customer support representative employed by a respective entity 22, and each entity 22 may correspond to a respective enterprise. As used herein, the term "entity 22" is interchangeably referred to as "business entity 22". In some examples, users 12 are customers of each business entity 22. For example, entity 22a may correspond to a banking institution of user 12, while entity 22b may correspond to a mortgage company of user 12.
The posts 30 are arranged in chronological order for the respective chat sessions 50. Thus, the stream of posts 30 in chat session 50 may include user posts 30a published by users 12 and agent posts 30b published by agent 20 in chat session 50. Chat sessions 50 between users 12 and respective agents 20 of respective business entities 22 may include streams/collections of posts 30 entered via chat interface 114 over a period of time. In some examples, chat sessions 50 include all posts 30 between users 12 and respective agents 20, such that there is only one chat session 50 between a user 12 and a respective agent 20. In other examples, after the chat session 50 is initiated, the chat session 50 persists after a threshold period of time has elapsed without receiving any more posts 30. In these examples, chat manager 110 may receive and store multiple chat sessions 50 between users and the same business entity 22, such that each chat session 50 includes a collection of posts 30 over a corresponding time period between user 12 and a respective agent 20 of a particular business entity 22 that is different from the time periods corresponding to other chat sessions. In some configurations, chat interface 114 allows user 12 to terminate/end a corresponding chat session 50 via a user input indication, such as a user selecting a graphical button (or speaking a specified command) displayed through chat interface 114.
A chat interface 114 executing on chat manager 110 is advantageously located between user 12 and each agent 20 to receive chat posts 30 from one of user 12 or agent 20 and, after logging in a post 30, relay the post 30 to the other of user 12 or agent 20. In some examples, chat interface 114 receives one or more posts 30 from a third party other than user 12 or agent 20 of business entity 22. When the chat interface 114 receives the posts 30 (i.e., the user posts 30a and/or the agent posts 30b), the chat interface 114 may provide the user 12 with a consistent interface showing the collection of posts 30 corresponding to the chat session 50 independent of the interface or software used by the agent 20 to facilitate the chat session 50 with the user 12. For example, while business entities 22 may employ different types of Customer Relationship Management (CRM) systems 25 and associated agent-side interfaces to facilitate chat sessions 50 between respective agents 20 and users 12 through chat manager 110, chat interface 114 may consistently display each post 30 (and/or output audio) posted by users 12 and/or agents 20 in chronological order or in some other order specified by users 12. In other words, chat interface 114 provides users 12 with a consistent user interface 114, which user interface 114 is configurable and compatible with a variety of different types of CRM systems 25, thereby providing an entity and agent agnostic chat interface. CRM system 25 and associated software provide business entity 22 with a variety of applications that help manage customer data, customer interaction, customer support, and the like. There are several CRM products for enterprise selection, and different CRMs offer different customer interaction support solutions (i.e., chat interfaces). Thus, chat manager 110 is configured to communicate with a wide number of different CRM solutions, and to translate the communications to provide users 12 with a consistent offer that is agnostic of any particular CRM solution. For example, the chat interface 114 may allow a user device 10 associated with a user 12 to be integrated with a particular CRM solution via a website, mobile application, social media platform, email, and the like. Centralized chat manager 110 can store relevant details regarding a particular CRM solution in storage resources 116. And recall these details when a chat session is initiated between user 12 and the corresponding business entity 22. Thus, chat interface 114 executing on data processing hardware 118 is configured to, for each chat session 50 of the plurality of chat sessions 50, communicate chat posts 30 between user 12 and a corresponding CRM system associated with a corresponding business entity 22 of the plurality of different business entities 22.
With continued reference to fig. 1, chat manager 110 further includes parser 120, annotator 130 and indexer 140. For each chat session 50 between a user and a respective agent 20 of a respective business entity 22, the parser 120 parses the chat session 50 for any keywords 122, and for each parsed keyword 122, the annotator 130 retrieves metadata 210 related to the parsed keyword 122 and annotates the chat session 50 with the retrieved metadata 210. In some examples, parser 120 analyzes each word, subword, or phrase in received chat session 50 to find any predetermined keywords 122. When the predetermined keywords 122 are found, the parser 120 parses the keywords 122 from the chat session 50 and passes the parsed keywords 122 to the annotator 130.
In the illustrated example, annotator 130 is in communication with a metadata store 200 that stores various metadata 210, metadata 210 being usable to annotate chat session 50 based on keywords 122 parsed therefrom. The metadata data store 200 may reside on a storage resource 118 (e.g., memory hardware) of the remote system 111, the user device 10, a third party storage resource, or some combination thereof. Chat manager 110 can obtain metadata 210 for parsed keywords 122 from multiple sources, some of which can be external to chat manager 110, and store metadata 210 within metadata store 200. Referring to fig. 2, chat manager 110 can obtain/obtain metadata 210 from a source that is different from the source of the corresponding chat session 50. For example, chat manager 110 can obtain metadata 210 from one or more external sources (e.g., external repositories) 220, 220a-n, the metadata 210 containing metadata 210 specific to user 12, such as an email repository 220a associated with user 12, a calendar repository 220b associated with user 12, and/or a message repository 220n associated with user 12. For example, when user 12 places a product order from one of business entities 22, business entity 22 may send user 12a confirmation email or message with various relevant metadata 210 (e.g., account number, order number, data, price, etc.). Chat manager 110 may access an email or message repository 220a, 220n storing the information and copy the information as metadata 210 into metadata data store 200. This list of external repositories 220 is non-exhaustive and may include additional external repositories that may provide metadata 210 for rich chat sessions 50.
Additionally or alternatively, chat manager 110 can select from current chat sessions 50 or one or more historical chat sessions 50 associated with user 12 and stored in session data store 230HMetadata is obtained 210. For example, user 12 may discuss an account number with an agent 20 of a business entity 22 comprising a banking institution in a post 30 of a chat session 50. Here, chat manager 110 (e.g., when parsing correspondence at parser 120)At post 30) may store the account number in metadata store 200 along with any other relevant identification information, such as user identifier 14 (fig. 1) identifying user 12 and/or agent identifier 24 (fig. 1) identifying agent 20. As described in more detail below with reference to fig. 1 and 3, session data store 230 is configured to store indexed annotated chat sessions 50 that users can search via a search interface 300 executing on chat manager 110. In addition, chat manager 110 can retrieve metadata 210 from one or more posts 30 of current chat session 50 before storing current chat session 50 in session data store 230, because current chat session 50 has not been annotated or indexed.
Returning to FIG. 1, the annotator 130 receives each parsed keyword 122 and, if available, annotates the keyword 122 with relevant metadata 210 from the metadata store 200. For example, annotator 130 can annotate the keyword "order" with the relevant order number and the keyword "account" with the relevant account number. In this example, metadata 210 includes tags that identify users 12 and/or business entities 22 associated with metadata 210. For example, the relevant order number may be obtained from an "order confirmation" email within email repository 220a of user 12 sent from the corresponding business entity 22 associated with annotated chat session 50. Likewise, chat sessions 50, 50 may be published from which user 12 accounts in posts 30HAnd acquiring the related account.
After annotating chat sessions 50 with metadata 210, when user 12 views, for example, historical chat sessions 50HThe annotation data 132 comprises, for each parsed keyword 122, a corresponding keyword-metadata pair comprising the parsed keyword 122 and the obtained metadata 210 related to the keyword 122 in some scenarios, the annotated data 132 comprises a list of the obtained metadata 210 related to all keywords 122 parsed from the chat session 50 in other scenarios, additional scenarios may comprise a portion of the annotation data 132 comprising keyword-metadata pairs generated for certain types of keywords 122 parsed from the chat session 50, while the remainder of the annotation data 132 simply comprises a list of the obtained metadata 210 related to other types of keywords 122 parsed from the chat session 50 in any of these scenarios, annotator 130 adds/appends annotation data 132 to chat session 50 (or to respective posts 30 of chat session 50) to enrich or supplement the chat session between user 12 and respective agent 20 of respective business entity 22. Thus, when user 12 later reviews chat session 50 as historical chat session 50H(i.e., chat history), user 12 can easily obtain relevant information from annotation data 132. As used herein, annotated data 132 added to chat session 50 may be collectively referred to as an "annotated chat session".
Still referring to fig. 1, the annotator provides annotated chat sessions (i.e., annotation data 132 added to the corresponding chat session 50) to the indexer 140, and the indexer 140 indexes the annotated chat sessions by parsing the annotation data 132 from the chat session 50 for storage as indexed annotated chat sessions 142 in the session data store 50. Session data store 230 may reside on a storage resource (e.g., memory hardware) 118 of remote system 111. The indexer 140 can index the annotation data 132 using any suitable indexing data structure (e.g., suffix tree, inverted index, etc.). In some examples, indexer 140 annotates chat with relevant metadata 210 at annotator 130The conversation 50 is preceded by indexing the parsed chat conversation 50 (or one or more associated posts 30) output from the parser 120. In these examples, indexer 140 applies annotation data 132 to the index of parsed chat sessions 50 to provide an annotation index. Additionally, the annotator 130 updates the annotation data 132 by retrieving new or updated metadata 210 at a later time. In this case, indexer 140 can apply updated annotation data 132 to historical chat sessions 50 previously stored in chat session data store 230H。
Referring to fig. 3A and 3B, in some implementations, the user device 10 communicates through the search interface 300 by accessing a web page or via a dedicated software application executing on the user device 10. For example, a web page or a dedicated software application may correspond to a web browser having a search engine. In the illustrated example, the user device 10 executes the graphical user interface 16 for display on the user device 10 to enter search criteria 350 in the search criteria entry window 330 (fig. 3A) and to view search results 360 returned from the search interface 300 displayed in the search results window 340 (fig. 3B). Referring to FIG. 3A, search criteria input window 330 can include one or more fields 332, 332a-n for entering keywords and/or parameters to locate any historical chat sessions 50 related to the input search criteria that user 12 wishes to view (and/or hear audible output of) the historical chat sessionsH. For example, entity field 332a may allow user 12 to enter (e.g., by typing in) the name of business entity 22 (e.g., national medical supply), search term field 332b may allow user 12 to enter one or more keywords (e.g., order, payment, account), and date range field 332n may allow user to enter a date range. In the example shown, user 12 may select a date range via a drop down, which may include a calendar for entering a start date and/or an end date. In the example shown, user 12 wishes search interface 300 from 1 month, 1 dayBy day 1 month, 2 historical chat sessions 50 related to national medical supplies and including keyword orders, payments, and accounts are retrievedH(i.e., indexed, annotated chat session 142). Graphical user interface 16 may include a search button 334, where when user 12 selects search button 334, search button 334 causes user device 10 to transmit information entered into search criteria input window 330 to search interface 300 as search criteria 350.
Referring to fig. 3B, after search interface 300 receives search criteria 350 from user device 10, search interface 300 retrieves one or more of indexed annotated chat sessions 142 from session data store 230 that satisfy the received search criteria 350 and sends search results 360 to user device 10. Here, search results 360 received by user device 10 include one or more indexed annotated chat sessions 142 retrieved from session data store 230. Continuing with the example provided in FIG. 3A, search interface 300 retrieves and sends two indexed annotated chat sessions 142a, 142b that satisfy the received search criteria 350 input to search criteria input window 330b of FIG. 3A. In this example, fig. 3B shows graphical user interface 16 simultaneously displaying first indexed annotated chat session 142a and second indexed annotated chat session 142B in search results window 340. First indexed annotated chat sessions 142a and historical chat sessions 50 between users 12 and corresponding agents 20 of entities 22a named "national medical suppliesHAnd second indexed annotated chat sessions 142b are associated with users 12 and respective agents 20 of entity 22b named "college bank". Here, the annotated chat session 142a of the first index includes the named entity 22a entered in the entity field 332a of fig. 3A and relates to one or more of the search terms entered into the search term field 332b of fig. 3A. In particular, annotated session 142a corresponds to a user post querying for a possibly incorrect past due cost from medical supply business entity 22a (e.g., national medical supply) and a responsible agent post indicating that payment for a previous order shipped on a particular date (e.g., 1 month, 3 days) was not received. The proxy post includes the number of annotations associated with the keyword "order # 123" rendered underlinedAccordingly 132, additional metadata 210 related to the keyword "order # 123" may be made available to user 12 to enrich chat session 142 a. For example, the user 12 may select or hover a cursor over the annotated data 132 to cause the graphical user interface 16 to present the additional metadata 210 as a pop-up window or in some other manner that is convenient for the user 12 to view. In the example shown, the pop-up window associated with the annotation data 132 for the keyword "order # 123" may include the product name, the product cost, the shipping date, the user account information, and any other relevant information associated with the keyword "order # 123".
The second indexed, annotated chat session 142b corresponds to a related user post that queries for any previous payments made to a named entity (e.g., national medical supply). Since user 12 is interested in any payments made or not made around 1 month 3 days (e.g., the shipping date of "order # 123"), input search criteria 350 inputs a date range of 1 month 1 day to 2 month 1 day to include only relevant historical chat sessions within that date range, while filtering out others. The proxy post includes annotation data 132 associated with the keyword "pay" depicted as underlined, such that additional metadata 210 related to the keyword "pay" may be presented to the user 12 to enrich the chat session 142 b. For example, the user 12 may select or hover a cursor over the annotated data 132 to cause the graphical user interface 16 to present the additional metadata 210 as a pop-up window or in some other manner that is convenient for the user 12 to view. In the example shown, the pop-up window associated with the annotation data 132 for the keyword "pay" may include the user's account number, a transaction showing payment of $50.00 in amount from the college bank to the national medical supply on 1 month and 1 day, and any other relevant information associated with the keyword. While each of the indexed annotated chat sessions 142a, 142b displayed in the search results window 340 includes annotation data 132 for only one keyword, in other examples, the chat sessions 142a, 142b may include annotation data 132 for retrieved metadata 210 related to multiple keywords 122.
In some implementationsIn this manner, graphical user interface 16 displays one or more indexed annotated chat sessions 142 in search results window 340 along with a current chat session 50 between user 12 and business entity 22 to allow user 12 to search for and view previous chat sessions 50 that may be related to current chat session 50H. In some implementations, chat manager 110 provides chat interface 114 and search interface 200 through the same interface accessible through graphical user interface 16 executing on user device 10. For example, the chat interface 114 and the search interface 200 may be accessed via web pages for respective web browsers and search engines, web-based applications, or software applications executing on the user device 10.
Referring now to fig. 4, in some implementations chat manager 110 implements policy controller 400. Policy controller 400 may implement one or more user policies 410, which may include, but are not limited to, a content restriction policy 410a, a data retention policy 410b, and a metadata policy 410 c. Content restriction policy 410a may control what types of chat sessions 50 are stored, and may also specify chat sessions associated with particular agents 20 and/or entities 22 that user 12 wishes to persist (or not). Data retention policy 410b may indicate a storage duration threshold or capacity threshold for chat sessions 50 stored in session data store 230. For example, data retention policy 410b may delete all chat sessions 50 stored longer than a storage duration threshold (e.g., six months). For example, metadata policy 410c may specify the source (e.g., external repository 220, session data store 230, current chat session 50) from which chat manager 110 may obtain metadata 210, the frequency with which metadata 210 is obtained, and the type of metadata 210 that is obtained. Each policy 410 may be user configurable. That is, user 12 may change or update each policy 410 via user device 10, and in some examples, directly edit or delete metadata 210 stored in metadata store 200 and/or historical chat sessions 50 stored in session data store 230H. For example, when a user closes an account with a particular business entity 22, user 12 may delete all of the elements associated with that entity 22According to 210 and/or chat session 50. The policy controller 400 may follow automatic rules or default values. For example, if user 12 does not explicitly agree to store particular data (e.g., index chat sessions 142 associated with a particular entity 22), policy controller 400 may force deletion of these index chat sessions 142 and any associated metadata 210 for a specified period of time (e.g., 30 days).
In addition, chat manager 110 can provide controls to the user that allow the user to select whether and when the systems, programs, or features described herein can enable the collection of user information (e.g., information about the user's social network, social behavior or activity, profession, user preferences, or the user's current location). In addition, certain data may be processed in one or more ways before being stored or used, thereby removing personally identifiable information. For example, the identity of the user may be processed such that personally identifiable information cannot be determined for the user, or the geographic location of the user may be summarized where location information is obtained (e.g., for a city, zip code, or state level) such that a particular location of the user cannot be determined. Thus, the user may have control over what information is collected about the user, how the information is used, and what information is provided to the user.
Fig. 5 is a flow diagram of an example method 500 for providing historical chat sessions to users 12. The method 500 may be described with reference to fig. 1-4. Method 500 begins at operation 502 with receiving, at data processing hardware 118, a plurality of chat sessions 50 associated with a particular user 12 and a plurality of different business entities 22. Each chat session 50 of the plurality of chat sessions 50 is between a user and a corresponding business entity 22 of a plurality of different business entities 22. At operation 504, for each chat session 50 of the plurality of chat sessions 50, the method 500 includes parsing, by the data processing hardware 118, the chat session 50 for any keywords 122, and at operation 506, for each parsed keyword 122, the method 500 includes obtaining, by the data processing hardware 118, metadata 210 related to the keyword 122 and annotating, by the data processing hardware 118, the chat session 50 with the metadata 210. For each chat session 50 of the plurality of chat sessions 50, method 500 further includes indexing, by the data processing hardware, an annotated chat session at operation 508, and storing, by the data processing hardware 118, the indexed annotated chat session 142 in a session data store 230 in communication with the data processing hardware 118 at operation 510. At operation 512, method 500 further includes receiving, at data processing hardware 118, search criteria 350 from user device 10 associated with user 12, and retrieving, from session data store 230, one or more of indexed annotated chat sessions 142 that satisfy the received search criteria. At operation 514, the method 500 further includes sending, by the data processing hardware 118, the search results 360 to the user device 10. Search results 360 include one or more indexed annotated chat sessions 142 retrieved from session data store 230.
FIG. 6 is a schematic diagram of an example computing device 600 that may be used to implement the systems and methods described herein. Computing device 600 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. The components shown herein, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed herein.
The memory 620 stores information within the computing device 600 in a non-transitory manner. The memory 620 may be a computer-readable medium, a volatile memory unit, or a nonvolatile memory unit. Non-transitory memory 620 may be a physical device for temporarily or permanently storing programs (e.g., sequences of instructions) or data (e.g., program state information) for use by computing device 600. Examples of non-volatile memory include, but are not limited to, flash memory and read-only memory (ROM)/programmable read-only memory (PROM)/erasable programmable read-only memory (EPROM)/electrically erasable programmable read-only memory (EEPROM) (e.g., typically used for firmware, such as boot programs). Examples of volatile memory include, but are not limited to, Random Access Memory (RAM), Dynamic Random Access Memory (DRAM), Static Random Access Memory (SRAM), Phase Change Memory (PCM), and disk or tape.
The storage device 630 can provide mass storage for the computing device 600. In some implementations, the storage device 630 is a computer-readable medium. In various different implementations, the storage device 630 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state storage device, or an array of devices, including devices in a storage area network or other configurations. In additional implementations, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 620, the storage device 630, or memory on processor 610.
The high speed controller 640 manages bandwidth-intensive operations for the computing device 600, while the low speed controller 660 manages lower bandwidth-intensive operations. Such allocation of duties is exemplary only. In some implementations, the high-speed controller 640 is coupled to memory 620, display 680 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 650, which may accept various expansion cards (not shown). In some implementations, the low-speed controller 660 is coupled to the storage device 630 and the low-speed expansion port 690. The low-speed expansion port 690, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, for example, through a network adapter.
Various implementations of the systems and techniques described here can be realized in digital electronic and/or optical circuits, integrated circuits, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications or code) include machine instructions for a programmable processor, and may be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly language/machine language. As used herein, the terms "machine-readable medium" and "computer-readable medium" refer to any computer program product, non-transitory computer-readable medium, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
A software application (i.e., software resource) may refer to computer software that causes a computing device to perform tasks. In some examples, a software application may be referred to as an "application," app, "or" program. Example applications include, but are not limited to, system diagnostic applications, system management applications, system maintenance applications, word processing applications, spreadsheet applications, messaging applications, media streaming applications, social networking applications, and gaming applications.
The processes and logic flows described in this specification can be performed by one or more programmable processors (also known as data processing hardware) executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and in particular by, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, the computer need not have such a device. Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, one or more aspects of the disclosure may be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), LCD (liquid crystal display) monitor or touch screen, for displaying information to the user and an optional keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other types of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Some implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly, other implementations are within the scope of the following claims.
Claims (20)
1. A method (500), comprising:
receiving, at data processing hardware (118), a plurality of chat sessions (50) associated with a particular user (12) and a plurality of different business entities (22), each chat session (50) of the plurality of chat sessions (50) being between the user (12) and a corresponding business entity (22) of the plurality of different business entities (22);
for each chat session (50) of the plurality of chat sessions (50):
the data processing hardware (118) parsing the chat session (50) for any keywords (122);
for each parsed keyword (122), the data processing hardware (118) obtaining metadata (210) related to the keyword (122);
the data processing hardware (118) annotating the chat session (50) with the metadata (210);
the data processing hardware (118) indexing annotated chat sessions (132); and
the data processing hardware (118) storing indexed annotated chat sessions (142) in a session data store (230) in communication with the data processing hardware (118);
receiving, at the data processing hardware (118), search criteria (350) from a user device (10) associated with the user (12);
the data processing hardware (118) retrieving from the session data store (230) one or more of the indexed annotated chat sessions (142) that satisfy the received search criteria (350); and
the data processing hardware (118) sends search results (360) to the user device (10), the search results (360) including one or more of the indexed annotated chat sessions (142) retrieved from the session data store (230).
2. The method (500) as recited in claim 1, wherein each chat session (50) of said plurality of chat sessions (50) includes at least one of text data or voice data.
3. The method (500) of claim 1 or 2, wherein obtaining the metadata (210) related to the keyword (122) comprises obtaining the metadata (210) from a source different from a source of the corresponding chat session (50).
4. The method (500) as claimed in claim 3 wherein the source of the metadata (210) comprises at least one of an email repository (220) associated with the user (12), a calendar repository (220) associated with the user (12), or a message repository (220) associated with the user (12).
5. The method (500) as recited in any one of claims 1-4, wherein obtaining said metadata (210) related to said keyword (122) comprises obtaining said metadata (210) from at least one of a current chat session (50) or one or more previous chat sessions (50) associated with said user (12).
6. The method (500) as claimed in any of claims 1-5 further comprising the data processing hardware (118) executing a chat interface (114) configured to communicate chat posts (30) between the user (12) and a corresponding Customer Relationship Management (CRM) system (25) for each chat session (50) of the plurality of chat sessions (50), the corresponding Customer Relationship Management (CRM) system (25) being associated with a corresponding business entity (22) of the plurality of different business entities (22).
7. The method (500) as recited in claim 6, wherein the corresponding CRM systems (25) associated with at least two of the plurality of different business entities (22) are different.
8. The method (500) of claim 6 or 7 wherein the chat posts (30) comprise at least one of comments, messages, notes, questions or replies posted by the user (12) and/or a respective agent (20) of a corresponding business entity (22) of the plurality of different business entities (22).
9. The method (500) as recited in any one of claims 1-8, wherein indexing the annotated chat session (132) comprises indexing the annotated chat session (132) based on a corresponding business entity (22) of the plurality of business entities (22).
10. The method (500) of any of claims 1-9, wherein, when the search result (360) is received by the user device (10), the search result (360) causes the user device (10) to display the one or more indexed annotated chat sessions (142) retrieved from the session data store (230) on a graphical user interface (12) executing on the user device (10).
11. A system (100), comprising:
data processing hardware (118); and
memory hardware (116) in communication with the data processing hardware (118), the memory hardware (116) storing instructions that, when executed on the data processing hardware (118), cause the data processing hardware (118) to perform operations comprising:
receiving a plurality of chat sessions (50) associated with a particular user (12) and a plurality of different business entities (22), each chat session (50) of the plurality of chat sessions (50) being between the user (12) and a corresponding business entity (22) of the plurality of different business entities (22);
for each chat session (50) of the plurality of chat sessions (50): parsing the chat session (50) for any keywords (122);
for each parsed keyword (122), obtaining metadata (210) related to the keyword (122);
annotating the chat session (50) with the metadata (210);
indexing annotated chat sessions (132); and
storing an indexed annotated chat session (142) in a session data store (230) in communication with the data processing hardware (118);
receiving search criteria (350) from a user device (10) associated with the user (12);
retrieving from the session data store (230) one or more of the indexed annotated chat sessions (142) that satisfy the received search criteria (350); and
sending search results (360) to the user device (10), the search results (360) including one or more of the indexed annotated chat sessions (142) retrieved from the session data store (230).
12. The system (100) of claim 11, wherein each chat session (50) of the plurality of chat sessions (50) includes at least one of text data or voice data.
13. The system (100) of claim 11 or 12, wherein obtaining the metadata (210) related to the keyword (122) comprises obtaining the metadata (210) from a source different from a source of a corresponding chat session (50).
14. The system (100) of claim 13, wherein the source of the metadata (210) comprises at least one of an email repository (220) associated with the user (12), a calendar repository (220) associated with the user (12), or a message repository (220) associated with the user (12).
15. The system (100) of any of claims 11-14, wherein obtaining the metadata (210) related to the keyword (122) comprises obtaining the metadata (210) from at least one of a current chat session (50) or one or more previous chat sessions (50) associated with the user (12).
16. The system (100) of any of claims 11-15, wherein the operations further comprise executing a chat interface (114), the chat interface (114) configured to communicate chat posts (30) between the user (12) and a corresponding Customer Relationship Management (CRM) system (25) for each chat session (50) of the plurality of chat sessions (50), the corresponding Customer Relationship Management (CRM) system (25) associated with a corresponding business entity (22) of the plurality of different business entities (22).
17. The system (100) as recited in claim 16, wherein the corresponding CRM systems (25) associated with at least two of the plurality of different business entities (22) are different.
18. The system (100) of claim 16 or 17, wherein the chat posts (30) include at least one of comments, messages, notes, questions or replies posted by the user (12) and/or respective agents (20) of corresponding ones of the plurality of different business entities (22).
19. The system (100) of any of claims 11-18, wherein indexing the annotated chat session (132) comprises indexing the annotated chat session (132) based on a corresponding business entity (22) of the plurality of business entities (22).
20. The system (100) of any one of claims 11-19, wherein, when the search result (360) is received by the user device (10), the search result (360) causes a display of the one or more indexed annotated chat sessions (142) retrieved from the session data store (230) on a graphical user interface (12) executing on the user device (10).
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/374,645 | 2019-04-03 | ||
US16/374,645 US20200320168A1 (en) | 2019-04-03 | 2019-04-03 | Discovering Customer Support Chat Sessions |
PCT/US2019/062669 WO2020205007A1 (en) | 2019-04-03 | 2019-11-21 | Discovering customer support chat sessions |
Publications (1)
Publication Number | Publication Date |
---|---|
CN113711259A true CN113711259A (en) | 2021-11-26 |
Family
ID=69063862
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980094883.8A Pending CN113711259A (en) | 2019-04-03 | 2019-11-21 | Discovering clients to support chat sessions |
Country Status (5)
Country | Link |
---|---|
US (1) | US20200320168A1 (en) |
EP (1) | EP3948745A1 (en) |
KR (1) | KR20210134374A (en) |
CN (1) | CN113711259A (en) |
WO (1) | WO2020205007A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN111274416A (en) * | 2020-01-22 | 2020-06-12 | 维沃移动通信有限公司 | Chat information searching method and electronic equipment |
CN112328740B (en) * | 2020-10-30 | 2023-06-13 | 浙江同花顺智能科技有限公司 | Chat record query method, device, equipment and storage medium |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130218885A1 (en) * | 2012-02-22 | 2013-08-22 | Salesforce.Com, Inc. | Systems and methods for context-aware message tagging |
-
2019
- 2019-04-03 US US16/374,645 patent/US20200320168A1/en not_active Abandoned
- 2019-11-21 EP EP19829717.8A patent/EP3948745A1/en not_active Withdrawn
- 2019-11-21 CN CN201980094883.8A patent/CN113711259A/en active Pending
- 2019-11-21 WO PCT/US2019/062669 patent/WO2020205007A1/en unknown
- 2019-11-21 KR KR1020217031802A patent/KR20210134374A/en not_active Application Discontinuation
Also Published As
Publication number | Publication date |
---|---|
EP3948745A1 (en) | 2022-02-09 |
KR20210134374A (en) | 2021-11-09 |
WO2020205007A1 (en) | 2020-10-08 |
US20200320168A1 (en) | 2020-10-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11645321B2 (en) | Calculating relationship strength using an activity-based distributed graph | |
US10585955B2 (en) | System and method for providing an information-centric application | |
US10192425B2 (en) | Systems and methods for automated alerts | |
US9910911B2 (en) | Computer implemented methods and apparatus for implementing a topical-based highlights filter | |
US10073837B2 (en) | Method and system for implementing alerts in semantic analysis technology | |
US8918421B2 (en) | Collecting and presenting information | |
US9495079B2 (en) | Persistent feeder component for displaying feed items received from information feeds of online social networks | |
US9292589B2 (en) | Identifying a topic for text using a database system | |
US10529013B2 (en) | Identifying business type using public information | |
US10748157B1 (en) | Method and system for determining levels of search sophistication for users of a customer self-help system to personalize a content search user experience provided to the users and to increase a likelihood of user satisfaction with the search experience | |
CN113168645A (en) | Knowledge search system | |
US20150149448A1 (en) | Method and system for generating dynamic themes for social data | |
CN113711259A (en) | Discovering clients to support chat sessions | |
US20170235776A1 (en) | Data upload via electronic communications | |
US20130166597A1 (en) | Context Object Linking Structured and Unstructured Data | |
US20150227861A1 (en) | Collaborative customer relationship management methods and systems | |
US20220100740A1 (en) | Systems and methods for automatically creating and/or managing electronic data tables | |
US10200324B2 (en) | Dynamically partitioning a mailing list based on a-priori categories and contextual analysis | |
US11943189B2 (en) | System and method for creating an intelligent memory and providing contextual intelligent recommendations | |
US11983484B2 (en) | Systems and methods for creating custom actions | |
US10839026B2 (en) | Knowledge management by connecting users | |
WO2023017528A1 (en) | System and method for creating an intelligent memory and providing contextual intelligent recommendations | |
Krebs | Automate Your Office |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
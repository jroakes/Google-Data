US8990492B1 - Increasing capacity in router forwarding tables - Google Patents
Increasing capacity in router forwarding tables Download PDFInfo
- Publication number
- US8990492B1 US8990492B1 US13/166,145 US201113166145A US8990492B1 US 8990492 B1 US8990492 B1 US 8990492B1 US 201113166145 A US201113166145 A US 201113166145A US 8990492 B1 US8990492 B1 US 8990492B1
- Authority
- US
- United States
- Prior art keywords
- rule
- banks
- bank
- width
- candidate
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/54—Organization of routing tables
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
Definitions
- a Ternary Content Addressable Memory (“TCAM”) is a type of computer memory used in certain high speed searching applications, such as routing information through a network. It is designed such that it receives a data word (e.g., a key in a packet header) and performs parallel matches of that word against every entry in the TCAM in a single clock cycle. Each TCAM entry can store a flow rule comprising a key, an action, and a priority.
- TCAMs are often used in network routers.
- the TCAMs may be organized into banks, each of which comprises a set of TCAM entries.
- the banks may have variable widths, where the width is inversely proportional to a capacity of the bank. For example, a bank may support 1000 entries of 72 bits, 512 entries of 144 bits, or 256 entries of 288 bits.
- An incoming packet is matched against all entries in all banks. If the packet matches multiple TCAM entries in a bank, the entry of lowest index (e.g., highest priority) is selected and its action is applied to the packet. If the packet matches multiple entries from multiple TCAM banks, the entry of lowest index in the bank of lowest index is selection and its action is applied to the packet.
- TCAMs have been widely used in routers, switches, and network security appliances of high speed networks to implement packet flow rules, e.g., access control list (“ACL”) call rules. They may be used for various applications, including packet filtering, forwarding, traffic load balancing and shaping.
- ACL access control list
- aspects of the technology provide for increasing a capacity of TCAMs by clustering rules in TCAM banks.
- One aspect of the technology provides a method for increasing capacity in a router forwarding table comprising a plurality of configurable banks.
- the method comprises providing a proposed rule to be added to the router forwarding table, identifying, using a processor, a range of candidate banks of the plurality of configurable banks in which the proposed rule may be stored based on a priority of the proposed rule, selecting, using the processor, one of the candidate banks for storing the proposed rule based on a width of the proposed rule and widths of the candidate banks, and storing the proposed rule in the selected bank.
- the selecting may be further based on an amount of available space in the candidate banks.
- the width of one or more of the plurality of configurable banks may be dynamically changed (e.g., increased to accommodate the proposed rule).
- the selecting one of the candidate banks may further comprise identifying a subset of the candidate banks having the same width as the proposed rule and having available space, comparing the candidate banks in the subset, and selecting the candidate bank having a least amount of available space.
- the selecting one of the candidate banks may further comprise comparing the widths of the candidate banks, identifying a subset of the candidate banks having a width greater than the width of the proposed rule, and selecting the narrowest bank in the subset of candidate banks.
- a further aspect of this method may comprise removing a rule from a first bank of the plurality of configurable banks. If all rules remaining in the first bank have a smaller width than the removed rule, a width of the first bank may be reduced. If only some rules remaining in the first bank have a smaller width than the removed rule, a subset of rules that may be relocated may be identified, the subset including rules having a width greater than at least one other rule remaining in the bank. Further, attempts to relocate the subset of rules to one or more other banks may be made.
- Another aspect of the technology provides a method for increasing capacity in a router forwarding table comprising a plurality of configurable banks.
- the method comprises removing a rule from a first bank. If all rules remaining in the first bank have a smaller width than the removed rule, a width of the first bank may be reduced. However, if only some rules remaining in the first bank have a smaller width than the removed rule, a subset of rules that may be relocated may be identified, the subset including rules having a width greater than at least one other rule remaining in the bank, and the subset of rules may be relocated to one or more other banks.
- the relocating may comprise identifying, using a processor, a range of candidate banks to which the rule may be relocated based on a priority of the rule, selecting, using the processor, one of the candidate banks for storing the rule based on a width of the rule and widths of the candidate banks, and storing the rule in the selected bank.
- a router comprising a storage area storing a forwarding table comprising a plurality of configurable banks (e.g., ternary content addressable memory banks), an input adapted to receive a proposed rule to be added to the forwarding table, and a processor.
- the processor may be configured to identify a range of candidate banks in which the proposed rule may be stored based on a priority of the proposed rule, and select one of the candidate banks for storing the proposed rule based on a width of the proposed rule and widths of the candidate banks.
- the processor may be further configured to dynamically change the width of one or more of the plurality of configurable banks. Further, the processor may also be configured to identify a subset of the candidate banks having the same width as the proposed rule and having available space, compare the candidate banks in the subset, and select a given one of the candidate banks having a least amount of available space.
- Another aspect of the invention provides a non-transitory computer-readable medium storing a computer-readable program for implementing a method of increasing capacity in a router forwarding table comprising a plurality of configurable banks.
- the method may comprise providing a proposed rule to be added to the router forwarding table, identifying, using a processor, a range of candidate banks of the plurality of configurable banks in which the proposed rule may be stored based on a priority of the proposed rule, selecting, using the processor, one of the candidate banks for storing the proposed rule based on a width of the proposed rule and widths of the candidate banks, and storing the proposed rule in the selected bank.
- FIG. 1 is a diagram of an example system according to an aspect of this disclosure.
- FIG. 2 illustrates an example method according to an aspect of this disclosure.
- FIG. 3 illustrates an example of adding a rule to a TCAM according to an aspect of this disclosure.
- FIG. 4 illustrates an example method for adding a new rule to a router according to an aspect of this disclosure.
- FIG. 5 illustrates an aspect of the method of FIG. 4 in greater detail.
- FIG. 6 illustrates another aspect of the method of FIG. 4 in greater detail.
- FIG. 7 illustrates an example method of comparing TCAM banks according to an aspect of this disclosure.
- FIG. 8 illustrates an example method for deleting a rule from the router according to an aspect of this disclosure.
- FIG. 1 illustrates an example network 150 that joins one or more client computers 160 , 162 , 164 , 182 , 184 .
- the network 150 includes one or more routers 142 , 144 , 146 , 148 .
- Each router 142 - 148 may include one or more input ports for receiving data from other routers or computing devices, such as packets or program updates.
- each router 142 - 148 may have one or more output ports for transmitting data through the network 150 .
- Each router 142 - 148 may also include one or more packet forwarding tables, such as TCAM 132 , TCAM 134 , and TCAM 136 in the router 144 .
- each router may have a processor and a memory, such as memory 120 of the router 144 , which stores data 122 and instructions 128 for adding ACL rules to the TCAMs 132 - 136 . While TCAMs 132 - 136 are shown as being stored separately from memory 120 , it should be understood that the TCAMs 132 - 136 , data 122 , and instructions 128 may all be stored in the same medium.
- Memory 120 may be any of a variety of storage media, such as RAM, optical disc, magnetic storage, etc. While the memory 120 is shown as being integrated with the router 144 , it should be understood that any type of memory, including a hard drive or removable memory, may be used. For example, the memory 120 may be a USB drive, or may be an independent storage medium coupled to one or more of the routers 142 - 148 .
- the computers 160 , 162 , 164 , 182 , 184 may be any of a variety of computing devices, including personal digital assistants (PDAs), laptops, tablet PCs, netbooks, PCs, etc. These devices may be connected to the network via a wired connection, such as through a modem, or wirelessly, such as through an access point in communication with one of the routers 142 - 148 .
- PDAs personal digital assistants
- laptops such as through a modem
- PCs netbooks
- the TCAMs 132 - 136 each represent a TCAM bank comprising a set of TCAM entries.
- a width of the entries in these TCAM banks may be configurable, and inversely proportional to a capacity of the bank.
- a bank may support 1000 entries of 72 bits, 512 entries of 144 bits, or 256 entries of 288 bits.
- Each entry may store a flow rule.
- the rule includes a key (K), an action (A), and a priority (P).
- Each rule is stored as a TCAM entry in order of priority.
- the rule corresponding to key 101 and action W has a highest priority (1).
- the rule corresponding to key 1*0 and action Z has a lowest priority, 4.
- the rules may also be indexed according to priority. For example, highest priority rules may be stored at a lowest indexed entry.
- router 142 may use packet information to determine that the next hop should be router 144 , and router 144 receives the packet and determines that the next hop should be router 148 .
- One mechanism used by the routers (e.g., router 144 ) to make such determinations is the TCAMs 132 - 136 .
- the TCAMs 132 - 136 perform parallel matches of all stored rules against the header of an incoming packet.
- two or more rules overlap. For example, two rules overlap if a packet can match both of them. If multiple matches occur, the rule stored in the lowest indexed entry (the highest priority rule) is returned. Similarly, a packet may match multiple entries from multiple TCAM banks. In this instance, the entry of lowest index in the bank of lowest index is selected and its action is applied to the packet.
- TCAM banks may be dynamically configured to minimize their entry width, and therefore maximize capacity.
- An exemplary method 200 of grouping flow rules to maximize TCAM capacity is shown in FIG. 2 . This method may determine a best fit for each rule in order to maximize TCAM capacity and therefore conserve resources. The method assumes a router with multiple TCAM banks. It should be understood that the steps of the following methods need not be performed in the precise order described below. Rather, various steps may be handled in a different order than what is shown or simultaneously, and steps may be added or omitted.
- a width of a flow rule R to be included in the router is determined. For example, it may be determined that the rule R includes x bits.
- candidate TCAM entries are identified.
- the candidate banks may include those having the same width as the rule R.
- the candidate banks may include those banks having the smallest width among all banks wider than rule R.
- stage 230 a best fitting TCAM bank is identified from the candidate banks. A method of identifying the best fitting bank is described in further detail below with respect to FIG. 6 .
- more than one TCAM bank may be determined to be a best fit. For example, two TCAM banks having the same width as rule R may store the rule R without compromising a forwarding behavior of the table. If it is determined in stage 240 that more than one TCAM bank may be considered a best fit, a least free bank is identified from that group in stage 250 . For example, if one of the two candidate banks having the same width as the rule R has 4 empty entries, and the other has 10 empty entries, the bank having 4 empty entries may be selected to store the rule R. This may serve to reduce fragmentation.
- the rule R may be added to the TCAM identified as the best fit.
- the width of the TCAM bank may be configured based on the added rule R.
- FIG. 3 illustrates an example in accordance with the method 200 of FIG. 2 .
- three TCAM banks 310 , 330 , and 350 each store a set of rules.
- the TCAM banks may be organized by priority. For example, TCAM bank 310 may have a highest priority, followed by TCAM bank 330 and TCAM bank 350 .
- each set of rules is the same width.
- rules 312 , 314 , 316 , and 318 are each a first width W1.
- rules 332 , 334 , 336 , and 338 are each a second width W2.
- rules 352 , 354 , 356 , and 358 are each a third width W3.
- the width of each TCAM bank 310 - 350 may be defined by the widest rule stored therein.
- bank 310 is width W1
- bank 330 is width W2
- bank 350 is width W3.
- Each width W1, W2, and W3 may be a different width, but the TCAM banks 310 - 350 need not be organized by their relative widths.
- arrows are used to illustrate a relationship between the rules within each bank 310 , 330 , 350 and between banks.
- an arrow between two rules may denote that the first rule overlaps with the second and has a higher priority.
- arrow 322 extends from rule 312 to rule 316 , thus illustrating that rule 312 overlaps with rule 316 and has higher priority.
- arrow 324 extends from rule 316 in TCAM bank 310 to rule 332 in TCAM bank 330 , indicating that the rule 316 overlaps with the rule 332 and has higher priority.
- rule 380 is a new rule to be added to one of the TCAM banks 310 , 330 , 350 .
- the rule 380 has a width W2.
- the rule 380 could be stored in a TCAM bank of any width, for example, by increasing the width of narrower banks or by not utilizing the full width of the wider banks.
- rule 312 in TCAM bank 310 overlaps rule 380 and has higher priority.
- the rule 380 overlaps rule 354 of the TCAM bank 350 and has higher priority. Therefore, the rule 380 may be stored in TCAM bank 310 below rule 314 , in TCAM bank 350 above rule 354 , or anywhere in TCAM bank 330 . Accordingly, the candidate banks include each of banks 310 - 350 .
- the best fitting bank for the new rule 380 may be determined to be TCAM bank 330 , for example, because of the respective widths of the bank 330 and the new rule 380 . (See FIG. 6 ). Because this is the only best-fitting bank, the rule 380 may be added to the TCAM bank 330 .
- FIGS. 4-7 describe in detail a procedure for adding a rule to a TCAM to maximize capacity.
- FIG. 4 describes a function add_rule(r), which adds a new rule r to a best-fitting TCAM bank.
- FIG. 5 describes a function find_candidate_banks(r, *min, *max), which identifies all possible TCAM banks in which the new rule r may be stored.
- FIG. 6 describes a function find_best_bank(min, max, r, *best), which determines the best bank in which to store the new rule r in order to maximize capacity.
- FIG. 7 describes a function better(i, j, r), which compares two banks identified as possible best banks, and determines which of those banks should be selected in order to reduce fragmentation. These functions may be performed any time a new rule is to be added.
- FIG. 4 describes a method 400 of adding a new rule r to a packet forwarding table of a router.
- the method 400 utilizes the function add_rule(r).
- candidate banks are identified in stage 410 , for example, using function find_candidate_banks(r, &min, &max) (see FIG. 5 ).
- a best-fitting bank is identified in stage 420 , for example, using function find_best_bank(min, max, r, &best) (See FIG. 6 ).
- a register “best” may store an index of the TCAM bank that is found to be the best candidate for storing the rule r.
- stage 430 it is determined whether the register “best” is equal to ⁇ 1, which may represent that TCAM banks are available for storing the rule r. For example, it may not be possible to add the rule r into any TCAM banks due to lack of space. If this is true, the method 400 ends. Otherwise, the rule r is added to the best fitting TCAM bank, for example, using function add_rule(r, best), in stage 440 .
- FIG. 5 illustrates a method 500 of finding candidate TCAM banks for the new rule r, for example, using function find_candidate_banks(r, *min, *max).
- the method 500 identifies candidate bank by analyzing each TCAM bank on the router separately, and determining whether the new rule r may be stored therein.
- a first bank is selected.
- the TCAM banks are organized in descending priority. Accordingly, a first selected TCAM bank may be the highest priority (lowest indexed) bank.
- a variable “i” corresponding to the selected bank is set to zero.
- a next higher indexed (lower priority) TCAM bank than the selected TCAM bank is analyzed. In particular, it is determined whether any rule in the next higher indexed TCAM bank overlaps with the new rule r and has a higher priority than r. If so, the variable i is incremented to correspond to the next indexed TCAM bank in stage 530 , and the method 500 returns to stage 520 where a TCAM bank indexed even higher than the previous TCAM bank is analyzed. However, if no higher priority rules overlap with the new rule r in the next higher indexed TCAM bank, then the selected TCAM bank is identified as the lowest indexed TCAM bank in which the new rule r may be stored ( 540 ).
- a highest indexed (lowest priority) TCAM bank is selected. Accordingly, corresponding variable i is set to N.
- stage 560 it is determined whether a next TCAM bank of lower index (higher priority) than the selected TCAM bank includes any rule overlapping with new rule r and having a lower priority than new rule r. If the next lower indexed TCAM bank includes such a rule, the variable i is decremented to correspond to that TCAM bank in stage 570 , and the method 500 returns to stage 560 where a further lower indexed TCAM bank is analyzed. However, if no overlapping lower priority rules are identified in stage 560 , the selected TCAM is set to be the highest indexed TCAM bank in which the rule r may be stored in stage 580 .
- each TCAM bank indexed between the highest and lowest may be considered a candidate for storing the new rule r.
- FIG. 6 illustrates a method 600 for identifying the best bank for storing the new rule r.
- this method may compare two banks at a time until all of the candidate banks are considered or until a best bank is found. For example, the method 600 may compare a lowest indexed candidate bank with each higher indexed candidate bank until the highest indexed candidate bank is considered. Attributes of a bank that may be considered best or better than other banks may include a similarity of width to the new rule r and a smaller amount of available free space in which to store the new r. According to some aspects, priority of the TCAM banks may also be considered.
- stage 605 two TCAM banks are selected for comparison. For example, the lowest indexed candidate bank and the next highest indexed bank may be selected.
- the variable *best stores the index of the TCAM bank considered as the best candidate for storing the rule r among banks “min” to i ⁇ 1.
- the variable i represents the next TCAM bank to be compared against *best.
- the method 600 ends, and the TCAM bank corresponding to *best may be considered the “best” TCAM bank for storing rule r and maximizing capacity of all TCAM banks on the router.
- the method 600 continues to stage 640 .
- a TCAM bank that has a different width from the width of rule r, but can store rule r is sought. Accordingly, at stage 640 the TCAM bank of lowest index (min) is selected.
- stage 645 it is determined whether the TCAM corresponding to variable i is capable of storing the new rule r. For example, a function can_store(i, r) may be used. This function will return true if the current width of TCAM bank i is equal to or greater than that of the rule r, and if the TCAM bank i is not full. In this case, the TCAM bank i may store the new rule r without any modifications to the TCAM bank i. However, if the width of rule r is greater than the width of the TCAM bank I, the TCAM bank i would need to reduce its capacity in order to store the rule r.
- a function can_store(i, r) may be used. This function will return true if the current width of TCAM bank i is equal to or greater than that of the rule r, and if the TCAM bank i is not full. In this case, the TCAM bank i may store the new rule r without any modifications to the TCAM bank i. However, if the width of
- the TCAM bank i would need to reduce its capacity by a ratio of the width of the TCAM bank over the width of the new rule r (W i /W r ) to increase its width from W i to W r .
- the TCAM bank i may increase its width in this way to store the new rule r if it has sufficient capacity to do so.
- the narrower TCAM bank i may store the wider rule r if it is currently less than 1 ⁇ [1+capacity(W i )]W i /W r full, where capacity (W i ) is its current capacity given width of W i .
- stage 645 If it is determined in stage 645 that the TCAM bank i is incapable of storing the new rule r, a next TCAM bank is selected for consideration in stage 650 . It is determined in stage 660 whether among all banks of index in between min and max, no bank have space to store rule r.
- stage 645 if it is determined in stage 645 that the TCAM i can store the new rule r, the method 600 proceeds to stage 655 , where it is determined whether the TCAM bank i is better suited to store the rule r than the TCAM bank currently considered as the potential best. For example, the better TCAM bank may be calculated using the method 700 of FIG. 7 . If it is determined that the TCAM bank i is better, it is saved as the new potential best TCAM in stage 665 . Otherwise, the method 600 returns to stage 650 where a new TCAM bank (i+1) is selected for consideration.
- stage 620 it is determined whether the width of bank i is the same as the width of the new rule r, and whether the bank i has any empty entries in which to store rule r. If both of these conditions are true, it is determined in stage 625 which of the two TCAM banks corresponding to “i” and “*best” (e.g., the lowest indexed bank and the next highest indexed bank in the first iteration) is “better.” This determination is explained in more detail below with respect to FIG. 7 .
- stage 625 If it is determined in stage 625 that the TCAM bank corresponding to “i” is better than the possible best TCAM bank (*best), the TCAM bank i will be saved as the new possible best (*best) in stage 635 for comparison to other TCAM banks. Otherwise, the method 600 returns directly to stage 610 .
- FIG. 7 illustrates a method 700 for determining the better of two banks, denoted as i and j.
- stage 705 it is determined whether j is not a valid TCAM bank. If it is determined that j is not a valid TCAM bank in stage 705 , it may be decided that bank i is better than bank j in stage 710 . However, if j is a valid TCAM bank the method proceeds to stage 715 , where it is determined whether bank i and bank j have a same width.
- bank i and j are each the same width, other factors may be considered to determine which bank is better suited to store the new rule r. For example, according to the method 700 , if the widths of banks i and j are the same, the method 700 proceeds to stage 720 , where it is determined whether the bank i includes less free space than the bank j. If bank i is determined to include less free space, it will be considered the “better” bank for storing the new rule r in stage 730 . Conversely, if bank i does not include less free space, bank j will be considered the “better” bank in stage 750 . The bank having less free space is considered to be the “better” choice because storing the new rule in that bank may help to reduce fragmentation.
- bank i and j are not determined to be the same width in stage 715 , it is determined whether the width of bank i is equivalent to the width of the new rule r in stage 725 . If bank i is the same width as rule r, then bank i may be considered the “better” choice.
- stage 735 it is determined whether the width of the bank i is greater than the width of bank j and also less than the width of rule r.
- stage 745 it is determined whether the width of the bank j is less than the width of the bank i and also less than the width of the rule r. If either of these are true, bank i will be determined to be “better” than bank j ( 730 ). However, if they are both false, it will be determined that bank j is “better” ( 750 ).
- FIG. 8 describes a function delete_rule(r), which deletes a rule r from a TCAM bank in such a way as to maintain forwarding behavior of the remaining rules and efficiently use the TCAM banks (e.g., maximize capacity).
- delete_rule(r) the system and method of the present disclosure first try to increase the capacity of the bank from which the rule was removed by reducing its width, if all remaining rules have smaller width.
- one or more rules in that TCAM bank may be relocated to other banks to enable a reduction of the TCAM banks width and/or to reduce fragmentation of all the TCAM banks.
- This method 800 may be performed any time a rule is to be deleted from a router forwarding table.
- rule r is removed from its respective TCAM bank.
- a capacity of the TCAM bank from which the rule was removed is increased, if possible. For example, if the removed rule r was the widest rule in the bank, a width of the bank may be reduced while still accommodating the rules stored therein. The reduced width may result in an increased capacity.
- the width of the bank from which the rule r was removed may also be reduced by moving wider rules stored therein to better fitting TCAM banks. Accordingly, in stage 815 the rules that may be moved in order to reduce the width of the TCAM are selected and defined as “rule_set.”
- stage 820 it is determined whether the rule set comprising the selected rules in empty. If so, there are no rules to possibly move in order to reduce the width of the TCAM bank, and the method 800 is ended. However, if the rule set is not empty, a first rule r′ is selected from the set in stage 825 .
- stages 830 and 835 an attempt is made to move the selected rule r′ to a “best” bank. For example, this operation may be similar to stages 410 and 420 described above with respect to FIG. 4 .
- stage 840 it is determined whether the best bank identified in stage 835 is better than the bank in which the rule r′ is currently stored. If so, the rule r′ is added to the best bank ( 845 ) and removed from its previous storage location ( 850 ). Otherwise, the method 800 returns to stage 820 to determine whether there are any further rules that may possibly be moved to reduce the width of the TCAM.
- the above described methods may be implemented as software (e.g., executable code stored in memory 120 ) and executed by a processor in the router.
- the software may be stored remotely. This software application may be automatically run each time a flow rule is to be added to or removed from the router.
- the above-described methods may produce a significant cost savings. Particularly, less hardware resources may be consumed, because the TCAMs are used more efficiently. Further, because the width and capacity of each TCAM bank may be automatically configured, updating of the router to add or delete rules may be done quickly and efficiently.
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/166,145 US8990492B1 (en) | 2011-06-22 | 2011-06-22 | Increasing capacity in router forwarding tables |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/166,145 US8990492B1 (en) | 2011-06-22 | 2011-06-22 | Increasing capacity in router forwarding tables |
Publications (1)
Publication Number | Publication Date |
---|---|
US8990492B1 true US8990492B1 (en) | 2015-03-24 |
Family
ID=52683471
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/166,145 Active 2034-01-16 US8990492B1 (en) | 2011-06-22 | 2011-06-22 | Increasing capacity in router forwarding tables |
Country Status (1)
Country | Link |
---|---|
US (1) | US8990492B1 (en) |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140215144A1 (en) * | 2013-01-30 | 2014-07-31 | Marvell Israel (M.I.S.L) Ltd. | Architecture for tcam sharing |
US20160330117A1 (en) * | 2015-05-07 | 2016-11-10 | Cisco Technology, Inc. | Scalable network address translation at high speed in a network environment |
US20170154044A1 (en) * | 2015-11-30 | 2017-06-01 | Ciena Corporation | Software precedence in ternary content-addressable memory (tcam) |
WO2017219842A1 (en) * | 2016-06-20 | 2017-12-28 | 中兴通讯股份有限公司 | Tcam entry updating method and apparatus, and tcam |
US20200076730A1 (en) * | 2018-08-31 | 2020-03-05 | Cisco Technology, Inc. | Router Methods and Apparatus for Managing Memory for Network Overlay Routes with Fallback Route Support Prioritization |
CN111327532A (en) * | 2020-01-21 | 2020-06-23 | 南京贝伦思网络科技股份有限公司 | Method for realizing capacity of super-large forwarding policy table of network equipment |
CN114448882A (en) * | 2020-11-04 | 2022-05-06 | 国家计算机网络与信息安全管理中心 | Design method for realizing high-performance and high-capacity routing equipment |
US11483313B2 (en) * | 2018-06-28 | 2022-10-25 | Intel Corporation | Technologies for updating an access control list table without causing disruption |
US11923009B2 (en) | 2022-06-15 | 2024-03-05 | Hewlett Packard Enterprise Development Lp | Compact K-SAT verification with TCAMS |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6718326B2 (en) * | 2000-08-17 | 2004-04-06 | Nippon Telegraph And Telephone Corporation | Packet classification search device and method |
US20110038375A1 (en) * | 2009-08-17 | 2011-02-17 | Board Of Trustees Of Michigan State University | Efficient tcam-based packet classification using multiple lookups and classifier semantics |
-
2011
- 2011-06-22 US US13/166,145 patent/US8990492B1/en active Active
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6718326B2 (en) * | 2000-08-17 | 2004-04-06 | Nippon Telegraph And Telephone Corporation | Packet classification search device and method |
US20110038375A1 (en) * | 2009-08-17 | 2011-02-17 | Board Of Trustees Of Michigan State University | Efficient tcam-based packet classification using multiple lookups and classifier semantics |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9411908B2 (en) * | 2013-01-30 | 2016-08-09 | Marvell Israel (M.I.S.L) Ltd. | Architecture for TCAM sharing |
US20140215144A1 (en) * | 2013-01-30 | 2014-07-31 | Marvell Israel (M.I.S.L) Ltd. | Architecture for tcam sharing |
US10554547B2 (en) * | 2015-05-07 | 2020-02-04 | Cisco Technology, Inc. | Scalable network address translation at high speed in a network environment |
US20160330117A1 (en) * | 2015-05-07 | 2016-11-10 | Cisco Technology, Inc. | Scalable network address translation at high speed in a network environment |
US20170154044A1 (en) * | 2015-11-30 | 2017-06-01 | Ciena Corporation | Software precedence in ternary content-addressable memory (tcam) |
US10108677B2 (en) * | 2015-11-30 | 2018-10-23 | Ciena Corporation | Software precedence in ternary content-addressable memory (TCAM) |
WO2017219842A1 (en) * | 2016-06-20 | 2017-12-28 | 中兴通讯股份有限公司 | Tcam entry updating method and apparatus, and tcam |
US11483313B2 (en) * | 2018-06-28 | 2022-10-25 | Intel Corporation | Technologies for updating an access control list table without causing disruption |
US20200076730A1 (en) * | 2018-08-31 | 2020-03-05 | Cisco Technology, Inc. | Router Methods and Apparatus for Managing Memory for Network Overlay Routes with Fallback Route Support Prioritization |
US11108690B2 (en) * | 2018-08-31 | 2021-08-31 | Cisco Technology, Inc. | Router methods and apparatus for managing memory for network overlay routes with fallback route support prioritization |
CN111327532A (en) * | 2020-01-21 | 2020-06-23 | 南京贝伦思网络科技股份有限公司 | Method for realizing capacity of super-large forwarding policy table of network equipment |
CN114448882A (en) * | 2020-11-04 | 2022-05-06 | 国家计算机网络与信息安全管理中心 | Design method for realizing high-performance and high-capacity routing equipment |
US11923009B2 (en) | 2022-06-15 | 2024-03-05 | Hewlett Packard Enterprise Development Lp | Compact K-SAT verification with TCAMS |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8990492B1 (en) | Increasing capacity in router forwarding tables | |
US8750144B1 (en) | System and method for reducing required memory updates | |
US11418632B2 (en) | High speed flexible packet classification using network processors | |
US9438505B1 (en) | System and method for increasing capacity in router forwarding tables | |
EP2643762B1 (en) | Method and apparatus for high performance, updatable, and deterministic hash table for network equipment | |
US8295286B2 (en) | Apparatus and method using hashing for efficiently implementing an IP lookup solution in hardware | |
Ma et al. | A smart pre-classifier to reduce power consumption of TCAMs for multi-dimensional packet classification | |
US8478707B1 (en) | System and method for reducing flow rules in forwarding tables | |
US7606236B2 (en) | Forwarding information base lookup method | |
US7827182B1 (en) | Searching for a path to identify where to move entries among hash tables with storage for multiple entries per bucket during insert operations | |
JP4027416B2 (en) | Data processing device | |
Bando et al. | Flashtrie: Hash-based prefix-compressed trie for IP route lookup beyond 100Gbps | |
US9595003B1 (en) | Compiler with mask nodes | |
US20070194957A1 (en) | Search apparatus and search management method for fixed-length data | |
EP3276501B1 (en) | Traffic classification method and device, and storage medium | |
EP2830260B1 (en) | Rule matching method and device | |
US9240959B2 (en) | Method for packet classification and device therefor | |
CN106789859B (en) | Message matching method and device | |
US9900409B2 (en) | Classification engine for data packet classification | |
US20050262294A1 (en) | Method for policy matching using a hybrid TCAM and memory-based scheme | |
US7788445B2 (en) | Intelligent allocation of programmable comparison operations for reducing the number of associative memory entries required | |
CN109754021B (en) | Online packet classification method based on range tuple search | |
US8566276B1 (en) | TCAM defragmentation candidate search scheme | |
Wee et al. | Fast packet classification based on hybrid cutting | |
US8880556B1 (en) | TCAM defragmentation for heterogeneous TCAM application support |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ZHOU, JUNLAN;JI, ZHENGRONG;REEL/FRAME:026817/0837Effective date: 20110620 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
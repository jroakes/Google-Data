US20060095835A1 - System and method for the modular generation of markup language - Google Patents
System and method for the modular generation of markup language Download PDFInfo
- Publication number
- US20060095835A1 US20060095835A1 US10/979,602 US97960204A US2006095835A1 US 20060095835 A1 US20060095835 A1 US 20060095835A1 US 97960204 A US97960204 A US 97960204A US 2006095835 A1 US2006095835 A1 US 2006095835A1
- Authority
- US
- United States
- Prior art keywords
- data
- module
- document
- markup language
- database
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/14—Tree-structured documents
- G06F40/143—Markup, e.g. Standard Generalized Markup Language [SGML] or Document Type Definition [DTD]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
Definitions
- the present invention generally concerns systems and methods for the substantially modular design and production of markup language documents and graphics; and more particularly, in various representative and exemplary embodiments, to electronic commerce (e-commerce) systems employing, for example, modularly generated Hypertext Markup Language (HTML) web content.
- e-commerce electronic commerce
- HTML Hypertext Markup Language
- markup has been used to describe annotation or other marks within a document intended to instruct typesetters as to how a particular passage should be printed or laid out. Examples may include wavy underlining to indicate boldface, special symbols for passages to be omitted or printed in a particular font, and so forth.
- the term ‘markup’ has been extended to include various types of specialized codes inserted into electronic texts to govern formatting, printing and other print processing.
- markup may be understood as a means of making an interpretation for the rendering of a particular document component, such as punctuation marks, capitalization, disposition of letters on a page, the spaces between words, and the like. These may be regarded as a type of markup, the function of which may be to aid the reader with the determination of, for example, where one word ends and another begins, or how to identify structural features such as headings or syntactic units such as dependent clauses or sentences. Accordingly, the formatting of a document for electronic processing may be likened to transcribing a manuscript in scriptio continua—essentially, the process of making explicit what may otherwise be conjectural by directing the reader or print producer as to how the document content should be viewed.
- Markup language is typically understood to mean a set of markup conventions used together for formatting texts. Accordingly, a markup language usually specifies what markup is allowed, what markup is required, how the markup is to be distinguished from text, and what the markup codes mean.
- a descriptive markup system generally uses markup codes which provide names to categorize parts of a document. Markup codes such as ⁇ para> or ⁇ end ⁇ list ⁇ may identify a portion of a document and indicate of it that ‘the identified item is a paragraph’ or ‘the identify item is the end of the most recently begun list’, etc.
- a procedural markup system typically defines what processing is to be carried out at particular points in a document, such as for example: ‘call procedure PARA with parameters 1 , b and x’ or ‘set the left margin 2 quads left; move the right margin 2 quads right; skip down one line; and return to the left margin’, etc.
- Standard Generalized Markup Language for example, the instructions needed to process a document for a particular purpose (e.g., to format the document) are generally distinguished from the descriptive markup which appears within the document. Often, these instructions may be collected outside the document in separate procedures or programs.
- SGML Standard Generalized Markup Language
- a document may be readily processed by many different software algorithms, each of which may apply different processing to those parts of the document which are considered relevant. For example, a content analysis program may disregard the footnotes embedded in an annotated text, while a formatting program may extract and collect them together for printing at the end of each chapter. Therefore, different processing instructions may be associated with the same parts of a file. Representatively, one program may extract names of persons and places from a document to create an index or database, while another, operating on the same text, might print names of persons and places in a distinctive typeface.
- SGML also provides the feature of a document type, and hence a document type definition (DTD).
- Documents are generally regarded as having types, just as many other objects processed by computers do.
- the type of a document is typically determined by its constituent parts and their structure.
- the definition of a report might be that it consists of a title and possibly an author, followed by an abstract and a sequence of one or more paragraphs. Anything lacking a title, according to such a definition, would not formally be regarded as a report, and neither would a sequence of paragraphs followed by an abstract, despite any other ‘report-like’ characteristics the document might have for a particular reader.
- a special purpose program such as a parser
- a parser may be used to process a document of a particular type and check that all the components required for that document type are indeed present and correctly ordered. More specifically, different documents of the same type may be processed in a substantially uniform fashion. Programs may be written which take advantage of information embedded in the document structure data, thus allowing the application to behave intelligently.
- Hypertext systems such as HTML, generally improve on other markup language methods of handling text by supporting associative links within and across documents. By tagging links explicitly, rather than using proprietary methods, developers of HTML documents can be assured that the resources they create will be accessible on diverse computing platforms.
- HTML is a language that is based on the SGML specification and has been adopted for defining the layout and attributes of World Wide Web documents, as well as for creating links between and within such documents.
- HTML is generally difficult for an average computer user to understand and work with.
- Part of the problem may be attributed to the complexity of the HTML standard, while another part may be due to the lack of easy-to-use tools for the design and production of web content. Accordingly, what may be representatively desired is a system and method to allow users having little or substantially no HTML training to produce, publish, modify and administrate HTML web content.
- the present invention provides a system and method for the modular design and production of web pages or other markup language content.
- Exemplary features are generally disclosed as including: a database; a markup language document having at least one document code module, wherein the markup language of the document code module is at least partially derived from data stored in the database; and an interface for managing at least one document code module in order to produce at least a portion of, for example, an HTML web page.
- FIG. 1 representatively illustrates a block diagram in accordance with an exemplary embodiment of the present invention
- FIG. 2 representatively illustrates a web page generated in accordance with an exemplary e-commerce embodiment of the present invention
- FIG. 3 representatively illustrates a module management interface in accordance with an exemplary e-commerce embodiment of the present invention
- FIG. 4 representatively depicts a module editing dialog in accordance with an exemplary e-commerce embodiment of the present invention
- FIG. 5 representatively depicts a first module insertion dialog in accordance with an exemplary e-commerce embodiment of the present invention
- FIG. 6 representatively depicts a second module insertion dialog in accordance with an exemplary e-commerce embodiment of the present invention.
- FIG. 7 representatively illustrates a product data editing dialog in accordance with an exemplary e-commerce embodiment of the present invention.
- first is generally used for distinguishing between similar components and not necessarily for describing a sequential or chronological order.
- front is generally employed for descriptive purposes and not necessarily for comprehensively describing exclusive relative position or order. Skilled artisans will therefore understand that any of the preceding terms so used may be interchanged under appropriate circumstances such that various embodiments of the invention described herein, for example, are capable of operation in other orientations and environments than those explicitly illustrated or otherwise described.
- production and “generation”, in addition to any functional or contextual variants thereof (particularly as they may relate to the authoring and/or development of markup language document content), may be understood to mean any aggregated or discrete steps at least partially involving the design, construction, layout, publication, organization, functional implementation, rendering, inclusion of features, and/or the aesthetic definition of at least a portion of markup language content.
- markup language document may be understood to mean any electronic representation of information that may be at least partially rendered by a suitably adapted application for markup language interpretation, as well as any electronic and/or printed material(s) at least partially derived therefrom.
- the exemplary merchandising system representatively illustrated in FIG. 1 may be configured to allow an average user to design, construct or otherwise produce the content of an e-commerce web site without having to acquire specific knowledge of HTML.
- the disclosed merchandising system employs a plurality of markup language document code modules (in this case, ‘web code modules’) that may be inserted, removed, hidden, shown, moved, modify or administrated, for example, on a web-based management interface by a user.
- Each module may be optionally adapted to comprise data components that may be employed to identify information specific to a particular code module.
- Exemplary pre-configured modules may be provided by a developer in such a way that with the selection of particular data components such as, for example, product ID and price, a block of HTML code may be generated for publishing a particular product or service offering on a storefront web site.
- the merchandising system may also be configured to provide a module management interface for moving, editing, showing, hiding, removing, administrating, etc. a web code module at or otherwise effectively near the module's insertion point.
- the merchandising system may be adapted to utilize an inheritance model and/or object property model for objects, such as code modules, classes, variables, and/or the like, such that properties or values may be inherited by or otherwise propagated to other objects. Accordingly, changes made to parent objects may be reflected in daughter objects. Additionally, users may be permitted to modify daughter objects substantially independently or each other in order to add or modify markup content as needed.
- objects such as code modules, classes, variables, and/or the like
- clients may represent individual people, entities or businesses equipped with computing devices to access or otherwise facilitate online communications.
- Clients ( 45 a, 45 b, 45 c ) may comprise any type of computing device, such as, for example, mainframe computers, desktop computers, workstations, terminal stations, laptop computers, handheld computers, personal information managers, smart devices, mobile phones and/or the like.
- Client computers ( 45 a, 45 b, 45 c ) may be located in a home or business environment with access to a network 40 . In a representative application, access may be through the Internet 40 using, for example, a commercially-available web-browser application.
- a plurality of client computers ( 45 a, 45 b, 45 c ) is representatively depicted in FIG. 1
- the disclosed exemplary system may be alternatively configured to operate with a substantially unitary client, such as in the case of a kiosk-type of merchandising station or a self-serve point-of-sale (POS) terminal.
- POS point-of-sale
- Client data connections ( 42 a, 42 b, 42 c ) to network 40 may comprise any combination of hardware, software and/or other networking components configured to provide data communication.
- a variety of conventional communications media and protocols may be used for data paths ( 42 a, 42 b, 42 c ) such as, for example, an Internet Service Provider (ISP) over the local loop, as is typically used in connection with standard modem communication, a cable modem, a Dish network, an ISDN connection, a Digital Subscriber Line (DSL), various wireless communication methods (e.g., 802.11b/g, BlueTooth, etc.) and/or the like.
- ISP Internet Service Provider
- DSL Digital Subscriber Line
- Client computers may also reside within a local area network (LAN) which interfaces to network 40 via a leased line (T 1 , T 3 , etc.).
- LAN local area network
- T 1 , T 3 , etc. a leased line
- the present invention may be deployed in the context of a client base where ‘N’ (see 45 c ) may be quite large.
- network 40 may generally correspond to the Internet.
- Internet generally refers to a substantially global, packet-switched network utilizing the TCP/IP suite of protocols or any other suitable protocols. Notwithstanding the preceding, the present invention may be implemented in various other network contexts as well, including any future alternatives to the Internet, in addition to other suitable inter-networks or intra-networks based on either open or proprietary protocols.
- Database 5 may be configured to store, for example, configuration data, property data, content data, design layout data, formatting data, template data, graphic script data, graphic images, text, navigation data, links, variables, parameters, fields, tables, programming code, script code, code libraries, markup tags, application objects, kinematic data, security data, multimedia data, product data, object selection data, browser data, cookie data, username data, password data, encryption data, and/or any other type of data, whether now known or hereafter described in the art, that may be useful for the generation of at least a portion of a markup language document.
- database 5 may comprise a third party tool, the schema of which may be proprietary to a particular merchant application.
- Database 5 may be any type of database, such as relational, hierarchical, object-oriented, and/or the like.
- Representative database products that may be used to implement database 5 include DB2 by IBM (White Plains, N.Y.), any of the database products available from ORACLE CORPORATION (Redwood Shores, Calif.), MICROSOFT ACCESS by MICROSOFT CORPORATION (Redmond, Wash.), or any other database product.
- the database may be organized in any manner, including, for example, data tables, look-up tables, matchable data structures or any other method and/or data structure now known or hereafter derived or otherwise described by those skilled in the art.
- Association of certain data may be accomplished through any data association technique known and practiced in the art.
- the association may be accomplished either manually or automatically.
- Automatic association techniques may include, for example, a database search, a database merge, GREP, AGREP, SQL, and/or the like.
- Data association may be accomplished by a database merge function, for example, using a key field to generally partition the database according to a class of objects defined by the key field.
- a certain class may be designated as a key field in both a first data table and a second data table, and the two data tables may then be merged on the basis of the class data in a key field.
- the data corresponding to a key field in each of the merged data tables may be the same; however, data tables having similar, though not identical, data in key fields may also be merged by using AGREP, for example.
- Database 5 may be configured to accept access from database administration client 10 via data path 9 in order to perform, for example, routine and/or incidental database administration functions.
- Database administration client 10 may comprise a web-based interface, a proprietary application front end, or any user interface suitably adapted to permit administration of database 5 .
- data path 9 may comprise a substantially internal communication path between database 5 and administration client application 10 running on a computer storing database 5 .
- database administration client 10 may connect to database 5 remotely through a network connection 9 and/or a web server.
- client computers may be optionally configured to access web server 15 via respective data paths ( 42 a, 42 b, 42 c ) connecting through the Internet 40 for subsequent access to and administration of database 5 .
- Web server 15 generally comprises any combination of hardware, software, and/or networking components configured to receive and process HTTP requests from client computers ( 45 a, 45 b, 45 c ) and provides a suitable website or other Internet-based user interface which is accessible by clients ( 45 a, 45 b, 45 c ).
- the Internet Information Server, MICROSOFT Transaction Server, and MICROSOFT SQL Server may be used in conjunction with the MICROSOFT operating system, MICROSOFT NT web server software, a MICROSOFT SQL database system, and a MICROSOFT Commerce Server.
- components such as Access Sequel Server, Oracle, MySQL, InterBase, and/or the like may be used to provide a compliant database-driven web content management system.
- webpage or ‘web content’, as used herein, is not meant to limit the type of documents and applications that might be used to interact with client users ( 45 a, 45 b, 45 c ).
- a typical website may include, in addition to standard HTML documents, various forms, Java applets, Javascript, active server pages (ASP), common gateway interface (CGI) scripts, extensible markup language (XML), dynamic HTML, cascading style sheets (CSS), helper applications, plug-ins, etc. or any other web-based content, whether now known, hereafter derived or otherwise described in the art.
- Security layer 15 a generally controls the availability of functions in the system (see FIG. 1 ) to a particular user. This may include graphic script creation, product data editing, selection of code modules to use with a particular merchandising page, database administration, web server administration, graphic server administration, and/or the like. For example, functions and features of the merchandising system may be enabled or disabled based on the identity of the user or to give an administrator control over who may modify the web site. As generally depicted, security layer 15 a may be substantially integrated with web server 15 . In various other representative embodiments, security layer 15 a may be alternatively, conjunctively or sequentially configured as a substantially stand-alone component and/or may be optionally integrated with various other client-side or server-side system components.
- Web server 15 may be configured to accept access from web server administration client 20 via data path 19 in order to perform, for example, routine and/or incidental web service administration functions.
- Web server administration client 20 may comprise a web-based interface, a proprietary application front end, or any user interface suitably adapted to permit administration of web server 15 .
- data path 19 may comprise a substantially internal communication path between web server 15 and web server administration client application 20 running on a substantially unitary computer.
- web server administration client 20 may connect to web server 15 remotely through a local network connection 19 and/or an Internet connection.
- client computers may be optionally configured to access web server 15 via respective data paths ( 42 a, 42 b, 42 c ) connecting through the Internet 40 for subsequent access to and administration of web server 15 .
- graphics server 30 comprises a system component suitably adapted to communicate with a third-party graphics application, such as, for example, ADOBE PHOTOSHOP by ADOBE SYSTEMS (San Jose, Calif.).
- a third-party graphics application such as, for example, ADOBE PHOTOSHOP by ADOBE SYSTEMS (San Jose, Calif.).
- ADOBE PHOTOSHOP by ADOBE SYSTEMS (San Jose, Calif.).
- One of the functions of graphic server 30 is to process a script of commands to manipulate graphic images using such a third-party graphics application.
- the custom graphic engine 25 and the content management system 31 may then be employed to use the resulting graphic image.
- Graphics server administration client 35 is a system component that generally provides an interface for the creation of scripts subsequently used by the graphic server 30 .
- Graphics server administration client 35 allows the creation of scripts used to render a particular graphic, as well as subscripts used by other scripts to render a particular part of a graphic image.
- such scripts and subscripts may be stored in database 5 .
- Graphics server 30 may be configured to accept access from graphics server administration client 35 via data path 32 in order to perform, for example, routine or incidental graphics server administration functions.
- Graphics server administration client 35 may comprise a web-based interface, a proprietary application front end, or any user interface suitably adapted to permit administration of graphics server 30 .
- data path 32 may comprise a substantially internal communication path between graphics server 30 and graphics server administration client application 35 running on a substantially unitary computer.
- graphics server administration client 35 may connect to graphics server 30 remotely through a local network connection 32 and/or an Internet connection.
- client computers may be optionally configured to access graphics server 30 via respective data paths ( 42 a, 42 b, 42 c ) connecting through the Internet 40 for subsequent access to and administration of graphics server 30 .
- Custom graphics engine 25 communicates with graphics server 30 by operation of data path 27 .
- the custom graphics engine 25 selects the relevant graphic scripts and merchandising variables to produce a graphics script passed to the graphic server 30 .
- web server 15 receives the post-processed image from file server 11 over data path 12 .
- Content management control layout passes HTML to web server 15 for subsequent display of the resulting image in the appropriate areas of the web site.
- the custom graphics engine 25 may also be suitably adapted to inform the web servers 15 and/or database 5 when a graphic image has been updated.
- Data connections ( 7 , 19 , 27 , 32 ) may comprise any combination of hardware, software and/or other networking components configured to provide communication data paths.
- a variety of conventional communications media and protocols may be used for data paths ( 7 , 19 , 17 , 27 , 32 ) such as, for example, an Internet Service Provider (ISP) over the local loop, as is typically used in connection with standard modem communication, a cable modem, a Dish network, an ISDN connection, a Digital Subscriber Line (DSL), various wireless communication methods (e.g., 802.11b/g, BlueTooth, etc.) and/or the like.
- ISP Internet Service Provider
- DSL Digital Subscriber Line
- Device components connected via data paths may also reside within a local area network (LAN) which interfaces to an external network, such as the Internet, via a leased line (T 1 , T 3 , etc.).
- LAN local area network
- T 1 , T 3 leased line
- the disclose system and method may also be configured to include additional components, such as a product picker, a content manager 31 , a merchandising server 31 , and a merchandising interface:
- the product picker component may be configured to use a web-based interface to select various products from a catalog of products stored in database 5 , and may be employed in several applications of the disclosed merchandising system to select a single product or a plurality of products.
- the content management component generally allows fields of information in the product catalog to be edited.
- this component may also be configured to include a ‘Delta system’ that allows the target product to be edited, as well as copies of the product data to be used for a particular store or user.
- a ‘Delta system’ that allows the target product to be edited, as well as copies of the product data to be used for a particular store or user.
- Using the Delta system a company with multiple stores or a plurality of user levels can make different product information available while optimizing the total volume of stored data.
- the merchandising server component may be configured to control the editing and display of merchandising modules.
- a module may comprise a block of HTML code and a series of graphic scripts in conjunction with a group of variables that change the look, feel, or data of the web page to be rendered. Modules may be grouped together as a ‘layout’.
- each page of a particular e-commerce web site using the merchandising system may have an associated layout.
- the merchandising server component may also be adapted to allow the selection of an appropriate template for a page in a web site, as well as performing behind-the-scenes updates to database 5 .
- the merchandising interface generally provides a front end to the functions performed by the merchandising server.
- the merchandising interface may be written in HTML and usable by clients with a web browser.
- the merchandising interface allow changes to the layout of web pages, changes to individual modules, and/or modification of a collection of pages comprising a particular web site.
- a web page 100 generated in accordance with an exemplary e-commerce embodiment of the present invention, is representatively illustrated in FIG. 2 .
- Web page 100 has components that may include the following: a title 105 ; a status indicator 110 (‘Merchandising Off’; compare with 210 in FIG.
- a navigation bar 115 a ‘View Cart’ navigation component 115 a; a ‘My Account’ navigation component 115 b; an ‘About Us’ navigation component 115 c; a ‘Help’ navigation component 115 d; a ‘Sign In’ navigation component 115 e; a category bar 120 ; a ‘Home’ category component 120 a; a ‘Computers’ category component 120 b; an ‘Electronics’ category component 120 c; a ‘Home Office’ category component 120 d; a ‘Movies’ category component 120 e; a ‘CDs & Cassettes’ category component 120 f; a ‘Books’ category component 120 g; a ‘Home & Appliances’ category component 120 h; a ‘Gifts & Jewelry’ category component 120 i; a ‘Sports & Outdoors’ category component 120 j; a ‘Toys & Video Games’ category component 120 k; a ‘Health & Beauty’ category component 120 ( l
- Title 105 may provide general information identifying the area of the web site being accessed.
- Status indicator 110 when reading for example ‘Merchandising Off’, may indicate to the user that they are accessing web page 100 in a mode adapted for the purchasing of products and/or services.
- Navigation bar 115 may provide tools to provide the user with information concerning their purchases, their account, or the online store.
- Category bar 120 may facilitate the categorization of goods and services offered by the merchant for purchase on web page 100 . Where goods and services may not be readily found using category bar 120 , a search/browse tool 125 may be provided for entry of keyword(s) 125 b to target a search within the site's offerings.
- Navigation index 130 generally displays the user's current category location in the product/service catalog.
- Category title 140 , optional category tagline 145 and sub-category browsing links 135 may also be provided to aid the user in their search to find good or services of interest.
- Product/service sub-module 150 may include a link 155 to provide additional information concerning the identified product and/or service in addition to a description 160 of the offering, various additional information 165 for the offering, quick category links 168 , bargain links 170 , and/or price information 175 .
- Featured products and/or services may appear in a featured pane 180 that may further include, for example, a search category drop-down list 180 a, a search keyword field 180 b, a search execution button 180 c, an advanced options link 180 d, a searching tips link 180 e, a purchase index 185 (e.g., to display the number of items, total cost, etc.), and category links 190 .
- FIG. 3 representatively depicts a module management interface that may be adapted to produce, for example, the web page 100 generally illustrated in FIG. 2 .
- Module management interface 200 may be accessed via Internet Explorer, Netscape, Opera, Safari and/or any other web browser application, whether now known or hereafter described in the art.
- Management interface 200 representatively includes, for example: a title 205 ; a status indicator 210 (‘Merchandising On’; compare with 110 in FIG.
- a navigation bar 215 for sub-category browsing links module; sub-category browsing links module content 235 ; category display module title content 240 ; a remove module control/selection component 242 for category title module; a hide module control/selection component 244 for category title module; an optional category display tag-line 245 ; an edit module control/selection component 246 for category title module; a module class identifier 248 ; a first product/service module 250 ; a remove module control/selection component 252 ; a hide module control/selection component 254 ; an edit module control/selection component 256 ; a module class identifier 258 ; a product and/or service descriptor 260 ; module location control components 262 ; a module location control component 262 a for moving current module up; a module
- Module control and selection bar 232 in this case for the sub-category browsing links 235 module, includes control/selection components for removing, hiding, editing and moving module 235 .
- Various other modules having similar control/selection components appear throughout various portions of FIG. 3 .
- remove module control/selection component 242 may be used to delete title text 240 and title tagline 245 from the web page 100 being designed in module management interface 200 , and subsequently, from final rendering on web page 100 .
- hide module control/selection component 244 may be used to obscure the same content ( 240 , 245 ) from final rendering of web page 100 , while preserving the hidden module content in the design view of module management interface 200 . If a module has been previously hidden by operation of a hide module selection, the same module may be later displayed in the rendering of the final web page by operation of a show module control/selection component ( 294 , 292 ).
- a module class identifier 248 may also appear in the design view to indicate the source, status, function or other information concerning the particular module of interest. Where a module is obscured from final rendering for example, a status indication of ‘Hidden’ 296 may appear.
- Module location control components 262 may be used to alter the position of a module's appearance in the final rendered page. For example, control component 262 a may be used to move the corresponding module up above the immediately preceding module, or control component 262 b may be used to move the module down below the immediately following module. Alternatively, conjunctively or sequentially, module management interface 200 may be optionally adapted to allow the user to click on a module and drag it to a location of the user's choosing.
- an module editing window 300 may be presented to the user.
- editing dialog 300 may comprise two tabbed panes: a property tab 305 and a preview tab 310 .
- Preview tab 310 generally permits the user to view a pre-rendered version of proposed and/or selected changes to the module substantially prior to pushing any changes to the design view of module management interface 200 .
- Dialog window 300 may also include: a color style property drop-down list 315 for selection of a color scheme; a header style property drop-down list 320 for selection of header text font formatting; a header text entry field 325 for entry of text to be display in the module's header; a header text alignment drop-down list 330 for selection of header text alignment formatting; a main text alignment drop-down list 335 for selection of main text alignment formatting; a sub-header text entry field 340 for entry of text to be displayed in the modules sub-header; a sub-header text alignment drop-down list 345 for selection of sub-header text alignment formatting; a main product identification text entry field 350 for entry of main product identification information; a main product identification lookup button 352 to access a tool to look-up unknown main product identification information; a product # 2 identification text entry field 355 for entry of main product identification information; a product # 2 identification lookup button 357 to access a tool to look-up unknown product # 2 identification information; a product # 3 identification text entry field 360
- edit dialog 300 properties pane 305 may also include a merchandising statistics panel 390 comprising: a merchandising statistics title 390 a that may or may not indicate the date of the most recent updates to the module's statistical information; the number of page views 390 b that have occurred; the number of clicks 390 c in module that have occurred; the product distribution 390 d for a particular product (e.g., ID 231122); the product distribution 390 e for another product (e.g., ID 2322); a merchandising statistics reset link 390 f to restart the accumulation of statistical data.
- a merchandising statistics panel 390 comprising: a merchandising statistics title 390 a that may or may not indicate the date of the most recent updates to the module's statistical information; the number of page views 390 b that have occurred; the number of clicks 390 c in module that have occurred; the product distribution 390 d for a particular product (e.g., ID 231122); the
- the edit module dialog 300 may be further configured with an accept changes button 395 to implement the changes made in the edit module dialog window for inclusion in the design view of module management interface 200 and/or a cancel changes button 397 to abandon the proposed changes made in the module dialog 300 and to return to the design view of module management interface 200 .
- an accept changes button 395 to implement the changes made in the edit module dialog window for inclusion in the design view of module management interface 200
- a cancel changes button 397 to abandon the proposed changes made in the module dialog 300 and to return to the design view of module management interface 200 .
- the preview area need not be limited to a panel or frame as representatively depicted in the Figures. Preview area may also comprise a pop-up window, a dialog box, a tabbed pane, and/or the like.
- a module insertion control/selection component 266 may be provided to introduce a new module at a specified point within the web code document displayed in management interface 200 .
- FIG. 5 illustrates a representative module insertion dialog window 400 in accordance with an exemplary embodiment of the present invention.
- insertion dialog 400 may comprise two tabbed panes: a pre-defined module tab 405 and a custom module tab 410 .
- Pre-defined tab 405 may be used for selecting substantially pre-defined web code module components for addition to a web page at the selected insertion point.
- custom tab 410 may be used for selecting template web code module components that may be customized by the user.
- Pre-defined tab 405 may be configured with a web code module drop-down list 415 for selection of a substantially pre-defined module.
- a preview area 420 may be provided to permit the user to see an at least partially rendered version of the module prior to insertion in the web code document of interest. Skilled artisans will appreciate that such a preview area 420 need not be limited to a panel or frame as representatively depicted in FIG. 5 . Preview area may also comprise a pop-up window, a dialog box, a tabbed pane, and/or the like.
- the insertion module dialog 400 may be further configured with an accept changes button 425 to implement the changes made in the insertion module dialog window for inclusion in the design view of module management interface 200 and/or a cancel changes button 430 to abandon the proposed changes made in the module dialog 400 and to return to the design view of module management interface 200 .
- FIG. 6 illustrates a representative module insertion dialog window 500 in accordance with another exemplary embodiment of the present invention.
- insertion dialog 500 may comprise two tabbed panes: a pre-defined module tab 505 and a custom module tab 510 .
- Pre-defined tab 505 may be used for selecting substantially pre-defined web code module components for addition to a web page at the selected insertion point.
- custom tab 510 may be used for selecting template web code module components that may be used for selecting substantially user-defined code module components for addition to a web page at the selected insertion point.
- Custom tab 510 may be configured with a web code module drop-down list 515 for selection of a template or custom module. As a particular module is selected, a preview area 520 may be provided to permit the user to see an at least partially rendered version of the custom module prior to insertion in the web code document of interest. Skilled artisans will again appreciate that such a preview area 520 need not be limited to a panel or frame as representatively depicted in FIG. 6 . Preview area may also comprise a pop-up window, a dialog box, a tabbed pane, and/or the like.
- module insertion dialog 500 may be further configured with an accept changes button 525 to implement the changes made in the module insertion dialog window for inclusion in the design view of module management interface 200 and/or a cancel changes button 530 to abandon the proposed changes made in the module dialog 500 and to return to the design view of module management interface 200 .
- modules may be configured in a nested relationship with one another or may themselves comprise a plurality of sub-module components.
- the module may be invisible, hidden or otherwise obscured from final rendering.
- a module may contain data that may be useful or otherwise accessible to other modules. In this case, such a module may be configured as a dummy module.
- FIG. 7 representatively depicts a product data editing dialog 600 in accordance with an exemplary embodiment of the present invention.
- Product editing dialog 600 (here for Product No. 1188422) may be configured to comprise a plurality of tabs for various functions that may be applied to alter product data contained in database 5 .
- Such grouping of functions may include inter alia: an overview data tab 605 for the entry of general product information; a merchandising data tab 610 for the entry of product merchandising information; a product specification data tab 615 for the entry of product specification data; an images/links data tab 620 for the entry of product images and/or links; a notes data tab 625 for the entry of product notes or miscellaneous information; and/or the like.
- General Information tab 605 may further comprise: a product name text entry field 635 for identification of the product data being edited; a summary information text entry field 640 for the entry of product summary information; a product description text entry field 645 for the entry of more detailed product description information; a product status drop-down list 650 to select the current status of the particular product/service of interest; a product condition drop-down list 655 to indicate the condition of the product offering; a miscellaneous product information checkbox selections 660 for standard categorization of product information; a product UOM Code text entry field 665 ; a product weight text entry field 670 to indicate the weight of the product offering; a product dimensions text entry fields 675 to indicate the physical dimensions of the product offering; a product pricing section 680 to provide a grouping of data fields relating to the price of the product offering; a product cost text entry field 682 indicating the merchant's cost for the product offering; a product minimum price text entry field 685 indicating the lowest price that the
- the product editing dialog 600 may be further configured with an accept changes button 672 to implement the changes made to the product data for modification in database 5 and/or a cancel changes button 674 to abandon the proposed changes made in the product data and, in one exemplary and representative embodiment of the present invention, to return to the design view of module management interface 200 .
- the software components of the present invention may be implemented with any programming or scripting language such as, for example, C, C++, Java, COBOL, assembler, PERL, extensible Markup Language (XML), etc., and/or any programming or scripting language now known or hereafter derived or otherwise described in the art, with the various algorithms being implemented with any combination of data structures, objects, processes, routines or other programming components.
- the present invention may employ any number of conventional techniques for data transmission, signaling, data processing, network control, and the like.
- the invention could be used to detect or prevent security issues with a client-side scripting language, such as JavaScript, VBScript or the like.
- a client-side scripting language such as JavaScript, VBScript or the like.
- the network may include any system for exchanging data, such as, for example, the Internet, an intranet, an extranet, WAN, LAN, wireless network, satellite communications, and/or the like. It is noted that the network may be implemented as other types of networks, such as an interactive television (ITV) network.
- ITV interactive television
- the users may interact with the system via any input device such as a keyboard, mouse, kiosk, personal digital assistant, handheld computer (e.g., PALM PILOT, POCKET PC), cellular phone and/or the like.
- the invention could be used in conjunction with any type of personal computer, network computer, workstation, minicomputer, mainframe, and/or the like running any operating system such as any version of Windows, Windows XP, Windows ME, Windows NT, Windows2000, Windows 98, Windows 95, MacOS, OS/2, BeOS, Linux, UNIX, or any operating system now known or hereafter derived by those skilled in the art.
- the invention may be readily implemented with TCP/IP communications protocols, IPX, Appletalk, IP-6, NetBIOS or any number of existing or future standards or protocols.
- the system contemplates the use, sale and/or distribution of any goods, services or information having similar functionality described herein.
- the computing units may be connected with each other via a data communication network.
- the network may be a public network and assumed to be insecure and open to eavesdroppers.
- the network may be embodied as the Internet.
- the computers may or may not be connected to the Internet at all times.
- a variety of conventional communications media and protocols may be used for data links, such as, for example, a connection to an Internet Service Provider (ISP) over the local loop, as is typically used in connection with standard modem communication, cable modem, Dish networks, ISDN, Digital Subscriber Line (DSL), or various wireless communication methods.
- ISP Internet Service Provider
- Systems in accordance with the present invention might also reside within a local area network (LAN) which interfaces to a network via a leased line (T 1 , T 3 , etc.).
- LAN local area network
- T 1 , T 3 leased line
- Such communication methods are generally well known in the art, and are covered in a variety of standard texts.
- the present invention may be embodied as a method, a system, a device, and/or a computer program product. Accordingly, the present invention may take the form of an entirely software embodiment, an entirely hardware embodiment, or an embodiment combining aspects of both software and hardware. Furthermore, the present invention may take the form of a computer program product on a computer-readable storage medium having computer-readable program code embodied in the storage medium. Any suitable computer-readable storage medium may be utilized, including hard disks, CD-ROM, optical storage devices, magnetic storage devices, and/or the like.
- Data communication may be accomplished through any suitable communication means, such as, for example, a telephone network, Intranet, Internet, point of interaction device (POS device, personal digital assistant, cellular phone, kiosk, etc.), online communications, off-line communications, wireless communications, and/or the like.
- POS device point of interaction device
- any databases, systems, or components of the present invention may consist of any combination of databases or components at a single location or at multiple locations, wherein each database or system optionally includes any of various suitable security features, such as firewalls, access codes, encryption, de-encryption, compression, decompression, and/or the like.
- These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function specified in the block diagrams.
- the computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the block diagrams.
- block diagram illustrations support combinations of means for performing the specified functions, combinations of steps for performing the specified functions, and program instruction means for performing the specified functions. It will also be understood that each functional block of the block diagrams and flowchart illustrations, and combinations of functional blocks in the block diagrams, can be implemented by either special purpose hardware-based computer systems which perform the specified functions or steps, or suitable combinations of special purpose hardware and computer instructions.
- the terms ‘comprises’, ‘comprising’, or any variation thereof, are intended to reference a non-exclusive inclusion, such that a process, method, article, composition or apparatus that comprises a list of components does not include only those components recited, but may also include other components not expressly listed or inherent to such process, method, article, composition or apparatus.
- Other combinations and/or modifications of the above-described structures, arrangements, applications, proportions, components, materials or components used in the practice of the present invention, in addition to those not specifically recited, may be varied or otherwise particularly adapted by those skilled in the art to specific environments, manufacturing specifications, design parameters or other operating requirements without departing from the general principles of the same.
Abstract
Description
- The present invention generally concerns systems and methods for the substantially modular design and production of markup language documents and graphics; and more particularly, in various representative and exemplary embodiments, to electronic commerce (e-commerce) systems employing, for example, modularly generated Hypertext Markup Language (HTML) web content.
- Historically, the word ‘markup’ has been used to describe annotation or other marks within a document intended to instruct typesetters as to how a particular passage should be printed or laid out. Examples may include wavy underlining to indicate boldface, special symbols for passages to be omitted or printed in a particular font, and so forth. As the formatting and printing of documents has become automated with the use of computers, the term ‘markup’ has been extended to include various types of specialized codes inserted into electronic texts to govern formatting, printing and other print processing.
- Expanding from this definition, ‘markup’ may be understood as a means of making an interpretation for the rendering of a particular document component, such as punctuation marks, capitalization, disposition of letters on a page, the spaces between words, and the like. These may be regarded as a type of markup, the function of which may be to aid the reader with the determination of, for example, where one word ends and another begins, or how to identify structural features such as headings or syntactic units such as dependent clauses or sentences. Accordingly, the formatting of a document for electronic processing may be likened to transcribing a manuscript in scriptio continua—essentially, the process of making explicit what may otherwise be conjectural by directing the reader or print producer as to how the document content should be viewed.
- ‘Markup language’ is typically understood to mean a set of markup conventions used together for formatting texts. Accordingly, a markup language usually specifies what markup is allowed, what markup is required, how the markup is to be distinguished from text, and what the markup codes mean. A descriptive markup system generally uses markup codes which provide names to categorize parts of a document. Markup codes such as <para> or \end{list} may identify a portion of a document and indicate of it that ‘the identified item is a paragraph’ or ‘the identify item is the end of the most recently begun list’, etc. By contrast, a procedural markup system typically defines what processing is to be carried out at particular points in a document, such as for example: ‘call procedure PARA with
parameters 1, b and x’ or ‘set theleft margin 2 quads left; move theright margin 2 quads right; skip down one line; and return to the left margin’, etc. - In Standard Generalized Markup Language (SGML), for example, the instructions needed to process a document for a particular purpose (e.g., to format the document) are generally distinguished from the descriptive markup which appears within the document. Often, these instructions may be collected outside the document in separate procedures or programs.
- With descriptive instead of procedural markup, a document may be readily processed by many different software algorithms, each of which may apply different processing to those parts of the document which are considered relevant. For example, a content analysis program may disregard the footnotes embedded in an annotated text, while a formatting program may extract and collect them together for printing at the end of each chapter. Therefore, different processing instructions may be associated with the same parts of a file. Representatively, one program may extract names of persons and places from a document to create an index or database, while another, operating on the same text, might print names of persons and places in a distinctive typeface.
- SGML also provides the feature of a document type, and hence a document type definition (DTD). Documents are generally regarded as having types, just as many other objects processed by computers do. The type of a document is typically determined by its constituent parts and their structure. The definition of a report, for example, might be that it consists of a title and possibly an author, followed by an abstract and a sequence of one or more paragraphs. Anything lacking a title, according to such a definition, would not formally be regarded as a report, and neither would a sequence of paragraphs followed by an abstract, despite any other ‘report-like’ characteristics the document might have for a particular reader.
- If documents are of known types, a special purpose program (such as a parser) may be used to process a document of a particular type and check that all the components required for that document type are indeed present and correctly ordered. More specifically, different documents of the same type may be processed in a substantially uniform fashion. Programs may be written which take advantage of information embedded in the document structure data, thus allowing the application to behave intelligently.
- Hypertext systems, such as HTML, generally improve on other markup language methods of handling text by supporting associative links within and across documents. By tagging links explicitly, rather than using proprietary methods, developers of HTML documents can be assured that the resources they create will be accessible on diverse computing platforms.
- HTML is a language that is based on the SGML specification and has been adopted for defining the layout and attributes of World Wide Web documents, as well as for creating links between and within such documents. Notably, however, HTML is generally difficult for an average computer user to understand and work with. For example, in the commercial marketplace, there may be individuals well-versed in the marketing of products and services through conventional print media, but as companies move their marketing efforts to the World Wide Web, merchandising teams may not have the skills to effectively market products and services online. Part of the problem may be attributed to the complexity of the HTML standard, while another part may be due to the lack of easy-to-use tools for the design and production of web content. Accordingly, what may be representatively desired is a system and method to allow users having little or substantially no HTML training to produce, publish, modify and administrate HTML web content.
- Additionally, companies may also wish to conditionally allow or otherwise restrict access to parts of their product catalog or merchandising tools depending on the identity of the user accessing the system. Accordingly, what may also be representatively desired is a system and method for allowing users conditional access to produce, publish, modify and/or administrate web content for secure e-commerce applications.
- In various representative aspects, the present invention provides a system and method for the modular design and production of web pages or other markup language content. Exemplary features are generally disclosed as including: a database; a markup language document having at least one document code module, wherein the markup language of the document code module is at least partially derived from data stored in the database; and an interface for managing at least one document code module in order to produce at least a portion of, for example, an HTML web page.
- Additional advantages of the present invention will be set forth in the Detailed Description which follows and may be obvious from the Detailed Description or may be learned by practice of exemplary embodiments of the invention. Still other advantages of the invention may be realized by means of any of the instrumentalities, methods or combinations particularly pointed out in the claims.
- Representative components, operational features, applications and/or advantages of the present invention reside inter alia in the details of construction and operation as more fully hereafter depicted, described and claimed—reference being made to the accompanying drawings forming a part hereof, wherein like numerals refer to like parts throughout. Other components, operational features, applications and/or advantages will become apparent to skilled artisans in light of certain exemplary embodiments recited in the Detailed Description, wherein:
-
FIG. 1 representatively illustrates a block diagram in accordance with an exemplary embodiment of the present invention; -
FIG. 2 representatively illustrates a web page generated in accordance with an exemplary e-commerce embodiment of the present invention; -
FIG. 3 representatively illustrates a module management interface in accordance with an exemplary e-commerce embodiment of the present invention; -
FIG. 4 representatively depicts a module editing dialog in accordance with an exemplary e-commerce embodiment of the present invention; -
FIG. 5 representatively depicts a first module insertion dialog in accordance with an exemplary e-commerce embodiment of the present invention; -
FIG. 6 representatively depicts a second module insertion dialog in accordance with an exemplary e-commerce embodiment of the present invention; and -
FIG. 7 representatively illustrates a product data editing dialog in accordance with an exemplary e-commerce embodiment of the present invention. - Those skilled in the art will appreciate that components in the Figures are illustrated for simplicity and clarity and have not necessarily been drawn to scale. For example, the dimensions of some of the components in the Figures may be exaggerated relative to other components to help improve understanding of various embodiments of the present invention.
- Furthermore, the terms ‘first’, ‘second’, and the like herein, if any, are generally used for distinguishing between similar components and not necessarily for describing a sequential or chronological order. Moreover, the terms ‘front’, ‘back’, ‘top’, ‘bottom’, ‘over’, ‘under’, and the like, if any, are generally employed for descriptive purposes and not necessarily for comprehensively describing exclusive relative position or order. Skilled artisans will therefore understand that any of the preceding terms so used may be interchanged under appropriate circumstances such that various embodiments of the invention described herein, for example, are capable of operation in other orientations and environments than those explicitly illustrated or otherwise described.
- The following descriptions are of exemplary embodiments of the invention and the inventors' conception of the best mode and are not intended to limit the scope, applicability or configuration of the invention in any way. Rather, the following Description is intended to provide convenient illustrations for implementing various embodiments of the invention. As will become apparent, changes may be made in the function and/or arrangement of any of the components described in the disclosed exemplary embodiments without departing from the spirit and scope of the invention.
- A detailed description of an exemplary application, namely a system and method for the modular design and construction of an e-commerce storefront, is provided as a specific enabling disclosure that may be readily generalized by skilled artisans to any application of the disclosed system and method for the modular generation of any markup language document content.
- As used herein, the terms “production” and “generation”, in addition to any functional or contextual variants thereof (particularly as they may relate to the authoring and/or development of markup language document content), may be understood to mean any aggregated or discrete steps at least partially involving the design, construction, layout, publication, organization, functional implementation, rendering, inclusion of features, and/or the aesthetic definition of at least a portion of markup language content.
- The term “markup language document” may be understood to mean any electronic representation of information that may be at least partially rendered by a suitably adapted application for markup language interpretation, as well as any electronic and/or printed material(s) at least partially derived therefrom.
- In the case where a “document code module” is generated or otherwise produced using the HTML specification, such a code module may be termed a “web code module”, insofar as the primary intended mode of publication may be by operation of a web server. However, wherever the term “document code module” appears, no such limitation on the mode of publication and/or communication should be presumed.
- The exemplary merchandising system representatively illustrated in
FIG. 1 may be configured to allow an average user to design, construct or otherwise produce the content of an e-commerce web site without having to acquire specific knowledge of HTML. The disclosed merchandising system employs a plurality of markup language document code modules (in this case, ‘web code modules’) that may be inserted, removed, hidden, shown, moved, modify or administrated, for example, on a web-based management interface by a user. Each module may be optionally adapted to comprise data components that may be employed to identify information specific to a particular code module. - Exemplary pre-configured modules may be provided by a developer in such a way that with the selection of particular data components such as, for example, product ID and price, a block of HTML code may be generated for publishing a particular product or service offering on a storefront web site. The merchandising system may also be configured to provide a module management interface for moving, editing, showing, hiding, removing, administrating, etc. a web code module at or otherwise effectively near the module's insertion point.
- In the case of multiple storefronts, the merchandising system may be adapted to utilize an inheritance model and/or object property model for objects, such as code modules, classes, variables, and/or the like, such that properties or values may be inherited by or otherwise propagated to other objects. Accordingly, changes made to parent objects may be reflected in daughter objects. Additionally, users may be permitted to modify daughter objects substantially independently or each other in order to add or modify markup content as needed.
- Skilled artisans will appreciate that any method of defining or propagating properties, values, functions, etc., whether now known or hereafter derived or otherwise subsequently described in the art, may be employed to provide a suitable inheritance-type and/or object property model in accordance with various representative embodiments of the present invention to achieve a substantially similar result.
- While an exemplary aspect of the present invention is disclosed as generally embodying an e-commerce HTML-based merchandising system, the present invention may be easily extended to any area of web site or markup language document design or production where it may be necessary to allow average users to customize at least a portion of a markup language document without having to write markup language code. In an exemplary embodiment of the present invention, as generally illustrated in
FIG. 1 for example, clients (45 a, 45 b, 45 c) may represent individual people, entities or businesses equipped with computing devices to access or otherwise facilitate online communications. Clients (45 a, 45 b, 45 c) may comprise any type of computing device, such as, for example, mainframe computers, desktop computers, workstations, terminal stations, laptop computers, handheld computers, personal information managers, smart devices, mobile phones and/or the like. Client computers (45 a, 45 b, 45 c) may be located in a home or business environment with access to anetwork 40. In a representative application, access may be through theInternet 40 using, for example, a commercially-available web-browser application. Although a plurality of client computers (45 a, 45 b, 45 c) is representatively depicted inFIG. 1 , the disclosed exemplary system may be alternatively configured to operate with a substantially unitary client, such as in the case of a kiosk-type of merchandising station or a self-serve point-of-sale (POS) terminal. - Client data connections (42 a, 42 b, 42 c) to
network 40, as well asnetwork data connection 40 itself, may comprise any combination of hardware, software and/or other networking components configured to provide data communication. A variety of conventional communications media and protocols may be used for data paths (42 a, 42 b, 42 c) such as, for example, an Internet Service Provider (ISP) over the local loop, as is typically used in connection with standard modem communication, a cable modem, a Dish network, an ISDN connection, a Digital Subscriber Line (DSL), various wireless communication methods (e.g., 802.11b/g, BlueTooth, etc.) and/or the like. Client computers (45 a, 45 b, 45 c) may also reside within a local area network (LAN) which interfaces tonetwork 40 via a leased line (T1, T3, etc.). Such communication methods are well known in the art, and are covered in a variety of standard texts. See, for example: Gilbert Held, ‘Understanding Data Communications’ (1996). - In an exemplary embodiment, the present invention may be deployed in the context of a client base where ‘N’ (see 45 c) may be quite large. In that case,
network 40 may generally correspond to the Internet. As used herein, the term ‘Internet’ generally refers to a substantially global, packet-switched network utilizing the TCP/IP suite of protocols or any other suitable protocols. Notwithstanding the preceding, the present invention may be implemented in various other network contexts as well, including any future alternatives to the Internet, in addition to other suitable inter-networks or intra-networks based on either open or proprietary protocols. For further information concerning data network communication protocols, standards and applications utilized in connection with the Internet, see, for example: Dilip Naik, ‘Internet Standards and Protocols’ (1998); ‘Java 2 Complete’, various authors, (Sybex 1999); Deborah Ray And Eric Ray, ‘Mastering Html 4.0’ (1997); and Loshin, ‘TCP/IP Clearly Explained’ (1997). -
Database 5 may be configured to store, for example, configuration data, property data, content data, design layout data, formatting data, template data, graphic script data, graphic images, text, navigation data, links, variables, parameters, fields, tables, programming code, script code, code libraries, markup tags, application objects, kinematic data, security data, multimedia data, product data, object selection data, browser data, cookie data, username data, password data, encryption data, and/or any other type of data, whether now known or hereafter described in the art, that may be useful for the generation of at least a portion of a markup language document. In an exemplary embodiment in accordance with the present invention,database 5 may comprise a third party tool, the schema of which may be proprietary to a particular merchant application. -
Database 5 may be any type of database, such as relational, hierarchical, object-oriented, and/or the like. Representative database products that may be used to implementdatabase 5 include DB2 by IBM (White Plains, N.Y.), any of the database products available from ORACLE CORPORATION (Redwood Shores, Calif.), MICROSOFT ACCESS by MICROSOFT CORPORATION (Redmond, Wash.), or any other database product. The database may be organized in any manner, including, for example, data tables, look-up tables, matchable data structures or any other method and/or data structure now known or hereafter derived or otherwise described by those skilled in the art. - Association of certain data may be accomplished through any data association technique known and practiced in the art. For example, the association may be accomplished either manually or automatically. Automatic association techniques may include, for example, a database search, a database merge, GREP, AGREP, SQL, and/or the like. Data association may be accomplished by a database merge function, for example, using a key field to generally partition the database according to a class of objects defined by the key field. For example, a certain class may be designated as a key field in both a first data table and a second data table, and the two data tables may then be merged on the basis of the class data in a key field. In an exemplary embodiment, the data corresponding to a key field in each of the merged data tables may be the same; however, data tables having similar, though not identical, data in key fields may also be merged by using AGREP, for example.
-
Database 5 may be configured to accept access fromdatabase administration client 10 viadata path 9 in order to perform, for example, routine and/or incidental database administration functions.Database administration client 10 may comprise a web-based interface, a proprietary application front end, or any user interface suitably adapted to permit administration ofdatabase 5. In one embodiment,data path 9 may comprise a substantially internal communication path betweendatabase 5 andadministration client application 10 running on acomputer storing database 5. Alternatively,database administration client 10 may connect todatabase 5 remotely through anetwork connection 9 and/or a web server. For example, in a representative and alternative embodiment employing at least one remote database administration client, client computers (45 a, 45 b, 45 c) may be optionally configured to accessweb server 15 via respective data paths (42 a, 42 b, 42 c) connecting through theInternet 40 for subsequent access to and administration ofdatabase 5. -
Web server 15 generally comprises any combination of hardware, software, and/or networking components configured to receive and process HTTP requests from client computers (45 a, 45 b, 45 c) and provides a suitable website or other Internet-based user interface which is accessible by clients (45 a, 45 b, 45 c). In an exemplary embodiment, the Internet Information Server, MICROSOFT Transaction Server, and MICROSOFT SQL Server, may be used in conjunction with the MICROSOFT operating system, MICROSOFT NT web server software, a MICROSOFT SQL database system, and a MICROSOFT Commerce Server. Additionally, components such as Access Sequel Server, Oracle, MySQL, InterBase, and/or the like may be used to provide a compliant database-driven web content management system. - The term ‘webpage’ or ‘web content’, as used herein, is not meant to limit the type of documents and applications that might be used to interact with client users (45 a, 45 b, 45 c). For example, a typical website may include, in addition to standard HTML documents, various forms, Java applets, Javascript, active server pages (ASP), common gateway interface (CGI) scripts, extensible markup language (XML), dynamic HTML, cascading style sheets (CSS), helper applications, plug-ins, etc. or any other web-based content, whether now known, hereafter derived or otherwise described in the art.
- Various representative embodiments of the present invention may be adapted to work with any number of web servers in any permutation of connectivity, such as that of a failover or bandwidth acceleration configuration. Skilled artisans will appreciate that numerous optional variants known in the art may be employed for the provision of web access to clients (45 a, 45 b, 45 c).
-
Security layer 15 a generally controls the availability of functions in the system (seeFIG. 1 ) to a particular user. This may include graphic script creation, product data editing, selection of code modules to use with a particular merchandising page, database administration, web server administration, graphic server administration, and/or the like. For example, functions and features of the merchandising system may be enabled or disabled based on the identity of the user or to give an administrator control over who may modify the web site. As generally depicted,security layer 15 a may be substantially integrated withweb server 15. In various other representative embodiments,security layer 15 a may be alternatively, conjunctively or sequentially configured as a substantially stand-alone component and/or may be optionally integrated with various other client-side or server-side system components. -
Web server 15 may be configured to accept access from webserver administration client 20 viadata path 19 in order to perform, for example, routine and/or incidental web service administration functions. Webserver administration client 20 may comprise a web-based interface, a proprietary application front end, or any user interface suitably adapted to permit administration ofweb server 15. In one embodiment,data path 19 may comprise a substantially internal communication path betweenweb server 15 and web serveradministration client application 20 running on a substantially unitary computer. Alternatively, webserver administration client 20 may connect toweb server 15 remotely through alocal network connection 19 and/or an Internet connection. For example, in a representative and alternative embodiment employing at least one remote web server administration client, client computers (45 a, 45 b, 45 c) may be optionally configured to accessweb server 15 via respective data paths (42 a, 42 b, 42 c) connecting through theInternet 40 for subsequent access to and administration ofweb server 15. - In an exemplary embodiment, in accordance with various representative aspects of the present invention,
graphics server 30 comprises a system component suitably adapted to communicate with a third-party graphics application, such as, for example, ADOBE PHOTOSHOP by ADOBE SYSTEMS (San Jose, Calif.). One of the functions ofgraphic server 30 is to process a script of commands to manipulate graphic images using such a third-party graphics application. The customgraphic engine 25 and the content management system 31 may then be employed to use the resulting graphic image. - Graphics
server administration client 35 is a system component that generally provides an interface for the creation of scripts subsequently used by thegraphic server 30. Graphicsserver administration client 35 allows the creation of scripts used to render a particular graphic, as well as subscripts used by other scripts to render a particular part of a graphic image. In an exemplary embodiment in accordance with the present invention, such scripts and subscripts may be stored indatabase 5. -
Graphics server 30 may be configured to accept access from graphicsserver administration client 35 viadata path 32 in order to perform, for example, routine or incidental graphics server administration functions. Graphicsserver administration client 35 may comprise a web-based interface, a proprietary application front end, or any user interface suitably adapted to permit administration ofgraphics server 30. In one embodiment,data path 32 may comprise a substantially internal communication path betweengraphics server 30 and graphics serveradministration client application 35 running on a substantially unitary computer. Alternatively, graphicsserver administration client 35 may connect tographics server 30 remotely through alocal network connection 32 and/or an Internet connection. For example, in a representative and alternative embodiment employing at least one remote graphics server administration client, client computers (45 a, 45 b, 45 c) may be optionally configured to accessgraphics server 30 via respective data paths (42 a, 42 b, 42 c) connecting through theInternet 40 for subsequent access to and administration ofgraphics server 30. -
Custom graphics engine 25 communicates withgraphics server 30 by operation ofdata path 27. Thecustom graphics engine 25 selects the relevant graphic scripts and merchandising variables to produce a graphics script passed to thegraphic server 30. Once a graphic image has been returned to file server 11,web server 15 receives the post-processed image from file server 11 over data path 12. Content management control layout passes HTML toweb server 15 for subsequent display of the resulting image in the appropriate areas of the web site. Thecustom graphics engine 25 may also be suitably adapted to inform theweb servers 15 and/ordatabase 5 when a graphic image has been updated. - Data connections (7, 19, 27, 32) may comprise any combination of hardware, software and/or other networking components configured to provide communication data paths. A variety of conventional communications media and protocols may be used for data paths (7, 19, 17, 27, 32) such as, for example, an Internet Service Provider (ISP) over the local loop, as is typically used in connection with standard modem communication, a cable modem, a Dish network, an ISDN connection, a Digital Subscriber Line (DSL), various wireless communication methods (e.g., 802.11b/g, BlueTooth, etc.) and/or the like. Device components connected via data paths (7, 19, 17, 27, 32) may also reside within a local area network (LAN) which interfaces to an external network, such as the Internet, via a leased line (T1, T3, etc.). Notwithstanding the preceding, skilled artisans will appreciate that the present invention may be implemented in other network environments as well, including any future alternatives to the Internet, in addition to other suitable inter-networks and/or intra-networks based on other open or proprietary protocols.
- The disclose system and method may also be configured to include additional components, such as a product picker, a content manager 31, a merchandising server 31, and a merchandising interface:
- The product picker component may be configured to use a web-based interface to select various products from a catalog of products stored in
database 5, and may be employed in several applications of the disclosed merchandising system to select a single product or a plurality of products. - The content management component generally allows fields of information in the product catalog to be edited. In addition to conventional editing of product data, this component may also be configured to include a ‘Delta system’ that allows the target product to be edited, as well as copies of the product data to be used for a particular store or user. Using the Delta system, a company with multiple stores or a plurality of user levels can make different product information available while optimizing the total volume of stored data.
- The merchandising server component may be configured to control the editing and display of merchandising modules. In a representative e-commerce embodiment, a module may comprise a block of HTML code and a series of graphic scripts in conjunction with a group of variables that change the look, feel, or data of the web page to be rendered. Modules may be grouped together as a ‘layout’. In one exemplary aspect, each page of a particular e-commerce web site using the merchandising system may have an associated layout. The merchandising server component may also be adapted to allow the selection of an appropriate template for a page in a web site, as well as performing behind-the-scenes updates to
database 5. - The merchandising interface generally provides a front end to the functions performed by the merchandising server. In an exemplary embodiment, the merchandising interface may be written in HTML and usable by clients with a web browser. The merchandising interface allow changes to the layout of web pages, changes to individual modules, and/or modification of a collection of pages comprising a particular web site.
- A
web page 100, generated in accordance with an exemplary e-commerce embodiment of the present invention, is representatively illustrated inFIG. 2 . Web page 100 has components that may include the following: a title 105; a status indicator 110 (‘Merchandising Off’; compare with 210 inFIG. 3 ); a navigation bar 115; a ‘View Cart’ navigation component 115 a; a ‘My Account’ navigation component 115 b; an ‘About Us’ navigation component 115 c; a ‘Help’ navigation component 115 d; a ‘Sign In’ navigation component 115 e; a category bar 120; a ‘Home’ category component 120 a; a ‘Computers’ category component 120 b; an ‘Electronics’ category component 120 c; a ‘Home Office’ category component 120 d; a ‘Movies’ category component 120 e; a ‘CDs & Cassettes’ category component 120 f; a ‘Books’ category component 120 g; a ‘Home & Appliances’ category component 120 h; a ‘Gifts & Jewelry’ category component 120 i; a ‘Sports & Outdoors’ category component 120 j; a ‘Toys & Video Games’ category component 120 k; a ‘Health & Beauty’ category component 120(l); a search/browse bar 125; a search category drop-down list 125 a; a search keyword field 125 b; a search execution control 125 c; an advanced search options link 125 d; a browse category drop-down list 125 e; a browse execution control 125 f; a navigation index 130; sub-category browsing links 135; a category display title 140; an optional category display tag-line 145; a first product/service sub-module 150; a first sub-module expanding link 155; product/service description 160; additional product/service information 165; quick category links 168; bargain links 170; price information 175; a featured products/services pane 180; a featured product/service search category drop-down list 180 a; a featured product/service search keyword field 180 b; a featured product/service search execution control 180 c; a featured product/service advanced search options link 180 d; a featured product/service searching tips link 180 e; a featured items purchase index 185; a featured products/services category links 190; and a second product/service sub-module 195. Skilled artisans will appreciate thatweb page 100 may also include various other components known in the art of web content production that may not be explicitly illustrated herein. -
Title 105 may provide general information identifying the area of the web site being accessed.Status indicator 110, when reading for example ‘Merchandising Off’, may indicate to the user that they are accessingweb page 100 in a mode adapted for the purchasing of products and/or services.Navigation bar 115 may provide tools to provide the user with information concerning their purchases, their account, or the online store.Category bar 120 may facilitate the categorization of goods and services offered by the merchant for purchase onweb page 100. Where goods and services may not be readily found usingcategory bar 120, a search/browse tool 125 may be provided for entry of keyword(s) 125 b to target a search within the site's offerings.Navigation index 130 generally displays the user's current category location in the product/service catalog.Category title 140, optional category tagline 145 and sub-category browsing links 135 may also be provided to aid the user in their search to find good or services of interest. - Product/service sub-module 150 may include a
link 155 to provide additional information concerning the identified product and/or service in addition to a description 160 of the offering, variousadditional information 165 for the offering,quick category links 168,bargain links 170, and/orprice information 175. Featured products and/or services may appear in a featuredpane 180 that may further include, for example, a search category drop-downlist 180 a, asearch keyword field 180 b, asearch execution button 180 c, an advanced options link 180 d, a searching tips link 180 e, a purchase index 185 (e.g., to display the number of items, total cost, etc.), and category links 190. - In accordance with an exemplary aspect of the present invention,
FIG. 3 representatively depicts a module management interface that may be adapted to produce, for example, theweb page 100 generally illustrated inFIG. 2 .Module management interface 200 may be accessed via Internet Explorer, Netscape, Opera, Safari and/or any other web browser application, whether now known or hereafter described in the art. Management interface 200 representatively includes, for example: a title 205; a status indicator 210 (‘Merchandising On’; compare with 110 inFIG. 2 ); a navigation bar 215; a category bar 220; a search/browse bar 225; navigation index 230; a web code module control and selection bar 232 for sub-category browsing links module; sub-category browsing links module content 235; category display module title content 240; a remove module control/selection component 242 for category title module; a hide module control/selection component 244 for category title module; an optional category display tag-line 245; an edit module control/selection component 246 for category title module; a module class identifier 248; a first product/service module 250; a remove module control/selection component 252; a hide module control/selection component 254; an edit module control/selection component 256; a module class identifier 258; a product and/or service descriptor 260; module location control components 262; a module location control component 262 a for moving current module up; a module location control component 262 b for moving current module down; additional product/service information 265; an insert module control/selection component 266 for introducing a new module; bargain links module content 270; price information module content 275; a featured products and/or services module 280; module location control components 282 for a second module; module location control component 282 a for moving second module up; module location control component 282 b for moving second module down; featured items purchased index module 285; featured products and/or services category links module 290; a show module control/selection component 292 for featured products/services category links module (currently hidden); a show module control/selection component 294 for second module (currently hidden; see 296); a module status identifier 296 (e.g., ‘Hidden’, ‘Locked’, ‘Displayed’, etc.); and/or the like. - Module control and
selection bar 232, in this case for the sub-category browsing links 235 module, includes control/selection components for removing, hiding, editing and movingmodule 235. Various other modules having similar control/selection components appear throughout various portions ofFIG. 3 . For example, remove module control/selection component 242 may be used to deletetitle text 240 and title tagline 245 from theweb page 100 being designed inmodule management interface 200, and subsequently, from final rendering onweb page 100. However, hide module control/selection component 244 may be used to obscure the same content (240, 245) from final rendering ofweb page 100, while preserving the hidden module content in the design view ofmodule management interface 200. If a module has been previously hidden by operation of a hide module selection, the same module may be later displayed in the rendering of the final web page by operation of a show module control/selection component (294, 292). - A module class identifier 248 (e.g., ‘standard’, ‘custom’, etc.) may also appear in the design view to indicate the source, status, function or other information concerning the particular module of interest. Where a module is obscured from final rendering for example, a status indication of ‘Hidden’ 296 may appear. Module
location control components 262 may be used to alter the position of a module's appearance in the final rendered page. For example,control component 262 a may be used to move the corresponding module up above the immediately preceding module, orcontrol component 262 b may be used to move the module down below the immediately following module. Alternatively, conjunctively or sequentially,module management interface 200 may be optionally adapted to allow the user to click on a module and drag it to a location of the user's choosing. - After accessing the edit
module control component 256, anmodule editing window 300, as representatively illustrated for example inFIG. 4 , may be presented to the user. In an exemplary embodiment in accordance with a representative aspect of the present invention,editing dialog 300 may comprise two tabbed panes: aproperty tab 305 and apreview tab 310.Preview tab 310 generally permits the user to view a pre-rendered version of proposed and/or selected changes to the module substantially prior to pushing any changes to the design view ofmodule management interface 200. Dialog window 300 may also include: a color style property drop-down list 315 for selection of a color scheme; a header style property drop-down list 320 for selection of header text font formatting; a header text entry field 325 for entry of text to be display in the module's header; a header text alignment drop-down list 330 for selection of header text alignment formatting; a main text alignment drop-down list 335 for selection of main text alignment formatting; a sub-header text entry field 340 for entry of text to be displayed in the modules sub-header; a sub-header text alignment drop-down list 345 for selection of sub-header text alignment formatting; a main product identification text entry field 350 for entry of main product identification information; a main product identification lookup button 352 to access a tool to look-up unknown main product identification information; a product #2 identification text entry field 355 for entry of main product identification information; a product #2 identification lookup button 357 to access a tool to look-up unknown product #2 identification information; a product #3 identification text entry field 360 for entry of product #3 identification information; a product #3 identification lookup button 362 to access a tool to look-up unknown product #3 identification information; a product #4 identification text entry field 365 for entry of product #4 identification information; a product #4 identification lookup button 367 to access a tool to look-up unknown product #4 identification information; a product #5 identification text entry field 370 for entry of product #5 identification information; a product #5 identification lookup button 372 to access a tool to look-up unknown product #5 identification information; a module layout name text entry field 375 to define or access predefined module layouts; a hidden (yes/no) drop-down list 380 to select whether the generated module is to be hidden or shown; a module advanced properties link 385 to access and or edit the modules advanced properties. Furthermore, editdialog 300properties pane 305 may also include amerchandising statistics panel 390 comprising: amerchandising statistics title 390 a that may or may not indicate the date of the most recent updates to the module's statistical information; the number ofpage views 390 b that have occurred; the number ofclicks 390 c in module that have occurred; the product distribution 390 d for a particular product (e.g., ID 231122); theproduct distribution 390 e for another product (e.g., ID 2322); a merchandising statistics reset link 390 f to restart the accumulation of statistical data. Additionally, theedit module dialog 300 may be further configured with an acceptchanges button 395 to implement the changes made in the edit module dialog window for inclusion in the design view ofmodule management interface 200 and/or a cancel changesbutton 397 to abandon the proposed changes made in themodule dialog 300 and to return to the design view ofmodule management interface 200. Skilled artisans will appreciate that the preview area need not be limited to a panel or frame as representatively depicted in the Figures. Preview area may also comprise a pop-up window, a dialog box, a tabbed pane, and/or the like. - A module insertion control/
selection component 266 may be provided to introduce a new module at a specified point within the web code document displayed inmanagement interface 200.FIG. 5 illustrates a representative moduleinsertion dialog window 400 in accordance with an exemplary embodiment of the present invention. For example,insertion dialog 400 may comprise two tabbed panes: apre-defined module tab 405 and acustom module tab 410.Pre-defined tab 405 may be used for selecting substantially pre-defined web code module components for addition to a web page at the selected insertion point. Alternatively, conjunctively or sequentially,custom tab 410 may be used for selecting template web code module components that may be customized by the user. -
Pre-defined tab 405 may be configured with a web code module drop-downlist 415 for selection of a substantially pre-defined module. As a particular module is selected, apreview area 420 may be provided to permit the user to see an at least partially rendered version of the module prior to insertion in the web code document of interest. Skilled artisans will appreciate that such apreview area 420 need not be limited to a panel or frame as representatively depicted inFIG. 5 . Preview area may also comprise a pop-up window, a dialog box, a tabbed pane, and/or the like. - Additionally, the
insertion module dialog 400 may be further configured with an acceptchanges button 425 to implement the changes made in the insertion module dialog window for inclusion in the design view ofmodule management interface 200 and/or a cancel changesbutton 430 to abandon the proposed changes made in themodule dialog 400 and to return to the design view ofmodule management interface 200. -
FIG. 6 illustrates a representative moduleinsertion dialog window 500 in accordance with another exemplary embodiment of the present invention. For example,insertion dialog 500 may comprise two tabbed panes: apre-defined module tab 505 and acustom module tab 510.Pre-defined tab 505 may be used for selecting substantially pre-defined web code module components for addition to a web page at the selected insertion point. Alternatively, conjunctively or sequentially,custom tab 510 may be used for selecting template web code module components that may be used for selecting substantially user-defined code module components for addition to a web page at the selected insertion point. -
Custom tab 510 may be configured with a web code module drop-downlist 515 for selection of a template or custom module. As a particular module is selected, apreview area 520 may be provided to permit the user to see an at least partially rendered version of the custom module prior to insertion in the web code document of interest. Skilled artisans will again appreciate that such apreview area 520 need not be limited to a panel or frame as representatively depicted inFIG. 6 . Preview area may also comprise a pop-up window, a dialog box, a tabbed pane, and/or the like. - Additionally, the
module insertion dialog 500 may be further configured with an acceptchanges button 525 to implement the changes made in the module insertion dialog window for inclusion in the design view ofmodule management interface 200 and/or a cancel changesbutton 530 to abandon the proposed changes made in themodule dialog 500 and to return to the design view ofmodule management interface 200. - In addition to the above identified types of modules, skilled artisans will appreciate that various other types of modules may also be used. For example, modules may be configured in a nested relationship with one another or may themselves comprise a plurality of sub-module components. In the case where a module is intended to serve as a place-holder for example, the module may be invisible, hidden or otherwise obscured from final rendering. Alternatively, conjunctively, and/or sequentially, a module may contain data that may be useful or otherwise accessible to other modules. In this case, such a module may be configured as a dummy module.
-
FIG. 7 representatively depicts a productdata editing dialog 600 in accordance with an exemplary embodiment of the present invention. Product editing dialog 600 (here for Product No. 1188422) may be configured to comprise a plurality of tabs for various functions that may be applied to alter product data contained indatabase 5. Such grouping of functions may include inter alia: an overview data tab 605 for the entry of general product information; amerchandising data tab 610 for the entry of product merchandising information; a productspecification data tab 615 for the entry of product specification data; an images/links data tab 620 for the entry of product images and/or links; anotes data tab 625 for the entry of product notes or miscellaneous information; and/or the like. - General Information tab 605, representatively identified by label 630, may further comprise: a product name text entry field 635 for identification of the product data being edited; a summary information text entry field 640 for the entry of product summary information; a product description text entry field 645 for the entry of more detailed product description information; a product status drop-down list 650 to select the current status of the particular product/service of interest; a product condition drop-down list 655 to indicate the condition of the product offering; a miscellaneous product information checkbox selections 660 for standard categorization of product information; a product UOM Code text entry field 665; a product weight text entry field 670 to indicate the weight of the product offering; a product dimensions text entry fields 675 to indicate the physical dimensions of the product offering; a product pricing section 680 to provide a grouping of data fields relating to the price of the product offering; a product cost text entry field 682 indicating the merchant's cost for the product offering; a product minimum price text entry field 685 indicating the lowest price that the merchant is willing to accept for sale of the product offering; product price data 687 indicating, for example, the current price of the product offering; product commission data 689 indicating, for example, the current sales commission being offered for the product of interest; a date to start selling product drop-down lists 690 indicating when the product is intended to be offered for sale; a product tax status checkbox 692 indicating if the sale of the product constitutes a taxable transaction; a checkbox to select whether to display the Manufacturer's Suggested Retail Price (MSRP) information 694, MSRP data text entry field 695 indicating the current MSRP value; a product maximum price text entry field 696 indicating the maximum price for sale of the product offering; a first ‘change to’ text entry field and drop-down list 697 indicating changes to the product commission; a second ‘change to’ text entry field and drop-down list 698 indicating changes to the product price; a date to stop selling product drop-down lists 699 indicating the date after which the product will no longer be offered for sale; and/or the like.
- Additionally, the
product editing dialog 600 may be further configured with an acceptchanges button 672 to implement the changes made to the product data for modification indatabase 5 and/or a cancel changesbutton 674 to abandon the proposed changes made in the product data and, in one exemplary and representative embodiment of the present invention, to return to the design view ofmodule management interface 200. - Skilled artisans will appreciate that the data connection configurations depicted in the figures are provide for representative and convenient illustration and that many other data connection configurations may be alternatively, conjunctively and/or sequentially employed to produce substantially the same result. The present invention may be described herein in terms of functional block components, screen shots, optional selections and various processing steps. It should be appreciated that such functional blocks may be realized by any number of hardware and/or software components configured to perform the specified functions. For example, the present invention may employ various integrated circuit components, e.g., memory components, processing components, logic components, data structures, and/or the like, which may carry out a variety of functions under the control of one or more microprocessors or other control devices. Similarly, the software components of the present invention may be implemented with any programming or scripting language such as, for example, C, C++, Java, COBOL, assembler, PERL, extensible Markup Language (XML), etc., and/or any programming or scripting language now known or hereafter derived or otherwise described in the art, with the various algorithms being implemented with any combination of data structures, objects, processes, routines or other programming components. Furthermore, it should be noted that the present invention may employ any number of conventional techniques for data transmission, signaling, data processing, network control, and the like. Still further, the invention could be used to detect or prevent security issues with a client-side scripting language, such as JavaScript, VBScript or the like. For a basic introduction to cryptography and digital security, please see the text by Bruce Schneider entitled “Applied Cryptography: Protocols, Algorithms, and Source Code In C,” published by John Wiley & Sons (second edition, 1996).
- It should be appreciated that the particular implementations shown and described herein are representative of the invention and its best mode and are not intended to otherwise limit the scope of the present invention in any way. Indeed, for the sake of brevity, conventional data networking, application development and other functional aspects of the systems (and components of the individual operating components of the systems) may not be described in detail herein. Furthermore, the connecting lines shown in the various figures contained herein are intended to represent exemplary functional relationships and/or physical couplings between various components. It should be noted that many alternative or additional functional relationships or physical connections may be present in a practical system.
- It will be appreciated, that many applications of the present invention could be formulated. One skilled in the art will appreciate that the network may include any system for exchanging data, such as, for example, the Internet, an intranet, an extranet, WAN, LAN, wireless network, satellite communications, and/or the like. It is noted that the network may be implemented as other types of networks, such as an interactive television (ITV) network. The users may interact with the system via any input device such as a keyboard, mouse, kiosk, personal digital assistant, handheld computer (e.g., PALM PILOT, POCKET PC), cellular phone and/or the like. Similarly, the invention could be used in conjunction with any type of personal computer, network computer, workstation, minicomputer, mainframe, and/or the like running any operating system such as any version of Windows, Windows XP, Windows ME, Windows NT, Windows2000, Windows 98, Windows 95, MacOS, OS/2, BeOS, Linux, UNIX, or any operating system now known or hereafter derived by those skilled in the art. Additionally, the invention may be readily implemented with TCP/IP communications protocols, IPX, Appletalk, IP-6, NetBIOS or any number of existing or future standards or protocols. Moreover, the system contemplates the use, sale and/or distribution of any goods, services or information having similar functionality described herein.
- The computing units may be connected with each other via a data communication network. The network may be a public network and assumed to be insecure and open to eavesdroppers. In one exemplary implementation, the network may be embodied as the Internet. In this context, the computers may or may not be connected to the Internet at all times.
- A variety of conventional communications media and protocols may be used for data links, such as, for example, a connection to an Internet Service Provider (ISP) over the local loop, as is typically used in connection with standard modem communication, cable modem, Dish networks, ISDN, Digital Subscriber Line (DSL), or various wireless communication methods. Systems in accordance with the present invention might also reside within a local area network (LAN) which interfaces to a network via a leased line (T1, T3, etc.). Such communication methods are generally well known in the art, and are covered in a variety of standard texts.
- As will be appreciated by skilled artisans, the present invention may be embodied as a method, a system, a device, and/or a computer program product. Accordingly, the present invention may take the form of an entirely software embodiment, an entirely hardware embodiment, or an embodiment combining aspects of both software and hardware. Furthermore, the present invention may take the form of a computer program product on a computer-readable storage medium having computer-readable program code embodied in the storage medium. Any suitable computer-readable storage medium may be utilized, including hard disks, CD-ROM, optical storage devices, magnetic storage devices, and/or the like.
- Data communication may be accomplished through any suitable communication means, such as, for example, a telephone network, Intranet, Internet, point of interaction device (POS device, personal digital assistant, cellular phone, kiosk, etc.), online communications, off-line communications, wireless communications, and/or the like. One skilled in the art will also appreciate that any databases, systems, or components of the present invention may consist of any combination of databases or components at a single location or at multiple locations, wherein each database or system optionally includes any of various suitable security features, such as firewalls, access codes, encryption, de-encryption, compression, decompression, and/or the like.
- The present invention is described herein with reference to screen shots, block diagrams, devices (e.g., systems), and computer program products according to various aspects of the invention. It will be understood that each functional block of the block diagrams, and combinations of functional blocks in the block diagrams, can be implemented by computer program instructions. These computer program instructions may be loaded onto a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions which execute on the computer or other programmable data processing apparatus create means for implementing the functions specified in the block diagrams.
- These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function specified in the block diagrams. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the block diagrams.
- Accordingly, the block diagram illustrations support combinations of means for performing the specified functions, combinations of steps for performing the specified functions, and program instruction means for performing the specified functions. It will also be understood that each functional block of the block diagrams and flowchart illustrations, and combinations of functional blocks in the block diagrams, can be implemented by either special purpose hardware-based computer systems which perform the specified functions or steps, or suitable combinations of special purpose hardware and computer instructions.
- In the foregoing specification, the invention has been described with reference to specific exemplary embodiments; however, it will be appreciated that various modifications and changes may be made without departing from the scope of the present invention as set forth in the claims below. The specification and figures are to be regarded in an illustrative manner, rather than a restrictive one and all such modifications are intended to be included within the scope of the present invention. Accordingly, the scope of the invention should be determined by the claims appended hereto and their legal equivalents rather than by merely the examples described above. For example, the steps recited in any method or process claims may be executed in any order and are not limited to the specific order presented in the claims. Additionally, the components and/or components recited in any system claims may be assembled or otherwise operationally configured in a variety of permutations to produce substantially the same result as the present invention and are accordingly not limited to the specific configuration recited in the claims.
- Benefits, other advantages and solutions to problems have been described above with regard to particular embodiments; however, any benefit, advantage, solution to problems or any component that may cause any particular benefit, advantage or solution to occur or to become more pronounced are not to be construed as critical, required or essential features or components of any or all the claims.
- As used herein, the terms ‘comprises’, ‘comprising’, or any variation thereof, are intended to reference a non-exclusive inclusion, such that a process, method, article, composition or apparatus that comprises a list of components does not include only those components recited, but may also include other components not expressly listed or inherent to such process, method, article, composition or apparatus. Other combinations and/or modifications of the above-described structures, arrangements, applications, proportions, components, materials or components used in the practice of the present invention, in addition to those not specifically recited, may be varied or otherwise particularly adapted by those skilled in the art to specific environments, manufacturing specifications, design parameters or other operating requirements without departing from the general principles of the same.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/979,602 US20060095835A1 (en) | 2004-11-01 | 2004-11-01 | System and method for the modular generation of markup language |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/979,602 US20060095835A1 (en) | 2004-11-01 | 2004-11-01 | System and method for the modular generation of markup language |
Publications (1)
Publication Number | Publication Date |
---|---|
US20060095835A1 true US20060095835A1 (en) | 2006-05-04 |
Family
ID=36263588
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/979,602 Abandoned US20060095835A1 (en) | 2004-11-01 | 2004-11-01 | System and method for the modular generation of markup language |
Country Status (1)
Country | Link |
---|---|
US (1) | US20060095835A1 (en) |
Cited By (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040004636A1 (en) * | 2002-07-08 | 2004-01-08 | Asm International Nv | Method for the automatic generation of an interactive electronic equipment documentation package |
US20050197852A1 (en) * | 2004-03-05 | 2005-09-08 | Gerhard Gebhard | Maintaining individual object data |
US20070162352A1 (en) * | 2006-01-06 | 2007-07-12 | Vikramaditya Jain | Dynamically Fabricated Store for Distribution of Media Content |
US20070288864A1 (en) * | 2006-06-13 | 2007-12-13 | Mlb Advanced Media, L.P. | Prioritized presentation of content |
US20080010341A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Processing model of an application wiki |
US20080010590A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Method for programmatically hiding and displaying Wiki page layout sections |
US20080010609A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Method for extending the capabilities of a Wiki environment |
US20080010615A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Generic frequency weighted visualization component |
US20080010249A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Relevant term extraction and classification for Wiki content |
US20080244509A1 (en) * | 2007-03-29 | 2008-10-02 | Francois Buchs | Method and apparatus for application enabling of websites |
US20090006433A1 (en) * | 2007-06-29 | 2009-01-01 | Microsoft Corporation | Extensible category and property grouping for object editing |
US20090037828A1 (en) * | 2007-07-19 | 2009-02-05 | Salesforce. Com, Inc. | System, method and computer program product for editing an on-demand database service graphical user interface |
US20090043755A1 (en) * | 2007-08-09 | 2009-02-12 | Andrew Boath Faris | Systems and methods for dynamic page creation |
US20100192140A1 (en) * | 2009-01-27 | 2010-07-29 | International Business Machines Corporation | Method for presenting candidate for link target to component in web application, as well as computer program and computer system for the same |
US20120084696A1 (en) * | 2010-09-30 | 2012-04-05 | Honeywell International Inc. | User interface list control system |
US20120131439A1 (en) * | 2010-11-22 | 2012-05-24 | Unisys Corp. | Scripted dynamic document generation |
US20130055118A1 (en) * | 2011-08-29 | 2013-02-28 | Salesforce.Com, Inc. | Configuring database objects in multi-tenant systems |
US20130198032A1 (en) * | 2012-01-27 | 2013-08-01 | Market America, Inc. | Method and Apparatus for Providing Embedded Transaction Modules |
US8726147B1 (en) * | 2010-03-12 | 2014-05-13 | Symantec Corporation | Systems and methods for restoring web parts in content management systems |
US20140208294A1 (en) * | 2013-01-18 | 2014-07-24 | Unisys Corporation | Domain scripting language framework for service and system integration |
US9223839B2 (en) | 2012-02-22 | 2015-12-29 | Honeywell International Inc. | Supervisor history view wizard |
US9529349B2 (en) | 2012-10-22 | 2016-12-27 | Honeywell International Inc. | Supervisor user management system |
US9547926B2 (en) | 2009-04-24 | 2017-01-17 | International Business Machines Corporation | Displaying nodes visually offset from associated components |
US9852387B2 (en) | 2008-10-28 | 2017-12-26 | Honeywell International Inc. | Building management system site categories |
US9921855B2 (en) | 2014-07-18 | 2018-03-20 | JM Consulting | Systems and methods for generating an interactive user interface from a database |
US9933762B2 (en) | 2014-07-09 | 2018-04-03 | Honeywell International Inc. | Multisite version and upgrade management system |
US9971977B2 (en) | 2013-10-21 | 2018-05-15 | Honeywell International Inc. | Opus enterprise report system |
US10169475B2 (en) * | 2005-11-17 | 2019-01-01 | International Business Machines Corporation | Pattern for navigating content in a portal |
US10209689B2 (en) | 2015-09-23 | 2019-02-19 | Honeywell International Inc. | Supervisor history service import manager |
US10310699B1 (en) * | 2014-12-08 | 2019-06-04 | Amazon Technologies, Inc. | Dynamic modification of browser and content presentation |
US10417314B2 (en) * | 2012-06-14 | 2019-09-17 | Open Text Sa Ulc | Systems and methods of a script generation engine |
US10951696B2 (en) | 2015-09-23 | 2021-03-16 | Honeywell International Inc. | Data manager |
KR20210133640A (en) * | 2020-04-29 | 2021-11-08 | 주식회사 쓰리케이소프트 | The method of securitying XML web document |
US11341313B2 (en) | 2017-12-07 | 2022-05-24 | Paypal, Inc. | Dynamic web content based on contextual profile |
US20230401202A1 (en) * | 2022-06-13 | 2023-12-14 | Microsoft Technology Licensing, Llc | Graphic search bar with responsive results |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5845299A (en) * | 1996-07-29 | 1998-12-01 | Rae Technology Llc | Draw-based editor for web pages |
US5870552A (en) * | 1995-03-28 | 1999-02-09 | America Online, Inc. | Method and apparatus for publishing hypermedia documents over wide area networks |
US6493733B1 (en) * | 2000-06-23 | 2002-12-10 | Microsoft Corporation | Method for inserting interactive HTML objects into an electronic file |
US20030204810A1 (en) * | 2002-04-24 | 2003-10-30 | Xi-Nam Dam | Real time webpage editing system and method with auxiliary pattern |
US6990629B1 (en) * | 1999-07-27 | 2006-01-24 | Schlumberger Technology Corporation | Publishing system for intranet |
US7047318B1 (en) * | 2001-04-20 | 2006-05-16 | Softface, Inc. | Method and apparatus for creating and deploying web sites with dynamic content |
US7085736B2 (en) * | 2001-02-27 | 2006-08-01 | Alexa Internet | Rules-based identification of items represented on web pages |
US7155670B2 (en) * | 2002-01-18 | 2006-12-26 | Internet Disclosure Co., Ltd. | Document authoring system and authoring management program |
US7340673B2 (en) * | 2002-08-29 | 2008-03-04 | Vistaprint Technologies Limited | System and method for browser document editing |
-
2004
- 2004-11-01 US US10/979,602 patent/US20060095835A1/en not_active Abandoned
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5870552A (en) * | 1995-03-28 | 1999-02-09 | America Online, Inc. | Method and apparatus for publishing hypermedia documents over wide area networks |
US5845299A (en) * | 1996-07-29 | 1998-12-01 | Rae Technology Llc | Draw-based editor for web pages |
US6990629B1 (en) * | 1999-07-27 | 2006-01-24 | Schlumberger Technology Corporation | Publishing system for intranet |
US6493733B1 (en) * | 2000-06-23 | 2002-12-10 | Microsoft Corporation | Method for inserting interactive HTML objects into an electronic file |
US7085736B2 (en) * | 2001-02-27 | 2006-08-01 | Alexa Internet | Rules-based identification of items represented on web pages |
US7047318B1 (en) * | 2001-04-20 | 2006-05-16 | Softface, Inc. | Method and apparatus for creating and deploying web sites with dynamic content |
US7155670B2 (en) * | 2002-01-18 | 2006-12-26 | Internet Disclosure Co., Ltd. | Document authoring system and authoring management program |
US20030204810A1 (en) * | 2002-04-24 | 2003-10-30 | Xi-Nam Dam | Real time webpage editing system and method with auxiliary pattern |
US7340673B2 (en) * | 2002-08-29 | 2008-03-04 | Vistaprint Technologies Limited | System and method for browser document editing |
Cited By (73)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7356762B2 (en) | 2002-07-08 | 2008-04-08 | Asm International Nv | Method for the automatic generation of an interactive electronic equipment documentation package |
US20040004636A1 (en) * | 2002-07-08 | 2004-01-08 | Asm International Nv | Method for the automatic generation of an interactive electronic equipment documentation package |
US20050197852A1 (en) * | 2004-03-05 | 2005-09-08 | Gerhard Gebhard | Maintaining individual object data |
US7900151B2 (en) * | 2004-03-05 | 2011-03-01 | Sap Ag | Maintaining individual object data |
US10169475B2 (en) * | 2005-11-17 | 2019-01-01 | International Business Machines Corporation | Pattern for navigating content in a portal |
US7668755B2 (en) | 2006-01-06 | 2010-02-23 | Mira Exim Limited | Dynamically fabricated store for distribution of media content |
US20070250598A1 (en) * | 2006-01-06 | 2007-10-25 | Mpo Corporation | Dynamically fabricated store for distribution of media content |
US20070162352A1 (en) * | 2006-01-06 | 2007-07-12 | Vikramaditya Jain | Dynamically Fabricated Store for Distribution of Media Content |
US20070162351A1 (en) * | 2006-01-06 | 2007-07-12 | Mpo Corporation | Dynamically Fabricated Store for Distribution of Media Content |
US20070162391A1 (en) * | 2006-01-06 | 2007-07-12 | Vikramaditya Jain | Dynamically fabricated store for distribution of media content |
US7447649B2 (en) | 2006-01-06 | 2008-11-04 | Musicane Corporation | System, method, and computer readable medium for implementing a media content store |
US20100169826A1 (en) * | 2006-06-13 | 2010-07-01 | Mlb Advanced Media, L.P. | Prioritized presentation of content |
US8566742B2 (en) | 2006-06-13 | 2013-10-22 | Mlb Advanced Media, L.P. | Prioritized presentation of content |
US20070288864A1 (en) * | 2006-06-13 | 2007-12-13 | Mlb Advanced Media, L.P. | Prioritized presentation of content |
US7681144B2 (en) * | 2006-06-13 | 2010-03-16 | Mlb Advanced Media, L.P. | Prioritized presentation of content |
US8196039B2 (en) | 2006-07-07 | 2012-06-05 | International Business Machines Corporation | Relevant term extraction and classification for Wiki content |
US20080010609A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Method for extending the capabilities of a Wiki environment |
US20080010249A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Relevant term extraction and classification for Wiki content |
US20080010615A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Generic frequency weighted visualization component |
US8560956B2 (en) | 2006-07-07 | 2013-10-15 | International Business Machines Corporation | Processing model of an application wiki |
US8775930B2 (en) | 2006-07-07 | 2014-07-08 | International Business Machines Corporation | Generic frequency weighted visualization component |
US20080010590A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Method for programmatically hiding and displaying Wiki page layout sections |
US20080010341A1 (en) * | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Processing model of an application wiki |
US8219900B2 (en) | 2006-07-07 | 2012-07-10 | International Business Machines Corporation | Programmatically hiding and displaying Wiki page layout sections |
US20080244509A1 (en) * | 2007-03-29 | 2008-10-02 | Francois Buchs | Method and apparatus for application enabling of websites |
US8499237B2 (en) * | 2007-03-29 | 2013-07-30 | Hiconversion, Inc. | Method and apparatus for application enabling of websites |
US20090006433A1 (en) * | 2007-06-29 | 2009-01-01 | Microsoft Corporation | Extensible category and property grouping for object editing |
US20090037828A1 (en) * | 2007-07-19 | 2009-02-05 | Salesforce. Com, Inc. | System, method and computer program product for editing an on-demand database service graphical user interface |
EP2171579A4 (en) * | 2007-07-19 | 2011-03-16 | Salesforce Com Inc | System, method and computer program product for editing an on-demand database service graphical user interface |
US8549417B2 (en) * | 2007-07-19 | 2013-10-01 | Salesforce.Com, Inc. | System, method and computer program product for editing an on-demand database service graphical user interface |
EP2171579A1 (en) * | 2007-07-19 | 2010-04-07 | Salesforce.Com, Inc. | System, method and computer program product for editing an on-demand database service graphical user interface |
US9367639B2 (en) * | 2007-08-09 | 2016-06-14 | Yahoo! Inc. | Systems and methods for dynamic page creation |
US20090043755A1 (en) * | 2007-08-09 | 2009-02-12 | Andrew Boath Faris | Systems and methods for dynamic page creation |
US9852387B2 (en) | 2008-10-28 | 2017-12-26 | Honeywell International Inc. | Building management system site categories |
US10565532B2 (en) | 2008-10-28 | 2020-02-18 | Honeywell International Inc. | Building management system site categories |
US8578328B2 (en) * | 2009-01-27 | 2013-11-05 | International Business Machines Corporation | Method for presenting candidate for link target to component in web application, as well as computer program and computer system for the same |
US20100192140A1 (en) * | 2009-01-27 | 2010-07-29 | International Business Machines Corporation | Method for presenting candidate for link target to component in web application, as well as computer program and computer system for the same |
US11073966B2 (en) | 2009-04-24 | 2021-07-27 | International Business Machines Corporation | Displaying nodes visually offset from associated components |
US10268346B2 (en) | 2009-04-24 | 2019-04-23 | International Business Machines Corporation | Displaying nodes visually offset from associated components |
US10534501B2 (en) | 2009-04-24 | 2020-01-14 | International Business Machines Corporation | Displaying nodes visually offset from associated components |
US9547926B2 (en) | 2009-04-24 | 2017-01-17 | International Business Machines Corporation | Displaying nodes visually offset from associated components |
US10503369B2 (en) | 2009-04-24 | 2019-12-10 | International Business Machines Corporation | Displaying nodes visually offset from associated components |
US8726147B1 (en) * | 2010-03-12 | 2014-05-13 | Symantec Corporation | Systems and methods for restoring web parts in content management systems |
US20120084696A1 (en) * | 2010-09-30 | 2012-04-05 | Honeywell International Inc. | User interface list control system |
US8850347B2 (en) * | 2010-09-30 | 2014-09-30 | Honeywell International Inc. | User interface list control system |
US9262185B2 (en) * | 2010-11-22 | 2016-02-16 | Unisys Corporation | Scripted dynamic document generation using dynamic document template scripts |
US20120131439A1 (en) * | 2010-11-22 | 2012-05-24 | Unisys Corp. | Scripted dynamic document generation |
US20130055118A1 (en) * | 2011-08-29 | 2013-02-28 | Salesforce.Com, Inc. | Configuring database objects in multi-tenant systems |
US20130198032A1 (en) * | 2012-01-27 | 2013-08-01 | Market America, Inc. | Method and Apparatus for Providing Embedded Transaction Modules |
US9626702B2 (en) * | 2012-01-27 | 2017-04-18 | Market America, Inc. | Method and apparatus for providing embedded transaction modules |
US9223839B2 (en) | 2012-02-22 | 2015-12-29 | Honeywell International Inc. | Supervisor history view wizard |
US11741293B2 (en) * | 2012-06-14 | 2023-08-29 | Open Text Sa Ulc | Systems and methods of a script generation engine |
US20220114329A1 (en) * | 2012-06-14 | 2022-04-14 | Open Text Sa Ulc | Systems and methods of a script generation engine |
US10417314B2 (en) * | 2012-06-14 | 2019-09-17 | Open Text Sa Ulc | Systems and methods of a script generation engine |
US11227097B2 (en) * | 2012-06-14 | 2022-01-18 | Open Text Sa Ulc | Systems and methods of a script generation engine |
US10289086B2 (en) | 2012-10-22 | 2019-05-14 | Honeywell International Inc. | Supervisor user management system |
US9529349B2 (en) | 2012-10-22 | 2016-12-27 | Honeywell International Inc. | Supervisor user management system |
US20140208294A1 (en) * | 2013-01-18 | 2014-07-24 | Unisys Corporation | Domain scripting language framework for service and system integration |
US9384020B2 (en) * | 2013-01-18 | 2016-07-05 | Unisys Corporation | Domain scripting language framework for service and system integration |
US9971977B2 (en) | 2013-10-21 | 2018-05-15 | Honeywell International Inc. | Opus enterprise report system |
US9933762B2 (en) | 2014-07-09 | 2018-04-03 | Honeywell International Inc. | Multisite version and upgrade management system |
US10338550B2 (en) | 2014-07-09 | 2019-07-02 | Honeywell International Inc. | Multisite version and upgrade management system |
US10635458B2 (en) | 2014-07-18 | 2020-04-28 | JM Consulting | Systems and methods for generating a self-updating maintenance page |
US9921855B2 (en) | 2014-07-18 | 2018-03-20 | JM Consulting | Systems and methods for generating an interactive user interface from a database |
US10310699B1 (en) * | 2014-12-08 | 2019-06-04 | Amazon Technologies, Inc. | Dynamic modification of browser and content presentation |
US10951696B2 (en) | 2015-09-23 | 2021-03-16 | Honeywell International Inc. | Data manager |
US10209689B2 (en) | 2015-09-23 | 2019-02-19 | Honeywell International Inc. | Supervisor history service import manager |
US11341313B2 (en) | 2017-12-07 | 2022-05-24 | Paypal, Inc. | Dynamic web content based on contextual profile |
US11829704B2 (en) | 2017-12-07 | 2023-11-28 | Paypal, Inc. | Dynamic web content based on contextual profile |
KR20210133640A (en) * | 2020-04-29 | 2021-11-08 | 주식회사 쓰리케이소프트 | The method of securitying XML web document |
KR102382850B1 (en) | 2020-04-29 | 2022-04-05 | 주식회사 쓰리케이소프트 | The method of securitying XML web document |
US20230401202A1 (en) * | 2022-06-13 | 2023-12-14 | Microsoft Technology Licensing, Llc | Graphic search bar with responsive results |
US11914581B2 (en) * | 2022-06-13 | 2024-02-27 | Microsoft Technology Licensing, Llc | Graphic search bar with responsive results |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20060095835A1 (en) | System and method for the modular generation of markup language | |
US6484149B1 (en) | Systems and methods for viewing product information, and methods for generating web pages | |
US20180196857A1 (en) | Automated presentation of information using infographics | |
US6973478B1 (en) | Autonomous local assistant for managing business processes | |
US20100251143A1 (en) | Method, system and computer program for creating and editing a website | |
US10387535B2 (en) | System and method for selectively displaying web page elements | |
US7359873B2 (en) | Self-service catalog manager for stores implemented on a communications network | |
US20090282062A1 (en) | Data protection and management | |
US20070073756A1 (en) | System and method configuring contextual based content with published content for display on a user interface | |
US20090094525A1 (en) | System and method for dynamic media integration into web pages | |
US20100088590A1 (en) | Methods and apparatus for generating a dynamic document | |
US8060828B2 (en) | Window overlay for online collaboration platform | |
US20060156216A1 (en) | Web page rendering based on object matching | |
US8060823B2 (en) | Notification controls for online collaboration platform | |
US20060253776A1 (en) | Information processing device, information processing system, information processing method, information processing program and recording medium recording the informaiton processing program | |
KR20090005097A (en) | Systems and methods of transforming data for web communities and web applications | |
TW200842608A (en) | System and method for related information search and presentation from user interface content | |
US8533176B2 (en) | Business application search | |
TW201017568A (en) | User interface for internet advertisement | |
US20100036832A1 (en) | Searching by object category for online collaboration platform | |
US9319480B2 (en) | Managing digital media presented in online digital media store | |
US20030126160A1 (en) | Method, system, and computer program product for generating custom databases | |
US8006200B2 (en) | Facilitated search for online collaboration platform | |
US7853528B2 (en) | E-commerce store management user interface for performing Web site updates | |
US20100037171A1 (en) | Utility toolbar for online collaboration platform |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: VCOMMERCE CORP., ARIZONAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KENNEDY, WILLIAM;MUELLER, PETER;REEL/FRAME:018360/0290Effective date: 20060320 |
|
AS | Assignment |
Owner name: VCOMMERCE HOLDINGS, INC., FLORIDAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:VCOMMERCE CORPORATION;REEL/FRAME:023177/0953Effective date: 20090828 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: CHANNEL INTELLIGENCE, INC., CALIFORNIAFree format text: NUNC PRO TUNC ASSIGNMENT;ASSIGNOR:VCOMMERCE HOLDINGS, INC.;REEL/FRAME:034736/0781Effective date: 20090828 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: NUNC PRO TUNC ASSIGNMENT;ASSIGNOR:CHANNEL INTELLIGENCE, INC.;REEL/FRAME:035357/0783Effective date: 20130205 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
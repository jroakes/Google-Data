US9009021B2 - Automatic transliteration of a record in a first language to a word in a second language - Google Patents
Automatic transliteration of a record in a first language to a word in a second language Download PDFInfo
- Publication number
- US9009021B2 US9009021B2 US13/522,754 US201013522754A US9009021B2 US 9009021 B2 US9009021 B2 US 9009021B2 US 201013522754 A US201013522754 A US 201013522754A US 9009021 B2 US9009021 B2 US 9009021B2
- Authority
- US
- United States
- Prior art keywords
- circumflex over
- language
- transliteration
- variant
- characters
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G06F17/2872—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
- G06F40/55—Rule-based translation
-
- G06F17/2863—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
- G06F40/53—Processing of non-Latin text
Definitions
- the present specification relates to a method for automatic transliteration of records in a first language to relevant words in a second language.
- Transliteration is used in many modern applications and particularly in text applications for mobile telephones, e.g., SMS (Short Message Service), and for network data retrieval, e.g., in Internet search engines.
- SMS Short Message Service
- network data retrieval e.g., in Internet search engines.
- transliteration i.e. recording the words of one language by means of characters of the other language
- transliteration is carried out with use of tables of correspondence between letters or more often between sounds, sometimes between syllables in a first language and their representation by letters of a second language.
- Such methods are described, for example in the U.S. Pat. No. 6,460,015 (published on Oct. 1, 2002), U.S. Pat. No. 6,810,374 (published on Oct. 26, 2004), U.S. Pat. No. 7,376,648 (published on May 20, 2008), in US Patent Applications 2005/0182616 (published on Aug. 18, 2005), 2005/0216253 (published on Sep. 29, 2005), 2006/0143207 (published on Jun.
- Canadian Patent Application 2630949 (published on Nov. 21, 2008) describes a transliteration method that involves an attempt of replacing chains of letters in a first language with chains of letters in a second language, determination of the replacement probability, and then selection of the most probable replacement based on a preset criterion.
- a similar method is used in the laid-open Japanese Patent Application 2005-092682 (published on Apr. 7, 2005).
- both methods are rigidly linked to the pair of languages considered in each method (English and Arabic or English and Japanese, respectively) that are poorly flectional. Therefore, they are hardly adaptable to other cases.
- This specification describes an innovative method for automatic transliteration of a record in a first language to a word in a second language.
- This method includes the following: receiving a sequence of signals, each of which encodes the corresponding character in a first language record to be transliterated, and saving the received signal sequence to a memory;
- each step comparing each of the composite transliteration variants obtained at the given step against starting segments of words in the second language, by looking up in an appropriate base of starting segments of words in the second language, and if a particular transliteration variant associated with the given step matches a starting segment of a word in the second language, retaining this transliteration variant for analysis in subsequent steps;
- An optional feature of the method is that the received signal sequence is complemented at the start and end with signals corresponding to preset characters, and the first step of analysis is started from the first of the preset characters.
- the preset characters can be alphabetic or non-alphabetic, and they may be different characters or the very same preset character.
- the characters used for the record in the first language are selected from the group made up of: alphabetic characters of the first language; non-alphabetic characters, each resembling some alphabetic character of the second language; and non-alphabetic characters that in combination resemble some alphabetic character of the second language.
- One more optional feature of the method is that the base of starting segments of words in the second language is created directly during the comparison, from chains no longer than m characters, which chains are obtained from actual words of the second language, and the starting segments of words in the second language are created by imposition of the chains with a shift by one character, wherein m>1 is an integer pre-selected for the second language; during this process, the occurrence frequency in the second language is determined for each of the chains, and the chains with occurrence frequency below a preset limit are removed.
- the probability calculated at a particular step of analysis is multiplied by a pre-selected weighting factor, of the rule which is used at the given step of analysis to find the transliteration variant
- One more optional feature of the method is that when the base with starting segments of words in the second language is complemented directly during the comparison, if no variant of transliteration in the second language is found upon completing the analysis for the record in the first language being analyzed, the stepwise analysis of signals from the start to the end of the saved signal sequence can be repeated, and if this particular transliteration variant associated with the given step does not match any starting segment of some word in the second language, this transliteration variant is assigned a tentative occurrence frequency equal to a small preset value, at the same time transliteration variants having higher probability are saved.
- the number of transliteration variants that can be saved at each step of the analysis shall not exceed a preset number of the transliteration variants ending with the same “m ⁇ 1” characters of the second language and having higher probability.
- Another optional feature of the method is that in the case that the transliteration variant having k chains is compared to a transliteration variant having q chains, where k and q are positive integers, the probabilities of both transliteration variants can be normalized by k and q, respectively, before the comparison, by extracting the k-th or q-th root, respectively, from the corresponding probability.
- One more optional feature of the method is that beside the number of chains, the number of rules used in each of the compared variants can also be taken into account.
- one more optional feature of the method is that a logarithmic measure of probability can be used as the probability of a transliteration variant.
- the method can be implemented as first described above or with any number of the optional features described above.
- the steps of the method and all combinations of the optional features can also be implemented corresponding systems, apparatus, and computer programs recorded on computer storage devices, each configured to perform the steps of the method and any implemented optional features.
- FIG. 1 is an illustration of an example record W and two corresponding variants T and T′ according to some aspects of the present disclosure.
- the method actually begins with a preparatory stage, where any public or other databases are used to collect statistics of ways to write certain combinations of letters in one (first) language with letters of another (second) language.
- any public or other databases are used to collect statistics of ways to write certain combinations of letters in one (first) language with letters of another (second) language.
- transliteration it is necessary to have two sets of data:
- Transliteration rules i.e. a set of rules describing potential transliteration process. For example, sh ⁇ .
- the rules need not be one-for-one (e.g. s ⁇ c , c ⁇ c ), and can even be overlapping (e.g. s ⁇ c , ch ⁇ , but sch ⁇ ).
- One of the ways for taking overlaps into account involves assigning weighting coefficients to each rule. So, a transliteration rule represents a set that includes:
- “record” means the input of transliteration. It is a word of target language written with the alphabet of the first language. For example, we transliterate “mir” ⁇ “ ”. “mir” is the (input) record, “ ” is its transliteration, the word of the target language (peace).
- ⁇ for all such spelling variants, and compare ⁇ (T i ) and ⁇ (T j ), where T i and T j represent comparable spelling variants (i ⁇ j).
- any dictionary contains a limited number of words (by which we mean combinations of letters) used in the given language. The method is designed even for mistakenly written words. Therefore, a different approach will be used.
- ⁇ (T) ⁇ T , if length of T is less than or equal to m;
- ⁇ T (for any subsequence T being as long as ⁇ m) represents a number of subsequences T found as a subsequence of the target language words in the target language analyzed texts taken from a certain source, for example, from Internet web pages.
- Quantitative values can always be transformed into a probability by dividing each such value by total sum.
- function ⁇ is determined in all variants T of the target language, and expresses similarity degree of T to words from the analyzed source. It can be used as a probability measure of the target language variants.
- m-chain An m-long piece of the target language word will be referred to as an m-chain (or just a chain).
- the term m-chain will also be used to refer to the start of a word that is less than m characters long, to be able to identify the probability of a variant having failed to reach a length of m characters.
- each record in the source (first) language is provided at the start and at the end with certain preset characters.
- the method does not require such additional characters, but they are fairly helpful for illustrating its embodiment. These characters can be either similar or different, either alphabetical or non-alphabetical.
- the next illustrative example uses character at the start of the record and character at the end of the word. Then, for example, 5-chain [ ⁇ abcd] denotes sequence of letters at the start of the word, while 5-chain [ ⁇ who$] denotes individual word who .
- T [1 . . . s] is the better (according to ⁇ ) variant among all other variants with the same end of transliteration W [1 . . . t] .
- T ⁇ 3a a .
- T [1 . . . 9] ⁇ 3a .
- T [1 . . . 9] is the best variant among all other variants with the same end of transliteration W [1 . . . 24] .
- T′ as concatenation T′ [1 . . . s′] +T [s+1 . . . k] . Then, T′ will also constitute a variant of transliteration W as a fusion of word W transliteration before position t and after it.
- the algorithm alone as embodied by the present method is fairly simple.
- the record in the first language has signs ⁇ and $ added to indicate the start and the end of this record. Then, the record will undergo stage-by-stage analysis from the first to the last letter (including the above added signs). In reviewing the position of each subsequent letter, all suitable rules will be applied starting from the current position, which results in a number of transliteration variants at the given stage of the analysis. Then, the rules will be applied to previously obtained variants, and eventually the variants of the entire word will be obtained.
- the records to be transliterated are made suitable for computer processing.
- the records are coded in any acceptable code (e.g. ASCII, KOI-8, Unicode etc.) and transformed into appropriate signals to be transmitted through communication lines or recorded to a machine-readable medium.
- a sequence of such signals with the help of which the first language record to be transliterated was coded as a sequence of characters, will be received for its further processing in a duly programmed data processing unit.
- the latter can be a personal computer (PC), personal digital assistant (PDA), mobile telephone, server or any other device that can be provided with a program written according to a method stated in the present description.
- This received sequence of signals will optionally be supplemented at its start and end with signals corresponding to preset characters.
- the characters can be similar or different, alphabetic or non-alphabetic. In the latter case, for example, all characters of a record to be transliterated can be lower-case characters, while the start and end of such word can be supplemented with capital letters. The method will be performed on this data.
- a first character will initially be selected, and its appropriate transliteration rule will be searched.
- a rule can be introduced that will be applicable to only the record character, should it rank first. For example, ⁇ ⁇ .
- the last characters will be treated similarly, e.g. yov$ ⁇ e B $.
- the second character i.e. the first letter of the record
- transliteration rules corresponding to it will be searched.
- Each found rule i.e. corresponding character or a chain of corresponding characters (if a character of the source language can be transliterated by means of, say, two characters of the target language—e.g.
- a record in the first language can use characters selected from a group made up of, for example, the following: alphabetic characters of the first language; non-alphabetic characters, each of which bears resemblance to one of alphabetic characters in the second language (for example, figure can be used to record Russian letter instead of Latin letter ); non-alphabetic characters, the combination of which bears resemblance to one of alphabetic characters in the second language (for example, a pair of characters (forward and backward slash characters) could be used to record Russian letter instead of Latin letter ).
- the next stage of the analysis involves picking up the second letter of the record being transliterated (i.e. the third character, should such record start and end be supplemented with non-alphabetic characters), and searching transliteration rules for such second letter. All thus found characters of the second language will supplement the chains previously made up of the second language characters, i.e. the chains of the record starting non-alphabetic character supplemented with the second language appropriate characters found for the first letter of the record in the source (first) language.
- each chain already made up at the previous stage of the second (target) language characters will be supplemented with characters found at the present stage.
- each of the resulting chains of target language characters are compared by reference to the appropriate base of initial segments with initial segments of the second language words.
- Such a comparison process involves picking-up, at each stage, the variants having higher occurrence frequency as compared with other variants having the same ends out of many transliteration variants found in the course of the above comparison:
- the base of the second language initial segments can be made up beforehand using a data collection approximating all words in the second language.
- Such a base of initial segments of the second language words will be compiled from real words in the second language, while initial segments of the second language words will be made up by mapping such chains with a single-character shift.
- Probability of each specific transliteration variant associated with the above stage and not exceeding m characters in length will represent occurrence frequency of an appropriate chain, while the probability of each specific transliteration variant associated with the above stage and exceeding m characters in length will be found through multiplying occurrence frequencies of m-character long chains contained in the above-specified transliteration variant with overlapping due to shift of each next m-character long chains by one character from the start of the above specific transliteration variant. For example, for variant , the previously found occurrence frequencies for chains , and will be multiplied. The resultant product will constitute the target probability for variant .
- Each of the above chains having occurrence frequency in the second language lower then a preset limit can initially be removed from the chains' database; and if a certain chain is absent, the corresponding transliteration variant may be discarded.
- variant V 1 consisting of a single chain and three rules: ⁇ , s ⁇ c, h ⁇ x
- variant V 2 consisting of a single chain and two rules: ⁇ , sh ⁇ .
- the first root i.e. not the probability values themselves (comparison frequency) shall be compared, but respectively, the fourth root of the occurrence frequency of variant V 1 and the third root of the occurrence frequency of variant V 2 .
- the final most probable result can be treated as a target transliteration in the target language. This is followed with generation of a signals sequence corresponding to the second language transliterated word encoding that, for example, can be transmitted over communication lines or written in a respective memory.
- transliteration examples in accordance with the method described above are shown below. These examples represent the variants attributed to each transliteration stage and left (not discarded) for analysis at subsequent stages.
- This example illustrates application of rules assigned to higher-order stages than those, at which it was applied.
- the first character s and subsequent characters were analyzed at the second stage.
- One of the rules, sh ⁇ affected the record second and third positions at once. Therefore, variant engendered by them has been referred at once to the third stage.
Abstract
Description
-
- a combination, i.e. a set of Latin letters denoting a piece of a record, that, once found in the record, may be replaced according to such a rule;
- contents, i.e. a chain of letters of the target language (in our examples—Russian), into which the combination is to be transformed; and
- weight, i.e. a rational number identifying significance of the rule among the other rules.
-
- ‘y’→‘
- ‘ch’→‘
- . . .
μ(T)=μ(T [1 . . . s])×μ(T [s−m+1 . . . s+1])×μ(T [s−m+2 . . . s+2])× . . . ×μ(T [s . . . s+m])×μ(T [s+1 . . . k]),
μ(T′)=μ(T′ [1 . . . s′])×μ( T [s−m+1 . . . s+1])×μ(T [s−m+2 . . . s+2])× . . . ×μ(T [s . . . s+m])×μ(T [s+1 . . . k])
Note that if s<m, s′<m or s+m>k, certain multipliers will disappear.
End | Probability | Transliterated | Applied rules | ||
part | (with weights) | ||||
1: ^|olga$
[{circumflex over ( )}] | 1 | “{circumflex over ( )}” | → | ||
At the first stage, initial signal was transliterated into itself.
[{circumflex over ( )}o] | 0.0198769 | “{circumflex over ( )}o” | {circumflex over ( )}→{circumflex over ( )} | ||
o→o | |||||
3: ^o|lga$
[{circumflex over ( )}o | 0.000146119 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
[{circumflex over ( )}o | 1.56053e−06 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
At the third stage, the second letter of the record was transliterated in two ways giving rise to two variants. Since their ends differ, according to the theorem, no attempt at comparing and discarding has been made.
[{circumflex over ( )}o | 4.04846e−07 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
[{circumflex over ( )}o | 1.74308e−09 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
[{circumflex over ( )}o | 1.33855e−06 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
At the fourth stage, next letter g, once also given two-fold transliteration, has engendered four variants. But, as chain [^o
5: ^olga|$
[{circumflex over ( )}o | 9.65577e−08 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
a→a | |||
[{circumflex over ( )}o | 3.8423e−10 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
a→a | |||
[o | 1.11676e−06 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
a→a | |||
6: ^olga$
[ | 2.55749e−11 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
a→a | |||
$→$ | |||
[o | 3.4578e−08 | {circumflex over ( )}→{circumflex over ( )} | |
o→o | |||
l→ | |||
g→ | |||
a→a | |||
$→$ | |||
Transliterated | Applied rules | ||||
End | Probability | part | (with weights) | ||
[{circumflex over ( )}] | 1 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} | ||
2: ^s|hashka$
[{circumflex over ( )} | 8.10924e−05 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
s→ | |||
[{circumflex over ( )}c] | 0.0309413 | {circumflex over ( )}c | {circumflex over ( )}→{circumflex over ( )} |
s→c | |||
[{circumflex over ( )}C | 5.14555e−05 | {circumflex over ( )}C | {circumflex over ( )}→{circumflex over ( )} |
s→C | |||
[{circumflex over ( )}C | 4.51423e−07 | {circumflex over ( )}C | {circumflex over ( )}→{circumflex over ( )} |
s→C | |||
[{circumflex over ( )} | 1.80712e−06 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
s→ | |||
3: ^sh|ashka$
[{circumflex over ( )} | 7.64281e−09 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
s→ | |||
h→x | |||
[{circumflex over ( )}cx] | 9.61574e−05 | {circumflex over ( )}cx | {circumflex over ( )}→{circumflex over ( )} |
s→c | |||
h→x | |||
[{circumflex over ( )} | 0.00180712 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
[{circumflex over ( )} | 3.17676e−09 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
s→ | |||
h→x | |||
[{circumflex over ( )} | 5.4019e−06 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
4: ^sha|shka$
[{circumflex over ( )} | 3.72714e−10 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
s→ | |||
h→x | |||
a→a | |||
[{circumflex over ( )}cxa] | 9.58236e−08 | {circumflex over ( )}cxa | {circumflex over ( )}→{circumflex over ( )} |
s→c | |||
h→x | |||
a→a | |||
[{circumflex over ( )} | 0.000238168 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
[{circumflex over ( )} | 1.97438e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
s→ | |||
h→x | |||
a→a | |||
[{circumflex over ( )} | 2.59001e−09 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
[{circumflex over ( )} | 1.10777e−07 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
[{circumflex over ( )} | 2.93584e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
5: ^shas|hka$
[{circumflex over ( )} | 4.24794e−06 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
s→c | |||
[{circumflex over ( )} | 6.59954e−09 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
s→ | |||
[{circumflex over ( )} | 2.01154e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
s→c | |||
[{circumflex over ( )} | 6.9434e−13 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
s→ | |||
[{circumflex over ( )} | 2.41509e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
s→ | |||
[{circumflex over ( )} | 4.47293e−08 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
s→c | |||
[{circumflex over ( )} | 1.63144e−12 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
s→ | |||
[{circumflex over ( )} | 1.94088e−15 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
s→3 w: 0.01 | |||
[{circumflex over ( )} | 7.63459e−13 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
s→c | |||
[{circumflex over ( )} | 1.06198e−15 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
s→ | |||
6: ^shash|ka$
[{circumflex over ( )} | 6.59954e−06 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
sh→ | |||
[{circumflex over ( )} | 2.84768e−09 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
sh→ | |||
[{circumflex over ( )} | 6.9434e−10 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
sh→ | |||
[{circumflex over ( )} | 4.95191e−12 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
sh→ | |||
[{circumflex over ( )} | 1.63144e−09 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
sh→ | |||
[{circumflex over ( )} | 8.60848e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
sh→ | |||
[{circumflex over ( )} | 1.06198e−12 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
sh→ | |||
[{circumflex over ( )} | 8.05361e−14 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→ | |||
s→ | |||
7: ^shashk|a$
[{circumflex over ( )} | 2.52467e−06 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
sh→ | |||
k→κ | |||
8: ^shashka|$
[{circumflex over ( )} | 5.38716e−07 | {circumflex over ( )} κa | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
sh→ | |||
k→κ | |||
a→a | |||
9: ^shashka$|
[a | 1.03159e−13 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
sh→ | |||
a→a | |||
sh→ | |||
k→κ | |||
aa | |||
$→$ | |||
Result:
Transliterated | Applied rules | ||
End | Probability | part | (with weights) |
[{circumflex over ( )}] | 1 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
2: ^p|odzol$
[{circumflex over ( )} | 0.0356523 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
[{circumflex over ( )}p] | 1.40238e−07 | {circumflex over ( )}p | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
3: ^po|dzol$
[{circumflex over ( )} | 0.014841 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
[{circumflex over ( )}po] | 1.82471e−08 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
4: ^pod|zol$
[{circumflex over ( )} | 0.00224693 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
[{circumflex over ( )} | 5.03591e−06 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
[{circumflex over ( )} | 8.71406e−08 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
[{circumflex over ( )}po | 2.09531e−09 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
[{circumflex over ( )} | 4.23415e−14 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
[{circumflex over ( )} | 2e−16 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
5: ^podz|ol$
[{circumflex over ( )} | 1.52488e−07 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[{circumflex over ( )} | 1.50648e−05 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[{circumflex over ( )} | 2.20269e−08 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[{circumflex over ( )}po | 5.94019e−13 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[{circumflex over ( )}po | 9.18225e−13 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[{circumflex over ( )}po | 5e−17 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[o | 4e−22 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[o | 4e−22 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[ | 2e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[ | 6e−13 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[ | 2e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[ | 1e−12 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[ | 6e−13 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[ | 2e−11 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[ | 1e−12 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
[po | 2e−16 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[po | 6e−18 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[po | 2e−16 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[po | 1e−17 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[po | 6e−18 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[po | 2e−16 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
[po | 1e−17 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
6: ^podzo|l$
[ | 4e−32 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[ | 4e−32 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[o | 2e−21 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[o | 6e−23 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[o | 2e−21 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[o | 1e−22 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[o | 6e−23 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[o | 2e−21 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[o | 1e−22 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[ | 2.73535e−08 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[ | 7.79656e−07 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[ | 5e−12 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[po | 3e−17 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[po | 1e−15 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
[po | 5e−17 | {circumflex over ( )}po | {circumflex over ( )}→{circumflex over ( )} |
p→p(1e−05) | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
7: ^podzol|$
[ | 1.36767e−29 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 3.11498e−25 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 2e−31 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 2.5e−33 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 6e−33 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 2e−31 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 1e−32 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 6e−33 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 2e−31 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 1e−32 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 1e−42 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[o | 2.73535e−18 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[o | 6.22996e−14 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[o | 5e−22 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 3e−44 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 1e−42 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 4e−42 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 5e−44 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 3e−44 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 1e−42 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 4e−42 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
[ | 5e−44 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
8: ^podzol$|
[ | 2.73535e−28 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 6.22996e−24 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 5e−32 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 1.36767e−39 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 3.11498e−35 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 2e−41 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 2.5e−43 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 6e−43 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 2e−41 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 1e−42 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 6e−43 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 2e−41 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 1e−52 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
[ | 1e−42 | {circumflex over ( )} | {circumflex over ( )}→{circumflex over ( )} |
p→ | |||
o→o | |||
d→ | |||
z→ | |||
o→o | |||
l→ | |||
$→$ | |||
Result:
Claims (20)
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/RU2010/000013 WO2011087391A1 (en) | 2010-01-18 | 2010-01-18 | Automatic transliteration of a record in a first language to a word in a second language |
Publications (2)
Publication Number | Publication Date |
---|---|
US20130035926A1 US20130035926A1 (en) | 2013-02-07 |
US9009021B2 true US9009021B2 (en) | 2015-04-14 |
Family
ID=44304466
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/522,754 Active 2030-11-29 US9009021B2 (en) | 2010-01-18 | 2010-01-18 | Automatic transliteration of a record in a first language to a word in a second language |
Country Status (2)
Country | Link |
---|---|
US (1) | US9009021B2 (en) |
WO (1) | WO2011087391A1 (en) |
Families Citing this family (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104272223B (en) * | 2012-02-28 | 2018-05-04 | 谷歌有限责任公司 | For technology of the text from the first character set transliteration to the second character set will to be inputted |
US9176936B2 (en) * | 2012-09-28 | 2015-11-03 | International Business Machines Corporation | Transliteration pair matching |
US9218341B2 (en) * | 2013-08-26 | 2015-12-22 | Lingua Next Technologies Pvt. Ltd. | Method and system for language translation |
US9881004B2 (en) * | 2015-05-01 | 2018-01-30 | Cerner Innovation, Inc. | Gender and name translation from a first to a second language |
US10185710B2 (en) * | 2015-06-30 | 2019-01-22 | Rakuten, Inc. | Transliteration apparatus, transliteration method, transliteration program, and information processing apparatus |
US20170371850A1 (en) * | 2016-06-22 | 2017-12-28 | Google Inc. | Phonetics-based computer transliteration techniques |
US11532179B1 (en) | 2022-06-03 | 2022-12-20 | Prof Jim Inc. | Systems for and methods of creating a library of facial expressions |
US20230177878A1 (en) * | 2021-12-07 | 2023-06-08 | Prof Jim Inc. | Systems and methods for learning videos and assessments in different languages |
US20230222296A1 (en) * | 2022-01-11 | 2023-07-13 | Rassan Mohammad Tarabein | Arabic Latinized |
Citations (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5113342A (en) * | 1989-04-26 | 1992-05-12 | International Business Machines Corporation | Computer method for executing transformation rules |
US5535119A (en) * | 1992-06-11 | 1996-07-09 | Hitachi, Ltd. | Character inputting method allowing input of a plurality of different types of character species, and information processing equipment adopting the same |
US5640587A (en) | 1993-04-26 | 1997-06-17 | Object Technology Licensing Corp. | Object-oriented rule-based text transliteration system |
CN1193780A (en) | 1997-03-13 | 1998-09-23 | 代立明 | Universal transliteration technique for languages |
WO2001020435A2 (en) | 1999-09-17 | 2001-03-22 | Webdunia.Com (India) Ltd. | Use of english phonetics to write non-roman characters |
US6292772B1 (en) * | 1998-12-01 | 2001-09-18 | Justsystem Corporation | Method for identifying the language of individual words |
US6460015B1 (en) | 1998-12-15 | 2002-10-01 | International Business Machines Corporation | Method, system and computer program product for automatic character transliteration in a text string object |
US6810374B2 (en) | 2001-07-23 | 2004-10-26 | Pilwon Kang | Korean romanization system |
JP2005092682A (en) | 2003-09-19 | 2005-04-07 | Nippon Hoso Kyokai <Nhk> | Transliteration device and transliteration program |
US20050182616A1 (en) | 2004-02-13 | 2005-08-18 | Microsoft Corporation Corporation In The State Of Washington | Phonetic-based text input method |
US20050216253A1 (en) | 2004-03-25 | 2005-09-29 | Microsoft Corporation | System and method for reverse transliteration using statistical alignment |
US20060112091A1 (en) | 2004-11-24 | 2006-05-25 | Harbinger Associates, Llc | Method and system for obtaining collection of variants of search query subjects |
US20060143207A1 (en) | 2004-12-29 | 2006-06-29 | Microsoft Corporation | Cyrillic to Latin script transliteration system and method |
US7099876B1 (en) | 1998-12-15 | 2006-08-29 | International Business Machines Corporation | Method, system and computer program product for storing transliteration and/or phonetic spelling information in a text string class |
US20070288230A1 (en) | 2006-04-19 | 2007-12-13 | Datta Ruchira S | Simplifying query terms with transliteration |
US20070288660A1 (en) * | 1997-03-27 | 2007-12-13 | Netmask (El-Mar) Internet Technologies Ltd. | Automatic Conversion System |
US20080097745A1 (en) | 2006-10-18 | 2008-04-24 | Domenica Bagnato | Text analysis, transliteration and translation method and apparatus for hieroglypic, hieratic, and demotic texts from ancient egyptian |
US7376648B2 (en) | 2004-10-20 | 2008-05-20 | Oracle International Corporation | Computer-implemented methods and systems for entering and searching for non-Roman-alphabet characters and related search systems |
US20080221866A1 (en) * | 2007-03-06 | 2008-09-11 | Lalitesh Katragadda | Machine Learning For Transliteration |
US20080270111A1 (en) | 2007-04-30 | 2008-10-30 | Ram Prakash Hanumanthappa | System, method to generate transliteration and method for generating decision tree to obtain transliteration |
CA2630949A1 (en) | 2007-05-21 | 2008-11-21 | Sherikat Link Letatweer Elbarmagueyat S.A.E. | Method for transliterating and suggesting arabic replacement for a given user input |
US20090132232A1 (en) * | 2006-03-30 | 2009-05-21 | Pegasystems Inc. | Methods and apparatus for implementing multilingual software applications |
US7853444B2 (en) * | 2005-10-09 | 2010-12-14 | Kabushiki Kaisha Toshiba | Method and apparatus for training transliteration model and parsing statistic model, method and apparatus for transliteration |
US20120016663A1 (en) * | 1998-03-25 | 2012-01-19 | International Business Machines Corporation | Identifying related names |
US20120239834A1 (en) * | 2007-08-31 | 2012-09-20 | Google Inc. | Automatic correction of user input using transliteration |
US8275601B2 (en) * | 2008-05-11 | 2012-09-25 | Research In Motion Limited | Mobile electronic device and associated method enabling transliteration of a text input |
US8612206B2 (en) * | 2009-12-08 | 2013-12-17 | Microsoft Corporation | Transliterating semitic languages including diacritics |
US8655643B2 (en) * | 2007-10-09 | 2014-02-18 | Language Analytics Llc | Method and system for adaptive transliteration |
-
2010
- 2010-01-18 US US13/522,754 patent/US9009021B2/en active Active
- 2010-01-18 WO PCT/RU2010/000013 patent/WO2011087391A1/en active Application Filing
Patent Citations (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5113342A (en) * | 1989-04-26 | 1992-05-12 | International Business Machines Corporation | Computer method for executing transformation rules |
US5535119A (en) * | 1992-06-11 | 1996-07-09 | Hitachi, Ltd. | Character inputting method allowing input of a plurality of different types of character species, and information processing equipment adopting the same |
US5640587A (en) | 1993-04-26 | 1997-06-17 | Object Technology Licensing Corp. | Object-oriented rule-based text transliteration system |
CN1193780A (en) | 1997-03-13 | 1998-09-23 | 代立明 | Universal transliteration technique for languages |
US20070288660A1 (en) * | 1997-03-27 | 2007-12-13 | Netmask (El-Mar) Internet Technologies Ltd. | Automatic Conversion System |
US20120016663A1 (en) * | 1998-03-25 | 2012-01-19 | International Business Machines Corporation | Identifying related names |
US6292772B1 (en) * | 1998-12-01 | 2001-09-18 | Justsystem Corporation | Method for identifying the language of individual words |
US7099876B1 (en) | 1998-12-15 | 2006-08-29 | International Business Machines Corporation | Method, system and computer program product for storing transliteration and/or phonetic spelling information in a text string class |
US6460015B1 (en) | 1998-12-15 | 2002-10-01 | International Business Machines Corporation | Method, system and computer program product for automatic character transliteration in a text string object |
WO2001020435A2 (en) | 1999-09-17 | 2001-03-22 | Webdunia.Com (India) Ltd. | Use of english phonetics to write non-roman characters |
US6810374B2 (en) | 2001-07-23 | 2004-10-26 | Pilwon Kang | Korean romanization system |
JP2005092682A (en) | 2003-09-19 | 2005-04-07 | Nippon Hoso Kyokai <Nhk> | Transliteration device and transliteration program |
US20050182616A1 (en) | 2004-02-13 | 2005-08-18 | Microsoft Corporation Corporation In The State Of Washington | Phonetic-based text input method |
US20050216253A1 (en) | 2004-03-25 | 2005-09-29 | Microsoft Corporation | System and method for reverse transliteration using statistical alignment |
US7376648B2 (en) | 2004-10-20 | 2008-05-20 | Oracle International Corporation | Computer-implemented methods and systems for entering and searching for non-Roman-alphabet characters and related search systems |
US20060112091A1 (en) | 2004-11-24 | 2006-05-25 | Harbinger Associates, Llc | Method and system for obtaining collection of variants of search query subjects |
US20060143207A1 (en) | 2004-12-29 | 2006-06-29 | Microsoft Corporation | Cyrillic to Latin script transliteration system and method |
US7853444B2 (en) * | 2005-10-09 | 2010-12-14 | Kabushiki Kaisha Toshiba | Method and apparatus for training transliteration model and parsing statistic model, method and apparatus for transliteration |
US20090132232A1 (en) * | 2006-03-30 | 2009-05-21 | Pegasystems Inc. | Methods and apparatus for implementing multilingual software applications |
US20070288230A1 (en) | 2006-04-19 | 2007-12-13 | Datta Ruchira S | Simplifying query terms with transliteration |
US20080097745A1 (en) | 2006-10-18 | 2008-04-24 | Domenica Bagnato | Text analysis, transliteration and translation method and apparatus for hieroglypic, hieratic, and demotic texts from ancient egyptian |
US20080221866A1 (en) * | 2007-03-06 | 2008-09-11 | Lalitesh Katragadda | Machine Learning For Transliteration |
US20080270111A1 (en) | 2007-04-30 | 2008-10-30 | Ram Prakash Hanumanthappa | System, method to generate transliteration and method for generating decision tree to obtain transliteration |
CA2630949A1 (en) | 2007-05-21 | 2008-11-21 | Sherikat Link Letatweer Elbarmagueyat S.A.E. | Method for transliterating and suggesting arabic replacement for a given user input |
US20090012775A1 (en) | 2007-05-21 | 2009-01-08 | Sherikat Link Letatweer Elbarmagueyat S.A.E. | Method for transliterating and suggesting arabic replacement for a given user input |
US20120239834A1 (en) * | 2007-08-31 | 2012-09-20 | Google Inc. | Automatic correction of user input using transliteration |
US8655643B2 (en) * | 2007-10-09 | 2014-02-18 | Language Analytics Llc | Method and system for adaptive transliteration |
US8275601B2 (en) * | 2008-05-11 | 2012-09-25 | Research In Motion Limited | Mobile electronic device and associated method enabling transliteration of a text input |
US8612206B2 (en) * | 2009-12-08 | 2013-12-17 | Microsoft Corporation | Transliterating semitic languages including diacritics |
Non-Patent Citations (2)
Title |
---|
Ayob, M. Z., and A. F. Ismail. "Design of prototype expert system for transliterating Arabic-to-Roman words." Research and Development, 2006. SCOReD 2006. 4th Student Conference on. IEEE, 2006. * |
International Search Report and Written Opinion of the ISA, ISA/RU, Moscow, mailed Sep. 23, 2010. |
Also Published As
Publication number | Publication date |
---|---|
WO2011087391A1 (en) | 2011-07-21 |
US20130035926A1 (en) | 2013-02-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9009021B2 (en) | Automatic transliteration of a record in a first language to a word in a second language | |
US7440889B1 (en) | Sentence reconstruction using word ambiguity resolution | |
Creutz | Unsupervised segmentation of words using prior distributions of morph length and frequency | |
CN111814466A (en) | Information extraction method based on machine reading understanding and related equipment thereof | |
US8239349B2 (en) | Extracting data | |
US10528664B2 (en) | Preserving and processing ambiguity in natural language | |
Bellare et al. | Learning extractors from unlabeled text using relevant databases | |
US8620961B2 (en) | Mention-synchronous entity tracking: system and method for chaining mentions | |
CN111651986A (en) | Event keyword extraction method, device, equipment and medium | |
CN115587590A (en) | Training corpus construction method, translation model training method and translation method | |
KR101072460B1 (en) | Method for korean morphological analysis | |
US10515148B2 (en) | Arabic spell checking error model | |
Shafi et al. | UNLT: Urdu natural language toolkit | |
CN113934834A (en) | Question matching method, device, equipment and storage medium | |
CN109213988B (en) | Barrage theme extraction method, medium, equipment and system based on N-gram model | |
Sagcan et al. | Toponym recognition in social media for estimating the location of events | |
US20220383159A1 (en) | Systems and methods for open domain multi-hop question answering | |
Chen et al. | Efficient automatic OCR word validation using word partial format derivation and language model | |
CN112800752B (en) | Error correction method, apparatus, device and storage medium | |
JP3080066B2 (en) | Character recognition device, method and storage medium | |
Üstün et al. | Incorporating word embeddings in unsupervised morphological segmentation | |
Tran et al. | Markov models for written language identification | |
Pan et al. | Named entity recognition from spoken documents using global evidences and external knowledge sources with applications on mandarin chinese | |
RU2751993C1 (en) | Method for extracting information from unstructured texts written in natural language | |
US20230039439A1 (en) | Information processing apparatus, information generation method, word extraction method, and computer-readable recording medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:USHAKOV, MAXIM;GLOTOV, DENIS;REEL/FRAME:024220/0061Effective date: 20100401 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:USHAKOV, MAXIM ALEKSANDROVICH;GLOTOV, DENIS YURIEVICH;SIGNING DATES FROM 20120731 TO 20120801;REEL/FRAME:029095/0508 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
US20080028135A1 - Multiple-component memory interface system and method - Google Patents
Multiple-component memory interface system and method Download PDFInfo
- Publication number
- US20080028135A1 US20080028135A1 US11/461,441 US46144106A US2008028135A1 US 20080028135 A1 US20080028135 A1 US 20080028135A1 US 46144106 A US46144106 A US 46144106A US 2008028135 A1 US2008028135 A1 US 2008028135A1
- Authority
- US
- United States
- Prior art keywords
- component
- dram
- circuits
- memory
- buffer chip
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F13/00—Interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units
- G06F13/38—Information transfer, e.g. on bus
- G06F13/42—Bus transfer protocol, e.g. handshake; Synchronisation
- G06F13/4204—Bus transfer protocol, e.g. handshake; Synchronisation on a parallel bus
- G06F13/4234—Bus transfer protocol, e.g. handshake; Synchronisation on a parallel bus being a memory bus
- G06F13/4243—Bus transfer protocol, e.g. handshake; Synchronisation on a parallel bus being a memory bus with synchronous protocol
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y02—TECHNOLOGIES OR APPLICATIONS FOR MITIGATION OR ADAPTATION AGAINST CLIMATE CHANGE
- Y02D—CLIMATE CHANGE MITIGATION TECHNOLOGIES IN INFORMATION AND COMMUNICATION TECHNOLOGIES [ICT], I.E. INFORMATION AND COMMUNICATION TECHNOLOGIES AIMING AT THE REDUCTION OF THEIR OWN ENERGY USE
- Y02D10/00—Energy efficient computing, e.g. low power processors, power management or thermal management
Definitions
- the present invention relates to memory, and more particularly to multiple-memory circuit systems.
- a system and method are provided, wherein a first component and a second component are operable to interface a plurality of memory circuits and a system.
- FIG. 1 illustrates a multiple memory circuit framework, in accordance with one embodiment.
- FIGS. 2A-2E show various configurations of a buffered stack of dynamic random access memory (DRAM) circuits with a buffer chip, in accordance with various embodiments.
- DRAM dynamic random access memory
- FIG. 2F illustrates a method for storing at least a portion of information received in association with a first operation for use in performing a second operation, in accordance with still another embodiment.
- FIG. 3 shows a high capacity dual in-line memory module (DIMM) using buffered stacks, in accordance with still yet another embodiment.
- DIMM dual in-line memory module
- FIG. 4 shows a timing design of a buffer chip that makes a buffered stack of DRAM circuits mimic longer column address strobe (CAS) latency DRAM to a memory controller, in accordance with another embodiment.
- CAS column address strobe
- FIG. 5 shows the write data timing expected by DRAM in a buffered stack, in accordance with yet another embodiment.
- FIG. 6 shows write control signals delayed by a buffer chip, in accordance with still yet another embodiment.
- FIG. 7 shows early write data from an advanced memory buffer (AMB), in accordance with another embodiment.
- AMB advanced memory buffer
- FIG. 8 shows address bus conflicts caused by delayed write operations, in accordance with yet another embodiment.
- FIGS. 9A-B show variable delays of operations through a buffer chip, in accordance with another embodiment.
- FIG. 10 shows a buffered stack of four 512 Mb DRAM circuits mapped to a single 2 Gb DRAM circuit, in accordance with yet another embodiment.
- FIG. 11 illustrates a method for refreshing a plurality of memory circuits, in accordance with still yet another embodiment.
- FIG. 1 illustrates a multiple memory circuit framework 100 , in accordance with one embodiment. As shown, included are an interface circuit 102 , a plurality of memory circuits 104 A, 104 B, 104 N, and a system 106 . In the context of the present description, such memory circuits 104 A, 104 B, 104 N may include any circuit capable of serving as memory.
- one or more of the memory circuits 104 A, 104 B, 104 N may include a monolithic memory circuit.
- such monolithic memory circuit may take the form of dynamic random access memory (DRAM).
- DRAM may take any form including, but not limited to synchronous (SDRAM), double data rate synchronous (DDR DRAM, DDR2 DRAM, DDR3 DRAM, etc.), quad data rate (QDR DRAM), direct RAMBUS (DRDRAM), fast page mode (FPM DRAM), video (VDRAM), extended data out (EDO DRAM), burst EDO (BEDO DRAM), multibank (MDRAM), synchronous graphics (SGRAM), and/or any other type of DRAM.
- SDRAM synchronous
- DDR DRAM double data rate synchronous
- DDR2 DRAM double data rate synchronous
- DDR3 DRAM etc.
- quad data rate quad data rate
- DRAM direct RAMBUS
- FPM DRAM fast page mode
- VDRAM video
- EDO DRAM extended data out
- one or more of the memory circuits 104 A, 104 B, 104 N may include other types of memory such as magnetic random access memory (MRAM), intelligent random access memory (IRAM), distributed network architecture (DNA) memory, window random access memory (WRAM), flash memory (e.g. NAND, NOR, or others, etc.), pseudostatic random access memory (PSRAM), wetware memory, and/or any other type of memory circuit that meets the above definition.
- MRAM magnetic random access memory
- IRAM intelligent random access memory
- DNA distributed network architecture
- WRAM window random access memory
- flash memory e.g. NAND, NOR, or others, etc.
- PSRAM pseudostatic random access memory
- wetware memory wetware memory
- the memory circuits 104 A, 104 B, 104 N may be symmetrical or asymmetrical.
- the memory circuits 104 A, 104 B, 104 N may be of the same type, brand, and/or size, etc.
- one or more of the memory circuits 104 A, 104 B, 104 N may be of a first type, brand, and/or size; while one or more memory circuits 104 A, 104 B, 104 N may be of a second type, brand, and/or size, etc.
- one or more memory circuits 104 A, 104 B, 104 N may be of a DRAM type, while one or more other memory circuits 104 A, 104 B, 104 N may be of a flash type. While three or more memory circuits 104 A, 104 B, 104 N are shown in FIG. 1 in accordance with one embodiment, it should be noted that any plurality of memory circuits 104 A, 104 B, 104 N may or may not be positioned on any desired entity for packaging purposes.
- the system 106 may include any system capable of requesting and/or initiating a process that results in an access of the memory circuits 104 A, 104 B, 104 N. As an option, the system 106 may accomplish this utilizing a memory controller (now shown), or any other desired mechanism.
- such system 106 may include a host system in the form of a desktop computer, lap-top computer, server, workstation, a personal digital assistant (PDA) device, a mobile phone device, a television, a peripheral device (e.g. printer, etc.).
- PDA personal digital assistant
- a mobile phone device e.g. printer, etc.
- such interface circuit 102 may include any circuit capable of indirectly or directly communicating with the memory circuits 104 A, 104 B, 104 N and the system 106 .
- the interface circuit 102 may include one or more interface circuits, a buffer chip, etc. Embodiments involving such a buffer chip will be set forth hereinafter during reference to subsequent figures.
- the interface circuit 102 may or may not be manufactured in monolithic form.
- memory circuits 104 A, 104 B, 104 N, interface circuit 102 , and system 106 are shown to be separate parts, it is contemplated that any of such parts (or portions thereof) may or may not be integrated in any desired manner. In various embodiments, such optional integration may involve simply packaging such parts together (e.g. stacking the parts, etc.) and/or integrating them monolithically. Just by way of example, in various optional embodiments, one or more portions (or all, for that matter) of the interface circuit 102 may or may not be packaged with one or more of the memory circuits 104 A, 104 B, 104 N (or all, for that matter).
- Different optional embodiments which may be implemented in accordance with the present multiple memory circuit framework 100 will be set forth hereinafter during reference to FIGS. 2A-2E , and 3 et al.
- the interface circuit 102 may be capable of various functionality, in the context of different embodiments. More illustrative information will now be set forth regarding such optional functionality which may or may not be implemented in the context of such interface circuit 102 , per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. For example, any of the following features may be optionally incorporated with or without the exclusion of other features described.
- the interface circuit 102 interfaces a plurality of signals 108 that are communicated between the memory circuits 104 A, 104 B, 104 N and the system 106 .
- signals may, for example, include address/control/clock signals, etc.
- the interfaced signals 108 may represent all of the signals that are communicated between the memory circuits 104 A, 104 B, 104 N and the system 106 .
- at least a portion of signals 110 may travel directly between the memory circuits 104 A, 104 B, 104 N and the system 106 or component thereof [e.g. register, advanced memory buffer (AMB), memory controller, or any other component thereof, where the term component is defined hereinbelow].
- the number of the signals 108 (vs. a number of the signals 110 , etc.) may vary such that the signals 108 are a majority or more (L>M), etc.
- the interface circuit 102 may be operable to interface a first number of memory circuits 104 A, 104 B, 104 N and the system 106 for simulating at least one memory circuit of a second number.
- the simulation may refer to any simulating, emulating, disguising, transforming, converting, and/or the like that results in at least one aspect (e.g. a number in this embodiment, etc.) of the memory circuits 104 A, 104 B, 104 N appearing different to the system 106 .
- the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner.
- a number of pins, wires, signals, etc. may be simulated, while, in the context of logical simulation, a particular function may be simulated.
- a particular protocol e.g. DDR 3 , etc.
- DDR 3 DDR 3
- the second number may be more or less than the first number. Still yet, in the latter case, the second number may be one, such that a single memory circuit is simulated.
- Different optional embodiments which may employ various aspects of the present embodiment will be set forth hereinafter during reference to FIGS. 2A-2E , and 3 et al.
- the interface circuit 102 may be operable to interface the memory circuits 104 A, 104 B, 104 N and the system 106 for simulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of the memory circuits 104 A, 104 B, 104 N.
- such aspect may include a signal, a capacity, a timing, a logical interface, etc.
- such examples of aspects are set forth for illustrative purposes only and thus should not be construed as limiting, since any aspect associated with one or more of the memory circuits 104 A, 104 B, 104 N may be simulated differently in the foregoing manner.
- such signal may refer to a control signal (e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation; etc.), a data signal, a logical or physical signal, or any other signal for that matter.
- a control signal e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation; etc.
- a data signal e.g. an address signal
- a data signal e.g. an address signal
- data signal e.g. an address signal
- protocol such may, in one exemplary embodiment, refer to a particular standard protocol.
- a number of memory circuits 104 A, 104 B, 104 N that obey a standard protocol may be used to simulate one or more memory circuits that obey a different protocol (e.g. DDR 3 , etc.).
- a number of memory circuits 104 A, 104 B, 104 N that obey a version of protocol e.g. DDR2 with 3-3-3 latency timing, etc.
- DDR2 with 5-5-5 latency timing, etc.
- the interface circuit 102 may be operable for simulating at least one memory circuit with a first memory capacity that is greater than (or less than) a second memory capacity of at least one of the memory circuits 104 A, 104 B, 104 N.
- the timing may possibly relate to a latency (e.g. time delay, etc.).
- a latency e.g. time delay, etc.
- such latency may include a column address strobe (CAS) latency, which refers to a latency associated with accessing a column of data.
- the latency may include a row address to column address latency (tRCD), which refers to a latency required between the row address strobe (RAS) and CAS.
- tRP row precharge latency
- tRP row precharge latency
- the latency may include an activate to precharge latency (tRAS), which refers to a latency required to access a certain row of data between a activate operation and a precharge operation.
- tRAS activate to precharge latency
- the interface circuit 102 may be operable for simulating at least one memory circuit with a first latency that is longer (or shorter) than a second latency of at least one of the memory circuits 104 A, 104 B, 104 N.
- tRAS activate to precharge latency
- a component may be operable to receive a signal from the system 106 and communicate the signal to at least one of the memory circuits 104 A, 104 B, 104 N after a delay.
- the signal may refer to a control signal (e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation; etc.), a data signal, a logical or physical signal, or any other signal for that matter.
- such delay may be fixed or variable (e.g. a function of the current signal, the previous signal, etc.).
- the component may be operable to receive a signal from at least one of the memory circuits 104 A, 104 B, 104 N and communicate the signal to the system 106 after a delay.
- the delay may include a cumulative delay associated with any one or more of the aforementioned signals. Even still, the delay may result in a time shift of the signal forward and/or back in time (with respect to other signals). Of course, such forward and backward time shift may or may not be equal in magnitude. In one embodiment, this time shifting may be accomplished by utilizing a plurality of delay functions which each apply a different delay to a different signal. In still additional embodiments, the aforementioned shifting may be coordinated among multiple signals such that different signals are subject to shifts with different relative directions/magnitudes, in an organized fashion.
- the aforementioned component may, but need not necessarily take the form of the interface circuit 102 of FIG. 1 .
- the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc.
- Such register may, in various embodiments, include a Joint Electron Device Engineering Council (JEDEC) register, a JEDEC register including one or more functions set forth herein, a register with forwarding, storing, and/or buffering capabilities, etc.
- JEDEC Joint Electron Device Engineering Council
- At least one of a plurality of memory circuits 104 A, 104 B, 104 N may be identified that is not currently being accessed by the system 106 .
- identification may involve determining whether a page [i.e. any portion of any memory(s), etc.] is being accessed in at least one of the plurality of memory circuits 104 A, 104 B, 104 N.
- any other technique may be used that results in the identification of at least one of the memory circuits 104 A, 104 B, 104 N that is not being accessed.
- a power saving operation is initiated in association with the at least one memory circuit 104 A, 104 B, 104 N.
- such power saving operation may involve a power down operation and, in particular, a precharge power down operation.
- a power down operation may involve a power down operation and, in particular, a precharge power down operation.
- a precharge power down operation may be employed in the context of the present embodiment.
- the present functionality or a portion thereof may be carried out utilizing any desired component.
- such component may, but need not necessarily take the form of the interface circuit 102 of FIG. 1 .
- the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc.
- One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference to FIG. 10 .
- a plurality of the aforementioned components may serve, in combination, to interface the memory circuits 104 A, 104 B, 104 N and the system 106 .
- two, three, four, or more components may accomplish this.
- the different components may be relatively configured in any desired manner.
- the components may be configured in parallel, serially, or a combination thereof.
- any number of the components may be allocated to any number of the memory circuits 104 A, 104 B, 104 N.
- each of the plurality of components may be the same or different. Still yet, the components may share the same or similar interface tasks and/or perform different interface tasks. Such interface tasks may include, but are not limited to simulating one or more aspects of a memory circuit, performing a power savings/refresh operation, carrying out any one or more of the various functionalities set forth herein, and/or any other task relevant to the aforementioned interfacing.
- interface tasks may include, but are not limited to simulating one or more aspects of a memory circuit, performing a power savings/refresh operation, carrying out any one or more of the various functionalities set forth herein, and/or any other task relevant to the aforementioned interfacing.
- One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference to FIG. 3 .
- FIG. 2F An embodiment is set forth for storing at least a portion of information received in association with a first operation for use in performing a second operation. See FIG. 2F .
- a technique is provided for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. See FIG. 11 .
- FIGS. 2A-2E show various configurations of a buffered stack of DRAM circuits 206 A-D with a buffer chip 202 , in accordance with various embodiments.
- the various configurations to be described in the following embodiments may be implemented in the context of the architecture and/or environment of FIG. 1 . Of course, however, they may also be carried out in any other desired environment (e.g. using other memory types, etc.). It should also be noted that the aforementioned definitions may apply during the present description.
- the buffer chip 202 is placed electrically between an electronic host system 204 and a stack of DRAM circuits 206 A-D.
- a stack may refer to any collection of memory circuits.
- the buffer chip 202 may include any device capable of buffering a stack of circuits (e.g. DRAM circuits 206 A-D, etc.).
- the buffer chip 202 may be capable of buffering the stack of DRAM circuits 206 A-D to electrically and/or logically resemble at least one larger capacity DRAM circuit to the host system 204 . IN this way, the stack of DRAM circuits 206 A-D may appear as a smaller quantity of larger capacity DRAM circuits to the host system 204 .
- the stack of DRAM circuits 206 A-D may include eight 512 Mb DRAM circuits.
- the buffer chip 202 may buffer the stack of eight 512 Mb DRAM circuits to resemble a single 4 Gb DRAM circuit to a memory controller (not shown) of the associated host system 204 .
- the buffer chip 202 may buffer the stack of eight 512 Mb DRAM circuits to resemble two 2 Gb DRAM circuits to a memory controller of an associated host system 204 .
- the stack of DRAM circuits 206 A-D may include any number of DRAM circuits.
- a buffer chip 202 may be connected to 2, 4, 8 or more DRAM circuits 206 A-D.
- the DRAM circuits 206 A-D may be arranged in a single stack, as shown in FIGS. 2A-2D .
- the DRAM circuits 206 A-D may be arranged on a single side of the buffer chip 202 , as shown in FIGS. 2A-2D . Of course, however, the DRAM circuits 206 A-D may be located on both sides of the buffer chip 202 shown in FIG. 2E . Thus, for example, a buffer chip 202 may be connected to 16 DRAM circuits with 8 DRAM circuits on either side of the buffer chip 202 , where the 8 DRAM circuits on each side of the buffer chip 202 are arranged in two stacks of four DRAM circuits.
- the buffer chip 202 may optionally be a part of the stack of DRAM circuits 206 A-D. Of course, however, the buffer chip 202 may also be separate from the stack of DRAM circuits 206 A-D. In addition, the buffer chip 202 may be physically located anywhere in the stack of DRAM circuits 206 A-D, where such buffer chip 202 electrically sits between the electronic host system 204 and the stack of DRAM circuits 206 A-D.
- a memory bus (now shown) may connect to the buffer chip 202 , and the buffer chip 202 may connect to each of the DRAM circuits 206 A-D in the stack.
- the buffer chip 202 may be located at the bottom of the stack of DRAM circuits 206 A-D (e.g. the bottom-most device in the stack).
- the buffer chip 202 may be located in the middle of the stack of DRAM circuits 206 A-D.
- the buffer chip 202 may be located at the top of the stack of DRAM circuits 206 A-D (e.g. the top-most device in the stack).
- the buffer chip 202 may be located anywhere between the two extremities of the stack of DRAM circuits 206 A-D.
- the electrical connections between the buffer chip 202 and the stack of DRAM circuits 206 A-D may be configured in any desired manner.
- address, control (e.g. command, etc.), and clock signals may be common to all DRAM circuits 206 A-D in the stack (e.g. using one common bus).
- data signals may be wired as one common bus, several busses or as an individual bus to each DRAM circuit 206 A-D.
- any combination of such configurations may also be utilized.
- the stack of DRAM circuits 206 A-D may have one common address, control and clock bus 208 with individual data busses 210 .
- the stack of DRAM circuits 206 A-D may have two address, control and clock busses 208 along with two data busses 210 .
- the stack of DRAM circuits 206 A-D may have one address, control and clock bus 208 together with two data busses 210 .
- the stack of DRAM circuits 206 A-D may have one common address, control and clock bus 208 and one common data bus 210 . It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized.
- FIG. 2F illustrates a method 280 for storing at least a portion of information received in association with a first operation for use in performing a second operation, in accordance with still yet another embodiment.
- the method 280 may be implemented in the context of the architecture and/or environment of any one or more of FIGS. 1-2E .
- the method 280 may be carried out by the interface circuit 102 of FIG. 1 .
- the method 280 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- first information is received in association with a first operation to be performed on at least one of a plurality of memory circuits (e.g. see the memory circuits 104 A, 104 B, 104 N of FIG. 1 , etc.).
- first information may or may not be received coincidently with the first operation, as long as it is associated in some capacity.
- the first operation may, in one embodiment, include a row operation.
- the first information may include address information (e.g. a set of address bits, etc.).
- second information is received in association with a second operation. Similar to the first information, the second information may or may not be received coincidently with the second operation, and may include address information. Such second operation, however, may, in one embodiment, include a column operation.
- the second operation may be performed utilizing the stored portion of the first information in addition to the second information. See operation 288 . More illustrative information will now be set forth regarding various optional features with which the foregoing method 280 may or may not be implemented, per the desires of the user. Specifically, an example will be set for illustrating the manner in which the method 280 may be employed for accommodating a buffer chip that is simulating at least one aspect of a plurality of memory circuits.
- the present example of the method 280 of FIG. 2F will be set forth in the context of the various components (e.g. buffer chip 202 , etc.) shown in the embodiments of FIGS. 2A-2E .
- the buffer chip 202 may receive more address bits from the memory controller than are required by the DRAM circuits 206 A-D in the stack. These extra address bits may be decoded by the buffer chip 202 to individually select the DRAM circuits 206 A-D in the stack, utilizing separate chip select signals to each of the DRAM circuits 206 A-D in the stack.
- a stack of four x4 1 Gb DRAM circuits 206 A-D behind a buffer chip 202 may appear as a single x4 4 Gb DRAM circuit to the memory controller.
- the memory controller may provide sixteen row address bits and three bank address bits during a row (e.g. activate) operation, and provide eleven column address bits and three bank address bits during a column (e.g. read or write) operation.
- the individual DRAM circuits 206 A-D in the stack may require only fourteen row address bits and three bank address bits for a row operation, and eleven column address bits and three bank address bits during a column operation.
- the buffer chip 202 may receive two address bits more than are needed by each DRAM circuit 206 A-D in the stack. The buffer chip 202 may therefore use the two extra address bits from the memory controller to select one of the four DRAM circuits 206 A-D in the stack. In addition, the buffer chip 202 may receive the same number of address bits from the memory controller during a column operation as are needed by each DRAM circuit 206 A-D in the stack.
- the buffer chip 202 may be designed to store the two extra address bits provided during a row operation and use the two stored address bits to select the correct DRAM circuit 206 A-D during the column operation.
- the mapping between a system address (e.g. address from the memory controller, including the chip select signal(s)) and a device address (e.g. the address, including the chip select signals, presented to the DRAM circuits 206 A-D in the stack) may be performed by the buffer chip 202 in various manners.
- a lower order system row address and bank address bits may be mapped directly to the device row address and bank address inputs.
- the most significant row address bit(s) and, optionally, the most significant bank address bit(s) may be decoded to generate the chip select signals for the DRAM circuits 206 A-D in the stack during a row operation.
- the address bits used to generate the chip select signals during the row operation may also be stored in an internal lookup table by the buffer chip 202 for one or more clock cycles.
- the system column address and bank address bits may be mapped directly to the device column address and bank address inputs, while the stored address bits may be decoded to generate the chip select signals.
- address may be mapped between four 512 Mb DRAM circuits 206 A-D that simulate a single 2 Gb DRAM circuits utilizing the buffer chip 202 .
- There may be 15 row address bits from the system 204 , such that row address bits 0 through 13 are mapped directly to the DRAM circuits 206 A-D.
- There may also be 3 bank address bits from the system 204 , such that bank address bits 0 through 1 mapped directly to the DRAM circuits 206 A-D.
- the bank address bit 2 and the row address bit 14 may be decoded to generate the 4 chip select signals for each of the four DRAM circuits 206 A-D.
- Row address bit 14 may be stored during the row operation using the bank address as the index.
- the stored row address bit 14 may again used with bank address bit 2 to form the four DRAM chip select signals.
- addresses may be mapped between four 1 Gb DRAM circuits 206 A-D that simulate a single 4 Gb DRAM circuits utilizing the buffer chip 202 .
- There may be 16 row address bits from the system 204 , such that row address bits 0 through 14 are mapped directly to the DRAM circuits 206 A-D.
- There may also be 3 bank address bits from the system 204 , such that bank address bits 0 through 3 are mapped directly to the DRAM circuits 206 A-D.
- row address bits 14 and 15 may be decoded to generate the 4 chip select signals for each of the four DRAM circuits 206 A-D. Row address bits 14 and 15 may also be stored during the row operation using the bank address as the index. During the column operation, the stored row address bits 14 and 15 may again be used to form the four DRAM chip select signals.
- this mapping technique may optionally be used to ensure that there are no unnecessary combinational logic circuits in the critical timing path between the address input pins and address output pins of the buffer chip 202 .
- Such combinational logic circuits may instead be used to generate the individual chip select signals. This may therefore allow the capacitive loading on the address outputs of the buffer chip 202 to be much higher than the loading on the individual chip select signal outputs of the buffer chip 202 .
- the address mapping may be performed by the buffer chip 202 using some of the bank address signals from the memory controller to generate the individual chip select signals.
- the buffer chip 202 may store the higher order row address bits during a row operation using the bank address as the index, and then may use the stored address bits as part of the DRAM circuit bank address during a column operation.
- This address mapping technique may require an optional lookup table to be positioned in the critical timing path between the address inputs from the memory controller and the address outputs, to the DRAM circuits 206 A-D in the stack.
- addresses may be mapped between four 512 Mb DRAM circuits 206 A-D that simulate a single 2 Gb DRAM utilizing the buffer chip 202 .
- There may be 15 row address bits from the system 204 , where row address bits 0 through 13 are mapped directly to the DRAM circuits 206 A-D.
- There may also be 3 bank address bits from the system 204 , such that bank address bit 0 is used as a DRAM circuit bank address bit for the DRAM circuits 206 A-D.
- row address bit 14 may be used as an additional DRAM circuit bank address bit.
- the bank address bits 1 and 2 from the system may be decoded to generate the 4 chip select signals for each of the four DRAM circuits 206 A-D.
- row address bit 14 may be stored during the row operation.
- the stored row address bit 14 may again be used along with the bank address bit 0 from the system to form the DRAM circuit bank address.
- the column address from the memory controller may be mapped directly as the column address to the DRAM circuits 206 A-D in the stack. Specifically, this direct mapping may be performed since each of the DRAM circuits 206 A-D in the stack, even if of the same width but different capacities (e.g. from 512 Mb to 4 Gb), may have the same page sizes.
- address A[ 10 ] may be used by the memory controller to enable or disable auto-precharge during a column operation. Therefore, the buffer chip 202 may forward A[ 10 ] from the memory controller to the DRAM circuits 206 A-D in the stack without any modifications during a column operation.
- the simulated DRAM circuit may be desirable to determine whether the simulated DRAM circuit behaves according to a desired DRAM standard or other design specification.
- a behavior of many DRAM circuits is specified by the JEDEC standards and it may be desirable, in some embodiments, to exactly simulate a particular JEDEC standard DRAM.
- the JEDEC standard defines control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals.
- the JEDEC specification for a DDR2 DRAM is known as JESD79-2B.
- the following algorithm may be used. Such algorithm checks, using a set of software verification tools for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as a desired standard or other design specification. This formal verification is quite feasible because the DRAM protocol described in a DRAM standard is typically limited to a few control signals (e.g. approximately 15 control signals in the case of the JEDEC DDR2 specification, for example).
- Examples of the aforementioned software verification tools include MAGELLAN supplied by SYNOPSYS, or other software verification tools, such as INCISIVE supplied by CADENCE, verification tools supplied by JASPER, VERIX supplied by REAL INTENT, 0-IN supplied by MENTOR CORPORATION, and others. These software verification tools use written assertions that correspond to the rules established by the DRAM protocol and specification. These written assertions are further included in the code that forms the logic description for the buffer chip. By writing assertions that correspond to the desired behavior of the simulated DRAM circuit, a proof may be constructed that determines whether the desired design requirements are met. In this way, one may test various embodiments for compliance with a standard, multiple standards, or other design specification.
- an assertion may be written that no two DRAM control signals are allowed to be issued to an address, control and clock bus at the same time.
- the aforementioned algorithm may allow a designer to prove that the simulated DRAM circuit exactly meets the required standard or other design specification. If, for example, an address mapping that uses a common bus for data and a common bus for address results in a control and clock bus that does not meet a required specification, alternative designs for buffer chips with other bus arrangements or alternative designs for the interconnect between the buffer chips may be used and tested for compliance with the desired standard or other design specification.
- FIG. 3 shows a high capacity DIMM 300 using buffered stacks of DRAM circuits 302 , in accordance with still yet another embodiments.
- the high capacity DIMM 300 may be implemented in the context of the architecture and environment of FIGS. 1 and/or 2 A-F. Of course, however, the high capacity DIMM 300 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- a high capacity DIMM 300 may be created utilizing buffered stacks of DRAM circuits 302 .
- a DIMM 300 may utilize a plurality of buffered stacks of DRAM circuits 302 instead of individual DRAM circuits, thus increasing the capacity of the DIMM.
- the DIMM 300 may include a register 304 for address and operation control of each of the buffered stacks of DRAM circuits 302 . It should be noted that any desired number of buffered stacks of DRAM circuits 302 may be utilized in conjunction with the DIMM 300 . Therefore, the configuration of the DIMM 300 , as shown, should not be construed as limiting in any way.
- the register 304 may be substituted with an AMB (not shown), in the context of an FB-DIMM.
- FIG. 4 shows a timing design 400 of a buffer chip that makes a buffered stack of DRAM circuits mimic longer CAS latency DRAM to a memory controller, in accordance with another embodiment.
- the design of the buffer chip may be implemented in the context of the architecture and environment of FIGS. 2-3 .
- the design of the buffer chip may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- any delay through a buffer chip may be made transparent to a memory controller of a host system (e.g. see the host system 204 of FIGS. 2A-E , etc.) utilizing the buffer chip.
- the buffer chip may buffer a stack of DRAM circuits such that the buffered stack of DRAM circuits appears as at least one larger capacity DRAM circuit with higher CAS latency.
- Such delay may be a result of the buffer chip being located electrically between the memory bus of the host system and the stacked DRAM circuits, since most or all of the signals that connect the memory bus to the DRAM circuits pass through the buffer chip. A finite amount of time may therefore be needed for these signals to traverse through the buffer chip.
- industry standard protocols for memory e.g. (DDR SDRAM), DDR2 SDRAM, etc.
- DDR SDRAM digital versatile RAM
- DDR2 SDRAM DDR2 SDRAM
- Industry standard protocols for memory e.g. (DDR, SDRAM), DDR2 SDRAM, etc.
- Such industry standard protocols define the properties of a register chip and AMB but not the properties of the buffer chip 202 , etc. Thus, the signal delay through the buffer chip may violate the specifications of industry standard protocols.
- the buffer chip may provide a one-half clock cycle delay between the buffer chip receiving address and control signals from the memory controller (or optionally from a register chip, an AMB, etc.) and the address and control signals being valid at the inputs of the stacked DRAM circuits.
- the data signals may also have a one-half clock cycle delay in traversing the buffer chip, either from the memory controller to the DRAM circuits or from the DRAM circuits to the memory controller.
- the one-half clock cycle delay set forth above is set forth for illustrative purposes only and thus should not be construed as limiting in any manner whatsoever.
- a one clock cycle delay, a multiple clock cycle delay (or fraction thereof), and/or any other delay amount is incorporated, for that matter.
- the aforementioned delay may be coordinated among multiple signals such that different signals are subject to time-shifting with different relative directions/magnitudes, in an organized fashion.
- the cumulative delay through the buffer chip (e.g. the sum of a first delay 402 of the address and control signals through the buffer chip and a second delay 404 of the data signals through the buffer chip) is j clock cycles.
- the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with a CAS latency 408 of i+j clocks, where i is the native CAS latency of the DRAM circuits.
- the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with a CAS latency of 5 (i.e. 4+1).
- the buffer chip may make the buffered stack appear as one or more larger DRAM circuits with a CAS latency of 6 (i.e. 4+2).
- FIG. 5 shows the write data timing 500 expected by a DRAM circuit in a buffered stack, in accordance with yet another embodiment.
- the write data timing 500 may be implemented in the context of the architecture and environment of FIGS. 1-4 . Of course, however, the write data timing 500 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- Designing a buffer chip i.e. see the buffer chip 202 of FIGS. 2A-E , etc.
- a buffered stack appears as at least one larger capacity DRAM circuit with higher CAS latency
- the DDR2 SDRAM protocol may specify that the write CAS latency is one less than the read CAS latency. Therefore, since the buffered stack appears as a DDR2 SDRAM with a read CAS latency of 6, the memory controller may use a write CAS latency of 5 (see 502 ) when scheduling a write operation to the buffered stack.
- the DRAM circuits may require a write CAS latency of 3 (see 504 ).
- the write data from the memory controller may arrive at the buffer chip later than when the DRAM circuits require the data.
- the buffer chip may delay such write operations to alleviate any of such timing problems. Such delay in write operations will be described in more detail with respect to FIG. 6 below.
- FIG. 6 shows write operations 600 delayed by a buffer chip, in accordance with still yet another embodiment.
- the write operations 600 may be implemented in the context of the architecture and environment of FIGS. 1-5 .
- the write operations 600 may be used in any desired environment.
- the aforementioned definitions may apply during the present description.
- a buffer chip may provide an additional delay, over and beyond the delay of the address and control signals through the buffer chip, between receiving the write operation and address from the memory controller (and/or optionally from a register and/or AMB, etc.), and sending it to the DRAM circuits in the stack.
- the additional delay may be equal to j clocks, where j is the cumulative delay of the address and control signals through the buffer chip and the delay of the data signals through the buffer chip.
- the write address and operation may be delayed by a register chip on a DIMM, by an AMB, or by the memory controller.
- FIG. 7 shows early write data 700 from an AMB, in accordance with another embodiment.
- the early write data 700 may be implemented in the context of the architecture and environment of FIGS. 1-5 .
- the early write data 700 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- an AMB on an FB-DIMM may be designed to send write data earlier to buffered stacks instead of delaying the write address and operation, as described in reference to FIG. 6 .
- an early write latency 702 may be utilized to send the write data to the buffered stack.
- correct timing of the write operation at the inputs of the DRAM circuits in the stack may be entered.
- a buffer chip (e.g. see the buffer ship 202 of FIGS. 2A-E , etc.) may have a cumulative latency of 2, in which case, the AMB may send the write data 2 clock cycles earlier to the buffered stack. It should be noted that this scheme may not be possible in the case of registered DIMMs since the memory controller sends the write data directly to the buffered stacks. As an option, a memory controller may be designed to send write data earlier so that write operations have the correct timing at the input of the DRAM circuits in the stack without requiring the buffer chip to delay the write address and operation.
- FIG. 8 shows address bus conflicts 800 caused by delay write operations, in accordance with yet another embodiment.
- the delaying of the write addresses and operations may be performed by a buffer chip, or optionally a register, AMB, etc., in a manner that is completely transparent to the memory controller of a host system.
- the memory controller since the memory controller is unaware of this delay, it may schedule subsequent operations, such as for example activate or precharge operations, which may collide with the delayed writes on the address bus from the buffer chip to the DRAM circuits in the stack.
- an activate operation 802 may interfere with a write operation 804 that has been delayed.
- a delay of activate operations may be employed, as will be described in further detail with respect to FIG. 9 .
- FIGS 9 A-B show variable delays 900 and 950 of operations through a buffer chip, in accordance with another embodiment.
- the variable delays 900 and 950 may be implemented in the context of the architecture and environment of FIGS. 1-8 .
- the variable delays 900 and 950 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- either the write operation or the precharge/activate operation may be delayed.
- a buffer chip e.g. see the buffer chip 202 of FIGS. 2A-E , etc.
- the buffer chip may delay the precharge/activate operations 952 A-C/ 902 -C.
- the buffer chip may make the buffered stack appear as one or more larger capacity DRAM circuits that have longer tRCD (RAD to CAS delay) and tRP (i.e. precharge time) parameters.
- the buffered stack may appear as one or more larger capacity DRAM circuits with a read CAS latency of 6 clock cycles to the memory controller.
- the buffered stack may appear as one or more larger capacity DRAM circuits with tRCD of 6 clock cycles and tRP of 6 clock cycles in order to allow a buffer chip (e.g., see the buffer chip 202 of FIGS.
- the memory controller may schedule a column operation to a bank 6 clock cycles after an active (e.g. row) operation to the same bank.
- the DRAM circuits in the stack may actually have a tRCD of 4 clock cycles.
- the buffer chip may have the ability to delay the activate operation by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits in the stack while still ensuring correct read and write timing on the channel between the memory controller and the buffered stack.
- the buffer chip may issue the activate operation to the DRAM circuits one, two, or three clock cycles after it receives the activate operation from the memory controller, register, or AMB.
- the actual delay of the activate operation through the buffer chip may depend on the presence of absence of other DRAM operations that may conflict with the activate operation, and may optionally change from one activate operation to another.
- the buffered stack may appear to the memory controller as at least one larger capacity DRAM circuit with a tRP of 6 clock cycles, the memory controller may schedule a subsequent activate (e.g. row) operation to a bank a minimum of 6 clock cycles after issuing a precharge operation to that bank.
- the buffer chip may have the ability to delay issuing the precharge operation to the DRAM circuits in the stack by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits to the stack.
- the buffer chip may still delay issuing a precharge operation in order to satisfy the tRAS requirement of the DRAM circuits.
- the precharge operation to the same bank may be delayed by the buffer chip to satisfy the tRAS requirement of the DRAM circuits.
- the buffer chip may issue the precharge operation to the DRAM circuits one, two, or three clock cycles after it receives the precharge operation from the memory controller, register, or AMB.
- the actual delay of the precharge operation through the buffer chip may depend on the presence or absence of address bus conflicts or tRAS violations, and may change from one precharge operation to another.
- FIG. 10 shows a buffered stack 1000 of four 512 Mb DRAM circuits mapped to a single 2 Gb DRAM circuit, in accordance with yet another embodiment.
- the buffered stack 1000 may be implemented in the context of the architecture and environment of FIGS. 1-9 .
- the buffered stack 1000 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- the multiple DRAM circuits 1002 A-D buffered in the stack by the buffer chip 1004 may appear as at least one larger capacity DRAM circuit to the memory controller.
- the combined power dissipation of such DRAM circuits 1002 A-D may be much higher than the power dissipation of a monolithic DRAM of the same capacity.
- the buffered stack may consist of four 512 Mb DDR2 SDRAM circuits that appear to the memory controller as a single 2 Gb DDR2 SDRAM circuit.
- the power dissipation of all four DRAM circuits 1002 A-D in the stack may be much higher than the power dissipation of a monolithic 2 Gb DDR2 SDRAM.
- a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM built using monolithic DRAM circuits. This increased power dissipation may limit the widespread adoption of DIMMs that use buffered stacks.
- the DRAM circuits 1002 A-D may be opportunistically placed in a precharge power down mode using the clock enable (CKE) pin of the DRAM circuits 1002 A-D.
- CKE clock enable
- a single rank registered DIMM R-DIMM
- a 2 Gb DDR2 SDRAM may generally have eight banks as specified by JEDEC. Therefore, the buffer chip 1004 may map each 512 Mb DRAM circuit in the stack to two banks of the equivalent 2 Gb DRAM, as shown.
- the memory controller of the host system may open and close pages in the banks of the DRAM circuits 1002 A-D based on the memory requests it receives from the rest of the system.
- no more than one page may be able to be open in a bank at any given time.
- a DRAM circuit 1002 A-D since each DRAM circuit 1002 A-D in the stack is mapped to two banks of the equivalent larger DRAM, at any given time a DRAM circuit 1002 A-D may have two open pages, one open page, or no open pages.
- the power management scheme may place that DRAM circuit 1002 A-D in the precharge power down mode by de-asserting its CKE input.
- the CKE inputs of the DRAM circuits 1002 A-D in a stack may be controlled by the buffer chip 1004 , by a chip on an R-DIMM, by an AMB on a FB-DIMM, or by the memory controller in order to implement the power management scheme described hereinabove.
- this power management scheme may be particularly efficient when the memory controller implements a closed page policy.
- Another optional power management scheme may include mapping a plurality of DRAM circuits to a single bank of the larger capacity DRAM seen by the memory controller. For example, a buffered stack of sixteen x4 256 Mb DDR2 SDRAM circuits may appear to the memory controller as a single x4 Gb DDR2 SDRAM circuit. Since a 4 Gb DDR2 SDRAM circuit is specified by JEDEC to have eight banks, each bank of the 4 Gb DDR2 SDRAM circuit may be 512 Mb. Thus, two of the 256 Mb DDR2 SDRAM circuits may be mapped by the buffer chip 1004 to a single bank of the equivalent 4 Gb DDR2 SDRAM circuit seen by the memory controller.
- bank 0 of the 4 Gb DDR2 SDRAM circuit may be mapped by the buffer chip to two 256 Mb DDR2 SDRAM circuits (e.g. DRAM A and DRAM B) in the stack.
- DRAM A and DRAM B may be in the active state at any given time.
- DRAM B may be placed in the precharge power down mode by de-asserting its CKE input.
- DRAM A may be placed in the precharge power down mode by de-asserting its CKE input.
- This technique may ensure that if p DRAM circuits are mapped to a bank of the larger capacity DRAM circuit seen by the memory controller, then p-1 of the p DRAM circuits may continuously (e.g. always, etc.) be subjected to a power saving operation.
- the power saving operation may, for example, comprise operating in precharge power down mode except when refresh is required.
- power-savings may also occur in other embodiments without such continuity.
- FIG. 11 illustrates a method 1100 for refreshing a plurality of memory circuits, in accordance with still yet another embodiment.
- the method 1100 may be implemented in the context of the architecture and environment of any one or more of FIGS. 1-10 .
- the method 1100 may be carried out by the interface circuit 102 of FIG. 1 .
- the method 1100 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- a refresh control signal is received in operation 1102 .
- such refresh control signal may, for example, be received from a memory controller, where such memory controller intends to refresh a simulated memory circuit(s).
- a plurality of refresh control signals are sent to a plurality of the memory circuits (e.g. see the memory circuits 104 A, 104 B, 104 N of FIG. 1 , etc.), at different times. See operation 1104 .
- Such refresh control signals may or may not each include the refresh control signal of operation 1102 or an instantiation/copy thereof.
- the refresh control signals may each include refresh control signals that are different in at least one aspect (e.g. format, content, etc.).
- At least one first refresh control signal may be sent to a first subset (e.g. of one or more) of the memory circuits at a first time and at least one second refresh control signal may be sent to a second subset (e.g. of one or more) of the memory circuits at a second time.
- a single refresh control signal may be sent to a plurality of the memory circuits (e.g. a group of memory circuits, etc.).
- a plurality of the refresh control signals may be sent to a plurality of the memory circuits.
- refresh control signals may be sent individually or to groups of memory circuits, as desired.
- the refresh control signals may be sent after a delay in accordance with a particular timing.
- the timing in which the refresh control signals are sent to the memory circuits may be selected to minimize a current draw. This may be accomplished in various embodiments by staggering a plurality of refresh control signals.
- the timing in which the refresh control signals are sent to the memory circuits may be selected to comply with a tRFC parameter associated with each of the memory circuits.
- DRAM circuits of any desired size may receive periodic refresh operations to maintain the integrity of data therein.
- a memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits.
- a refresh control signal is issued to a DRAM circuit, a minimum time (e.g. denoted by tRFC) may be required to elapse before another control signal may be issued to that DRAM circuit.
- the tRFC parameter may therefore increase as the size of the DRAM circuit increases.
- the buffer chip When the buffer chip receives a refresh control signal from the memory controller, it may refresh the smaller DRAM circuits within the span of time specified by the tRFC associated with the emulated DRAM circuit. Since the tRFC of the emulated DRAM circuits is larger than that of the smaller DRAM circuits, it may not be necessary to issue refresh control signals to all of the smaller DRAM circuits simultaneously. Refresh control signals may be issued separately to individual DRAM circuits or may be issued to groups of DRAM circuits, provided that the tRFC requirement of the smaller DRAM circuits is satisfied by the time the tRFC of the emulated DRAM circuits has elapsed. In use, the refreshes may be spaced to minimize the peak current draw of the combination buffer chip and DRAM circuit set during a refresh operation.
Abstract
Description
- The present invention relates to memory, and more particularly to multiple-memory circuit systems.
- The memory capacity requirements of computers in general, and servers in particular, are increasing rapidly due to various trends such as 64-bit processors and operating systems, multi-core processors, virtualization, etc. However, other industry trends such as higher memory bus speeds and small form factor machines, etc. are reducing the number of memory module slots in such systems. Thus, a need exists in the industry for large capacity memory circuits to be used in such systems.
- However, there is also an exponential relationship between a capacity of monolithic memory circuits and a price associated therewith. As a result, large capacity memory modules may be cost prohibitive. To this end, the use of multiple smaller capacity memory circuits is a cost-effective approach to increasing such memory capacity.
- A system and method are provided, wherein a first component and a second component are operable to interface a plurality of memory circuits and a system.
-
FIG. 1 illustrates a multiple memory circuit framework, in accordance with one embodiment. -
FIGS. 2A-2E show various configurations of a buffered stack of dynamic random access memory (DRAM) circuits with a buffer chip, in accordance with various embodiments. -
FIG. 2F illustrates a method for storing at least a portion of information received in association with a first operation for use in performing a second operation, in accordance with still another embodiment. -
FIG. 3 shows a high capacity dual in-line memory module (DIMM) using buffered stacks, in accordance with still yet another embodiment. -
FIG. 4 shows a timing design of a buffer chip that makes a buffered stack of DRAM circuits mimic longer column address strobe (CAS) latency DRAM to a memory controller, in accordance with another embodiment. -
FIG. 5 shows the write data timing expected by DRAM in a buffered stack, in accordance with yet another embodiment. -
FIG. 6 shows write control signals delayed by a buffer chip, in accordance with still yet another embodiment. -
FIG. 7 shows early write data from an advanced memory buffer (AMB), in accordance with another embodiment. -
FIG. 8 shows address bus conflicts caused by delayed write operations, in accordance with yet another embodiment. -
FIGS. 9A-B show variable delays of operations through a buffer chip, in accordance with another embodiment. -
FIG. 10 shows a buffered stack of four 512 Mb DRAM circuits mapped to a single 2 Gb DRAM circuit, in accordance with yet another embodiment. -
FIG. 11 illustrates a method for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. -
FIG. 1 illustrates a multiplememory circuit framework 100, in accordance with one embodiment. As shown, included are aninterface circuit 102, a plurality ofmemory circuits system 106. In the context of the present description,such memory circuits - For example, in various embodiments, one or more of the
memory circuits memory circuits - In additional embodiments, the
memory circuits memory circuits memory circuits more memory circuits more memory circuits other memory circuits more memory circuits FIG. 1 in accordance with one embodiment, it should be noted that any plurality ofmemory circuits - Further in the context of the present description, the
system 106 may include any system capable of requesting and/or initiating a process that results in an access of thememory circuits system 106 may accomplish this utilizing a memory controller (now shown), or any other desired mechanism. In one embodiment,such system 106 may include a host system in the form of a desktop computer, lap-top computer, server, workstation, a personal digital assistant (PDA) device, a mobile phone device, a television, a peripheral device (e.g. printer, etc.). Of course, such examples are set forth for illustrative purposes only, as any system meeting the above definition may be employed in the context of thepresent framework 100. - Turning now to the
interface circuit 102,such interface circuit 102 may include any circuit capable of indirectly or directly communicating with thememory circuits system 106. In various optional embodiments, theinterface circuit 102 may include one or more interface circuits, a buffer chip, etc. Embodiments involving such a buffer chip will be set forth hereinafter during reference to subsequent figures. In still other embodiments, theinterface circuit 102 may or may not be manufactured in monolithic form. - While the
memory circuits interface circuit 102, andsystem 106 are shown to be separate parts, it is contemplated that any of such parts (or portions thereof) may or may not be integrated in any desired manner. In various embodiments, such optional integration may involve simply packaging such parts together (e.g. stacking the parts, etc.) and/or integrating them monolithically. Just by way of example, in various optional embodiments, one or more portions (or all, for that matter) of theinterface circuit 102 may or may not be packaged with one or more of thememory circuits memory circuit framework 100 will be set forth hereinafter during reference toFIGS. 2A-2E , and 3 et al. - In use, the
interface circuit 102 may be capable of various functionality, in the context of different embodiments. More illustrative information will now be set forth regarding such optional functionality which may or may not be implemented in the context ofsuch interface circuit 102, per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. For example, any of the following features may be optionally incorporated with or without the exclusion of other features described. - For instance, in one optional embodiment, the
interface circuit 102 interfaces a plurality ofsignals 108 that are communicated between thememory circuits system 106. As shown, such signals may, for example, include address/control/clock signals, etc. In one aspect of the present embodiment, theinterfaced signals 108 may represent all of the signals that are communicated between thememory circuits system 106. In other aspects, at least a portion ofsignals 110 may travel directly between thememory circuits system 106 or component thereof [e.g. register, advanced memory buffer (AMB), memory controller, or any other component thereof, where the term component is defined hereinbelow]. In various embodiments, the number of the signals 108 (vs. a number of thesignals 110, etc.) may vary such that thesignals 108 are a majority or more (L>M), etc. - In yet another embodiment, the
interface circuit 102 may be operable to interface a first number ofmemory circuits system 106 for simulating at least one memory circuit of a second number. In the context of the present description, the simulation may refer to any simulating, emulating, disguising, transforming, converting, and/or the like that results in at least one aspect (e.g. a number in this embodiment, etc.) of thememory circuits system 106. In different embodiments, the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner. For instance, in the context of electrical simulation, a number of pins, wires, signals, etc. may be simulated, while, in the context of logical simulation, a particular function may be simulated. In the context of protocol, a particular protocol (e.g. DDR3, etc.) may be simulated. - In still additional aspects of the present embodiment, the second number may be more or less than the first number. Still yet, in the latter case, the second number may be one, such that a single memory circuit is simulated. Different optional embodiments which may employ various aspects of the present embodiment will be set forth hereinafter during reference to
FIGS. 2A-2E , and 3 et al. - In still yet another embodiment, the
interface circuit 102 may be operable to interface thememory circuits system 106 for simulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of thememory circuits memory circuits - In the case of the signal, such signal may refer to a control signal (e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation; etc.), a data signal, a logical or physical signal, or any other signal for that matter. For instance, a number of the aforementioned signals may be simulated to appear as fewer or more signals, or even simulated to correspond to a different type. In still other embodiments, multiple signals may be combined to stimulate another signal. Even still, a length of time in which a signal is asserted may be simulated to be different.
- In the case of protocol, such may, in one exemplary embodiment, refer to a particular standard protocol. For example, a number of
memory circuits memory circuits - In the case of capacity, such may refer to a memory capacity (which may or may not be a function of a number of the
memory circuits interface circuit 102 may be operable for simulating at least one memory circuit with a first memory capacity that is greater than (or less than) a second memory capacity of at least one of thememory circuits - In the case where the aspect is timing-related, the timing may possibly relate to a latency (e.g. time delay, etc.). In one aspect of the present embodiment, such latency may include a column address strobe (CAS) latency, which refers to a latency associated with accessing a column of data. Still yet, the latency may include a row address to column address latency (tRCD), which refers to a latency required between the row address strobe (RAS) and CAS. Even still, the latency may include a row precharge latency (tRP), which refers a latency required to terminate access to an open row, and open access to a next row. Further, the latency may include an activate to precharge latency (tRAS), which refers to a latency required to access a certain row of data between a activate operation and a precharge operation. In any case, the
interface circuit 102 may be operable for simulating at least one memory circuit with a first latency that is longer (or shorter) than a second latency of at least one of thememory circuits FIGS. 2A-2E , and 3 et al. - In still another embodiment, a component may be operable to receive a signal from the
system 106 and communicate the signal to at least one of thememory circuits memory circuits system 106 after a delay. - As an option, the delay may include a cumulative delay associated with any one or more of the aforementioned signals. Even still, the delay may result in a time shift of the signal forward and/or back in time (with respect to other signals). Of course, such forward and backward time shift may or may not be equal in magnitude. In one embodiment, this time shifting may be accomplished by utilizing a plurality of delay functions which each apply a different delay to a different signal. In still additional embodiments, the aforementioned shifting may be coordinated among multiple signals such that different signals are subject to shifts with different relative directions/magnitudes, in an organized fashion.
- Further, it should be noted that the aforementioned component may, but need not necessarily take the form of the
interface circuit 102 ofFIG. 1 . For example, the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc. Such register may, in various embodiments, include a Joint Electron Device Engineering Council (JEDEC) register, a JEDEC register including one or more functions set forth herein, a register with forwarding, storing, and/or buffering capabilities, etc. Different optional embodiments which employ various features of the present embodiment will be set forth hereinafter during reference toFIGS. 4-7 , and 9A-B et al. - In a power-saving embodiment, at least one of a plurality of
memory circuits system 106. In one embodiment, such identification may involve determining whether a page [i.e. any portion of any memory(s), etc.] is being accessed in at least one of the plurality ofmemory circuits memory circuits - In response to the identification of the at least one
memory circuit memory circuit - Similar to one or more of the previous embodiments, the present functionality or a portion thereof may be carried out utilizing any desired component. For example, such component may, but need not necessarily take the form of the
interface circuit 102 ofFIG. 1 . In other embodiments, the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc. One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference toFIG. 10 . - In still yet another embodiment, a plurality of the aforementioned components may serve, in combination, to interface the
memory circuits system 106. In various embodiments, two, three, four, or more components may accomplish this. Also, the different components may be relatively configured in any desired manner. For example, the components may be configured in parallel, serially, or a combination thereof. In addition, any number of the components may be allocated to any number of thememory circuits - Further, in the present embodiment, each of the plurality of components may be the same or different. Still yet, the components may share the same or similar interface tasks and/or perform different interface tasks. Such interface tasks may include, but are not limited to simulating one or more aspects of a memory circuit, performing a power savings/refresh operation, carrying out any one or more of the various functionalities set forth herein, and/or any other task relevant to the aforementioned interfacing. One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference to
FIG. 3 . - Additional illustrative information will now be set forth regarding various optional embodiments in which the foregoing techniques may or may not be implemented, per the desires of the user. For example, an embodiment is set forth for storing at least a portion of information received in association with a first operation for use in performing a second operation. See
FIG. 2F . Further, a technique is provided for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. SeeFIG. 11 . - It should again be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. Any of the following features may be optionally incorporated with or without the exclusion of other features described.
-
FIGS. 2A-2E show various configurations of a buffered stack ofDRAM circuits 206A-D with abuffer chip 202, in accordance with various embodiments. As an option, the various configurations to be described in the following embodiments may be implemented in the context of the architecture and/or environment ofFIG. 1 . Of course, however, they may also be carried out in any other desired environment (e.g. using other memory types, etc.). It should also be noted that the aforementioned definitions may apply during the present description. - As shown in each of such figures, the
buffer chip 202 is placed electrically between anelectronic host system 204 and a stack ofDRAM circuits 206A-D. In the context of the present description, a stack may refer to any collection of memory circuits. Further, thebuffer chip 202 may include any device capable of buffering a stack of circuits (e.g. DRAM circuits 206A-D, etc.). Specifically, thebuffer chip 202 may be capable of buffering the stack ofDRAM circuits 206A-D to electrically and/or logically resemble at least one larger capacity DRAM circuit to thehost system 204. IN this way, the stack ofDRAM circuits 206A-D may appear as a smaller quantity of larger capacity DRAM circuits to thehost system 204. - For example, the stack of
DRAM circuits 206A-D may include eight 512 Mb DRAM circuits. Thus, thebuffer chip 202 may buffer the stack of eight 512 Mb DRAM circuits to resemble a single 4 Gb DRAM circuit to a memory controller (not shown) of the associatedhost system 204. In another example, thebuffer chip 202 may buffer the stack of eight 512 Mb DRAM circuits to resemble two 2 Gb DRAM circuits to a memory controller of an associatedhost system 204. - Further, the stack of
DRAM circuits 206A-D may include any number of DRAM circuits. Just by way of example, abuffer chip 202 may be connected to 2, 4, 8 ormore DRAM circuits 206A-D. Also, theDRAM circuits 206A-D may be arranged in a single stack, as shown inFIGS. 2A-2D . - The
DRAM circuits 206A-D may be arranged on a single side of thebuffer chip 202, as shown inFIGS. 2A-2D . Of course, however, theDRAM circuits 206A-D may be located on both sides of thebuffer chip 202 shown inFIG. 2E . Thus, for example, abuffer chip 202 may be connected to 16 DRAM circuits with 8 DRAM circuits on either side of thebuffer chip 202, where the 8 DRAM circuits on each side of thebuffer chip 202 are arranged in two stacks of four DRAM circuits. - The
buffer chip 202 may optionally be a part of the stack ofDRAM circuits 206A-D. Of course, however, thebuffer chip 202 may also be separate from the stack ofDRAM circuits 206A-D. In addition, thebuffer chip 202 may be physically located anywhere in the stack ofDRAM circuits 206A-D, wheresuch buffer chip 202 electrically sits between theelectronic host system 204 and the stack ofDRAM circuits 206A-D. - In one embodiment, a memory bus (now shown) may connect to the
buffer chip 202, and thebuffer chip 202 may connect to each of theDRAM circuits 206A-D in the stack. As shown inFIGS. 2A-2D , thebuffer chip 202 may be located at the bottom of the stack ofDRAM circuits 206A-D (e.g. the bottom-most device in the stack). As another option, and as shown inFIG. 2E , thebuffer chip 202 may be located in the middle of the stack ofDRAM circuits 206A-D. As still yet another option, thebuffer chip 202 may be located at the top of the stack ofDRAM circuits 206A-D (e.g. the top-most device in the stack). Of course, however, thebuffer chip 202 may be located anywhere between the two extremities of the stack ofDRAM circuits 206A-D. - The electrical connections between the
buffer chip 202 and the stack ofDRAM circuits 206A-D may be configured in any desired manner. In one optional embodiment; address, control (e.g. command, etc.), and clock signals may be common to allDRAM circuits 206A-D in the stack (e.g. using one common bus). As another option, there may be multiple address, control and clock busses. As yet another option, there may be individual address, control and clock busses to eachDRAM circuit 206A-D. Similarly, data signals may be wired as one common bus, several busses or as an individual bus to eachDRAM circuit 206A-D. Of course, it should be noted that any combination of such configurations may also be utilized. - For example, as shown in
FIG. 2A , the stack ofDRAM circuits 206A-D may have one common address, control andclock bus 208 with individual data busses 210. In another example, as shown inFIG. 2B , the stack ofDRAM circuits 206A-D may have two address, control and clock busses 208 along with two data busses 210. In still yet another example, as shown inFIG. 2C , the stack ofDRAM circuits 206A-D may have one address, control andclock bus 208 together with two data busses 210. In addition, as shown inFIG. 2D , the stack ofDRAM circuits 206A-D may have one common address, control andclock bus 208 and onecommon data bus 210. It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized. - These configurations may therefore allow for the
host system 204 to only be in contact with a load of thebuffer chip 202 on the memory bus. In this way, any electrical loading problems (e.g. bad signal integrity, improper signal timing, etc.) associated with the stackedDRAM circuits 206A-D may (but not necessarily) be prevented, in the context of various optional embodiments. -
FIG. 2F illustrates amethod 280 for storing at least a portion of information received in association with a first operation for use in performing a second operation, in accordance with still yet another embodiment. As an option, themethod 280 may be implemented in the context of the architecture and/or environment of any one or more ofFIGS. 1-2E . For example, themethod 280 may be carried out by theinterface circuit 102 ofFIG. 1 . Of course, however, themethod 280 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - In
operation 282, first information is received in association with a first operation to be performed on at least one of a plurality of memory circuits (e.g. see thememory circuits FIG. 1 , etc.). In various embodiments, such first information may or may not be received coincidently with the first operation, as long as it is associated in some capacity. Further, the first operation may, in one embodiment, include a row operation. In such embodiment, the first information may include address information (e.g. a set of address bits, etc.). - For reasons that will soon become apparent, at least a portion of the first information is stored. Note
operation 284. Still yet, inoperation 286, second information is received in association with a second operation. Similar to the first information, the second information may or may not be received coincidently with the second operation, and may include address information. Such second operation, however, may, in one embodiment, include a column operation. - To this end, the second operation may be performed utilizing the stored portion of the first information in addition to the second information. See
operation 288. More illustrative information will now be set forth regarding various optional features with which the foregoingmethod 280 may or may not be implemented, per the desires of the user. Specifically, an example will be set for illustrating the manner in which themethod 280 may be employed for accommodating a buffer chip that is simulating at least one aspect of a plurality of memory circuits. - In particular, the present example of the
method 280 ofFIG. 2F will be set forth in the context of the various components (e.g. buffer chip 202, etc.) shown in the embodiments ofFIGS. 2A-2E . It should be noted that, since the buffered stack ofDRAM circuits 206A-D may appear to the memory controller of thehost system 204 as one or more larger capacity DRAM circuits, thebuffer chip 202 may receive more address bits from the memory controller than are required by theDRAM circuits 206A-D in the stack. These extra address bits may be decoded by thebuffer chip 202 to individually select theDRAM circuits 206A-D in the stack, utilizing separate chip select signals to each of theDRAM circuits 206A-D in the stack. - For example, a stack of four
x4 1Gb DRAM circuits 206A-D behind abuffer chip 202 may appear as asingle x4 4 Gb DRAM circuit to the memory controller. Thus, the memory controller may provide sixteen row address bits and three bank address bits during a row (e.g. activate) operation, and provide eleven column address bits and three bank address bits during a column (e.g. read or write) operation. However, theindividual DRAM circuits 206A-D in the stack may require only fourteen row address bits and three bank address bits for a row operation, and eleven column address bits and three bank address bits during a column operation. - As a result, during a row operation in the above example, the
buffer chip 202 may receive two address bits more than are needed by eachDRAM circuit 206A-D in the stack. Thebuffer chip 202 may therefore use the two extra address bits from the memory controller to select one of the fourDRAM circuits 206A-D in the stack. In addition, thebuffer chip 202 may receive the same number of address bits from the memory controller during a column operation as are needed by eachDRAM circuit 206A-D in the stack. - This, in order to select the
correct DRAM circuit 206A-D in the stack during a column operation, thebuffer chip 202 may be designed to store the two extra address bits provided during a row operation and use the two stored address bits to select thecorrect DRAM circuit 206A-D during the column operation. The mapping between a system address (e.g. address from the memory controller, including the chip select signal(s)) and a device address (e.g. the address, including the chip select signals, presented to theDRAM circuits 206A-D in the stack) may be performed by thebuffer chip 202 in various manners. - In one embodiment, a lower order system row address and bank address bits may be mapped directly to the device row address and bank address inputs. In addition, the most significant row address bit(s) and, optionally, the most significant bank address bit(s), may be decoded to generate the chip select signals for the
DRAM circuits 206A-D in the stack during a row operation. The address bits used to generate the chip select signals during the row operation may also be stored in an internal lookup table by thebuffer chip 202 for one or more clock cycles. During a column operation, the system column address and bank address bits may be mapped directly to the device column address and bank address inputs, while the stored address bits may be decoded to generate the chip select signals. - For example, address may be mapped between four 512
Mb DRAM circuits 206A-D that simulate a single 2 Gb DRAM circuits utilizing thebuffer chip 202. There may be 15 row address bits from thesystem 204, such thatrow address bits 0 through 13 are mapped directly to theDRAM circuits 206A-D. There may also be 3 bank address bits from thesystem 204, such thatbank address bits 0 through 1 mapped directly to theDRAM circuits 206A-D. - During a row operation, the
bank address bit 2 and the row address bit 14 may be decoded to generate the 4 chip select signals for each of the fourDRAM circuits 206A-D. Row address bit 14 may be stored during the row operation using the bank address as the index. In addition, during the column operation, the stored row address bit 14 may again used withbank address bit 2 to form the four DRAM chip select signals. - As another example, addresses may be mapped between four 1
Gb DRAM circuits 206A-D that simulate a single 4 Gb DRAM circuits utilizing thebuffer chip 202. There may be 16 row address bits from thesystem 204, such thatrow address bits 0 through 14 are mapped directly to theDRAM circuits 206A-D. There may also be 3 bank address bits from thesystem 204, such thatbank address bits 0 through 3 are mapped directly to theDRAM circuits 206A-D. - During a row operation, row address bits 14 and 15 may be decoded to generate the 4 chip select signals for each of the four
DRAM circuits 206A-D. Row address bits 14 and 15 may also be stored during the row operation using the bank address as the index. During the column operation, the stored row address bits 14 and 15 may again be used to form the four DRAM chip select signals. - In various embodiments, this mapping technique may optionally be used to ensure that there are no unnecessary combinational logic circuits in the critical timing path between the address input pins and address output pins of the
buffer chip 202. Such combinational logic circuits may instead be used to generate the individual chip select signals. This may therefore allow the capacitive loading on the address outputs of thebuffer chip 202 to be much higher than the loading on the individual chip select signal outputs of thebuffer chip 202. - In another embodiment, the address mapping may be performed by the
buffer chip 202 using some of the bank address signals from the memory controller to generate the individual chip select signals. Thebuffer chip 202 may store the higher order row address bits during a row operation using the bank address as the index, and then may use the stored address bits as part of the DRAM circuit bank address during a column operation. This address mapping technique may require an optional lookup table to be positioned in the critical timing path between the address inputs from the memory controller and the address outputs, to theDRAM circuits 206A-D in the stack. - For example, addresses may be mapped between four 512
Mb DRAM circuits 206A-D that simulate a single 2 Gb DRAM utilizing thebuffer chip 202. There may be 15 row address bits from thesystem 204, where row addressbits 0 through 13 are mapped directly to theDRAM circuits 206A-D. There may also be 3 bank address bits from thesystem 204, such thatbank address bit 0 is used as a DRAM circuit bank address bit for theDRAM circuits 206A-D. - In addition, row address bit 14 may be used as an additional DRAM circuit bank address bit. During a row operation, the
bank address bits DRAM circuits 206A-D. Further, row address bit 14 may be stored during the row operation. During the column operation, the stored row address bit 14 may again be used along with the bank address bit 0 from the system to form the DRAM circuit bank address. - In both of the above described address mapping techniques, the column address from the memory controller may be mapped directly as the column address to the
DRAM circuits 206A-D in the stack. Specifically, this direct mapping may be performed since each of theDRAM circuits 206A-D in the stack, even if of the same width but different capacities (e.g. from 512 Mb to 4 Gb), may have the same page sizes. In an optional embodiment, address A[10] may be used by the memory controller to enable or disable auto-precharge during a column operation. Therefore, thebuffer chip 202 may forward A[10] from the memory controller to theDRAM circuits 206A-D in the stack without any modifications during a column operation. - In various embodiments, it may be desirable to determine whether the simulated DRAM circuit behaves according to a desired DRAM standard or other design specification. A behavior of many DRAM circuits is specified by the JEDEC standards and it may be desirable, in some embodiments, to exactly simulate a particular JEDEC standard DRAM. The JEDEC standard defines control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals. For example, the JEDEC specification for a DDR2 DRAM is known as JESD79-2B.
- If it is desired, for example, to determine whether a JEDEC standard is met, the following algorithm may be used. Such algorithm checks, using a set of software verification tools for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as a desired standard or other design specification. This formal verification is quite feasible because the DRAM protocol described in a DRAM standard is typically limited to a few control signals (e.g. approximately 15 control signals in the case of the JEDEC DDR2 specification, for example).
- Examples of the aforementioned software verification tools include MAGELLAN supplied by SYNOPSYS, or other software verification tools, such as INCISIVE supplied by CADENCE, verification tools supplied by JASPER, VERIX supplied by REAL INTENT, 0-IN supplied by MENTOR CORPORATION, and others. These software verification tools use written assertions that correspond to the rules established by the DRAM protocol and specification. These written assertions are further included in the code that forms the logic description for the buffer chip. By writing assertions that correspond to the desired behavior of the simulated DRAM circuit, a proof may be constructed that determines whether the desired design requirements are met. In this way, one may test various embodiments for compliance with a standard, multiple standards, or other design specification.
- For instance, an assertion may be written that no two DRAM control signals are allowed to be issued to an address, control and clock bus at the same time. Although one may know which of the various buffer chip/DRAM stack configurations and address mappings that have been described herein are suitable, the aforementioned algorithm may allow a designer to prove that the simulated DRAM circuit exactly meets the required standard or other design specification. If, for example, an address mapping that uses a common bus for data and a common bus for address results in a control and clock bus that does not meet a required specification, alternative designs for buffer chips with other bus arrangements or alternative designs for the interconnect between the buffer chips may be used and tested for compliance with the desired standard or other design specification.
-
FIG. 3 shows ahigh capacity DIMM 300 using buffered stacks ofDRAM circuits 302, in accordance with still yet another embodiments. As an option, thehigh capacity DIMM 300 may be implemented in the context of the architecture and environment ofFIGS. 1 and/or 2A-F. Of course, however, thehigh capacity DIMM 300 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As shown, a
high capacity DIMM 300 may be created utilizing buffered stacks ofDRAM circuits 302. Thus, aDIMM 300 may utilize a plurality of buffered stacks ofDRAM circuits 302 instead of individual DRAM circuits, thus increasing the capacity of the DIMM. In addition, theDIMM 300 may include aregister 304 for address and operation control of each of the buffered stacks ofDRAM circuits 302. It should be noted that any desired number of buffered stacks ofDRAM circuits 302 may be utilized in conjunction with theDIMM 300. Therefore, the configuration of theDIMM 300, as shown, should not be construed as limiting in any way. - In an additional unillustrated embodiment, the
register 304 may be substituted with an AMB (not shown), in the context of an FB-DIMM. -
FIG. 4 shows atiming design 400 of a buffer chip that makes a buffered stack of DRAM circuits mimic longer CAS latency DRAM to a memory controller, in accordance with another embodiment. As an option, the design of the buffer chip may be implemented in the context of the architecture and environment ofFIGS. 2-3 . Of course, however, the design of the buffer chip may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - In use, any delay through a buffer chip (e.g. see the
buffer chip 202 ofFIGS. 2A-E , etc.) may be made transparent to a memory controller of a host system (e.g. see thehost system 204 ofFIGS. 2A-E , etc.) utilizing the buffer chip. In particular, the buffer chip may buffer a stack of DRAM circuits such that the buffered stack of DRAM circuits appears as at least one larger capacity DRAM circuit with higher CAS latency. - Such delay may be a result of the buffer chip being located electrically between the memory bus of the host system and the stacked DRAM circuits, since most or all of the signals that connect the memory bus to the DRAM circuits pass through the buffer chip. A finite amount of time may therefore be needed for these signals to traverse through the buffer chip. With the exception of register chips and advanced memory buffers (AMB), industry standard protocols for memory [e.g. (DDR SDRAM), DDR2 SDRAM, etc.] may not comprehend the buffer chip that sits between the memory bus and the DRAM. Industry standard protocols for memory [e.g. (DDR, SDRAM), DDR2 SDRAM, etc.] narrowly define the properties of chips that sit between host and memory circuits. Such industry standard protocols define the properties of a register chip and AMB but not the properties of the
buffer chip 202, etc. Thus, the signal delay through the buffer chip may violate the specifications of industry standard protocols. - In one embodiment, the buffer chip may provide a one-half clock cycle delay between the buffer chip receiving address and control signals from the memory controller (or optionally from a register chip, an AMB, etc.) and the address and control signals being valid at the inputs of the stacked DRAM circuits. Similarly, the data signals may also have a one-half clock cycle delay in traversing the buffer chip, either from the memory controller to the DRAM circuits or from the DRAM circuits to the memory controller. Of course, the one-half clock cycle delay set forth above is set forth for illustrative purposes only and thus should not be construed as limiting in any manner whatsoever. For example, other embodiments are contemplated where a one clock cycle delay, a multiple clock cycle delay (or fraction thereof), and/or any other delay amount is incorporated, for that matter. As mentioned earlier, in other embodiments, the aforementioned delay may be coordinated among multiple signals such that different signals are subject to time-shifting with different relative directions/magnitudes, in an organized fashion.
- As shown in
FIG. 4 , the cumulative delay through the buffer chip (e.g. the sum of afirst delay 402 of the address and control signals through the buffer chip and asecond delay 404 of the data signals through the buffer chip) is j clock cycles. Thus, the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with aCAS latency 408 of i+j clocks, where i is the native CAS latency of the DRAM circuits. - In one example, if the DRAM circuits in the tack have a native CAS latency of 4 and the address and control signals along with the data signals experience a one-half clock cycle delay through the buffer chip, then the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with a CAS latency of 5 (i.e. 4+1). In another example, if the address and control signals along with the data signals experience a 1 clock cycle delay through the buffer chip, then the buffer chip may make the buffered stack appear as one or more larger DRAM circuits with a CAS latency of 6 (i.e. 4+2).
-
FIG. 5 shows thewrite data timing 500 expected by a DRAM circuit in a buffered stack, in accordance with yet another embodiment. As an option, thewrite data timing 500 may be implemented in the context of the architecture and environment ofFIGS. 1-4 . Of course, however, thewrite data timing 500 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - Designing a buffer chip (i.e. see the
buffer chip 202 ofFIGS. 2A-E , etc.) so that a buffered stack appears as at least one larger capacity DRAM circuit with higher CAS latency may, in some embodiments, create a problem with the timing of write operations. For example, with respect to a buffered stack of DDR2 SDRAM circuits with a CAS latency of 4 that appear as a single larger DDR2 SDRAM with a CAS latency or 6 to the memory controller, the DDR2 SDRAM protocol may specify that the write CAS latency is one less than the read CAS latency. Therefore, since the buffered stack appears as a DDR2 SDRAM with a read CAS latency of 6, the memory controller may use a write CAS latency of 5 (see 502) when scheduling a write operation to the buffered stack. - However, since the native read CAS latency of the DRAM circuits is 4, the DRAM circuits may require a write CAS latency of 3 (see 504). As a result, the write data from the memory controller may arrive at the buffer chip later than when the DRAM circuits require the data. Thus, the buffer chip may delay such write operations to alleviate any of such timing problems. Such delay in write operations will be described in more detail with respect to
FIG. 6 below. -
FIG. 6 shows writeoperations 600 delayed by a buffer chip, in accordance with still yet another embodiment. As an option, thewrite operations 600 may be implemented in the context of the architecture and environment ofFIGS. 1-5 . Of course, however, thewrite operations 600 may be used in any desired environment. Again, it should also be noted that the aforementioned definitions may apply during the present description. - In order to be compliant with the protocol utilized by the DRAM circuits in the stack, a buffer chip (e.g. see the
buffer chip 202 ofFIGS. 2A-E , etc.) may provide an additional delay, over and beyond the delay of the address and control signals through the buffer chip, between receiving the write operation and address from the memory controller (and/or optionally from a register and/or AMB, etc.), and sending it to the DRAM circuits in the stack. The additional delay may be equal to j clocks, where j is the cumulative delay of the address and control signals through the buffer chip and the delay of the data signals through the buffer chip. As another option, the write address and operation may be delayed by a register chip on a DIMM, by an AMB, or by the memory controller. -
FIG. 7 shows early writedata 700 from an AMB, in accordance with another embodiment. As an option, theearly write data 700 may be implemented in the context of the architecture and environment ofFIGS. 1-5 . Of course, however, theearly write data 700 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As shown, an AMB on an FB-DIMM may be designed to send write data earlier to buffered stacks instead of delaying the write address and operation, as described in reference to
FIG. 6 . Specifically, anearly write latency 702 may be utilized to send the write data to the buffered stack. Thus, correct timing of the write operation at the inputs of the DRAM circuits in the stack may be entered. - For example, a buffer chip (e.g. see the
buffer ship 202 ofFIGS. 2A-E , etc.) may have a cumulative latency of 2, in which case, the AMB may send thewrite data 2 clock cycles earlier to the buffered stack. It should be noted that this scheme may not be possible in the case of registered DIMMs since the memory controller sends the write data directly to the buffered stacks. As an option, a memory controller may be designed to send write data earlier so that write operations have the correct timing at the input of the DRAM circuits in the stack without requiring the buffer chip to delay the write address and operation. -
FIG. 8 showsaddress bus conflicts 800 caused by delay write operations, in accordance with yet another embodiment. As mentioned earlier, the delaying of the write addresses and operations may be performed by a buffer chip, or optionally a register, AMB, etc., in a manner that is completely transparent to the memory controller of a host system. However, since the memory controller is unaware of this delay, it may schedule subsequent operations, such as for example activate or precharge operations, which may collide with the delayed writes on the address bus from the buffer chip to the DRAM circuits in the stack. As shown, an activateoperation 802 may interfere with awrite operation 804 that has been delayed. Thus, a delay of activate operations may be employed, as will be described in further detail with respect toFIG. 9 . - FIGS 9A-B show variable delays 900 and 950 of operations through a buffer chip, in accordance with another embodiment. As an option, the
variable delays FIGS. 1-8 . Of course, however, thevariable delays - In order to prevent conflicts on an address bus between the buffer chip and its associated stack(s), either the write operation or the precharge/activate operation may be delayed. As shown, a buffer chip (e.g. see the
buffer chip 202 ofFIGS. 2A-E , etc.) may delay the precharge/activateoperations 952A-C/902-C. In particular, the buffer chip may make the buffered stack appear as one or more larger capacity DRAM circuits that have longer tRCD (RAD to CAS delay) and tRP (i.e. precharge time) parameters. - For example, if the cumulative latency through a buffer chip is 2 clock cycles while the native read CAS latency of the DRAM circuits is 4 clock cycles, then in order to hide the delay of the address/control signals and the data signals through the buffer chip, the buffered stack may appear as one or more larger capacity DRAM circuits with a read CAS latency of 6 clock cycles to the memory controller. In addition, if the tRCD and tRP of the DRAM circuits is 4 clock cycles each, the buffered stack may appear as one or more larger capacity DRAM circuits with tRCD of 6 clock cycles and tRP of 6 clock cycles in order to allow a buffer chip (e.g., see the
buffer chip 202 ofFIGS. 2A-E , etc.) to delay the activate and precharge operations in a manner that is transparent to the memory controller. Specifically, a buffered stack that uses 4-4-4 DRAM circuits (i.e. CAS latency=4, tRCD=4) may appear as one or at least one larger capacity DRAM circuits with 6-6-6 timing (i.e. CAS latency=6, tRCD=6). - Since the buffered stack appears to the memory controller as having a tRCD of 6 clock cycles, the memory controller may schedule a column operation to a
bank 6 clock cycles after an active (e.g. row) operation to the same bank. However, the DRAM circuits in the stack may actually have a tRCD of 4 clock cycles. Thus, the buffer chip may have the ability to delay the activate operation by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits in the stack while still ensuring correct read and write timing on the channel between the memory controller and the buffered stack. - As shown, the buffer chip may issue the activate operation to the DRAM circuits one, two, or three clock cycles after it receives the activate operation from the memory controller, register, or AMB. The actual delay of the activate operation through the buffer chip may depend on the presence of absence of other DRAM operations that may conflict with the activate operation, and may optionally change from one activate operation to another.
- Similarly, since the buffered stack may appear to the memory controller as at least one larger capacity DRAM circuit with a tRP of 6 clock cycles, the memory controller may schedule a subsequent activate (e.g. row) operation to a bank a minimum of 6 clock cycles after issuing a precharge operation to that bank. However, since the DRAM circuits in the stack actually have a tRP of 4 clock cycles, the buffer chip may have the ability to delay issuing the precharge operation to the DRAM circuits in the stack by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits to the stack. In addition, even if there are no conflicts on the address bus, the buffer chip may still delay issuing a precharge operation in order to satisfy the tRAS requirement of the DRAM circuits.
- In particular, if the activate operation to a bank was delayed to avoid an address bus conflict, then the precharge operation to the same bank may be delayed by the buffer chip to satisfy the tRAS requirement of the DRAM circuits. The buffer chip may issue the precharge operation to the DRAM circuits one, two, or three clock cycles after it receives the precharge operation from the memory controller, register, or AMB. The actual delay of the precharge operation through the buffer chip may depend on the presence or absence of address bus conflicts or tRAS violations, and may change from one precharge operation to another.
-
FIG. 10 shows abuffered stack 1000 of four 512 Mb DRAM circuits mapped to a single 2 Gb DRAM circuit, in accordance with yet another embodiment. As an option, the bufferedstack 1000 may be implemented in the context of the architecture and environment ofFIGS. 1-9 . Of course, however, the bufferedstack 1000 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - The
multiple DRAM circuits 1002A-D buffered in the stack by thebuffer chip 1004 may appear as at least one larger capacity DRAM circuit to the memory controller. However, the combined power dissipation ofsuch DRAM circuits 1002A-D may be much higher than the power dissipation of a monolithic DRAM of the same capacity. For example, the buffered stack may consist of four 512 Mb DDR2 SDRAM circuits that appear to the memory controller as a single 2 Gb DDR2 SDRAM circuit. - The power dissipation of all four
DRAM circuits 1002A-D in the stack may be much higher than the power dissipation of a monolithic 2 Gb DDR2 SDRAM. As a result, a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM built using monolithic DRAM circuits. This increased power dissipation may limit the widespread adoption of DIMMs that use buffered stacks. - Thus, a power management technique that reduces the power dissipation of DIMMs that contain buffered stacks of DRAM circuits may be utilized. Specifically, the
DRAM circuits 1002A-D may be opportunistically placed in a precharge power down mode using the clock enable (CKE) pin of theDRAM circuits 1002A-D. For example, a single rank registered DIMM (R-DIMM) may contain a plurality of buffered stacks ofDRAM circuits 1002A-D, where each stack consists of four x4 512 MbDDR2 SDRAM circuits 1002A-D and appears as asingle x4 2 Gb DDR2 SDRAM circuit to the memory controller. A 2 Gb DDR2 SDRAM may generally have eight banks as specified by JEDEC. Therefore, thebuffer chip 1004 may map each 512 Mb DRAM circuit in the stack to two banks of the equivalent 2 Gb DRAM, as shown. - The memory controller of the host system may open and close pages in the banks of the
DRAM circuits 1002A-D based on the memory requests it receives from the rest of the system. In various embodiments, no more than one page may be able to be open in a bank at any given time. For example, with respect toFIG. 10 , since eachDRAM circuit 1002A-D in the stack is mapped to two banks of the equivalent larger DRAM, at any given time aDRAM circuit 1002A-D may have two open pages, one open page, or no open pages. When aDRAM circuit 1002A-D has no open pages, the power management scheme may place thatDRAM circuit 1002A-D in the precharge power down mode by de-asserting its CKE input. - The CKE inputs of the
DRAM circuits 1002A-D in a stack may be controlled by thebuffer chip 1004, by a chip on an R-DIMM, by an AMB on a FB-DIMM, or by the memory controller in order to implement the power management scheme described hereinabove. In one embodiment, this power management scheme may be particularly efficient when the memory controller implements a closed page policy. - Another optional power management scheme may include mapping a plurality of DRAM circuits to a single bank of the larger capacity DRAM seen by the memory controller. For example, a buffered stack of sixteen x4 256 Mb DDR2 SDRAM circuits may appear to the memory controller as a single x4 Gb DDR2 SDRAM circuit. Since a 4 Gb DDR2 SDRAM circuit is specified by JEDEC to have eight banks, each bank of the 4 Gb DDR2 SDRAM circuit may be 512 Mb. Thus, two of the 256 Mb DDR2 SDRAM circuits may be mapped by the
buffer chip 1004 to a single bank of the equivalent 4 Gb DDR2 SDRAM circuit seen by the memory controller. - In this way,
bank 0 of the 4 Gb DDR2 SDRAM circuit may be mapped by the buffer chip to two 256 Mb DDR2 SDRAM circuits (e.g. DRAM A and DRAM B) in the stack. However, since only one page can be open in a bank at any given time, only one of DRAM A or DRAM B may be in the active state at any given time. If the memory controller opens a page in DRAMA , then DRAM B may be placed in the precharge power down mode by de-asserting its CKE input. As another option, if the memory controller opens a page in DRAM B, DRAM A may be placed in the precharge power down mode by de-asserting its CKE input. This technique may ensure that if p DRAM circuits are mapped to a bank of the larger capacity DRAM circuit seen by the memory controller, then p-1 of the p DRAM circuits may continuously (e.g. always, etc.) be subjected to a power saving operation. The power saving operation may, for example, comprise operating in precharge power down mode except when refresh is required. Of course, power-savings may also occur in other embodiments without such continuity. -
FIG. 11 illustrates amethod 1100 for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. As an option, themethod 1100 may be implemented in the context of the architecture and environment of any one or more ofFIGS. 1-10 . For example, themethod 1100 may be carried out by theinterface circuit 102 ofFIG. 1 . Of course, however, themethod 1100 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As shown, a refresh control signal is received in
operation 1102. In one optional embodiment, such refresh control signal may, for example, be received from a memory controller, where such memory controller intends to refresh a simulated memory circuit(s). - In response to the receipt of such refresh control signal, a plurality of refresh control signals are sent to a plurality of the memory circuits (e.g. see the
memory circuits FIG. 1 , etc.), at different times. Seeoperation 1104. Such refresh control signals may or may not each include the refresh control signal ofoperation 1102 or an instantiation/copy thereof. Of course, in other embodiments, the refresh control signals may each include refresh control signals that are different in at least one aspect (e.g. format, content, etc.). - During use of still additional embodiments, at least one first refresh control signal may be sent to a first subset (e.g. of one or more) of the memory circuits at a first time and at least one second refresh control signal may be sent to a second subset (e.g. of one or more) of the memory circuits at a second time. Thus, in some embodiments, a single refresh control signal may be sent to a plurality of the memory circuits (e.g. a group of memory circuits, etc.). Further, a plurality of the refresh control signals may be sent to a plurality of the memory circuits. To this end, refresh control signals may be sent individually or to groups of memory circuits, as desired.
- Thus, in still yet additional embodiments, the refresh control signals may be sent after a delay in accordance with a particular timing. In one embodiment, for example, the timing in which the refresh control signals are sent to the memory circuits may be selected to minimize a current draw. This may be accomplished in various embodiments by staggering a plurality of refresh control signals. In still other embodiments, the timing in which the refresh control signals are sent to the memory circuits may be selected to comply with a tRFC parameter associated with each of the memory circuits.
- To this end, in the context of an example involving a plurality of DRAM circuits (e.g. see the embodiments of
FIGS. 1-2E , etc.), DRAM circuits of any desired size may receive periodic refresh operations to maintain the integrity of data therein. A memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits. After a refresh control signal is issued to a DRAM circuit, a minimum time (e.g. denoted by tRFC) may be required to elapse before another control signal may be issued to that DRAM circuit. The tRFC parameter may therefore increase as the size of the DRAM circuit increases. - When the buffer chip receives a refresh control signal from the memory controller, it may refresh the smaller DRAM circuits within the span of time specified by the tRFC associated with the emulated DRAM circuit. Since the tRFC of the emulated DRAM circuits is larger than that of the smaller DRAM circuits, it may not be necessary to issue refresh control signals to all of the smaller DRAM circuits simultaneously. Refresh control signals may be issued separately to individual DRAM circuits or may be issued to groups of DRAM circuits, provided that the tRFC requirement of the smaller DRAM circuits is satisfied by the time the tRFC of the emulated DRAM circuits has elapsed. In use, the refreshes may be spaced to minimize the peak current draw of the combination buffer chip and DRAM circuit set during a refresh operation.
- While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. For example, any of the network elements may employ any of the desired functionality set forth hereinabove. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/461,441 US20080028135A1 (en) | 2006-07-31 | 2006-07-31 | Multiple-component memory interface system and method |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/461,441 US20080028135A1 (en) | 2006-07-31 | 2006-07-31 | Multiple-component memory interface system and method |
Publications (1)
Publication Number | Publication Date |
---|---|
US20080028135A1 true US20080028135A1 (en) | 2008-01-31 |
Family
ID=38987738
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/461,441 Abandoned US20080028135A1 (en) | 2006-07-31 | 2006-07-31 | Multiple-component memory interface system and method |
Country Status (1)
Country | Link |
---|---|
US (1) | US20080028135A1 (en) |
Cited By (57)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060117155A1 (en) * | 2004-11-29 | 2006-06-01 | Ware Frederick A | Micro-threaded memory |
US20070204075A1 (en) * | 2006-02-09 | 2007-08-30 | Rajan Suresh N | System and method for reducing command scheduling constraints of memory circuits |
US20070260841A1 (en) * | 2006-05-02 | 2007-11-08 | Hampel Craig E | Memory module with reduced access granularity |
US20080010435A1 (en) * | 2005-06-24 | 2008-01-10 | Michael John Sebastian Smith | Memory systems and memory modules |
US20080025122A1 (en) * | 2006-07-31 | 2008-01-31 | Metaram, Inc. | Memory refresh system and method |
US20080027697A1 (en) * | 2006-07-31 | 2008-01-31 | Metaram, Inc. | Memory circuit simulation system and method with power saving capabilities |
US20080025136A1 (en) * | 2006-07-31 | 2008-01-31 | Metaram, Inc. | System and method for storing at least a portion of information received in association with a first operation for use in performing a second operation |
US20080062773A1 (en) * | 2006-07-31 | 2008-03-13 | Suresh Natarajan Rajan | System and method for simulating an aspect of a memory circuit |
US20080086588A1 (en) * | 2006-10-05 | 2008-04-10 | Metaram, Inc. | System and Method for Increasing Capacity, Performance, and Flexibility of Flash Storage |
US20080109598A1 (en) * | 2006-07-31 | 2008-05-08 | Schakel Keith R | Method and apparatus for refresh management of memory modules |
US20080115006A1 (en) * | 2006-07-31 | 2008-05-15 | Michael John Sebastian Smith | System and method for adjusting the timing of signals associated with a memory system |
US20080126690A1 (en) * | 2006-02-09 | 2008-05-29 | Rajan Suresh N | Memory module with memory stack |
US20080126692A1 (en) * | 2006-07-31 | 2008-05-29 | Suresh Natarajan Rajan | Memory device with emulated characteristics |
US20090024789A1 (en) * | 2007-07-18 | 2009-01-22 | Suresh Natarajan Rajan | Memory circuit system and method |
US20090290442A1 (en) * | 2005-06-24 | 2009-11-26 | Rajan Suresh N | Method and circuit for configuring memory core integrated circuit dies with memory interface integrated circuit dies |
US7724589B2 (en) | 2006-07-31 | 2010-05-25 | Google Inc. | System and method for delaying a signal communicated from a system to at least one of a plurality of memory circuits |
US20100257304A1 (en) * | 2006-07-31 | 2010-10-07 | Google Inc. | Apparatus and method for power management of memory circuits by a system or component thereof |
US20100293325A1 (en) * | 2009-01-23 | 2010-11-18 | Cypress Semiconductor Corporation | Memory devices and systems including multi-speed access of memory modules |
US20110095783A1 (en) * | 2009-06-09 | 2011-04-28 | Google Inc. | Programming of dimm termination resistance values |
US8081474B1 (en) | 2007-12-18 | 2011-12-20 | Google Inc. | Embossed heat spreader |
US8080874B1 (en) | 2007-09-14 | 2011-12-20 | Google Inc. | Providing additional space between an integrated circuit and a circuit board for positioning a component therebetween |
US8089795B2 (en) | 2006-02-09 | 2012-01-03 | Google Inc. | Memory module with memory stack and interface with enhanced capabilities |
US8111566B1 (en) | 2007-11-16 | 2012-02-07 | Google, Inc. | Optimal channel design for memory devices for providing a high-speed memory interface |
US8130560B1 (en) | 2006-11-13 | 2012-03-06 | Google Inc. | Multi-rank partial width memory modules |
US8181048B2 (en) | 2006-07-31 | 2012-05-15 | Google Inc. | Performing power management operations |
US8213205B2 (en) | 2005-09-02 | 2012-07-03 | Google Inc. | Memory system including multiple memory stacks |
US8244971B2 (en) | 2006-07-31 | 2012-08-14 | Google Inc. | Memory circuit system and method |
US20120239874A1 (en) * | 2011-03-02 | 2012-09-20 | Netlist, Inc. | Method and system for resolving interoperability of multiple types of dual in-line memory modules |
US20120311408A1 (en) * | 2011-06-03 | 2012-12-06 | Sony Corporation | Nonvolatile memory, memory controller, nonvolatile memory accessing method, and program |
US8335894B1 (en) | 2008-07-25 | 2012-12-18 | Google Inc. | Configurable memory system with interface circuit |
US20130036273A1 (en) * | 2011-08-05 | 2013-02-07 | Rambus Inc. | Memory Signal Buffers and Modules Supporting Variable Access Granularity |
US8386722B1 (en) | 2008-06-23 | 2013-02-26 | Google Inc. | Stacked DIMM memory interface |
US8397013B1 (en) | 2006-10-05 | 2013-03-12 | Google Inc. | Hybrid memory module |
US20130073791A1 (en) * | 2011-09-16 | 2013-03-21 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (dram)-like interface |
US8438328B2 (en) | 2008-02-21 | 2013-05-07 | Google Inc. | Emulation of abstracted DIMMs using abstracted DRAMs |
US8572320B1 (en) | 2009-01-23 | 2013-10-29 | Cypress Semiconductor Corporation | Memory devices and systems including cache devices for memory modules |
US8588017B2 (en) | 2010-10-20 | 2013-11-19 | Samsung Electronics Co., Ltd. | Memory circuits, systems, and modules for performing DRAM refresh operations and methods of operating the same |
US8796830B1 (en) | 2006-09-01 | 2014-08-05 | Google Inc. | Stackable low-profile lead frame package |
US8908466B2 (en) | 2004-09-30 | 2014-12-09 | Rambus Inc. | Multi-column addressing mode memory system including an integrated circuit memory device |
US8930647B1 (en) | 2011-04-06 | 2015-01-06 | P4tents1, LLC | Multiple class memory systems |
US8949519B2 (en) | 2005-06-24 | 2015-02-03 | Google Inc. | Simulating a memory circuit |
US9025409B2 (en) | 2011-08-05 | 2015-05-05 | Rambus Inc. | Memory buffers and modules supporting dynamic point-to-point connections |
US9158546B1 (en) | 2011-04-06 | 2015-10-13 | P4tents1, LLC | Computer program product for fetching from a first physical memory between an execution of a plurality of threads associated with a second physical memory |
US9164679B2 (en) | 2011-04-06 | 2015-10-20 | Patents1, Llc | System, method and computer program product for multi-thread operation involving first memory of a first memory class and second memory of a second memory class |
US9171585B2 (en) | 2005-06-24 | 2015-10-27 | Google Inc. | Configurable memory circuit system and method |
US9170744B1 (en) | 2011-04-06 | 2015-10-27 | P4tents1, LLC | Computer program product for controlling a flash/DRAM/embedded DRAM-equipped system |
US9176671B1 (en) | 2011-04-06 | 2015-11-03 | P4tents1, LLC | Fetching data between thread execution in a flash/DRAM/embedded DRAM-equipped system |
US9417754B2 (en) | 2011-08-05 | 2016-08-16 | P4tents1, LLC | User interface system, method, and computer program product |
US20160328152A1 (en) * | 2011-09-16 | 2016-11-10 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (dram)-like interface |
US9507739B2 (en) | 2005-06-24 | 2016-11-29 | Google Inc. | Configurable memory circuit system and method |
US20170024146A1 (en) * | 2015-07-23 | 2017-01-26 | Fujitsu Limited | Memory controller, information processing device, and control method |
US9632929B2 (en) | 2006-02-09 | 2017-04-25 | Google Inc. | Translating an address associated with a command communicated between a system and memory circuits |
US20170128068A1 (en) * | 2014-04-02 | 2017-05-11 | Covidien Lp | Surgical fastener applying apparatus, kits and methods for endoscopic procedures |
US9827271B2 (en) | 2013-03-15 | 2017-11-28 | Cook Biotech Incorporated | Methods and devices for lung volume reduction with extracellular matrix material |
US10013371B2 (en) | 2005-06-24 | 2018-07-03 | Google Llc | Configurable memory circuit system and method |
US10679722B2 (en) | 2016-08-26 | 2020-06-09 | Sandisk Technologies Llc | Storage system with several integrated components and method for use therewith |
WO2023114071A1 (en) * | 2021-12-13 | 2023-06-22 | Advanced Micro Devices, Inc. | A method and apparatus for recovering regular access performance in fine-grained dram |
Citations (82)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4646128A (en) * | 1980-09-16 | 1987-02-24 | Irvine Sensors Corporation | High-density electronic processing package--structure and fabrication |
US4983533A (en) * | 1987-10-28 | 1991-01-08 | Irvine Sensors Corporation | High-density electronic modules - process and product |
US5083266A (en) * | 1986-12-26 | 1992-01-21 | Kabushiki Kaisha Toshiba | Microcomputer which enters sleep mode for a predetermined period of time on response to an activity of an input/output device |
US5104820A (en) * | 1989-07-07 | 1992-04-14 | Irvine Sensors Corporation | Method of fabricating electronic circuitry unit containing stacked IC layers having lead rerouting |
US5282177A (en) * | 1992-04-08 | 1994-01-25 | Micron Technology, Inc. | Multiple register block write method and circuit for video DRAMs |
US5388265A (en) * | 1992-03-06 | 1995-02-07 | Intel Corporation | Method and apparatus for placing an integrated circuit chip in a reduced power consumption state |
US5502667A (en) * | 1993-09-13 | 1996-03-26 | International Business Machines Corporation | Integrated multichip memory module structure |
US5598376A (en) * | 1994-12-23 | 1997-01-28 | Micron Technology, Inc. | Distributed write data drivers for burst access memories |
US5604714A (en) * | 1995-11-30 | 1997-02-18 | Micron Technology, Inc. | DRAM having multiple column address strobe operation |
US5610864A (en) * | 1994-12-23 | 1997-03-11 | Micron Technology, Inc. | Burst EDO memory device with maximized write cycle timing |
US5706247A (en) * | 1994-12-23 | 1998-01-06 | Micron Technology, Inc. | Self-enabling pulse-trapping circuit |
US5717654A (en) * | 1995-02-10 | 1998-02-10 | Micron Technology, Inc. | Burst EDO memory device with maximized write cycle timing |
US5721859A (en) * | 1994-12-23 | 1998-02-24 | Micron Technology, Inc. | Counter control circuit in a burst memory |
US5724288A (en) * | 1995-08-30 | 1998-03-03 | Micron Technology, Inc. | Data communication for memory |
US5729504A (en) * | 1995-12-14 | 1998-03-17 | Micron Technology, Inc. | Continuous burst edo memory device |
US5729503A (en) * | 1994-12-23 | 1998-03-17 | Micron Technology, Inc. | Address transition detection on a synchronous design |
US5748914A (en) * | 1995-10-19 | 1998-05-05 | Rambus, Inc. | Protocol for communication with dynamic memory |
US5752045A (en) * | 1995-07-14 | 1998-05-12 | United Microelectronics Corporation | Power conservation in synchronous SRAM cache memory blocks of a computer system |
US5859792A (en) * | 1996-05-15 | 1999-01-12 | Micron Electronics, Inc. | Circuit for on-board programming of PRD serial EEPROMs |
US5860106A (en) * | 1995-07-13 | 1999-01-12 | Intel Corporation | Method and apparatus for dynamically adjusting power/performance characteristics of a memory subsystem |
US5870347A (en) * | 1997-03-11 | 1999-02-09 | Micron Technology, Inc. | Multi-bank memory input/output line selection |
US5884088A (en) * | 1995-12-29 | 1999-03-16 | Intel Corporation | System, apparatus and method for managing power in a computer system |
US5901105A (en) * | 1995-04-05 | 1999-05-04 | Ong; Adrian E | Dynamic random access memory having decoding circuitry for partial memory blocks |
US5905688A (en) * | 1997-04-01 | 1999-05-18 | Lg Semicon Co., Ltd. | Auto power down circuit for a semiconductor memory device |
US6014339A (en) * | 1997-04-03 | 2000-01-11 | Fujitsu Limited | Synchronous DRAM whose power consumption is minimized |
US6032215A (en) * | 1990-04-18 | 2000-02-29 | Rambus Inc. | Synchronous memory device utilizing two external clocks |
US6038673A (en) * | 1998-11-03 | 2000-03-14 | Intel Corporation | Computer system with power management scheme for DRAM devices |
US6044032A (en) * | 1998-12-03 | 2000-03-28 | Micron Technology, Inc. | Addressing scheme for a double data rate SDRAM |
US6222739B1 (en) * | 1998-01-20 | 2001-04-24 | Viking Components | High-density computer module with stacked parallel-plane packaging |
US6338113B1 (en) * | 1998-06-10 | 2002-01-08 | Mitsubishi Denki Kabushiki Kaisha | Memory module system having multiple memory modules |
US20020019961A1 (en) * | 1998-08-28 | 2002-02-14 | Blodgett Greg A. | Device and method for repairing a semiconductor memory |
US6353561B1 (en) * | 1998-09-18 | 2002-03-05 | Fujitsu Limited | Semiconductor integrated circuit and method for controlling the same |
US6356500B1 (en) * | 2000-08-23 | 2002-03-12 | Micron Technology, Inc. | Reduced power DRAM device and method |
US6363031B2 (en) * | 1999-11-03 | 2002-03-26 | Cypress Semiconductor Corp. | Circuit, architecture and method for reducing power consumption in a synchronous integrated circuit |
US20020038405A1 (en) * | 1998-09-30 | 2002-03-28 | Michael W. Leddige | Method and apparatus for implementing multiple memory buses on a memory module |
US20020041507A1 (en) * | 2000-10-10 | 2002-04-11 | Woo Steven C. | Methods and systems for reducing heat flux in memory systems |
US6510503B2 (en) * | 1998-07-27 | 2003-01-21 | Mosaid Technologies Incorporated | High bandwidth memory interface |
US20030021175A1 (en) * | 2001-07-27 | 2003-01-30 | Jong Tae Kwak | Low power type Rambus DRAM |
US20030035312A1 (en) * | 2000-09-18 | 2003-02-20 | Intel Corporation | Memory module having buffer for isolating stacked memory devices |
US6526471B1 (en) * | 1998-09-18 | 2003-02-25 | Digeo, Inc. | Method and apparatus for a high-speed memory subsystem |
US20030039158A1 (en) * | 1998-04-10 | 2003-02-27 | Masashi Horiguchi | Semiconductor device, such as a synchronous dram, including a control circuit for reducing power consumption |
US20030061458A1 (en) * | 2001-09-25 | 2003-03-27 | Wilcox Jeffrey R. | Memory control with lookahead power management |
US6545895B1 (en) * | 2002-04-22 | 2003-04-08 | High Connection Density, Inc. | High capacity SDRAM memory module with stacked printed circuit boards |
US6553450B1 (en) * | 2000-09-18 | 2003-04-22 | Intel Corporation | Buffer to multiply memory interface |
US6683372B1 (en) * | 1999-11-18 | 2004-01-27 | Sun Microsystems, Inc. | Memory expansion module with stacked memory packages and a serial storage unit |
US20040027902A1 (en) * | 2000-05-24 | 2004-02-12 | Mitsubishi Denki Kabushiki Kaisha | Semiconductor device with reduced current consumption in standby state |
US20040034732A1 (en) * | 2002-08-15 | 2004-02-19 | Network Appliance, Inc. | Apparatus and method for placing memory into self-refresh state |
US6701446B2 (en) * | 1997-10-10 | 2004-03-02 | Rambus Inc. | Power control system for synchronous memory device |
US20040047228A1 (en) * | 2001-10-11 | 2004-03-11 | Cascade Semiconductor Corporation | Asynchronous hidden refresh of semiconductor memory |
US6705877B1 (en) * | 2003-01-17 | 2004-03-16 | High Connection Density, Inc. | Stackable memory module with variable bandwidth |
US20040057317A1 (en) * | 1990-10-31 | 2004-03-25 | Scott Schaefer | Low power memory module using restricted device activation |
US6724684B2 (en) * | 2001-12-24 | 2004-04-20 | Hynix Semiconductor Inc. | Apparatus for pipe latch control circuit in synchronous memory device |
US6845055B1 (en) * | 2003-11-06 | 2005-01-18 | Fujitsu Limited | Semiconductor memory capable of transitioning from a power-down state in a synchronous mode to a standby state in an asynchronous mode without setting by a control register |
US6847582B2 (en) * | 2003-03-11 | 2005-01-25 | Micron Technology, Inc. | Low skew clock input buffer and method |
US20050021874A1 (en) * | 2003-07-25 | 2005-01-27 | Georgiou Christos J. | Single chip protocol converter |
US20050018495A1 (en) * | 2004-01-29 | 2005-01-27 | Netlist, Inc. | Arrangement of integrated circuits in a memory module |
US6850449B2 (en) * | 2002-10-11 | 2005-02-01 | Nec Electronics Corp. | Semiconductor memory device having mode storing one bit data in two memory cells and method of controlling same |
US20050024963A1 (en) * | 2003-07-08 | 2005-02-03 | Infineon Technologies Ag | Semiconductor memory module |
US20050036350A1 (en) * | 2003-08-13 | 2005-02-17 | So Byung-Se | Memory module |
US20050044305A1 (en) * | 2003-07-08 | 2005-02-24 | Infineon Technologies Ag | Semiconductor memory module |
US20050041504A1 (en) * | 2000-01-05 | 2005-02-24 | Perego Richard E. | Method of operating a memory system including an integrated circuit buffer device |
US6873534B2 (en) * | 2002-03-07 | 2005-03-29 | Netlist, Inc. | Arrangement of integrated circuits in a memory module |
US20050071543A1 (en) * | 2003-09-29 | 2005-03-31 | Ellis Robert M. | Memory buffer device integrating refresh |
US20050081085A1 (en) * | 2003-09-29 | 2005-04-14 | Ellis Robert M. | Memory buffer device integrating ECC |
US20050078532A1 (en) * | 2003-07-30 | 2005-04-14 | Hermann Ruckerbauer | Semiconductor memory module |
US20060002201A1 (en) * | 2002-11-20 | 2006-01-05 | Micron Technology, Inc. | Active termination control |
US6986118B2 (en) * | 2002-09-27 | 2006-01-10 | Infineon Technologies Ag | Method for controlling semiconductor chips and control apparatus |
US20060010339A1 (en) * | 2004-06-24 | 2006-01-12 | Klein Dean A | Memory system and method having selective ECC during low power refresh |
US6992501B2 (en) * | 2004-03-15 | 2006-01-31 | Staktek Group L.P. | Reflection-control system and method |
US7003639B2 (en) * | 2000-07-19 | 2006-02-21 | Rambus Inc. | Memory controller with power management logic |
US20060041730A1 (en) * | 2004-08-19 | 2006-02-23 | Larson Douglas A | Memory command delay balancing in a daisy-chained memory topology |
US20060039205A1 (en) * | 2004-08-23 | 2006-02-23 | Cornelius William P | Reducing the number of power and ground pins required to drive address signals to memory modules |
US20060041711A1 (en) * | 2002-11-28 | 2006-02-23 | Renesas Technology Corporation | Memory module, memory system, and information device |
US7007175B2 (en) * | 2001-04-02 | 2006-02-28 | Via Technologies, Inc. | Motherboard with reduced power consumption |
US20060044913A1 (en) * | 2004-08-31 | 2006-03-02 | Klein Dean A | Memory system and method using ECC to achieve low power refresh |
US20060050574A1 (en) * | 2002-10-31 | 2006-03-09 | Harald Streif | Memory device with column select being variably delayed |
US20060067141A1 (en) * | 2000-01-05 | 2006-03-30 | Perego Richard E | Integrated circuit buffer device |
US20060085616A1 (en) * | 2004-10-20 | 2006-04-20 | Zeighami Roy M | Method and system for dynamically adjusting DRAM refresh rate |
US7033861B1 (en) * | 2005-05-18 | 2006-04-25 | Staktek Group L.P. | Stacked module systems and method |
US20060090054A1 (en) * | 2004-10-25 | 2006-04-27 | Hee-Joo Choi | System controlling interface timing in memory module and related method |
US20070070669A1 (en) * | 2005-09-26 | 2007-03-29 | Rambus Inc. | Memory module including a plurality of integrated circuit memory devices and a plurality of buffer devices in a matrix topology |
US7496777B2 (en) * | 2005-10-12 | 2009-02-24 | Sun Microsystems, Inc. | Power throttling in a memory system |
-
2006
- 2006-07-31 US US11/461,441 patent/US20080028135A1/en not_active Abandoned
Patent Citations (99)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4646128A (en) * | 1980-09-16 | 1987-02-24 | Irvine Sensors Corporation | High-density electronic processing package--structure and fabrication |
US5083266A (en) * | 1986-12-26 | 1992-01-21 | Kabushiki Kaisha Toshiba | Microcomputer which enters sleep mode for a predetermined period of time on response to an activity of an input/output device |
US4983533A (en) * | 1987-10-28 | 1991-01-08 | Irvine Sensors Corporation | High-density electronic modules - process and product |
US5104820A (en) * | 1989-07-07 | 1992-04-14 | Irvine Sensors Corporation | Method of fabricating electronic circuitry unit containing stacked IC layers having lead rerouting |
US6035365A (en) * | 1990-04-18 | 2000-03-07 | Rambus Inc. | Dual clocked synchronous memory device having a delay time register and method of operating same |
US6034918A (en) * | 1990-04-18 | 2000-03-07 | Rambus Inc. | Method of operating a memory having a variable data output length and a programmable register |
US6038195A (en) * | 1990-04-18 | 2000-03-14 | Rambus Inc. | Synchronous memory device having a delay time register and method of operating same |
US6032214A (en) * | 1990-04-18 | 2000-02-29 | Rambus Inc. | Method of operating a synchronous memory device having a variable data output length |
US6546446B2 (en) * | 1990-04-18 | 2003-04-08 | Rambus Inc. | Synchronous memory device having automatic precharge |
US6378020B2 (en) * | 1990-04-18 | 2002-04-23 | Rambus Inc. | System having double data transfer rate and intergrated circuit therefor |
US6697295B2 (en) * | 1990-04-18 | 2004-02-24 | Rambus Inc. | Memory device having a programmable register |
US6182184B1 (en) * | 1990-04-18 | 2001-01-30 | Rambus Inc. | Method of operating a memory device having a variable data input length |
US6032215A (en) * | 1990-04-18 | 2000-02-29 | Rambus Inc. | Synchronous memory device utilizing two external clocks |
US20040057317A1 (en) * | 1990-10-31 | 2004-03-25 | Scott Schaefer | Low power memory module using restricted device activation |
US6862202B2 (en) * | 1990-10-31 | 2005-03-01 | Micron Technology, Inc. | Low power memory module using restricted device activation |
US5388265A (en) * | 1992-03-06 | 1995-02-07 | Intel Corporation | Method and apparatus for placing an integrated circuit chip in a reduced power consumption state |
US5282177A (en) * | 1992-04-08 | 1994-01-25 | Micron Technology, Inc. | Multiple register block write method and circuit for video DRAMs |
US5502667A (en) * | 1993-09-13 | 1996-03-26 | International Business Machines Corporation | Integrated multichip memory module structure |
US5610864A (en) * | 1994-12-23 | 1997-03-11 | Micron Technology, Inc. | Burst EDO memory device with maximized write cycle timing |
US5706247A (en) * | 1994-12-23 | 1998-01-06 | Micron Technology, Inc. | Self-enabling pulse-trapping circuit |
US5721859A (en) * | 1994-12-23 | 1998-02-24 | Micron Technology, Inc. | Counter control circuit in a burst memory |
US5729503A (en) * | 1994-12-23 | 1998-03-17 | Micron Technology, Inc. | Address transition detection on a synchronous design |
US5598376A (en) * | 1994-12-23 | 1997-01-28 | Micron Technology, Inc. | Distributed write data drivers for burst access memories |
US5757703A (en) * | 1994-12-23 | 1998-05-26 | Micron Technology, Inc. | Distributed write data drivers for burst access memories |
US5717654A (en) * | 1995-02-10 | 1998-02-10 | Micron Technology, Inc. | Burst EDO memory device with maximized write cycle timing |
US5901105A (en) * | 1995-04-05 | 1999-05-04 | Ong; Adrian E | Dynamic random access memory having decoding circuitry for partial memory blocks |
US5860106A (en) * | 1995-07-13 | 1999-01-12 | Intel Corporation | Method and apparatus for dynamically adjusting power/performance characteristics of a memory subsystem |
US5752045A (en) * | 1995-07-14 | 1998-05-12 | United Microelectronics Corporation | Power conservation in synchronous SRAM cache memory blocks of a computer system |
US5724288A (en) * | 1995-08-30 | 1998-03-03 | Micron Technology, Inc. | Data communication for memory |
US5748914A (en) * | 1995-10-19 | 1998-05-05 | Rambus, Inc. | Protocol for communication with dynamic memory |
US5604714A (en) * | 1995-11-30 | 1997-02-18 | Micron Technology, Inc. | DRAM having multiple column address strobe operation |
US5729504A (en) * | 1995-12-14 | 1998-03-17 | Micron Technology, Inc. | Continuous burst edo memory device |
US5884088A (en) * | 1995-12-29 | 1999-03-16 | Intel Corporation | System, apparatus and method for managing power in a computer system |
US5859792A (en) * | 1996-05-15 | 1999-01-12 | Micron Electronics, Inc. | Circuit for on-board programming of PRD serial EEPROMs |
US5870347A (en) * | 1997-03-11 | 1999-02-09 | Micron Technology, Inc. | Multi-bank memory input/output line selection |
US5905688A (en) * | 1997-04-01 | 1999-05-18 | Lg Semicon Co., Ltd. | Auto power down circuit for a semiconductor memory device |
US6014339A (en) * | 1997-04-03 | 2000-01-11 | Fujitsu Limited | Synchronous DRAM whose power consumption is minimized |
US6701446B2 (en) * | 1997-10-10 | 2004-03-02 | Rambus Inc. | Power control system for synchronous memory device |
US6222739B1 (en) * | 1998-01-20 | 2001-04-24 | Viking Components | High-density computer module with stacked parallel-plane packaging |
US20030039158A1 (en) * | 1998-04-10 | 2003-02-27 | Masashi Horiguchi | Semiconductor device, such as a synchronous dram, including a control circuit for reducing power consumption |
US6338113B1 (en) * | 1998-06-10 | 2002-01-08 | Mitsubishi Denki Kabushiki Kaisha | Memory module system having multiple memory modules |
US20080065820A1 (en) * | 1998-07-27 | 2008-03-13 | Peter Gillingham | High bandwidth memory interface |
US6510503B2 (en) * | 1998-07-27 | 2003-01-21 | Mosaid Technologies Incorporated | High bandwidth memory interface |
US20020019961A1 (en) * | 1998-08-28 | 2002-02-14 | Blodgett Greg A. | Device and method for repairing a semiconductor memory |
US6526471B1 (en) * | 1998-09-18 | 2003-02-25 | Digeo, Inc. | Method and apparatus for a high-speed memory subsystem |
US6353561B1 (en) * | 1998-09-18 | 2002-03-05 | Fujitsu Limited | Semiconductor integrated circuit and method for controlling the same |
US20020038405A1 (en) * | 1998-09-30 | 2002-03-28 | Michael W. Leddige | Method and apparatus for implementing multiple memory buses on a memory module |
US6038673A (en) * | 1998-11-03 | 2000-03-14 | Intel Corporation | Computer system with power management scheme for DRAM devices |
US6044032A (en) * | 1998-12-03 | 2000-03-28 | Micron Technology, Inc. | Addressing scheme for a double data rate SDRAM |
US6363031B2 (en) * | 1999-11-03 | 2002-03-26 | Cypress Semiconductor Corp. | Circuit, architecture and method for reducing power consumption in a synchronous integrated circuit |
US6683372B1 (en) * | 1999-11-18 | 2004-01-27 | Sun Microsystems, Inc. | Memory expansion module with stacked memory packages and a serial storage unit |
US20060067141A1 (en) * | 2000-01-05 | 2006-03-30 | Perego Richard E | Integrated circuit buffer device |
US7000062B2 (en) * | 2000-01-05 | 2006-02-14 | Rambus Inc. | System and method featuring a controller device and a memory module that includes an integrated circuit buffer device and a plurality of integrated circuit memory devices |
US20050044303A1 (en) * | 2000-01-05 | 2005-02-24 | Perego Richard E. | Memory system including an integrated circuit buffer device |
US7003618B2 (en) * | 2000-01-05 | 2006-02-21 | Rambus Inc. | System featuring memory modules that include an integrated circuit buffer devices |
US7010642B2 (en) * | 2000-01-05 | 2006-03-07 | Rambus Inc. | System featuring a controller device and a memory module that includes an integrated circuit buffer device and a plurality of integrated circuit memory devices |
US20050041504A1 (en) * | 2000-01-05 | 2005-02-24 | Perego Richard E. | Method of operating a memory system including an integrated circuit buffer device |
US20040027902A1 (en) * | 2000-05-24 | 2004-02-12 | Mitsubishi Denki Kabushiki Kaisha | Semiconductor device with reduced current consumption in standby state |
US7003639B2 (en) * | 2000-07-19 | 2006-02-21 | Rambus Inc. | Memory controller with power management logic |
US6356500B1 (en) * | 2000-08-23 | 2002-03-12 | Micron Technology, Inc. | Reduced power DRAM device and method |
US20030035312A1 (en) * | 2000-09-18 | 2003-02-20 | Intel Corporation | Memory module having buffer for isolating stacked memory devices |
US6553450B1 (en) * | 2000-09-18 | 2003-04-22 | Intel Corporation | Buffer to multiply memory interface |
US20020041507A1 (en) * | 2000-10-10 | 2002-04-11 | Woo Steven C. | Methods and systems for reducing heat flux in memory systems |
US7007175B2 (en) * | 2001-04-02 | 2006-02-28 | Via Technologies, Inc. | Motherboard with reduced power consumption |
US20030021175A1 (en) * | 2001-07-27 | 2003-01-30 | Jong Tae Kwak | Low power type Rambus DRAM |
US20030061458A1 (en) * | 2001-09-25 | 2003-03-27 | Wilcox Jeffrey R. | Memory control with lookahead power management |
US20040047228A1 (en) * | 2001-10-11 | 2004-03-11 | Cascade Semiconductor Corporation | Asynchronous hidden refresh of semiconductor memory |
US6724684B2 (en) * | 2001-12-24 | 2004-04-20 | Hynix Semiconductor Inc. | Apparatus for pipe latch control circuit in synchronous memory device |
US6873534B2 (en) * | 2002-03-07 | 2005-03-29 | Netlist, Inc. | Arrangement of integrated circuits in a memory module |
US6545895B1 (en) * | 2002-04-22 | 2003-04-08 | High Connection Density, Inc. | High capacity SDRAM memory module with stacked printed circuit boards |
US20040034732A1 (en) * | 2002-08-15 | 2004-02-19 | Network Appliance, Inc. | Apparatus and method for placing memory into self-refresh state |
US6986118B2 (en) * | 2002-09-27 | 2006-01-10 | Infineon Technologies Ag | Method for controlling semiconductor chips and control apparatus |
US6850449B2 (en) * | 2002-10-11 | 2005-02-01 | Nec Electronics Corp. | Semiconductor memory device having mode storing one bit data in two memory cells and method of controlling same |
US20060050574A1 (en) * | 2002-10-31 | 2006-03-09 | Harald Streif | Memory device with column select being variably delayed |
US7035150B2 (en) * | 2002-10-31 | 2006-04-25 | Infineon Technologies Ag | Memory device with column select being variably delayed |
US20060002201A1 (en) * | 2002-11-20 | 2006-01-05 | Micron Technology, Inc. | Active termination control |
US20060041711A1 (en) * | 2002-11-28 | 2006-02-23 | Renesas Technology Corporation | Memory module, memory system, and information device |
US6705877B1 (en) * | 2003-01-17 | 2004-03-16 | High Connection Density, Inc. | Stackable memory module with variable bandwidth |
US6847582B2 (en) * | 2003-03-11 | 2005-01-25 | Micron Technology, Inc. | Low skew clock input buffer and method |
US20050044305A1 (en) * | 2003-07-08 | 2005-02-24 | Infineon Technologies Ag | Semiconductor memory module |
US20050024963A1 (en) * | 2003-07-08 | 2005-02-03 | Infineon Technologies Ag | Semiconductor memory module |
US20050021874A1 (en) * | 2003-07-25 | 2005-01-27 | Georgiou Christos J. | Single chip protocol converter |
US20050078532A1 (en) * | 2003-07-30 | 2005-04-14 | Hermann Ruckerbauer | Semiconductor memory module |
US20050036350A1 (en) * | 2003-08-13 | 2005-02-17 | So Byung-Se | Memory module |
US20050071543A1 (en) * | 2003-09-29 | 2005-03-31 | Ellis Robert M. | Memory buffer device integrating refresh |
US20050081085A1 (en) * | 2003-09-29 | 2005-04-14 | Ellis Robert M. | Memory buffer device integrating ECC |
US6845055B1 (en) * | 2003-11-06 | 2005-01-18 | Fujitsu Limited | Semiconductor memory capable of transitioning from a power-down state in a synchronous mode to a standby state in an asynchronous mode without setting by a control register |
US20050018495A1 (en) * | 2004-01-29 | 2005-01-27 | Netlist, Inc. | Arrangement of integrated circuits in a memory module |
US6992501B2 (en) * | 2004-03-15 | 2006-01-31 | Staktek Group L.P. | Reflection-control system and method |
US20060010339A1 (en) * | 2004-06-24 | 2006-01-12 | Klein Dean A | Memory system and method having selective ECC during low power refresh |
US20060041730A1 (en) * | 2004-08-19 | 2006-02-23 | Larson Douglas A | Memory command delay balancing in a daisy-chained memory topology |
US20060039205A1 (en) * | 2004-08-23 | 2006-02-23 | Cornelius William P | Reducing the number of power and ground pins required to drive address signals to memory modules |
US20060044913A1 (en) * | 2004-08-31 | 2006-03-02 | Klein Dean A | Memory system and method using ECC to achieve low power refresh |
US20060085616A1 (en) * | 2004-10-20 | 2006-04-20 | Zeighami Roy M | Method and system for dynamically adjusting DRAM refresh rate |
US20060090054A1 (en) * | 2004-10-25 | 2006-04-27 | Hee-Joo Choi | System controlling interface timing in memory module and related method |
US7033861B1 (en) * | 2005-05-18 | 2006-04-25 | Staktek Group L.P. | Stacked module systems and method |
US20070070669A1 (en) * | 2005-09-26 | 2007-03-29 | Rambus Inc. | Memory module including a plurality of integrated circuit memory devices and a plurality of buffer devices in a matrix topology |
US20070088995A1 (en) * | 2005-09-26 | 2007-04-19 | Rambus Inc. | System including a buffered memory module |
US7496777B2 (en) * | 2005-10-12 | 2009-02-24 | Sun Microsystems, Inc. | Power throttling in a memory system |
Cited By (194)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8908466B2 (en) | 2004-09-30 | 2014-12-09 | Rambus Inc. | Multi-column addressing mode memory system including an integrated circuit memory device |
US11797227B2 (en) | 2004-11-29 | 2023-10-24 | Rambus Inc. | Memory controller for micro-threaded memory operations |
US8595459B2 (en) | 2004-11-29 | 2013-11-26 | Rambus Inc. | Micro-threaded memory |
US20060117155A1 (en) * | 2004-11-29 | 2006-06-01 | Ware Frederick A | Micro-threaded memory |
US9292223B2 (en) | 2004-11-29 | 2016-03-22 | Rambus Inc. | Micro-threaded memory |
US9652176B2 (en) | 2004-11-29 | 2017-05-16 | Rambus Inc. | Memory controller for micro-threaded memory operations |
US10331379B2 (en) | 2004-11-29 | 2019-06-25 | Rambus Inc. | Memory controller for micro-threaded memory operations |
US8949519B2 (en) | 2005-06-24 | 2015-02-03 | Google Inc. | Simulating a memory circuit |
US20090290442A1 (en) * | 2005-06-24 | 2009-11-26 | Rajan Suresh N | Method and circuit for configuring memory core integrated circuit dies with memory interface integrated circuit dies |
US8773937B2 (en) | 2005-06-24 | 2014-07-08 | Google Inc. | Memory refresh apparatus and method |
US8359187B2 (en) | 2005-06-24 | 2013-01-22 | Google Inc. | Simulating a different number of memory circuit devices |
US8615679B2 (en) | 2005-06-24 | 2013-12-24 | Google Inc. | Memory modules with reliability and serviceability functions |
US20080010435A1 (en) * | 2005-06-24 | 2008-01-10 | Michael John Sebastian Smith | Memory systems and memory modules |
US9171585B2 (en) | 2005-06-24 | 2015-10-27 | Google Inc. | Configurable memory circuit system and method |
US8386833B2 (en) | 2005-06-24 | 2013-02-26 | Google Inc. | Memory systems and memory modules |
US10013371B2 (en) | 2005-06-24 | 2018-07-03 | Google Llc | Configurable memory circuit system and method |
US7990746B2 (en) | 2005-06-24 | 2011-08-02 | Google Inc. | Method and circuit for configuring memory core integrated circuit dies with memory interface integrated circuit dies |
US9507739B2 (en) | 2005-06-24 | 2016-11-29 | Google Inc. | Configurable memory circuit system and method |
US20080027702A1 (en) * | 2005-06-24 | 2008-01-31 | Metaram, Inc. | System and method for simulating a different number of memory circuits |
US8060774B2 (en) | 2005-06-24 | 2011-11-15 | Google Inc. | Memory systems and memory modules |
US8811065B2 (en) | 2005-09-02 | 2014-08-19 | Google Inc. | Performing error detection on DRAMs |
US8582339B2 (en) | 2005-09-02 | 2013-11-12 | Google Inc. | System including memory stacks |
US8213205B2 (en) | 2005-09-02 | 2012-07-03 | Google Inc. | Memory system including multiple memory stacks |
US8619452B2 (en) | 2005-09-02 | 2013-12-31 | Google Inc. | Methods and apparatus of stacking DRAMs |
US20070204075A1 (en) * | 2006-02-09 | 2007-08-30 | Rajan Suresh N | System and method for reducing command scheduling constraints of memory circuits |
US20080109595A1 (en) * | 2006-02-09 | 2008-05-08 | Rajan Suresh N | System and method for reducing command scheduling constraints of memory circuits |
US8797779B2 (en) | 2006-02-09 | 2014-08-05 | Google Inc. | Memory module with memory stack and interface with enhanced capabilites |
US20080126690A1 (en) * | 2006-02-09 | 2008-05-29 | Rajan Suresh N | Memory module with memory stack |
US9632929B2 (en) | 2006-02-09 | 2017-04-25 | Google Inc. | Translating an address associated with a command communicated between a system and memory circuits |
US9542353B2 (en) | 2006-02-09 | 2017-01-10 | Google Inc. | System and method for reducing command scheduling constraints of memory circuits |
US8089795B2 (en) | 2006-02-09 | 2012-01-03 | Google Inc. | Memory module with memory stack and interface with enhanced capabilities |
US9727458B2 (en) | 2006-02-09 | 2017-08-08 | Google Inc. | Translating an address associated with a command communicated between a system and memory circuits |
US8566556B2 (en) | 2006-02-09 | 2013-10-22 | Google Inc. | Memory module with memory stack and interface with enhanced capabilities |
US9256557B2 (en) | 2006-05-02 | 2016-02-09 | Rambus Inc. | Memory controller for selective rank or subrank access |
US20070260841A1 (en) * | 2006-05-02 | 2007-11-08 | Hampel Craig E | Memory module with reduced access granularity |
US11467986B2 (en) | 2006-05-02 | 2022-10-11 | Rambus Inc. | Memory controller for selective rank or subrank access |
US10191866B2 (en) | 2006-05-02 | 2019-01-29 | Rambus Inc. | Memory controller for selective rank or subrank access |
US8364926B2 (en) | 2006-05-02 | 2013-01-29 | Rambus Inc. | Memory module with reduced access granularity |
US10795834B2 (en) | 2006-05-02 | 2020-10-06 | Rambus Inc. | Memory controller for selective rank or subrank access |
US20080109598A1 (en) * | 2006-07-31 | 2008-05-08 | Schakel Keith R | Method and apparatus for refresh management of memory modules |
US8745321B2 (en) | 2006-07-31 | 2014-06-03 | Google Inc. | Simulating a memory standard |
US8112266B2 (en) | 2006-07-31 | 2012-02-07 | Google Inc. | Apparatus for simulating an aspect of a memory circuit |
US20080027697A1 (en) * | 2006-07-31 | 2008-01-31 | Metaram, Inc. | Memory circuit simulation system and method with power saving capabilities |
US20080133825A1 (en) * | 2006-07-31 | 2008-06-05 | Suresh Natarajan Rajan | System and method for simulating an aspect of a memory circuit |
US8122207B2 (en) | 2006-07-31 | 2012-02-21 | Google Inc. | Apparatus and method for power management of memory circuits by a system or component thereof |
US8244971B2 (en) | 2006-07-31 | 2012-08-14 | Google Inc. | Memory circuit system and method |
US8090897B2 (en) | 2006-07-31 | 2012-01-03 | Google Inc. | System and method for simulating an aspect of a memory circuit |
US8280714B2 (en) | 2006-07-31 | 2012-10-02 | Google Inc. | Memory circuit simulation system and method with refresh capabilities |
US8327104B2 (en) | 2006-07-31 | 2012-12-04 | Google Inc. | Adjusting the timing of signals associated with a memory system |
US8077535B2 (en) | 2006-07-31 | 2011-12-13 | Google Inc. | Memory refresh apparatus and method |
US8041881B2 (en) | 2006-07-31 | 2011-10-18 | Google Inc. | Memory device with emulated characteristics |
US8340953B2 (en) | 2006-07-31 | 2012-12-25 | Google, Inc. | Memory circuit simulation with power saving capabilities |
US8019589B2 (en) | 2006-07-31 | 2011-09-13 | Google Inc. | Memory apparatus operable to perform a power-saving operation |
US20100271888A1 (en) * | 2006-07-31 | 2010-10-28 | Google Inc. | System and Method for Delaying a Signal Communicated from a System to at Least One of a Plurality of Memory Circuits |
US9047976B2 (en) | 2006-07-31 | 2015-06-02 | Google Inc. | Combined signal delay and power saving for use with a plurality of memory circuits |
US20100257304A1 (en) * | 2006-07-31 | 2010-10-07 | Google Inc. | Apparatus and method for power management of memory circuits by a system or component thereof |
US7724589B2 (en) | 2006-07-31 | 2010-05-25 | Google Inc. | System and method for delaying a signal communicated from a system to at least one of a plurality of memory circuits |
US8972673B2 (en) | 2006-07-31 | 2015-03-03 | Google Inc. | Power management of memory circuits by virtual memory simulation |
US8154935B2 (en) | 2006-07-31 | 2012-04-10 | Google Inc. | Delaying a signal communicated from a system to at least one of a plurality of memory circuits |
US20080025122A1 (en) * | 2006-07-31 | 2008-01-31 | Metaram, Inc. | Memory refresh system and method |
US8407412B2 (en) | 2006-07-31 | 2013-03-26 | Google Inc. | Power management of memory circuits by virtual memory simulation |
US8868829B2 (en) | 2006-07-31 | 2014-10-21 | Google Inc. | Memory circuit system and method |
US20080126692A1 (en) * | 2006-07-31 | 2008-05-29 | Suresh Natarajan Rajan | Memory device with emulated characteristics |
US8566516B2 (en) | 2006-07-31 | 2013-10-22 | Google Inc. | Refresh management of memory modules |
US20080123459A1 (en) * | 2006-07-31 | 2008-05-29 | Metaram, Inc. | Combined signal delay and power saving system and method for use with a plurality of memory circuits |
US8671244B2 (en) | 2006-07-31 | 2014-03-11 | Google Inc. | Simulating a memory standard |
US20080115006A1 (en) * | 2006-07-31 | 2008-05-15 | Michael John Sebastian Smith | System and method for adjusting the timing of signals associated with a memory system |
US20080109597A1 (en) * | 2006-07-31 | 2008-05-08 | Schakel Keith R | Method and apparatus for refresh management of memory modules |
US8595419B2 (en) | 2006-07-31 | 2013-11-26 | Google Inc. | Memory apparatus operable to perform a power-saving operation |
US8181048B2 (en) | 2006-07-31 | 2012-05-15 | Google Inc. | Performing power management operations |
US8601204B2 (en) | 2006-07-31 | 2013-12-03 | Google Inc. | Simulating a refresh operation latency |
US20080062773A1 (en) * | 2006-07-31 | 2008-03-13 | Suresh Natarajan Rajan | System and method for simulating an aspect of a memory circuit |
US20080027703A1 (en) * | 2006-07-31 | 2008-01-31 | Metaram, Inc. | Memory circuit simulation system and method with refresh capabilities |
US20080025136A1 (en) * | 2006-07-31 | 2008-01-31 | Metaram, Inc. | System and method for storing at least a portion of information received in association with a first operation for use in performing a second operation |
US8631220B2 (en) | 2006-07-31 | 2014-01-14 | Google Inc. | Adjusting the timing of signals associated with a memory system |
US8667312B2 (en) | 2006-07-31 | 2014-03-04 | Google Inc. | Performing power management operations |
US8796830B1 (en) | 2006-09-01 | 2014-08-05 | Google Inc. | Stackable low-profile lead frame package |
US8977806B1 (en) | 2006-10-05 | 2015-03-10 | Google Inc. | Hybrid memory module |
US20080086588A1 (en) * | 2006-10-05 | 2008-04-10 | Metaram, Inc. | System and Method for Increasing Capacity, Performance, and Flexibility of Flash Storage |
US8055833B2 (en) | 2006-10-05 | 2011-11-08 | Google Inc. | System and method for increasing capacity, performance, and flexibility of flash storage |
US8370566B2 (en) | 2006-10-05 | 2013-02-05 | Google Inc. | System and method for increasing capacity, performance, and flexibility of flash storage |
US8397013B1 (en) | 2006-10-05 | 2013-03-12 | Google Inc. | Hybrid memory module |
US8751732B2 (en) | 2006-10-05 | 2014-06-10 | Google Inc. | System and method for increasing capacity, performance, and flexibility of flash storage |
US8446781B1 (en) | 2006-11-13 | 2013-05-21 | Google Inc. | Multi-rank partial width memory modules |
US8130560B1 (en) | 2006-11-13 | 2012-03-06 | Google Inc. | Multi-rank partial width memory modules |
US8760936B1 (en) | 2006-11-13 | 2014-06-24 | Google Inc. | Multi-rank partial width memory modules |
US8209479B2 (en) | 2007-07-18 | 2012-06-26 | Google Inc. | Memory circuit system and method |
US20090024789A1 (en) * | 2007-07-18 | 2009-01-22 | Suresh Natarajan Rajan | Memory circuit system and method |
US8080874B1 (en) | 2007-09-14 | 2011-12-20 | Google Inc. | Providing additional space between an integrated circuit and a circuit board for positioning a component therebetween |
US8675429B1 (en) | 2007-11-16 | 2014-03-18 | Google Inc. | Optimal channel design for memory devices for providing a high-speed memory interface |
US8111566B1 (en) | 2007-11-16 | 2012-02-07 | Google, Inc. | Optimal channel design for memory devices for providing a high-speed memory interface |
US8081474B1 (en) | 2007-12-18 | 2011-12-20 | Google Inc. | Embossed heat spreader |
US8730670B1 (en) | 2007-12-18 | 2014-05-20 | Google Inc. | Embossed heat spreader |
US8705240B1 (en) | 2007-12-18 | 2014-04-22 | Google Inc. | Embossed heat spreader |
US8438328B2 (en) | 2008-02-21 | 2013-05-07 | Google Inc. | Emulation of abstracted DIMMs using abstracted DRAMs |
US8631193B2 (en) | 2008-02-21 | 2014-01-14 | Google Inc. | Emulation of abstracted DIMMS using abstracted DRAMS |
US8386722B1 (en) | 2008-06-23 | 2013-02-26 | Google Inc. | Stacked DIMM memory interface |
US8762675B2 (en) | 2008-06-23 | 2014-06-24 | Google Inc. | Memory system for synchronous data transmission |
US8819356B2 (en) | 2008-07-25 | 2014-08-26 | Google Inc. | Configurable multirank memory system with interface circuit |
US8335894B1 (en) | 2008-07-25 | 2012-12-18 | Google Inc. | Configurable memory system with interface circuit |
US20100293325A1 (en) * | 2009-01-23 | 2010-11-18 | Cypress Semiconductor Corporation | Memory devices and systems including multi-speed access of memory modules |
US8725983B2 (en) | 2009-01-23 | 2014-05-13 | Cypress Semiconductor Corporation | Memory devices and systems including multi-speed access of memory modules |
US9836416B2 (en) | 2009-01-23 | 2017-12-05 | Cypress Semiconductor Corporation | Memory devices and systems including multi-speed access of memory modules |
US8572320B1 (en) | 2009-01-23 | 2013-10-29 | Cypress Semiconductor Corporation | Memory devices and systems including cache devices for memory modules |
US9390783B1 (en) | 2009-01-23 | 2016-07-12 | Cypress Semiconductor Corporation | Memory devices and systems including cache devices for memory modules |
US8169233B2 (en) | 2009-06-09 | 2012-05-01 | Google Inc. | Programming of DIMM termination resistance values |
US20110095783A1 (en) * | 2009-06-09 | 2011-04-28 | Google Inc. | Programming of dimm termination resistance values |
US8588017B2 (en) | 2010-10-20 | 2013-11-19 | Samsung Electronics Co., Ltd. | Memory circuits, systems, and modules for performing DRAM refresh operations and methods of operating the same |
US20120239874A1 (en) * | 2011-03-02 | 2012-09-20 | Netlist, Inc. | Method and system for resolving interoperability of multiple types of dual in-line memory modules |
US8930647B1 (en) | 2011-04-06 | 2015-01-06 | P4tents1, LLC | Multiple class memory systems |
US9223507B1 (en) | 2011-04-06 | 2015-12-29 | P4tents1, LLC | System, method and computer program product for fetching data between an execution of a plurality of threads |
US9195395B1 (en) | 2011-04-06 | 2015-11-24 | P4tents1, LLC | Flash/DRAM/embedded DRAM-equipped system and method |
US9189442B1 (en) | 2011-04-06 | 2015-11-17 | P4tents1, LLC | Fetching data between thread execution in a flash/DRAM/embedded DRAM-equipped system |
US9182914B1 (en) | 2011-04-06 | 2015-11-10 | P4tents1, LLC | System, method and computer program product for multi-thread operation involving first memory of a first memory class and second memory of a second memory class |
US9176671B1 (en) | 2011-04-06 | 2015-11-03 | P4tents1, LLC | Fetching data between thread execution in a flash/DRAM/embedded DRAM-equipped system |
US9170744B1 (en) | 2011-04-06 | 2015-10-27 | P4tents1, LLC | Computer program product for controlling a flash/DRAM/embedded DRAM-equipped system |
US9164679B2 (en) | 2011-04-06 | 2015-10-20 | Patents1, Llc | System, method and computer program product for multi-thread operation involving first memory of a first memory class and second memory of a second memory class |
US9158546B1 (en) | 2011-04-06 | 2015-10-13 | P4tents1, LLC | Computer program product for fetching from a first physical memory between an execution of a plurality of threads associated with a second physical memory |
US20120311408A1 (en) * | 2011-06-03 | 2012-12-06 | Sony Corporation | Nonvolatile memory, memory controller, nonvolatile memory accessing method, and program |
US8862963B2 (en) * | 2011-06-03 | 2014-10-14 | Sony Corporation | Nonvolatile memory, memory controller, nonvolatile memory accessing method, and program |
US10162448B1 (en) | 2011-08-05 | 2018-12-25 | P4tents1, LLC | System, method, and computer program product for a pressure-sensitive touch screen for messages |
US10540039B1 (en) | 2011-08-05 | 2020-01-21 | P4tents1, LLC | Devices and methods for navigating between user interface |
US11740727B1 (en) | 2011-08-05 | 2023-08-29 | P4Tents1 Llc | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US20130036273A1 (en) * | 2011-08-05 | 2013-02-07 | Rambus Inc. | Memory Signal Buffers and Modules Supporting Variable Access Granularity |
US9666250B2 (en) | 2011-08-05 | 2017-05-30 | Rambus Inc. | Memory signal buffers and modules supporting variable access granularity |
US9502085B2 (en) | 2011-08-05 | 2016-11-22 | Rambus Inc. | Memory buffers and modules supporting dynamic point-to-point connections |
US11061503B1 (en) | 2011-08-05 | 2021-07-13 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10996787B1 (en) | 2011-08-05 | 2021-05-04 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10936114B1 (en) | 2011-08-05 | 2021-03-02 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10838542B1 (en) | 2011-08-05 | 2020-11-17 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US9417754B2 (en) | 2011-08-05 | 2016-08-16 | P4tents1, LLC | User interface system, method, and computer program product |
US10031607B1 (en) | 2011-08-05 | 2018-07-24 | P4tents1, LLC | System, method, and computer program product for a multi-pressure selection touch screen |
US10120480B1 (en) | 2011-08-05 | 2018-11-06 | P4tents1, LLC | Application-specific pressure-sensitive touch screen system, method, and computer program product |
US10146353B1 (en) | 2011-08-05 | 2018-12-04 | P4tents1, LLC | Touch screen system, method, and computer program product |
US10156921B1 (en) | 2011-08-05 | 2018-12-18 | P4tents1, LLC | Tri-state gesture-equipped touch screen system, method, and computer program product |
US9025409B2 (en) | 2011-08-05 | 2015-05-05 | Rambus Inc. | Memory buffers and modules supporting dynamic point-to-point connections |
US9268719B2 (en) * | 2011-08-05 | 2016-02-23 | Rambus Inc. | Memory signal buffers and modules supporting variable access granularity |
US10203794B1 (en) | 2011-08-05 | 2019-02-12 | P4tents1, LLC | Pressure-sensitive home interface system, method, and computer program product |
US10209807B1 (en) | 2011-08-05 | 2019-02-19 | P4tents1, LLC | Pressure sensitive touch screen system, method, and computer program product for hyperlinks |
US10209809B1 (en) | 2011-08-05 | 2019-02-19 | P4tents1, LLC | Pressure-sensitive touch screen system, method, and computer program product for objects |
US10209806B1 (en) | 2011-08-05 | 2019-02-19 | P4tents1, LLC | Tri-state gesture-equipped touch screen system, method, and computer program product |
US10209808B1 (en) | 2011-08-05 | 2019-02-19 | P4tents1, LLC | Pressure-based interface system, method, and computer program product with virtual display layers |
US10222891B1 (en) | 2011-08-05 | 2019-03-05 | P4tents1, LLC | Setting interface system, method, and computer program product for a multi-pressure selection touch screen |
US10222893B1 (en) | 2011-08-05 | 2019-03-05 | P4tents1, LLC | Pressure-based touch screen system, method, and computer program product with virtual display layers |
US10222894B1 (en) | 2011-08-05 | 2019-03-05 | P4tents1, LLC | System, method, and computer program product for a multi-pressure selection touch screen |
US10222895B1 (en) | 2011-08-05 | 2019-03-05 | P4tents1, LLC | Pressure-based touch screen system, method, and computer program product with virtual display layers |
US10222892B1 (en) | 2011-08-05 | 2019-03-05 | P4tents1, LLC | System, method, and computer program product for a multi-pressure selection touch screen |
US10788931B1 (en) | 2011-08-05 | 2020-09-29 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10275087B1 (en) | 2011-08-05 | 2019-04-30 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10275086B1 (en) | 2011-08-05 | 2019-04-30 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10782819B1 (en) | 2011-08-05 | 2020-09-22 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10338736B1 (en) | 2011-08-05 | 2019-07-02 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10345961B1 (en) | 2011-08-05 | 2019-07-09 | P4tents1, LLC | Devices and methods for navigating between user interfaces |
US10365758B1 (en) | 2011-08-05 | 2019-07-30 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10386960B1 (en) | 2011-08-05 | 2019-08-20 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10521047B1 (en) | 2011-08-05 | 2019-12-31 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10534474B1 (en) | 2011-08-05 | 2020-01-14 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10725581B1 (en) | 2011-08-05 | 2020-07-28 | P4tents1, LLC | Devices, methods and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10551966B1 (en) | 2011-08-05 | 2020-02-04 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10592039B1 (en) | 2011-08-05 | 2020-03-17 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product for displaying multiple active applications |
US10606396B1 (en) | 2011-08-05 | 2020-03-31 | P4tents1, LLC | Gesture-equipped touch screen methods for duration-based functions |
US10642413B1 (en) | 2011-08-05 | 2020-05-05 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10649580B1 (en) | 2011-08-05 | 2020-05-12 | P4tents1, LLC | Devices, methods, and graphical use interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10649581B1 (en) | 2011-08-05 | 2020-05-12 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10649578B1 (en) | 2011-08-05 | 2020-05-12 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10649571B1 (en) | 2011-08-05 | 2020-05-12 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10649579B1 (en) | 2011-08-05 | 2020-05-12 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10656756B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10656758B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10656759B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10656752B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10656753B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10656757B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10656754B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Devices and methods for navigating between user interfaces |
US10656755B1 (en) | 2011-08-05 | 2020-05-19 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US10664097B1 (en) | 2011-08-05 | 2020-05-26 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10671213B1 (en) | 2011-08-05 | 2020-06-02 | P4tents1, LLC | Devices, methods, and graphical user interfaces for manipulating user interface objects with visual and/or haptic feedback |
US10671212B1 (en) | 2011-08-05 | 2020-06-02 | P4tents1, LLC | Gesture-equipped touch screen system, method, and computer program product |
US20170255386A1 (en) * | 2011-09-16 | 2017-09-07 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (dram)-like interface |
US9658780B2 (en) * | 2011-09-16 | 2017-05-23 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (DRAM)-like interface |
US9251882B2 (en) * | 2011-09-16 | 2016-02-02 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (DRAM)-like interface |
US10268393B2 (en) * | 2011-09-16 | 2019-04-23 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (DRAM)-like interface |
US20130073791A1 (en) * | 2011-09-16 | 2013-03-21 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (dram)-like interface |
US9898204B2 (en) * | 2011-09-16 | 2018-02-20 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (DRAM)-like interface |
US9396783B2 (en) * | 2011-09-16 | 2016-07-19 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (DRAM)-like interface |
US20160328152A1 (en) * | 2011-09-16 | 2016-11-10 | Avalanche Technology, Inc. | Magnetic random access memory with dynamic random access memory (dram)-like interface |
US9827271B2 (en) | 2013-03-15 | 2017-11-28 | Cook Biotech Incorporated | Methods and devices for lung volume reduction with extracellular matrix material |
US20170128068A1 (en) * | 2014-04-02 | 2017-05-11 | Covidien Lp | Surgical fastener applying apparatus, kits and methods for endoscopic procedures |
US20170024146A1 (en) * | 2015-07-23 | 2017-01-26 | Fujitsu Limited | Memory controller, information processing device, and control method |
US11211141B2 (en) | 2016-08-26 | 2021-12-28 | Sandisk Technologies Llc | Storage system with multiple components and method for use therewith |
US11610642B2 (en) | 2016-08-26 | 2023-03-21 | Sandisk Technologies Llc | Storage system with multiple components and method for use therewith |
US10679722B2 (en) | 2016-08-26 | 2020-06-09 | Sandisk Technologies Llc | Storage system with several integrated components and method for use therewith |
WO2023114071A1 (en) * | 2021-12-13 | 2023-06-22 | Advanced Micro Devices, Inc. | A method and apparatus for recovering regular access performance in fine-grained dram |
US11756606B2 (en) | 2021-12-13 | 2023-09-12 | Advanced Micro Devices, Inc. | Method and apparatus for recovering regular access performance in fine-grained DRAM |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9047976B2 (en) | Combined signal delay and power saving for use with a plurality of memory circuits | |
US7724589B2 (en) | System and method for delaying a signal communicated from a system to at least one of a plurality of memory circuits | |
US7609567B2 (en) | System and method for simulating an aspect of a memory circuit | |
US8077535B2 (en) | Memory refresh apparatus and method | |
US7580312B2 (en) | Power saving system and method for use with a plurality of memory circuits | |
US20080028135A1 (en) | Multiple-component memory interface system and method | |
US20080025136A1 (en) | System and method for storing at least a portion of information received in association with a first operation for use in performing a second operation | |
US8745321B2 (en) | Simulating a memory standard | |
US8112266B2 (en) | Apparatus for simulating an aspect of a memory circuit | |
US10013371B2 (en) | Configurable memory circuit system and method |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: METARAM, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:RAJAN, SURESH NATARAJAN;SCHAKEL, KEITH R.;SMITH, MICHAEL JOHN SEBASTIAN;AND OTHERS;REEL/FRAME:018053/0816;SIGNING DATES FROM 20060727 TO 20060728 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:METARAM, INC.;REEL/FRAME:023525/0835Effective date: 20090911Owner name: GOOGLE INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:METARAM, INC.;REEL/FRAME:023525/0835Effective date: 20090911 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
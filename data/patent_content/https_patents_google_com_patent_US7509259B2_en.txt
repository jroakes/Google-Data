US7509259B2 - Method of refining statistical pattern recognition models and statistical pattern recognizers - Google Patents
Method of refining statistical pattern recognition models and statistical pattern recognizers Download PDFInfo
- Publication number
- US7509259B2 US7509259B2 US11/018,271 US1827104A US7509259B2 US 7509259 B2 US7509259 B2 US 7509259B2 US 1827104 A US1827104 A US 1827104A US 7509259 B2 US7509259 B2 US 7509259B2
- Authority
- US
- United States
- Prior art keywords
- training data
- pattern recognition
- identity
- item
- statistical pattern
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/06—Creation of reference templates; Training of speech recognition systems, e.g. adaptation to the characteristics of the speaker's voice
- G10L15/063—Training
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
- G06F18/241—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches
- G06F18/2415—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches based on parametric or probabilistic models, e.g. based on likelihood ratio or false acceptance rate versus a false rejection rate
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/06—Creation of reference templates; Training of speech recognition systems, e.g. adaptation to the characteristics of the speaker's voice
- G10L15/063—Training
- G10L2015/0635—Training updating or merging of old and new templates; Mean values; Weighting
Definitions
- the present invention relates in general to statistical pattern recognition.
- an archetypical statistical pattern recognition system works as follows. First raw data is collected from the thing to be recognized. For example, for face recognition a photograph is taken of a face to be recognized, and for speech recognition, spoken words to be recognized are input through a microphone. The raw data has a relatively high byte size, includes noise and includes a great deal of minor statistical variations. For example, in examining audio waveforms of different or even the same person saying the same word many times, it will be seen that no two waveforms are identical, even though the underlying pattern (e.g., the word to be recognized) is the same. Such variability makes pattern recognition challenging.
- the raw data is subjected to feature extraction.
- the role of feature extraction is to extract essential information from the raw data, by projecting the relatively high-byte-size raw data onto a finite dimensional orthogonal basis.
- the details of the feature extraction process are outside the focus of the present description.
- the byte size of the extracted feature vector(s) is generally lower than that of the raw data.
- the feature vectors are plugged into a number of statistical pattern recognition models, each representing a different pattern (e.g., face or pronounced word), in order to determine the statistical pattern recognition model that yields the highest probability score, and thereby identify the pattern (e.g., word, face) in the raw data.
- a statistical pattern recognition model is a mixture (weighted sum) of several multidimensional probability density functions (e.g., Gaussians). This is a kind of generalization of the familiar one-dimensional Gaussian distribution. A mixture is used because a given pattern (e.g., the letter v written in script) appears in two or more variants. For example, words may be written or pronounced in two or more different ways.
- models Prior to using the statistical pattern recognition models in performing recognition, models are ‘trained.’
- the object of training is to determine the parameters (e.g., vector means, variances, and mixture component weights) of each particular statistical pattern recognition model, so that each particular model yields the highest probability score compared to other models when evaluated using feature vectors extracted from raw data including the pattern that the model is intended to recognize.
- a set of training data samples is used to train each statistical pattern recognition model.
- the set includes many different versions of the same pattern, for example the word seven spoken by 100 different people.
- each model's parameters are adjusted using an iterative optimization scheme to maximize a summed probability score for the set of training data scores for the model.
- identity of the pattern or patterns present in the training data needs to be known so that it can be used to train the correct model.
- the identity of each pattern is typically transcribed by a human transcriber. Because large amounts of training data are often used, human error leads to a certain percentage of error in the transcribed identities. Such errors can lead to poor training and degraded recognition performance.
- FIG. 1 is a block diagram of a system for refining statistical pattern recognition models
- FIG. 2 is a first part of a flowchart of a method of refining statistical pattern recognition models and using resulting refined statistical pattern recognition models to perform pattern recognition;
- FIG. 3 is a second part of the flowchart begun in FIG. 2 ;
- FIG. 4 is a third part of the flowchart begun in FIG. 2 ;
- FIG. 5 is a fourth part of the flowchart begun in FIG. 2 ;
- FIG. 6 is a block diagram of a network of computers that is used to execute programs embodying the method shown in FIGS. 2-4 ;
- FIG. 7 is a block diagram of a computer used in the network of computers shown in FIG. 6 ;
- FIG. 8 is a block diagram of a device for performing statistical pattern recognition.
- a or an as used herein, are defined as one or more than one.
- plurality as used herein, is defined as two or more than two.
- another as used herein, is defined as at least a second or more.
- including and/or having, as used herein, are defined as comprising (i.e., open language).
- coupled as used herein, is defined as connected, although not necessarily directly, and not necessarily mechanically.
- FIG. 1 is a block diagram of a system 100 for refining statistical pattern recognition models.
- the system comprises a training database 102 that includes a set of training data 104 and associated identifying transcriptions 106 .
- the training data 104 suitably includes many, for example several thousand, pieces of training data.
- the associated identifying transcriptions 106 include a transcribed identity for each piece of training data.
- the associated identifying transcriptions 106 are typically prepared by a human transcriber.
- the training data 104 is coupled to a recognition module 108 and a forced recognition module 110 .
- the recognition module 108 and the forced recognition module 110 both use a set of statistical pattern recognition models 112 that include model parameters 114 .
- the recognition module 108 performs statistical pattern recognition on each item of the training data 104 and outputs a recognized identity and a first probability score for the recognized identity.
- the recognized identity is the recognized identity for an item of training data by virtue of the fact that a statistical pattern recognition model associated with the recognized identity yields the highest probability score (the first probability score) among all of the statistical pattern recognition models 112 used by the recognition module 108 when evaluated with a feature vector or vectors extracted from the item of training data.
- the forced recognition module 110 calculates a second probability score for each particular item of training data 104 by evaluating a statistical pattern model identified by the associated identifying transcription 106 for the particular item of training data. If the recognition module 108 does not recognize the item of training data correctly, or if the transcribed identity for the item of training data is erroneous, the recognized identity output by the recognition module 108 will not match the transcribed identity, and the first and second probability scores will, in general, differ. As will be explained further below, the system 100 serves to reduce errors by the recognition module 108 (and pattern recognition systems used outside of the system 100 for real recognition tasks) even if there are errors in some of the associated identifying transcriptions 106 . Although not shown in FIG. 1 , the same feature vector extraction process can be used for both the recognition module 108 and the forced recognition module 110 .
- the first probability score and the second probability score are supplied to a score differencer 116 which calculates the difference between the two scores.
- the difference is supplied to an error analysis module 118 .
- the error analysis module 118 also receives the recognized identity from the recognition module 108 and the transcribed identity from the associated identifying transcriptions 106 . By comparing the difference between the two scores and comparing the recognized identity with the transcribed identity for each item of training data, the error analysis module 118 is able to determine if there is a gross discrepancy between the recognized identity and the transcribed identity.
- a gross discrepancy can be due to a human transcription error in the associated identifying transcriptions 106 or a recognition error that is due to, as yet, less than optimally trained pattern recognition models 112 used by the recognition module 108 and the forced recognition module 110 . If, for a particular item of training data, a gross discrepancy occurs, the system 100 does not attempt to tune the statistical pattern recognition models 112 in an attempt to eliminate the gross discrepancy. Rather the system will disregard, at least temporarily, the particular item of training data for which the gross discrepancy occurred.
- a weight adjustment module 120 also receives the recognized identity and the transcribed identity for each item of training data. Based on the transcribed identity, the recognized identity and/or a comparison of the two, the weight adjustment module 120 determines a weight that will be assigned to gradient component summands that are computed based a particular item of training data. Weights need not be computed for items of training data for which a gross discrepancy was found.
- a gradient component summand calculator 122 uses the recognized identity from the recognition module 108 , the transcribed identity from the identifying transcriptions 106 , feature vectors extracted from the training data, and the model parameters 114 to calculate summands of components of a gradient of an objective function that is a function of the model parameters 114 of the statistical pattern recognition models 112 . For each item of training data, summands of gradient components which are derivatives of the objective function with respect to model parameters 114 of the statistical pattern recognition model corresponding to the recognized identity and with respect to model parameters 114 of the statistical pattern recognition model corresponding to the associated identifying transcription 106 for the item of training data are calculated.
- each item of training data does not give rise to gradient component summands for all of the model parameters 114 for all of the statistical pattern recognition models 112 .
- the objective function is of such character, as will be described further below, that optimizing the objective function in terms of the model parameters 114 adjusts the values of the model parameters 114 such that improved statistical pattern recognition performance will be achieved.
- the error analysis module 118 signals the weight assignment module 120 and the gradient component summand calculator 122 not to process training data items for which a gross discrepancy has occurred.
- a gradient component summand accumulator 124 receives the gradient component summands calculated by the gradient component summand calculator 122 , and weights assigned by the weight assignment module 120 for gradient component summands derived from each item of training data.
- the gradient component summand accumulator 124 calculates weighted sums of the gradient component summands over a large training data set that includes numerous examples of many if not all of the different patterns (e.g., faces or words) that are to be recognized by the recognition module 108 . Summands for each gradient component are summed separately. According to certain embodiments, the sums computed by the gradient component accumulator 124 do not include summands based on training data that was correctly identified.
- the sums computed by the gradient component accumulator 124 do not include summands based on training data items for which there is a gross discrepancy between the recognized identity and the transcribed identity. By excluding summands for the latter case, mistuning the model parameters 114 based on erroneous transcriptions is avoided. In the case that a gross discrepancy occurs for a particular item of training data, not withstanding the fact that the associated identifying transcription 106 is correct, excluding gradient component summands based on the particular item of training data avoids trying to make major adjustments to the model parameters 114 in one iteration, and thereby avoids numerical instabilities.
- a module for adjusting the model parameters 126 adjusts the model parameters 114 by applying a gradient-based optimization method (e.g., steepest descent method) to the objective function.
- the gradient component sums produced by the accumulator 124 are the gradient components of the objective function.
- a pattern to be recognized e.g., a word
- HMM Hidden Markov Model
- audible speech is assumed to arise from a sequence of underlying or hidden states. States are active during a succession of short intervals of time, e.g., 10 milliseconds, and give rise to vocalized sounds termed emissions.
- Each spoken word such as ‘one’ or ‘five’ is associated with a particular sequence of states.
- One set of parameters of the HMM statistical pattern model of a particular word is a set of transition probabilities between successive states. Note that there is a finite ‘transition’ probability that the HMM will remain in the same state for two successive intervals.
- a second set of parameters of the HMM statistical pattern model of a particular word are the vector means, covariances, and weights of multidimensional probability density functions (e.g., a multidimensional Gaussian mixtures) that gives the a posteriori probability that the HMM was in a given state during a particular interval, given a feature vector that was derived from a vocalized sound produced during the particular interval.
- multidimensional probability density functions e.g., a multidimensional Gaussian mixtures
- ⁇ ) is the a posteriori probability that a word identified with a sequence of states ⁇ was spoken, given that a sequence of vocalized sounds characterized by a sequence of feature vectors O was detected;
- b S t (O t ) is the a posteriori probability that the underlying HMM of the postulated word was in a state S during the t th interval, given that a vocalized sound characterized by a feature vector O t was detected during the t th time interval;
- a S t-1′ S t is the transition probability between a state postulated for a (t-1) th interval for the word and a state postulated for the t th interval for the word.
- b S (O t ) is a Gaussian mixture of the form:
- C n is the weight of the n th mixture component
- m is the dimension of the feature vectors O t ;
- ⁇ n is the covariance matrix for the n th mixture component (the feature vector extraction is typically designed to make ⁇ n diagonal, so as to reduce information redundancy)
- ⁇ n is the vector mean of the n th mixture component
- the Viterbi algorithm or other search algorithm is typically used to find a sequence of states (corresponding to one particular word) that maximizes the log-likelihood statistical pattern model given by equations one and two.
- the objective function used in the system shown in FIG. 1 and in the method to be described with reference to FIGS. 2-4 is of such character that its magnitude depends on the magnitude of a statistical pattern recognition model corresponding to a recognized identity compared to a magnitude of statistical pattern recognition model corresponding to a transcribed identity when evaluated with feature vectors derived from each of a plurality of items of training data.
- the magnitude of the objective function depends on numerous items of training data.
- the magnitude of the objective function depends on all items of training data for which there is a discrepancy that is not a gross discrepancy between a transcribed identity and a recognized identity. According to certain embodiments, the magnitude of the objective function depends on the difference between the magnitude of the statistical pattern model corresponding to the recognized identity and the statistical pattern model corresponding to the transcribed identity when evaluated with feature vectors extracted from the training data. According to one alternative, the objective function depends on the ratio of the magnitude of the statistical pattern model corresponding to the recognized identity to the magnitude of the statistical pattern model corresponding to the transcribed identity when evaluated with feature vectors extracted from the training data. In the former case, the difference can be written in mathematical notation as:
- d ( O ) P ( O
- the first term is a probability score (magnitude) calculated by evaluating the statistical pattern model ⁇ recognized corresponding to the recognized identity with feature vectors O extracted from an item training data
- the second term is a probability score (magnitude) calculated by evaluating the statistical pattern model ⁇ transcribed corresponding to the transcribed identity with the feature vectors O extracted from the item training data.
- equation three are of the form indicated in equations one and two.
- equations one and two For other applications, other appropriate statistical pattern recognition models are used.
- the objective function includes a plurality of terms of the form:
- Equation four ⁇ 2 ⁇ ( 1 1 + exp ⁇ ⁇ ( - ⁇ ⁇ ⁇ d ⁇ ( O ) ) - 0.5 ) ⁇ ⁇ for ⁇ ⁇ 0 ⁇ d ⁇ ( O ) ⁇ LIM ⁇ 0 , otherwise where gamma is a predetermined constant.
- the form of the terms given by the first part of equation four is a sigmoid function with the difference given in equation three as the argument. Per equation four, if d(O) exceeds a predetermined limit, LIM, which is used to judge if a gross discrepancy has occurred, equation four evaluates to zero.
- the maximum value of equation 4 is one.
- equation 4 approximates a misrecognition count in that it evaluates to a value approaching 1 if an error (other than a gross discrepancy) occurs and evaluates to zero if no error occurs.
- the limit LIM is a pre-determined value that is selected to disregard gross recognition errors in the objective function.
- the objective function is a weighted sum or alternatively a simple sum of terms of the form given by equation four taken over all the items of training data for which there is a discrepancy, but not a gross discrepancy between the recognized identity and the transcribed identity.
- gross discrepancies are associated with a high value of d(O) in which cases equation four evaluates to zero.
- equation three evaluates to zero in cases that the recognized identity matches the transcribed identity, and in such cases the gradient of terms of the form given by equation four would be zero.
- the weighted sum is:
- w is a weight
- equation five is differentiable so that its gradient is calculable. This fact allows derivative-based optimization methods, such as the path of steepest descent method, to be used for optimization.
- the objective function given by equation five and alternatives thereto depends on parameters of the statistical pattern recognition models that were involved in each recognition error (excluding training data that led to gross discrepancies in some embodiments) for each optimization iteration, including both the statistical pattern recognition model associated with the transcribed identity and the statistical pattern recognition model associated with the presumably erroneously recognized identity.
- equation five or alternatives thereto are optimized using an optimization method that uses function evaluations but does not require gradient component evaluations.
- Routines implementing such optimization methods repeatedly call an objective function (e.g., equation five) in the course of finding an extremum (minimum or maximum).
- objective function e.g., equation five
- minimum or maximum an extremum
- optimization methods include, but are not limited to, simulated annealing, the simplex method and the complex method.
- the values of the parameters with which the objective function is called, in the course of optimization is determined by the internal logic of the optimization algorithm, which is outside the focus of the present description.
- FIGS. 2-5 show a flowchart of a method 200 of refining statistical pattern recognition models and using resulting refined statistical pattern recognition models to perform pattern recognition.
- initial values of model parameters of a number of statistical pattern recognition models are read.
- the initial values that are read in block 202 can be determined using known methods.
- feature vectors are extracted from items of training data in a set of training data. The details of the process of feature vector vary for each pattern recognition application and are outside the focus of the present description.
- Block 206 is the top of a loop for iteratively refining the statistical pattern recognition model parameters. For a first run through the loop commenced in block 206 , the initial of model parameters are used. At the end of each run through the loop commenced in block 206 the values (referred to as current values) of the model parameters are updated in preparation for the next run through the loop commenced in block 206 . Generally, each iteration of the loop commenced in block 206 refines the values of the model parameters, improving recognition performance. In block 208 gradient component sums of an objective function (e.g., the objective function given in equation five) are initialized to zero.
- Block 210 is the top of another loop (within the loop commenced in block 206 ) that processes successive items of training data in an entire training database.
- the training database includes numerous examples of each pattern that is to be recognized using the statistical pattern recognition models that are initially defined by the parameters read in block 202 .
- feature vectors that have been derived from an item of training data corresponding to the current iteration of the loop commenced in block 210 are processed by a statistical pattern recognizer in order to identify the item of training data (i.e., determine the recognized identity) and compute a first (recognized) probability score for the item of training data.
- Block 214 is a decision block, the outcome of which depends on whether the recognized identity matches the transcribed identity associated with the item of training data.
- an index that points to successive items of training data is incremented to a next item of training data, and the method 200 loops back to block 210 in order to process the next item of training data.
- no further processing occurs in cases that the recognized identity matches the transcribed identity.
- the method 200 continues with block 216 in which a statistical pattern recognition model corresponding to the transcribed identity associated with the item of training data being addressed in the current iteration of the loop commenced in block 210 is evaluated using the feature vectors extracted from the item of training data in order to compute a second (forced recognition) probability score.
- Block 218 is a decision block, the outcome of which depends on whether a difference between the first probability score and the second probability score exceeds a predetermined limit.
- the test performed in block 218 is one way to assess if there is a gross discrepancy between the transcribed identity and the recognized identity. If the aforementioned limit is exceeded, then according to the embodiment shown in FIG. 2 no further processing of the item of training data corresponding to the current iteration of the loop commenced in block 210 is conducted and the method 200 branches to block 220 in order to advance to the next item of training data as previously described.
- Block 222 is a decision block, the outcome of which depends on whether the recognized identity is outside of a confusability group for the transcribed identity of the item of training data.
- One way to define the confusability group for each pattern is based on the probabilities that each pattern will be misrecognized as other patterns. Such probabilities can be calculated prior to performing the method 200 , using pattern recognition models based on the initial values of the pattern recognition model parameters.
- the confusability group for a given pattern would include all other patterns for which the probability that the given pattern would be misrecognized as one of the other pattern is above a first predetermined threshold (lower limit).
- the first predetermined threshold would be chosen by a system designer based on experience and/or trial and error.
- a confusability group is defined for each particular pattern that includes that includes a number of other patterns that are most likely (among all of the patterns to be recognized) to be confused with the particular pattern.
- the confusability group for a given pattern can be hand selected by the designer based on knowledge of a particular application and recorded in a memory. For example for speech recognition based on the English alphabet, the letters in the so-called E-set (b,c,d,e,g,p,t,v,z) can be assigned to a confusability group of the letter e.
- confusability group test in block 222 is another way to determine if there is a gross discrepancy between the recognized identity and the transcribed identity.
- the tests performed in blocks 218 and 222 need not be performed in all embodiments. If it is determined in block 222 that the recognized identity is outside the confusability group of the transcribed identity for the item of training data, then the method 200 branches to block 220 and proceeds as previously describe.
- the method 200 continues with block 302 in FIG. 3 .
- the gradient with respect to model parameters of the statistical pattern recognition model corresponding to the recognized identity is computed and in block 304 the gradient with respect to model parameters of the statistical pattern recognition corresponding to the transcribed identity is computed.
- the gradients that are computed in blocks 302 and 304 are computed at the feature vector(s) extracted from the current item of training data.
- the gradient of the difference (equation three) between the pattern recognition model corresponding to the recognized identity and the pattern recognition model corresponding to the transcribed identity is computed with respect to the model parameters of both models. Block 306 amounts to taking the difference between the results of blocks 302 and 304 .
- blocks 302 to 308 serve to compute derivatives of an unweighted summand of equation five for a particular item of training data with respect to parameters appearing in the unweighted summand. (The determination of the weight for the summand is described hereinbelow.) Although the calculation of the terms of the form given by equation four are shown in four separate blocks 302 , 304 , 306 , 308 in FIG. 3 , in practice, the way in which the calculation is coded will depend on the computer language used to implement the method 200 and individual programming style.
- equations one and two For multipart statistical pattern recognition models such as represented in equations one and two, only the gradient components for parameters involved in parts of the model for which the recognized identity differs from the transcribed identity need to be calculated. Gradient terms for parts of the statistical pattern recognition models that are the same will cancel in the difference in equation three. For example, in the case of equation one and two, if the recognized identity and the transcribed identity both identify a particular Gaussian mixture model for a particular interval of speech (characterized by a particular feature vector), then the gradient components with respect to parameters of that particular Gaussian mixture for the particular interval need not be calculated.
- the recognized pattern is compared to the pattern identified in the associated identifying transcription to determine the type of error, in particular (in certain embodiments) whether an insertion, deletion or substitution error has occurred.
- a weight is assigned to be used for terms of the gradient components that were calculated using the current item of training data based on the type of error. For each type of error, a predetermined weight is suitably used. Selection of the weights can be used to steer the adjustment of model parameters so as to reduce a type or types of errors that were previously more prevalent, e.g. more prevalent using the initial values of the model parameters read in block 202 . For example, if prior to using the method 200 , pattern recognition resulted in more insertion errors, gradient components derived from training data that yielded an insertion error can be given a greater weight.
- Block 314 is a decision block, the outcome of which depends on whether the recognized identity is different from but easily confused with the transcribed identity. For example, in speech recognition the name ‘Phil’ may be easily confused with the name ‘Bill’.
- the test performed in block 314 can be based on the statistics on the likelihood of confusion of two patterns that are gathered using statistical pattern recognition models as they exist prior to refinement by the method 200 . In the latter case the test for confusability is made by comparing the likelihood of confusion to a second predetermined threshold (lower limit). According to such an embodiment, if the likelihood of confusion of the pattern corresponding to the recognized identity and the pattern corresponding to the transcribed identity is above the second threshold, the two patterns are considered highly confusable.
- the second predetermined threshold which is greater than the first predetermined threshold is chosen by the system designer based on experience and/or trial and error. Alternatively, statistics of the likelihood of confusion can be calculated during each optimization iteration for use in a successive iteration. Alternatively, a recognized identity is considered to be highly confusable with a transcribed identity based on a stored set of rules (e.g., ‘Bill’ is highly confusable with ‘Phil’).
- the method 200 branches to block 316 in which the weight assigned to gradient components derived from the item of training data corresponding to the current iteration of the loop commenced in block 210 is increased. Increasing the weight in these circumstances places a priority on discriminating patterns that tend to be highly confusable.
- Block 318 is a decision block, the outcome of which depends on whether the transcribed identity corresponds to a high priority pattern, for example the word ‘help’ in a voice communication system. If so, then the program branches to block 316 previously described. Note that the weight can be increased one amount for highly confusable patterns and another amount for high priority patterns.
- Multiplication of gradient component summands by a weight is one example of using an emphasis function to emphasize gradient component summands derived from each item of training data for which a recognition error occurs, based on the nature of the error or the identity of the pattern in the training data.
- other emphasis functions such as, but not limited to, exponentiation with different exponents is used in place of multiplication by different weights.
- multiplication by a weight is a simple linear operation.
- block 320 If the outcome of block 318 is negative, or after executing block 316 , block 320 is reached.
- the gradient component sums that were initialized in block 208 are updated by adding weighted terms of gradient components derived from the current item of training data.
- the gradient components summands that were calculated in block 308 and are weighted by weights determined in blocks 310 - 318 are added to the sums that were initialized in block 208 .
- blocks 310 and 312 and/or 314 and/or 318 are not included in the method 200 .
- Block 322 is a decision block the outcome of which depends on whether there is more training data yet to be processed. If so, then in block 324 the index that points to successive items of training data is incremented to a next item of training data, and the method 200 loops back to block 210 in order to process the next item of training data. If, on the other hand, there are no more items of training data in the training database that remain to be processed, then the method 200 continues with block 402 in FIG. 4 . In block 402 a gradient-based optimization method is used to update model parameters based on the gradient component sums. In using the steepest descent method, gradient model parameters are updated according to the following equation:
- ⁇ k ⁇ ( n + 1 ) ⁇ k ⁇ ( n ) - ⁇ ⁇ ⁇ OBJ ⁇ ⁇ k ⁇ ( n )
- block 404 is a decision block that tests whether one or more stopping criteria has been satisfied.
- the stopping criteria can for example require that the difference between the value of the objective function in the preceding interation of the loop starting in block 206 ) and the value of the objective function in the current iteration be less than a second predetermined number. Alternatively, the stopping criteria can require that the error rate for the all the training data 104 in the training database is less than a predetermined percentage. If the stopping criteria are not satisfied, then the method 200 loops back to block 206 in order to run through the previously described steps again in order to further refine the model parameters. If the stopping criteria have been met then in block 406 the current values of the model parameters are considered adequately refined values of the model parameters and are stored for future use, i.e. for use in performing statistical pattern recognition.
- the above-described part of the method 200 up to and including block 406 is implemented in a program that is suitably run on a high power parallel computer or computer system.
- the method 200 can be parallelized by having each of a plurality processors execute blocks 202 to 318 on a portion of the training database, and once the entire training database has been processed, using one processor to add together (component-by-component) the gradient component sums calculated by the plurality of processors, and then using the one processor to execute blocks 320 , 402 , 404 , 406 .
- the part of the method shown in FIG. 5 is suitably executed by a single processor, e.g., a processor in a desktop computer, or a processor in a handheld device.
- the part of the method shown in FIG. 5 uses the refined statistical pattern recognition models to perform statistical pattern recognition.
- the method 200 continues with block 502 in FIG. 5 .
- the refined model parameters which were stored in block 406 , are read.
- data including one or more unknown patterns to be recognized is read.
- feature vectors are extracted from the data read in block 504 .
- the feature vectors extracted in block 506 are processed with a statistical pattern recognizer that uses statistical pattern recognition models based on the refined model parameters read in block 502 .
- a recognized identity that has been determined by the statistical pattern recognizer is output or recorded.
- Block 512 is a decision block that depends on whether there is additional data to be processed. If so, the method 200 loops back to block 504 to process the additional data. If not, the method 200 terminates.
- FIG. 6 is a block diagram of a network of computers 600 that is used to execute programs embodying the part of the method 200 shown in FIGS. 2-4 .
- the network of computers 600 attains a high level of computing power by using multiple computers in parallel. The high level of computing power is useful in executing the part of the method 200 shown in FIGS. 2-4 with a large-size training database.
- the network of computers 600 comprises a plurality of computers including a first processing computer 602 , a second processing computer 604 , a third processing computer 606 , an nth processing computer 608 and an interface computer 610 coupled together through a network switch 612 .
- the interface computer 610 allows a user to load and execute programs on the network 600 .
- the total number of processing computers for such networks is typically in the range of 10 to 50 computers.
- a program embodying the parts of the method 200 shown in FIGS. 2 and 4 has been executed on a network that included 20 processing computers.
- One variant of a network of computers used for computing is known as a Beowulf cluster.
- FIG. 7 is a block diagram of the interface computer 610 used in the network of computers 600 shown in FIG. 6 .
- the interface computer 610 comprises a microprocessor 702 , Random Access Memory (RAM) 704 , nonvolatile memory 706 , a hard disk drive 708 , a display adapter 710 (e.g., a video card), a removable computer readable medium reader 714 , a network adapter 716 , a keyboard 718 , and an I/O port 720 communicatively coupled through a digital signal bus 726 .
- a video monitor 712 is electrically coupled to the display adapter 710 for receiving a video signal.
- a pointing device 722 (e.g., a mouse) is electrically coupled to the I/O port 720 to allow electrical signals generated by user operation of the pointing device 722 to be input.
- the network adapter 716 is used to communicatively couple the interface computer 610 to the network switch 612 shown in FIG. 6 .
- the computer readable medium reader 714 suitably comprises a Compact Disk (CD) drive or the like.
- a computer readable medium 724 that includes software embodying the system and methods described above with reference to FIGS. 1-5 is provided.
- the software included on the computer readable medium is loaded through the removable computer readable medium reader 714 in order to configure the network of computers 600 to carry out processes of the current invention that are described above with reference to flow diagrams.
- the software is loaded from another computer through another network (not shown).
- the interface computer 610 may, for example, comprise a personal computer or a workstation computer.
- the processing computers 602 , 604 , 606 , 608 shown in FIG. 6 suitably have the similar components as the interface computer 610 , with the exceptions that the processing computers 602 , 604 , 606 , 608 need not include the display adaptor 710 , the video monitor 712 , or the pointing device 722 .
- FIG. 8 is a block diagram of a device 800 for performing statistical pattern recognition.
- the device 800 executes the part of the method 200 shown in FIG. 5 .
- the device 800 comprises an analog-to-digital converter (A/D) 802 , a program memory 804 , a workspace memory 806 , a processor 808 and a user interface 810 coupled together by a signal bus 812 .
- a raw data sensor 814 is coupled to the A/D 802 .
- the raw data sensor 814 is used to input data including patterns to be recognized.
- the nature of the raw data sensor 814 depends on the nature of the data that includes patterns to be recognized.
- the raw data sensor 814 comprises a microphone
- object recognition e.g., face recognition
- the raw data sensor 814 can comprise a camera.
- the data input through the raw data sensor 814 is digitized by the A/D 802 and supplied to the processor 808 .
- the processor 808 executes one or more statistical pattern recognition programs using statistical pattern recognition models including parameters that have been optimized using the system 100 shown in FIG. 1 or the part of the method 200 shown in FIGS. 2-4 .
- the one or more programs and the parameters are stored in the program memory 804 .
- the workspace memory 806 is used in executing the one or more programs.
- the user interface 810 is used to output the recognition result or information based on the recognition result.
- the user interface 810 can for example comprise a display screen and/or a loudspeaker.
- the parts can be physically separated but coupled together through one or more communication links, such as, for example optical, wireline or wireless communication links.
- a communication link can be inserted between the A/D 802 and the signal bus 812 and/or a communication link can be inserted between the signal bus 812 and the user interface 810 .
Abstract
Description
d(O)=P(O|λ recognized)−P(O|λ transcribed)
where, the first term is a probability score (magnitude) calculated by evaluating the statistical pattern model λrecognized corresponding to the recognized identity with feature vectors O extracted from an item training data and the second term is a probability score (magnitude) calculated by evaluating the statistical pattern model λtranscribed corresponding to the transcribed identity with the feature vectors O extracted from the item training data.
where gamma is a predetermined constant. The form of the terms given by the first part of equation four is a sigmoid function with the difference given in equation three as the argument. Per equation four, if d(O) exceeds a predetermined limit, LIM, which is used to judge if a gross discrepancy has occurred, equation four evaluates to zero. In equation 4, if d(O)=0, i.e., if the first probability score (calculated by block 108) and the second probability score (calculated by block 110) are identical, which generally implies that a pattern was correctly recognized, equation four also evaluates to zero. The maximum value of equation 4 is one. Thus, for suitably high values of gamma, equation 4 approximates a misrecognition count in that it evaluates to a value approaching 1 if an error (other than a gross discrepancy) occurs and evaluates to zero if no error occurs. For voice recognition applications the inventors have determined that a value of gamma in the range of two to five works well. The limit LIM is a pre-determined value that is selected to disregard gross recognition errors in the objective function.
-
- where Θk(n+1) is a calculated value of a kth model parameter for an (n+1)th iteration;
- Θk(n) is a calculated value of the kth model parameter for an nth iteration;
- OBJ is the objective function, which according to certain aforementioned embodiments is given by equation five; and
- ε is a system designer selected parameter called the learning rate (for speech recognition applications values of 0.001 to 0.0001 have been used successfully);
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/018,271 US7509259B2 (en) | 2004-12-21 | 2004-12-21 | Method of refining statistical pattern recognition models and statistical pattern recognizers |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/018,271 US7509259B2 (en) | 2004-12-21 | 2004-12-21 | Method of refining statistical pattern recognition models and statistical pattern recognizers |
Publications (2)
Publication Number | Publication Date |
---|---|
US20060136205A1 US20060136205A1 (en) | 2006-06-22 |
US7509259B2 true US7509259B2 (en) | 2009-03-24 |
Family
ID=36597227
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/018,271 Active 2026-08-21 US7509259B2 (en) | 2004-12-21 | 2004-12-21 | Method of refining statistical pattern recognition models and statistical pattern recognizers |
Country Status (1)
Country | Link |
---|---|
US (1) | US7509259B2 (en) |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050131676A1 (en) * | 2003-12-11 | 2005-06-16 | International Business Machines Corporation | Quality evaluation tool for dynamic voice portals |
US20070185840A1 (en) * | 1999-05-19 | 2007-08-09 | Rhoads Geoffrey B | Audio-Based Internet Search Methods and Sub-Combinations |
US20080046250A1 (en) * | 2006-07-26 | 2008-02-21 | International Business Machines Corporation | Performing a safety analysis for user-defined voice commands to ensure that the voice commands do not cause speech recognition ambiguities |
US20090271398A1 (en) * | 2008-04-25 | 2009-10-29 | Scherf Steven D | Method and system for recognition of video content |
US20100106505A1 (en) * | 2008-10-24 | 2010-04-29 | Adacel, Inc. | Using word confidence score, insertion and substitution thresholds for selected words in speech recognition |
US20100235167A1 (en) * | 2009-03-13 | 2010-09-16 | Francois Bourdon | Speech recognition learning system and method |
US20110218952A1 (en) * | 2008-12-15 | 2011-09-08 | Audio Analytic Ltd. | Sound identification systems |
US20150106095A1 (en) * | 2008-12-15 | 2015-04-16 | Audio Analytic Ltd. | Sound identification systems |
US20190058494A1 (en) * | 2016-08-15 | 2019-02-21 | Seagate Technology Llc | Channel error rate optimization using markov codes |
US20190251576A1 (en) * | 2018-02-13 | 2019-08-15 | Texas Precious Metals LLC | Tracking and verifying authenticity of an asset via a distributed ledger |
US20220005458A1 (en) * | 2019-07-09 | 2022-01-06 | Google Llc | On-device speech synthesis of textual segments for training of on-device speech recognition model |
US11250878B2 (en) | 2009-09-11 | 2022-02-15 | Starkey Laboratories, Inc. | Sound classification system for hearing aids |
Families Citing this family (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7987280B1 (en) * | 2000-10-27 | 2011-07-26 | Realnetworks, Inc. | System and method for locating and capturing desired media content from media broadcasts |
US7526486B2 (en) | 2006-05-22 | 2009-04-28 | Initiate Systems, Inc. | Method and system for indexing information about entities with respect to hierarchies |
US8332366B2 (en) * | 2006-06-02 | 2012-12-11 | International Business Machines Corporation | System and method for automatic weight generation for probabilistic matching |
US8356009B2 (en) | 2006-09-15 | 2013-01-15 | International Business Machines Corporation | Implementation defined segments for relational database systems |
US7698268B1 (en) | 2006-09-15 | 2010-04-13 | Initiate Systems, Inc. | Method and system for filtering false positives |
US7685093B1 (en) | 2006-09-15 | 2010-03-23 | Initiate Systems, Inc. | Method and system for comparing attributes such as business names |
US8359339B2 (en) * | 2007-02-05 | 2013-01-22 | International Business Machines Corporation | Graphical user interface for configuration of an algorithm for the matching of data records |
US8515926B2 (en) | 2007-03-22 | 2013-08-20 | International Business Machines Corporation | Processing related data from information sources |
US8423514B2 (en) * | 2007-03-29 | 2013-04-16 | International Business Machines Corporation | Service provisioning |
WO2008121824A1 (en) * | 2007-03-29 | 2008-10-09 | Initiate Systems, Inc. | Method and system for data exchange among data sources |
WO2008121170A1 (en) | 2007-03-29 | 2008-10-09 | Initiate Systems, Inc. | Method and system for parsing languages |
US8370355B2 (en) * | 2007-03-29 | 2013-02-05 | International Business Machines Corporation | Managing entities within a database |
KR100876786B1 (en) * | 2007-05-09 | 2009-01-09 | 삼성전자주식회사 | System and method for verifying user's face using light masks |
JP4973731B2 (en) * | 2007-07-09 | 2012-07-11 | 富士通株式会社 | Speech recognition apparatus, speech recognition method, and speech recognition program |
KR100919222B1 (en) * | 2007-09-19 | 2009-09-28 | 한국전자통신연구원 | The method and apparatus for evaluating performance of test case |
AU2008304255B2 (en) | 2007-09-28 | 2013-03-14 | International Business Machines Corporation | Method and system for associating data records in multiple languages |
US8713434B2 (en) | 2007-09-28 | 2014-04-29 | International Business Machines Corporation | Indexing, relating and managing information about entities |
AU2008304265B2 (en) | 2007-09-28 | 2013-03-14 | International Business Machines Corporation | Method and system for analysis of a system for matching data records |
US8392185B2 (en) * | 2008-08-20 | 2013-03-05 | Honda Motor Co., Ltd. | Speech recognition system and method for generating a mask of the system |
US9141860B2 (en) | 2008-11-17 | 2015-09-22 | Liveclips Llc | Method and system for segmenting and transmitting on-demand live-action video in real-time |
JP5411936B2 (en) * | 2009-07-21 | 2014-02-12 | 日本電信電話株式会社 | Speech signal section estimation apparatus, speech signal section estimation method, program thereof, and recording medium |
JP5738020B2 (en) * | 2010-03-11 | 2015-06-17 | 本田技研工業株式会社 | Speech recognition apparatus and speech recognition method |
US20130283143A1 (en) | 2012-04-24 | 2013-10-24 | Eric David Petajan | System for Annotating Media Content for Automatic Content Understanding |
US9367745B2 (en) | 2012-04-24 | 2016-06-14 | Liveclips Llc | System for annotating media content for automatic content understanding |
US9240184B1 (en) * | 2012-11-15 | 2016-01-19 | Google Inc. | Frame-level combination of deep neural network and gaussian mixture models |
US9864953B2 (en) | 2013-05-30 | 2018-01-09 | President And Fellows Of Harvard College | Systems and methods for Bayesian optimization using integrated acquisition functions |
JP6152788B2 (en) * | 2013-12-02 | 2017-06-28 | 富士通株式会社 | Failure sign detection method, information processing apparatus, and program |
KR102167719B1 (en) * | 2014-12-08 | 2020-10-19 | 삼성전자주식회사 | Method and apparatus for training language model, method and apparatus for recognizing speech |
US10854190B1 (en) * | 2016-06-13 | 2020-12-01 | United Services Automobile Association (Usaa) | Transcription analysis platform |
US20190377984A1 (en) * | 2018-06-06 | 2019-12-12 | DataRobot, Inc. | Detecting suitability of machine learning models for datasets |
CN111444255B (en) * | 2018-12-29 | 2023-09-22 | 杭州海康存储科技有限公司 | Training method and device for data model |
US20210074294A1 (en) * | 2019-09-06 | 2021-03-11 | Verbit Software Ltd. | User interface to assist in hybrid transcription of audio that includes a repeated phrase |
CN113223537B (en) * | 2020-04-30 | 2022-03-25 | 浙江大学 | Voice training data iterative updating method based on stage test feedback |
US11551666B1 (en) * | 2020-05-28 | 2023-01-10 | Amazon Technologies, Inc. | Natural language processing |
CN112084384B (en) * | 2020-09-11 | 2023-10-27 | 支付宝(杭州)信息技术有限公司 | Method and device for carrying out security statistics by combining multiple parties |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5502774A (en) * | 1992-06-09 | 1996-03-26 | International Business Machines Corporation | Automatic recognition of a consistent message using multiple complimentary sources of information |
US5590242A (en) * | 1994-03-24 | 1996-12-31 | Lucent Technologies Inc. | Signal bias removal for robust telephone speech recognition |
US5737489A (en) * | 1995-09-15 | 1998-04-07 | Lucent Technologies Inc. | Discriminative utterance verification for connected digits recognition |
US5737723A (en) * | 1994-08-29 | 1998-04-07 | Lucent Technologies Inc. | Confusable word detection in speech recognition |
US5749069A (en) * | 1994-03-18 | 1998-05-05 | Atr Human Information Processing Research Laboratories | Pattern and speech recognition using accumulated partial scores from a posteriori odds, with pruning based on calculation amount |
US5806029A (en) * | 1995-09-15 | 1998-09-08 | At&T Corp | Signal conditioned minimum error rate training for continuous speech recognition |
US5822729A (en) * | 1996-06-05 | 1998-10-13 | Massachusetts Institute Of Technology | Feature-based speech recognizer having probabilistic linguistic processor providing word matching based on the entire space of feature vectors |
US6138097A (en) * | 1997-09-29 | 2000-10-24 | Matra Nortel Communications | Method of learning in a speech recognition system |
US6182039B1 (en) * | 1998-03-24 | 2001-01-30 | Matsushita Electric Industrial Co., Ltd. | Method and apparatus using probabilistic language model based on confusable sets for speech recognition |
US6728674B1 (en) * | 2000-07-31 | 2004-04-27 | Intel Corporation | Method and system for training of a classifier |
US7103544B2 (en) * | 2003-02-13 | 2006-09-05 | Microsoft Corporation | Method and apparatus for predicting word error rates from text |
-
2004
- 2004-12-21 US US11/018,271 patent/US7509259B2/en active Active
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5502774A (en) * | 1992-06-09 | 1996-03-26 | International Business Machines Corporation | Automatic recognition of a consistent message using multiple complimentary sources of information |
US5749069A (en) * | 1994-03-18 | 1998-05-05 | Atr Human Information Processing Research Laboratories | Pattern and speech recognition using accumulated partial scores from a posteriori odds, with pruning based on calculation amount |
US5590242A (en) * | 1994-03-24 | 1996-12-31 | Lucent Technologies Inc. | Signal bias removal for robust telephone speech recognition |
US5737723A (en) * | 1994-08-29 | 1998-04-07 | Lucent Technologies Inc. | Confusable word detection in speech recognition |
US5737489A (en) * | 1995-09-15 | 1998-04-07 | Lucent Technologies Inc. | Discriminative utterance verification for connected digits recognition |
US5806029A (en) * | 1995-09-15 | 1998-09-08 | At&T Corp | Signal conditioned minimum error rate training for continuous speech recognition |
US5822729A (en) * | 1996-06-05 | 1998-10-13 | Massachusetts Institute Of Technology | Feature-based speech recognizer having probabilistic linguistic processor providing word matching based on the entire space of feature vectors |
US6138097A (en) * | 1997-09-29 | 2000-10-24 | Matra Nortel Communications | Method of learning in a speech recognition system |
US6182039B1 (en) * | 1998-03-24 | 2001-01-30 | Matsushita Electric Industrial Co., Ltd. | Method and apparatus using probabilistic language model based on confusable sets for speech recognition |
US6728674B1 (en) * | 2000-07-31 | 2004-04-27 | Intel Corporation | Method and system for training of a classifier |
US7103544B2 (en) * | 2003-02-13 | 2006-09-05 | Microsoft Corporation | Method and apparatus for predicting word error rates from text |
Non-Patent Citations (3)
Title |
---|
Brodley et al., "Identifying Mislabeled Training Data", Journal of Artificial Intelligence Research 11, 1999. * |
Hiroshi Shimodaira, Jun Rokui, Mitsuru Nakai; "Improving the Generalization Performance of the MCE/GPD Learning", 1998. |
Ljolje et al., "Estimation of Hidden Markov Model Parameters By Minimizing Empirical Error Rate", ICASSP, Apr. 1990. * |
Cited By (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100046744A1 (en) * | 1999-05-19 | 2010-02-25 | Rhoads Geoffrey B | Methods and Devices Responsive to Ambient Audio |
US20070185840A1 (en) * | 1999-05-19 | 2007-08-09 | Rhoads Geoffrey B | Audio-Based Internet Search Methods and Sub-Combinations |
US8151113B2 (en) | 1999-05-19 | 2012-04-03 | Digimarc Corporation | Methods and devices responsive to ambient audio |
US10449797B2 (en) | 1999-05-19 | 2019-10-22 | Digimarc Corporation | Audio-based internet search methods and sub-combinations |
US8050918B2 (en) | 2003-12-11 | 2011-11-01 | Nuance Communications, Inc. | Quality evaluation tool for dynamic voice portals |
US20050131676A1 (en) * | 2003-12-11 | 2005-06-16 | International Business Machines Corporation | Quality evaluation tool for dynamic voice portals |
US20080046250A1 (en) * | 2006-07-26 | 2008-02-21 | International Business Machines Corporation | Performing a safety analysis for user-defined voice commands to ensure that the voice commands do not cause speech recognition ambiguities |
US8234120B2 (en) * | 2006-07-26 | 2012-07-31 | Nuance Communications, Inc. | Performing a safety analysis for user-defined voice commands to ensure that the voice commands do not cause speech recognition ambiguities |
US20090271398A1 (en) * | 2008-04-25 | 2009-10-29 | Scherf Steven D | Method and system for recognition of video content |
US9478218B2 (en) * | 2008-10-24 | 2016-10-25 | Adacel, Inc. | Using word confidence score, insertion and substitution thresholds for selected words in speech recognition |
US9886943B2 (en) * | 2008-10-24 | 2018-02-06 | Adadel Inc. | Using word confidence score, insertion and substitution thresholds for selected words in speech recognition |
US20100106505A1 (en) * | 2008-10-24 | 2010-04-29 | Adacel, Inc. | Using word confidence score, insertion and substitution thresholds for selected words in speech recognition |
US9583094B2 (en) * | 2008-10-24 | 2017-02-28 | Adacel, Inc. | Using word confidence score, insertion and substitution thresholds for selected words in speech recognition |
US10586543B2 (en) | 2008-12-15 | 2020-03-10 | Audio Analytic Ltd | Sound capturing and identifying devices |
US9286911B2 (en) * | 2008-12-15 | 2016-03-15 | Audio Analytic Ltd | Sound identification systems |
US20150106095A1 (en) * | 2008-12-15 | 2015-04-16 | Audio Analytic Ltd. | Sound identification systems |
US8918343B2 (en) * | 2008-12-15 | 2014-12-23 | Audio Analytic Ltd | Sound identification systems |
US20110218952A1 (en) * | 2008-12-15 | 2011-09-08 | Audio Analytic Ltd. | Sound identification systems |
US20100235167A1 (en) * | 2009-03-13 | 2010-09-16 | Francois Bourdon | Speech recognition learning system and method |
US8417526B2 (en) * | 2009-03-13 | 2013-04-09 | Adacel, Inc. | Speech recognition learning system and method |
US11250878B2 (en) | 2009-09-11 | 2022-02-15 | Starkey Laboratories, Inc. | Sound classification system for hearing aids |
US10447315B2 (en) * | 2016-08-15 | 2019-10-15 | Seagate Technologies Llc | Channel error rate optimization using Markov codes |
US20190058494A1 (en) * | 2016-08-15 | 2019-02-21 | Seagate Technology Llc | Channel error rate optimization using markov codes |
US20190251576A1 (en) * | 2018-02-13 | 2019-08-15 | Texas Precious Metals LLC | Tracking and verifying authenticity of an asset via a distributed ledger |
US20220005458A1 (en) * | 2019-07-09 | 2022-01-06 | Google Llc | On-device speech synthesis of textual segments for training of on-device speech recognition model |
US11705106B2 (en) * | 2019-07-09 | 2023-07-18 | Google Llc | On-device speech synthesis of textual segments for training of on-device speech recognition model |
Also Published As
Publication number | Publication date |
---|---|
US20060136205A1 (en) | 2006-06-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7509259B2 (en) | Method of refining statistical pattern recognition models and statistical pattern recognizers | |
US6208971B1 (en) | Method and apparatus for command recognition using data-driven semantic inference | |
US6836760B1 (en) | Use of semantic inference and context-free grammar with speech recognition system | |
Kinnunen et al. | Comparison of clustering methods: A case study of text-independent speaker modeling | |
JP6831343B2 (en) | Learning equipment, learning methods and learning programs | |
US8738378B2 (en) | Speech recognizer, speech recognition method, and speech recognition program | |
WO2008024148A1 (en) | Incrementally regulated discriminative margins in mce training for speech recognition | |
JPWO2008087934A1 (en) | Extended recognition dictionary learning device and speech recognition system | |
CN107093422B (en) | Voice recognition method and voice recognition system | |
Axelrod et al. | Combination of hidden Markov models with dynamic time warping for speech recognition | |
US8762148B2 (en) | Reference pattern adaptation apparatus, reference pattern adaptation method and reference pattern adaptation program | |
Ferrer et al. | Spoken language recognition based on senone posteriors. | |
US20090094022A1 (en) | Apparatus for creating speaker model, and computer program product | |
JP2016177045A (en) | Voice recognition device and voice recognition program | |
Pirani | Advanced algorithms and architectures for speech understanding | |
Zhan et al. | An improved LSTM for language identification | |
Rahim et al. | String-based minimum verification error (SB-MVE) training for speech recognition | |
JP6121187B2 (en) | Acoustic model correction parameter estimation apparatus, method and program thereof | |
KR101229108B1 (en) | Apparatus for utterance verification based on word specific confidence threshold | |
Saputri et al. | Identifying Indonesian local languages on spontaneous speech data | |
Chou et al. | Minimum classification error (MCE) approach in pattern recognition | |
Hegde et al. | A Multiple Classifier System for Automatic Speech Recognition | |
Aşlyan | Syllable Based Speech Recognition | |
JP5104732B2 (en) | Extended recognition dictionary learning device, speech recognition system using the same, method and program thereof | |
Zhu et al. | Optimizing the performance of spoken language recognition with discriminative training |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:SONG, JIANMING J.;REEL/FRAME:016146/0661Effective date: 20041220 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034448/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
CN117149970A - Autosuggest response to images received in messages using language models - Google Patents
Autosuggest response to images received in messages using language models Download PDFInfo
- Publication number
- CN117149970A CN117149970A CN202311086539.9A CN202311086539A CN117149970A CN 117149970 A CN117149970 A CN 117149970A CN 202311086539 A CN202311086539 A CN 202311086539A CN 117149970 A CN117149970 A CN 117149970A
- Authority
- CN
- China
- Prior art keywords
- user
- word
- responses
- message
- image
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000004044 response Effects 0.000 title claims abstract description 525
- 238000000034 method Methods 0.000 claims abstract description 141
- 239000013598 vector Substances 0.000 claims abstract description 94
- 238000012549 training Methods 0.000 claims description 65
- 230000015654 memory Effects 0.000 claims description 43
- 238000013528 artificial neural network Methods 0.000 claims description 9
- 230000007787 long-term memory Effects 0.000 claims description 5
- 230000000007 visual effect Effects 0.000 claims description 4
- 238000004891 communication Methods 0.000 description 26
- 238000010801 machine learning Methods 0.000 description 24
- 230000003993 interaction Effects 0.000 description 20
- 230000000694 effects Effects 0.000 description 19
- 230000006870 function Effects 0.000 description 16
- 238000012545 processing Methods 0.000 description 16
- 230000008569 process Effects 0.000 description 13
- 230000000875 corresponding effect Effects 0.000 description 11
- 230000009471 action Effects 0.000 description 8
- 230000008901 benefit Effects 0.000 description 8
- 238000010586 diagram Methods 0.000 description 8
- 238000004458 analytical method Methods 0.000 description 7
- 230000009118 appropriate response Effects 0.000 description 7
- 238000004590 computer program Methods 0.000 description 6
- 238000013475 authorization Methods 0.000 description 5
- 238000005516 engineering process Methods 0.000 description 5
- 238000001514 detection method Methods 0.000 description 4
- 230000006855 networking Effects 0.000 description 4
- 241000220225 Malus Species 0.000 description 3
- 239000003795 chemical substances by application Substances 0.000 description 3
- 239000000835 fiber Substances 0.000 description 3
- 235000013305 food Nutrition 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000013519 translation Methods 0.000 description 3
- 241001465754 Metazoa Species 0.000 description 2
- 235000021016 apples Nutrition 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 239000003086 colorant Substances 0.000 description 2
- 230000002596 correlated effect Effects 0.000 description 2
- 238000002059 diagnostic imaging Methods 0.000 description 2
- 238000001914 filtration Methods 0.000 description 2
- 239000011521 glass Substances 0.000 description 2
- 238000003384 imaging method Methods 0.000 description 2
- 230000036651 mood Effects 0.000 description 2
- 230000009467 reduction Effects 0.000 description 2
- 239000004065 semiconductor Substances 0.000 description 2
- 230000006403 short-term memory Effects 0.000 description 2
- 239000007787 solid Substances 0.000 description 2
- 229920006934 PMI Polymers 0.000 description 1
- 230000003213 activating effect Effects 0.000 description 1
- 230000035045 associative learning Effects 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 239000012752 auxiliary agent Substances 0.000 description 1
- 230000003796 beauty Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000010267 cellular communication Effects 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 238000004883 computer application Methods 0.000 description 1
- 238000012790 confirmation Methods 0.000 description 1
- 230000003247 decreasing effect Effects 0.000 description 1
- 238000013136 deep learning model Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 230000008030 elimination Effects 0.000 description 1
- 238000003379 elimination reaction Methods 0.000 description 1
- 230000014509 gene expression Effects 0.000 description 1
- 238000010348 incorporation Methods 0.000 description 1
- 239000004615 ingredient Substances 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 230000013016 learning Effects 0.000 description 1
- 230000033001 locomotion Effects 0.000 description 1
- 235000012054 meals Nutrition 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 238000003058 natural language processing Methods 0.000 description 1
- 230000007935 neutral effect Effects 0.000 description 1
- 238000007781 pre-processing Methods 0.000 description 1
- 238000012797 qualification Methods 0.000 description 1
- 238000005070 sampling Methods 0.000 description 1
- 230000029305 taxis Effects 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/274—Converting codes to words; Guess-ahead of partial word inputs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
- G06F40/35—Discourse or dialogue representation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/126—Character encoding
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/205—Parsing
- G06F40/216—Parsing using statistical methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/289—Phrasal analysis, e.g. finite state techniques or chunking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
- G06F40/55—Rule-based translation
- G06F40/56—Natural language generation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/044—Recurrent networks, e.g. Hopfield networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/044—Recurrent networks, e.g. Hopfield networks
- G06N3/0442—Recurrent networks, e.g. Hopfield networks characterised by memory or gating, e.g. long short-term memory [LSTM] or gated recurrent units [GRU]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/20—Scenes; Scene-specific elements in augmented reality scenes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/35—Categorising the entire scene, e.g. birthday party or wedding scene
Abstract
Embodiments relate to automatic response suggestions for images contained in received messages. In some implementations, a computer-implemented method includes detecting an image published by a first user within a first message and programmatically analyzing the image to determine a feature vector representative of the image. The method programmatically generates one or more suggested responses to the first message based on the feature vector, each suggested response being a session reply to the first message. Generating the suggested response includes determining probabilities associated with word sequences of feature vectors using a model trained on previous responses of previous images and selecting one or more of the word sequences based on the relevant probabilities. The suggestion response is determined based on the selected word sequence. The method causes the suggestion response to be presented in the messaging application as one or more suggestions to the second user.
Description
The present application is a divisional application of the following application,
international application number of the original application: PCT/US2017/057044
International date of original application: on the 10 th and 17 th days of 2017,
National application number of the original application: 201780066316.2,
title of the original application: cross-referencing of auto-suggest response-related applications to images received in messages using language models
The present application claims priority from U.S. patent application Ser. No.15/415,506, filed on 1/25/2017, entitled "auto-suggest response to images received in messages using language models," the entire contents of which are incorporated herein by reference.
Background
The popularity and convenience of digital mobile devices and the widespread use of internet communications have made communication between user devices ubiquitous. For example, users typically use their devices to send electronic messages to other users as text messages, chat messages, emails, and the like. The user may send the image in the message to other users to provide visual content to the receiving user.
The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent it is described in this background section, as well as aspects of the description that may not qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.
Disclosure of Invention
This embodiment relates to an automatic response suggestion for an image included in a received message. In some implementations, a computer-implemented method includes detecting an image published by a first user within a first message and programmatically analyzing the image to determine a feature vector representing the image. The method programmatically generates one or more suggested responses to the first message based on the feature vector, each of the one or more suggested responses being a session reply to the first message. Programmatically generating the one or more suggested responses includes determining probabilities associated with word sequences of the feature vector using a model trained with previous responses to previous images and selecting one or more word sequences of the word sequence based on the probabilities associated with the word sequences. The one or more suggestion responses are determined based on the one or more selected word sequences. The method causes the one or more suggestion responses to be presented in the messaging application as one or more suggestions to the second user.
Various embodiments and examples of the method are described. For example, in some implementations, providing the one or more suggested responses includes transmitting a command to present the one or more suggested responses in the messaging application. In some implementations, the probabilities include probabilities that each word in the stored vocabulary becomes a next word in one of the one or more word sequences, wherein selecting the one or more word sequences includes selecting ones of the one or more word sequences associated with one or more highest probabilities of the determined probabilities. In some implementations, the model is a conditional language model, and determining the probability associated with the word sequence includes inputting the feature vector to the conditional language model. In some examples, the conditional language model uses a Long Short Term Memory (LSTM) network. Some embodiments use a cluster search technique to select the one or more word sequences. In some implementations, each of the one or more word sequences is modeled as a word embedded encoding the word sequence and words included in the feature vector.
In further examples, the one or more word sequences are determined from a plurality of words in a vocabulary determined from the previous response, wherein determining the probabilities associated with the word sequences includes iteratively determining, for each word sequence, a probability that each word in the vocabulary is the next word in the word sequence. In one example, the previous response is selected from a larger set of responses to the previous image, wherein the previous response is more specific to particular content of the previous image than other previous responses of the larger set of responses.
In an additional example of implementation, the model is a conditional language model, and selecting the one or more word sequences includes iteratively feeding the feature vector and a previous word sequence to the conditional language model to determine a set of new word sequences and the probabilities associated with the new word sequences based on the feature vector and the previous word sequences, wherein one or more of the new word sequences has at least one additional word relative to the previous word sequence; a subset of the set of new word sequences is selected based on the probabilities associated with the new word sequences, and one word sequence of the selected subset is selected as the previous word sequence for the next iteration.
In an additional example embodiment, the method further comprises, upon selection of the suggested response by the second user, issuing the suggested response as a message response to the first message. In some implementations, the method further includes checking whether each of the one or more word sequences is present in a whitelist of word sequences, wherein the selected one or more word sequences are present on the whitelist. Some embodiments select at least one word sequence that is weighted based on similarity to previous message responses provided by the second user. In some implementations, the conditional language model is provided as a first conditional language model specific to a first language, and the method includes providing a second conditional language model specific to a second language, determining that the language of the message session in which the first message was received is the first language; and selecting the first conditional language model for programmatically generating one or more suggested responses.
In some implementations, a system includes a memory and at least one processor configured to access the memory and configured to perform operations including detecting an image published by a first user within a first message and programmatically analyzing the image to determine a feature vector representing the image. The operations include programmatically generating one or more suggested responses to the first message based on the feature vector, each of the one or more suggested responses being a session reply to the first message and having one or more words arranged in a sequence of words. The programmatically generating the one or more suggested responses includes, for each of the one or more suggested responses, iteratively determining each word of the one or more words arranged in the sequence of words based on the feature vector and based on one or more previous words in the sequence of words. The operations include causing the one or more suggestion responses to be presented in the messaging application as one or more suggestions to the second user.
Examples of various embodiments and systems are described. For example, in some implementations, the operation of programming to generate the one or more suggested responses includes determining a probability associated with the one or more word sequences based on data including previous responses to previous images. In some implementations, programmatically generating the one or more suggested responses includes selecting the one or more suggested responses based on the probabilities associated with the one or more word sequences. In some implementations, determining the probability of the word sequence includes using a conditional language model trained using data including previous responses to previous images, wherein the conditional language model is determined from the feature vectors received as input and uses a long term memory (LSTM) network.
In some implementations, a non-transitory computer readable medium has stored thereon software instructions that, when executed by a processor, cause the processor to automatically provide advice content by performing operations. Operations include receiving an image and programmatically analyzing the image to determine feature vectors representative of the image. The operations include programmatically generating one or more suggested responses to the image, each of the one or more suggested responses being a conversational reply to the image and having one or more words arranged in a word sequence. The programmatically generating the one or more suggested responses includes, for each of the one or more suggested responses, iteratively determining each word of the one or more words arranged in the sequence of words based on the feature vector and one or more previous words in the sequence of words. The operations include outputting the one or more suggestion responses for presentation in the application as one or more suggestions to the user.
Various implementations of the computer-readable medium include, for example, the suggested responses being presented in a messaging application, and in some implementations, programmatically generating the one or more suggested responses includes determining probabilities associated with the one or more suggested responses using a conditional language model trained based on data including previous responses to previous images and determined from the feature vectors received as input, wherein the conditional language model uses a long-short-term memory (LSTM) network; and selecting the one or more suggested responses based on the probabilities associated with the one or more suggested responses.
Drawings
FIG. 1 is a block diagram of an example system and network environment that may be used with one or more embodiments described herein;
FIG. 2 is a flow chart illustrating an example method for providing a suggested response to a message including an image, according to some embodiments;
FIG. 3 is a flow chart illustrating an example method of generating one or more suggested responses based on feature vectors representing images, according to some embodiments;
FIG. 4 is a block diagram illustrating example modules that may implement one or more of the described suggested response features, according to some embodiments;
FIG. 5 is a block diagram illustrating an example of an architecture in which one or more features of a conditional language model may be implemented, according to some embodiments;
6-11 are illustrations showing examples of a determined suggested response to an image according to some embodiments; and
FIG. 12 is a block diagram of an example device that may be used in one or more embodiments described herein.
Detailed Description
One or more embodiments described herein relate to automatic response suggestions for images included in a received message. In some implementations, automatically suggesting content in a message application includes detecting an image published by a first user within a message and programmatically analyzing the image to determine feature vectors representing the image. The feature vector is used to generate one or more suggested responses to the message, where the suggested responses are conversational replies to the first message. For example, in some implementations, the conditional language model is trained to determine probabilities associated with word sequences of feature vectors based on training data that includes previous responses to previous images. One or more word sequences are selected based on the probabilities, and the suggested responses are based on the selected word sequences. The suggestion response is output, for example, presented in the messaging application as one or more suggestions to the second user.
Various features are described. For example, the suggestion responses may each have one or more words arranged in a word sequence, and for each suggestion response, each word of the word sequence may be iteratively determined based on the feature vector and based on one or more previous words in the word sequence. The suggested response may be selected based on a probability of the word being the next word in the sequence of words; for example, the suggestion response may be a word sequence that is determined to have the highest probability of composing a word in a sequence between words of the vocabulary. For example, one or more word sequences may be determined from a set of words in a vocabulary based on training data, e.g., a set of words obtained from a set of training message data that includes previous message images and previous responses to those images. In some examples, the training data may be filtered such that previous responses in the training data are more specific to particular content of previous images than other previous responses that have been filtered out.
In various examples, the conditional language model may use a long-term memory (long-short term memory, LSTM) network. The sequences may be selected using a bundle search technique. In some examples, the system may check whether each of the one or more word sequences is present in the whitelist of word sequences such that word sequences present on the whitelist qualify as suggestion responses. In some implementations, after outputting the suggested response, if the second user selects the suggested response, the selected suggested response is sent to the first user as a message response to the first message and the image. In some implementations, the one or more word sequences are weighted to be selected as the suggestion response based on similarity to a previous message response provided by the second user in response to receiving a previous image similar to the currently received image. In some implementations, multiple conditional language models may be provided, each language model being associated with a different language. A particular conditional language model may be selected for determining a suggested response to the image based on the language of the detected message session of the received first message. In some implementations, it may be determined that one or more of the message responses are commands or requests to the robot, e.g., information related to the obtained image.
One or more features described herein can automatically provide a suggestion response in response to an image received in a message, where the suggestion response is appropriate and relevant as a message response to the content of the received image. For example, the features described herein may provide suggested responses, which may include appropriate reactions to specific content in the image, as if the user were creating a message response. This provides the user with a more flexible option to determine their response in the message session and may provide the user with an option to not adequately respond to the message.
For example, at various times during a message session, a user may not be able to provide sufficient attention and/or focus to respond to a received message with a relevant response, and/or may not be able to provide detailed user input to a user device to create such a relevant response. In some examples, the user may be engaged in an activity or in an environment where the user is unable or relatively difficult to provide an appropriate response. One or more features described herein advantageously provide automated message suggestions to a user in response to an image. For example, one or more automated message responses are automatically suggested based on images received in a message session between user devices, and the user may simply select a desired response from the suggestions for publication in the session. The message suggestion is related to the received image and allows the user to simply and quickly respond to the received image while reducing user input and reducing the time to compose the response on the device, thereby reducing consumption of device resources required to display a large number of possible responses and/or reducing consumption of device resources required to enable and process added input from the user to compose a response, search, edit, or complete a suggestion response, and/or otherwise participate in a session maintained by the electronic device. Thus, a technical effect of one or more of the described embodiments is that creating and transmitting responses in a device-implemented session is implemented with less computing time and resources expended to obtain results. For example, a technical effect of the described techniques and features is a reduction in consumption of system processing resources for displaying, creating, and sending message responses as compared to systems that do not provide one or more of the described techniques or features.
The prior art may determine a suggested response to an image, e.g., based on identifying one or more objects or features in the image, e.g., responsive to identifying that the image includes an apple, a suggested response corresponding to such identification may be provided. However, many such techniques may not provide suggestions, for example, for images in which no object is identified. Furthermore, some of these techniques may provide inaccurate suggestions, for example, if the object identification is erroneous or incomplete. In addition, when multiple objects (e.g., apples and knives) are identified in the image, some of these techniques may generate a simple response listing the objects, such as "apples and knives," or a response that the user would not have selected.
These and other drawbacks are overcome by the techniques described herein. For example, these techniques may provide more kinds and/or higher quality of advice responses. For example, the techniques described herein feed image feature vectors determined directly from pixels of an obtained image to a trained neural network to generate a response. Such a neural network may provide a response to any type of image without the need to specifically identify objects in the image. Furthermore, the use of models trained based on image pixels may allow for a wider variety of classes of responses than techniques that rely on identifying objects and using predefined tags associated with those objects. For example, in some implementations, the vocabulary of words in the selection suggestion response may include words from multiple languages, human expressions that may not be words in a dictionary (e.g., "aww", "| ||" etc.), other types of symbols (e.g., emoticons, stickers etc.), different images, or combinations. Additionally, the techniques described herein may provide response suggestions that are more likely to be selected by a user, as these response suggestions may be more natural than response suggestions constructed based on the identified image features. Thus, another technical effect of the described techniques and features is a reduction in consumption of system processing resources for creating and sending message responses, as compared to systems that do not provide one or more of the described techniques or features, e.g., systems that use existing content recognition techniques, where additional computing resources are required to display more potentially relevant suggested responses and/or to receive input from a user that is required to specify, select, edit, or create a response to be sent by the user.
The described techniques provide additional advantages. For example, the use of a response whitelist in some embodiments allows for specific types of responses to be removed from the suggestion, allowing the response suggestion to be more likely to be selected by the user. Furthermore, in some implementations, the techniques described herein utilize a bundle search that can advantageously evaluate a large number of possible word sequences based on image feature vectors while reducing the use of computational resources. In some implementations, the described techniques may determine that the image is not eligible to provide a suggestion based on the image feature vector and may not perform a calculation step to generate a response, thereby conserving computational resources. In some embodiments where the user allows for the use of such data, the language model may be periodically retrained, e.g., based on additional training data and user selection, and thus may provide improved suggestions based on such retraining.
Some embodiments discussed herein may provide a user with one or more opportunities to control whether to collect information, store personal information, use personal information, and how to collect information about the user, in the case of personal information about the user (e.g., user data, information about the user's social network, the user's location and time at that location, the user's biometric information, the user's activities, and demographic information). That is, the systems and methods discussed herein collect, store, and/or use user personal information, particularly upon receipt of explicit authorization from an associated user. For example, a user is provided with control over whether a program or feature gathers user information about that particular user or other users associated with the program or feature. Each user whose personal information is to be collected is presented with one or more options to allow control of the collection of information related to that user to provide permissions or authorizations as to whether to collect the information and as to which portions of the information are to be collected. For example, one or more such control options may be provided to the user over a communications network. In addition, certain data may be processed in one or more ways prior to storage or use to remove personally identifiable information. As one example, the identity of the user may be processed such that personally identifiable information cannot be determined. As another example, the geographic location of the user may be enlarged to a larger area such that the particular location of the user cannot be determined.
An "image" as referred to herein is a digital image having pixels with one or more pixel values (e.g., color values, luminance values, etc.). The image may be a still image or a single image, or may be an image comprised in a series of images, such as a frame in a video sequence of video frames, or an image or animation of an image in a different type of sequence. For example, the embodiments described herein may be used with a single image, a video sequence of images, or animated images (e.g., an animated image or other animation).
Fig. 1 illustrates a block diagram of an example environment 100 for providing a message service that, in some embodiments, is capable of and provides an automatic assistance agent, such as a robot. The exemplary environment 100 includes a message server 101, one or more client devices 115a, 115n, a server 135, a response proposal generator 150, and a network 140. The users 125a-125n can be associated with respective client devices 115a, 115 n. The server 135 may be a third party server, for example, controlled by a party other than the party providing the message service. In various embodiments, server 135 may implement robotic services, as described in further detail below. In one embodiment, environment 100 may not include one or more servers or devices shown in fig. 1, or may include other servers or devices not shown in fig. 1. In fig. 1 and the remaining figures, letters following a reference numeral, such as "115a", denote references to elements having the particular reference numeral. Reference numerals in the text that do not have subsequent letters, such as "115", represent general references to embodiments of the element with that reference numeral.
In the illustrated embodiment, the message server 101, client device 115, server 135, and response generator 150 are communicatively coupled via a network 140. In various embodiments, the network 140 may be of a conventional type, wired or wireless, and may have many different configurations, including a star configuration, a token ring configuration, or other configurations. Further, network 140 may include a Local Area Network (LAN), a Wide Area Network (WAN) (e.g., the Internet), and/or other interconnecting data paths through which multiple devices may communicate. In some implementations, the network 140 may be a peer-to-peer network. The network 140 may also be coupled to or include portions of a telecommunications network for use in various waysDifferent communication protocols transmit data. In some embodiments, network 140 includes a network for transmitting and receiving dataCommunication network, < >>Or cellular communication networks including through Short Message Service (SMS), multimedia Message Service (MMS), hypertext transfer protocol (HTTP), direct data connection, email, etc. Although fig. 1 shows one network 140 coupled to client device 115, message server 101, and server 135, in practice one or more networks 140 may be coupled to these entities.
Message server 101 may include a processor, memory, and network communication capabilities. In some implementations, the message server 101 is a hardware server. In some implementations, the message server 101 may be embedded in a virtualized environment, e.g., the message server 101 may be a virtual machine executing on a hardware server that may include one or more other virtual machines. Message server 101 is communicatively coupled to network 140 via signal line 102. The signal line 102 may be a wired connection, such as Ethernet, coaxial cable, fiber optic cable, etc., or a wireless connection, such as Wi-Fi, bluetooth, or other wireless technology. In some implementations, message server 101 transmits data to and receives data from one or more of client devices 115a-115n, server 135, response generator 150, and robot 113 over network 140. In some implementations, the message server 101 can include a message application 103a, the message application 103a providing client functionality to enable a user (e.g., any user 125) to exchange messages with other users and/or bots. The messaging application 103a may be a server application, a server module of a client-server application, or a distributed application (e.g., with corresponding client messaging application 103b on one or more client devices 115).
The message server 101 may also include a database 199, and the database 199 may store messages exchanged via the message server 101, data and/or configuration of one or more robots, information provided by the content classifier 130, and user data associated with one or more users 125, all depending on obtaining explicit permission of the respective user to store such data. In some embodiments, message server 101 may include one or more auxiliary agents, such as robots 107a and 111. In other embodiments, the secondary agent may be implemented on the client devices 115a-n instead of on the message server 101.
The messaging application 103a may be code and routines operable by a processor to enable exchange of messages between the user 125 and one or more of the robots 105, 107a, 107b, 109a, 109b, 111, and 113. In some implementations, the message application 103a can be implemented using hardware including a Field Programmable Gate Array (FPGA) or an Application Specific Integrated Circuit (ASIC). In some implementations, the messaging application 103a can be implemented using a combination of hardware and software.
In various embodiments, database 199 may store messages exchanged between one or more client devices 115 when respective users associated with client devices 115 provide consent to the storage of the messages, in some embodiments database 199 may store messages exchanged between one or more client devices 115 and one or more robots implemented on different devices, such as another client device, message server 101, server 135, and so forth, when respective users associated with client devices 115 provide consent to the storage of the messages. In embodiments where one or more users do not provide consent, messages received and sent by those users are not stored.
In some implementations, the message may be encrypted, for example, so that only the sender and recipient of the message may view the encrypted message. In some implementations, the message is stored. In some implementations, database 199 may further store data and/or configurations of one or more robots, e.g., robot 107a, robot 111, etc. In some implementations, when a user 125 provides consent to store user data (e.g., social network data, contact information, images, etc.), database 199 may also store user data associated with the corresponding user 125 that provided such consent.
In some implementations, the messaging application 103a/103b can provide a user interface that enables the user 125 to create a new robot. In these embodiments, the messaging application 103a/103b may include functionality that enables user-created robots to be included in a session between users of the messaging application 103a/103 b.
Response generator 150 may include a processor, memory and network communication capabilities. In some implementations, the response generator 150 is a hardware server. Response generator 150 is communicatively coupled to network 140 via signal line 152. The signal line 152 may be a wired connection, such as Ethernet, coaxial cable, fiber optic cable, etc., or a wireless connection, such as Wi-Fi, bluetooth, or other wireless technology. In some implementations, the response generator 150 sends data to and receives data from the message server 101 and one or more of the client devices 115a-115n via the network 140. Although the response generator 150 is shown as one server, multiple response generators 150 are possible. In some implementations, the response generator 150 can be included in one or more other components of the environment 100, such as the message server 101, the client device 115a, the server 135, the content server 154, and the like.
Response generator 150 determines and provides one or more suggested responses to reply to the particular image. For example, the suggested response may be provided to the message server 101 and/or a message application of one or more client devices 115. The response generator may use machine learning, for example, using a conditional language model that utilizes machine learning to determine the suggested responses. For example, the response generator can be trained using training data for the image (e.g., message training data) and the correct, actual, and/or expected response to the image for the message application context, and then the response generator can determine the response to the new image it receives. For example, without using user information, the conditional language model may be trained using synthetic data, e.g., data automatically generated by a computer. In some implementations, the conditional language model may be trained based on sample data, such as sample message data, for which permissions to train with the user data have been explicitly obtained from the user providing the message data. For example, the sample data may include a received message and a response sent to the received message. Based on the sample data, the model may predict a response to the received message, which may then be provided as a suggested response. In some implementations, the response generator 150 can use a long-short-term memory (LSTM) network to determine the response as a sequence of words in which words of the response are iteratively determined, e.g., one word at a time.
Some implementations may also use the detected image features for one or more features, such as ranking of suggested responses. For example, image features may include a person (uncertainty of the person's identity), an animal, an object (e.g., an article, a vehicle, etc.), a particular monument, a landscape feature (e.g., foliage, mountains, lakes, sky, clouds, sunrise or sunset, buildings, bridges, etc.), weather, etc., and various image recognition and detection techniques (e.g., machine learning based on training images, comparison with reference features in reference images, etc.) may be used to detect image features.
The response generator 150 may be managed by the same party managing the message server 101 or may be managed by a third party. In some implementations, the response generator 150 hosts the robot. The robot may be a computer program that performs certain functions to provide advice, such as, for example, the reservation robot making a reservation, the auto-reply robot generating reply message text, the scheduling robot automatically scheduling calendar appointments, etc. Response generator 150 may provide or referral one or more robots to message application 103 as suggested responses. For example, the robot's code may be incorporated into the message application 103, or the message application 103 may send the request to the robot implemented at the response generator 150. In some implementations, the message application 103 acts as an intermediary between the user 125 and the response generator 150 by providing the robotic commands to the response generator 150 and receiving suggestions based on the robotic commands.
In some implementations, the content server 154 may be provided in the environment 100, for example, as a hardware server, and may include a processor, memory, and network communication capabilities. Content server 154 may be coupled to network 140 via one or more network connections 156. In some implementations, the content classifier can provide information to the message application 103. For example, the content server 154 may maintain an electronic encyclopedia, a knowledge graph, one or more databases, a social networking application (e.g., social graph, friend social network, business social network, etc.), a website for a place or location (e.g., restaurant, auto dealer, etc.), a map application (e.g., a website providing directions), and so forth. For example, the content server 154 may receive information requests from the messaging application 103, conduct searches, and provide information in the requests. In some implementations, the content server 154 may include a classifier of a particular type of content in the image and may determine whether any particular class is detected in the content (e.g., pixels) of the image. In one example, the message application 103 may request a driving direction or an estimated time of arrival from a map application accessed by the content server 154.
In some implementations, if the user agrees to use such data, the content server 154 may provide the user's profile information or profile image to the messaging application 103, which messaging application 103 may use the user's profile information or profile image to identify the person in the image with the corresponding social networking profile. In another example, if user consent has been obtained for the provided user data, content server 154 may provide message application 103 with information regarding the identified entities in the messages used by message application 103. For example, the content server 154 may include or access an electronic encyclopedia that provides information about landmarks identified in images, an electronic shopping website that provides information for purchasing entities identified in messages, an electronic calendar application that provides travel from users identified in messages with user consent, a map application that provides information about locations in the vicinity of entities in messages that may be accessed, a website that serves restaurants that provide dishes mentioned in messages, and so forth. In some implementations, the content server 154 can communicate with the response generator 150 to obtain information. Content server 154 may provide the requested information to response generator 150.
In some implementations, the response generator 150 and/or the content server 154 can receive information from the messaging application 103, for example, to update a database used or maintained by these modules. For example, where content server 154 maintains a website about a restaurant, message application 103 may provide content server 154 with updated information about the restaurant, such as a favorite dish of the user at the restaurant.
The client device 115 may be a computing device including memory and a hardware processor, such as a camera, laptop computer, tablet computer, mobile phone, wearable device, mobile email device, portable gaming device, portable music player, reader device, head mounted display, or other electronic device capable of wireless access to the network 140.
In the illustrated embodiment, client device 115a is coupled to network 140 via signal line 108 and client device 115n is coupled to network 140 via signal line 110. The signal lines 108 and 110 may be wired connections, such as Ethernet, or wireless connections, such as Wi-Fi, bluetooth, or other wireless technologies. The client devices 115a, 115n are accessed by users 125a, 125n, respectively. The client devices 115a, 115n in fig. 1 are used as examples. Although fig. 1 shows two client devices 115a and 115n, the present disclosure is applicable to a system architecture having one or more client devices 115.
In some implementations, the client device 115 may be a wearable device worn by the user 125. For example, the client device 115 may be included as part of a buckle (clip) (e.g., a bracelet), part of jewelry, or part of a pair of eyeglasses. In another example, the client device 115 may be a smart watch. In various implementations, the user 125 may view the message from the message application 103a/103b on a display of the device, may access the message via a speaker of the device or other output device, and so forth. For example, the user 125 may view information on a display screen of a smartwatch or smartband. In another example, the user 125 may access the message via headphones (not shown) coupled to or part of the client device 115, speakers of the client device 115, haptic feedback elements of the client device 115, and the like.
In some implementations, the message application 103b is stored on the client device 115 a. In some implementations, the message application 103b (e.g., thin client application, client module, etc.) can be a client application stored on the client device 115a that has a corresponding message application 103a (e.g., server application, server module, etc.) stored on the message server 101. For example, the message application 103b may communicate a message created by the user 125a on the client device 115a to the message application 103a stored on the message server 101.
In some implementations, the message application 103a can be a stand-alone application stored on the message server 101. The user 125a may access the messaging application 103a via a web page using a browser or other software on the client device 115 a. In some implementations, the messaging application 103b implemented on the client device 115a can include the same or similar modules as included on the messaging server 101. In some implementations, the message application 103b may be implemented as a stand-alone client application, for example, in a peer-to-peer or other configuration in which one or more client devices 115 include functionality capable of exchanging messages with other client devices 115. In these embodiments, message server 101 may include limited or no message functionality (e.g., client authentication, backup, etc.). In some implementations, message server 101 may implement one or more robots, such as robot 107a and robot 111.
Server 135 may include a processor, memory, and network communication capabilities. In some implementations, the server 135 is a hardware server. Server 135 is communicatively coupled to network 140 via signal line 128. The signal line 128 may be a wired connection, such as Ethernet, coaxial cable, fiber optic cable, etc., or a wireless connection, such as Wi-Fi, bluetooth, or other wireless technology. In some implementations, the server 135 sends data to and receives data from one or more of the client device 115 and the message server 101 via the network 140. Although server 135 is shown as one server, various embodiments may include one or more servers 135. Server 135 may implement one or more robots as server applications or server modules, such as robot 109a and robot 113.
In various embodiments, server 135 may be part of the same entity that manages message server 101, e.g., a provider of a message service. In some implementations, the server 135 can be a third party server, for example, controlled by an entity different from the entity providing the messaging application 103a/103b.
In some implementations, the server 135 provides or hosts the robots. Robots are automated services implemented on one or more computers with which users interact primarily through text, such as through messaging applications 103a/103b. The robot is described in more detail below.
In some implementations, the message application 103a/103b can also provide one or more suggestions, e.g., suggestion responses, to the user 125 via a user interface, e.g., as a button or other user interface element. Suggesting responses may enable faster interactions, for example, by reducing or eliminating the need for a user to type a response. For example, when a client device lacks text input functionality (e.g., a smart watch that does not include a keyboard or microphone), suggesting a response may enable a user to quickly and easily respond to a message. For example, when a user selects a suggestion response (e.g., by selecting a corresponding user interface element on a touch screen), the suggestion response may also enable the user to quickly respond to the message. The suggested responses may be generated using a predictive model, such as a machine learning model trained to generate responses.
For example, the message application 103a/103b may implement machine learning, such as a deep learning model, which may enhance user interaction with the message application 103. For example, response generator 150 may utilize machine learning to provide suggestions to message applications 103a/103 b. In some implementations, machine learning may be implemented on one or more other components of environment 100, and, for example, response generator 150 is not used. The machine learning model may be trained using synthetic data, such as data automatically generated by a computer without using user information. In some implementations, the machine learning model may be trained, for example, based on sample data for which permissions to train using user data have been obtained explicitly from the user. For example, the sample data may include a received message and a response sent to the received message. Based on the sample data, the machine learning model may predict a response to the received message, which may then be provided as a suggested response. For example, by providing a selection of responses tailored based on the received message and the user's context, user interaction is enhanced by reducing the burden on the user to organize the responses of the received message. For example, when the user provides consent, the suggested responses may be customized based on the user's previous activities, such as earlier messages in the session, messages in a different session, and so on. For example, such activity may be used to determine appropriate suggested responses to the user, e.g., interesting responses based on the user's interaction style, formal responses, etc. In another example, when the user specifies one or more preferred languages and/or locales, the message application 103a/103b may generate a suggestion response in the user's preferred language. In various examples, the suggested response may be a text response, an image, multimedia, or the like.
In some implementations, machine learning, e.g., using a conditional language model, can be implemented on the response generator 150 and/or on the message server 101, on the client device 115, on both the message server 101 and the client device 115, and so forth. In some implementations, a simple machine learning model (e.g., allowing operation of the model within memory, storage, and processing constraints of the client device) can be implemented on the client device 115, and a complex machine learning model can be implemented on the message server 101 and/or the response generator 150. If the user does not agree to use the machine learning technique, then such technique is not implemented. In some implementations, the user may selectively provide consent for machine learning implemented only on the client device 115. In these implementations, machine learning may be implemented on the client device 115 such that updates to the machine learning model or user information used by the machine learning model are stored or used locally and are not shared with other devices such as the message server 101, the server 135, or other client devices 115.
For users who agree to receive suggestions, e.g., based on machine learning techniques, the suggestions may be provided by the messaging application 103. For example, the suggestions may include suggestions of content (e.g., movies, books, etc.), schedules (e.g., available time on a user's calendar), events/places (e.g., restaurants, concerts, etc.), and the like. In some implementations, if users participating in the session agree to use the session data, the suggestion may include a suggested response to the incoming message based on the session content. For example, if a first user of two users who have agreed to advice based on session content sent a message "do you want to eat? How does italian? The response may be suggested to the first user, e.g., "@ assistant lunch, italian, 2-person table". In this example, the suggested response includes the robot (identified by the symbol @ and the robot handle assistant). If the first user selects the response, an assant robot is added to the session and a message is sent to the robot. The response from the robot may then be displayed in the session and either of the two users may send a further message to the robot. In this example, the assumant robot is not provided access to the session content and the suggested response is generated by the messaging application 103.
In some implementations, the content of the suggested response may be customized based on whether the robot is already present in the session or is able to be incorporated into the session. For example, if it is determined that the travel robot can be incorporated into a message app, then the suggested response to the question regarding the fare of the airline to France might be "let us ask the travel robot-! "
In various embodiments, the advice, e.g., advice response, may include one or more of the following: text (e.g., "superb |"), emoticons (e.g., smiley face, stranded face, etc.), images (e.g., photos from a user's photo library), template-generated text based on a field in which user data is inserted into the template (e.g., "her number is < telephone number >", if the user provides access to user data, in which the field "telephone number" is filled in based on user data), links (e.g., uniform resource locators), messaging stickers, etc. In some implementations, the suggested responses may be formatted and/or stylized, for example, using colors, fonts, typesets, and the like. For example, a suggestion response that includes a movie recommendation may include descriptive text about the movie, images from the movie, and links to buy tickets. In different embodiments, the suggestion response may be presented as different types of user interface elements, such as text boxes, information cards, and the like.
In various embodiments, the user may be enabled to control whether they receive suggestions, what types of suggestion responses they receive, the frequency of suggestion responses, and so forth. For example, the user may refuse to receive the suggested response entirely, or may select a particular type of suggested response, or may receive the suggested response only at certain times of the day. In another example, the user may choose to receive a personalized suggestion response. In this example, machine learning may be used to provide the suggestion response based on the user's preferences regarding the use of his data and the use of machine learning techniques.
FIG. 2 is a flow chart illustrating an example method 200 for providing a suggested response to a message including an image, according to some embodiments. In some implementations, the method 200 may be implemented, for example, on the server system 102, e.g., the message server 101, as shown in fig. 1. In some implementations, some or all of the method 200 may be implemented on a system, such as one or more client devices 115 shown in fig. 1, and/or on both a server system and one or more client systems. In the described examples, the implementation system includes one or more processors or processing circuits, and one or more storage devices, such as a database or other accessible memory. In one embodiment, different components of one or more servers and/or clients may perform different blocks or other portions of method 200.
In block 202, it is checked whether user consent (e.g., user permissions) has been obtained to use the user data in an embodiment of method 200 (and including the use of the user data in method 300 of FIG. 3 described below). For example, the user data may include messages sent or received by the user, e.g., using the messaging application 103, user preferences, user biometric information, user characteristics (identity, name, age, gender, occupation, etc.), social networks and contacts about the user, social and other types of actions and activities, content created or submitted by the user, ratings and views, the current location of the user, historical user data, images generated, received and/or accessed by the user, videos shared by the user, and so forth. One or more blocks of the methods described herein may use such user data in some implementations.
If user consent has been obtained from the relevant user that user data is available for use in method 200, then in block 204, the block of determining the method herein may be implemented by reasonably using user data as described for those blocks, and the method continues to block 208. If no user consent is obtained, then in block 206 it is determined that the block will be implemented without using the user data, and the method continues to block 208. In some implementations, if user consent has not been obtained, the blocks are implemented without using the user data and with synthetic data and/or commonly or publicly available data.
Embodiments described herein may provide message suggestions based on images. The message suggestions may be provided in various circumstances. For example, the message suggestion may be provided in response to receiving an image on the client device 115a of a particular user (e.g., user 125 a) from any of the user devices 115, e.g., through the message application 103. For example, the messaging application 103 may be an instant messaging application, a social networking application, an email application, a multimedia messaging application, and the like. Message suggestions may be automatically generated and provided to a particular user under the consent of the particular user and one or more other users transmitting and/or receiving images. For example, if the messaging application is an instant messaging application, the image may be received as part of an instant messaging communication between a particular user 125a and one or more other users 125, e.g., in a messaging conversation (e.g., chat) with two participants, in a group messaging conversation including more than two participants, and so forth. In various embodiments, one or more users may be robots. In some implementations, the robot may be an automated agent implemented in software and/or hardware. In some implementations, the robot may be associated with a camera (e.g., security camera, webcam, surveillance camera, etc.), a facility (e.g., smart refrigerator, alarm device, industrial facility, etc.), an imaging device (e.g., microscope, medical imaging device, etc.), or with a camera (e.g., security camera, webcam, surveillance camera, etc.), a facility (e.g., smart refrigerator, alarm device, industrial facility, etc.), an imaging device (e.g., microscope, medical imaging device, etc.), and send one or more images through the messaging application 103. In embodiments that include one or more users as robots, consent to use the message generated by the robot is obtained from the owner or operator of the robot. In some implementations, the consent can be specified as a configuration parameter for the robot, camera, device, etc., and provided to the messaging application 103 when the robot interacts with the messaging application 103.
In some embodiments, message suggestions may be provided exclusively to those users who have agreed to access the user data. In some implementations, the message suggestions can be provided automatically or based on user input, e.g., a user interface can be provided to the user requesting the suggestions.
In block 208, a conditional language model is trained. For example, this block may be performed as a preprocessing step, performed by the same or a different system that performs other blocks of method 200, and may be performed at a different point in time than the other blocks of method 200. The image feature vector may be provided as input to a conditional language model along with previously predicted words (e.g., word sequences), and the probability that all words in the vocabulary are to be the next word in the generated response may be determined. In some embodiments, the conditional language model includes a long short term memory network (LSTM) for simulating chat-like responses (i.e., word sequences) representing image features of the image (as described below). The training data for training the conditional language model may include a number of image-response pairs including images and responses to the images in the context of the message session. In some implementations, the response to a given image can be created synthetically (e.g., by a human) for training data, and/or if the user's consent has been obtained, the response can be obtained from a sample of the actual response of the user to receive the particular image in a message in the context of a test or actual message session. Some examples of training data are described in more detail below.
In block 210, an image is obtained. In various embodiments, the image may be a still image (e.g., a photograph, an emoticon, or other image), an animated image or animated image (e.g., an image including motion, a decal including animation and audio, etc.), video, or the like.
In some embodiments, the image may be obtained by detecting an image that has been received in the context of the message session, for example, included in an electronic message received from another user device over a communications network. In some implementations, for one or more suggested responses, for example, an image may have been received as part of a request from an application via an Application Program Interface (API).
In some further examples, the image may be sent by one or more client devices 115, or by a robot that sent the message, and the image may be received by the client devices 115 via the network 140. In a one-to-one (1:1) message conversation with two participants, an image may be received by a client device of a particular user. In a group message conversation, images may be received by client devices of two or more participants in the group message conversation. In some implementations, the image may be obtained from memory, such as local memory (e.g., memory, storage drives, etc.) of the client device 115 and/or remote memory (e.g., storage drives of a remote client device, server device, or storage device) accessible to the client device over the network 140. In some implementations, the image can be published in a messaging application based on a message that includes the image transmitted by the user. For example, the message server may publish an image within the message application 103 a. In another example, the client device 115 may publish an image within the messaging application 103 b. The method may continue to block 212.
In block 212, in some implementations, it is determined whether the image is eligible to acquire the generated suggestion. In this example method, assume that an image is found to be eligible to acquire the generated suggestion. (if no qualifying image is found, for example, the method is interrupted or another image is obtained.) in some examples, the image is checked for a particular type or class of content for which a message suggestion is not provided. For example, the image and/or metadata thereof may be sent to the content server 154, and the content server 154 may determine whether the image content is included in a particular predefined classification for which message suggestions are not provided. Content server 154 may use, for example, object detection techniques and/or detect other attributes indicative of unsuitable images. The method continues to block 214.
In block 214, a feature vector is determined. The feature vector is a condensed numerical representation of the visual pixel content of the image obtained in block 210. For example, a feature vector may be a vector having a particular number of dimensions, each dimension having a value. In some embodiments, 128 dimensions may be used. In some implementations, the feature vector can be generated by the neural network based on image pixel values (e.g., color values).
In some implementations, one or more feature vectors may be determined from a particular portion of an image, e.g., a "local" image feature (e.g., pattern matching, machine learning, etc.) detected based on image detection or object recognition techniques. For example, image features including faces (no identity), animals, objects, landscape features (leaves, buildings, sky, sunset, etc.) may be detected. For example, if a main subject of an image is determined, a feature vector may be created from the portion of the image depicting the main subject. In some implementations, the feature vectors of the principal subjects of the image may be considered to represent the entire image and used in method 200. The method continues to block 216.
In block 216, one or more suggested responses to the image are generated based on the feature vectors representing the image. In some implementations, the suggestion response is a message suggestion to be sent as one or more session replies to messages (e.g., images) received in a message session (e.g., a session involving electronic messages sent between user devices), where the received messages include images. In some examples, the suggested response may be determined using inferences of one or more language models, e.g., inferences of the conditional language model trained in block 208. Further, different techniques may be used to determine the suggested response based on the output of the conditional language model. Some example implementations of generating a suggestion response using a bundle search technique and an LSTM network are described below with reference to fig. 3-5. In some implementations, the suggested responses may be determined using sampling techniques, e.g., adding the determined word having the highest probability of being the next word to the word sequence.
In some implementations, one or more suggestion responses may be generated based on invoking or requesting information from one or more robots of the accessible device. The responses generated by the conditional language model may be combined and ranked to identify one or more highest ranked suggested responses. The suggestion response may be text (e.g., a phrase, word, etc.), images, video, and/or other types of media content. In some example implementations, the suggestion response may be generated in text form, as described in detail in some examples below, and the generated text may be matched with concepts (e.g., tags) detected in other types of media content (if user consent has been obtained, such as images from a user collection or from an accessible image library or photo library), where the concepts may be similarly identified in the media content as described herein. Such matching media content may then be provided as a message suggestion as described herein. The method continues to block 218.
In block 218, one or more of the highest ranked suggested responses are provided to the user. For example, the highest ranked suggested response may be displayed on a display device of the client device 115 used by the user. In some examples, if an image is obtained in a received message, the image may be displayed in a message interface and the highest ranking suggested response may be displayed in association with the image, e.g., on one side of the image. In various embodiments, a particular number of highest ranked suggested responses may be displayed, e.g., three, ten, etc. In some implementations, the number of suggested responses presented may be determined by the user, for example, via user input and/or stored user preferences. In some implementations, one or more of the highest ranked suggested responses are provided (e.g., transmitted) to a requesting device or application requesting the one or more suggested responses, such as an application on the same system or a different system that performs method 200. The method continues to block 220.
In block 220, in some implementations, a selection of one or more of the displayed highest ranked suggested responses is received. For example, the selection may be based on user input provided by the user at the user device, e.g., via an input device such as a touch screen or touchpad that receives user touches, a microphone that receives voice commands, buttons, a mouse, or a joystick that receives user manipulations, etc. In some examples, a user may enter a single click on a touch screen to select an associated suggestion response, thus reducing the amount of user input as compared to manually entering a response. In some implementations, one or more suggestion responses may be automatically selected (without user input), e.g., based on user preferences, user context (e.g., geographic location, time or date, etc., if user consent has been obtained), or other predefined conditions.
In some implementations, block 220 may be implemented by a client device, for example, receiving a selection via an input device connected to the client device. Some embodiments may implement block 220 using a server device, for example, that receives a selection transmitted to the server device directly from an input device used at a client device or other device over a communication network, or transmitted to the server device through one or more other devices (e.g., client device and/or server device). The method continues to block 222.
In block 222, in some implementations, the suggested response selected in block 220 is sent (or otherwise output). For example, the selected response may be sent as one or more messages to one or more recipient devices. In some examples, messages may be transmitted to one or more other client devices 115 and/or directly to other client devices 115 via message server 101 over network 140. In some implementations, for example, in a one-to-one session, the message is sent to the user device, which sends the image obtained in block 210, for example, in a message received by the user device, such as a chat message, a text message, an email message, or the like. In some implementations, the message is sent to one or more user devices configured for the user account that sent the image obtained in block 210. In some embodiments, for example, when the user selects more than one suggested response, the selected responses may be sent as separate messages, as a combined message, or the like. In some implementations, a user interface may be provided to allow editing of the selected suggestion response prior to outputting the message, such as in a message composition interface. Then, in some embodiments, the method may return to block 210, for example, if another image has been obtained.
FIG. 3 is a flow chart illustrating an example method 300 of generating one or more suggested responses based on feature vectors representing an image. For example, the method 300 may be used to implement block 216 of the example method 200 of fig. 2.
In general overview and example, in some implementations the method 300 may include the following features. First, the start token is pushed into the bundle queue. In addition, feature vectors of the image are fed to the conditional language model. In an initial stage (block 304), the conditional language model generates one or more words from the vocabulary as first words determined based on the feature vectors, e.g., words from previous responses, e.g., "pretty", "cure" and "nute" used as training data. For each word in the initial phase, a sequence is created by adding the next word to determine one or more word sequences. For example, if the initial word is "pretty", the sequences may be determined to each begin with "pretty", such as "pretty woman", "pretty girl", "pretty cool", and the like. Additional words may similarly continue to be added to the word sequence at a later stage. Different word sequences may have different lengths, for example, "pretty good deal" may be a sequence of size 3. The process may be repeated for other words determined at an initial stage, e.g., "cure-! "," cure master "," heat quick ", and so forth (blocks 306-320). Based on the one or more first words, the first N sequences from the determined word sequences may be selected as suggestion responses.
In block 302, feature vectors are input to a conditional language model to adjust the model. For example, the feature vector may be a condensed representation of the image obtained as described above with respect to fig. 2. The conditional language model may include a trained neural network that has been trained using training data of images and common responses, for example, as described above with respect to block 208 of fig. 2. The training data response includes words that form a vocabulary of available words that are used to form the suggestion response. For example, a long-term memory (LSTM) neural network may be used, wherein image feature vectors are input to a first instance of LSTM. Some examples of LSTM networks that may be used are described below with reference to fig. 5. The LSTM network (or other conditional language model) may be implemented in a memory (e.g., memory) of the device and use one or more hardware processors. Some advantages of inputting predetermined feature vectors representing images into a conditional language model include the elimination of the need to deploy feature extractors in the conditional language model, enabling smaller size and potentially faster model execution of the conditional language model.
In block 304, the initial word is pushed into a bundle queue (beam queue). In this example, a bundle search technique is used to search and combine responses based on images and outputs of the conditional language model. Each response is a "word sequence" which may be one or more words provided in the sequence, for example, a word sequence found in responses such as "so cute" and "I like it". A word may be a string of one or more characters, where a character may be a letter, punctuation (e.g., "|" or ".
The initial word pushed into the bundle queue is used to initiate the word generation process of the verb sequence. In some embodiments, the initial word is a specific start token, indicating that it is the beginning of the process. For example, the response output from the conditional language model may ignore the start token and any end tokens (described below). In some embodiments, the bundle queue has a maximum size Q, representing the maximum value Q of the word sequence (bundle) to be processed as described below. For example, Q may be 10, 20, or other numbers.
In block 306, a sequence of words in a bundle queue is selected. For example, in a first iteration of method 300, the selected word sequence is a first word, such as a start token as described above. In a subsequent iteration, the selected word sequence may be the next word sequence in the cluster queue that has not yet been processed (e.g., the next word that has not yet been processed to find the word sequence). In some embodiments, the word sequences stored in the cluster queues are word image embeddings created by the LSTM neural network, where each embedment is a vector of numbers that encode, in condensed form, words so far included in the images of the word sequences and feature vectors. For example, each word may be represented by a word insert, which may have the same number of dimensions as the feature vector, e.g., they are mapped to the same space and may be combined into a word image insert.
In block 308, the selected word sequence is input to the conditional language model. For example, the selected word sequence may be input to one LSTM (e.g., instantiated) of the LSTM network that provides the conditional language model. An example of an LSTM architecture is shown in FIG. 5. In some examples, in the initial iteration of block 308, the image feature vector entered in block 302 is entered into the first LSTM (e.g., instantiated), and the initial word (e.g., start token) is also entered into the first LSTM. In subsequent iterations of block 308, the selected word sequence is an embedding encoding the image feature vector and words that have been included in the selected word sequence so far, and the selected word sequence is input to a subsequent LSTM (e.g., instantiation) that provides the next word in the word sequence.
In block 310, a plurality of words are determined or generated from the vocabulary as candidate next words in the word sequence using the conditional language model, and a probability that the plurality of words become next words in the selected word sequence is determined. For example, LSTM inputting the selected word sequence in block 308 determines words and probabilities. The words and probabilities are determined by the conditional language model based on training of the conditional language model using training data, wherein the training data includes previous images and associated previous responses, which provide a vocabulary. For example, the vocabulary includes words used in the response to training data for training the conditional language model. In some implementations, the vocabulary may include a large number of words, e.g., thousands. In some implementations, the conditional language model determines the probability that each word in the vocabulary is the next word in the word sequence for the given image feature vector, based on training from training data that includes responses to the particular image, such that all words in the vocabulary have a determined probability.
In some implementations, a subset of the vocabulary word set may be determined for probability, e.g., all nouns, adverbs, or other types of words in the vocabulary, or a different selected subset of vocabulary words. In some implementations, the subset of vocabulary words may be a subset of words with a known high probability (e.g., above a threshold probability or frequency) that will be used to respond to received electronic messages and/or to respond to images received in such messages, e.g., based on general user data from previously sent messages and responses (if user consent from the sender/receiver of such messages has been obtained). As described above, words may include text words, symbols (e.g., punctuation, ellipses, etc.), emoticons, and the like. In some implementations, the words can include images (e.g., "stickers"), animations, and the like. In some implementations, one of the possible next words from any word sequence of the vocabulary is a special end token, e.g., a token designated to represent the end of the word sequence. In some implementations, a plurality of different word sequences are effectively created based on appending each used vocabulary word to the end of the selected word sequence, respectively.
In block 312, a number (e.g., Q) of word sequences are selected based on the probability of the next word determined in block 310, including the next word determined in block 310. Accordingly, Q word sequences are selected based on their associated probabilities of the next word. The selected Q word sequences are a subset of the word sequences formed by appending the next word determined in block 310 to the selected (previous) word sequences, respectively. For example, a sequence of Q words is selected, where their next word has the highest probability determined in block 310. For example, a probability is generated for each next word of each word sequence in the cluster queue, and the Q word sequences associated with the highest probability are selected. For example, each selected word sequence is a word insert including the image vector, the previously selected word of the word sequence, and the next word now inserted at the end of the word sequence. In some cases, these may be word sequences, where the next word is an end token. In some implementations, Q word sequences are selected that have probabilities above a predetermined probability threshold.
In some embodiments, the selection of Q word sequences may be affected by other factors. For example, one factor may be one or more previous message responses sent by the user for whom the suggested response is being generated. In some examples, if one or more of the generated word sequences are the same or similar to a previous response provided by the user in the message context (e.g., have a percentage threshold for the same words in the same sequence), then a higher weight may be assigned to those similar generated word sequences. For example, a higher weight may cause a weighted word sequence to be selected among other word sequences associated with the same or similar probabilities as the weighted word sequence. If user consent has been obtained, then the previous user response may be obtained from a message data store, such as message application database 199. In some implementations, if a previous image to which the previous response was responded is available (e.g., in the message data store), the previous image to which the previous response was replied can also be compared to the current image. If the current image is similar to the previous image (e.g., there is a percent similarity of values in their feature vectors), the previous response is indicated to reply to the previous image that is similar to the current image. Thus, word sequences generated that correspond to previous responses of previous images may be assigned higher weights to enhance their qualification to be selected in block 312.
In some implementations, the previous image received or transmitted by the user or user device may affect the selection of the word sequence (e.g., block 312) and/or the generation of the word sequence (e.g., block 310). In one example, a suggested response may be generated and/or weighted to reference a previous image in the context of a current (most recently received) image. Such a suggested response may be determined, for example, if a previous image is received within a predetermined period of time before the current image is received. In some examples, if it is determined that the previous image depicts a first type of object (e.g., clothing such as a shirt), then the current image also depicts the same type of object (e.g., based on image object recognition technology, image tags or other metadata, etc.), then the generated suggestion response may include "i prefer another" and/or "i prefer this".
In another example, the suggested response may be generated and/or weighted based on previous responses that were previously sent in response to a series or set of such previous images sent or received within a threshold period of time of each other. In some examples, such suggested responses may be generated and/or weighted higher if a set of images similar to or corresponding to a previous set of images has been currently received (e.g., if the previous set of images was received within a threshold period of time from the current time). In some cases, one or more previous messages may be associated with (e.g., appended with or transmitted within a threshold period of time of transmitting) the previous image, and such previous messages may also be used for response generation and/or weighting. In some examples, a user may receive several previous images that are related to each other in their subject within a threshold period of time. For example, the previous image may depict the same type of object (e.g., a particular type of clothing) and have different features (e.g., colors, sizes, patterns, etc.) depicted in the image (and detected using one or more object recognition techniques) and/or indicated in metadata of the image. Furthermore, previous messages like "what should i buy? "possibly received, which is associated with one or more previous images. The previous response to such a set of previous images and/or previous messages may be "second", "i like blue" (if one of the described items is blue), and so on. A suggested response may be generated for the current set of images based on training data including such previous messages and images. For example, among the generated suggested responses, suggested responses such as "first", "second", "third", "blue", etc. may be generated and/or weighted higher as responses to a received set of images and/or received message asking which object to purchase.
In block 314, in some implementations, it is determined whether all selected word sequences are on the whitelist. For example, the whitelist may be a subset of the responses provided in the training data used to train the conditional language model. The whitelist may be stored in an accessible memory, for example, a memory or other storage of the accessible devices of environment 100. In some embodiments, the whitelist provides responses that allow for output. Each selected word sequence from block 312 may be compared to the responses on the whitelist. Word sequences that are not present in the whitelist are not allowed to be output as suggestion responses. In some implementations, a blacklist may be used, e.g., providing responses that are not allowed to be output, such that selected word sequences that match responses on the blacklist are not allowed to be output.
If all of the selected word sequences are found on the whitelist in block 314, the method continues to block 318 as described below. If one or more of the selected word sequences are not found on the whitelist in block 314, the method continues to block 316 where the word sequences that are not present on the whitelist are replaced with other word sequences that include a different next word as determined by the conditional language model in block 310. For example, a word sequence having the next word with the next highest probability after the N highest probabilities may be selected to replace a word sequence that is not on the whitelist. The method continues to block 318.
In block 318, the selected word sequence is pushed into a bundle queue. For example, an earlier version of the word sequence derived from the word sequence in the bundle queue (e.g., where the earlier version has fewer words) may be stored in place of the earlier version in the bundle queue (e.g., in some embodiments, in place of the earlier version without the end token).
In block 320, it is checked whether all word sequences in the bundle queue have met one or more termination conditions. For example, one termination condition may be that all word sequences in the bundle queue end with a special end token as their last word, indicating that no more words are added to those word sequences. The conditional language model may generate an end token for the sequence of words as one of the next words of the sequence that is generated. Another termination condition may be that the maximum length of a word in the word sequence has been reached for the word sequence in the bundle queue. It is also possible to check a combination of termination conditions, for example that all word sequences in the group queue end with a particular end token or have a maximum word length.
If not all word sequences in the bundle queue satisfy one or more termination conditions, the method returns to block 306 to select a word sequence in the bundle queue. In some embodiments, the selected word sequence may be a word sequence that does not end with a particular end token, does not reach a maximum word length, or does not reach other termination conditions. In some implementations, the selected word sequence may be one of the word sequences just generated (e.g., the word was added) and stored in the bundling queue in the last iteration.
In block 320, if all word sequences in the bundle queue satisfy one or more termination conditions, the method continues to block 322 where the word sequences in the bundle queue are designated as suggested responses. For example, these word sequences and the scores of these word sequences (described below) may be tagged and/or stored as suggested responses. The method then continues to block 324.
In block 324, it is checked whether there are one or more additional word sequences to process. For example, there may be one or more word sequences selected in block 312 from a previous iteration (and qualifying in block 314) that has not met the termination condition because other selected word sequences are pushed into the bundle queue for processing. If there are more word sequences to process, the method continues to block 304 to push the unprocessed word sequences into the (empty) cluster queue and repeat the process of blocks 306-320.
If it is checked in block 324 that there are no more word sequences to process, the method continues to block 326 where the specified word sequence is output as a generated suggestion response. For example, the output suggestion response may be provided to block 218 of fig. 2. In some implementations, the bundle search generates a score for each word sequence, as described above for block 322, and the word sequences are ranked based on this score. For example, the score of the word sequence may be based on a probability of one or more words included in the word sequence determined by the conditional language model. In various embodiments, the score of a word sequence may be a probability of being added to the last word of the word sequence, or a combination of probabilities of words in the word sequence (e.g., an average), and/or may be based on other factors (e.g., word sequences with fewer words may be assigned a better (e.g., higher) score than word sequences with more words, word sequences with particular words (e.g., from a predetermined list) may be assigned a higher score than words not on the list, etc.).
In some implementations, the word sequence may be output in a ranked order in block 320 based on its score, e.g., such that block 218 may select a particular number of highest ranked suggestion responses.
In other implementations, other methods or variations of the blocks of FIG. 3 may be used to determine the suggested responses using a conditional language model. For example, some embodiments may use different sizes of cluster queues, different order of progression of one or more blocks, different techniques for generating and retaining different word sequences provided from conditional language models, and so forth.
FIG. 4 is a block diagram illustrating one example module 400 that may implement one or more suggested response features described herein. In some implementations, the message module 402 can be a component of the message application 103 and can obtain images as described above with respect to fig. 2, for example, as part of messages received from different user devices. The image may be sent to the message suggestion module 404, and the message suggestion module 404 may include several different components. Some or all of the components of message suggestion module 404 may be implemented in message application 103, response generator 150, and/or other modules or components of the system shown in environment 100.
For example, an image (e.g., image pixels) may be sent from the message module 402 to the feature vector generator 406, the feature vector generator 406 being described above with reference to fig. 2. As described above, feature vector generator 406 determines feature vectors based on image pixels, where the feature vectors represent the image. The feature vector generator outputs feature vectors of multiple dimensions to the response generator 408.
In some implementations, the response generator 408 determines one or more suggested responses for the image feature vector by using the conditional language model 410. In some implementations, the response generator 408 (and/or the conditional language model 410) can use the whitelist 412 to potentially filter out some suggested responses, e.g., those that do not appear on the whitelist.
In some implementations, one or more suggestion responses may be generated based on one or more robot calls or requests information accessible from the device. For example, if the response generator 408 (or other component of the system) determines that the appropriate suggested response will be specific information related to the content of the image, a robot that may obtain the information may be determined and commands and/or requests to the robot may be generated as the suggested response.
In some implementations, the message ranking component 414 can receive the suggested responses generated by the response generator 408 and combine the suggested responses and name them side-by-side as a ranking order. For example, the suggested responses may be ranked based on the calculated scores, where a score may be determined for each suggested response determined for the image. In some implementations, a score can be determined for each suggested response. In some implementations, the score is based on probabilities determined by a conditional language model as described above. In some implementations, the score can be based on a determined probability of suggesting a response in relation to the image, where the probability can be based on, for example, a frequency of occurrence of the response in the historical message data (and/or in the training data as described above). The historical message data may be data from previous sessions in which participants in the session have agreed to use the data to implement the suggested response feature. If the user does not provide permission for such use, the historical message data is not used. In some implementations, the response generator 408 can provide a score for the response that can be used by the message ranking component 414 to rank the responses. In some implementations, the response generator 408 may provide a score and ranking of the generated suggested responses, as described above with respect to fig. 3, for example, the message ranking component 414 may be included in the response generator 408.
The suggestion responses may be output in rank order. In some embodiments, suggested responses requesting information from robots may be similarly ranked based on one or more confidence scores determined based on similar factors (frequency in training message data, etc.), and/or in some embodiments, at least one robot-related response may always be ranked very high (e.g., a response invoking a robot may be presented to a user as an alternative suggested response). In some implementations, the system can also rank the suggested responses based on diversity. For example, if the plurality of highest ranked suggested responses are similar to each other in terms of words, letters, or semantics (e.g., as determined by a dictionary, thesaurus, or other technique and/or data referenced), the ranking may be adjusted, for example, by decreasing the ranking of at least one similar response, to increase the diversity of suggested responses.
In some implementations, a particular number of highest ranked suggestion responses may be sent for display or other output on the user device. One or more of these suggested responses may be selected by user input to send one or more messages to the other device, where the one or more messages include the content of the selected suggested response. In some implementations, if the selected suggestion response is a command or request to the robot, the robot can be added to the message session and the requested information is retrieved and displayed in the session interface and the user can send further messages to the robot.
Fig. 5 is a block diagram illustrating one example of an LSTM architecture 500 that may implement one or more features described herein. LSTM architecture 500 implements a conditional language model and includes a plurality of LSTM 502, LSTM 502 representing instances or copies of the LSTM model box at different stages of the implemented process.
In this example, training is first provided for the system. In some implementations, the training data may include image-pair responses as described above, which may have been filtered (e.g., filtered by point-by-Point Mutual Information (PMI) filtering) and/or otherwise processed. The LSTM model is trained to output the probability of the next word in the word sequence after the input includes the image feature vector and the embedding of all previous words in the word sequence. For training, an image feature vector representing an image of training data is input into the first LSTM 506. Furthermore, for training (rather than for inference), words are input to the LSTM after the LSTM 506, where the word embedding represents individual words contained in the response to the training data corresponding to the image. In some examples, the words of the training data response are input to the LSTM at a time. In some examples, the word ID (e.g., word ID 514 or 524) may be a one-hot vector representing a particular word and having a size of a vocabulary, which is fed to a neural network to produce a word insert (e.g., word insert 516 or 526), which is a lower-dimensional vector, e.g., having dimensions of an image feature vector.
In an example training process, a first LSTM 506 outputs a value vector (output of the LSTM neural network, e.g., top layer of LSTM) encoding information indicating a word distribution of word 1, where the vector is input to a softmax function 508. The softmax function 508 outputs a word 1 probability distribution 510, the word 1 probability distribution 510 indicating the probability that a word of the vocabulary will be the next word (word 1) in the word sequence. The vocabulary words come from responses used in training data for training the conditional learning model. The first LSTM 506 also outputs an embedding that is input to the second LSTM 512, where the embedding includes a representation of the previous word of the sequence and the image feature vector 504. In the example of fig. 5, sample word 1id 514 is provided as word insert 516 that is input to second LSTM 512, e.g., representing the first word included in the response to the image represented by image feature vector 504. The LSTM 512 outputs value vector encoded information indicating a word distribution of the next word (word 2) input to the softmax function 518, and the softmax function 518 outputs a word 2 probability distribution 520, the word 2 probability distribution 520 indicating the probability that the vocabulary word becomes the next word (word 2) in the word sequence. LSTM 512 also outputs an embedding of previous words representing the image feature vector and sequence, where the embedding is input to nth LSTM 522. The N-1 th word ID 524 is provided as the word insert 526 for the N-th LSTM 522. The LSTM 522 outputs a vector for the determined next word (word N) input to the softmax function 528, and the softmax function 528 outputs a word N probability distribution 530 indicating the probability that the vocabulary word becomes the next word (word N) in the word sequence.
In an example training process, the determined probabilities are fed back to the LSTM and weights are adjusted such that the LSTM produces a high probability of word sequences that have been used in the response, e.g., based on word 1 through word N-1 embedding 516 and 526 that are known to be input in the response of training data corresponding to images of the training data (represented by image feature vectors).
During operation (e.g., an inference process that determines word probabilities based on input images, an example of which is described with respect to fig. 3), the conditional language model has been previously trained. The new image represented by image feature vector 504 is input to LSTM 506.LSTM 506 determines a distribution of words in the vocabulary for a next word, word 1, based on the image feature vector and outputs a value vector of the distribution, which is input to softmax function 508, softmax function 508 determines and outputs a probability distribution 510, which probability distribution 510 indicates a probability that the vocabulary word is available for word 1 as the next word in the word sequence. For example, using the bundle search technique described above with reference to fig. 3, the search method may select one or more of these words based on these probabilities.
In a subsequent iteration, the search method (e.g., block 308 of FIG. 3) provides the second LSTM 512 with an embedding representing the previous word and feature vector selected for the word sequence. LSTM 512 determines the distribution of words from the vocabulary based on the next word embedded as a word sequence, word 2, and outputs a value vector of the distribution, which is input to softmax function 518. The softmax function 518 determines and outputs a probability distribution 520, the probability distribution 520 representing the probability that a word of the vocabulary may be used for word 2 as the next word in the word sequence. The search method selects one or more of the words based on the probabilities. In a subsequent iteration, the search method may input an embedding representing the previous word and feature vector selected for the word sequence to the next LSTM 522 to determine the word distribution of the nth word of the word sequence, and LSTM 522 similarly generates probability distribution 530 of word N. The search method selects one or more of the words based on the probabilities.
Thus, the LSTM network of fig. 5 determines the probability of each next word in the word sequence. In effect, the LSTM network determines the probabilities associated with each word sequence because the previous word determined based on its probability is included in the word sequence embedding that the LSTM instance provides to the next LSTM instance. Thus, the suggested response determined from the word sequence is also associated with a probability.
As described above, the conditional language model may be trained based on training data. Prior to receiving an image for which a suggestion response is to be generated, a conditional language model may be created based on the training data such that upon receiving the image, a suggestion message may be generated using an existing model.
In some implementations, some or all of the conditional language model can be updated based on images received during runtime and based on suggested responses that are ultimately selected by the user (or application) for transmission in a message or selected for other uses. For example, the received image and the user-selected response are provided as a new image-response pair for use in training of the updated model.
In some examples, the training data may be message data that includes images and responses to those images. For example, the message data may be synthetic data, e.g., based on a simulated conversation, where no human user is a participant. In some implementations, the training data may include images and messages that are actually exchanged by users agreeing to provide such data for training purposes. The training data is processed prior to use to delete the user identifier and other user-related information. For example, in some embodiments, an image-response pair may be obtained as training message data that identifies a particular image received and the content of the response transmitted by the user selecting and replying to receiving the particular image. For example, a response may have been selected in the messaging application during the session.
In some implementations, to determine at least a portion of training message data from a set of message data, the system can determine frequent historical responses from users in the set of message data in reply to receiving images in the message, and the most frequent responses and images can be organized and stored by the system as training data.
In some implementations, many of the most frequent responses in the message data set may not be as suitable as other less frequent responses to determine the suggested response. For example, the most frequent response may be dictated by a response that may not be specific to a particular image (e.g., a particular type of image content). In some examples, a general response such as "lol" may be the most frequent response to many different images and/or many different types of image content (e.g., image features) and is not specific to any particular image content or type of image content. Some embodiments may filter out such frequent generic responses to obtain a more content-specific response for the image of the training data. For example, a statistical association score may be calculated between the image and the response. In some examples, point-wise mutual information (PMI) may be determined for each image-response pair as follows:
Pairs with association scores (e.g., PMIs) below a particular association threshold (e.g., PMI threshold) may be removed from the training data. In some examples, an association threshold of 1 may be used. When images and responses appear independently in the collection of message data, the pairs of filtered pairs that remain after filtering appear more frequently, and thus the responses of these remaining pairs are more specific to the image content of these remaining pairs (e.g., the remaining pairs have images and responses that are more correlated with each other, while the filtered pairs have images and responses that are less correlated with each other). The remaining pairs may be used as training data to train a conditional language model to generate suggested responses for detecting new images that are similar to the images included in the remaining pairs. Thus, the training data may be filtered such that previous responses in the training data are more specific to particular content of previous images than other more general previous responses filtered from the training data.
In some implementations, if user consent has been obtained, the user's preference for one or more responses (e.g., as shown in the previous response data) can be used to weight the same or similar responses in the training data used for training of the model. For example, user preferences may be indicated for responses that are frequently provided by the user (e.g., provided by the user more than a threshold number of times) and/or responses that have been advantageously received and rated by the user (e.g., with explicit user ratings or positive feedback replies). For example, the same or similar responses may have greater bias in the training of the model, e.g., such that the responses have greater probabilities or scores when the model generates probabilities as described above. Similar responses may include responses with the same root word (e.g., words without suffixes or punctuations), and/or with the same semantic meaning as determined by a database of references (e.g., word stock, dictionary, etc.), knowledge graph, or model.
The methods, blocks, and operations described herein may, where appropriate, be performed in a different order than shown or described, and/or concurrently with other blocks or operations (partially or fully). Some blocks or operations may be performed on one portion of data and performed again later, e.g., on another portion of data. Not all described frameworks and operations need to be performed in various embodiments. In some implementations, the framework and operations may be performed in a different order and/or at different times in the method.
In some implementations, some or all of the methods may be implemented on a system, such as one or more client devices. In some implementations, one or more of the methods described herein may be implemented, for example, on a server system and/or on both a server system and a client system. In some implementations, different components of one or more servers and/or clients may perform different blocks, operations, or other portions of the method.
Fig. 6 is a graphical representation of an example client device 600 displaying a user interface 601 in which messaging applications are used for conversations between users. In this example, a first user and a second user are engaged in chat via their client devices, where the second user is operating client device 600. A first user, represented by a displayed icon 602, sends a message 604 to a second user, as displayed in the user interface. For example, the message 604 may have been sent from a user device of a first user to a client device 600 operated by a second user over a network. The second user responds with a message 606 displayed in the user interface. For example, the second user may have entered the message 606 in the user interface 601, e.g., via a displayed keyboard or other input display or device. In response, the first user sends a message to the second user that includes an image 608, where the image 608 is displayed in the user interface after (e.g., below) the previous message of the session. In some examples, the first user 602 is a human user. In some implementations, the first user 602 can be a robot.
In some implementations, the first user sends the message to the second user through a messaging telephone number (e.g., when the messaging application 103 is operating through SMS, or another messaging application that utilizes telephone numbers) or selecting the user from a contact list (e.g., when the messaging application 103 is operating on a Rich Communication Service (RCS) or another chat interface).
FIG. 7 is a graphical representation of the example client device 600 and user interface 601 of FIG. 6, wherein a session in a messaging application includes a generated suggestion response for a received image. The session shown in fig. 7 is the same as that in fig. 6. As shown in fig. 7, the messaging application 103 provides one or more suggested responses 710 to the image 608, for example, using the method shown in fig. 2, the one or more suggested responses 710 being displayed in the user interface 601. The message field 718 may alternatively be used by the second user to input a text message to be sent to the first user (e.g., via a keyboard, voice command, etc.). The second user may select any suggested response 710 as a response to receiving image 608. For example, a suggested response 712 (with the text "aww"), a suggested response 714 (with the text "lovely |"), and a suggested response 806 (with the text "where. For example, while suggestion responses 712, 714, and 716 are displayed below received image 608 in FIG. 7, they may be displayed in any of a variety of locations in the user interface (e.g., above, sideways or around image 608, in a separate display field or window in user interface 601, etc.).
In the example shown in fig. 7, the image 608 has been processed by a conditional language model to determine a suggested response based on training of the model as described herein. One or more suggested responses 710 may be determined based on a conditional language model trained by training data including previous responses provided by a user to an image depicting similar pixels as image 608. Because the response is determined directly based on the representation of the image pixels, a suggested response may be determined and presented that is appropriate and relevant to the image and is not limited to a determined tag based on a concept or image characteristics detected by the system in image 608. In this example, the suggested response 712, "aww," is determined based on image pixels and machine learning training based on previous message data. Suggested responses 712 may not be determined by other techniques in which tags are determined and suggested responses are determined from the tags, e.g., based on data-dependent tags to the suggested responses. For example, such tags may include "people", "men" and "women" to describe through the system the image features detected in the image 608, and such tags may be less likely to produce suggested responses such as response 712 and/or other responses 714 or 716.
Figures 8, 9, 10 and 11 are graphical representations showing additional examples of suggested responses determined for images received in messages, e.g., from different user devices. In these examples, the suggested response is displayed in a user interface of the message application and may be generated by or for the message application using one or more features described herein.
FIG. 8 illustrates a user interface 800 that displays a received image 802 and a suggestion response 804 that is determined using a conditional language model based on the image 802 and presented in the user interface 800 for a second user to select to reply to the image 802. In this example, the suggested responses include suggested response 806 ("beauty"), suggested response 808 ("beautiful") and suggested response 810 ("where. One or more of the responses 806, 808, and 810 may be selected to send the selected response to the first user over the communication network (e.g., a confirmation prompt may be displayed to request the second user to confirm that the selected suggested response is about to be sent). Alternatively, the second user may use the message field 812 to enter a text message that is sent to the first user. Responses 806, 808, and 810 may be appropriate responses determined directly based on image pixels. For example, the response 806 may not have been determined by other techniques in which suggested responses are determined based on tags such as "lake," "sky," and "tree," which are determined based on detected image features and concepts depicted in the image.
FIG. 9 similarly illustrates a user interface 900 that displays a received image 902 and a suggested response 904 determined using a conditional language model based on the image 902 and presented in the user interface 900 for selection by a second user to reply to the image 902. In this example, the suggested responses include suggested response 906 ("look interesting"), suggested response 908 ("whe"), and suggested response 910 ("interesting-. The second user may select one or more of the responses 906, 908, and 910 to send the selected response to the first user over the communication network. Alternatively, the second user may use the message field 912 to enter a text message that is sent to the first user. Responses 906, 908, and 910 may be appropriate responses that are determined directly based on the image pixels. For example, the response 906 may not have been determined by other techniques in which the suggested response is determined based on tags such as "people", "men", "women", "trees" that are determined for the image based on the detected image features and concepts depicted in the image.
Fig. 10 similarly shows a user interface 1000 that displays a received image 1002 and a suggestion response 1004 that is determined based on the image 1002 using a conditional language model and presented in the user interface 1000 for a second user to choose to reply to the image 1002, in this example, the suggestion response including a suggestion response 1006 ("those are loved), a suggestion response 1008 (" i like it "), and a suggestion response 1010 (" are red. The second user may select one or more of the responses 1006, 1008, and 1010 to send the selected response to the first user over the communication network. Alternatively, the second user may use the message field 1012 to enter a text message that is sent to the first user. Responses 1006, 1008, and 1010 may be appropriate responses determined directly based on the image pixels. For example, the response 1006 may not have been determined by other techniques in which suggested responses are determined based on tags such as "clothing" and "pants" that are determined for images based on detected image features and concepts depicted in the images.
FIG. 11 similarly shows a user interface 1100 that displays a received image 1102 and a suggested response 1104 that was determined based on the image 1102 using a conditional language model and presented in the user interface 1100 for a second user to choose to reply to the image 1102, in this example, the suggested response including a suggested response 1106 ("you look very bar"), a suggested response 1008 ("her loving you |"), and a suggested response 1010 ("fortunate partner"). The second user may select one or more of the responses 1106, 1108, and 1110 to send the selected response to the first user over the communication network. Alternatively, the second user may use message field 1112 to enter a text message sent to the first user. Responses 1106, 1108, and 1110 may be appropriate responses determined directly based on the image pixels. For example, the response 1106 may not have been determined by other techniques in which suggested responses are determined based on tags such as "person," "woman," "man," and "kissing," which are determined for images based on detected image features and concepts depicted in the images.
Robot embodiment
The robot is an automated service implemented on one or more computers with which the user interacts, for example via a messaging application 103a/103b, mainly by text. The robot may be implemented by a robot provider so that the robot may interact with users of various messaging applications. In some implementations, the provider of the messaging application 103a/103b can also provide one or more robots. In some implementations, robots provided by the providers of the message applications 103a/103b may be configured such that the robots may be included in other message applications, such as provided by other providers. Robots can provide several advantages over other modes. For example, the bot may allow a user to try new services (e.g., taxi booking services, restaurant booking services, etc.) without installing an application or accessing a website on the client device. In addition, users may interact with the bot through text, which requires minimal or no learning, as compared to telephone calls that require the use of websites, software applications, such as Interactive Voice Response (IVR) services, or other ways of interacting with the services. Incorporation of robots in a messaging service or application may also allow users to cooperate with other users to accomplish various tasks within the messaging service, such as travel planning, shopping, scheduling events, obtaining information, etc., and eliminate cumbersome operations, such as switching between various applications (e.g., taxi booking applications, restaurant booking applications, calendar applications, etc.) or websites to accomplish tasks.
The bot may be implemented as a computer program or application (e.g., a software application) configured to interact with one or more users (e.g., any of the users 125 a-n) via the messaging application 103a/103b to provide information or perform specific actions in the messaging application 103. As one example, the information retrieval robot may search for information on the internet and present the most relevant search results within the message app. As another example, a travel robot may have the ability to conduct travel arrangements via the messaging application 103, for example, by being able to conduct purchases of travel and hotel tickets within the messaging app, hotel reservations within the messaging app, car rentals within the messaging app, and so forth. As another example, a taxi robot may have a taxi-call, e.g., to a user's location (obtained by the taxi robot from client device 115 when user 125 allows access to location information), without invoking or calling a separate taxi booking app. As another example, the coach/coaching robot can coach the user, for example, by asking questions that may be present in the examination and providing feedback regarding whether the user's response is correct, to guide the user within the message app for certain topics. As another example, the game robot may play a game within the message app in a user's cube or the same party. As another example, the business robot may provide services from a particular merchant, for example, by retrieving product information from a merchant's catalog and being able to purchase through a message app. As another example, the interface robot may engage a remote device or vehicle such that a user of the message app may chat with the remote device or vehicle, retrieve information from the remote device or vehicle, and/or provide instructions to the remote device or vehicle.
The capabilities of the robot may include understanding and running on the user's intent. The user's intent may be understood by analyzing and understanding the user's session and its context. The bot may also understand changing session context or changing user moods and/or intents based on the session evolving over time. For example, if user a suggests that he is on a meeting to drink coffee, but if user B states that he is disliked coffee, the robot may assign a negative mood score for coffee to user B and may not suggest a coffee shop for the meeting.
Implementing a robot that can communicate with a user of the messaging application 103a/103b can provide a number of advantages. Traditionally, users may utilize software applications or websites to conduct activities such as paying bills, ordering food, booking tickets, and the like. A problem with this embodiment is that the user needs to install or use multiple software applications and websites to conduct multiple activities. For example, the user may have to install a different software application to pay a utility bill (e.g., from a utility company), purchase movie tickets (e.g., from a ticketing service provider's ticketing application), book restaurants (e.g., from a corresponding restaurant), or may need to visit a corresponding website for each event. Another problem with such an embodiment is that the user may need to learn a complex user interface, such as a user interface implemented using multiple user interface elements such as windows, buttons, check boxes, dialog boxes, and the like.
Thus, an advantage of one or more of the described embodiments is that a single application enables a user to conduct activities involving interactions with any number of participants, without having to access a separate website or install and run a software application, with the technical effect of reducing the consumption of memory, storage, and processing resources on the client device. An advantage of the described embodiments is that the session interface makes it easier and faster for a user to accomplish such activities without having to learn a complex user interface, which has the technical effect of reducing computing resource consumption, for example. Another advantage of the described embodiments is that the implemented robots may enable individual participating entities to provide user interactions at a lower cost, which has the technical effect of reducing the need for computing resources deployed for implementing user interactions, such as free phones implemented using one or more communication servers, websites hosted on one or more network servers, customer support emails hosted on email servers, and so forth. Another technical effect of the described features is the problem of reducing the consumption of system processing and transmission resources required to accomplish user tasks over a communications network.
Although some examples herein describe interactions between a robot and one or more users, various types of interactions are possible, such as one-to-one interactions between a robot and user 125, one-to-many interactions between a robot and two or more users (e.g., in a group message session), many-to-one interactions between multiple robots and users, and many-to-many interactions between multiple robots and multiple users. Further, in some implementations, the robots may also be configured to interact with another robot (e.g., robots 107a/107b, 109a/109b, 111, 113, etc.) via the messaging application 103, via direct communication between the robots, or a combination. For example, a restaurant reservation robot may interact with a particular restaurant's robot to reserve a table.
In some embodiments, the bot may use a conversational interface to interact with a user conversation using natural language. In some embodiments, the bot may use a template-based format to create sentences that interact with the user, for example, in response to a request for a restaurant address, using a template such as "restaurant R is located at L". In some cases, the user may be enabled to select a robotic interaction format, e.g., whether the robot interacts with the user using natural language, whether the robot uses template-based interactions, etc.
Where the robot interacts using a natural language conversation, the content and/or style of the robot's interactions may dynamically change based on one or more of: the content of the session, the identity of the user in the session, and the context of one or more sessions (e.g., historical information about interactions of the user, contacts between users in social graph based sessions), external conditions (e.g., weather, traffic), the user's calendar, related contexts associated with the user, etc., as determined using natural language processing. In these cases, the content and style of the robot's interactions varies based solely on these factors for which the user participating in the session has provided consent.
As one example, if it is determined that the user of the conversation is using a formal language (e.g., slang or emoticons with no or minimal), the robot may also interact within the conversation using the formal language, and vice versa. As another example, if it is determined (based on current and/or past sessions) that the user in the session is a heavy user of an emoticon, the robot may also interact with the user using one or more emoticons. As another example, if two users in a conversation are determined to be remotely connected in a social graph (e.g., having two or more intermediate nodes between them, representing friends that they are friends of friends), then the robot may use a more formal language in the conversation. In the event that the users participating in the conversation do not agree that the robot utilizes factors such as the user's social graph, calendar, location, or other context associated with the user, the content and style of the robot's interactions may be a default style, such as a neutral style that does not require the use of these factors.
Further, in some implementations, one or more robots may include functionality to conduct back and forth conversations with a user. For example, if a user requests information about a movie, e.g., by entering "@ moviebot you can recommend a movie? "the robot" moviebot "may use" do you like comedy? "to respond. The user may then respond, e.g., "no", and the robot may respond "well to this. The science fiction film named space and stars has been well evaluated. Do i order you? "the user may then indicate" good, i may go after 6 pm. Please check if the still's can be together. Once the user agrees with the robot to access information about his contacts and the friend steve agrees to receive messages from the robot, the robot may send a message to the user's friend steve and take further actions to subscribe to the movie ticket for the appropriate time.
In some embodiments, a user participating in a session may be enabled to invoke a particular robot or a robot performing a particular task, such as by typing a robot name or robot handle (e.g., taxi, @ tax, @ move, etc.), by using voice commands (e.g., "call banking robot," etc.), by activating a user interface element (e.g., a button or other element labeled with a robot name or handle), etc. Once the bot is invoked, the user 125 may send a message to the bot through the messaging application 103a/103b in a manner similar to sending messages to other users 125. For example, to order a taxi, the user may type "@ taxi" into me taxi "; to book a hotel, the user can type "@ hotelbot to book a 4-person table at a chinese restaurant near me).
In some embodiments, the bot may automatically suggest information or actions within the message session without being specifically invoked. That is, the user may not need to specifically invoke the robot. In these embodiments, the robot may rely on analysis and understanding of the session on a time-continuous basis or at discrete points in time. Analysis of the session may be used to understand specific user needs and identify when assistance should be suggested by the robot. As one example, if it is determined that a user needs information (e.g., based on the user asking a question to another user, based on multiple users indicating that they do not have some information), the bot may search for some information and suggest an answer. As another example, if it is determined that multiple users are indicating an interest in eating a chinese meal, the robot may automatically suggest a set of chinese restaurants in the vicinity of the user, including option information such as location, ratings, and website links for the restaurants.
In some embodiments, rather than automatically invoking a robot or waiting for a user to explicitly invoke a robot, one or more users may be automatically suggested in a message session to invoke one or more robots. In these embodiments, the sessions may be analyzed on a data-continuous basis or at discrete points in time, and the analysis of the sessions may be used to understand specific user needs and identify when robots should be suggested within the sessions.
In embodiments where the bot may automatically suggest information or actions within a message session without being specifically invoked, such functionality may be disabled, for example, if one or more users participating in the message session do not agree to the bot to analyze the user's session. Further, such functionality may also be temporarily disabled based on user input. For example, when the user indicates that the session is private, analysis of the session context is suspended until the user provides input to activate the robot. Further, an indication may be provided to participants in the conversation that the analysis functionality is disabled, e.g., with a user interface element.
In various embodiments, the robot may be implemented in various configurations. For example, as shown in fig. 1, the robot 105 is implemented on a client device 115 a. In this example, the robot may be a module in a software application local to the client device 115 a. For example, if the user installs a taxi taking application on the client device 115a, the robotic functionality may be incorporated as a module into the taxi taking application. In this example, the user may invoke the taxi robot, for example, by sending a message "@ taxi to me get on". The messaging application 103b may automatically cause the robotic module in the taxi taking application to launch. In this way, the robot may be implemented locally on the client device so that the user may join the session with the robot through the messaging application 103.
In another example shown in fig. 1, robot 107a is shown as being implemented on client device 115a and robot 107b is shown as being implemented on message server 101. In this example, the robots may be implemented as, for example, client-server computer programs with some robot functionality provided by each of the robots 107a (server modules) and 107b (client modules). For example, if the robot is a scheduling robot with a handle @ calendar, the user 115a may schedule the reminder by typing "@ calendar to remind me to wash clothes at night", which may be handled by the robot 107b (client module). Continuing with this example, if the user 115a tells the robot "check if Jim is available at 4 points, the robot 107a (server module) can contact the user Jim (or Jim's scheduling robot) to exchange messages and provide a response to the user 115 a.
In another example, robot 109a (server module) is implemented on server 135 and robot 109b (client module) is implemented on client device 115. In this example, the robotic functionality is provided by modules implemented on a server 135 and client device 115 that are different from the message server 101. In some implementations, the robot may be implemented as a distributed application, for example, with modules distributed across multiple client devices and servers (e.g., client device 115, server 135, message server 101, etc.). In some implementations, robots may be implemented as server applications, such as robot 111 implemented on message server 101 and robot 113 implemented on server 135.
Different implementations, such as client-only, server-only, client-server, distributed, etc., may provide different advantages. For example, client-only implementations allow for locally providing robotic functionality, e.g., without network access, which may be advantageous in certain environments, e.g., when the user is outside of a network coverage area, or in any area with low or limited network bandwidth. Embodiments including one or more servers, such as server-only, client-server, or distributed configurations, may allow certain functions, e.g., financial transactions, ticketing subscriptions, etc., that may not be provided locally at the client device.
Although fig. 1 shows a different robot than message application 103, in some embodiments, one or more robots may be implemented as part of message application 103. In embodiments where the bot is implemented as part of the messaging application 103, the user permissions are obtained prior to implementing the bot. For example, where the robots are implemented as part of the message application 103a/103b, the message application 103a/103b may provide robots capable of performing certain activities, e.g., a translation robot that translates incoming and outgoing messages, a scheduling robot that schedules events on a user's calendar, etc. In this example, the translation robot can only be activated depending on the specific permissions of the user. If the user does not provide consent, the bot within the messaging application 103a/103b does not implement (e.g., disable, remove, etc.). If the user provides consent, the bot or messaging application 103a/103b may have limited use of messages exchanged between the users through the messaging application 103a/103b to provide specific functionality, such as translation, scheduling, etc.
In some implementations, a third party, different from the provider of the message application 103a/103b and the user 125, may provide a robot for a particular purpose that may communicate with the user 125 through the message application 103a/103 b. For example, a taxi service provider may provide a taxi robot, a ticketing service may provide a robot capable of booking event tickets, a banking robot may provide the ability to conduct financial transaction events, and so forth.
When the robot is implemented by the messaging application 103, the robot is allowed to communicate with the user only when authorized by a particular user. For example, if the user invokes the robot, the robot may answer, e.g., based on the user invoking an action of the robot. In another example, the user may indicate a particular robot or a particular type of robot that may contact the user. For example, the user may allow the travel robot to communicate with her, but not provide authorization for the shopping robot. In this example, the message application 103a/103b may allow the travel robot to exchange messages with the user, but filter or reject messages from the shopping robot.
Further, to provide some functionality (e.g., order taxis, make airline reservations, contact friends, etc.), the bot may request that the user allow the bot to access user data, such as location, payment information, contact lists, etc. In this case, the user is presented with the option to allow or deny access to the robot. If the user refuses access, the robot may respond by a message, such as "sorry, i cannot reserve for you a taxi. "furthermore, the user may provide access to the information on a limited basis, e.g., the user may allow the taxi robot to access the current location only when a particular robot is invoked, but not otherwise. In various embodiments, the user may control the type, amount, and granularity of information that the robot may access, and have the ability to change such permissions at any time (e.g., through a user interface). In some implementations, the user data may be processed before the robot can access the data, e.g., to remove personally identifiable information, limit the information to specific data elements, etc. In addition, the user may control the use of user data through the messaging application 103a/103b and one or more bots. For example, a user may specify that a robot providing the ability to conduct financial transactions requires user authorization before the transaction is completed, e.g., the robot may send the message "ticket for the movie" space and stars "12 dollars per ticket. Is i to continue to subscribe? The optimal price for the "or" shirt is $ 125, including freight. Do i pay a fee from the credit card with tail number 1234? "and the like.
In some implementations, one or more suggested responses generated by the above-described systems (e.g., the systems described with respect to fig. 2-11) may be used to invoke or command a message of the robot, e.g., request the robot to obtain information. For example, the system may determine whether the received image includes information to be provided by the robot and/or content assisted by one or more functions. In some examples, a first user in a conversation may send a text message to a second user saying "where is guessed? The first user then sends the image to the second user's device. The system may determine that a phrase including the word "guess" indicates that the suggested response may be a request to find information related to the image content. (other words may also represent such requests, e.g., "where," "what," etc.) in response, the system may generate a suggested response, which is a request or command to the appropriate robot that may provide the relevant information. For example, the suggestion response may be a request for a map robot to provide a name for a location depicted in the image (e.g., the robot may use web searches, maps and atlases, geographic location metadata of the received image to determine the location of such information, etc.). In some implementations, training message data (if user consent has been obtained) may be used to determine the appropriate type of robot for the particular type of image content detected in the image (e.g., using one or more image detection or recognition techniques if user consent has been obtained), and/or a rule-based grammar may determine which types of robots to invoke in the suggestion response based on the concepts detected in the image content and/or the type of image content.
In some implementations, if a robot-related suggestion response is displayed for the user as a possible response and the user selects the suggestion, the robot can be added to the message session and message interface, e.g., represented by a robot name. The bot may determine and output the requested information in the session, for example, as a message to both the first and second users in the message user interface.
In another example, a first user sends an image depicting text that is foreign to a second user. The system may determine that the appropriate suggested response is to request the language robot to translate text in the image and output the translated text in the message conversation interface.
In another example, the first user sends an image depicting the food item. The system may determine that the appropriate suggested response is to request the robot to examine one or more accessible (e.g., on the internet) data sources to determine ingredients and/or calories normally or specifically included in the food item and output that information in the message session interface.
Embodiments described herein relate generally to messaging applications. Some embodiments may automatically (e.g., without user intervention) analyze image content of one or more message sessions and/or user information to automatically provide suggested responses to a user in a message application. In some examples, the user may select an autosuggest response to respond in the messaging application, and/or may automatically send the autosuggest response as one or more appropriate responses on behalf of the user. In some other examples, the suggestion may automatically incorporate specific non-messaging functions into the messaging application.
While the foregoing description includes techniques for providing a suggested response in response to receiving an image, the suggested response may be provided in response to any type of media content received in a session. For example, such content may include stickers (e.g., in chat applications), animated images (e.g., moving pictures, GIF images, etc.), and videos. Furthermore, while the foregoing description describes the suggested response as a text response, other types of responses may also be suggested, e.g., based on analysis of the received image. For example, the other responses may include one or more of a suggested image, a suggested decal, a suggested animated image (e.g., a moving picture, a GIF image, etc.), and a suggested video. To provide these suggestions, suggestion module 304 may perform, for example, a comparison of concepts identified in the received item (e.g., text, images, video, decals, animated images, etc.) with concepts in different types of responses, and select an appropriate response, as described above with reference to the suggested response including text. In various embodiments where the user provides consent, the type of response may be selected or prioritized based on context, e.g., a decal may be selected as a suggested response in response to an incoming decal, a video may be selected as a suggested response in response to an incoming image, etc.
Certain embodiments enable messaging with human users and/or chat robots. In some implementations, automatic message suggestions can be customized based on whether the chat bot is engaged in a message session. In some examples, a first set of automated message suggestions may be provided if a chat bot is not present in the message session, and a second set of automated suggestion messages may be provided if a chat bot is present in the message session. The first and second sets of responses are at least partially different. For example, these embodiments may employ conversation rules that chat robots follow and suggest messages to users based on the rules. This may alleviate challenges that users may encounter when communicating with chat robots in language and in a format that is easily understood by chat robots.
Some implementations may include determining one or more trend responses (e.g., message responses that include popular message content sent by many different users) based on other messages in at least one of an area, a market, and a country associated with the user's location. The one or more determined suggested responses may include one or more trend responses. In some implementations, a user context, e.g., geographic location, holiday, or event, etc., can be used to generate and determine a presentation of one or more suggested responses.
In some implementations, determining one or more suggested responses may be based on developing a personalized model for the user using machine learning. Determining the suggestion response may be based on the user's preferences and/or previous actions of the user in the communication (if the user has been obtained consent to use such actions and data). For example, the user preferences may include a whitelist indicating particular words that may be included and/or a blacklist indicating particular words that cannot be included in the message suggestion. If user consent has been obtained, a message suggestion may be generated or modified based on one or more of punctuation usage, emoji usage, or other content used by the user at a previous occasion.
The model for providing suggested responses, e.g., a conditional language model as described above, may be implemented by the client device 115 and/or a server, such as the server 101 and/or the response generator 150. In some implementations, the session may be encrypted such that only participants in the session of the client device can access the session content. In these embodiments, the suggested responses may be provided using a model implemented by the respective client device, and the model implemented by the server is not used. A model implemented by the client device may also be used, for example, when the user does not agree to use the model implemented by the server. In some implementations, the client-implemented model may be based on or derived from a server-implemented model. In some implementations, a server model may be used and a client model may not be used, for example, when a client device lacks the ability to implement a client model. In some implementations, a combination of client and server models may be used.
Although the examples described in this document utilize the concepts of English description, suggestions may be provided in any language, such as a language configured for client device 115, regional settings or other geographic regions, a language selected based on user preferences, and so forth. In some implementations, where the user provides consent to analysis of the context of the conversation, the language used in various conversations involving the user (e.g., in the most recent message) may be detected and message suggestions may be provided in that language.
In some implementations, multiple conditional language models can be stored, trained, and utilized according to one or more features described herein. In some examples, each conditional language model may be trained and used with words and responses of the language used by a particular human. For example, a first conditional language model may be trained exclusively with english responses and a second conditional language model may be trained exclusively with hindi responses. In some implementations, one of a plurality of available conditional language models may be selected during runtime based on the language determined for the current user message session. For example, if user consent has been obtained, previous messages in the user's current session (e.g., messages within a predetermined amount of time before the current message, or messages within a predetermined number of last messages sent) may be retrieved (e.g., from message application database 199), and the system may detect the language of the session, e.g., based on the words used and access language data from accessible memory. If the detected language matches the language of the available conditional language models, then the matching conditional language models are selected for programmatically generating one or more suggested responses to the image, as described herein.
In some implementations, multiple conditional language models can be used to generate a response to a particular image. For example, the received image may be input to a first conditional language model and a second conditional language model, and the responses from both models are used in the resulting set of suggested responses. In some implementations, a single conditional language model may be trained and used to provide responses in multiple languages, e.g., responses provided in multiple languages are used in the training of the conditional language model.
Fig. 12 is a block diagram of an example device 1200 that can be used to implement one or more features described herein. In one example, device 1200 may be used to implement a client device, such as any of client devices 115 shown in fig. 1. Alternatively, device 1200 may implement a server device, such as message server 101 in FIG. 1, and device 1200 may be any suitable computer system, server, or other electronic or hardware device as described above.
One or more methods described herein may be run in a standalone program capable of running on any type of computing device, a program running on a web browser, a mobile application ("app") running on a mobile computing device (e.g., a cell phone, a smartphone, a tablet, a wearable device (watch, arm band, jewelry, headwear, virtual reality goggles or glasses, augmented reality goggles or glasses, etc.), a laptop computer, etc.). In one example, a client/server architecture may be used, for example, a mobile computing device (as a client device) to send user input data to a server device and to receive final output data from the server for output (e.g., for display). In another example, all of the computations may be performed within a mobile app (and/or other apps) on the mobile computing device. In another example, the computation may be split between the mobile computing device and one or more server devices.
In some implementations, the device 1200 includes a processor 1202, memory 1204, and an input/output (I/O) interface 1206. The processor 1202 may be one or more processors and/or processing circuits to execute program code and to control the basic operations of the device 1200. A "processor" includes any suitable hardware and/or software system, mechanism, or component that processes data, signals, or other information. A processor may include a system with a general purpose Central Processing Unit (CPU), multiple processing units, dedicated circuitry for implementing functionality, or other systems. The processing need not be limited to a particular geographic location, or have time constraints. For example, a processor may perform its functions "in real time", "offline", in "batch mode", and so forth. Portions of the processing may be performed at different times and at different locations by different (or the same) processing systems. The computer may be any processor in communication with the memory.
Memory 1204 is typically provided in device 1200 for access by processor 1202 and may be any suitable processor-readable storage medium, such as Random Access Memory (RAM), read Only Memory (ROM), electrically erasable read only memory (EEPROM), flash memory, etc., adapted to store instructions for execution by the processor and provided separately from processor 1202 and/or integrated with processor 1202. The memory 1204 may store software operated by the processor 1202 on the server device 1200, including an operating system 1208, messaging applications 1216, and other applications 1214, such as data display engines, web hosting engines, image display engines, notification engines, social networking engines, and the like. In some implementations, the messaging application 1216 may include instructions that enable the processor 1202 to perform the functions described herein, e.g., some or all of the method of fig. 2. For example, message application 1216 may provide message suggestions as described herein. In some implementations, the message application 1216 can include one or more modules, such as a feature vector generator 1216A, a response generator 1216B, and a user interaction module 1216C, and/or these modules can be implemented in other applications or devices in communication with the device 1200. For example, one or more of the applications may provide a displayed user interface to display selectable options or controls in response to user input, and data based on the selected options. Other applications or engines 1214 may also or alternatively be included, such as an image editing application, a media display application, a communication application, a web hosting engine or application, and the like. One or more of the methods disclosed herein may operate in several environments and platforms, e.g., as stand-alone computer programs that may be run on any type of computing device, as web applications with web pages, as mobile applications ("apps"), etc.
Any software in the memory 1204 may alternatively be stored on any other suitable storage location or computer readable medium. In addition, the memory 1204 (and/or other connected storage devices) may store one or more messages, one or more taxonomies, electronic encyclopedias, dictionaries, message data, grammars, user preferences, and/or other instructions and data used in the features described herein in database 912. Memory 1204 and any other type of storage (magnetic disk, optical disk, magnetic tape, or other tangible medium) may be considered a "memory" or "storage device.
The I/O interface 1206 may provide functionality to connect the device 1200 to other systems and devices. The interface device may be included as part of device 1200 or may be separate from and in communication with device 1200. For example, network communication devices, storage devices (e.g., memory and/or database 106), and input/output devices may communicate over I/O interface 1206. In some implementations, the I/O interface 1206 may be connected to interface devices, such as input devices (keyboards, pointing devices, touch screens, microphones, cameras, scanners, sensors, etc.) and/or output devices (display devices, speaker devices, printers, motors, etc.).
Some examples of interface devices that can connect to I/O interface 1206 may include a display device 1220, which display device 1220 may be used to display content, such as images, video, and/or user interfaces, of an output application as described herein. The display device 1220 may be connected to the device 1200 by a local connection (e.g., a display bus) and/or by a network connection, and may be any suitable display device. Display device 1220 may include any suitable display device, such as an LCD, LED, or plasma display screen, CRT, television, monitor, touch screen, 3D display screen, or other visual display device. For example, the display device 1220 may be a flat display screen provided on a mobile device, a plurality of display screens provided in a goggle device, or a monitor screen for a computer device.
The I/O interface 1206 may be engaged with other input and output devices. Some examples include one or more cameras that may capture image frames. Some embodiments may provide a microphone for capturing sound (e.g., as part of a captured image, voice commands, etc.), an audio speaker device for outputting sound, or other input and output devices.
For ease of illustration, FIG. 12 shows one block for each of the processor 1202, memory 1204, I/O interface 1206, and software blocks 1208, 1214, and 1216. These blocks may represent one or more processors or processing circuits, operating systems, memory, I/O interfaces, applications, and/or software modules. In other embodiments, device 1200 may not have all of the components shown and/or may have other elements including other types of elements in place of or in addition to those shown herein. Although some components are described as performing the described blocks and operations in some embodiments described herein, any suitable component or combination of components of environment 100, device 1200, a similar system, or any suitable processor or processors associated with such a system may also perform the described blocks and operations.
The methods described herein may be implemented by computer program instructions or code that may be executed on a computer. For example, the code may be implemented by one or more digital processors (e.g., microprocessors or other processing circuits), and may be stored on a computer program product comprising a non-transitory computer readable medium (e.g., a storage medium), such as a magnetic, optical, electromagnetic, or semiconductor storage medium, including semiconductor or solid state memory, magnetic tape, removable computer diskette, random Access Memory (RAM), read-only memory (ROM), flash memory, rigid magnetic disk, optical disk, a solid state memory drive, and the like. The program instructions may also be embodied in and provided as an electronic signal, for example, in the form of software as a service (SaaS) from a server (e.g., a distributed system and/or cloud computing system). Alternatively, one or more of the methods may be implemented in hardware (logic gates, etc.) or a combination of hardware and software. Example hardware may be a programmable processor (e.g., a Field Programmable Gate Array (FPGA), a complex programmable logic device, etc.), a general purpose processor, a graphics processor, an Application Specific Integrated Circuit (ASIC), etc. One or more methods may be performed as part or component of an application running on a system or as an application or software running with other applications and operating systems.
Although the description has been described with respect to specific embodiments, these specific embodiments are merely illustrative and not restrictive. The concepts illustrated in the examples may be applied to other examples and implementations.
Some embodiments discussed herein may collect or use personal information about a user (e.g., user data, information about a user's social network, user's location and time, user's biometric information, user's activities and demographic information), the user is provided with one or more opportunities to control whether personal information is collected, whether personal information is stored, whether personal information is used, and how information about the user is collected, stored, and used. That is, the systems and methods discussed herein collect, store, and/or use user personal information exclusively upon receipt of explicit authorization from an associated user. In addition, certain data may be processed in one or more ways prior to storage or use to remove personally identifiable information. As one example, the identity of the user may be processed such that personally identifiable information cannot be determined. As another example, the geographic location of a user may be generalized to a larger area such that the particular location of the user cannot be determined.
Note that the functional blocks, operations, features, methods, devices, and systems described in this disclosure may be integrated or separated into different combinations of systems, devices, and functional blocks as would be known to one of skill in the art. The routines of the particular embodiments may be implemented using any suitable programming language and programming technique. Different programming techniques, such as object oriented or procedural, may be employed. The routines may run on a single processing device or multiple processors. Although steps, operations, or computations may be presented in a specific order, the order may be changed in different specific implementations. In some embodiments, a plurality of steps or operations sequentially shown in the present specification may be performed at the same time.
Claims (22)
1. A computer-implemented method of automatically suggesting content in a messaging application, the method comprising:
detecting an image published by a first user within a first message;
programmatically analyzing the image to determine feature vectors representing the image;
based on the feature vector, programmatically generating one or more suggested responses to the first message, each suggested response of the one or more suggested responses being a session reply to the first message, wherein programmatically generating the one or more suggested responses comprises:
Determining probabilities associated with word sequences of the feature vectors using a model trained with previous responses to previous images; and
selecting one or more of the word sequences based on the probabilities associated with the word sequences, wherein the one or more suggestion responses are determined based on the selected one or more word sequences; and
causing the one or more suggestion responses to be presented in the messaging application as one or more suggestions to the second user.
2. The method of claim 1, wherein the feature vector is a condensed digital representation of visual pixel content of the image.
3. The method of claim 1 or 2, wherein providing the one or more suggested responses comprises transmitting a command to present the one or more suggested responses in the messaging application.
4. The method of any of the preceding claims, wherein the probabilities comprise probabilities of each word in the stored vocabulary becoming a next word in one of the one or more word sequences, wherein selecting the one or more word sequences comprises selecting ones of the one or more word sequences associated with one or more highest probabilities of the determined probabilities.
5. The method of any of the preceding claims, wherein the model is a conditional language model, and wherein determining the probability associated with the word sequence comprises inputting the feature vector to the conditional language model.
6. The method of claim 5, wherein the conditional language model uses a long-term memory (LSTM) network.
7. The method of claim 5 or 6, wherein the conditional language model comprises a trained neural network.
8. The method of any of the preceding claims, wherein selecting the one or more word sequences comprises using a cluster search technique.
9. The method of any one of the preceding claims, wherein each word sequence of the one or more word sequences is used by the model as a word embedding that encodes words included in the word sequence and the feature vector.
10. The method of any of the preceding claims, wherein the one or more word sequences are determined from a plurality of words in a vocabulary determined from the previous response, wherein determining the probabilities associated with the word sequences comprises iteratively determining, for each word sequence, a probability that each word in the vocabulary becomes a next word in the word sequence.
11. The method of any of the preceding claims, wherein the previous response is selected from a larger set of responses to the previous image, wherein the previous response is more specific to particular content of the previous image than other previous responses of the larger set of responses.
12. The method of any of the preceding claims, wherein the model is a conditional language model, and wherein selecting the one or more word sequences comprises iteratively:
feeding the feature vector and a sequence of previous words to the conditional language model to determine a set of new word sequences and the probabilities associated with the new word sequences based on the feature vector and the sequence of previous words, wherein one or more of the new word sequences has at least one additional word relative to the sequence of previous words; and
a subset of the set of new word sequences is selected based on the probabilities associated with the new word sequences, and one word sequence in the selected subset is selected as a previous word sequence for a next iteration.
13. The method of any of the preceding claims, further comprising:
Once the second user selects the suggested response, the suggested response is issued as a message response to the first message.
14. The method of any of the preceding claims, further comprising:
checking whether each of the one or more word sequences is present in a whitelist of word sequences,
wherein the selected one or more word sequences are present on the whitelist.
15. The method of any one of the preceding claims, wherein the selecting one or more word sequences comprises selecting at least one word sequence weighted based on similarity to previous message responses provided by the second user.
16. The method of claim 5, 6 or 7, further comprising:
providing the conditional language model as a first conditional language model specific to a first language;
providing a second conditional language model specific to a second language;
determining that the language of the message session in which the first message was received is the first language; and
the first conditional language model is selected for programmatically generating one or more suggested responses.
17. A system for automatically suggesting content in a messaging application, comprising:
a memory; and
at least one processor configured to access the memory and configured to perform operations comprising:
detecting an image published by a first user within a first message;
programmatically analyzing the image to determine feature vectors representing the image;
based on the feature vector, programmatically generating one or more suggested responses to the first message, each suggested response of the one or more suggested responses being a session reply to the first message and having one or more words arranged in a word sequence,
wherein programmatically generating the one or more suggested responses includes, for each of the one or more suggested responses, iteratively determining each of the one or more words arranged in the word sequence based on the feature vector and based on one or more previous words in the word sequence; and
causing the one or more suggestion responses to be presented in the messaging application as one or more suggestions to the second user.
18. The system of claim 17, wherein programmatically generating the one or more suggested responses comprises determining probabilities associated with the one or more word sequences based on data comprising previous responses to previous images.
19. The system of claim 18, wherein programmatically generating the one or more suggested responses comprises selecting the one or more suggested responses based on the probabilities associated with the one or more word sequences.
20. The system of claim 18 or 19, wherein determining the probability of the word sequence comprises using a conditional language model that is trained using data comprising previous responses to previous images, wherein the conditional language model is determined from the feature vectors received as input and uses a long-short-term memory (LSTM) network.
21. A non-transitory computer readable medium having stored thereon software instructions that, when executed by a processor, cause the processor to automatically provide suggested content by performing operations comprising:
Receiving an image;
programmatically analyzing the image to determine feature vectors representing the image;
based on the feature vector, programmatically generating one or more suggested responses to the image, each suggested response of the one or more suggested responses being a conversational reply to the image and having one or more words arranged in a word sequence,
wherein programmatically generating the one or more suggested responses includes, for each of the one or more suggested responses, iteratively determining each word of the one or more words arranged in the word sequence based on the feature vector and one or more previous words in the word sequence; and
the one or more suggestion responses are output for presentation in the application as one or more suggestions to the user.
22. The computer-readable medium of claim 21, wherein the suggested responses are presented in a messaging application, and wherein programmatically generating the one or more suggested responses comprises:
determining probabilities associated with the one or more suggested responses using a conditional language model, training the conditional language model based on data comprising previous responses to previous images, and deciding the conditional language model from the feature vectors received as input, wherein the conditional language model uses a long-term memory (LSTM) network; and
The one or more suggested responses are selected based on the probabilities associated with the one or more suggested responses.
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/415,506 | 2017-01-25 | ||
US15/415,506 US10146768B2 (en) | 2017-01-25 | 2017-01-25 | Automatic suggested responses to images received in messages using language model |
PCT/US2017/057044 WO2018140099A1 (en) | 2017-01-25 | 2017-10-17 | Automatic suggested responses to images received in messages using language model |
CN201780066316.2A CN110178132B (en) | 2017-01-25 | 2017-10-17 | Method and system for automatically suggesting content in a messaging application |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780066316.2A Division CN110178132B (en) | 2017-01-25 | 2017-10-17 | Method and system for automatically suggesting content in a messaging application |
Publications (1)
Publication Number | Publication Date |
---|---|
CN117149970A true CN117149970A (en) | 2023-12-01 |
Family
ID=60268457
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202311086539.9A Pending CN117149970A (en) | 2017-01-25 | 2017-10-17 | Autosuggest response to images received in messages using language models |
CN201780066316.2A Active CN110178132B (en) | 2017-01-25 | 2017-10-17 | Method and system for automatically suggesting content in a messaging application |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780066316.2A Active CN110178132B (en) | 2017-01-25 | 2017-10-17 | Method and system for automatically suggesting content in a messaging application |
Country Status (6)
Country | Link |
---|---|
US (1) | US10146768B2 (en) |
EP (1) | EP3516537A1 (en) |
JP (1) | JP6625789B2 (en) |
KR (1) | KR102050334B1 (en) |
CN (2) | CN117149970A (en) |
WO (1) | WO2018140099A1 (en) |
Families Citing this family (146)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
US8977255B2 (en) | 2007-04-03 | 2015-03-10 | Apple Inc. | Method and system for operating a multi-function portable electronic device using voice-activation |
US8676904B2 (en) | 2008-10-02 | 2014-03-18 | Apple Inc. | Electronic devices with voice command and contextual data processing capabilities |
US10706373B2 (en) | 2011-06-03 | 2020-07-07 | Apple Inc. | Performing actions associated with task items that represent tasks to perform |
US10417037B2 (en) | 2012-05-15 | 2019-09-17 | Apple Inc. | Systems and methods for integrating third party services with a digital assistant |
CN104969289B (en) | 2013-02-07 | 2021-05-28 | 苹果公司 | Voice trigger of digital assistant |
US10652394B2 (en) | 2013-03-14 | 2020-05-12 | Apple Inc. | System and method for processing voicemail |
US10748529B1 (en) | 2013-03-15 | 2020-08-18 | Apple Inc. | Voice activated device for use with a voice-based digital assistant |
US10176167B2 (en) | 2013-06-09 | 2019-01-08 | Apple Inc. | System and method for inferring user intent from speech inputs |
US10170123B2 (en) | 2014-05-30 | 2019-01-01 | Apple Inc. | Intelligent assistant for home automation |
US9715875B2 (en) | 2014-05-30 | 2017-07-25 | Apple Inc. | Reducing the need for manual start/end-pointing and trigger phrases |
US9966065B2 (en) | 2014-05-30 | 2018-05-08 | Apple Inc. | Multi-command single utterance input method |
US9338493B2 (en) | 2014-06-30 | 2016-05-10 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US9886953B2 (en) | 2015-03-08 | 2018-02-06 | Apple Inc. | Virtual assistant activation |
US10200824B2 (en) | 2015-05-27 | 2019-02-05 | Apple Inc. | Systems and methods for proactively identifying and surfacing relevant content on a touch-sensitive device |
US20160378747A1 (en) | 2015-06-29 | 2016-12-29 | Apple Inc. | Virtual assistant for media playback |
US10747498B2 (en) | 2015-09-08 | 2020-08-18 | Apple Inc. | Zero latency digital assistant |
US10331312B2 (en) | 2015-09-08 | 2019-06-25 | Apple Inc. | Intelligent automated assistant in a media environment |
US10740384B2 (en) | 2015-09-08 | 2020-08-11 | Apple Inc. | Intelligent automated assistant for media search and playback |
US10671428B2 (en) | 2015-09-08 | 2020-06-02 | Apple Inc. | Distributed personal assistant |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US10956666B2 (en) | 2015-11-09 | 2021-03-23 | Apple Inc. | Unconventional virtual assistant interactions |
EP3395019B1 (en) | 2015-12-21 | 2022-03-30 | Google LLC | Automatic suggestions and other content for messaging applications |
CN108781175B (en) | 2015-12-21 | 2021-09-21 | 谷歌有限责任公司 | Method, medium, and system for automatic suggestion of message exchange contexts |
US10223066B2 (en) | 2015-12-23 | 2019-03-05 | Apple Inc. | Proactive assistance based on dialog communication between devices |
US11769193B2 (en) * | 2016-02-11 | 2023-09-26 | Ebay Inc. | System and method for detecting visually similar items |
US10586535B2 (en) | 2016-06-10 | 2020-03-10 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
DK201670540A1 (en) | 2016-06-11 | 2018-01-08 | Apple Inc | Application integration with a digital assistant |
DK179415B1 (en) | 2016-06-11 | 2018-06-14 | Apple Inc | Intelligent device arbitration and control |
US10387461B2 (en) | 2016-08-16 | 2019-08-20 | Google Llc | Techniques for suggesting electronic messages based on user activity and other context |
CN110268423A (en) | 2016-08-19 | 2019-09-20 | 莫维迪乌斯有限公司 | The system and method for distribution training for deep learning model |
US10511450B2 (en) | 2016-09-20 | 2019-12-17 | Google Llc | Bot permissions |
US10015124B2 (en) * | 2016-09-20 | 2018-07-03 | Google Llc | Automatic response suggestions based on images received in messaging applications |
CN117634495A (en) | 2016-09-20 | 2024-03-01 | 谷歌有限责任公司 | Suggested response based on message decal |
US10416846B2 (en) | 2016-11-12 | 2019-09-17 | Google Llc | Determining graphical element(s) for inclusion in an electronic communication |
CN108075959B (en) * | 2016-11-14 | 2021-03-12 | 腾讯科技（深圳）有限公司 | Session message processing method and device |
US10608967B2 (en) | 2017-01-10 | 2020-03-31 | International Business Machines Corporation | Ensuring that all users of a group message receive a response to the group message |
TWI754694B (en) * | 2017-03-21 | 2022-02-11 | 香港商阿里巴巴集團服務有限公司 | Communication method and device |
US10581765B2 (en) * | 2017-04-03 | 2020-03-03 | Microsoft Technology Licensing, Llc | Conversation bot discovery and response fusion |
US10333868B2 (en) * | 2017-04-14 | 2019-06-25 | Facebook, Inc. | Techniques to automate bot creation for web pages |
US10491548B2 (en) * | 2017-04-17 | 2019-11-26 | Facebook, Inc. | Techniques to configure bot flow |
US11003839B1 (en) * | 2017-04-28 | 2021-05-11 | I.Q. Joe, Llc | Smart interface with facilitated input and mistake recovery |
DK180048B1 (en) | 2017-05-11 | 2020-02-04 | Apple Inc. | MAINTAINING THE DATA PROTECTION OF PERSONAL INFORMATION |
US10726832B2 (en) | 2017-05-11 | 2020-07-28 | Apple Inc. | Maintaining privacy of personal information |
DK201770427A1 (en) | 2017-05-12 | 2018-12-20 | Apple Inc. | Low-latency intelligent automated assistant |
DK179496B1 (en) | 2017-05-12 | 2019-01-15 | Apple Inc. | USER-SPECIFIC Acoustic Models |
DK179745B1 (en) | 2017-05-12 | 2019-05-01 | Apple Inc. | SYNCHRONIZATION AND TASK DELEGATION OF A DIGITAL ASSISTANT |
US10303715B2 (en) | 2017-05-16 | 2019-05-28 | Apple Inc. | Intelligent automated assistant for media exploration |
US10860854B2 (en) | 2017-05-16 | 2020-12-08 | Google Llc | Suggested actions for images |
US20180336892A1 (en) | 2017-05-16 | 2018-11-22 | Apple Inc. | Detecting a trigger of a digital assistant |
US10348658B2 (en) * | 2017-06-15 | 2019-07-09 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US10404636B2 (en) | 2017-06-15 | 2019-09-03 | Google Llc | Embedded programs and interfaces for chat conversations |
US11121991B2 (en) * | 2017-07-03 | 2021-09-14 | Mycelebs Co., Ltd. | User terminal and search server providing a search service using emoticons and operating method thereof |
US10650095B2 (en) | 2017-07-31 | 2020-05-12 | Ebay Inc. | Emoji understanding in online experiences |
US10764534B1 (en) | 2017-08-04 | 2020-09-01 | Grammarly, Inc. | Artificial intelligence communication assistance in audio-visual composition |
WO2019077013A1 (en) | 2017-10-18 | 2019-04-25 | Soapbox Labs Ltd. | Methods and systems for processing audio signals containing speech data |
US10599391B2 (en) | 2017-11-06 | 2020-03-24 | Google Llc | Parsing electronic conversations for presentation in an alternative interface |
US10305766B1 (en) * | 2017-11-07 | 2019-05-28 | Amazon Technologies, Inc. | Coexistence-insensitive presence detection |
EP3486850A1 (en) * | 2017-11-17 | 2019-05-22 | Orange | Method for generating an sms message and equipment for implementing the method |
WO2019100319A1 (en) * | 2017-11-24 | 2019-05-31 | Microsoft Technology Licensing, Llc | Providing a response in a session |
US10810322B2 (en) * | 2017-12-05 | 2020-10-20 | Microsoft Technology Licensing, Llc | Sharing user information with and between bots |
US10891526B2 (en) | 2017-12-22 | 2021-01-12 | Google Llc | Functional image archiving |
US11024307B2 (en) * | 2018-02-08 | 2021-06-01 | Computime Ltd. | Method and apparatus to provide comprehensive smart assistant services |
JP6818706B2 (en) * | 2018-02-13 | 2021-01-20 | 日本電信電話株式会社 | Information providing equipment, information providing method, and program |
US10818288B2 (en) | 2018-03-26 | 2020-10-27 | Apple Inc. | Natural assistant interaction |
US10782986B2 (en) | 2018-04-20 | 2020-09-22 | Facebook, Inc. | Assisting users with personalized and contextual communication content |
US11676220B2 (en) | 2018-04-20 | 2023-06-13 | Meta Platforms, Inc. | Processing multimodal user input for assistant systems |
US11715042B1 (en) | 2018-04-20 | 2023-08-01 | Meta Platforms Technologies, Llc | Interpretability of deep reinforcement learning models in assistant systems |
US11886473B2 (en) | 2018-04-20 | 2024-01-30 | Meta Platforms, Inc. | Intent identification for agent matching by assistant systems |
US11288299B2 (en) * | 2018-04-24 | 2022-03-29 | International Business Machines Corporation | Enhanced action fulfillment using classification valency |
US11610239B2 (en) * | 2018-05-03 | 2023-03-21 | Disney Enterprises, Inc. | Machine learning enabled evaluation systems and methods |
US11145294B2 (en) | 2018-05-07 | 2021-10-12 | Apple Inc. | Intelligent automated assistant for delivering content from user experiences |
US10928918B2 (en) | 2018-05-07 | 2021-02-23 | Apple Inc. | Raise to speak |
US10860804B2 (en) | 2018-05-16 | 2020-12-08 | Microsoft Technology Licensing, Llc | Quick text classification model |
US10867130B2 (en) * | 2018-05-31 | 2020-12-15 | Microsoft Technology Licensing, Llc | Language classification system |
DK180639B1 (en) | 2018-06-01 | 2021-11-04 | Apple Inc | DISABILITY OF ATTENTION-ATTENTIVE VIRTUAL ASSISTANT |
DK179822B1 (en) | 2018-06-01 | 2019-07-12 | Apple Inc. | Voice interaction at a primary device to access call functionality of a companion device |
US10892996B2 (en) | 2018-06-01 | 2021-01-12 | Apple Inc. | Variable latency device coordination |
US11658926B2 (en) * | 2018-06-27 | 2023-05-23 | Microsoft Technology Licensing, Llc | Generating smart replies involving image files |
RU2712101C2 (en) * | 2018-06-27 | 2020-01-24 | Общество с ограниченной ответственностью "Аби Продакшн" | Prediction of probability of occurrence of line using sequence of vectors |
US11062084B2 (en) | 2018-06-27 | 2021-07-13 | Microsoft Technology Licensing, Llc | Generating diverse smart replies using synonym hierarchy |
US10721190B2 (en) * | 2018-07-31 | 2020-07-21 | Microsoft Technology Licensing, Llc | Sequence to sequence to classification model for generating recommended messages |
USD950587S1 (en) | 2018-08-31 | 2022-05-03 | Zoox, Inc. | Display screen or portion thereof having a graphical user interface |
US20200081939A1 (en) * | 2018-09-11 | 2020-03-12 | Hcl Technologies Limited | System for optimizing detection of intent[s] by automated conversational bot[s] for providing human like responses |
US11462215B2 (en) | 2018-09-28 | 2022-10-04 | Apple Inc. | Multi-modal inputs for voice commands |
US11398918B1 (en) * | 2018-10-22 | 2022-07-26 | Wells Fargo Bank, N.A. | Passive user authentication |
US10755099B2 (en) * | 2018-11-13 | 2020-08-25 | Adobe Inc. | Object detection in images |
GB2595123A (en) | 2019-02-03 | 2021-11-17 | Ibm | Performing multi-objective tasks via primal networks trained with dual networks |
US10956474B2 (en) * | 2019-03-14 | 2021-03-23 | Microsoft Technology Licensing, Llc | Determination of best set of suggested responses |
US11348573B2 (en) | 2019-03-18 | 2022-05-31 | Apple Inc. | Multimodality in digital assistant systems |
USD914049S1 (en) | 2019-04-22 | 2021-03-23 | Facebook, Inc. | Display screen with an animated graphical user interface |
USD912693S1 (en) | 2019-04-22 | 2021-03-09 | Facebook, Inc. | Display screen with a graphical user interface |
USD913313S1 (en) | 2019-04-22 | 2021-03-16 | Facebook, Inc. | Display screen with an animated graphical user interface |
USD914058S1 (en) | 2019-04-22 | 2021-03-23 | Facebook, Inc. | Display screen with a graphical user interface |
USD913314S1 (en) | 2019-04-22 | 2021-03-16 | Facebook, Inc. | Display screen with an animated graphical user interface |
USD912697S1 (en) | 2019-04-22 | 2021-03-09 | Facebook, Inc. | Display screen with a graphical user interface |
USD930695S1 (en) | 2019-04-22 | 2021-09-14 | Facebook, Inc. | Display screen with a graphical user interface |
USD914051S1 (en) | 2019-04-22 | 2021-03-23 | Facebook, Inc. | Display screen with an animated graphical user interface |
US11554322B2 (en) * | 2019-04-26 | 2023-01-17 | Sony Interactive Entertainment LLC | Game controller with touchpad input |
US11307752B2 (en) | 2019-05-06 | 2022-04-19 | Apple Inc. | User configurable task triggers |
DK201970509A1 (en) | 2019-05-06 | 2021-01-15 | Apple Inc | Spoken notifications |
US10817142B1 (en) | 2019-05-20 | 2020-10-27 | Facebook, Inc. | Macro-navigation within a digital story framework |
US11140099B2 (en) | 2019-05-21 | 2021-10-05 | Apple Inc. | Providing message response suggestions |
US10757054B1 (en) | 2019-05-29 | 2020-08-25 | Facebook, Inc. | Systems and methods for digital privacy controls |
US11388132B1 (en) * | 2019-05-29 | 2022-07-12 | Meta Platforms, Inc. | Automated social media replies |
US20200381122A1 (en) | 2019-05-31 | 2020-12-03 | PAIGE.AI, Inc. | Systems and methods for processing images of slides to automatically prioritize the processed images of slides for digital pathology |
DK201970510A1 (en) | 2019-05-31 | 2021-02-11 | Apple Inc | Voice identification in digital assistant systems |
DK180129B1 (en) | 2019-05-31 | 2020-06-02 | Apple Inc. | User activity shortcut suggestions |
US11227599B2 (en) | 2019-06-01 | 2022-01-18 | Apple Inc. | Methods and user interfaces for voice-based control of electronic devices |
USD914739S1 (en) | 2019-06-05 | 2021-03-30 | Facebook, Inc. | Display screen with an animated graphical user interface |
USD912700S1 (en) | 2019-06-05 | 2021-03-09 | Facebook, Inc. | Display screen with an animated graphical user interface |
USD914705S1 (en) | 2019-06-05 | 2021-03-30 | Facebook, Inc. | Display screen with an animated graphical user interface |
USD924255S1 (en) | 2019-06-05 | 2021-07-06 | Facebook, Inc. | Display screen with a graphical user interface |
USD914757S1 (en) | 2019-06-06 | 2021-03-30 | Facebook, Inc. | Display screen with an animated graphical user interface |
USD916915S1 (en) | 2019-06-06 | 2021-04-20 | Facebook, Inc. | Display screen with a graphical user interface |
USD918264S1 (en) | 2019-06-06 | 2021-05-04 | Facebook, Inc. | Display screen with a graphical user interface |
USD917533S1 (en) | 2019-06-06 | 2021-04-27 | Facebook, Inc. | Display screen with a graphical user interface |
US11238221B2 (en) * | 2019-06-19 | 2022-02-01 | Microsoft Technology Licensing, Llc | Language profiling service |
KR102238973B1 (en) * | 2019-07-10 | 2021-04-12 | 주식회사 인텔로이드 | Method for providing next sentence using dialogue database and Voice Dialogue device performing thereof |
US11176330B2 (en) * | 2019-07-22 | 2021-11-16 | Advanced New Technologies Co., Ltd. | Generating recommendation information |
US11429778B2 (en) * | 2019-08-29 | 2022-08-30 | Rovi Guides, Inc. | Systems and methods for generating personalized content |
US11620814B2 (en) * | 2019-09-12 | 2023-04-04 | Nec Corporation | Contextual grounding of natural language phrases in images |
US11567788B1 (en) | 2019-10-18 | 2023-01-31 | Meta Platforms, Inc. | Generating proactive reminders for assistant systems |
US11636438B1 (en) | 2019-10-18 | 2023-04-25 | Meta Platforms Technologies, Llc | Generating smart reminders by assistant systems |
US11295368B2 (en) * | 2019-11-22 | 2022-04-05 | Stubhub, Inc. | Interactive and personalized ticket recommendation |
CN111385188A (en) * | 2019-11-22 | 2020-07-07 | 百度在线网络技术（北京）有限公司 | Recommendation method and device for dialog elements, electronic equipment and medium |
US11361762B2 (en) * | 2019-12-18 | 2022-06-14 | Fujitsu Limited | Recommending multimedia based on user utterances |
US10841251B1 (en) * | 2020-02-11 | 2020-11-17 | Moveworks, Inc. | Multi-domain chatbot |
CN111563575B (en) * | 2020-05-06 | 2021-06-29 | 陈永聪 | Machine intelligent implementation method simulating human intelligence |
US11043220B1 (en) | 2020-05-11 | 2021-06-22 | Apple Inc. | Digital assistant hardware abstraction |
US11061543B1 (en) | 2020-05-11 | 2021-07-13 | Apple Inc. | Providing relevant data items based on context |
US11209964B1 (en) | 2020-06-05 | 2021-12-28 | SlackTechnologies, LLC | System and method for reacting to messages |
US11610065B2 (en) | 2020-06-12 | 2023-03-21 | Apple Inc. | Providing personalized responses based on semantic context |
US11490204B2 (en) | 2020-07-20 | 2022-11-01 | Apple Inc. | Multi-device audio adjustment coordination |
US11438683B2 (en) | 2020-07-21 | 2022-09-06 | Apple Inc. | User identification using headphones |
US20220108079A1 (en) * | 2020-10-06 | 2022-04-07 | Sap Se | Application-Specific Generated Chatbot |
JP7132576B2 (en) * | 2020-10-30 | 2022-09-07 | ソプラ株式会社 | Security ID Conversation Search System |
US11563706B2 (en) | 2020-12-29 | 2023-01-24 | Meta Platforms, Inc. | Generating context-aware rendering of media contents for assistant systems |
US11809480B1 (en) | 2020-12-31 | 2023-11-07 | Meta Platforms, Inc. | Generating dynamic knowledge graph of media contents for assistant systems |
US11792141B2 (en) | 2021-01-12 | 2023-10-17 | Meta Platforms Technologies, Llc | Automated messaging reply-to |
US11861315B2 (en) | 2021-04-21 | 2024-01-02 | Meta Platforms, Inc. | Continuous learning for natural-language understanding models for assistant systems |
US11743215B1 (en) | 2021-06-28 | 2023-08-29 | Meta Platforms Technologies, Llc | Artificial reality messaging with destination selection |
CN113878584A (en) * | 2021-10-29 | 2022-01-04 | 广东电网有限责任公司 | Intelligent robot for transformer substation and control method |
CN114398135A (en) * | 2022-01-14 | 2022-04-26 | 北京字跳网络技术有限公司 | Interaction method, interaction device, electronic device, storage medium, and program product |
US11962546B1 (en) | 2023-03-03 | 2024-04-16 | Microsoft Technology Licensing, Llc | Leveraging inferred context to improve suggested messages |
US11947902B1 (en) | 2023-03-03 | 2024-04-02 | Microsoft Technology Licensing, Llc | Efficient multi-turn generative AI model suggested message generation |
Family Cites Families (58)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7283992B2 (en) | 2001-11-30 | 2007-10-16 | Microsoft Corporation | Media agent to suggest contextually related media content |
US7512580B2 (en) | 2005-08-04 | 2009-03-31 | Sap Ag | Confidence indicators for automated suggestions |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
US8082151B2 (en) | 2007-09-18 | 2011-12-20 | At&T Intellectual Property I, Lp | System and method of generating responses to text-based messages |
US20090119584A1 (en) | 2007-11-02 | 2009-05-07 | Steve Herbst | Software Tool for Creating Outlines and Mind Maps that Generates Subtopics Automatically |
US8195656B2 (en) * | 2008-02-13 | 2012-06-05 | Yahoo, Inc. | Social network search |
US20090282114A1 (en) | 2008-05-08 | 2009-11-12 | Junlan Feng | System and method for generating suggested responses to an email |
US8166019B1 (en) | 2008-07-21 | 2012-04-24 | Sprint Communications Company L.P. | Providing suggested actions in response to textual communications |
US8391618B1 (en) | 2008-09-19 | 2013-03-05 | Adobe Systems Incorporated | Semantic image classification and search |
US9782527B2 (en) | 2009-05-27 | 2017-10-10 | Tc1 Llc | Monitoring of redundant conductors |
US8572084B2 (en) | 2009-07-28 | 2013-10-29 | Fti Consulting, Inc. | System and method for displaying relationships between electronically stored information to provide classification suggestions via nearest neighbor |
US9929982B2 (en) | 2010-04-08 | 2018-03-27 | Microsoft Technology Licensing, Llc | Designating automated agents as friends in a social network service |
US20170098122A1 (en) * | 2010-06-07 | 2017-04-06 | Affectiva, Inc. | Analysis of image content with associated manipulation of expression presentation |
US8688698B1 (en) | 2011-02-11 | 2014-04-01 | Google Inc. | Automatic text suggestion |
US8589407B2 (en) * | 2011-06-17 | 2013-11-19 | Google Inc. | Automated generation of suggestions for personalized reactions in a social network |
US9245253B2 (en) * | 2011-08-19 | 2016-01-26 | Disney Enterprises, Inc. | Soft-sending chat messages |
US9727880B2 (en) * | 2011-10-25 | 2017-08-08 | Microsoft Technology Licensing, Llc | Predicting user responses |
CN104396284B (en) * | 2012-06-22 | 2016-09-07 | 谷歌公司 | Present the information for current location or time |
US9191786B2 (en) | 2012-06-27 | 2015-11-17 | At&T Intellectual Property I, L.P. | Method and apparatus for generating a suggested message to be sent over a network |
KR20140011073A (en) | 2012-07-17 | 2014-01-28 | 삼성전자주식회사 | Method and apparatus for recommending text |
US9195645B2 (en) * | 2012-07-30 | 2015-11-24 | Microsoft Technology Licensing, Llc | Generating string predictions using contexts |
US20140088954A1 (en) | 2012-09-27 | 2014-03-27 | Research In Motion Limited | Apparatus and method pertaining to automatically-suggested emoticons |
US10691743B2 (en) | 2014-08-05 | 2020-06-23 | Sri International | Multi-dimensional realization of visual content of an image collection |
US9244905B2 (en) | 2012-12-06 | 2016-01-26 | Microsoft Technology Licensing, Llc | Communication context based predictive-text suggestion |
US20140164506A1 (en) | 2012-12-10 | 2014-06-12 | Rawllin International Inc. | Multimedia message having portions of networked media content |
US20140237057A1 (en) | 2013-02-21 | 2014-08-21 | Genesys Telecommunications Laboratories, Inc. | System and method for processing private messages in a contact center |
US8825474B1 (en) | 2013-04-16 | 2014-09-02 | Google Inc. | Text suggestion output using past interaction data |
US9177318B2 (en) | 2013-04-22 | 2015-11-03 | Palo Alto Research Center Incorporated | Method and apparatus for customizing conversation agents based on user characteristics using a relevance score for automatic statements, and a response prediction function |
US10599765B2 (en) | 2013-06-27 | 2020-03-24 | Avaya Inc. | Semantic translation model training |
US10162884B2 (en) | 2013-07-23 | 2018-12-25 | Conduent Business Services, Llc | System and method for auto-suggesting responses based on social conversational contents in customer care services |
CN104144108B (en) * | 2013-09-30 | 2017-07-25 | 腾讯科技（深圳）有限公司 | A kind of message responding method, apparatus and system |
US8996639B1 (en) | 2013-10-15 | 2015-03-31 | Google Inc. | Predictive responses to incoming communications |
CN103593340B (en) * | 2013-10-28 | 2017-08-29 | 余自立 | Natural expressing information processing method, processing and response method, equipment and system |
US10565268B2 (en) | 2013-12-19 | 2020-02-18 | Adobe Inc. | Interactive communication augmented with contextual information |
WO2015100362A1 (en) | 2013-12-23 | 2015-07-02 | 24/7 Customer, Inc. | Systems and methods for facilitating dialogue mining |
US9817813B2 (en) | 2014-01-08 | 2017-11-14 | Genesys Telecommunications Laboratories, Inc. | Generalized phrases in automatic speech recognition systems |
US20150207765A1 (en) | 2014-01-17 | 2015-07-23 | Nathaniel Brantingham | Messaging Service with Conversation Suggestions |
US10095748B2 (en) | 2014-03-03 | 2018-10-09 | Microsoft Technology Licensing, Llc | Personalized information query suggestions |
US9213941B2 (en) | 2014-04-22 | 2015-12-15 | Google Inc. | Automatic actions based on contextual replies |
WO2015183699A1 (en) * | 2014-05-30 | 2015-12-03 | Apple Inc. | Predictive messaging method |
US10785173B2 (en) | 2014-07-03 | 2020-09-22 | Nuance Communications, Inc. | System and method for suggesting actions based upon incoming messages |
US9569728B2 (en) | 2014-11-14 | 2017-02-14 | Bublup Technologies, Inc. | Deriving semantic relationships based on empirical organization of content by users |
US20160179816A1 (en) | 2014-12-22 | 2016-06-23 | Quixey, Inc. | Near Real Time Auto-Suggest Search Results |
KR101634086B1 (en) * | 2015-01-19 | 2016-07-08 | 주식회사 엔씨소프트 | Method and computer system of analyzing communication situation based on emotion information |
US9883358B2 (en) * | 2015-05-08 | 2018-01-30 | Blackberry Limited | Electronic device and method of determining suggested responses to text-based communications |
US10909329B2 (en) * | 2015-05-21 | 2021-02-02 | Baidu Usa Llc | Multilingual image question answering |
US10049322B2 (en) * | 2015-05-21 | 2018-08-14 | Google Llc | Prefetching weights for use in a neural network processor |
US10504509B2 (en) | 2015-05-27 | 2019-12-10 | Google Llc | Providing suggested voice-based action queries |
US10445425B2 (en) | 2015-09-15 | 2019-10-15 | Apple Inc. | Emoji and canned responses |
KR102427833B1 (en) | 2015-11-30 | 2022-08-02 | 삼성전자주식회사 | User terminal device and method for display thereof |
US20170171117A1 (en) | 2015-12-10 | 2017-06-15 | International Business Machines Corporation | Message Suggestion Using Dynamic Information |
EP3395019B1 (en) | 2015-12-21 | 2022-03-30 | Google LLC | Automatic suggestions and other content for messaging applications |
CN108781175B (en) | 2015-12-21 | 2021-09-21 | 谷歌有限责任公司 | Method, medium, and system for automatic suggestion of message exchange contexts |
US10831802B2 (en) | 2016-04-11 | 2020-11-10 | Facebook, Inc. | Techniques to respond to user requests using natural-language machine learning based on example conversations |
US9866693B2 (en) | 2016-05-06 | 2018-01-09 | Genesys Telecommunications Laboratories, Inc. | System and method for monitoring progress of automated chat conversations |
US20170344224A1 (en) | 2016-05-27 | 2017-11-30 | Nuance Communications, Inc. | Suggesting emojis to users for insertion into text-based messages |
US10515393B2 (en) * | 2016-06-30 | 2019-12-24 | Paypal, Inc. | Image data detection for micro-expression analysis and targeted data services |
US10387888B2 (en) | 2016-07-08 | 2019-08-20 | Asapp, Inc. | Assisting entities in responding to a request of a user |
-
2017
- 2017-01-25 US US15/415,506 patent/US10146768B2/en active Active
- 2017-10-17 CN CN202311086539.9A patent/CN117149970A/en active Pending
- 2017-10-17 WO PCT/US2017/057044 patent/WO2018140099A1/en unknown
- 2017-10-17 JP JP2019520680A patent/JP6625789B2/en active Active
- 2017-10-17 EP EP17794825.4A patent/EP3516537A1/en not_active Withdrawn
- 2017-10-17 CN CN201780066316.2A patent/CN110178132B/en active Active
- 2017-10-17 KR KR1020197011687A patent/KR102050334B1/en active IP Right Grant
Also Published As
Publication number | Publication date |
---|---|
JP6625789B2 (en) | 2019-12-25 |
US20180210874A1 (en) | 2018-07-26 |
CN110178132B (en) | 2023-09-19 |
EP3516537A1 (en) | 2019-07-31 |
KR102050334B1 (en) | 2019-11-29 |
CN110178132A (en) | 2019-08-27 |
WO2018140099A1 (en) | 2018-08-02 |
JP2019536135A (en) | 2019-12-12 |
KR20190049886A (en) | 2019-05-09 |
US10146768B2 (en) | 2018-12-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN110178132B (en) | Method and system for automatically suggesting content in a messaging application | |
US10862836B2 (en) | Automatic response suggestions based on images received in messaging applications | |
US11303590B2 (en) | Suggested responses based on message stickers | |
US11700134B2 (en) | Bot permissions | |
CN109691034B (en) | Robot interaction | |
CN110945840B (en) | Method and system for providing embedded application associated with messaging application | |
CN111279349B (en) | Parsing electronic conversations for presentation in alternative interfaces | |
CN110709869B (en) | Suggested items for use with embedded applications in chat conversations | |
CN110709869A (en) | Suggestion items for use with embedded applications in chat conversations |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US5937406A - File system interface to a database - Google Patents
File system interface to a database Download PDFInfo
- Publication number
- US5937406A US5937406A US08/792,139 US79213997A US5937406A US 5937406 A US5937406 A US 5937406A US 79213997 A US79213997 A US 79213997A US 5937406 A US5937406 A US 5937406A
- Authority
- US
- United States
- Prior art keywords
- database
- file system
- information
- objects
- file
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
Definitions
- This application includes a microfiche appendix having a total of 138 frames in 2 microfiche sheets.
- This invention relates to accessing information in a database.
- a database is a body of information that is logically organized so that it can be retrieved, stored and searched in a coherent manner by a “database engine”--a collection of software methods for retrieving or manipulating data in the database.
- Databases generally fall into three categories: relational databases, object-oriented databases and object-relational databases.
- a relational database is a collection of fixed-field two-dimensional tables that can be related (or "joined") to each other in virtually any manner a database developer chooses.
- the structure of a relational database can be modified by selectively redefining the relationships between the tables.
- a database engine may perform complex searches on a relational database quickly and easily by using any of various database query protocols such as the method expressed by the Structured Query Language (SQL) or by other mechanisms.
- SQL Structured Query Language
- the relationships between the tables enable results of a search to be automatically cross-referenced to corresponding information in other tables in the database. As shown in FIG.
- a relational database 100 includes a customer table 102 which is joined by a logical link 103 to an order table 104 which in turn is joined by a logical link 105 to an inventory table 106.
- a user may query the database 100, for example, for all order numbers higher than a threshold value. Because the order table 104 is joined with the customer table 102 and the inventory table 106, the list of order numbers resulting from the query can be retrieved and displayed along with the respective customer names and inventory items that correspond to the identified order numbers.
- An object-oriented database is a collection of "objects"--software elements that contain both data and rules for manipulating that data.
- an OODB can store data of virtually any type (text, 3D graphic images, video clips, etc.).
- An OODB stores its constituent objects in a hierarchy of classes with associated rules so that the OODB contains much of the logic it needs to do useful work.
- a relational database in contrast contains only data and must rely on external application software to perform useful functions with the data.
- a object-relational database is a hybrid of the other two types.
- Non-character data e.g., an image file
- BLOB binary large object
- Rules for manipulating the data contained within a BLOB may be stored either within the database or external to it depending on the particular ORDB implementation.
- the Informix® Universal Server IUS®
- IUS® is an example of an object-relational database management system (ORDBMS) that internally stores the rules for manipulating BLOBs so that they may be treated as "native" data types--that is, data types that the ORDBMS itself has the capability to manipulate.
- Information within a relational or an object-relational database typically is accessed by SQL-compliant computer programs that are written to accomplish a specific function. For example, a user may write a SQL program that retrieves a list of customer names from a database which stores customer information.
- many different application programs are available that support database queries and which allow a user to interactively formulate a database query by specifying an arbitrary set of criteria (e.g., the names of all out-of-state customers with overdue accounts). This type of application program presents the user's database query to the database engine which retrieves the requested information from the database.
- Such application programs are referred to as "database aware" because they are have the ability to interact with and manipulate databases.
- database-unaware meaning that they cannot access information stored in a database. Rather, database-unaware applications rely on file systems, such as the Network File System (NFS) developed by Sun Microsystems, Inc., for storing and retrieving information in discrete files.
- NFS Network File System
- a database-unaware program stores each separate document in a separate disk file identified by the user of the application.
- a file system 200 has two disk drives mounted: drive 202 which is mapped to the label a: and drive 204 which is mapped to the label b:.
- Each of the a: and b: drives includes one or more directories (docs on the a: drive 202; dir1 and dir2 on the b: drive 204) which in turn may have subdirectories (subdir1 in dir1; subdir2 and subdir3 in dir2) and so on with virtually any level of hierarchical nesting being possible.
- Files 206-212 may exist at any of the various directory or subdirectory levels within the file system.
- the labels a: and b: represent the "namespace" of the file system. That is, all filename paths that begin with a: or b: are within the file system's namespace. As shown in FIG. 2, for example, a document that lists names of out-of-state customers is stored in the file system's namespace at a location defined by the filename path
- information in a database is accessed with a computer system by making one or more database objects (e.g., a table or a row) available as one or more file system objects (e.g., directories, files or links) to an application, for example, a database-unaware application.
- the database may be relational, object-relational or object-oriented. If multiple file system objects are made available, collectively they may represent a hierarchical file system.
- a file system request issued by the application that corresponds to the file system object is transformed into a database operation, for example, an SQL query, which is performed on the database with a database engine.
- Information associated with the database object which is retrieved as a result of the database operation may be formatted into one or more file system objects and returned to the application.
- the particular formatting of the retrieved information may be defined in an extension module, which also may include information that defines the specific manner in which the file system request should be transformed into a database query.
- the database operations including formatting of a database query, retrieving information and formatting it into file system objects, are performed transparently to the application.
- the application may display them on a display screen of a computer, for example, as graphical representations of file system objects.
- the database object that is made available may be presented as multiple file system objects in formats understandable by different applications. Conversely, a single file system object may correspond to multiple database objects.
- a computer-based data repository management system includes a database of information, a file system-based application program for manipulating data, and a file system interface to the database which provides the file system-based application, which otherwise may be database-unaware, with access to information in the database.
- the data repository management system may further include a database management system which manages information in the database either in addition to, or instead of, the file system-based application.
- the data repository management system may include a module for differentiating file system requests directed to the file system from file system requests directed to the file system interface.
- the file system interface may include one or more extension modules containing one or more file objects, each file object including information for converting database objects into file system objects.
- information in a database is accessed with a computer system by encoding a file handle with information that specifies a database object in a database.
- the encoded file handle is transmitted and then decoded to identify the database object associated with the file system request.
- the encoding may be based on the NFS protocol.
- the encoded information may include information that corresponds to the issued file system request and which identifies an extension module, a database table and row, metadata, a pointer to a database object, or a combination thereof.
- Advantages of the file system interface described here may include one or more of the following.
- Applications that rely on a file system as a data repository, or which are otherwise database-unaware (i.e., unable to access data in a database), are enabled to access information in a database in a transparent manner.
- These database-unaware applications can share data seamlessly both with database-aware applications and with other database-unaware applications.
- a database may appear to an application as just another local or remote file system that is no different in form or character from the other file systems available to the application. No change to the application's program code, the database or the database engine is required.
- users of database-unaware applications are provided with database functionality without having to invest the time and cost typically associated with database-aware tools.
- a system administrator may use the IXFS system to combine disparate data storage technologies (e.g., file-based systems with database systems) in creating a unified data repository strategy that spans an enterprise.
- disparate data storage technologies e.g., file-based systems with database systems
- the enterprise's investment in legacy data repositories is maintained because data present in the repositories may easily be transferred to a database as the enterprise moves to the relational or object-relational model of data storage.
- the enterprise's investment in database-unaware applications is enhanced because IXFS enables them to be used to manage data stored in a database.
- the ability for a database-unaware application to access information in a database combines the simplicity of the file system paradigm with the sophistication and effectiveness of database manipulation techniques. This capability is particularly useful for Internet World Wide Web applications in which a user seeks to access a large store of data using, for example, the hypertext transfer protocol (HTTP).
- HTTP hypertext transfer protocol
- CGI common gateway interface
- the IXFS system converts such a request into a form that may be executed by a database engine directly, quickly and transparently.
- IXFS extensible nature of IXFS allows it to be tailored to virtually any type of application so that the database will appear as a collection of file system objects that are consistent with the application's other file system objects.
- FIG. 1 is a diagram of a relational database.
- FIG. 2 is a diagram of a file system.
- FIG. 3 is a diagram of a system for accessing data in file system and in a database.
- FIG. 4 is a flowchart of accessing data in a database using the system of FIG. 3.
- FIGS. 5A, 5B and 5C are example screen displays from an application accessing information in a file system and in a database.
- FIG. 6 is a data structure diagram for a file object.
- FIG. 7 is a diagram of a kernel level file system architecture.
- FIG. 8 is a diagram of a network file system architecture.
- FIG. 9 is a data diagram of a NFS file handle as used in the network file system architecture of FIG. 8.
- a database to store persistent data provides several advantages that are not available when a file system is used as a data repository.
- the structure of a database, and the internal relationships between tables within the database, enable fast and arbitrarily complex queries for information to be performed on the database.
- a file system in contrast has no standard data query mechanism for searching for specific data items within the files managed by the file system.
- Other features provided by database systems for which conventional file systems have no analog include well-defined management policies, auditing capabilities, transparent data replication, logging facilities, and consistent backup and restore procedures.
- Using a database system as a data repository requires relatively complex and expensive tools, such as special purpose database-aware applications, and often an increased level of sophistication and training by the end-user.
- File systems in contrast generally are simple to use, cheap and pervasive. Virtually every computer operating system provides a native file system that may be used by applications for storing persistent data. This among other reasons is why approximately 85-90% of all persistent data is stored in file systems by database-unaware applications.
- the file system interface described here dubbed the Informix® File System (IXFS) interface, provides computer system users with the best of both worlds by enabling database-unaware applications to access (i.e., read and write) information in a database in a manner that is entirely transparent to the application. No changes need to be made to the application or to the database.
- IXFS presents the contents of a database to the application as "file system objects" such as directories, sub-directories, files or links. These file system objects appear to the application to be no different in form or character from the file system objects that the application handles in the ordinary course of storing and retrieving data.
- IXFS enables a user of a database-unaware application to access the contents of a database by performing the desired operations on the file system objects that represent the database's contents.
- a functional specification for IXFS is reproduced as Appendix A, which is incorporated by reference.
- IXFS 300 sits between a database-unaware application 302 and a database 304 and monitors all requests issued to the file system 306 by the application 302.
- a component of the IXFS system translates the file system request into a database query format that is understandable by the database.
- information received from the database in response to a file system read request by the application, for example is represented to the application as one or more file system objects.
- a high-level description of the operation of IXFS and its interaction with the computer's operating system is provided with reference to the flowchart of FIG. 4.
- a file system request e.g. a data read or write
- the operating system determines whether it corresponds to information contained in a file namespace managed by IXFS (step 400).
- the operating system is able to differentiate requests for data stored in other file systems from requests for data in IXFS's file namespace because the database has been mapped to a namespace (e.g., x:) that is mutually exclusive with the file system's namespace (e.g., a: and b:).
- the database appears to the operating system and to the application as a disk drive mapped to the label x:.
- the request is handled by other file systems (step 401). If, on the other hand, the file system request corresponds to information in IXFS's file namespace, the operating system passes the request onto IXFS which in turn furnishes the request to an extensible component of IXFS, i.e., an "extension module," for translation into a form understandable by the database--an SQL query, for example--(step 402). After the request has translated into a database query, the IXFS extension module presents the query to the database engine which uses it to access the database either by modifying the desired information (for a write request) or by retrieving the desired information (for a read request) and returning it to IXFS (step 404).
- an extensible component of IXFS i.e., an "extension module”
- the IXFS extension module presents the query to the database engine which uses it to access the database either by modifying the desired information (for a write request) or by retrieving the desired information (for a read request) and returning it to IXFS (step
- the IXFS extension module formats it according to predefined criteria into file system objects (step 408) which are presented to the application (step 410).
- the application treats them as if they came from a file system. In fact, the application is unaware that the file system objects came from a source other than a file system. In this manner, all requests for data in the file system's namespace are handled by the file system while all requests for data in the file namespace assigned to the database are handled by IXFS.
- FIGS. 5A-5C An example of how IXFS may be used to represent a database as a file system to an application is provided with reference to FIGS. 5A-5C.
- a user of a window-based computer system uses a file system navigation tool to examine the information that is stored both in the file system represented by FIG. 2 and in the database represented by FIG. 1.
- the file system's namespace is represented by the labels a: and b: and that IXFS is mapped to drive x: on the client machine.
- the navigation tool window 500 initially displays the file system's two drives, a: and b:, and the drive x: corresponding to the database, in a collapsed state.
- the user instructs the navigation tool to expand drive b:, thereby making its hierarchy of directories and subdirectories visible to the user, and opens subdir1 which contains two files, doc2O6.txt and doc2O7.txt, as shown in FIG. 5B.
- the file information displayed in FIG. 5B is retrieved from the a: and b: drives using standard file system operations.
- the user instructs the navigation tool to expand drive x:, which is mapped to the database via IXFS, so that the contents of drive x: may be examined.
- the corresponding file system request issued by the navigation tool points to drive x:--the file namespace assigned to the database--IXFS handles the file system request by passing it to an extension module which formulates a database query to retrieve the requested information from the database.
- the information After the information has been retrieved, it is formatted into file system objects with a method invoked by IXFS and returned to the navigation tool.
- the information retrieved from the database appears to the navigation tool, and to the user of the navigation tool, to be no different in character from other file system objects that were retrieved with the file system. As shown in FIG.
- tables 102, 104 and 106 in the database 100 of FIG. 1 are represented as three corresponding directories--customer, order and inventory.
- Entries in the name subdirectory are represented as text files that are named for their respective contents--Adams, Andrews, Brewster, etc.
- a user may open any of the text files in the x: ⁇ customer ⁇ name directory (for example, with a standard text editor application) modify its contents, and perform a standard "file save" operation.
- IXFS handles the file save request because it is directed to the file namespace assigned to the database and formulates a corresponding database operation to modify the contents of the database as appropriate.
- IXFS allows all file system operations to be performed on the database. For example, a user could employ appropriate features of the navigation tool to change the name of the x: ⁇ customer directory to something else such as x: ⁇ cust. Similarly, a user could create a new file system object such as a subdirectory or a new file underneath the x: ⁇ customer directory. Moreover, access to specified portions of the database could be limited for certain users in the same manner that file system objects in a file system may be limited (read only, hidden, etc.).
- IXFS includes a Basic Extension Module (BEM) that provides a one-to-one mapping of a file in a file system into a collection of database objects.
- BEM Basic Extension Module
- the source code for the IXFS BEM is reproduced in the microfiche appendix.
- the BEM emulates a file system by encapsulating a collection of database tables as specified by a software developer implementing the IXFS system, and presenting them to an application as file system objects.
- Each table specified by the BEM corresponds to a directory and each row in the table corresponds to a file system object (e.g., subdirectory, file or link) present within the directory.
- the BEM For each database table that it encapsulates, the BEM includes a corresponding "file object" 600 having a data structure as shown in FIG. 6.
- the file system object 600 corresponds to, and provides an intuitive representation of, a directory, a file or a link in a file system.
- Each file object 600 includes the file object's name 601 (an identifier of a file system entity that is unique within a given directory), type 602 (directory, file or link), ownership 603 (an identifier of the file object's owner), access rights 604 (access rights to the object for its owner, community and others), temporal characteristics 605 (timestamp of last read, write and look-up operations), popularity 606 (number of links pointing to the object) and size 607 (object's size in bytes).
- the file object 600 also contains its corresponding data object 608 or a pointer to the data object.
- Portions of a database are mapped to a file system representation by selecting database tables and rows as desired, and by designating the type of file system object to which each selected table and row corresponds.
- the database of FIG. 1 was mapped into the file system hierarchy shown in FIG. 5C by specifying that each of the customer, order and inventory tables occupy a separate file object in the BEM of the type "directory.”
- each of the name, address and id rows have been designated as the type "directory,” thereby making them appear as subdirectories to the hierarchically dominant customer directory.
- the individual customer name entries have been designated in the file object as the type "file” making them appear as individual text files as shown in FIG. 5C.
- IXFS extension modules may be resident and operative at the same time to provide access to two or more different databases simultaneously or to access different information within the same database or to provide a different interpretation of the same database object.
- a single extension module is capable of presenting the same information in multiple different formats, for example, as different types of file system objects.
- the table of customers including their names, addresses and IDs, could be presented as a single file system object--e.g., a Microsoft Excel file named "customer.xls" containing all of the customers' identifying information--which could be opened by an appropriate spreadsheet program that understands the "xls" format.
- the extension module could be configured so that the customer.xls file object is presented to the application either instead of, or in addition to, the x: ⁇ customer directory, its component subdirectories (name, address, id) and the files contained therein (Adams.txt, Andrews.txt, Brewster.txt, etc.).
- an extension module could be configured to present the text files in x: ⁇ customer ⁇ name in several different formats for use by alternative application programs.
- multiple different file formats could be provided for each customer name by presenting multiple file system objects for a single database object.
- the database table entry for the customer Adams could be mapped, for example, to three separate file system objects having different formats: "Adams.doc” for use with Microsoft Word, "Adams.wpd” for use with Corel Wordperfect, and "Adams.fm” for use with Adobe Framemaker.
- a user who edited the information in the "Adams.doc” object would observe that the changes automatically were reflected in the "Adams.wpd" and "Adams.fm” objects. Because all three of the file system objects are mapped to the same database object (namely, the database entry for customer Adams), the three alternative file system objects may be used interchangeably to view or edit the information for customer Adams without concern that divergent versions of Adams), information will result.
- database-unaware applications e.g., Microsoft Word, Microsoft Excel, Lotus 1-2-3
- database-aware applications may continue to access all of the information stored within the database, including information that was stored by database-unaware applications in the first instance.
- IXFS facilitates the migration of data between different applications--for example, between a database-aware application and a database-unaware application or between two disparate database-unaware applications.
- the IXFS system may be implemented by three different architectures: an object library architecture; a kernel level mountable file system architecture; or a network file system architecture. Details for implementing these three architectures are set forth in the IXFS Functional Specification, Appendix A.
- the object library architecture the ability to access information in a database is achieved through a set of software objects made available to database-unaware applications through a library --for example, a dynamic linked library (DLL) on a Microsoft Windows®-based platform.
- these software objects provide a functionality analogous to that provided by the common file access Application Program Interfaces (APIs) defined by the ANSI C or POSIX standards.
- APIs Application Program Interfaces
- Use of the object library architecture would require, however, any application to be used with the IXFS system first to be relinked with a new library of IXFS-related objects.
- the other two architectures allow existing applications to access database information without any changes to or relinking of the applications.
- the kernel level mountable file system architecture intercepts file system requests at the operating system level and passes them on to the IXFS system for processing.
- the kernel address space 700 is modified to include an IXFS kernel module 701 which is specific to the operating system being used (e.g., UNIX, Windows® NT).
- File system requests from application programs are received by the OS kernel 702 either from a local client 705 (an application residing in the address space of the local host 704) or from a remote client 706 (an application residing in the address space of a remote system) via NFS 703.
- File system requests directed towards the namespace of the mounted file system devices are handled by NFS 703 in the conventional manner.
- File system requests that are directed to the namespace occupied by the database are passed onto the IXFS daemon 708 (or the IXFS "service" in the case of Windows NT) for processing.
- the IXFS daemon 708 performs several functions including managing connections to the database 709 (or databases) to be accessed and maintaining a list of the filenames being used to access database objects.
- the IXFS daemon Upon receiving a request from the IXFS kernel module 701 to access the database 709, the IXFS daemon initializes a filename look-up procedure to identify the appropriate IXFS extension module 707 to handle the request.
- the filename specified by the request is used as an index into a look-up table of corresponding IXFS extension modules by comparing the specified filename to a list of names of file objects contained in each extension module.
- the IXFS daemon 708 transfers the request to that extension module 707.
- the extension module translates the request into a database operation which is performed on the database 709. Any information generated in response to the database query operation is formatted by a method invoked by the IXFS extension module 707 into file system objects according to the file object types defined in the extension module. The formatted file system objects are then presented to the requesting application.
- the network architecture intercepts file system requests at the network level and passes them on to the IXFS system for processing.
- the OS kernel address space need not be modified. Rather, all file system commands generated by a local client 805 or a remote client 806 are passed, via a loop NFS connection 810 or a network NFS connection 803, to a NFS front-end daemon (or service) 804, which resides outside of the OS kernel.
- the NFS front-end daemon 804 is implemented as a component of the IXFS daemon.
- the NFS front-end daemon 804 Upon receiving a file system request, the NFS front-end daemon 804 passes it on to the IXFS daemon 806 and subsequently to the appropriate IXFS extension module 807, which provide the same functionality as the IXFS daemon and IXFS extension modules in the kernel level architecture described above.
- the IXFS system can be adapted to provide an interface to any type of database, including relational, object-relational and object-oriented databases, and to understand any other type of database query protocol in addition to SQL.
- NFS was chosen as the network protocol to be used in the IXFS implementation of FIG. 8 because NFS is a widely used standard for sharing files across different platforms.
- CIFS Common Internet File System
- the NFS protocol (version 2) allows clients and servers to exchange file information by using a "file handle"--a 32-byte value--to identify a desired file.
- NFS is used as the network file system protocol in the network architecture
- IXFS can make additional use of the NFS file handle to achieve greater speed and efficiency in performing file system requests on the database. To do so, IXFS encodes the NFS file handle with information that is specific to its operations as shown in FIG. 9.
- Bytes 1-8 of the file handle hold the IXFS "magic string"--an entity that allows IXFS to distinguish IXFS file handles (i.e., file system requests directed to the file namespace assigned to the database) from NFS file handles (i.e., file system requests directed to the file namespace assigned to the file system).
- the magic string is an eight byte string in which each byte is assigned the value FF hexadecimal to identify a file handle as an IXFS file handle.
- Bytes 9 and 10 identify the particular IXFS extension module whose job it is to manage the file handle under consideration.
- Encoding an IXFS file handle in this manner obviates the need to maintain an empty ("shadow") directory tree in the file system, which otherwise would be needed to generate standard NFS file handles that correspond to information managed by the IXFS system. Similarly, this encoding scheme makes it unnecessary to maintain a distinct mapping entity (e.g., look-up table) between NFS file handles and IXFS file handles.
- mapping entity e.g., look-up table
- the remaining bytes of the NFS file handle in FIG. 9 include information that is specific to the extension module identified by the extension module identified by bytes 9 and 10 of the file handle.
- Bytes 11-14 and 15-18 respectively identify the database table and row that correspond to the file handle.
- Bytes 19-22 identify the i-node (information node) table and row which correspond to metadata descriptive of file attributes, and a pointer to the data in the database, for the file handle under consideration.
- Bytes 19-32 presently are unused but they are available for use by any newly developed extension modules.
- the kernel level and network architectures provide different advantages relative to one another.
- the kernel level approach is the more efficient of the two in that it provides a shorter data path between the issuance of the file system request to the return of file system objects from IXFS.
- the network-based architecture significantly minimizes the effort required to port the IXFS between different platforms because implementing the network architecture does not require a modification to the operating system kernel.
- the IXFS system provides a database-unaware application with transparent access to data in a database, while maintaining the inherent advantages of using a database for persistent data storage.
- the techniques described here may be implemented in hardware or software, or a combination of the two.
- the techniques are implemented in computer programs executing on programmable computers that each include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and/or storage elements), and suitable input and output devices.
- Program code is applied to data entered using the input device to perform the functions described and to generate output information.
- the output information is applied to one or more output devices.
- Each program is preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system.
- the programs can be implemented in assembly or machine language, if desired.
- the language may be a compiled or interpreted language.
- Each such computer program is preferably stored on a storage medium or device (e.g., CD-ROM, hard disk or magnetic diskette) that is readable by a general or special purpose programmable computer for configuring and operating the computer when the storage medium or device is read by the computer to perform the procedures described in this document.
- a storage medium or device e.g., CD-ROM, hard disk or magnetic diskette
- the system may also be considered to be implemented as a computer-readable storage medium, configured with a computer program, where the storage medium so configured causes a computer to operate in a specific and predefined manner.
Abstract
Description
Claims (54)
Priority Applications (8)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/792,139 US5937406A (en) | 1997-01-31 | 1997-01-31 | File system interface to a database |
DE69839744T DE69839744D1 (en) | 1997-01-31 | 1998-01-27 | File system interface for a database |
EP98300577A EP0856803B1 (en) | 1997-01-31 | 1998-01-27 | File system interface to a database |
AU52757/98A AU739236B2 (en) | 1997-01-31 | 1998-01-28 | File system interface to a database |
CA002228210A CA2228210C (en) | 1997-01-31 | 1998-01-29 | File system interface to a database |
JP10018637A JPH10247155A (en) | 1997-01-31 | 1998-01-30 | File system interface for data base |
BR9800065A BR9800065A (en) | 1997-01-31 | 1998-01-30 | File system interface to a database |
US09/344,500 US6442548B1 (en) | 1997-01-31 | 1999-06-25 | Database interface for database unaware applications |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/792,139 US5937406A (en) | 1997-01-31 | 1997-01-31 | File system interface to a database |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/344,500 Continuation US6442548B1 (en) | 1997-01-31 | 1999-06-25 | Database interface for database unaware applications |
Publications (1)
Publication Number | Publication Date |
---|---|
US5937406A true US5937406A (en) | 1999-08-10 |
Family
ID=25155919
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/792,139 Expired - Lifetime US5937406A (en) | 1997-01-31 | 1997-01-31 | File system interface to a database |
US09/344,500 Expired - Lifetime US6442548B1 (en) | 1997-01-31 | 1999-06-25 | Database interface for database unaware applications |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/344,500 Expired - Lifetime US6442548B1 (en) | 1997-01-31 | 1999-06-25 | Database interface for database unaware applications |
Country Status (7)
Country | Link |
---|---|
US (2) | US5937406A (en) |
EP (1) | EP0856803B1 (en) |
JP (1) | JPH10247155A (en) |
AU (1) | AU739236B2 (en) |
BR (1) | BR9800065A (en) |
CA (1) | CA2228210C (en) |
DE (1) | DE69839744D1 (en) |
Cited By (172)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6119133A (en) * | 1998-04-16 | 2000-09-12 | International Business Machines Corporation | Extensible method and apparatus for retrieving files having unique record identifiers as file names during program execution |
US6185567B1 (en) * | 1998-05-29 | 2001-02-06 | The Trustees Of The University Of Pennsylvania | Authenticated access to internet based research and data services |
US6192362B1 (en) | 1997-12-15 | 2001-02-20 | International Business Machines Corporation | System and method for creating a search form for accessing directory information |
US6195666B1 (en) | 1997-12-15 | 2001-02-27 | International Business Machines Corporation | Web interface and method for displaying directory information |
US6208986B1 (en) * | 1997-12-15 | 2001-03-27 | International Business Machines Corporation | Web interface and method for accessing and displaying directory information |
US6260039B1 (en) | 1997-12-15 | 2001-07-10 | International Business Machines Corporation | Web interface and method for accessing directory information |
US6321219B1 (en) * | 1998-08-14 | 2001-11-20 | Microsoft Corporation | Dynamic symbolic links for computer file systems |
US20010047400A1 (en) * | 2000-03-03 | 2001-11-29 | Coates Joshua L. | Methods and apparatus for off loading content servers through direct file transfer from a storage center to an end-user |
US6336120B1 (en) * | 1997-08-26 | 2002-01-01 | International Business Machines Corporation | Method and system for supporting hierarchical storage management (HSM) file system across multiple platforms |
WO2002031699A1 (en) * | 2000-10-10 | 2002-04-18 | Velquest Corporation | Process-linked data management system |
US6393461B1 (en) * | 1998-02-27 | 2002-05-21 | Fujitsu Limited | Communication management system for a chat system |
US6415278B1 (en) * | 1997-11-14 | 2002-07-02 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US6442548B1 (en) * | 1997-01-31 | 2002-08-27 | International Business Machines Corporation | Database interface for database unaware applications |
US20020174141A1 (en) * | 2001-05-16 | 2002-11-21 | Shing-Ming Chen | Method and system for automated data manipulation in an electronic spreadsheet program or the like |
US20030009473A1 (en) * | 2001-05-31 | 2003-01-09 | Ham Jungkyoo Pamela | Method, system, and computer program product for providing an extensible file system for accessing a foreign file system from a local data processing system |
US20030028685A1 (en) * | 2001-07-10 | 2003-02-06 | Smith Adam W. | Application program interface for network software platform |
US6549916B1 (en) | 1999-08-05 | 2003-04-15 | Oracle Corporation | Event notification system tied to a file system |
US20030105745A1 (en) * | 2001-12-05 | 2003-06-05 | Davidson Jason A. | Text-file based relational database |
US6584497B1 (en) * | 1999-07-28 | 2003-06-24 | International Business Machines Corporation | Method, system, and program for returning a file requested through a network connection |
US20030135511A1 (en) * | 2002-01-11 | 2003-07-17 | International Business Machines Corporation | Method, apparatus, and program for separate representations of file system locations from referring file systems |
US6611847B1 (en) * | 1999-12-30 | 2003-08-26 | Unisys Corporation | Method for dynamically linking two objects in two different models |
US20030167355A1 (en) * | 2001-07-10 | 2003-09-04 | Smith Adam W. | Application program interface for network software platform |
US20030167356A1 (en) * | 2001-07-10 | 2003-09-04 | Smith Adam W. | Application program interface for network software platform |
US20030167277A1 (en) * | 2001-07-10 | 2003-09-04 | Anders Hejlsberg | Application program interface for network software platform |
US20030172196A1 (en) * | 2001-07-10 | 2003-09-11 | Anders Hejlsberg | Application program interface for network software platform |
US20030177282A1 (en) * | 2001-07-10 | 2003-09-18 | Andres Hejlsberg | Application program interface for network software platform |
US20030195865A1 (en) * | 2000-05-12 | 2003-10-16 | Long David J. | Transaction-aware caching for access control metadata |
US20030195866A1 (en) * | 2000-05-12 | 2003-10-16 | Long David J. | Transaction-aware caching for access control metadata |
US20030200197A1 (en) * | 2000-05-12 | 2003-10-23 | Oracle International Corporation | Transaction-aware caching for document metadata |
US20030204514A1 (en) * | 1997-05-14 | 2003-10-30 | Portal Software, Inc. | Method and apparatus for object oriented storage and retrieval of data from a relational database |
US20040039806A1 (en) * | 2001-10-26 | 2004-02-26 | Miras Bertrand | Methods and systems for the synchronized recording and reading of data coming from a plurality of terminal devices |
US20040044653A1 (en) * | 2002-08-27 | 2004-03-04 | Jameson Kevin Wade | Collection shortcut expander |
US20040078466A1 (en) * | 2002-10-17 | 2004-04-22 | Coates Joshua L. | Methods and apparatus for load balancing storage nodes in a distributed network attached storage system |
US20040128307A1 (en) * | 2002-12-30 | 2004-07-01 | Creativyst, Inc. | Method of storing and retrieving database records that stores multiple field values within directory entries of an underlying operating system |
WO2004072864A1 (en) * | 2003-02-13 | 2004-08-26 | Neurocom Pty Ltd | Dynamically configurable file display system |
US6789080B1 (en) | 1997-11-14 | 2004-09-07 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US6850959B1 (en) * | 2000-10-26 | 2005-02-01 | Microsoft Corporation | Method and system for transparently extending non-volatile storage |
US20050044108A1 (en) * | 2003-08-21 | 2005-02-24 | Ashish Shah | Systems and methods for providing synchronization services for units of information manageable by a hardware/software interface system |
US20050055226A1 (en) * | 2003-09-04 | 2005-03-10 | Mark Dane | Method and apparatus for recruitment process management |
US20050055373A1 (en) * | 2003-09-04 | 2005-03-10 | Forman George H. | Determining point-of-compromise |
US20050091225A1 (en) * | 2003-10-23 | 2005-04-28 | Mckee Timothy P. | System and a method for presenting related items to a user |
US20050091667A1 (en) * | 2003-10-23 | 2005-04-28 | Mckee Timothy P. | System and a method for presenting items to a user with a contextual presentation |
US20050091672A1 (en) * | 2003-10-24 | 2005-04-28 | Microsoft Corporation | Facilitating presentation functionality through a programming interface media namespace |
US20050091181A1 (en) * | 2003-10-23 | 2005-04-28 | Mckee Timothy P. | System and method for the presentation of items stored on a computer |
US20050091287A1 (en) * | 1999-02-18 | 2005-04-28 | Eric Sedlar | Database-managed file system |
US20050097073A1 (en) * | 2003-11-05 | 2005-05-05 | Novell, Inc. | Method for mapping a flat namespace onto a hierarchical namespace using locality of reference cues |
US20050102299A1 (en) * | 2003-11-05 | 2005-05-12 | Mair David A. | Method for providing a flat view of a hierarchical namespace without requiring unique leaf names |
US20050160078A1 (en) * | 2004-01-16 | 2005-07-21 | International Business Machines Corporation | Method and apparatus for entity removal from a content management solution implementing time-based flagging for certainty in a relational database environment |
US20050197828A1 (en) * | 2000-05-03 | 2005-09-08 | Microsoft Corporation | Methods, apparatus and data structures for facilitating a natural language interface to stored information |
US6952737B1 (en) | 2000-03-03 | 2005-10-04 | Intel Corporation | Method and apparatus for accessing remote storage in a distributed storage cluster architecture |
US6958903B1 (en) | 2000-05-22 | 2005-10-25 | Cheryl Henry | Data storage device reader and method of using same |
US20050262122A1 (en) * | 1997-12-21 | 2005-11-24 | Brassring, Llc | System and method for interactively entering data into a database |
US20050267853A1 (en) * | 2004-06-01 | 2005-12-01 | Microsoft Corporation | Method, system, and apparatus for exposing workbook ranges as data sources |
US6983263B1 (en) | 2000-11-10 | 2006-01-03 | General Electric Capital Corporation | Electronic boardroom |
US20060024653A1 (en) * | 2004-07-30 | 2006-02-02 | Microsoft Corporation | Method, system, and apparatus for exposing workbooks as data sources |
US6999963B1 (en) | 2000-05-03 | 2006-02-14 | Microsoft Corporation | Methods, apparatus, and data structures for annotating a database design schema and/or indexing annotations |
WO2006034258A1 (en) * | 2004-09-20 | 2006-03-30 | Koders, Inc. | Source code search engine |
US20060080465A1 (en) * | 2004-10-12 | 2006-04-13 | Conzola Vincent C | Apparatus, system, and method for presenting a mapping between a namespace and a set of computing resources |
US20060117049A1 (en) * | 2004-11-29 | 2006-06-01 | Oracle International Corporation | Processing path-based database operations |
US7058648B1 (en) | 2000-12-01 | 2006-06-06 | Oracle International Corporation | Hierarchy-based secured document repository |
US20060136376A1 (en) * | 2004-12-16 | 2006-06-22 | Oracle International Corporation | Infrastructure for performing file operations by a database server |
US20060136508A1 (en) * | 2004-12-16 | 2006-06-22 | Sam Idicula | Techniques for providing locks for file operations in a database management system |
US20060136509A1 (en) * | 2004-12-16 | 2006-06-22 | Syam Pannala | Techniques for transaction semantics for a database server performing file operations |
US20060136516A1 (en) * | 2004-12-16 | 2006-06-22 | Namit Jain | Techniques for maintaining consistency for different requestors of files in a database management system |
US20060143177A1 (en) * | 2004-12-15 | 2006-06-29 | Oracle International Corporation | Comprehensive framework to integrate business logic into a repository |
US7080086B2 (en) * | 2000-02-09 | 2006-07-18 | International Business Machines Corporation | Interaction with query data |
US7089489B1 (en) * | 1997-06-02 | 2006-08-08 | Telefonaktiebolaget Lm Ericsson (Publ) | Method and arrangement for browsing documents in a database |
US20060200470A1 (en) * | 2005-03-03 | 2006-09-07 | Z-Force Communications, Inc. | System and method for managing small-size files in an aggregated file system |
US20060206452A1 (en) * | 2005-03-11 | 2006-09-14 | Microsoft Corporation | Accessing Web content from any virtualized store |
US20060294196A1 (en) * | 2005-06-27 | 2006-12-28 | Elie Feirouz | Method and system for storing a web browser application session cookie from another client application program |
US20070005603A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Sharing state information among a plurality of file operation servers |
US20070005555A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Method and mechanism for supporting virtual content in performing file operations at a RDBMS |
US20070011207A1 (en) * | 2005-07-05 | 2007-01-11 | Vishnubhotla Prasad R | Method and system for integrating file system events into a relational database |
US20070011654A1 (en) * | 2005-07-10 | 2007-01-11 | Opperman David B | Method and apparatus for reformatting source code appearance |
US20070011167A1 (en) * | 2005-07-08 | 2007-01-11 | Muralidhar Krishnaprasad | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US7185005B1 (en) | 2000-05-12 | 2007-02-27 | Oracle International Corporation | Nested transactions in a file system |
US7203731B1 (en) | 2000-03-03 | 2007-04-10 | Intel Corporation | Dynamic replication of files in a network storage system |
US20070094286A1 (en) * | 2005-10-20 | 2007-04-26 | Ravi Murthy | Managing relationships between resources stored within a repository |
US20070118561A1 (en) * | 2005-11-21 | 2007-05-24 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US20070130157A1 (en) * | 2005-12-05 | 2007-06-07 | Namit Jain | Techniques for performing file operations involving a link at a database management system |
US7254636B1 (en) * | 2003-03-14 | 2007-08-07 | Cisco Technology, Inc. | Method and apparatus for transparent distributed network-attached storage with web cache communication protocol/anycast and file handle redundancy |
US7266556B1 (en) | 2000-12-29 | 2007-09-04 | Intel Corporation | Failover architecture for a distributed storage system |
US7266555B1 (en) * | 2000-03-03 | 2007-09-04 | Intel Corporation | Methods and apparatus for accessing remote storage through use of a local device |
US7281168B1 (en) | 2000-03-03 | 2007-10-09 | Intel Corporation | Failover architecture for local devices that access remote storage |
US7280995B1 (en) | 1999-08-05 | 2007-10-09 | Oracle International Corporation | On-the-fly format conversion |
US20070294687A1 (en) * | 2006-06-19 | 2007-12-20 | International Business Machines Corporation | File manager integration of uninstallation feature |
US7340610B1 (en) * | 2004-08-31 | 2008-03-04 | Hitachi, Ltd. | Trusted time stamping storage system |
US20080072210A1 (en) * | 2006-09-19 | 2008-03-20 | Darren Rush | Notification system for source code discovery |
US7356768B1 (en) | 2002-11-27 | 2008-04-08 | Adobe Systems Incorporated | Using document templates to assemble a collection of documents |
US20080091703A1 (en) * | 2006-10-16 | 2008-04-17 | Oracle International Corporation | Managing compound XML documents in a repository |
US20080126434A1 (en) * | 2006-08-03 | 2008-05-29 | Mustafa Uysal | Protocol virtualization for a network file system |
US7389493B1 (en) | 2000-05-12 | 2008-06-17 | Oracle International Corporation | Categories on a per instance basis |
US20080147736A1 (en) * | 2000-03-29 | 2008-06-19 | Mark Dane | Method and apparatus for sending and tracking resume data sent via URL |
US7418435B1 (en) | 1999-08-05 | 2008-08-26 | Oracle International Corporation | Multi-model access to data |
US7428540B1 (en) * | 2000-03-03 | 2008-09-23 | Intel Corporation | Network storage system |
US20080250057A1 (en) * | 2005-09-27 | 2008-10-09 | Rothstein Russell I | Data Table Management System and Methods Useful Therefor |
US7483979B1 (en) * | 2001-01-16 | 2009-01-27 | International Business Machines Corporation | Method and system for virtualizing metadata between disparate systems |
US7546354B1 (en) * | 2001-07-06 | 2009-06-09 | Emc Corporation | Dynamic network based storage with high availability |
US20090189441A1 (en) * | 2008-01-29 | 2009-07-30 | Paul Degoul | Distributed electrical/electronic architectures for brake-by-wire brake systems |
US20090210431A1 (en) * | 2007-11-12 | 2009-08-20 | Attune Systems, Inc. | Load Sharing Cluster File Systems |
US20090241046A1 (en) * | 2008-03-18 | 2009-09-24 | Steven Nielsen | Virtual white lines for delimiting planned excavation sites |
US20090238417A1 (en) * | 2008-03-18 | 2009-09-24 | Nielsen Steven E | Virtual white lines for indicating planned excavation sites on electronic images |
US20090254592A1 (en) * | 2007-11-12 | 2009-10-08 | Attune Systems, Inc. | Non-Disruptive File Migration |
US20090292734A1 (en) * | 2001-01-11 | 2009-11-26 | F5 Networks, Inc. | Rule based aggregation of files and transactions in a switched file system |
US7725878B1 (en) | 2000-05-12 | 2010-05-25 | Oracle International Corporation | Property bundles on a per instance basis |
US20100205554A1 (en) * | 2009-02-11 | 2010-08-12 | Certusview Technologies, Llc | Virtual white lines (vwl) application for indicating an area of planned excavation |
US20100205555A1 (en) * | 2009-02-11 | 2010-08-12 | Certusview Technologies, Llc | Virtual white lines (vwl) for delimiting planned excavation sites of staged excavation projects |
US7797310B2 (en) | 2006-10-16 | 2010-09-14 | Oracle International Corporation | Technique to estimate the cost of streaming evaluation of XPaths |
US7805422B2 (en) | 2005-02-28 | 2010-09-28 | Microsoft Corporation | Change notification query multiplexing |
US20100324967A1 (en) * | 2009-02-11 | 2010-12-23 | Certusview Technologies, Llc | Management system, and associated methods and apparatus, for dispatching tickets, receiving field information, and performing a quality assessment for underground facility locate and/or marking operations |
US7917534B2 (en) | 2003-08-21 | 2011-03-29 | Microsoft Corporation | Systems and methods for extensions and inheritance for units of information manageable by a hardware/software interface system |
US7921076B2 (en) | 2004-12-15 | 2011-04-05 | Oracle International Corporation | Performing an action in response to a file system event |
US7930277B2 (en) | 2004-04-21 | 2011-04-19 | Oracle International Corporation | Cost-based optimizer for an XML data repository within a database |
US7958112B2 (en) | 2008-08-08 | 2011-06-07 | Oracle International Corporation | Interleaving query transformations for XML indexes |
US20110218932A1 (en) * | 1997-12-21 | 2011-09-08 | De Hilster David S | System and Method for Interactively Entering Data Into the Database |
US8046424B2 (en) | 2003-08-21 | 2011-10-25 | Microsoft Corporation | Systems and methods for the utilization of metadata for synchronization optimization |
US20110289055A1 (en) * | 2010-05-24 | 2011-11-24 | Microsoft Corporation | Linked Databases |
US8073841B2 (en) | 2005-10-07 | 2011-12-06 | Oracle International Corporation | Optimizing correlated XML extracts |
US8102980B2 (en) | 2005-04-30 | 2012-01-24 | Oracle International Corporation | Revenue management systems and methods with bill and account suppression |
US8117358B2 (en) | 2005-07-28 | 2012-02-14 | Oracle International Corporation | Revenue management system and method utilizing database backup |
US8116326B2 (en) | 2005-06-28 | 2012-02-14 | Oracle International Corporation | Revenue management system and method |
US8166101B2 (en) | 2003-08-21 | 2012-04-24 | Microsoft Corporation | Systems and methods for the implementation of a synchronization schemas for units of information manageable by a hardware/software interface system |
USRE43346E1 (en) | 2001-01-11 | 2012-05-01 | F5 Networks, Inc. | Transaction aggregation in a switched file system |
US8195760B2 (en) * | 2001-01-11 | 2012-06-05 | F5 Networks, Inc. | File aggregation in a switched file system |
US8204860B1 (en) | 2010-02-09 | 2012-06-19 | F5 Networks, Inc. | Methods and systems for snapshot reconstitution |
US8223777B2 (en) | 2005-11-15 | 2012-07-17 | Oracle International Corporation | Gateway for achieving low latency and high availability in a real time event processing system |
US8229932B2 (en) | 2003-09-04 | 2012-07-24 | Oracle International Corporation | Storing XML documents efficiently in an RDBMS |
US8238696B2 (en) | 2003-08-21 | 2012-08-07 | Microsoft Corporation | Systems and methods for the implementation of a digital images schema for organizing units of information manageable by a hardware/software interface system |
US20120203595A1 (en) * | 2011-02-09 | 2012-08-09 | VisionEdge Marketing | Computer Readable Medium, File Server System, and Method for Market Segment Analysis, Selection, and Investment |
US20120303628A1 (en) * | 2011-05-24 | 2012-11-29 | Brian Silvola | Partitioned database model to increase the scalability of an information system |
US8352785B1 (en) | 2007-12-13 | 2013-01-08 | F5 Networks, Inc. | Methods for generating a unified virtual snapshot and systems thereof |
US8397059B1 (en) | 2005-02-04 | 2013-03-12 | F5 Networks, Inc. | Methods and apparatus for implementing authentication |
US8396895B2 (en) | 2001-01-11 | 2013-03-12 | F5 Networks, Inc. | Directory aggregation for files distributed over a plurality of servers in a switched file system |
US8396836B1 (en) | 2011-06-30 | 2013-03-12 | F5 Networks, Inc. | System for mitigating file virtualization storage import latency |
US8417681B1 (en) | 2001-01-11 | 2013-04-09 | F5 Networks, Inc. | Aggregated lock management for locking aggregated files in a switched file system |
US8417746B1 (en) | 2006-04-03 | 2013-04-09 | F5 Networks, Inc. | File system management with enhanced searchability |
US8433735B2 (en) | 2005-01-20 | 2013-04-30 | F5 Networks, Inc. | Scalable system for partitioning and accessing metadata over multiple servers |
US8463850B1 (en) | 2011-10-26 | 2013-06-11 | F5 Networks, Inc. | System and method of algorithmically generating a server side transaction identifier |
US8549582B1 (en) | 2008-07-11 | 2013-10-01 | F5 Networks, Inc. | Methods for handling a multi-protocol content name and systems thereof |
US8548953B2 (en) | 2007-11-12 | 2013-10-01 | F5 Networks, Inc. | File deduplication using storage tiers |
US8578399B2 (en) | 2004-07-30 | 2013-11-05 | Microsoft Corporation | Method, system, and apparatus for providing access to workbook models through remote function cells |
US8682916B2 (en) | 2007-05-25 | 2014-03-25 | F5 Networks, Inc. | Remote file virtualization in a switched file system |
US8694510B2 (en) | 2003-09-04 | 2014-04-08 | Oracle International Corporation | Indexing XML documents efficiently |
US8738591B2 (en) | 2002-03-22 | 2014-05-27 | Oracle International Corporation | Sorting transactions in a memory object store |
US20150066852A1 (en) * | 2013-08-27 | 2015-03-05 | Netapp, Inc. | Detecting out-of-band (oob) changes when replicating a source file system using an in-line system |
US9020912B1 (en) | 2012-02-20 | 2015-04-28 | F5 Networks, Inc. | Methods for accessing data in a compressed file system and devices thereof |
US9183321B2 (en) | 2006-10-16 | 2015-11-10 | Oracle International Corporation | Managing compound XML documents in a repository |
US9195500B1 (en) | 2010-02-09 | 2015-11-24 | F5 Networks, Inc. | Methods for seamless storage importing and devices thereof |
US9286298B1 (en) | 2010-10-14 | 2016-03-15 | F5 Networks, Inc. | Methods for enhancing management of backup data sets and devices thereof |
US9300692B2 (en) | 2013-08-27 | 2016-03-29 | Netapp, Inc. | System and method for implementing data migration while preserving security policies of a source filer |
US9304997B2 (en) | 2013-08-27 | 2016-04-05 | Netapp, Inc. | Asynchronously migrating a file system |
US9311314B2 (en) | 2013-08-27 | 2016-04-12 | Netapp, Inc. | System and method for migrating data from a source file system to a destination file system with use of attribute manipulation |
US9355036B2 (en) | 2012-09-18 | 2016-05-31 | Netapp, Inc. | System and method for operating a system to cache a networked file system utilizing tiered storage and customizable eviction policies based on priority and tiers |
US9519501B1 (en) | 2012-09-30 | 2016-12-13 | F5 Networks, Inc. | Hardware assisted flow acceleration and L2 SMAC management in a heterogeneous distributed multi-tenant virtualized clustered system |
US9519879B1 (en) * | 2012-08-24 | 2016-12-13 | Tibco Software Inc. | Just in time compilation (JIT) for business process execution |
US9554418B1 (en) | 2013-02-28 | 2017-01-24 | F5 Networks, Inc. | Device for topology hiding of a visited network |
USRE47019E1 (en) | 2010-07-14 | 2018-08-28 | F5 Networks, Inc. | Methods for DNSSEC proxying and deployment amelioration and systems thereof |
US10182013B1 (en) | 2014-12-01 | 2019-01-15 | F5 Networks, Inc. | Methods for managing progressive image delivery and devices thereof |
US10375155B1 (en) | 2013-02-19 | 2019-08-06 | F5 Networks, Inc. | System and method for achieving hardware acceleration for asymmetric flow connections |
US10404698B1 (en) | 2016-01-15 | 2019-09-03 | F5 Networks, Inc. | Methods for adaptive organization of web application access points in webtops and devices thereof |
US10412198B1 (en) | 2016-10-27 | 2019-09-10 | F5 Networks, Inc. | Methods for improved transmission control protocol (TCP) performance visibility and devices thereof |
US10567492B1 (en) | 2017-05-11 | 2020-02-18 | F5 Networks, Inc. | Methods for load balancing in a federated identity environment and devices thereof |
US10721269B1 (en) | 2009-11-06 | 2020-07-21 | F5 Networks, Inc. | Methods and system for returning requests with javascript for clients before passing a request to a server |
US10797888B1 (en) | 2016-01-20 | 2020-10-06 | F5 Networks, Inc. | Methods for secured SCEP enrollment for client devices and devices thereof |
CN111914105A (en) * | 2019-05-08 | 2020-11-10 | 青岛海信移动通信技术股份有限公司 | File query method and device and electronic equipment |
US10833943B1 (en) | 2018-03-01 | 2020-11-10 | F5 Networks, Inc. | Methods for service chaining and devices thereof |
US10834065B1 (en) | 2015-03-31 | 2020-11-10 | F5 Networks, Inc. | Methods for SSL protected NTLM re-authentication and devices thereof |
US10853333B2 (en) | 2013-08-27 | 2020-12-01 | Netapp Inc. | System and method for developing and implementing a migration plan for migrating a file system |
US10860529B2 (en) | 2014-08-11 | 2020-12-08 | Netapp Inc. | System and method for planning and configuring a file system migration |
US11223689B1 (en) | 2018-01-05 | 2022-01-11 | F5 Networks, Inc. | Methods for multipath transmission control protocol (MPTCP) based session migration and devices thereof |
US11838851B1 (en) | 2014-07-15 | 2023-12-05 | F5, Inc. | Methods for managing L7 traffic classification and devices thereof |
US11895138B1 (en) | 2015-02-02 | 2024-02-06 | F5, Inc. | Methods for improving web scanner accuracy and devices thereof |
Families Citing this family (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8635590B1 (en) * | 1998-10-07 | 2014-01-21 | Open Invention Network, Llc | Adaptively shrinking software |
EP1876542A3 (en) | 1999-08-05 | 2008-07-30 | Oracle Corporation | Internet file system |
AU774090B2 (en) * | 1999-08-05 | 2004-06-17 | Oracle International Corporation | Internet file system |
US6795824B1 (en) * | 2000-10-31 | 2004-09-21 | Radiant Data Corporation | Independent storage architecture |
US6928426B2 (en) * | 2000-12-30 | 2005-08-09 | Intel Corporation | Method and apparatus to improve file management |
US7158971B1 (en) | 2001-03-07 | 2007-01-02 | Thomas Layne Bascom | Method for searching document objects on a network |
US7386792B1 (en) | 2001-03-07 | 2008-06-10 | Thomas Layne Bascom | System and method for collecting, storing, managing and providing categorized information related to a document object |
WO2002082312A2 (en) * | 2001-04-06 | 2002-10-17 | International Business Machines Corporation | A method for standardized file-based access to databases, enterprise java beans and content management systems |
JP4100968B2 (en) * | 2002-06-06 | 2008-06-11 | 株式会社日立製作所 | Data mapping management device |
WO2004097686A1 (en) * | 2003-04-24 | 2004-11-11 | Neopath Networks, Inc. | Transparent file replication using namespace replication |
US7346664B2 (en) * | 2003-04-24 | 2008-03-18 | Neopath Networks, Inc. | Transparent file migration using namespace replication |
US7831641B2 (en) * | 2003-04-24 | 2010-11-09 | Neopath Networks, Inc. | Large file support for a network file server |
US7072917B2 (en) * | 2003-04-24 | 2006-07-04 | Neopath Networks, Inc. | Extended storage capacity for a network file server |
US7587422B2 (en) * | 2003-04-24 | 2009-09-08 | Neopath Networks, Inc. | Transparent file replication using namespace replication |
US20050015383A1 (en) * | 2003-07-15 | 2005-01-20 | Microsoft Corporation | Method and system for accessing database objects in polyarchical relationships using data path expressions |
US7814047B2 (en) | 2003-08-25 | 2010-10-12 | Oracle International Corporation | Direct loading of semistructured data |
US8219569B2 (en) | 2003-08-25 | 2012-07-10 | Oracle International Corporation | In-place evolution of XML schemes |
US8539081B2 (en) * | 2003-09-15 | 2013-09-17 | Neopath Networks, Inc. | Enabling proxy services using referral mechanisms |
US7720796B2 (en) * | 2004-04-23 | 2010-05-18 | Neopath Networks, Inc. | Directory and file mirroring for migration, snapshot, and replication |
US8190741B2 (en) * | 2004-04-23 | 2012-05-29 | Neopath Networks, Inc. | Customizing a namespace in a decentralized storage environment |
US8195627B2 (en) * | 2004-04-23 | 2012-06-05 | Neopath Networks, Inc. | Storage policy monitoring for a storage network |
US7734606B2 (en) * | 2004-09-15 | 2010-06-08 | Graematter, Inc. | System and method for regulatory intelligence |
EP1805665B1 (en) | 2004-09-30 | 2018-03-28 | Cisco Technology, Inc. | Storage policy monitoring for a storage network |
US7496565B2 (en) | 2004-11-30 | 2009-02-24 | Microsoft Corporation | Method and system for maintaining namespace consistency with a file system |
US7610307B2 (en) | 2004-11-30 | 2009-10-27 | Microsoft Corporation | Method and system of detecting file system namespace changes and restoring consistency |
US7516122B2 (en) * | 2004-12-02 | 2009-04-07 | Computer Associates Think, Inc. | System and method for implementing a management component that exposes attributes |
US8832697B2 (en) * | 2005-06-29 | 2014-09-09 | Cisco Technology, Inc. | Parallel filesystem traversal for transparent mirroring of directories and files |
US8131689B2 (en) * | 2005-09-30 | 2012-03-06 | Panagiotis Tsirigotis | Accumulating access frequency and file attributes for supporting policy based storage management |
US8041676B2 (en) * | 2005-12-02 | 2011-10-18 | International Business Machines Corporation | Backup and restore of file system objects of unknown type |
US7870163B2 (en) | 2006-09-28 | 2011-01-11 | Oracle International Corporation | Implementation of backward compatible XML schema evolution in a relational database system |
AU2011293014B2 (en) * | 2010-08-25 | 2014-08-14 | Intel Corporation | Method and system for extending data storage system functions |
WO2012111129A1 (en) * | 2011-02-17 | 2012-08-23 | 三菱電機株式会社 | Database connection device |
US9584877B2 (en) * | 2011-06-16 | 2017-02-28 | Microsoft Technology Licensing, Llc | Light-weight validation of native images |
US8843676B2 (en) * | 2012-06-27 | 2014-09-23 | International Business Machines Corporation | Optimizing an operating system I/O operation that pertains to a specific program and file |
US9384202B1 (en) * | 2012-10-01 | 2016-07-05 | Amazon Technologies, Inc. | Gateway module to access different types of databases |
US9881109B2 (en) * | 2015-05-04 | 2018-01-30 | Ariba, Inc. | Simulating live production load |
US11210134B2 (en) | 2016-12-27 | 2021-12-28 | Western Digital Technologies, Inc. | Atomic execution unit for object storage |
JP7072275B2 (en) * | 2020-09-02 | 2022-05-20 | 株式会社ビジュアル・プロセッシング・ジャパン | A method used in programs and information processing devices that convey data between a file system and a database. |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5689698A (en) * | 1995-10-20 | 1997-11-18 | Ncr Corporation | Method and apparatus for managing shared data using a data surrogate and obtaining cost parameters from a data dictionary by evaluating a parse tree object |
US5694598A (en) * | 1994-10-12 | 1997-12-02 | U S West Technologies, Inc. | Method for mapping data between a relational format and an object-oriented format |
US5737736A (en) * | 1994-07-29 | 1998-04-07 | Oracle Corporation | Method and apparatus for storing objects using a c-structure and a bind descriptor |
US5761673A (en) * | 1996-01-31 | 1998-06-02 | Oracle Corporation | Method and apparatus for generating dynamic web pages by invoking a predefined procedural package stored in a database |
US5805804A (en) * | 1994-11-21 | 1998-09-08 | Oracle Corporation | Method and apparatus for scalable, high bandwidth storage retrieval and transportation of multimedia data on a network |
US5809266A (en) * | 1994-07-29 | 1998-09-15 | Oracle Corporation | Method and apparatus for generating reports using declarative tools |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA2067633C (en) * | 1991-07-24 | 1996-10-01 | Eric Jonathan Bauer | Method and apparatus for accessing a computer-based file system |
US6144990A (en) * | 1996-12-23 | 2000-11-07 | International Business Machines Corporation | Computer apparatus and method for communicating between software applications and computers on the world-wide web using universal variable handling |
US5937406A (en) * | 1997-01-31 | 1999-08-10 | Informix Software, Inc. | File system interface to a database |
US6237031B1 (en) * | 1997-03-25 | 2001-05-22 | Intel Corporation | System for dynamically controlling a network proxy |
-
1997
- 1997-01-31 US US08/792,139 patent/US5937406A/en not_active Expired - Lifetime
-
1998
- 1998-01-27 EP EP98300577A patent/EP0856803B1/en not_active Expired - Lifetime
- 1998-01-27 DE DE69839744T patent/DE69839744D1/en not_active Expired - Lifetime
- 1998-01-28 AU AU52757/98A patent/AU739236B2/en not_active Ceased
- 1998-01-29 CA CA002228210A patent/CA2228210C/en not_active Expired - Lifetime
- 1998-01-30 BR BR9800065A patent/BR9800065A/en not_active IP Right Cessation
- 1998-01-30 JP JP10018637A patent/JPH10247155A/en active Pending
-
1999
- 1999-06-25 US US09/344,500 patent/US6442548B1/en not_active Expired - Lifetime
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5737736A (en) * | 1994-07-29 | 1998-04-07 | Oracle Corporation | Method and apparatus for storing objects using a c-structure and a bind descriptor |
US5809266A (en) * | 1994-07-29 | 1998-09-15 | Oracle Corporation | Method and apparatus for generating reports using declarative tools |
US5694598A (en) * | 1994-10-12 | 1997-12-02 | U S West Technologies, Inc. | Method for mapping data between a relational format and an object-oriented format |
US5805804A (en) * | 1994-11-21 | 1998-09-08 | Oracle Corporation | Method and apparatus for scalable, high bandwidth storage retrieval and transportation of multimedia data on a network |
US5689698A (en) * | 1995-10-20 | 1997-11-18 | Ncr Corporation | Method and apparatus for managing shared data using a data surrogate and obtaining cost parameters from a data dictionary by evaluating a parse tree object |
US5761673A (en) * | 1996-01-31 | 1998-06-02 | Oracle Corporation | Method and apparatus for generating dynamic web pages by invoking a predefined procedural package stored in a database |
Non-Patent Citations (6)
Title |
---|
"Databases and Multimedia," Joe Salemi, Network VAR, v3, n10, p. 29(6), available on-line at http://www.dialogweb.com, Dialog File 275, Oct. 1995. |
"Large Objects Support in POSTGRES," Stonebraker et al., Proceedings of the Ninth International Conference on Data Engineering, Vienna, Austria, pp. 355-362, Apr. 1993. |
Databases and Multimedia, Joe Salemi, Network VAR, v3, n10, p. 29(6), available on line at http://www.dialogweb.com, Dialog File 275, Oct. 1995. * |
Large Objects Support in POSTGRES, Stonebraker et al., Proceedings of the Ninth International Conference on Data Engineering, Vienna, Austria, pp. 355 362, Apr. 1993. * |
Olson, Michael A. "The Design and Implementation of the Inversion File System," Sequoia 2000 Technical Report, Report #93/28, University of California at Berkeley, Apr. 1993. |
Olson, Michael A. The Design and Implementation of the Inversion File System, Sequoia 2000 Technical Report, Report 93/28, University of California at Berkeley, Apr. 1993. * |
Cited By (306)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6442548B1 (en) * | 1997-01-31 | 2002-08-27 | International Business Machines Corporation | Database interface for database unaware applications |
US20060190478A1 (en) * | 1997-05-14 | 2006-08-24 | Portal Software, Inc. | Method and apparatus for object oriented storage and retrieval of data from a relational database |
US7809768B2 (en) | 1997-05-14 | 2010-10-05 | Oracle International Corporation | Method and apparatus for object oriented storage and retrieval of data from a relational database |
US20030204514A1 (en) * | 1997-05-14 | 2003-10-30 | Portal Software, Inc. | Method and apparatus for object oriented storage and retrieval of data from a relational database |
US7089262B2 (en) * | 1997-05-14 | 2006-08-08 | Portal Software, Inc. | Method and apparatus for object oriented storage and retrieval of data from a relational database |
US7089489B1 (en) * | 1997-06-02 | 2006-08-08 | Telefonaktiebolaget Lm Ericsson (Publ) | Method and arrangement for browsing documents in a database |
US6336120B1 (en) * | 1997-08-26 | 2002-01-01 | International Business Machines Corporation | Method and system for supporting hierarchical storage management (HSM) file system across multiple platforms |
US6789080B1 (en) | 1997-11-14 | 2004-09-07 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US7937409B2 (en) | 1997-11-14 | 2011-05-03 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US8005843B2 (en) | 1997-11-14 | 2011-08-23 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US6415278B1 (en) * | 1997-11-14 | 2002-07-02 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US7401067B2 (en) | 1997-11-14 | 2008-07-15 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US20080252912A1 (en) * | 1997-11-14 | 2008-10-16 | Adobe Systems Incorporated | Retrieving Documents Transitively Linked To An Initial Document |
US6567799B2 (en) * | 1997-11-14 | 2003-05-20 | Adobe Systems Incorporated | Retrieving documents transitively linked to an initial document |
US20080222091A1 (en) * | 1997-11-14 | 2008-09-11 | Adobe Systems Incorporated | Retrieving Documents Transitively Linked to an Initial Document |
US6260039B1 (en) | 1997-12-15 | 2001-07-10 | International Business Machines Corporation | Web interface and method for accessing directory information |
US6208986B1 (en) * | 1997-12-15 | 2001-03-27 | International Business Machines Corporation | Web interface and method for accessing and displaying directory information |
US6195666B1 (en) | 1997-12-15 | 2001-02-27 | International Business Machines Corporation | Web interface and method for displaying directory information |
US6192362B1 (en) | 1997-12-15 | 2001-02-20 | International Business Machines Corporation | System and method for creating a search form for accessing directory information |
US20110218932A1 (en) * | 1997-12-21 | 2011-09-08 | De Hilster David S | System and Method for Interactively Entering Data Into the Database |
US7958059B2 (en) | 1997-12-21 | 2011-06-07 | Kenexa Brassring, Inc. | System and method for interactively entering data into a database |
US9361361B2 (en) | 1997-12-21 | 2016-06-07 | Kenexa Technology, Inc. | Interactively entering data into the database |
US20050262122A1 (en) * | 1997-12-21 | 2005-11-24 | Brassring, Llc | System and method for interactively entering data into a database |
US6393461B1 (en) * | 1998-02-27 | 2002-05-21 | Fujitsu Limited | Communication management system for a chat system |
US6119133A (en) * | 1998-04-16 | 2000-09-12 | International Business Machines Corporation | Extensible method and apparatus for retrieving files having unique record identifiers as file names during program execution |
US6185567B1 (en) * | 1998-05-29 | 2001-02-06 | The Trustees Of The University Of Pennsylvania | Authenticated access to internet based research and data services |
US6321219B1 (en) * | 1998-08-14 | 2001-11-20 | Microsoft Corporation | Dynamic symbolic links for computer file systems |
US7502782B2 (en) * | 1999-02-18 | 2009-03-10 | Oracle International Corporation | Database-managed file system |
US20050091287A1 (en) * | 1999-02-18 | 2005-04-28 | Eric Sedlar | Database-managed file system |
US6922708B1 (en) | 1999-02-18 | 2005-07-26 | Oracle International Corporation | File system that supports transactions |
US6584497B1 (en) * | 1999-07-28 | 2003-06-24 | International Business Machines Corporation | Method, system, and program for returning a file requested through a network connection |
US20080215528A1 (en) * | 1999-08-05 | 2008-09-04 | Eric Sedlar | Multi-Model Access To Data |
US7418435B1 (en) | 1999-08-05 | 2008-08-26 | Oracle International Corporation | Multi-model access to data |
US8335775B1 (en) | 1999-08-05 | 2012-12-18 | Oracle International Corporation | Versioning in internet file system |
US7620620B1 (en) * | 1999-08-05 | 2009-11-17 | Oracle International Corporation | Basing directory contents on a query that is associated with a file identifier |
US7280995B1 (en) | 1999-08-05 | 2007-10-09 | Oracle International Corporation | On-the-fly format conversion |
US8065320B2 (en) | 1999-08-05 | 2011-11-22 | Oracle International Corporation | Multi-model access to data |
US6549916B1 (en) | 1999-08-05 | 2003-04-15 | Oracle Corporation | Event notification system tied to a file system |
US6611847B1 (en) * | 1999-12-30 | 2003-08-26 | Unisys Corporation | Method for dynamically linking two objects in two different models |
US7080086B2 (en) * | 2000-02-09 | 2006-07-18 | International Business Machines Corporation | Interaction with query data |
US7506034B2 (en) * | 2000-03-03 | 2009-03-17 | Intel Corporation | Methods and apparatus for off loading content servers through direct file transfer from a storage center to an end-user |
US7281168B1 (en) | 2000-03-03 | 2007-10-09 | Intel Corporation | Failover architecture for local devices that access remote storage |
US7203731B1 (en) | 2000-03-03 | 2007-04-10 | Intel Corporation | Dynamic replication of files in a network storage system |
US6952737B1 (en) | 2000-03-03 | 2005-10-04 | Intel Corporation | Method and apparatus for accessing remote storage in a distributed storage cluster architecture |
US20010047400A1 (en) * | 2000-03-03 | 2001-11-29 | Coates Joshua L. | Methods and apparatus for off loading content servers through direct file transfer from a storage center to an end-user |
US20050246393A1 (en) * | 2000-03-03 | 2005-11-03 | Intel Corporation | Distributed storage cluster architecture |
US7266555B1 (en) * | 2000-03-03 | 2007-09-04 | Intel Corporation | Methods and apparatus for accessing remote storage through use of a local device |
US7428540B1 (en) * | 2000-03-03 | 2008-09-23 | Intel Corporation | Network storage system |
US7590747B2 (en) | 2000-03-03 | 2009-09-15 | Intel Corporation | Distributed storage cluster architecture |
US7877354B2 (en) | 2000-03-29 | 2011-01-25 | Kenexa Brassring, Inc. | Method and apparatus for sending and tracking resume data sent via URL |
US10860737B2 (en) | 2000-03-29 | 2020-12-08 | International Business Machines Corporation | Sending and tracking document data sent via URL |
US20110106762A1 (en) * | 2000-03-29 | 2011-05-05 | Kenexa Brassring, Inc. | Method and apparatus for sending and tracking resume data sent via url |
US20080147736A1 (en) * | 2000-03-29 | 2008-06-19 | Mark Dane | Method and apparatus for sending and tracking resume data sent via URL |
US7310642B2 (en) | 2000-05-03 | 2007-12-18 | Microsoft Corporation | Methods, apparatus and data structures for facilitating a natural language interface to stored information |
US6999963B1 (en) | 2000-05-03 | 2006-02-14 | Microsoft Corporation | Methods, apparatus, and data structures for annotating a database design schema and/or indexing annotations |
US20050197828A1 (en) * | 2000-05-03 | 2005-09-08 | Microsoft Corporation | Methods, apparatus and data structures for facilitating a natural language interface to stored information |
US7512609B2 (en) | 2000-05-03 | 2009-03-31 | Microsoft Corporation | Methods, apparatus, and data structures for annotating a database design schema and/or indexing annotations |
US6993475B1 (en) | 2000-05-03 | 2006-01-31 | Microsoft Corporation | Methods, apparatus, and data structures for facilitating a natural language interface to stored information |
US7640254B2 (en) | 2000-05-03 | 2009-12-29 | Microsoft Corporation | Methods, apparatus, and data structures for annotating a database design schema and/or indexing annotations |
US20030195866A1 (en) * | 2000-05-12 | 2003-10-16 | Long David J. | Transaction-aware caching for access control metadata |
US7240329B1 (en) | 2000-05-12 | 2007-07-03 | Oracle International Corporation | Policies on a per instance basis |
US7725878B1 (en) | 2000-05-12 | 2010-05-25 | Oracle International Corporation | Property bundles on a per instance basis |
US7185005B1 (en) | 2000-05-12 | 2007-02-27 | Oracle International Corporation | Nested transactions in a file system |
US8745017B2 (en) | 2000-05-12 | 2014-06-03 | Oracle International Corporation | Transaction-aware caching for access control metadata |
US7421541B2 (en) | 2000-05-12 | 2008-09-02 | Oracle International Corporation | Version management of cached permissions metadata |
US7203709B2 (en) * | 2000-05-12 | 2007-04-10 | Oracle International Corporation | Transaction-aware caching for access control metadata |
US7389493B1 (en) | 2000-05-12 | 2008-06-17 | Oracle International Corporation | Categories on a per instance basis |
US7987217B2 (en) * | 2000-05-12 | 2011-07-26 | Oracle International Corporation | Transaction-aware caching for document metadata |
US20030200197A1 (en) * | 2000-05-12 | 2003-10-23 | Oracle International Corporation | Transaction-aware caching for document metadata |
US20030195865A1 (en) * | 2000-05-12 | 2003-10-16 | Long David J. | Transaction-aware caching for access control metadata |
US6958903B1 (en) | 2000-05-22 | 2005-10-25 | Cheryl Henry | Data storage device reader and method of using same |
US20070035918A1 (en) * | 2000-05-22 | 2007-02-15 | Cheryl Henry | Data storage device reader and method of using same |
WO2002031699A1 (en) * | 2000-10-10 | 2002-04-18 | Velquest Corporation | Process-linked data management system |
US6581020B1 (en) * | 2000-10-10 | 2003-06-17 | Velquest Corporation | Process-linked data management system |
US6850959B1 (en) * | 2000-10-26 | 2005-02-01 | Microsoft Corporation | Method and system for transparently extending non-volatile storage |
US6983263B1 (en) | 2000-11-10 | 2006-01-03 | General Electric Capital Corporation | Electronic boardroom |
US7058648B1 (en) | 2000-12-01 | 2006-06-06 | Oracle International Corporation | Hierarchy-based secured document repository |
US7266556B1 (en) | 2000-12-29 | 2007-09-04 | Intel Corporation | Failover architecture for a distributed storage system |
US8195760B2 (en) * | 2001-01-11 | 2012-06-05 | F5 Networks, Inc. | File aggregation in a switched file system |
USRE43346E1 (en) | 2001-01-11 | 2012-05-01 | F5 Networks, Inc. | Transaction aggregation in a switched file system |
US20090292734A1 (en) * | 2001-01-11 | 2009-11-26 | F5 Networks, Inc. | Rule based aggregation of files and transactions in a switched file system |
US8396895B2 (en) | 2001-01-11 | 2013-03-12 | F5 Networks, Inc. | Directory aggregation for files distributed over a plurality of servers in a switched file system |
US8417681B1 (en) | 2001-01-11 | 2013-04-09 | F5 Networks, Inc. | Aggregated lock management for locking aggregated files in a switched file system |
US8195769B2 (en) | 2001-01-11 | 2012-06-05 | F5 Networks, Inc. | Rule based aggregation of files and transactions in a switched file system |
US7483979B1 (en) * | 2001-01-16 | 2009-01-27 | International Business Machines Corporation | Method and system for virtualizing metadata between disparate systems |
US20020174141A1 (en) * | 2001-05-16 | 2002-11-21 | Shing-Ming Chen | Method and system for automated data manipulation in an electronic spreadsheet program or the like |
US20030009473A1 (en) * | 2001-05-31 | 2003-01-09 | Ham Jungkyoo Pamela | Method, system, and computer program product for providing an extensible file system for accessing a foreign file system from a local data processing system |
US6988101B2 (en) | 2001-05-31 | 2006-01-17 | International Business Machines Corporation | Method, system, and computer program product for providing an extensible file system for accessing a foreign file system from a local data processing system |
US7546354B1 (en) * | 2001-07-06 | 2009-06-09 | Emc Corporation | Dynamic network based storage with high availability |
US7117504B2 (en) | 2001-07-10 | 2006-10-03 | Microsoft Corporation | Application program interface that enables communication for a network software platform |
US20030177282A1 (en) * | 2001-07-10 | 2003-09-18 | Andres Hejlsberg | Application program interface for network software platform |
US20030028685A1 (en) * | 2001-07-10 | 2003-02-06 | Smith Adam W. | Application program interface for network software platform |
US7165239B2 (en) | 2001-07-10 | 2007-01-16 | Microsoft Corporation | Application program interface for network software platform |
US6920461B2 (en) * | 2001-07-10 | 2005-07-19 | Microsoft Corp. | Application program interface for network software platform |
US20050246716A1 (en) * | 2001-07-10 | 2005-11-03 | Microsoft Corporation | Application program interface for network software platform |
US7546602B2 (en) | 2001-07-10 | 2009-06-09 | Microsoft Corporation | Application program interface for network software platform |
US7013469B2 (en) | 2001-07-10 | 2006-03-14 | Microsoft Corporation | Application program interface for network software platform |
US20030167355A1 (en) * | 2001-07-10 | 2003-09-04 | Smith Adam W. | Application program interface for network software platform |
US20030167356A1 (en) * | 2001-07-10 | 2003-09-04 | Smith Adam W. | Application program interface for network software platform |
US20030167277A1 (en) * | 2001-07-10 | 2003-09-04 | Anders Hejlsberg | Application program interface for network software platform |
US8191040B2 (en) | 2001-07-10 | 2012-05-29 | Microsoft Corporation | Application program interface for network software platform |
US7555757B2 (en) | 2001-07-10 | 2009-06-30 | Microsoft Corporation | Application program interface for network software platform |
US20030172196A1 (en) * | 2001-07-10 | 2003-09-11 | Anders Hejlsberg | Application program interface for network software platform |
US7644414B2 (en) | 2001-07-10 | 2010-01-05 | Microsoft Corporation | Application program interface for network software platform |
US20080216052A1 (en) * | 2001-07-10 | 2008-09-04 | Microsoft Corporation | Application Program Interface for Network Software Platform |
US7581231B2 (en) | 2001-07-10 | 2009-08-25 | Microsoft Corporation | Computing system and method for allowing plurality of applications written in different programming languages to communicate and request resources or services via a common language runtime layer |
US7017162B2 (en) | 2001-07-10 | 2006-03-21 | Microsoft Corporation | Application program interface for network software platform |
US20040039806A1 (en) * | 2001-10-26 | 2004-02-26 | Miras Bertrand | Methods and systems for the synchronized recording and reading of data coming from a plurality of terminal devices |
US20030105745A1 (en) * | 2001-12-05 | 2003-06-05 | Davidson Jason A. | Text-file based relational database |
US20030135511A1 (en) * | 2002-01-11 | 2003-07-17 | International Business Machines Corporation | Method, apparatus, and program for separate representations of file system locations from referring file systems |
US6931410B2 (en) * | 2002-01-11 | 2005-08-16 | International Business Machines Corporation | Method, apparatus, and program for separate representations of file system locations from referring file systems |
US8738591B2 (en) | 2002-03-22 | 2014-05-27 | Oracle International Corporation | Sorting transactions in a memory object store |
US8856178B2 (en) | 2002-03-22 | 2014-10-07 | Oracle International Corporation | Committing events where transaction threads have read-only access to shared memory |
US20040044653A1 (en) * | 2002-08-27 | 2004-03-04 | Jameson Kevin Wade | Collection shortcut expander |
US7774325B2 (en) | 2002-10-17 | 2010-08-10 | Intel Corporation | Distributed network attached storage system |
US20040078466A1 (en) * | 2002-10-17 | 2004-04-22 | Coates Joshua L. | Methods and apparatus for load balancing storage nodes in a distributed network attached storage system |
US7509645B2 (en) | 2002-10-17 | 2009-03-24 | Intel Corporation | Methods and apparatus for load balancing storage nodes in a distributed network attached storage system |
US7774466B2 (en) | 2002-10-17 | 2010-08-10 | Intel Corporation | Methods and apparatus for load balancing storage nodes in a distributed storage area network system |
US20040088297A1 (en) * | 2002-10-17 | 2004-05-06 | Coates Joshua L. | Distributed network attached storage system |
US20040078465A1 (en) * | 2002-10-17 | 2004-04-22 | Coates Joshua L. | Methods and apparatus for load balancing storage nodes in a distributed stroage area network system |
US7356768B1 (en) | 2002-11-27 | 2008-04-08 | Adobe Systems Incorporated | Using document templates to assemble a collection of documents |
US9092414B2 (en) | 2002-11-27 | 2015-07-28 | Adobe Systems Incorporated | Using document templates to assemble a collection of documents |
US9842174B2 (en) | 2002-11-27 | 2017-12-12 | Adobe Systems Incorporated | Using document templates to assemble a collection of documents |
US20040128307A1 (en) * | 2002-12-30 | 2004-07-01 | Creativyst, Inc. | Method of storing and retrieving database records that stores multiple field values within directory entries of an underlying operating system |
WO2004072864A1 (en) * | 2003-02-13 | 2004-08-26 | Neurocom Pty Ltd | Dynamically configurable file display system |
US7254636B1 (en) * | 2003-03-14 | 2007-08-07 | Cisco Technology, Inc. | Method and apparatus for transparent distributed network-attached storage with web cache communication protocol/anycast and file handle redundancy |
US8131739B2 (en) | 2003-08-21 | 2012-03-06 | Microsoft Corporation | Systems and methods for interfacing application programs with an item-based storage platform |
US7743019B2 (en) * | 2003-08-21 | 2010-06-22 | Microsoft Corporation | Systems and methods for providing synchronization services for units of information manageable by a hardware/software interface system |
US8046424B2 (en) | 2003-08-21 | 2011-10-25 | Microsoft Corporation | Systems and methods for the utilization of metadata for synchronization optimization |
US20050044108A1 (en) * | 2003-08-21 | 2005-02-24 | Ashish Shah | Systems and methods for providing synchronization services for units of information manageable by a hardware/software interface system |
US8166101B2 (en) | 2003-08-21 | 2012-04-24 | Microsoft Corporation | Systems and methods for the implementation of a synchronization schemas for units of information manageable by a hardware/software interface system |
US8238696B2 (en) | 2003-08-21 | 2012-08-07 | Microsoft Corporation | Systems and methods for the implementation of a digital images schema for organizing units of information manageable by a hardware/software interface system |
US7917534B2 (en) | 2003-08-21 | 2011-03-29 | Microsoft Corporation | Systems and methods for extensions and inheritance for units of information manageable by a hardware/software interface system |
US8694510B2 (en) | 2003-09-04 | 2014-04-08 | Oracle International Corporation | Indexing XML documents efficiently |
US20050055373A1 (en) * | 2003-09-04 | 2005-03-10 | Forman George H. | Determining point-of-compromise |
US20050055226A1 (en) * | 2003-09-04 | 2005-03-10 | Mark Dane | Method and apparatus for recruitment process management |
US8229932B2 (en) | 2003-09-04 | 2012-07-24 | Oracle International Corporation | Storing XML documents efficiently in an RDBMS |
US7730073B2 (en) | 2003-10-23 | 2010-06-01 | Microsoft Corporation | System and a method for presenting related items to a user |
JP4739221B2 (en) * | 2003-10-23 | 2011-08-03 | マイクロソフト コーポレーション | System and method for presenting related items to a user |
WO2005045585A3 (en) * | 2003-10-23 | 2006-07-06 | Microsoft Corp | System and method for the presentation of items stored on a computer |
US20050091181A1 (en) * | 2003-10-23 | 2005-04-28 | Mckee Timothy P. | System and method for the presentation of items stored on a computer |
US20050091667A1 (en) * | 2003-10-23 | 2005-04-28 | Mckee Timothy P. | System and a method for presenting items to a user with a contextual presentation |
JP2007509427A (en) * | 2003-10-23 | 2007-04-12 | マイクロソフト コーポレーション | System and method for presenting related items to a user |
US7908562B2 (en) | 2003-10-23 | 2011-03-15 | Microsoft Corporation | System and a method for presenting items to a user with a contextual presentation |
US20050091225A1 (en) * | 2003-10-23 | 2005-04-28 | Mckee Timothy P. | System and a method for presenting related items to a user |
US7426734B2 (en) | 2003-10-24 | 2008-09-16 | Microsoft Corporation | Facilitating presentation functionality through a programming interface media namespace |
US20050091672A1 (en) * | 2003-10-24 | 2005-04-28 | Microsoft Corporation | Facilitating presentation functionality through a programming interface media namespace |
US8527541B2 (en) * | 2003-11-05 | 2013-09-03 | Emc Corporation | Method for mapping a flat namespace onto a hierarchical namespace using locality of reference cues |
US20050102299A1 (en) * | 2003-11-05 | 2005-05-12 | Mair David A. | Method for providing a flat view of a hierarchical namespace without requiring unique leaf names |
US20050097073A1 (en) * | 2003-11-05 | 2005-05-05 | Novell, Inc. | Method for mapping a flat namespace onto a hierarchical namespace using locality of reference cues |
US7949682B2 (en) | 2003-11-05 | 2011-05-24 | Novell, Inc. | Method for providing a flat view of a hierarchical namespace without requiring unique leaf names |
US20050160078A1 (en) * | 2004-01-16 | 2005-07-21 | International Business Machines Corporation | Method and apparatus for entity removal from a content management solution implementing time-based flagging for certainty in a relational database environment |
US8386503B2 (en) * | 2004-01-16 | 2013-02-26 | International Business Machines Corporation | Method and apparatus for entity removal from a content management solution implementing time-based flagging for certainty in a relational database environment |
US7930277B2 (en) | 2004-04-21 | 2011-04-19 | Oracle International Corporation | Cost-based optimizer for an XML data repository within a database |
US20050267853A1 (en) * | 2004-06-01 | 2005-12-01 | Microsoft Corporation | Method, system, and apparatus for exposing workbook ranges as data sources |
US7664804B2 (en) | 2004-06-01 | 2010-02-16 | Microsoft Corporation | Method, system, and apparatus for exposing workbook ranges as data sources |
US7991804B2 (en) * | 2004-07-30 | 2011-08-02 | Microsoft Corporation | Method, system, and apparatus for exposing workbooks as data sources |
US9317495B2 (en) | 2004-07-30 | 2016-04-19 | Microsoft Technology Licensing, Llc | Method, system, and apparatus for providing access to workbook models through remote function calls |
US20060024653A1 (en) * | 2004-07-30 | 2006-02-02 | Microsoft Corporation | Method, system, and apparatus for exposing workbooks as data sources |
US8578399B2 (en) | 2004-07-30 | 2013-11-05 | Microsoft Corporation | Method, system, and apparatus for providing access to workbook models through remote function cells |
US7716488B2 (en) | 2004-08-31 | 2010-05-11 | Hitachi, Ltd. | Trusted time stamping storage system |
US7340610B1 (en) * | 2004-08-31 | 2008-03-04 | Hitachi, Ltd. | Trusted time stamping storage system |
WO2006034258A1 (en) * | 2004-09-20 | 2006-03-30 | Koders, Inc. | Source code search engine |
US20100106705A1 (en) * | 2004-09-20 | 2010-04-29 | Darren Rush | Source code search engine |
US8688676B2 (en) | 2004-09-20 | 2014-04-01 | Black Duck Software, Inc. | Source code search engine |
US7725601B2 (en) * | 2004-10-12 | 2010-05-25 | International Business Machines Corporation | Apparatus, system, and method for presenting a mapping between a namespace and a set of computing resources |
US20060080465A1 (en) * | 2004-10-12 | 2006-04-13 | Conzola Vincent C | Apparatus, system, and method for presenting a mapping between a namespace and a set of computing resources |
US20060117049A1 (en) * | 2004-11-29 | 2006-06-01 | Oracle International Corporation | Processing path-based database operations |
US7627547B2 (en) | 2004-11-29 | 2009-12-01 | Oracle International Corporation | Processing path-based database operations |
US20060143177A1 (en) * | 2004-12-15 | 2006-06-29 | Oracle International Corporation | Comprehensive framework to integrate business logic into a repository |
US7921076B2 (en) | 2004-12-15 | 2011-04-05 | Oracle International Corporation | Performing an action in response to a file system event |
US8131766B2 (en) | 2004-12-15 | 2012-03-06 | Oracle International Corporation | Comprehensive framework to integrate business logic into a repository |
US8176007B2 (en) | 2004-12-15 | 2012-05-08 | Oracle International Corporation | Performing an action in response to a file system event |
US20060136509A1 (en) * | 2004-12-16 | 2006-06-22 | Syam Pannala | Techniques for transaction semantics for a database server performing file operations |
US7716260B2 (en) | 2004-12-16 | 2010-05-11 | Oracle International Corporation | Techniques for transaction semantics for a database server performing file operations |
US20060136376A1 (en) * | 2004-12-16 | 2006-06-22 | Oracle International Corporation | Infrastructure for performing file operations by a database server |
US7548918B2 (en) | 2004-12-16 | 2009-06-16 | Oracle International Corporation | Techniques for maintaining consistency for different requestors of files in a database management system |
US20060136516A1 (en) * | 2004-12-16 | 2006-06-22 | Namit Jain | Techniques for maintaining consistency for different requestors of files in a database management system |
US20060136508A1 (en) * | 2004-12-16 | 2006-06-22 | Sam Idicula | Techniques for providing locks for file operations in a database management system |
US7627574B2 (en) * | 2004-12-16 | 2009-12-01 | Oracle International Corporation | Infrastructure for performing file operations by a database server |
US8433735B2 (en) | 2005-01-20 | 2013-04-30 | F5 Networks, Inc. | Scalable system for partitioning and accessing metadata over multiple servers |
US8397059B1 (en) | 2005-02-04 | 2013-03-12 | F5 Networks, Inc. | Methods and apparatus for implementing authentication |
US7805422B2 (en) | 2005-02-28 | 2010-09-28 | Microsoft Corporation | Change notification query multiplexing |
US20060200470A1 (en) * | 2005-03-03 | 2006-09-07 | Z-Force Communications, Inc. | System and method for managing small-size files in an aggregated file system |
US8239354B2 (en) | 2005-03-03 | 2012-08-07 | F5 Networks, Inc. | System and method for managing small-size files in an aggregated file system |
US20060206452A1 (en) * | 2005-03-11 | 2006-09-14 | Microsoft Corporation | Accessing Web content from any virtualized store |
US7536390B2 (en) * | 2005-03-11 | 2009-05-19 | Microsoft Corporation | Accessing Web content from any virtualized store |
US8422651B2 (en) | 2005-04-30 | 2013-04-16 | Oracle International Corporation | Revenue management systems and methods with re-rating and rebilling |
US8798576B2 (en) | 2005-04-30 | 2014-08-05 | Oracle International Corporation | Revenue management systems and methods with enhanced rollover |
US8223935B2 (en) | 2005-04-30 | 2012-07-17 | Oracle International Corporation | Revenue management systems and methods |
US8369500B2 (en) | 2005-04-30 | 2013-02-05 | Oracle International Corporation | Revenue management systems and methods with sponsored top-up options |
US8102980B2 (en) | 2005-04-30 | 2012-01-24 | Oracle International Corporation | Revenue management systems and methods with bill and account suppression |
US8462923B2 (en) | 2005-04-30 | 2013-06-11 | Oracle International Corporation | Revenue management systems and methods with payment suspense management |
US20060294196A1 (en) * | 2005-06-27 | 2006-12-28 | Elie Feirouz | Method and system for storing a web browser application session cookie from another client application program |
US8116326B2 (en) | 2005-06-28 | 2012-02-14 | Oracle International Corporation | Revenue management system and method |
US20070005603A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Sharing state information among a plurality of file operation servers |
US7809675B2 (en) | 2005-06-29 | 2010-10-05 | Oracle International Corporation | Sharing state information among a plurality of file operation servers |
US8224837B2 (en) * | 2005-06-29 | 2012-07-17 | Oracle International Corporation | Method and mechanism for supporting virtual content in performing file operations at a RDBMS |
US20070005555A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Method and mechanism for supporting virtual content in performing file operations at a RDBMS |
US20070011207A1 (en) * | 2005-07-05 | 2007-01-11 | Vishnubhotla Prasad R | Method and system for integrating file system events into a relational database |
US8166059B2 (en) * | 2005-07-08 | 2012-04-24 | Oracle International Corporation | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US20070011167A1 (en) * | 2005-07-08 | 2007-01-11 | Muralidhar Krishnaprasad | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US20070011654A1 (en) * | 2005-07-10 | 2007-01-11 | Opperman David B | Method and apparatus for reformatting source code appearance |
US8117358B2 (en) | 2005-07-28 | 2012-02-14 | Oracle International Corporation | Revenue management system and method utilizing database backup |
US20080250057A1 (en) * | 2005-09-27 | 2008-10-09 | Rothstein Russell I | Data Table Management System and Methods Useful Therefor |
US8073841B2 (en) | 2005-10-07 | 2011-12-06 | Oracle International Corporation | Optimizing correlated XML extracts |
US8356053B2 (en) | 2005-10-20 | 2013-01-15 | Oracle International Corporation | Managing relationships between resources stored within a repository |
US20070094286A1 (en) * | 2005-10-20 | 2007-04-26 | Ravi Murthy | Managing relationships between resources stored within a repository |
US8223777B2 (en) | 2005-11-15 | 2012-07-17 | Oracle International Corporation | Gateway for achieving low latency and high availability in a real time event processing system |
US9898545B2 (en) | 2005-11-21 | 2018-02-20 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US20070118561A1 (en) * | 2005-11-21 | 2007-05-24 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US8949455B2 (en) | 2005-11-21 | 2015-02-03 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US7610304B2 (en) | 2005-12-05 | 2009-10-27 | Oracle International Corporation | Techniques for performing file operations involving a link at a database management system |
US20070130157A1 (en) * | 2005-12-05 | 2007-06-07 | Namit Jain | Techniques for performing file operations involving a link at a database management system |
US8417746B1 (en) | 2006-04-03 | 2013-04-09 | F5 Networks, Inc. | File system management with enhanced searchability |
US9003396B2 (en) * | 2006-06-19 | 2015-04-07 | Lenovo Enterprise Solutions (Singapore) Pte. Ltd. | File manager integration of uninstallation feature |
US20070294687A1 (en) * | 2006-06-19 | 2007-12-20 | International Business Machines Corporation | File manager integration of uninstallation feature |
US20080126434A1 (en) * | 2006-08-03 | 2008-05-29 | Mustafa Uysal | Protocol virtualization for a network file system |
US8990270B2 (en) | 2006-08-03 | 2015-03-24 | Hewlett-Packard Development Company, L. P. | Protocol virtualization for a network file system |
US7631294B2 (en) | 2006-09-19 | 2009-12-08 | Black Duck Software, Inc. | Notification system for source code discovery |
US20080072210A1 (en) * | 2006-09-19 | 2008-03-20 | Darren Rush | Notification system for source code discovery |
US9183321B2 (en) | 2006-10-16 | 2015-11-10 | Oracle International Corporation | Managing compound XML documents in a repository |
US20080091703A1 (en) * | 2006-10-16 | 2008-04-17 | Oracle International Corporation | Managing compound XML documents in a repository |
US7827177B2 (en) | 2006-10-16 | 2010-11-02 | Oracle International Corporation | Managing compound XML documents in a repository |
US7937398B2 (en) | 2006-10-16 | 2011-05-03 | Oracle International Corporation | Managing compound XML documents in a repository |
US7797310B2 (en) | 2006-10-16 | 2010-09-14 | Oracle International Corporation | Technique to estimate the cost of streaming evaluation of XPaths |
US10650080B2 (en) | 2006-10-16 | 2020-05-12 | Oracle International Corporation | Managing compound XML documents in a repository |
US20110047193A1 (en) * | 2006-10-16 | 2011-02-24 | Oracle International Corporation | Managing compound xml documents in a repository |
US8682916B2 (en) | 2007-05-25 | 2014-03-25 | F5 Networks, Inc. | Remote file virtualization in a switched file system |
US20090254592A1 (en) * | 2007-11-12 | 2009-10-08 | Attune Systems, Inc. | Non-Disruptive File Migration |
US20090210431A1 (en) * | 2007-11-12 | 2009-08-20 | Attune Systems, Inc. | Load Sharing Cluster File Systems |
US8180747B2 (en) | 2007-11-12 | 2012-05-15 | F5 Networks, Inc. | Load sharing cluster file systems |
US8117244B2 (en) | 2007-11-12 | 2012-02-14 | F5 Networks, Inc. | Non-disruptive file migration |
US8548953B2 (en) | 2007-11-12 | 2013-10-01 | F5 Networks, Inc. | File deduplication using storage tiers |
US8352785B1 (en) | 2007-12-13 | 2013-01-08 | F5 Networks, Inc. | Methods for generating a unified virtual snapshot and systems thereof |
US20090189441A1 (en) * | 2008-01-29 | 2009-07-30 | Paul Degoul | Distributed electrical/electronic architectures for brake-by-wire brake systems |
US20090241045A1 (en) * | 2008-03-18 | 2009-09-24 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US9830338B2 (en) | 2008-03-18 | 2017-11-28 | Certusview Technologies, Inc. | Virtual white lines for indicating planned excavation sites on electronic images |
US8218827B2 (en) | 2008-03-18 | 2012-07-10 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US8861795B2 (en) | 2008-03-18 | 2014-10-14 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US8300895B2 (en) | 2008-03-18 | 2012-10-30 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US8249306B2 (en) | 2008-03-18 | 2012-08-21 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US8934678B2 (en) | 2008-03-18 | 2015-01-13 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US20090241046A1 (en) * | 2008-03-18 | 2009-09-24 | Steven Nielsen | Virtual white lines for delimiting planned excavation sites |
US20090238417A1 (en) * | 2008-03-18 | 2009-09-24 | Nielsen Steven E | Virtual white lines for indicating planned excavation sites on electronic images |
US8280117B2 (en) | 2008-03-18 | 2012-10-02 | Certusview Technologies, Llc | Virtual white lines for indicating planned excavation sites on electronic images |
US8355542B2 (en) | 2008-03-18 | 2013-01-15 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US8290215B2 (en) | 2008-03-18 | 2012-10-16 | Certusview Technologies, Llc | Virtual white lines for delimiting planned excavation sites |
US8861794B2 (en) | 2008-03-18 | 2014-10-14 | Certusview Technologies, Llc | Virtual white lines for indicating planned excavation sites on electronic images |
US20090238416A1 (en) * | 2008-03-18 | 2009-09-24 | Steven Nielsen | Virtual white lines for delimiting planned excavation sites |
US8549582B1 (en) | 2008-07-11 | 2013-10-01 | F5 Networks, Inc. | Methods for handling a multi-protocol content name and systems thereof |
US7958112B2 (en) | 2008-08-08 | 2011-06-07 | Oracle International Corporation | Interleaving query transformations for XML indexes |
US8296308B2 (en) * | 2009-02-11 | 2012-10-23 | Certusview Technologies, Llc | Methods and apparatus for associating a virtual white line (VWL) image with corresponding ticket information for an excavation project |
US8832565B2 (en) | 2009-02-11 | 2014-09-09 | Certusview Technologies, Llc | Methods and apparatus for controlling access to a virtual white line (VWL) image for an excavation project |
US8566737B2 (en) | 2009-02-11 | 2013-10-22 | Certusview Technologies, Llc | Virtual white lines (VWL) application for indicating an area of planned excavation |
US20100205555A1 (en) * | 2009-02-11 | 2010-08-12 | Certusview Technologies, Llc | Virtual white lines (vwl) for delimiting planned excavation sites of staged excavation projects |
US20100205195A1 (en) * | 2009-02-11 | 2010-08-12 | Certusview Technologies, Llc | Methods and apparatus for associating a virtual white line (vwl) image with corresponding ticket information for an excavation project |
US8384742B2 (en) | 2009-02-11 | 2013-02-26 | Certusview Technologies, Llc | Virtual white lines (VWL) for delimiting planned excavation sites of staged excavation projects |
US8626571B2 (en) | 2009-02-11 | 2014-01-07 | Certusview Technologies, Llc | Management system, and associated methods and apparatus, for dispatching tickets, receiving field information, and performing a quality assessment for underground facility locate and/or marking operations |
US8356255B2 (en) | 2009-02-11 | 2013-01-15 | Certusview Technologies, Llc | Virtual white lines (VWL) for delimiting planned excavation sites of staged excavation projects |
US20100205554A1 (en) * | 2009-02-11 | 2010-08-12 | Certusview Technologies, Llc | Virtual white lines (vwl) application for indicating an area of planned excavation |
US20100324967A1 (en) * | 2009-02-11 | 2010-12-23 | Certusview Technologies, Llc | Management system, and associated methods and apparatus, for dispatching tickets, receiving field information, and performing a quality assessment for underground facility locate and/or marking operations |
US10721269B1 (en) | 2009-11-06 | 2020-07-21 | F5 Networks, Inc. | Methods and system for returning requests with javascript for clients before passing a request to a server |
US11108815B1 (en) | 2009-11-06 | 2021-08-31 | F5 Networks, Inc. | Methods and system for returning requests with javascript for clients before passing a request to a server |
US8204860B1 (en) | 2010-02-09 | 2012-06-19 | F5 Networks, Inc. | Methods and systems for snapshot reconstitution |
US9195500B1 (en) | 2010-02-09 | 2015-11-24 | F5 Networks, Inc. | Methods for seamless storage importing and devices thereof |
US8392372B2 (en) | 2010-02-09 | 2013-03-05 | F5 Networks, Inc. | Methods and systems for snapshot reconstitution |
US9183267B2 (en) * | 2010-05-24 | 2015-11-10 | Microsoft Technology Licensing, Llc | Linked databases |
US20110289055A1 (en) * | 2010-05-24 | 2011-11-24 | Microsoft Corporation | Linked Databases |
USRE47019E1 (en) | 2010-07-14 | 2018-08-28 | F5 Networks, Inc. | Methods for DNSSEC proxying and deployment amelioration and systems thereof |
US9286298B1 (en) | 2010-10-14 | 2016-03-15 | F5 Networks, Inc. | Methods for enhancing management of backup data sets and devices thereof |
US20120203595A1 (en) * | 2011-02-09 | 2012-08-09 | VisionEdge Marketing | Computer Readable Medium, File Server System, and Method for Market Segment Analysis, Selection, and Investment |
US20120303628A1 (en) * | 2011-05-24 | 2012-11-29 | Brian Silvola | Partitioned database model to increase the scalability of an information system |
US9507816B2 (en) * | 2011-05-24 | 2016-11-29 | Nintendo Co., Ltd. | Partitioned database model to increase the scalability of an information system |
US8396836B1 (en) | 2011-06-30 | 2013-03-12 | F5 Networks, Inc. | System for mitigating file virtualization storage import latency |
US8463850B1 (en) | 2011-10-26 | 2013-06-11 | F5 Networks, Inc. | System and method of algorithmically generating a server side transaction identifier |
USRE48725E1 (en) | 2012-02-20 | 2021-09-07 | F5 Networks, Inc. | Methods for accessing data in a compressed file system and devices thereof |
US9020912B1 (en) | 2012-02-20 | 2015-04-28 | F5 Networks, Inc. | Methods for accessing data in a compressed file system and devices thereof |
US10657476B2 (en) * | 2012-08-24 | 2020-05-19 | Tibco Software Inc. | Just in time compilation (JIT) for business process execution |
US20190244151A1 (en) * | 2012-08-24 | 2019-08-08 | Tibco Software Inc. | Just in time compilation (jit) for business process execution |
US9519879B1 (en) * | 2012-08-24 | 2016-12-13 | Tibco Software Inc. | Just in time compilation (JIT) for business process execution |
US10311392B2 (en) * | 2012-08-24 | 2019-06-04 | Tibco Software Inc. | Just in time compilation (JIT) for business process execution |
US9355036B2 (en) | 2012-09-18 | 2016-05-31 | Netapp, Inc. | System and method for operating a system to cache a networked file system utilizing tiered storage and customizable eviction policies based on priority and tiers |
US9519501B1 (en) | 2012-09-30 | 2016-12-13 | F5 Networks, Inc. | Hardware assisted flow acceleration and L2 SMAC management in a heterogeneous distributed multi-tenant virtualized clustered system |
US10375155B1 (en) | 2013-02-19 | 2019-08-06 | F5 Networks, Inc. | System and method for achieving hardware acceleration for asymmetric flow connections |
US9554418B1 (en) | 2013-02-28 | 2017-01-24 | F5 Networks, Inc. | Device for topology hiding of a visited network |
US9311331B2 (en) * | 2013-08-27 | 2016-04-12 | Netapp, Inc. | Detecting out-of-band (OOB) changes when replicating a source file system using an in-line system |
US9304997B2 (en) | 2013-08-27 | 2016-04-05 | Netapp, Inc. | Asynchronously migrating a file system |
US20150066852A1 (en) * | 2013-08-27 | 2015-03-05 | Netapp, Inc. | Detecting out-of-band (oob) changes when replicating a source file system using an in-line system |
US9300692B2 (en) | 2013-08-27 | 2016-03-29 | Netapp, Inc. | System and method for implementing data migration while preserving security policies of a source filer |
US10853333B2 (en) | 2013-08-27 | 2020-12-01 | Netapp Inc. | System and method for developing and implementing a migration plan for migrating a file system |
US9633038B2 (en) | 2013-08-27 | 2017-04-25 | Netapp, Inc. | Detecting out-of-band (OOB) changes when replicating a source file system using an in-line system |
US9311314B2 (en) | 2013-08-27 | 2016-04-12 | Netapp, Inc. | System and method for migrating data from a source file system to a destination file system with use of attribute manipulation |
US11838851B1 (en) | 2014-07-15 | 2023-12-05 | F5, Inc. | Methods for managing L7 traffic classification and devices thereof |
US11681668B2 (en) | 2014-08-11 | 2023-06-20 | Netapp, Inc. | System and method for developing and implementing a migration plan for migrating a file system |
US10860529B2 (en) | 2014-08-11 | 2020-12-08 | Netapp Inc. | System and method for planning and configuring a file system migration |
US10182013B1 (en) | 2014-12-01 | 2019-01-15 | F5 Networks, Inc. | Methods for managing progressive image delivery and devices thereof |
US11895138B1 (en) | 2015-02-02 | 2024-02-06 | F5, Inc. | Methods for improving web scanner accuracy and devices thereof |
US10834065B1 (en) | 2015-03-31 | 2020-11-10 | F5 Networks, Inc. | Methods for SSL protected NTLM re-authentication and devices thereof |
US10404698B1 (en) | 2016-01-15 | 2019-09-03 | F5 Networks, Inc. | Methods for adaptive organization of web application access points in webtops and devices thereof |
US10797888B1 (en) | 2016-01-20 | 2020-10-06 | F5 Networks, Inc. | Methods for secured SCEP enrollment for client devices and devices thereof |
US10412198B1 (en) | 2016-10-27 | 2019-09-10 | F5 Networks, Inc. | Methods for improved transmission control protocol (TCP) performance visibility and devices thereof |
US10567492B1 (en) | 2017-05-11 | 2020-02-18 | F5 Networks, Inc. | Methods for load balancing in a federated identity environment and devices thereof |
US11223689B1 (en) | 2018-01-05 | 2022-01-11 | F5 Networks, Inc. | Methods for multipath transmission control protocol (MPTCP) based session migration and devices thereof |
US10833943B1 (en) | 2018-03-01 | 2020-11-10 | F5 Networks, Inc. | Methods for service chaining and devices thereof |
CN111914105A (en) * | 2019-05-08 | 2020-11-10 | 青岛海信移动通信技术股份有限公司 | File query method and device and electronic equipment |
Also Published As
Publication number | Publication date |
---|---|
US6442548B1 (en) | 2002-08-27 |
EP0856803A2 (en) | 1998-08-05 |
JPH10247155A (en) | 1998-09-14 |
AU739236B2 (en) | 2001-10-04 |
DE69839744D1 (en) | 2008-09-04 |
CA2228210A1 (en) | 1998-07-31 |
EP0856803B1 (en) | 2008-07-23 |
AU5275798A (en) | 1998-08-06 |
EP0856803A3 (en) | 2001-01-10 |
CA2228210C (en) | 2008-09-02 |
BR9800065A (en) | 1999-03-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5937406A (en) | File system interface to a database | |
US6324551B1 (en) | Self-contained document management based on document properties | |
Moore et al. | Collection-based persistent digital archives-part 1 | |
US6330573B1 (en) | Maintaining document identity across hierarchy and non-hierarchy file systems | |
JP2708331B2 (en) | File device and data file access method | |
US6308179B1 (en) | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system | |
US6269380B1 (en) | Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols | |
US6988101B2 (en) | Method, system, and computer program product for providing an extensible file system for accessing a foreign file system from a local data processing system | |
US6266682B1 (en) | Tagging related files in a document management system | |
JP4583377B2 (en) | System and method for realizing relational and hierarchical synchronization services for units of information manageable by a hardware / software interface system | |
JP4583376B2 (en) | System and method for realizing a synchronous processing service for a unit of information manageable by a hardware / software interface system | |
US20040133545A1 (en) | System and method for managing content including addressability features | |
US20020055958A1 (en) | Extending application behavior through active properties attached to a document in a document management system | |
KR20060094458A (en) | Serialization of file system(s) and associated entity(ies) | |
EP1025516A1 (en) | Knowledge provider with logical hyperlinks | |
KR101002483B1 (en) | System and a method for presenting items to a user with a contextual presentation | |
KR101076905B1 (en) | System and a method for presenting related items to a user | |
JP2007527074A (en) | System and method for searching efficient file content in a file system | |
AU2004279205B2 (en) | System and method for the presentation of items stored on a computer | |
US9727588B1 (en) | Applying XAM processes | |
JP4583375B2 (en) | System for implementation of synchronization schema | |
MXPA98000845A (en) | File system interface to a base of da | |
Laursen | A Novel, Tag-Based File-System | |
Akarapu | Rlinks: A Mechanism for Navigating to Related Files | |
KR20060117872A (en) | Systems and methods for providing synchronization services for units of information manageable by a hardware/software interface system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INFORMIX SOFTWARE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BALABINE, IGOR V.;KANDASAMY, RAMIAH;SKIER, JOHN;REEL/FRAME:008493/0021Effective date: 19970324 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INFORMIX CORPORATION AND/OR INFORMIX SOFTWARE INC.;REEL/FRAME:012581/0221Effective date: 20010701 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:027463/0594Effective date: 20111228 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
CA2786727A1 - Joint embedding for item association - Google Patents
Joint embedding for item association Download PDFInfo
- Publication number
- CA2786727A1 CA2786727A1 CA2786727A CA2786727A CA2786727A1 CA 2786727 A1 CA2786727 A1 CA 2786727A1 CA 2786727 A CA2786727 A CA 2786727A CA 2786727 A CA2786727 A CA 2786727A CA 2786727 A1 CA2786727 A1 CA 2786727A1
- Authority
- CA
- Canada
- Prior art keywords
- item
- items
- embedding space
- joint embedding
- distance
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000012549 training Methods 0.000 claims abstract description 134
- 238000000034 method Methods 0.000 claims abstract description 94
- 238000013507 mapping Methods 0.000 claims abstract description 79
- 230000015654 memory Effects 0.000 claims abstract description 28
- 230000006870 function Effects 0.000 claims description 40
- 230000004044 response Effects 0.000 claims description 16
- 230000008569 process Effects 0.000 description 22
- 239000013598 vector Substances 0.000 description 21
- 239000011159 matrix material Substances 0.000 description 11
- 238000007796 conventional method Methods 0.000 description 7
- 238000013459 approach Methods 0.000 description 5
- 238000004891 communication Methods 0.000 description 5
- 238000012545 processing Methods 0.000 description 5
- 230000008901 benefit Effects 0.000 description 3
- 230000008859 change Effects 0.000 description 3
- 241001481833 Coryphaena hippurus Species 0.000 description 2
- 230000006872 improvement Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000005457 optimization Methods 0.000 description 2
- 238000000513 principal component analysis Methods 0.000 description 2
- 238000005070 sampling Methods 0.000 description 2
- 238000012706 support-vector machine Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 230000006978 adaptation Effects 0.000 description 1
- 230000003044 adaptive effect Effects 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 238000000605 extraction Methods 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 238000013341 scale-up Methods 0.000 description 1
- 230000003595 spectral effect Effects 0.000 description 1
- 238000005309 stochastic process Methods 0.000 description 1
- 230000002123 temporal effect Effects 0.000 description 1
- 230000001960 triggered effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/53—Querying
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9554—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL] by using bar codes
Abstract
Methods and systems to associate semantically-related items of a plurality of item types using a joint embedding space are disclosed. The disclosed methods and systems are scalable to large, web-scale training data sets. According to an embodiment, a method for associating semantically-related items of a plurality of item types includes embedding training items of a plurality of item types in a joint embedding space configured in a memory coupled to at least one processor, learning one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings, and associating one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items. Exemplary item types that may be embedded in the joint embedding space include images, annotations, audio and video.
Description
JOINT EMBEDDING FOR ITEM ASSOCIATION
BACKGROUND
Technical Field [0001] Embodiments of the present invention relate to associating items of various types stored in a memory.
Background Art
BACKGROUND
Technical Field [0001] Embodiments of the present invention relate to associating items of various types stored in a memory.
Background Art
[0002] Items of various types such as images, audio recordings, video recordings, and text, are digitally stored and are accessible through computer networks and services such as the Internet and the World Wide Web ("web"). In some cases, these items can be associated with each other based upon their origination sources or based upon specific features detected in them. For example, an image can be related to specific text in an article in which that image appears, articles that have same or similar text can be related to each other, and an image in which a particular object is detected can be related to a text representation of the name of that object. The ability to associate items of various types that relate to a particular subject of interest is important to fully utilize the vast stores of information that are accessible through the likes of the Internet and the web.
[0003] Numerous conventional methods are available with which items of various types can be associated with each other. Conventional methods may associate items based on semantic content. However, conventional methods do not adequately scale to take advantage of the very large amounts of data that are available through the web.
Furthermore, conventional methods may not adequately determine all useful semantic relationships among various items in very large collections of items.
Furthermore, conventional methods may not adequately determine all useful semantic relationships among various items in very large collections of items.
[0004] Image annotation is an application based upon semantically associating items of various types. IKnown conventional methods for image annotation based on semantic relationships may not scale to very large data sets, and may not adequately determine semantic relationships to benefit from such very large data sets. Many conventional methods are based upon extracting various image features and then training independent simple classifiers, such as linear support vector machines (SVMs), for each category of images. Training independent classifiers for each category of images can be inefficient for large data sets. The performance of independent classifiers can also degrade rapidly with the number of annotations.
[0005] An alternative non-parametric conventional approach is to use K-nearest neighbor methods to select, from a training set, images that are nearest in the image feature space to a new image and to annotate the new image based upon the annotations of the nearest images. However, finding a nearest-neighbor with a high degree of accuracy may be highly inefficient when the training data set is very large.
[0006] Other conventional approaches include concatenating image features and associated text labels for each training image, and then probabilistically relating new images to the training images. Some conventional approaches cluster pre-annotated training images based on image features, and then determine an annotation for a new image based on a similarity between features of the new image and one or more of the clusters of training images. For example, the annotation for the new image may be an annotation from the closest cluster of training images. Creating new image annotations based primarily on manually annotated images may not scale to very large data sets.
Also, probabilistic approaches can be highly inefficient for large data sets, for example, because of having to re-calibrate the probabilities of numerous other relationships when a probability of one relationship is changed.
SUMMARY
Also, probabilistic approaches can be highly inefficient for large data sets, for example, because of having to re-calibrate the probabilities of numerous other relationships when a probability of one relationship is changed.
SUMMARY
[0007] Methods and systems to associate semantically-related items of a plurality of item types using a joint embedding space are disclosed. The disclosed methods and systems are scalable to large, web-scale training data sets. According to an embodiment, a method for associating semantically-related items of a plurality of item types includes embedding training items of a plurality of item types in a joint embedding space configured in a memory coupled to at least one processor, learning one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings, and associating one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
Exemplary item types that may be embedded in the joint embedding space include images, annotations, audio and video. In an embodiment, the method can further include embedding the first item at a first location determined by applying the learned mapping for a first item type of the plurality of item types, and annotating the first item based upon the one or more associated embedded training items.
Exemplary item types that may be embedded in the joint embedding space include images, annotations, audio and video. In an embodiment, the method can further include embedding the first item at a first location determined by applying the learned mapping for a first item type of the plurality of item types, and annotating the first item based upon the one or more associated embedded training items.
[0008) According to another embodiment, a system for associating semantically-related items of a plurality of item types includes, a processor, a memory coupled to the processor, a joint embedding space configurator, a mapper, and an item associator. The joint embedding space configurator is configured to embed training items of the plurality of item types in a joint embedding space in the memory. The mapper is configured to learn one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings. The item associator is configured associate one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
[0009] Yet another embodiment is a computer readable medium storing instructions wherein the instructions when executed cause at least one processor to associate semantically-related items of a plurality of item types using a method. The method includes, embedding training items of a plurality of item types in a joint embedding space configured in a memory coupled to at least one processor, learning one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings, and associating one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
[0010] An embodiment of a method for responding to a query includes receiving the query, determining a location in a joint embedding space configured in a memory coupled to at least one processor wherein a distance between a first item and a second item embedded in the joint embedding space corresponds to a semantic relationship between the first and second items, identifying one or more results based upon one or more items embedded in the joint embedding space closest to the location, and returning the one or more results as a response to the query. Items of a plurality of item types are embedded in the joint embedding space.
[0011] A method of querying includes transmitting a query to a server, and receiving a response from the server, wherein the response is formed by the server by identifying a location corresponding to the query in the joint embedding space, and by identifying one or more result items closest to the identified location. The server includes a joint embedding space configured in a memory coupled to at least one processor, where a distance between a first item and a second item embedded in the joint embedding space corresponds to a semantic relationship between the first item and the second item, and where items of a plurality of item types are embedded in the joint embedding space.
[0012] Further features and advantages of the present invention, as well as the structure and operation of various embodiments thereof, are described in detail below with reference to the accompanying drawings.
BRIEF DESCRIPTION OF THE DRAWINGS/FIGURES
BRIEF DESCRIPTION OF THE DRAWINGS/FIGURES
[0013] Reference will be made to the embodiments of the invention, examples of which may be illustrated in the accompanying figures. These figures are intended to be illustrative, not limiting. Although the invention is generally described in the context of these embodiments, it should be understood that it is not intended to limit the scope of the invention to these particular embodiments.
[0014] FIG. 1 illustrates a system for associating semantically-related items of a plurality of item types, according to an embodiment.
[0015] FIG. 2 illustrates a method for associating semantically-related items of a plurality of item types, according to an embodiment.
[0016] FIG. 3 illustrates a method for configuring a joint embedding space, according to an embodiment.
[0017] FIG. 4 illustrates a method for learning one or more mappings to the joint embedding space, according to an embodiment.
[0018] FIG. 5 illustrates a method for selecting a triplet of embedded items in the joint embedding space, according to an embodiment.
[0019] FIG. 6 illustrates a method for associating semantically-related items of a plurality of item types, according to an embodiment.
[0020] FIG. 7 illustrates components of a system for associating semantically-related items of a plurality of music-related item types, according to an embodiment.
[0021] FIG. 8 illustrates a client-server environment according to an embodiment.
[0022] FIG. 9 illustrates a method of servicing a query according to an embodiment.
DETAILED DESCRIPTION
DETAILED DESCRIPTION
[0023] While the present invention is described herein with reference to illustrative embodiments for particular applications, it should be understood that the invention is not limited thereto. Those skilled in the art with access to the teachings herein will recognize additional modifications, applications, and embodiments within the scope thereof and additional fields in which the invention would be of significant utility.
Overview
Overview
[0024] It is desirable that very large collections of items of various types are utilized to find relationships among items based on semantic content. For example, for a new image, an annotation based on relationships in a large collection of items may be more descriptive than an annotation based on a small collection of items.
Therefore, methods and systems for semantically associating items that are scalable to very large collections of information and that consider a variety of relationships among items are desired.
Therefore, methods and systems for semantically associating items that are scalable to very large collections of information and that consider a variety of relationships among items are desired.
[0025] Embodiments of the present invention include methods and systems to utilize a range of relationships among items of various data types, available in training data sets, in order to determine associations (also referred to as "relationships') between items of the training data sets and one or more other training items or newly embedded items.
Embodiments of the present invention are scalable to large corpora of training data items such as those that can be collected through the web. For example, images, audio, video, and text, stored in resources accessible via the web enables the creation of very large training data sets having potentially unlimited numbers of training data records. Scalable and efficient methods for determining associations among various items are useful for many purposes such as image annotation, image retrieval, content-based data retrieval, and the like. For conciseness and convenience, embodiments of the present invention are described below primarily using the application of image annotation. However, it should be understood that other applications utilizing relationships between items are contemplated within the scope of embodiments of the present invention. For example, discovered associations between image items and annotation items can be utilized for other applications such as audio and video annotation, image retrieval, retrieval of audio and video based on semantic content, and the like.
Embodiments of the present invention are scalable to large corpora of training data items such as those that can be collected through the web. For example, images, audio, video, and text, stored in resources accessible via the web enables the creation of very large training data sets having potentially unlimited numbers of training data records. Scalable and efficient methods for determining associations among various items are useful for many purposes such as image annotation, image retrieval, content-based data retrieval, and the like. For conciseness and convenience, embodiments of the present invention are described below primarily using the application of image annotation. However, it should be understood that other applications utilizing relationships between items are contemplated within the scope of embodiments of the present invention. For example, discovered associations between image items and annotation items can be utilized for other applications such as audio and video annotation, image retrieval, retrieval of audio and video based on semantic content, and the like.
[0026] Embodiments of the present invention scale to very large training databases.
Additionally, embodiments of the present invention do not require manually annotated images as training data, and can utilize annotations with substantial noise.
The use of very large training corpora by embodiments of the present invention is aided by the ability to utilize noisy annotations. For example, embodiments of the present invention can generate training data based on the click data from user queries executed using Google's Image Search service. The scalability of embodiments of the present invention also enables efficient continual improvement of the system by incorporating new training information as they become available. In this document, an "annotation" is a textual annotation and may include one or more keywords, queries, sentences, or other text content.
Additionally, embodiments of the present invention do not require manually annotated images as training data, and can utilize annotations with substantial noise.
The use of very large training corpora by embodiments of the present invention is aided by the ability to utilize noisy annotations. For example, embodiments of the present invention can generate training data based on the click data from user queries executed using Google's Image Search service. The scalability of embodiments of the present invention also enables efficient continual improvement of the system by incorporating new training information as they become available. In this document, an "annotation" is a textual annotation and may include one or more keywords, queries, sentences, or other text content.
[0027] Furthermore, by embedding all items types in a joint embedding space, embodiments of the present invention create associations that are based on the relative semantic content of the respective items. A "joint embedding space," as used herein, is a multi-dimensional embedding space in which multiple types of items such as, but not limited to, images, annotations, audio and/or video, can be embedded, so that their locations reflect their semantic content based upon nearby embedded items.
[0028] Also, separately embedding items of different types in the joint embedding space enables more flexible combinations between items. For example, in an embodiment of the present invention, a new image can be associated with annotations regardless of any characteristics of the training image upon which the annotations are based.
System for Semantically Associating Items
System for Semantically Associating Items
[0029] FIG. 1 illustrates a system 100 to associate items of a plurality of item types, according to an embodiment of the present invention. System 100 is configured to associate image items with annotation items to automatically annotate images.
Other embodiments of the present invention can be configured to establish associations between items of item types such as, but not limited to, video, audio, image, and annotations
Other embodiments of the present invention can be configured to establish associations between items of item types such as, but not limited to, video, audio, image, and annotations
[0030] System 100 comprises at least one processor 102, a memory 104, a storage 106, a network interface 108, a user input/output device 110, communication infrastructure 112, training database 114, and joint embedding space module 130. System 100 can be implemented on a server computer, on one or more computers interconnected with a communication network, a server farm, a cloud computing platform, or the like.
Processor 102 comprises one or more processors that are configured to execute applications such as joint embedding space module 130. Memory 104 can comprise a single memory or multiple interconnected memories located in one or more computers.
In an embodiment, memory 104 comprises dynamic random access memory (DRAM).
Storage 106 comprises one or more interconnected non-volatile computer readable medium, and may include hard disks, flash memory, optical storage device, and the like.
Network interface 108 includes an interface to any type of network, such as, but not limited to, Ethernet and wireless local area network (LAN), to which system 100 may be connected. User input/output device 110 comprises interfaces to one or more of keyboard, mouse, and display device through which a user, such as a human operator or an application, can control the operations of system 100 and/or display output from system 100. Communication infrastructure 112 may include one or more communication buses such as, but not limited to, a system bus, Peripheral Component Interconnect (PCI) bus, Universal Serial Bus (USB), Firewire, or Ethernet. Communication infrastructure 112 provides the interconnection means to communicatively couple components of system 100.
Processor 102 comprises one or more processors that are configured to execute applications such as joint embedding space module 130. Memory 104 can comprise a single memory or multiple interconnected memories located in one or more computers.
In an embodiment, memory 104 comprises dynamic random access memory (DRAM).
Storage 106 comprises one or more interconnected non-volatile computer readable medium, and may include hard disks, flash memory, optical storage device, and the like.
Network interface 108 includes an interface to any type of network, such as, but not limited to, Ethernet and wireless local area network (LAN), to which system 100 may be connected. User input/output device 110 comprises interfaces to one or more of keyboard, mouse, and display device through which a user, such as a human operator or an application, can control the operations of system 100 and/or display output from system 100. Communication infrastructure 112 may include one or more communication buses such as, but not limited to, a system bus, Peripheral Component Interconnect (PCI) bus, Universal Serial Bus (USB), Firewire, or Ethernet. Communication infrastructure 112 provides the interconnection means to communicatively couple components of system 100.
[0031] Training database 114 comprises a collection of training items of various item types. As used in this document, the term "database" implies any collection of data and methods to access the collection of data, and does not necessarily imply a commercially available database management system (DBMS). According to an embodiment, training database 114 includes one or more of a known image database 116, a known annotations database 118, and a known relationships database 120. The training databases 114 may be of any size. Embodiments of the present invention may be particularly advantageous, relative to conventional methods, where the training databases are very large, i.e., web-scale with millions of training items or more. Training database 114 can comprise a single database directly connected to system 100 or a distributed database communicatively coupled to system 100. In an embodiment, training database resides in storage 114. In another embodiment, training database resides in one or more remote computers that are communicatively coupled through, for example, network interface 108 to system 100. In yet another embodiment, training database 114 can reside internally to system 100 as well as in remote computers.
[0032] According to an embodiment, training database 114 comprises queries submitted to the web-based Image Search service from Google, Inc., and information on images returned in response to those queries. For example, each query may be stored in known annotations database 118, and a sequence or set of images returned in response to the query can be stored in known images database 116. With respect to each query, the number of times each image was clicked on by a user ("query click data") may also be stored. In an embodiment, for each image stored in known images database 116, the one or more queries based upon which the largest number of users selected or clicked on that image may be stored in known annotations database 118. Known relationships database 120 includes relationships between items in the training database. In an embodiment, known relationships database 120 includes relationships between training images in known images database 116 and training annotations in known annotations database 118, relationships between two or more training images, and relationships between two or more training annotations. Training data may be generated using numerous additional methods. Other means of acquiring training data for image annotation, include, but are not limited to, manual annotation of images and collecting images that are pre-annotated by users.
[0033] Memory 104 includes a multi-dimensional joint embedding space 150.
According to an embodiment, each dimension of joint embedding space 150 is defined by a real-valued axis. The joint embedding space is intended to automatically locate semantically-related items in close proximity to each other. Within the joint embedding space, semantically similar items are automatically located in close proximity to each other without regard to the type of each item. In an embodiment, the location of an item x in the joint embedding space may be specified as <xj,x2, ...,XD> where xi i=1...D
is a real number specifying the location of item x in dimension i in the joint embedding space of D
dimensions. Increasing the dimensionality of the joint embedding space 150 often improves the accuracy of the associations between embedded items. A high-dimensional joint embedding space can represent a large training database, such as a training database acquired from web-accessible sources, with higher accuracy than a low-dimensional joint embedding space. However, higher dimensionality also increases the computation complexity. Therefore, the number of dimensions can be determined based upon factors such as, the size of the available training database, required accuracy level, and computational time. Defining joint embedding space 150 based upon real-valued axis increases the accuracy level of associations, because a substantially continuous mapping space can be maintained. Memory 104 can also include a plurality of item vectors 154 corresponding to respective items embedded in the joint embedding space 150, and a plurality of mappings 152 that map each of the item types to the joint embedding space 150.
According to an embodiment, each dimension of joint embedding space 150 is defined by a real-valued axis. The joint embedding space is intended to automatically locate semantically-related items in close proximity to each other. Within the joint embedding space, semantically similar items are automatically located in close proximity to each other without regard to the type of each item. In an embodiment, the location of an item x in the joint embedding space may be specified as <xj,x2, ...,XD> where xi i=1...D
is a real number specifying the location of item x in dimension i in the joint embedding space of D
dimensions. Increasing the dimensionality of the joint embedding space 150 often improves the accuracy of the associations between embedded items. A high-dimensional joint embedding space can represent a large training database, such as a training database acquired from web-accessible sources, with higher accuracy than a low-dimensional joint embedding space. However, higher dimensionality also increases the computation complexity. Therefore, the number of dimensions can be determined based upon factors such as, the size of the available training database, required accuracy level, and computational time. Defining joint embedding space 150 based upon real-valued axis increases the accuracy level of associations, because a substantially continuous mapping space can be maintained. Memory 104 can also include a plurality of item vectors 154 corresponding to respective items embedded in the joint embedding space 150, and a plurality of mappings 152 that map each of the item types to the joint embedding space 150.
[0034] Joint embedding space module 130 includes functionality to create a joint embedding space 150, to learn mappings for one or more item types into the joint embedding space 150, and to determine associations from a newly embedded item to training items already embedded in the joint embedding space 150. The logic instructions of joint embedding space module 130 can be implemented in software, firmware, hardware, or using a combination thereof. According to an embodiment, joint embedding space module 130 includes logic instructions for automatically annotating images using the joint embedding space 150 and learning mappings or images and annotations into the joint embedding space 150 using training data in known images database 116, known annotations database 118, and known relationships database 120. In an embodiment, joint embedding space module 130 comprises a training data collector 132, an annotation analyzer 134, an image analyzer 136, an annotator 138, a joint embedding space configurator 140, a mapper 142, a new image embedder 144, an item associator 146, and a semantic query module 148.
[0035] Training data collector 132 includes functionality to acquire training data that, for example, may be stored in training database 114. For example, in an embodiment, training data collector 132 can collect and process image query data including the queries, the response set of images returned in response to each query, and in each response set, the images clicked on by a user. The acquired data may then be processed to store the images, and for each image, one or more queries to which the image is related as indicated by the number of users who clicked on the image in response to a corresponding query. The images can be stored in known images database 116, and the queries can be stored in known annotations database 118. In an embodiment, known relationships between stored images and stored annotations can be stored in known relationships database 120. In some embodiments, query click data can also be used to determine relationships between images, for example, by considering images clicked on with respect to the same query as related. Also, in some embodiments, relationships may be determined among one or more stored annotations, for example, by considering words or terms that appear frequently together as related. In various embodiments, training data collector 132 can also acquire manually annotated images and/or other pre-annotated images. Other means of acquiring training data, such as by directly acquiring annotated images by web crawling or incorporating pre-prepared collections of annotated data are possible and are contemplated within the scope of embodiments of the present invention.
[0036] Annotation analyzer 134 includes the functionality to analyze and process annotations. In an embodiment, annotation analyzer 134 includes the functionality to process annotations that are used as training annotations. For example, annotation analyzer 134 may process queries, such as queries stored in known annotations database 118, to rectify typos, to correct spelling errors, to uniformly order a sequence of keywords, translate from one language to another, and like purposes. In various embodiments, each annotation can be represented as a string of characters, a vector of keywords, or like manner.
[0037] Image analyzer 136 includes the functionality to analyze images, for example, by extracting image features. Image features can include, but are not limited to, one or more of edges, corners, ridges, interest points, and color histograms. Feature extraction may be based on one or more known methods such as, but not limited to, Scale Invariant Feature Transform (SIFT) and Principal Component Analysis (PCA).
[0038] In an embodiment, images are represented by very sparse vectors of features.
Each image is first segmented into several overlapping square blocks at various scales.
Each block is then represented by the concatenation of color and edge features. A
dictionary of previously trained typical such blocks, is then used to represent each image as a bag of visual words, or a histogram of the number of times each dictionary visual word is present in the image, yielding vectors having over 200 non-zero values on average. An example representation of images is described in Grangier, D., &
Bengio, S., "A discriminative kernel-based model to rank images from text queries,"
Transactions on Pattern Analysis and Machine Intelligence, vol. 30, Issue 8, 2008, pp. 1371-1384.
Each image is first segmented into several overlapping square blocks at various scales.
Each block is then represented by the concatenation of color and edge features. A
dictionary of previously trained typical such blocks, is then used to represent each image as a bag of visual words, or a histogram of the number of times each dictionary visual word is present in the image, yielding vectors having over 200 non-zero values on average. An example representation of images is described in Grangier, D., &
Bengio, S., "A discriminative kernel-based model to rank images from text queries,"
Transactions on Pattern Analysis and Machine Intelligence, vol. 30, Issue 8, 2008, pp. 1371-1384.
[0039] Annotator 138 includes the functionality to construct an annotation for a new image. In an embodiment, for example, annotator 138 constructs the annotation for a newly embedded image based upon one or more annotations which are closest to the newly embedded image in joint embedding space 150.
[0040] Joint embedding space configurator 140 includes functionality to create and to embed training items in joint embedding space 150. In an embodiment, for example, joint embedding space configurator 140 embeds images and annotations from training database 114 in the joint embedding space. Training images from known images database 116, and training annotations from known annotations database 118 can be embedded in the joint embedding space 150.
[0041] Mapper 142 includes the functionality to learn one or more mappings 152 for each item type into the joint embedding space 150. Mappings 152 specify how each item vector 154 is located in the joint embedding space 150. In an embodiment, mapper 142 is configured to learn mappings from an image space and an annotation space to joint embedding space 150. For example, through a process of learning based upon the training images and annotations embedded in the joint embedding space 150, mapper 142 determines a mapping function from the image space to the joint embedding space 150 and also mappings of annotations to the joint embedding space 150. In an embodiment, a set of image features to be determined for each image is defined, and each image is represented as a vector of those image features. The mapping function for images can specify a mapping from the vector of image features to the joint embedding space. In various embodiments of the present invention, the mapping functions can be linear or non-linear.
[0042] New image embedder 144 includes the functionality to embed an image in joint embedding space 150 based upon a learned mapping. For example, new image embedder 144 can determine the location in which a new image is to be embedded based upon a mapping function learned using mapper 142. In an embodiment, new image embedder 144 determines a set of features of a new image and uses a mapping from the set of features to a location in joint embedding space 150.
[0043] Item associator 146 includes the functionality to determine associations, in the joint embedding space 150, between a newly embedded item and already embedded items. In an embodiment, item associator 146 determines the relationships between a newly embedded image and one or more annotations in the joint embedding space 150.
For example, item associator 146 can determine a ranked list of annotations that are closest to the newly embedded image. Annotator 138 may annotate the newly embedded image based upon the ranked list of annotations determined by item associator 146.
For example, item associator 146 can determine a ranked list of annotations that are closest to the newly embedded image. Annotator 138 may annotate the newly embedded image based upon the ranked list of annotations determined by item associator 146.
[0044] Semantic query module 148 includes the functionality to analyze associations in the joint embedding space 150 in order to output one or more items of any item types that are associated with another specified item. For example, semantic query module 148 may output all images that are associated with a particular query term by identifying the query term in the joint embedding space 150 and then identifying all images associated with that query term.
Method for Semantically Associating Items
Method for Semantically Associating Items
[0045] FIG. 2 illustrates a method 200 (steps 202-210) for associating semantically-related items of a plurality of item types with each other, according to an embodiment of the present invention. According to an embodiment, the associations can be used to annotate a new item.
[0046] In step 202, a joint embedding space is configured. In an embodiment, step 202 may be implemented by joint embedding space configurator 140 to create joint embedding space 150 in memory 104. The number of dimensions of the joint embedding space may be predetermined. As mentioned above, the number of dimensions can be determined based upon one or more factors, such as, but not limited to, required accuracy, available computing resources, and the size of the training database. Each dimension of the joint embedding space may be defined by a real-valued axis.
[0047] According to an embodiment, the joint embedding space is configured to embed data items including images and corresponding annotations. For example, in an embodiment, a corpus of pre-annotated images can be used to obtain training images and corresponding training annotations. In another embodiment, as described above, query click data from a web-based image search service can be used as training images and training annotations. Configuring the joint embedding space is described in further detail below with respect to FIG. 3.
[0048] In step 204, mapping functions to map each type of item to the joint embedding space are learned. According to an embodiment, the learning process iteratively selects sets of embedded training items and determines if the distances between the respective selected items based on their current locations in the joint embedding space correspond to the known relationships between them. For example, consider an embedded training image, its corresponding embedded training annotation, and an unrelated embedded training annotation. Then, if their current locations in the joint embedding space are such that the distance from the image to the corresponding annotation is less than the distance from the image to the unrelated annotation and at least a predetermined margin, the items can be considered to be already located consistently with the selected relationships, and therefore no changes to the mappings or their current locations are required.
Otherwise, the mappings and locations of the items are adjusted so that their locations relative to each other are improved.
Otherwise, the mappings and locations of the items are adjusted so that their locations relative to each other are improved.
[0049] Adjusting the location of any item in the joint embedding space can, in addition, trigger the adjustment of mapping functions and/or adjustment of locations of other items due to changes in the current mapping functions. For example, changing the location of an embedded annotation can change the current mapping function from the image space to the joint embedding space to maintain the consistency of the locations of images relative to the annotation.
[0050] The learning process, which is iterative, may be ended based on predetermined termination criteria, such as when a predetermined number of iterations of learning occur without substantial change to the mappings as determined by, for example, the relative magnitude of adjustments of locations of items. At the end of the learning process, the locations of items in the joint embedding space reflect the semantic relationship between items. In some embodiments, the learning process (step 204) can be performed from time to time as needed to incrementally improve the joint embedding space and learned mappings, for example, by embedding new training data or by adjusting the termination criteria to allow the learning process to continue to refine the joint embedding space and learned mappings.
[0051] Also, at the end of the learning process, the mapping functions can be considered stable. Depending upon the type of item, the mapping functions can differ in form. In an embodiment, the mapping function for images is used to map any image based on its features, to the joint embedding space, whereas each annotation is uniquely mapped. In the following, the term "trained joint embedding space" is used to refer to the joint embedding space after the learning process has been performed, when it is unclear from the context. The learning process 204 is further described below with respect to FIGs. 4-5.
[0052] In step 206, a new item is embedded in the joint embedding space. Prior to the embedding of the new item, according to an embodiment, the embedding of training data is completed and the learning process for mappings is completed. The new item is embedded in the trained joint embedding space in a location determined based upon a learned mapping function for the corresponding item type. In an embodiment, a new image can be embedded in the trained joint embedding space in a location determined based upon the learned mapping function for images. A predetermined set of features of the new image is calculated and the learned image mapping function is applied to the calculated set of features to determine the embedding location in the joint embedding space. Image feature vectors and annotation representations are described above with respect to FIG. 1.
[0053] In step 208, one or more associations between the newly embedded item and the previously embedded items are determined. In an embodiment, associations between a newly embedded image and previously embedded annotations are determined. The associations are based on a distance, such as the Euclidean distance, from the location of the newly embedded item to the locations of respective previously embedded items.
Various methods of using the annotations that have associations to the new image can be used. In one embodiment, all annotations that are within a predefined threshold distance from the new image can be considered. In another embodiment, the annotation with the shortest distance from the new image is considered.
Various methods of using the annotations that have associations to the new image can be used. In one embodiment, all annotations that are within a predefined threshold distance from the new image can be considered. In another embodiment, the annotation with the shortest distance from the new image is considered.
[0054] In step 210, the newly embedded item is annotated based on the associations determined in step 208. In an embodiment, a newly embedded image is annotated based on the annotation that is closest to that image. In another embodiment, the newly embedded image can be annotated based on all annotations within a predetermined distance from the image. In yet another embodiment, the one or more annotations within a predetermined distance from the newly embedded image may be combined and further processed in order to create an annotation to be assigned to the newly embedded image.
Configuring the Joint Embedding Space
Configuring the Joint Embedding Space
[0055] FIG. 3 illustrates a method (steps 302-308) for configuring a joint embedding space, according to an embodiment of the present invention. For example, in an embodiment, steps 302-308 perform the processing of step 202.
[0056] In step 302, the joint embedding space is created in a memory. In an embodiment, an X x D size array or matrix can be defined, where Xis the number of training items to be embedded and D is the number of dimensions of the joint embedding space.
Other structures are possible for the representation of the joint embedding space in memory, and are contemplated within the scope of the embodiments. A person of skill in the art would understand that the joint embedding space can be distributed between volatile memory and other memory resources such as virtual memory. As described above, the dimensionality of the joint embedding space is to be determined based upon various factors. Also, as described above according to an embodiment, locations in the joint embedding space can be determined based on real-valued axis defined for each dimension.
Other structures are possible for the representation of the joint embedding space in memory, and are contemplated within the scope of the embodiments. A person of skill in the art would understand that the joint embedding space can be distributed between volatile memory and other memory resources such as virtual memory. As described above, the dimensionality of the joint embedding space is to be determined based upon various factors. Also, as described above according to an embodiment, locations in the joint embedding space can be determined based on real-valued axis defined for each dimension.
[0057] In step 304, mapping functions are initialized for each item type that is embedded in the joint embedding space. According to an embodiment where the joint embedding space is configured for images and annotations, one mapping function from an image space to the joint embedding space is initialized, and a separate mapping function is initialized for each embedded annotation. The mapping function for images is based on a predetermined set of features, and therefore can be applied to any new image.
In an embodiment, the mapping for images is specified as a linear mapping and can be represented as a matrix. The mapping for each annotation is unique to that annotation and cannot be generalized to other annotations. In an embodiment, the mapping for each annotation linearly maps that annotation to a location in the joint embedding space.
In an embodiment, the mapping for images is specified as a linear mapping and can be represented as a matrix. The mapping for each annotation is unique to that annotation and cannot be generalized to other annotations. In an embodiment, the mapping for each annotation linearly maps that annotation to a location in the joint embedding space.
[0058] Steps 306 and 308 include the embedding of training annotations and training images, respectively, according to an embodiment. The training data comprising training annotations and training images may, for example, be from training database 114.
Training data is described above with respect to FIG. 1. In an embodiment, the training data comprises query click data from the Google Image Search service. Training images comprise images returned in response to an image search query, where the link or thumbnail to the image was clicked upon. Training annotations comprise queries entered into Image Search.
Training data is described above with respect to FIG. 1. In an embodiment, the training data comprises query click data from the Google Image Search service. Training images comprise images returned in response to an image search query, where the link or thumbnail to the image was clicked upon. Training annotations comprise queries entered into Image Search.
[0059] In steps 306 and 308, the training annotations and training images can be embedded in the joint embedding space. Embedding an item in the joint embedding space, according to an embodiment, can be performed by assigning a location to that item. According to an embodiment, the initial mappings are random and therefore the initial location for each item is random. According to an embodiment, a linear mapping for all images and a linear mapping for the i`h annotations are specified, respectively as shown in (1) and (2) below.
[0060] 01 (x) = Vx (1)
[0061] (I)WO= W,. (2)
[0062] where x is a image feature vector, V is a matrix in which the initial values can be random, and W indexes the i`h column of a YxD matrix. Y is the number of annotations and D is the number of dimensions in the joint embedding space.
[0063] The subsequent training process, which is described below, is intended to refine the locations of each image and annotation such that the final location in which an item is embedded in the trained joint embedding space is reflective of the item's semantic content in relation to other items located nearby.
Training and Learning Mappings to the Joint Embedding Space
Training and Learning Mappings to the Joint Embedding Space
[0064] FIG. 4 illustrates a method (steps 402-408) of learning, according to an embodiment of the present invention. In an embodiment, the processing of step 204 can be performed by steps 402-408. Steps 402-408 illustrate a stochastic process that can scalably train the joint embedding space and learn mappings for each item type based on a relatively small sampling of a very large training set. Steps 402-408 are iteratively performed until the satisfaction of a predetermined termination criterion.
[0065] In step 402, a triplet of items is selected such that the strength of the relationship between a first pair of items of the triplet is greater than the strength of relationship between a second pair. In an embodiment, a triplet of items having one embedded image and two embedded annotations, or two embedded images and one embedded annotation, is selected where at least one pair of items is known to be more strongly related than another pair of items. For example, the triplet can be an image, an annotation related to the image, and an annotation unrelated to the image. In the triplet, the related pair includes the image and the related annotation, and the unrelated pair includes the image and the unrelated annotation. The triplet can be selected, for example, based upon information available in known relationships database 120. In other embodiments, different combinations of items maybe selected.
[0066] In step 404, the distance between the known related pair and the distance between the unrelated pair in the joint embedding space are determined, and the distances are compared to the relative strength of the relationships between the first and second pairs of the triplet. If the distances between the items in each pair of the triplet in the joint embedding space are consistent with the known relationships, then no change to the mappings and joint embedding space are required, and processing can progress directly to step 406. If, however, the distances between the items in each pair of the triplet in the joint embedding space are not consistent with the known relationships, then processing progresses to step 406. For example, it may be determined whether the distance between the related pair is greater than the distance between the unrelated pair by a predetermined safety margin. In an embodiment, the distance is the Euclidean distance.
[0067] In step 406, the mappings and/or locations of one or more of the selected items in the joint embedding space are adjusted in order to make the relative distances among the selected items adhere to the relative strengths of the known relationships among the selected triplet of items. For example, if the triplet, described above, consisting of an image, related annotation, and unrelated annotation were selected, then the locations of any or all items in that triplet can be changed to adhere to those known relationships. The locations may be changed to have the distance between the related pair be less than the distance between the unrelated pair plus a safety margin, which can be predetermined. In an embodiment, the changes in the locations of selected items are determined based on a gradient descent technique. Gradient descent techniques, and particularly stochastic gradient techniques, are used to efficiently train the joint embedding space based on a relatively small sampling of a very large training data set. In an embodiment, as described below, a cost function is optimized to scale to very large data sets using stochastic gradient descent. Usunier, N., Buffoni, D., & Gallinari, P., "Ranking with ordered weighted pairwise classification," Proceedings of the 26th International Conference on Machine Learning, 2009, describes an example cost function.
[0068] The adjustments made to locations of items of the selected triplet in applying gradient descent may be based on the current location of the item, and one or more factors such as, but not limited to, the rank of items relative to one another, desired level of accuracy, and desired speed of convergence. In an exemplary embodiment, a new location for an item of the triplet is determined by adjusting its current location by a distance amount based upon the rank of the related pairing. With respect to a first item in a selected triplet, for example, an image, the "rank" of the related annotation, refers to the position of the related annotation in the sequence of all annotations arranged in order of least to greatest distance from the image. The goal of the training process is to adjust items in the joint embedding space such that the most related annotation closest to the image, i.e. has the highest rank with respect to the image. In an embodiment, the rank of an item x can be defined as in (3):
[0069] rank, (.f (x)) _ 11(f (x) >_ .fy (x)) (3) ray
[0070] where ranks (f (x)) is the rank of the related item y (e.g., related annotation in the example triplet) given by the distance function f (x). f (x) is a similarity function, returning high values for high similarity. f (x) measures a relationship between items i and x. Thus, in an embodiment, f(x) is the inverse of the Euclidean distance to item x in the joint embedding space. Adding a margin, the rank (3) can be specified as in (4).
[0071] rank~,(f (x)) _ I(1 + f (x) > f,(x)) (4) ;may
[0072] where ranks. (f(x)) can be considered the margin-penalized rank of y.
Thus, rank' (f(x)) compares the value off (x) for each annotation i with the corresponding value for the related annotation y. FIG. 5 illustrates a method of estimating the rank without determining the order of all annotations with respect to an item.
Thus, rank' (f(x)) compares the value off (x) for each annotation i with the corresponding value for the related annotation y. FIG. 5 illustrates a method of estimating the rank without determining the order of all annotations with respect to an item.
[0073] Embodiments may adjust the step size applied to the gradient descent technique by weighting the adjustment based upon the rank of the related pair in the triplet.
According to an embodiment, a loss of a rank position at the higher end of the rankings incurs a higher cost than at the lower end. For example, the cost function that the gradient descent technique operates to minimize is increased when the related annotation is ranked near the highest rank (but not highest ranked) than when the related annotation is ranked in the lower rankings. Adjusting the step size of the gradient descent technique based on rank of items is a technique by which the learning process can be optimized for speed and to achieve high accuracy level with respect to the most likely annotations for images.
According to an embodiment, a loss of a rank position at the higher end of the rankings incurs a higher cost than at the lower end. For example, the cost function that the gradient descent technique operates to minimize is increased when the related annotation is ranked near the highest rank (but not highest ranked) than when the related annotation is ranked in the lower rankings. Adjusting the step size of the gradient descent technique based on rank of items is a technique by which the learning process can be optimized for speed and to achieve high accuracy level with respect to the most likely annotations for images.
[0074] The contribution to the overall cost function by each selected triplet (x, y, y), where (x, y) is the related pair and (x, y ) is the unrelated pair, can be defined as in (5).
[0075] err(f (x)' y, y) = L(rank'Y (f (x))) 11- f ; (x) + fy (x) (5)
[0076] L(ranky (f (x))) is the weight based on rank, as noted above. In each iteration of training, according to an embodiment, the locations and mappings of the selected triplet are adjusted (if the corresponding distances are inconsistent with the known relationships) so that subsequent to the adjustments the value of (5) is lower than in the current iteration.
In an embodiment, the adjustment to mappings and locations is determined by (6).
In an embodiment, the adjustment to mappings and locations is determined by (6).
[0077] /~(t + 1) _ fi(t) - Yr err f (x), y, y (6) ap(t)
[0078] /3(t) is the parameter, such as a mapping, to be adjusted at time t, and y, is the learning rate at time t. The partial derivative term in (6) represents the gradient which, in this embodiment, is the approximate error of the selected triplet with respect to the parameter /3(t) being adjusted.
[0079] In step 406, in an embodiment, the locations of items can be adjusted based on the gradient step determined by (6). In an embodiment, the locations of the annotations can be adjusted, for example, by adjusting the mapping for the annotations in the selected triplet. The locations of images may be adjusted by adjusting the image mapping function. In an embodiment, the mappings are adjusted so that the annotations are moved with respect to the related images. The image mapping function can be adjusted accordingly, for example, based on (6) to be consistent with the newly moved related annotations.
[0080] In step 408, one or more termination criteria are evaluated. If the termination criteria are satisfied, the learning process is ended. If the termination criteria are not satisfied, the process iterates steps 402-408. The termination criteria can be based on the magnitude of the changes in location of selected items over one or more iterations of steps 402-408. In another embodiment, the termination criteria can be based on evaluating whether a set of randomly selected embedded items are substantially compliant with the known relationships. Various other termination criteria are possible, and are contemplated within embodiments of the present invention. It should be noted that while the accuracy of relationships in the joint embedding space would likely improve with increased iterations of executing the learning process, the improvements gained beyond a point may not be significant. Thus, the termination criteria can be determined based on factors such as the size and nature of the training data set, the level of accuracy desired, and available computing power.
Ranking Relationships for Very Large Training Data Sets
Ranking Relationships for Very Large Training Data Sets
[0081] FIG. 5 illustrates a method (steps 502-506) of selecting a triplet of items, according to an embodiment. In an embodiment, the processing of step 402 can be performed by steps 502-506.
[0082] In step 502, a first and a second item of the triplet of items are selected so that they are related with each other. For example, the first item can be an embedded training image and the second item can be an embedded training annotation which is a query related with the first item.
[0083] In step 504, a third item is selected such that the relationship between the third item and the first item is either non-existent or weaker than the relationship between the first and second items, but the distance from the first item to the third item in the joint embedding space is less than the distance from the first item to the second item.
Deliberately selecting a third item that violates the distance condition among the triplet of items often leads to faster convergence of the learning process than, for example, when selecting the third item randomly from items that are not related to the first item. Thus, a third item can be repetitively picked from items that are not related to the first item until both conditions mentioned above in this paragraph are met by the selected third item.
Deliberately selecting a third item that violates the distance condition among the triplet of items often leads to faster convergence of the learning process than, for example, when selecting the third item randomly from items that are not related to the first item. Thus, a third item can be repetitively picked from items that are not related to the first item until both conditions mentioned above in this paragraph are met by the selected third item.
[0084] In step 506, the rank of the second item in relation to the first item is determined.
In an embodiment, the rank of the second item relative to the first item is estimated based upon the number of iterations that were required to select the third item which satisfies the two conditions set forth with respect to step 504. The rank determined according to step 506 can be indicated as in (7).
In an embodiment, the rank of the second item relative to the first item is estimated based upon the number of iterations that were required to select the third item which satisfies the two conditions set forth with respect to step 504. The rank determined according to step 506 can be indicated as in (7).
[0085] rank' (f (x)) Y 1 ] (7)
[0086] Nis the number of iterations that was required to select the third item, and Y is the total number of embedded annotations. By estimating the rank in a fast and efficient manner, such as in (7), embodiments of the present invention can substantially increase the speed of the learning process increasing the scalability to very large training data sets.
For example, estimating the rank using (7) can scale up to very large data sets compared to other techniques, such as using (4), of using stochastic gradient descent for the cost (5).
Other Embodiments
For example, estimating the rank using (7) can scale up to very large data sets compared to other techniques, such as using (4), of using stochastic gradient descent for the cost (5).
Other Embodiments
[0087] The joint embedding space, as noted above, can be used to embed items of various data types. In addition to the image annotation application described above, other applications can be implemented using the joint embedding space configured with very large training data.
[0088] In an embodiment, audio and/or video recordings can be annotated using the joint embedding space. In another embodiment, one or more item types of audio, video, images and text can be related to each other. For example, all items, regardless of type, that are semantically related to the annotation "dolphin" can be retrieved based on the distance of those items to the annotation "dolphin" in the joint embedding space.
[0089] FIG. 6 illustrates another method 600 for associating semantically-related items of a plurality of item types, according to an embodiment. Method 600 can be used for item retrieval based on semantic associations among stored items. In an embodiment, method 600 can be implemented in semantic query module 148. For example, method 600 can be used to retrieve all items in the joint embedding space, regardless of item type, that are semantically associated with the query item.
[0090] Steps 602 and 604 are similar to steps 202 and 204 described above. As noted above, subsequent to step 204, the joint embedding space has completed training with the currently available training data set, and can be referred to as the trained joint embedding space.
[0091] In step 606, an embedded item is identified in the trained joint embedding space.
The identification step may be triggered by the receipt of a query request specifying a particular keyword. The received query keyword can then be identified in the trained joint embedding space.
The identification step may be triggered by the receipt of a query request specifying a particular keyword. The received query keyword can then be identified in the trained joint embedding space.
[0092] In step 608, other embedded items that are associated with the identified item are selected. In an embodiment, all items that have a distance from the identified item that is less than a predetermined threshold can be considered as associated items.
[0093] In step 610, the associated items are output. For example, a list of items that are related to the query item may be returned.
[0094] According to another embodiment, the joint embedding space can be utilized in a music information query system. For example, as shown in FIG. 7, a music information query system 700 can include at least one server system 100 and one or more clients 780 that communicate with server system 100. According to an embodiment, in response to a query from client 780, server system 100 is configured to use a joint embedding space to perform tasks, such as, returning a list of songs or songs attributed to a particular artist, returning songs that are most similar to a given audio track, returning a list of songs that are most closely associated with a specified annotation, and like tasks. For example, semantic client query module 782 may include logic for client 780 to query server system 100.
[0095] As shown in FIG. 8, in an embodiment, music information query system 700 can include several modules 872-878 in addition to or in place of some of the modules of server 100 shown in FIG. 1. According to an embodiment, in system 700, training data 114 may include items belonging to one or more of the item types known audio track artists 874 (e.g. names of musicians, artist's names), known audio track characteristics 872, known audio tracks 876, and known audio annotations 878. Items of known audio track characteristics 872 type can include, for example and without limitation, tags or other annotation descriptive of characteristics of an audio track, such as the type of music, instruments and the like. Examples of tags or annotations can also include descriptors such as voice, no voice, classical, not classical, drums, no drums, and the like. Tags may include user assigned tags for particular audio tracks. Audio track analyzer 882 may include logic to analyze audio tracks and determine one or more characteristics descriptive of the audio track.
[0096] In an embodiment, audio track characteristics include those determined according to the Mel Frequency Cepstral Coefficient (MFCC) representation. For each audio track, a subset of the MFCCs can be determined as features of the audio track. In another embodiment, these MFCCs can be combined with their first and second derivatives as additional features. In yet another embodiment, a set of typical MFCCs are determined for the training data set and characteristics of each audio track are represented by a vector of counts of the number of frames in the audio track that correspond to the determined typical MFCC. Other exemplary audio track characteristics or features include spectral features, temporal features, and Stabilized Auditory Image (SAI) features. SAI
features are based on adaptive pole-zero filter cascade auditory filter banks. The features of the audio track can be represented as a feature vector.
features are based on adaptive pole-zero filter cascade auditory filter banks. The features of the audio track can be represented as a feature vector.
[0097] As described above, data from training data 114 is used for embedding into the joint embedding space 150. New audio item embedder 880 may include logic for embedding audio items in the joint embedding space 150. For example, in an embodiment, new audio item embedder 880 can determine the location in which a new song is to be embedded based upon a mapping function learned using mapper 142.
In an embodiment, new audio item embedder 880 determines a set of features of a new song and uses a mapping from the set of features to a location in joint embedding space 150.
Audio annotator 884 may include logic to determine annotations based upon association of audio items in the joint embedding space 150.
In an embodiment, new audio item embedder 880 determines a set of features of a new song and uses a mapping from the set of features to a location in joint embedding space 150.
Audio annotator 884 may include logic to determine annotations based upon association of audio items in the joint embedding space 150.
[0098] FIG.9 illustrates a method 900 for server system 100 to respond to a query from client 780, according to an embodiment. In step 902, the server system 100 receives a query from client 780. The query can include, for example, the name of an artist. In step 904, the server system 100 embeds one or more items (e.g., name of artist received) in the joint embedding space 150. Items in the joint embedding space 150 that are within a predetermined distance from, or items that are the closest to, the embedded query are found. The determined items are then used to form a response to the query.
Method 200 which is described above, for example, can be used to perform the functions of step 904.
In step 906, the results to the query are returned to the querying client.
Method 200 which is described above, for example, can be used to perform the functions of step 904.
In step 906, the results to the query are returned to the querying client.
[0099] According to an embodiment, the music query information system 700 includes a joint embedding space 150 using which songs, artists and tags attributed to music can all be reasoned about jointly by learning a single model to capture the semantics of, and hence the relationships between, each of these musical concepts. Using a joint embedding space 150, these semantic relationships are modeled in a feature space of dimension d, where musical concepts (songs, artists or tags) are represented as coordinate vectors. The similarity between two concepts can be measured using the dot product between their two vector representations. Other possible instantiations include using a cosine similarity metric, or the Euclidean distance, or the p-norm distance between the two vector representations to measure similarity instead. The vectors may be learned to induce similarities relevant (e.g., by optimizing a precision metric) for tasks such as artist prediction (e.g. given a song or audio clip, return a ranked list of the likely artists to have performed it), song prediction (e.g., given an artist's name, return a ranked list of songs that are likely to have been performed by that artist), similar artists (e.g., given an artist's name, return a ranked list of artists that are similar to that artist), similar songs (e.g., given a song or audio clip, return a ranked list of songs that are similar to it), and tag prediction (e.g., given a song or audio clip, return a ranked list of tags that might best describe the song. A precision metric can include, for some predetermined value k, the number of true positives in the first k returned results.
[0100] According to an embodiment, a training database 114 can include artist names, songs (in the form of features corresponding to their audio content), and tags associated with the songs. The information in the database can be represented as in (8):
{(ai ~ ti) si)}r= 1 A 11x,1 x RISC
{(ai ~ ti) si)}r= 1 A 11x,1 x RISC
[0101] D = (8) i...,n ~ 1,..., 1
[0102] where each triplet represents a song indexed by is ai are the artist features, ti are the tag features and si are the audio (sound) features. Each song may have attributed to it a set of artists at, and/or a corresponding set of tags ti. The audio of the song itself is represented as an S -dimensional real-valued feature vector si.
[0103] For a given artist, i = 1... A , its coordinate vector is expressed as in (9):
[0104] ") (i) : {1,.... (A I} -* R d = A, (9) Alis, [0105] where A= [A, ...
AIAI ] is a d x A matrix of the parameters (vectors) of all the artists in the database. This entire matrix can be learned during the training phase of the algorithm.
[0106] Similarly, f o r a given tag i = 1 . . . T , its coordinate vector can be represented as in (10):
[0107] (D Tag(i):{1,....ITII->R`'-T, (10) [0108] where T = [T, ... T TI ] is a d x T matrix of the parameters (vectors) of all the tags in the database. This matrix too can be learned during the training phase of the algorithm.
[0109] For a song or audio clip, the following function maps its audio features s' to a d-dimensional vector using a linear transform V as in (11):
[0110] Song (s') : R S -* R`` = Vs' (11) [0111] The d x S matrix V can also be learned during the training phase.
Mapping functions for item types are also described above in relation to step 304 of FIG. 3.
[0112] According to an embodiment, the goal of the joint embedding space in the music query information system 700 is, for a given input or query, to rank the possible outputs of interest depending on the task (e.g., artist prediction, song prediction, etc.) such that the highest ranked outputs are the best semantic match for that input. For example, for the artist prediction task, an optimization or ranking such as (12):
[0113] fArtistPrediction(s') = JAP(s') = Artist (i)T~ Soug (s') = Ar'V' (12) ' r [0114] Similar ranking functions can be defined for all other tasks (e.g.
artist prediction, song prediction, etc). According to embodiments, many of these tasks share the same parameters, for example, the song prediction and similar artist tasks share the matrix A
whereas the tag prediction and song prediction tasks share the matrix V. Such sharing makes it possible to learn the parameters A, T and V above of the joint embedding space 150 to jointly perform two or more tasks. The joint performing of tasks may be referred to as multi-task learning.
[0115] According to an embodiment, the objective function to be optimized for a task can be defined as rerr' (f (xi), y1) where x is the set of input examples (e.g.
from the training data), y is the set of corresponding trained target examples, and err' is a loss function that measures the quality of the current ranking. According to an embodiment, err' (JTP (Si), t,.) can be minimized for a tag prediction task and err (f ""
(s;), ai ) can be minimized for an artist prediction task. In embodiments, in a manner similar to that described in relation to (5) above, each of the task functions can be separately minimized. According to another embodiment, the task functions can be multi-tasked, or more specifically, minimized together as in (13):
[0116] err' AP+TP (D) _ J,err' (f TP (s,), ai) + J,err' (.f TP (s;), t1) (13) [0117] As shown in (13), to multi-task these two tasks, the (unweighted) sum of the two objective functions can be considered. Multi-tasking can be extended to more than two tasks in the manner indicated in (13). Optimization of the joint embedding space for various tasks, such as those in (13), for example, can be performed using a stochastic gradient descent approach, as described above in relation to another embodiment. This can amount to iteratively repeating the following procedure: picking one of the tasks at random, picking one of the training input-output pairs for this task, and making a gradient step for this task and input-output pair. The iterations continue until a termination criteria, such as a magnitude of the error (e.g., err' from above), is below a threshold. The procedure is the same when considering more than two tasks. An application of gradient descent to optimize a joint embedding space is described above in relation to FIGs. 4-5.
Conclusion [0118] The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way.
[0119] The present invention has been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof.
The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.
[0120] The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can, by applying knowledge within the skill of the art, readily modify and/or adapt for various applications such specific embodiments, without undue experimentation, without departing from the general concept of the present invention. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.
[0121] The breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.
AIAI ] is a d x A matrix of the parameters (vectors) of all the artists in the database. This entire matrix can be learned during the training phase of the algorithm.
[0106] Similarly, f o r a given tag i = 1 . . . T , its coordinate vector can be represented as in (10):
[0107] (D Tag(i):{1,....ITII->R`'-T, (10) [0108] where T = [T, ... T TI ] is a d x T matrix of the parameters (vectors) of all the tags in the database. This matrix too can be learned during the training phase of the algorithm.
[0109] For a song or audio clip, the following function maps its audio features s' to a d-dimensional vector using a linear transform V as in (11):
[0110] Song (s') : R S -* R`` = Vs' (11) [0111] The d x S matrix V can also be learned during the training phase.
Mapping functions for item types are also described above in relation to step 304 of FIG. 3.
[0112] According to an embodiment, the goal of the joint embedding space in the music query information system 700 is, for a given input or query, to rank the possible outputs of interest depending on the task (e.g., artist prediction, song prediction, etc.) such that the highest ranked outputs are the best semantic match for that input. For example, for the artist prediction task, an optimization or ranking such as (12):
[0113] fArtistPrediction(s') = JAP(s') = Artist (i)T~ Soug (s') = Ar'V' (12) ' r [0114] Similar ranking functions can be defined for all other tasks (e.g.
artist prediction, song prediction, etc). According to embodiments, many of these tasks share the same parameters, for example, the song prediction and similar artist tasks share the matrix A
whereas the tag prediction and song prediction tasks share the matrix V. Such sharing makes it possible to learn the parameters A, T and V above of the joint embedding space 150 to jointly perform two or more tasks. The joint performing of tasks may be referred to as multi-task learning.
[0115] According to an embodiment, the objective function to be optimized for a task can be defined as rerr' (f (xi), y1) where x is the set of input examples (e.g.
from the training data), y is the set of corresponding trained target examples, and err' is a loss function that measures the quality of the current ranking. According to an embodiment, err' (JTP (Si), t,.) can be minimized for a tag prediction task and err (f ""
(s;), ai ) can be minimized for an artist prediction task. In embodiments, in a manner similar to that described in relation to (5) above, each of the task functions can be separately minimized. According to another embodiment, the task functions can be multi-tasked, or more specifically, minimized together as in (13):
[0116] err' AP+TP (D) _ J,err' (f TP (s,), ai) + J,err' (.f TP (s;), t1) (13) [0117] As shown in (13), to multi-task these two tasks, the (unweighted) sum of the two objective functions can be considered. Multi-tasking can be extended to more than two tasks in the manner indicated in (13). Optimization of the joint embedding space for various tasks, such as those in (13), for example, can be performed using a stochastic gradient descent approach, as described above in relation to another embodiment. This can amount to iteratively repeating the following procedure: picking one of the tasks at random, picking one of the training input-output pairs for this task, and making a gradient step for this task and input-output pair. The iterations continue until a termination criteria, such as a magnitude of the error (e.g., err' from above), is below a threshold. The procedure is the same when considering more than two tasks. An application of gradient descent to optimize a joint embedding space is described above in relation to FIGs. 4-5.
Conclusion [0118] The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way.
[0119] The present invention has been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof.
The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.
[0120] The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can, by applying knowledge within the skill of the art, readily modify and/or adapt for various applications such specific embodiments, without undue experimentation, without departing from the general concept of the present invention. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.
[0121] The breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.
Claims (27)
1. A method for associating semantically-related items of a plurality of item types, comprising:
(a) embedding training items of the plurality of item types in a joint embedding space configured in a memory coupled to at least one processor;
(b) learning one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings; and (c) associating one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
(a) embedding training items of the plurality of item types in a joint embedding space configured in a memory coupled to at least one processor;
(b) learning one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings; and (c) associating one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
2. The method of claim 1, further comprising:
(d) embedding the first item at a first location, determined by applying the one or more learned mapping for a first item type of the plurality of item types, in the trained joint embedding space.
(d) embedding the first item at a first location, determined by applying the one or more learned mapping for a first item type of the plurality of item types, in the trained joint embedding space.
3. The method of claim 2, further comprising:
(e) annotating the first item based upon the one or more associated embedded training items.
(e) annotating the first item based upon the one or more associated embedded training items.
4. The method of claim 2, wherein the learning step (b) comprises:
(i) selecting a second item, a third item, and a fourth item from the embedded training items, wherein the second item and the third item are related, and wherein the second item and the fourth item are not related;
(ii) determining that a first distance is less than a second distance, wherein the first distance is a distance between the second item and the third item in the joint embedding space, and wherein the second distance is a distance between the second item and the fourth item in the joint embedding space; and (iii) adjusting the one or more learned mappings based upon the determining.
(i) selecting a second item, a third item, and a fourth item from the embedded training items, wherein the second item and the third item are related, and wherein the second item and the fourth item are not related;
(ii) determining that a first distance is less than a second distance, wherein the first distance is a distance between the second item and the third item in the joint embedding space, and wherein the second distance is a distance between the second item and the fourth item in the joint embedding space; and (iii) adjusting the one or more learned mappings based upon the determining.
5. The method of claim 4, wherein the adjusting step (iii) further comprises changing locations in the joint embedding space of at least one of the second, third, and fourth items.
6. The method of claim 5, wherein the changing locations step comprises:
moving at least one of the second, third, or fourth item in the joint embedding space such that a distance between the second and third items is less than a distance from the second item to the fourth items.
moving at least one of the second, third, or fourth item in the joint embedding space such that a distance between the second and third items is less than a distance from the second item to the fourth items.
7. The method of claim 6, wherein the moving is based upon a stochastic gradient descent technique.
8. The method of claim 4, wherein the adjusting is based upon a stochastic gradient descent technique.
9. The method of claim 4, wherein the selecting step (i) comprises:
iteratively choosing an item as the fourth item until a distance from the second item to the selected item is less than the distance between the second and third items;
and estimating a rank of the third item in relation to the second item based upon the number of iterations required to choose the fourth item.
iteratively choosing an item as the fourth item until a distance from the second item to the selected item is less than the distance between the second and third items;
and estimating a rank of the third item in relation to the second item based upon the number of iterations required to choose the fourth item.
10. The method of claim 9, wherein the changing locations step comprises:
moving at least one of the second, third, or fourth item in the joint embedding space such that a distance between the second and third items is less than a distance from the second item to the fourth item.
moving at least one of the second, third, or fourth item in the joint embedding space such that a distance between the second and third items is less than a distance from the second item to the fourth item.
11. The method of claim 10, wherein the moving is based upon a stochastic gradient descent technique weighted based upon the estimated rank.
12. The method of claim 4, wherein the learning step (b) further comprises:
(iv) repeating at least steps (i)-(iii) until a predetermined termination criteria is satisfied.
(iv) repeating at least steps (i)-(iii) until a predetermined termination criteria is satisfied.
13. The method of claim 4, wherein the learning step (b) further comprises:
learning a first mapping function for all items of the first item type; and learning respective mapping functions for each of a plurality of items of a second item type.
learning a first mapping function for all items of the first item type; and learning respective mapping functions for each of a plurality of items of a second item type.
14. The method of claim 1, further comprising:
identifying a query subject in the trained joint embedding space, wherein the query subject is an embedded training item;
determining one or more trained embedded items located within a predetermined distance of the query subject as result items; and outputting the result items.
identifying a query subject in the trained joint embedding space, wherein the query subject is an embedded training item;
determining one or more trained embedded items located within a predetermined distance of the query subject as result items; and outputting the result items.
15. A system for associating semantically-related items of a plurality of item types, comprising:
at least one processor;
a memory coupled to the at least one processor;
a joint embedding space configurator configured to embed training items of the plurality of item types in a joint embedding space in the memory;
a mapper configured to learn one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings; and an item associator configured associate one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
at least one processor;
a memory coupled to the at least one processor;
a joint embedding space configurator configured to embed training items of the plurality of item types in a joint embedding space in the memory;
a mapper configured to learn one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings; and an item associator configured associate one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
16. The system of claim 15, further comprising:
a new item embedder configured to embed a first item at a first location in the joint embedding space, the first location determined by applying a learned mapping for a first item type of the plurality of item types.
a new item embedder configured to embed a first item at a first location in the joint embedding space, the first location determined by applying a learned mapping for a first item type of the plurality of item types.
17. The system of claim 16, further comprising:
an annotator configured to annotate the first item based upon the one or more associated embedded training items.
an annotator configured to annotate the first item based upon the one or more associated embedded training items.
18. The system of claim 16, wherein the mapper is further configured to learn the mapping for one or more item types using a stochastic gradient technique.
19. The system of claim 18, wherein the item associator is further configured to:
iteratively choose an item as the fourth item until a distance from the second item to the selected item is less than the distance between the second and third items;
and estimate a rank of the third item in relation to the second item based upon the number of iterations required to choose the fourth item.; and move at least one of the second, third, or fourth item in the joint embedding space such that a distance between the second and third items is less than a distance from the second item to the fourth item, wherein the move is based on a stochastic gradient technique weighted based upon the estimated rank.
iteratively choose an item as the fourth item until a distance from the second item to the selected item is less than the distance between the second and third items;
and estimate a rank of the third item in relation to the second item based upon the number of iterations required to choose the fourth item.; and move at least one of the second, third, or fourth item in the joint embedding space such that a distance between the second and third items is less than a distance from the second item to the fourth item, wherein the move is based on a stochastic gradient technique weighted based upon the estimated rank.
20. The system of claim 15, wherein the joint embedding space comprises a predetermined number of real valued axis.
21. The system of claim 15, further comprising:
a semantic query module configured to:
identify a query subject in the trained joint embedding space, wherein the query subject is an embedded training item; and determine one or more trained embedded items located within a predetermined distance of the query subject as result items.
a semantic query module configured to:
identify a query subject in the trained joint embedding space, wherein the query subject is an embedded training item; and determine one or more trained embedded items located within a predetermined distance of the query subject as result items.
22. A computer readable medium storing instructions wherein said instructions when executed cause at least one processor to associate semantically-related items of a plurality of item types using a method comprising:
embedding training items of the plurality of item types in a joint embedding space configured in a memory coupled to at least one processor;
learning one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings;
and associating one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
embedding training items of the plurality of item types in a joint embedding space configured in a memory coupled to at least one processor;
learning one or more mappings into the joint embedding space for each of the item types to create a trained joint embedding space and one or more learned mappings;
and associating one or more embedded training items with a first item based upon a distance in the trained joint embedding space from the first item to each said associated embedded training items.
23. A method for responding to a query, comprising:
receiving the query;
determining, in response to the query, a location in a joint embedding space configured in a memory coupled to at least one processor, wherein a distance between a first item and a second item embedded in the joint embedding space corresponds to a semantic relationship between the first and second items, and wherein items of a plurality of item types are embedded in the joint embedding space;
identifying one or more results based upon one or more items embedded in the joint embedding space closest to the location; and returning the one or more results as a response to the query.
receiving the query;
determining, in response to the query, a location in a joint embedding space configured in a memory coupled to at least one processor, wherein a distance between a first item and a second item embedded in the joint embedding space corresponds to a semantic relationship between the first and second items, and wherein items of a plurality of item types are embedded in the joint embedding space;
identifying one or more results based upon one or more items embedded in the joint embedding space closest to the location; and returning the one or more results as a response to the query.
24. The method of claim 23, wherein the determining the location comprises:
determining a query item based upon the received query; and embedding the query item at the location, wherein the location is determined by applying at least one learned mapping for an item type of the query item.
determining a query item based upon the received query; and embedding the query item at the location, wherein the location is determined by applying at least one learned mapping for an item type of the query item.
25. The method of claim 23, wherein the query includes an artist's name or a song and the one or more results include at least one of a second artist's name and a second song, wherein the at least one of a second artist's name and a second song is associated with the artist's name or the song.
26. The method of claim 23, wherein the query includes a tag, and the one or more results include at least one image, wherein the image is associated with the tag.
27. A method of querying, comprising:
transmitting a query to a server, wherein the server includes a joint embedding space configured in a memory coupled to at least one processor, wherein a distance between a first item and a second item embedded in the joint embedding space corresponds to a semantic relationship between the first item and the second item, wherein items of a plurality of item types are embedded in the joint embedding space; and receiving a response from the server, wherein the response is formed by the server by identifying a location corresponding to the query in the joint embedding space, and by identifying one or more result items closest to the identified location.
transmitting a query to a server, wherein the server includes a joint embedding space configured in a memory coupled to at least one processor, wherein a distance between a first item and a second item embedded in the joint embedding space corresponds to a semantic relationship between the first item and the second item, wherein items of a plurality of item types are embedded in the joint embedding space; and receiving a response from the server, wherein the response is formed by the server by identifying a location corresponding to the query in the joint embedding space, and by identifying one or more result items closest to the identified location.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US30035610P | 2010-02-01 | 2010-02-01 | |
US61/300,356 | 2010-02-01 | ||
PCT/US2011/023398 WO2011094757A1 (en) | 2010-02-01 | 2011-02-01 | Joint embedding for item association |
Publications (2)
Publication Number | Publication Date |
---|---|
CA2786727A1 true CA2786727A1 (en) | 2011-08-04 |
CA2786727C CA2786727C (en) | 2017-08-29 |
Family
ID=43769130
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CA2786727A Active CA2786727C (en) | 2010-02-01 | 2011-02-01 | Joint embedding for item association |
Country Status (7)
Country | Link |
---|---|
US (1) | US9110922B2 (en) |
EP (1) | EP2531936A1 (en) |
JP (1) | JP5749279B2 (en) |
CN (1) | CN102782678B (en) |
AU (1) | AU2011210535B2 (en) |
CA (1) | CA2786727C (en) |
WO (1) | WO2011094757A1 (en) |
Families Citing this family (48)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8463053B1 (en) | 2008-08-08 | 2013-06-11 | The Research Foundation Of State University Of New York | Enhanced max margin learning on multimodal data mining in a multimedia database |
US9792638B2 (en) | 2010-03-29 | 2017-10-17 | Ebay Inc. | Using silhouette images to reduce product selection error in an e-commerce environment |
US8819052B2 (en) | 2010-03-29 | 2014-08-26 | Ebay Inc. | Traffic driver for suggesting stores |
US9405773B2 (en) * | 2010-03-29 | 2016-08-02 | Ebay Inc. | Searching for more products like a specified product |
US8949252B2 (en) | 2010-03-29 | 2015-02-03 | Ebay Inc. | Product category optimization for image similarity searching of image-based listings in a network-based publication system |
US8861844B2 (en) | 2010-03-29 | 2014-10-14 | Ebay Inc. | Pre-computing digests for image similarity searching of image-based listings in a network-based publication system |
US8412594B2 (en) | 2010-08-28 | 2013-04-02 | Ebay Inc. | Multilevel silhouettes in an online shopping environment |
US8838680B1 (en) | 2011-02-08 | 2014-09-16 | Google Inc. | Buffer objects for web-based configurable pipeline media processing |
US10055493B2 (en) * | 2011-05-09 | 2018-08-21 | Google Llc | Generating a playlist |
EP2764468A4 (en) * | 2011-10-05 | 2015-11-18 | Cireca Theranostics Llc | Method and system for analyzing biological specimens by spectral imaging |
US9075824B2 (en) * | 2012-04-27 | 2015-07-07 | Xerox Corporation | Retrieval system and method leveraging category-level labels |
US9129227B1 (en) * | 2012-12-31 | 2015-09-08 | Google Inc. | Methods, systems, and media for recommending content items based on topics |
US9172740B1 (en) | 2013-01-15 | 2015-10-27 | Google Inc. | Adjustable buffer remote access |
US9311692B1 (en) | 2013-01-25 | 2016-04-12 | Google Inc. | Scalable buffer remote access |
US9225979B1 (en) | 2013-01-30 | 2015-12-29 | Google Inc. | Remote access encoding |
CN103488664B (en) * | 2013-05-03 | 2016-12-28 | 中国传媒大学 | A kind of image search method |
US9582519B2 (en) | 2013-08-15 | 2017-02-28 | Dassault Systemes Simulia Corp. | Pattern-enabled data entry and search |
CN105095616A (en) * | 2014-04-24 | 2015-11-25 | 日本电气株式会社 | Data analysis device and data analysis method |
US20160378285A1 (en) * | 2015-06-24 | 2016-12-29 | Sap Se | Automatic Detection of Semantics |
US9779304B2 (en) * | 2015-08-11 | 2017-10-03 | Google Inc. | Feature-based video annotation |
US10262654B2 (en) * | 2015-09-24 | 2019-04-16 | Microsoft Technology Licensing, Llc | Detecting actionable items in a conversation among participants |
US11514244B2 (en) | 2015-11-11 | 2022-11-29 | Adobe Inc. | Structured knowledge modeling and extraction from images |
US11238362B2 (en) | 2016-01-15 | 2022-02-01 | Adobe Inc. | Modeling semantic concepts in an embedding space as distributions |
US10026020B2 (en) * | 2016-01-15 | 2018-07-17 | Adobe Systems Incorporated | Embedding space for images with multiple text labels |
DE102016013630A1 (en) * | 2016-01-15 | 2017-07-20 | Adobe Systems Incorporated | Embedded space for images with multiple text labels |
US10963504B2 (en) * | 2016-02-12 | 2021-03-30 | Sri International | Zero-shot event detection using semantic embedding |
CN108713212A (en) * | 2016-03-04 | 2018-10-26 | 范德曼公司 | Method, system and medium for providing information based on grouping information |
US10579940B2 (en) | 2016-08-18 | 2020-03-03 | International Business Machines Corporation | Joint embedding of corpus pairs for domain mapping |
US10642919B2 (en) | 2016-08-18 | 2020-05-05 | International Business Machines Corporation | Joint embedding of corpus pairs for domain mapping |
US10657189B2 (en) | 2016-08-18 | 2020-05-19 | International Business Machines Corporation | Joint embedding of corpus pairs for domain mapping |
US11361242B2 (en) * | 2016-10-28 | 2022-06-14 | Meta Platforms, Inc. | Generating recommendations using a deep-learning model |
DE102016223193A1 (en) | 2016-11-23 | 2018-05-24 | Fujitsu Limited | Method and apparatus for completing a knowledge graph |
US10908616B2 (en) | 2017-05-05 | 2021-02-02 | Hrl Laboratories, Llc | Attribute aware zero shot machine vision system via joint sparse representations |
US10755149B2 (en) | 2017-05-05 | 2020-08-25 | Hrl Laboratories, Llc | Zero shot machine vision system via joint sparse representations |
WO2019055114A1 (en) * | 2017-09-12 | 2019-03-21 | Hrl Laboratories, Llc | Attribute aware zero shot machine vision system via joint sparse representations |
US10489690B2 (en) | 2017-10-24 | 2019-11-26 | International Business Machines Corporation | Emotion classification based on expression variations associated with same or similar emotions |
US20190188285A1 (en) * | 2017-12-19 | 2019-06-20 | Facebook, Inc. | Image Search with Embedding-based Models on Online Social Networks |
US11797838B2 (en) | 2018-03-13 | 2023-10-24 | Pinterest, Inc. | Efficient convolutional network for recommender systems |
US11372914B2 (en) | 2018-03-26 | 2022-06-28 | Microsoft Technology Licensing, Llc | Image annotation |
US11294974B1 (en) * | 2018-10-04 | 2022-04-05 | Apple Inc. | Golden embeddings |
US11636123B2 (en) * | 2018-10-05 | 2023-04-25 | Accenture Global Solutions Limited | Density-based computation for information discovery in knowledge graphs |
US11227189B2 (en) * | 2019-07-17 | 2022-01-18 | Walmart Apollo, Llc | Systems and methods for identifying items in a digital image |
CN110717377B (en) * | 2019-08-26 | 2021-01-12 | 平安科技（深圳）有限公司 | Face driving risk prediction model training and prediction method thereof and related equipment |
US11574020B1 (en) * | 2019-12-12 | 2023-02-07 | Pinterest, Inc. | Identifying similar content in a multi-item embedding space |
US11544317B1 (en) * | 2020-08-20 | 2023-01-03 | Pinterest, Inc. | Identifying content items in response to a text-based request |
CN114117104B (en) * | 2020-08-28 | 2023-06-16 | 四川大学 | Image text matching method based on multi-relation perception reasoning |
CN112668320B (en) * | 2020-12-25 | 2024-02-02 | 平安科技（深圳）有限公司 | Model training method and device based on word embedding, electronic equipment and storage medium |
US20230252032A1 (en) * | 2022-02-07 | 2023-08-10 | Maplebear Inc. (Dba Instacart) | Accounting for item attributes when selecting items satisfying a query based on item embeddings and an embedding for the query |
Family Cites Families (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7171016B1 (en) * | 1993-11-18 | 2007-01-30 | Digimarc Corporation | Method for monitoring internet dissemination of image, video and/or audio files |
US6961712B1 (en) * | 1996-10-25 | 2005-11-01 | Ipf, Inc. | Consumer product information request (CPIR) enabling servlets and web-based consumer product information catalogs employing the same |
US6625581B1 (en) * | 1994-04-22 | 2003-09-23 | Ipf, Inc. | Method of and system for enabling the access of consumer product related information and the purchase of consumer products at points of consumer presence on the world wide web (www) at which consumer product information request (cpir) enabling servlet tags are embedded within html-encoded documents |
JP3500930B2 (en) * | 1997-09-22 | 2004-02-23 | ミノルタ株式会社 | Keyword assignment method and keyword automatic assignment device |
US6480841B1 (en) * | 1997-09-22 | 2002-11-12 | Minolta Co., Ltd. | Information processing apparatus capable of automatically setting degree of relevance between keywords, keyword attaching method and keyword auto-attaching apparatus |
US6304864B1 (en) * | 1999-04-20 | 2001-10-16 | Textwise Llc | System for retrieving multimedia information from the internet using multiple evolving intelligent agents |
GB2411014A (en) * | 2004-02-11 | 2005-08-17 | Autonomy Corp Ltd | Automatic searching for relevant information |
US20060031246A1 (en) * | 2004-08-04 | 2006-02-09 | Grayson Loren P | Universal database method and system |
US8838591B2 (en) * | 2005-08-23 | 2014-09-16 | Ricoh Co., Ltd. | Embedding hot spots in electronic documents |
US20070130112A1 (en) * | 2005-06-30 | 2007-06-07 | Intelligentek Corp. | Multimedia conceptual search system and associated search method |
EP1840764A1 (en) * | 2006-03-30 | 2007-10-03 | Sony France S.A. | Hybrid audio-visual categorization system and method |
CN100401302C (en) * | 2006-09-14 | 2008-07-09 | 浙江大学 | Image meaning automatic marking method based on marking significance sequence |
JP2009028290A (en) | 2007-07-27 | 2009-02-12 | Panasonic Corp | Washing machine |
US8423485B2 (en) * | 2007-09-14 | 2013-04-16 | The University Of Tokyo | Correspondence learning apparatus and method and correspondence learning program, annotation apparatus and method and annotation program, and retrieval apparatus and method and retrieval program |
US8326873B2 (en) * | 2008-01-09 | 2012-12-04 | Credit Suisse Securities (Usa) Llc | Enterprise architecture system and method |
GB2457267B (en) * | 2008-02-07 | 2010-04-07 | Yves Dassas | A method and system of indexing numerical data |
CN101587478B (en) | 2008-05-20 | 2013-07-24 | 株式会社理光 | Methods and devices for training, automatically labeling and searching images |
US7890512B2 (en) * | 2008-06-11 | 2011-02-15 | Microsoft Corporation | Automatic image annotation using semantic distance learning |
US20110184981A1 (en) * | 2010-01-27 | 2011-07-28 | Yahoo! Inc. | Personalize Search Results for Search Queries with General Implicit Local Intent |
-
2011
- 2011-02-01 JP JP2012551391A patent/JP5749279B2/en active Active
- 2011-02-01 WO PCT/US2011/023398 patent/WO2011094757A1/en active Application Filing
- 2011-02-01 AU AU2011210535A patent/AU2011210535B2/en active Active
- 2011-02-01 CA CA2786727A patent/CA2786727C/en active Active
- 2011-02-01 CN CN201180007972.8A patent/CN102782678B/en active Active
- 2011-02-01 EP EP11703984A patent/EP2531936A1/en not_active Ceased
- 2011-02-01 US US13/019,221 patent/US9110922B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
JP5749279B2 (en) | 2015-07-15 |
CA2786727C (en) | 2017-08-29 |
EP2531936A1 (en) | 2012-12-12 |
US20110191374A1 (en) | 2011-08-04 |
CN102782678A (en) | 2012-11-14 |
US9110922B2 (en) | 2015-08-18 |
AU2011210535A1 (en) | 2012-08-02 |
WO2011094757A1 (en) | 2011-08-04 |
AU2011210535B2 (en) | 2015-07-16 |
JP2013519138A (en) | 2013-05-23 |
CN102782678B (en) | 2016-03-16 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
AU2011210535B2 (en) | Joint embedding for item association | |
US9589208B2 (en) | Retrieval of similar images to a query image | |
CN109829104B (en) | Semantic similarity based pseudo-correlation feedback model information retrieval method and system | |
USRE47340E1 (en) | Image retrieval apparatus | |
RU2711125C2 (en) | System and method of forming training set for machine learning algorithm | |
Zhan et al. | Comprehensive distance-preserving autoencoders for cross-modal retrieval | |
KR20180129001A (en) | Method and System for Entity summarization based on multilingual projected entity space | |
Manisha et al. | Content-based image retrieval through semantic image segmentation | |
CN117435685A (en) | Document retrieval method, document retrieval device, computer equipment, storage medium and product | |
Tian et al. | Automatic image annotation with real-world community contributed data set | |
Yu et al. | Cross-modal subspace learning via kernel correlation maximization and discriminative structure-preserving | |
Xie et al. | Analyzing semantic correlation for cross-modal retrieval | |
US11709858B2 (en) | Mapping of unlabeled data onto a target schema via semantic type detection | |
TWI693524B (en) | Optimization method for searching exclusive personalized pictures | |
Braveen et al. | Evaluation of content based image retrieval systems based on color feature | |
TW202004519A (en) | Method for automatically classifying images | |
Pinjarkar et al. | Relevance feedback techniques in content based image retrieval: A survey | |
Salah et al. | Study between automatic image annotation approaches | |
Liu et al. | Faceted bug report search with topic model | |
Yang et al. | Enhanced Video BERT for Fast Video Advertisement Retrieval | |
Zhang et al. | Semantics-reconstructing hashing for cross-modal retrieval | |
Shirahama et al. | Hybrid negative example selection using visual and conceptual features | |
Slominski et al. | Semantic Content Search on IKEA. com | |
Liu et al. | A Study on Lung Image Retrieval Based on the Vocabulary Tree | |
CN115344734A (en) | Image retrieval method, image retrieval device, electronic equipment and computer-readable storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
EEER | Examination request |
Effective date: 20160129 |
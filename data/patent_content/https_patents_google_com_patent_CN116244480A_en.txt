CN116244480A - Hash-based dynamic restriction of content on information resources - Google Patents
Hash-based dynamic restriction of content on information resources Download PDFInfo
- Publication number
- CN116244480A CN116244480A CN202310159074.9A CN202310159074A CN116244480A CN 116244480 A CN116244480 A CN 116244480A CN 202310159074 A CN202310159074 A CN 202310159074A CN 116244480 A CN116244480 A CN 116244480A
- Authority
- CN
- China
- Prior art keywords
- content
- remote
- computing device
- information resource
- restricted
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000004044 response Effects 0.000 claims abstract description 233
- 238000000034 method Methods 0.000 claims abstract description 97
- 238000009877 rendering Methods 0.000 claims description 233
- 238000004590 computer program Methods 0.000 claims description 16
- 238000012545 processing Methods 0.000 description 291
- 239000003607 modifier Substances 0.000 description 59
- 238000004422 calculation algorithm Methods 0.000 description 57
- 230000006870 function Effects 0.000 description 46
- 230000005540 biological transmission Effects 0.000 description 42
- 238000013515 script Methods 0.000 description 42
- 230000008859 change Effects 0.000 description 32
- 230000000007 visual effect Effects 0.000 description 24
- 230000006399 behavior Effects 0.000 description 20
- 238000004891 communication Methods 0.000 description 19
- 230000004048 modification Effects 0.000 description 18
- 238000012986 modification Methods 0.000 description 18
- 238000004458 analytical method Methods 0.000 description 13
- 238000010586 diagram Methods 0.000 description 11
- 238000003780 insertion Methods 0.000 description 11
- 230000037431 insertion Effects 0.000 description 11
- 230000009471 action Effects 0.000 description 9
- 238000001514 detection method Methods 0.000 description 9
- 230000002452 interceptive effect Effects 0.000 description 9
- 238000009826 distribution Methods 0.000 description 8
- 238000012015 optical character recognition Methods 0.000 description 8
- 238000010200 validation analysis Methods 0.000 description 8
- 230000003993 interaction Effects 0.000 description 7
- 239000003795 chemical substances by application Substances 0.000 description 6
- 230000003287 optical effect Effects 0.000 description 6
- 230000008569 process Effects 0.000 description 6
- 238000012790 confirmation Methods 0.000 description 5
- 230000006855 networking Effects 0.000 description 5
- PXFBZOLANLWPMH-UHFFFAOYSA-N 16-Epiaffinine Natural products C1C(C2=CC=CC=C2N2)=C2C(=O)CC2C(=CC)CN(C)C1C2CO PXFBZOLANLWPMH-UHFFFAOYSA-N 0.000 description 4
- 238000003708 edge detection Methods 0.000 description 4
- 239000011159 matrix material Substances 0.000 description 4
- 238000005192 partition Methods 0.000 description 4
- 238000003909 pattern recognition Methods 0.000 description 4
- 230000000644 propagated effect Effects 0.000 description 3
- 230000001953 sensory effect Effects 0.000 description 3
- 230000004913 activation Effects 0.000 description 2
- 230000015556 catabolic process Effects 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 2
- 125000004122 cyclic group Chemical group 0.000 description 2
- 238000006731 degradation reaction Methods 0.000 description 2
- 239000003814 drug Substances 0.000 description 2
- 229940079593 drug Drugs 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 241001025261 Neoraja caerulea Species 0.000 description 1
- 241000700605 Viruses Species 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 239000000470 constituent Substances 0.000 description 1
- 230000003111 delayed effect Effects 0.000 description 1
- 238000012217 deletion Methods 0.000 description 1
- 230000037430 deletion Effects 0.000 description 1
- 239000000835 fiber Substances 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- ZXQYGBMAQZUVMI-GCMPRSNUSA-N gamma-cyhalothrin Chemical compound CC1(C)[C@@H](\C=C(/Cl)C(F)(F)F)[C@H]1C(=O)O[C@H](C#N)C1=CC=CC(OC=2C=CC=CC=2)=C1 ZXQYGBMAQZUVMI-GCMPRSNUSA-N 0.000 description 1
- 238000002347 injection Methods 0.000 description 1
- 239000007924 injection Substances 0.000 description 1
- 238000009434 installation Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 238000012958 reprocessing Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 238000012800 visualization Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/90335—Query processing
- G06F16/90344—Query processing by using string matching techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
- G06F21/12—Protecting executable software
- G06F21/121—Restricting unauthorised execution of programs
- G06F21/128—Restricting unauthorised execution of programs involving web programs, i.e. using technology especially used in internet, generally interacting with a web browser, e.g. hypertext markup language [HTML], applets, java
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
- G06F16/2255—Hash tables
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
- G06F21/12—Protecting executable software
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/602—Providing cryptographic facilities or services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/10—Network architectures or network communication protocols for network security for controlling access to devices or network resources
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
- G06F21/101—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM] by binding digital rights to specific entities
- G06F21/1015—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM] by binding digital rights to specific entities to users
Abstract
Systems and methods for restricting content inserted into an information resource are provided herein. The computing device may identify content elements included in the information resource. The computing device may identify a bitstream corresponding to the content element included in the information resource. The computing device may hash the identified bit stream to generate an element identifier corresponding to the content element. The computing device may use the element identifier to access the restricted content database. In response to finding the element identifier in the restricted content database, the computing device may modify presentation of the content element on the information resource according to the content restriction policy.
Description
The invention is a divisional application of the following patent applications: application number: 201780014528.6, filing date: 24 days of 2017, 1 month, invention name: hash-based dynamic restrictions on content on information resources.
Cross Reference to Related Applications
The present application claims the benefit of priority from U.S. patent application Ser. No. 62/440,792, entitled "HASH-BASED DYNAMIC RESTRICTION OF CONTENT ON INFORMATION RESOURCES," filed 12/30 in 2016, which is incorporated herein by reference in its entirety.
Technical Field
The present application relates to systems and methods for restricting content inserted into information resources.
Background
In a computer networking environment such as the internet, information resources (e.g., web pages) and content elements included in such information resources may be parsed and presented by applications (e.g., web browsers) running on client devices. The information resources and content elements thereon may be transmitted from different servers to the client device via a computer networking environment.
Disclosure of Invention
At least one aspect relates to a method of restricting content inserted into an information resource. A computing device having one or more processors may identify a content element included in an information resource, apply a content restriction policy to the content element for modifying presentation of the content element. The computing device may identify a bitstream corresponding to the content element included in the information resource. The computing device may hash (hash) the identified bit stream to generate an element Identifier (ID) corresponding to the content element. The computing device may use the element identifier to access the restricted content database. In response to finding the element identifier in the restricted content database, the computing device may modify presentation of the content element on the information resource according to the content restriction policy.
In some implementations, the computing device can use the element identifier to access a local restricted content database stored on the computing device. In some implementations, in response to not finding the element identifier in the local restricted content database, the computing device can send a request to the remote device to find the element identifier on a remote restricted content database associated with the remote device. Receipt of the request may trigger the remote device to access the remote restricted content database using the element identifier. In some implementations, a computing device may receive a response from a remote device indicating an element identifier on a remote restricted content database associated with the remote device.
In some implementations, the computing device can use the element identifier to access a local restricted content database stored on the computing device. The local restricted content database may include a first list of element identifiers to be licensed and a second list of element identifiers to be restricted. In some implementations, in response to not finding the element identifier in the local restricted content database, the computing device can determine to modify the content element in accordance with the content rendering restriction extension based on the rendering properties of the content element and the information resource. In some implementations, in response to determining to apply the content restriction policy to the content element in accordance with the content rendering restriction extension, the computing device can insert the element identifier into a second list included in the local restricted content database. In some implementations, in response to determining to apply the content restriction policy to the content element in accordance with the content rendering restriction extension, the computing device can send the element identifier into a remote restricted content database.
In some implementations, the computing device can use the element identifier to access a local restricted content database stored on the computing device. In some implementations, in response to not finding the element identifier in the local restricted content database, the computing device can send a request to the remote device to find the element identifier on a remote restricted content database associated with the remote device. Receipt of the request may trigger the remote device to access the remote restricted content database using the element identifier. In response to not finding the element identifier in the remote restricted content database, receipt of the request may trigger the remote device to determine to modify the content element in accordance with the content rendering restriction extension based on the content element and the rendering properties of the information resource. In response to determining to apply the content restriction policy to the content element in accordance with the content rendering restriction extension, receipt of the request may trigger the remote device to insert the element identifier into the remote restricted content database. In some implementations, a computing device may receive a response from a remote device indicating an element identifier on a remote restricted content database associated with the remote device.
In some implementations, in response to not finding the element identifier on the restricted content database, the computing device can set the attribute of the content element to a default value during a first inclusion of the content element on the information resource. In some implementations, the computing device can determine to modify the content element based on the content element and the rendering attribute of the information resource according to the content rendering limit extension after the first inclusion of the content element. In some implementations, in response to determining to apply the content restriction policy to the content element according to the content rendering restriction extension, the computing device may insert the element identifier into the restricted content database. In some implementations, the computing device can delete the content element from at least one of the information resources or the second information resource during a second inclusion of the content element after the first inclusion, as specified by the content restriction policy.
In some implementations, the computing device may allow for sending a confirmation response to the content element to the remote server. In some implementations, the computing device may delete the content element from the information resource after sending an acknowledgement response to the content element to the remote server. In some implementations, the computing device can insert the second content element over the content element located on the information resource as specified by the content restriction policy. In some implementations, the computing device may remove the content element from the information resource as specified by the content restriction policy. In some implementations, the computing device may set the visibility attribute of the content element to null, as specified by the content restriction policy. In some implementations, a computing device may identify a bitstream corresponding to a portion of a content element from a portion of a byte stream representing the content element.
At least one aspect relates to a system for restricting content inserted into an information resource. The system may include a resource resolver running on one or more processors. The resource resolver may identify a content element included in the information resource, apply a content restriction policy to the content element for modifying the presentation of the content element. The resource resolver may identify a bit stream corresponding to a content element included in the information resource. The system may include an element hash (hash) running on one or more processors. The element hasher may hash the identified bit stream to generate an element identifier corresponding to the content element. The system may include a content limiter running on one or more processors. The content limiter may use the element identifier to access the restricted content database. In response to finding the element identifier in the restricted content database, the content limiter may modify the presentation of the content element on the information resource according to the content limiting policy.
In some implementations, the content limiter can use the element identifier to access a locally restricted content database stored on the computing device. In some implementations, in response to not finding the element identifier in the local restricted content database, the content limiter can send a request to the remote device to find the element identifier on a remote restricted content database associated with the remote device. Receipt of the request may trigger the remote device to access the remote restricted content database using the element identifier. In some implementations, the content limiter can receive a response from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
In some implementations, the content limiter can use the element identifier to access a locally restricted content database stored on the computing device. In some implementations, in response to not finding the element identifier in the locally restricted content database, the content limiter can determine to modify the content element based on the rendering properties of the content element and the information resource according to the content rendering restriction extension. In some implementations, in response to determining to modify the content element according to the content rendering restriction extension, the content limiter can insert the element identifier into a local restricted content database. In some implementations, in response to determining that the content element is to be modified according to the content rendering restriction extension, the content limiter can send the element identifier to a remote restricted content database for storage.
In some implementations, the content limiter can use the element identifier to access a locally restricted content database stored on the computing device. In some implementations, in response to not finding the element identifier in the local restricted content database, the content limiter can send a request to the remote device to find the element identifier on a remote restricted content database associated with the remote device. Receipt of the request may trigger the remote device to access the remote restricted content database using the element identifier. In response to not finding the element identifier in the remote restricted content database, receipt of the request may trigger the remote device to determine to modify the content element based on the content element and the rendering attributes of the information resource according to the content rendering restriction extension. In response to determining to apply the content restriction policy to the content element in accordance with the content rendering restriction extension, receipt of the request may trigger the remote device to insert the element identifier into the remote restricted content database. In some implementations, the content limiter can receive a response from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
In some implementations, in response to not finding the element identifier on the restricted content database, the content limiter can set the attribute of the content element to a default value during a first inclusion of the content element on the information resource. In some implementations, the content limiter can determine to modify the content element based on the content element and the rendering attribute of the information resource according to the content rendering limit extension after the first inclusion of the content element. In some implementations, the content limiter can delete the content element from at least one of the information resource or the second information resource during a second inclusion of the content element after the first inclusion, as specified by the content limiting policy.
In some implementations, the content limiter can permit the sending of an acknowledgement response to the content element to the remote server. In some implementations, the content limiter can delete the content element from the information resource after sending an acknowledgement response to the content element to the remote server. In some implementations, the content limiter can insert the second content element over the content element located on the information resource as specified by the content limiting policy. In some implementations, the content limiter can remove content elements from the information resource as specified by the content limiting policy. In some implementations, the content limiter can set the visibility attribute of the content element to null as specified by the content limiting policy. In some implementations, the resource parser may identify a bit stream corresponding to a portion of the content element from a portion of the byte stream representing the content element.
At least one aspect relates to a method of deploying countermeasures for scripts that interfere with the integrity of information resources. A data processing system having one or more processors may identify a first content element on an information resource previously sent to a client device. The first content element may have a first bit stream. The data processing system may determine an interference with the rendering of the first content element of the information resource. In response to determining the disturbance to the rendering of the first content element on the information resource, the data processing system may generate a second content element for a subsequent information resource based on the first content element. The second content element may have a second bit stream different from the first bit stream. The data processing system can send a subsequent information resource including the second content element to the client device. The receiving of the second content element may cause a content restriction script running on the client device to apply the rendering-based restriction policy in response to a second bitstream different from the first bitstream.
In some implementations, the data processing system can identify a first time corresponding to transmitting the first content element to the client device. In some implementations, the data processing system can identify a second time corresponding to receipt of an acknowledgement response to the first content element from the client device. In some implementations, the data processing system may determine that the time elapsed between the first time and the second time is greater than a predetermined threshold.
In some implementations, the data processing system can identify a first elapsed time between a first transmission of the first content element and a first receipt of a first acknowledgement of the first content element. In some implementations, the data processing system can identify a second elapsed time between a second transmission of the first content element and a second receipt of a second acknowledgement of the first content element. The second transmission may be subsequent to the first transmission. The second reception may be subsequent to the first reception. In some implementations, the data processing system may determine that the second elapsed time is less than the first elapsed time by a predetermined threshold.
In some implementations, the data processing system can determine, after sending the information resource to the client device, an expected time at which a request for content for insertion into the information resource as the first content element is received. In some implementations, the data processing system can identify an actual time at which a request for content to be inserted into the information resource as the first content element was received. In some implementations, the data processing system may determine that the expected time and the actual time at which the request for content was received differ by more than a predetermined threshold.
In some implementations, the data processing system can determine an expected time at which to receive an acknowledgement response to a first content element inserted into the information resource after the information resource is sent to the client device. In some implementations, the data processing system can identify an actual time of an acknowledgement response to a first content element inserted into the information resource. In some implementations, the data processing system may determine that the expected time and the actual time at which the acknowledgment response is received differ by more than a predetermined threshold.
In some implementations, the data processing system can determine that the client device did not send a request for content for insertion into the information resource as the first content element. In some implementations, the data processing system can modify visual characteristics of the first content element to generate the second content element, causing a change from the first bitstream to the second bitstream. In some implementations, the data processing system can modify the file pathname of the first content element to generate the second content element, causing a change from the first bitstream to the second bitstream. In some implementations, the data processing system can modify the validation response code of the first content element to generate the second content element to cause a change from the first bit stream to the second bit stream. In some implementations, the data processing system can insert an attachment code (appdage code) into the first content element to generate the second content element. The ancillary code may be configured to generate a second bit stream to cause a change from the first bit stream to the second bit stream.
At least one aspect relates to a system for deploying countermeasures for scripts interfering with information resource integrity. The system may include an interference detector running on a data processing system having one or more processors. The interference detector may identify a first content element on an information resource previously sent to the client device. The first content element may have a first bit stream. The interference detector may determine interference to the rendering of the first content element on the information resource. The system may have a content modifier running on the data processing system. In response to determining the disturbance to the rendering of the first content element on the information resource, the content modifier may generate a second content element for a subsequent information resource based on the first content element. The second content element may have a second bit stream different from the first bit stream. The content modifier may send a subsequent information resource comprising the second content element to the client device. The receiving of the second content element may cause a content restriction script running on the client device to apply the rendering-based restriction policy in response to a second bitstream different from the first bitstream.
In some implementations, the interference detector can identify a first time corresponding to transmitting the first content element to the client device. In some implementations, the interference detector can identify a second time corresponding to receipt of an acknowledgement response to the first content element from the client device. In some implementations, the interference detector may determine that the time elapsed between the first time and the second time is greater than a predetermined threshold.
In some implementations, the interference detector can identify a first elapsed time between a first transmission of the first content element and a first receipt of a first acknowledgement of the first content element. In some implementations, the interference detector can identify a second elapsed time between a second transmission of the first content element and a second receipt of a second acknowledgement of the first content element. The second transmission may be subsequent to the first transmission. The second reception may be subsequent to the first reception. In some implementations, the interference detector may determine that the second elapsed time is less than the first elapsed time by a predetermined threshold.
In some implementations, the interference detector may determine an expected time of receiving a request for content serving as the first content element inserted into the information resource after transmitting the information resource to the client device. In some implementations, the interference detector can identify an actual time at which a request for content for insertion into the information resource as the first content element is received. In some implementations, the interference detector may determine that the expected time and the actual time at which the request for content was received differ by more than a predetermined threshold.
In some implementations, the interference detector may determine an expected time to receive an acknowledgement response to the first content element into the information resource after sending the information resource to the client device. In some implementations, the interference detector can identify an actual time for an acknowledgment response of the first content element into the information resource. In some implementations, the interference detector may determine that the expected time and the actual time at which the acknowledgement response is received differ by more than a predetermined threshold. In some implementations, the interference detector can determine that the client device did not send a request for content for insertion into the information resource as the first content element.
In some implementations, the content modifier can modify visual characteristics of the first content element to generate the second content element, causing a change from the first bitstream to the second bitstream. In some implementations, the content modifier can modify the file pathname of the first content element to generate the second content element, causing a change from the first bitstream to the second bitstream. In some implementations, the content modifier can modify the validation response code of the first content element to generate the second content element, causing a change from the first bitstream to the second bitstream. In some implementations, the content modifier can insert ancillary code into the first content element to generate the second content element. The ancillary code may be configured to generate a second bit stream to cause a change from the first bit stream to the second bit stream.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide a description and a further understanding of various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is a block diagram depicting one embodiment of a computer networking environment for hash-based dynamic restriction of content and deployment of countermeasures therefor in accordance with an illustrative embodiment;
FIG. 2 is a block diagram depicting a system for restricting content inserted into an information resource in accordance with an illustrative embodiment;
FIG. 3 is a block diagram depicting a flow of content elements licensed or otherwise limited information resources by a system for limiting content in accordance with an illustrative embodiment;
FIG. 4 is a flowchart depicting a method of restricting content inserted into an information resource in accordance with an illustrative embodiment;
FIG. 5 is a flowchart depicting a method of restricting content inserted into an information resource in accordance with an illustrative embodiment;
FIG. 6 is a block diagram depicting a system for deploying countermeasures for scripts interfering with the integrity of information resources in accordance with an illustrative embodiment;
FIG. 7 is a block diagram depicting a flow of countermeasures by a system to modify content elements of an information resource for deploying scripts for interfering with the integrity of the information resource, in accordance with an exemplary embodiment;
FIG. 8 is a flowchart depicting a method of countering a script that interferes with the integrity of an information resource in accordance with an illustrative embodiment;
FIG. 9 is a flowchart depicting a method of countering a script that interferes with the integrity of an information resource in accordance with an illustrative embodiment; and
FIG. 10 is a block diagram showing a general architecture for a computer system that may be employed to implement the elements of the systems and methods described and shown herein, according to an illustrative embodiment.
Detailed Description
The following is a more detailed description of various concepts and embodiments related to methods, apparatus and systems for hash-based dynamic restriction of content and deployment of countermeasures thereto. The various concepts introduced above and discussed in more detail below may be implemented in any of a variety of ways, as the described concepts are not limited to any particular implementation.
The following descriptions of the various sections of the specification and their respective contents may be helpful in reading the following descriptions of the various embodiments:
section a describes a computer networking environment for hash-based dynamic restriction of content and deployment of countermeasures therefor.
Section B describes systems and methods that limit content inserted into an information resource.
Section C describes systems and methods to deploy countermeasures for scripts that interfere with the integrity of information resources.
Section D describes a computing system architecture that may be useful for practicing the systems and methods described in detail herein.
A.Hash-based dynamic restriction for content on information resources and computation of deployment of countermeasures therefor Machine networking environment
FIG. 1 is a block diagram depicting one embodiment of an environment for hash-based dynamic restriction of content on information resources and deployment of countermeasures thereto. The environment 100 includes at least one data processing system 110 connected via a network 105 to at least one content provider device 115, at least one content publisher device 120, at least one client device 125, at least one proxy device 145, and at least one remote content limiter device 150.
Briefly summarized, upon requesting content from a client device 125, the data processing system 110 may provide information resources including one or more content elements to the client device 125 via the network 105. Information resources may be retrieved from the content provider device 120 and one or more content elements obtained from the content provider device 115. The information resources and content elements thereon may be processed by the application 160 for rendering on the client device 125. The remote content limiter device 150 may then use the presentation limiter 165 to disable or, in some implementations, interfere with the display or rendering of some content elements on the information resources provided by the data processing system 110 to the client device 125. Presentation limiter 165 may be provided to agent device 145 and client device 125 to run presentation limiter 165 on the respective devices. To maintain the integrity of the information resource and the content elements thereon, the data processing system 110 can run countermeasure scripts to generate variants of the content elements. By generating variants that cause the presentation limiter 165 to reprocess the content elements of each of the generated variants, the countermeasure script may reduce the performance of the computing device running the presentation limiter 165 because the presentation limiter 165 utilizes the computing resources of the computing device when reprocessing the generated variants. Additional details of network 105, data processing system 110, content provider device 115, content publisher device 120, client device 125, agent device 145, remote content limiter device 150, and components thereof are provided herein.
In more detail, the data processing system 110 may include at least one processor and memory, i.e., processing circuitry. The memory stores processor-executable instructions that, when executed by the processor, cause the processor to perform one or more of the operations described herein. The processor may include a microprocessor, an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA), or the like, or a combination thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing program instructions to the processor. The memory may also include a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ASIC, FPGA, read-only memory (ROM), random-access memory (RAM), electrically-erasable ROM (EEPROM), erasable-programmable ROM (EPROM), flash memory, optical media, or any other suitable memory from which the processor can read instructions. The instructions may include code from any suitable computer programming language. The data processing system may include one or more computing devices or servers that can perform various functions. In some implementations, the data processing system can include a content placement system configured to host an auction. In some implementations, the data processing system does not include a content placement system, but is configured to communicate with the content placement system via network 105.
The network 105 may include a computer network such as the internet, a local area network, a wide area network, a metropolitan area network or other area network, an intranet, a satellite network, other computer networks such as a voice or data mobile phone communication network, and combinations thereof. The data processing system 110 of the system 100 may communicate with, for example, at least one content provider device 115, at least one content publisher device 120, at least one client device 125, or at least one remote content limiter device 150 via the network 105. Network 105 may be any form of computer network that relays information between client device 125, data processing system 110, and one or more content sources, such as web servers and the like. In some implementations, the network 105 may include the internet and/or other types of data networks, such as a local area network (local area network, LAN), wide area network (wide area network, WAN), cellular network, satellite network, or other types of data networks. The network 105 may also include any number of computing devices (e.g., computers, servers, routers, network switches, etc.) configured to receive and/or transmit data within the network 105. The network 105 may also include any number of hardwired and/or wireless connections. The client device 125 may communicate wirelessly (e.g., via WiFi, cellular, radio, etc.) with transceivers that are hardwired (e.g., via fiber optic cable, CAT5 cable, etc.) to other computing devices in the network 105. Client device 125 may also communicate wirelessly with computing devices of network 105 via proxy device 145 (e.g., a router, network switch, or gateway).
The content provider device 115 may include a server or other computing device operated by a content provider entity to provide content elements to the content publisher device 120 or the data processing system 110. The content provided by the content provider device 115 may include third party content elements including primary content (e.g., content provided by the content publisher device 120) for display on an information resource such as a website or web page. Content elements may also be displayed on the search results web page. Content elements associated with the content provider device 115 may be displayed on information resources other than web pages, such as content displayed as part of running an application on a smart phone or other client device 125. The content publisher device 120 or the data processing system 110 can then select content elements of the content provider device 115. The data processing system 110 may run a content placement process to select content elements based on various performance metrics for the respective content elements. The content publisher device 120 or the data processing system 110 can send the selected content elements of the content provider computing device for display on the information resources at the client device 125.
The content publisher device 120 may include a server or other computing device operated by a content publishing entity to provide primary content for display via the network 105. For example, the content publisher device 120 may be managed by a web page operator that provides primary content for display on web pages. The content publisher device 120 may also provide third-party content for display received from the content provider device 115 via the network 105. The primary content may include content other than content provided by the content publisher device 120, and the web page may include a content slot (content slot) configured to display content elements received by the content publisher device 120 from the content provider device 115. For example, the content publisher device 120 may operate a company's website and may provide content about the company for display on a web page of the website. The web page may include a content slot configured to display content elements, such as images, text, video, or any combination thereof, received from the content provider device 115. In some implementations, the content publisher device 120 includes a search engine computing device (e.g., a server) of a search engine operator operating a search engine website. The primary content of the search engine web page (e.g., results or landing web page) may include results of the search as well as third party content elements displayed in the content slots, such as content elements from the content provider device 115. In some implementations, the content publisher device 120 can include a server for serving video content.
The content publisher device 120 may select one or more content elements received from the content provider device 115 to include in an information resource having primary content for display on the client device 125 via the network 105. The content publisher device 120 may send content elements received from the content publisher device 115, along with primary content, to the client device 125 in response to a request for content from the client device 125. In some implementations, after sending the primary content, the content publisher device 120 can send the content elements received from the content publisher device 115 to the client device 125 in response to a request for additional content from the client device 125. In some implementations, the content publisher device 120 can receive an initial request for primary content from the client device 125 and, in response, send an information resource including the primary content to the client device 125. In some implementations, the data processing system 110 can select one or more content elements received from the content provider device 115 and select primary content (e.g., text, paragraphs, text, video, or other elements that may generally span a center of an information resource) received from the content publisher device 120. The data processing system 110 may use the selected one or more content elements from the content provider device 115 and primary content from the content publisher device 120 to generate an information resource. Further details regarding the functionality of data processing system 110 for generating information resources are described herein below.
Client device 125 may include a computing device configured to communicate via network 105 or through proxy device 145 via network 105 to display data such as content provided by content publisher device 120 (e.g., primary web page content or other information resources) and content provided by content provider device 115 (e.g., content elements configured for display in information resources). The client device 125, the content provider device 115, the content publisher device 120, and the remote content limiter device 150 may include desktop computers, laptop computers, tablet computers, smart phones, personal digital assistants, mobile devices, consumer computing devices, servers, clients, digital video recorders, set-top boxes for televisions, video gaming machines, or any other computing device configured to communicate via the network 105. The client device 125 may be a communication device through which an end user may submit a request to receive content. The request may be a request to a search engine, and the request may include a search query. In some implementations, the request may include a request to access a web page.
Client device 125 may run application 160. The application 160 may comprise, for example, an internet browser, a mobile application, or any other computer program capable of running or otherwise invoking computer executable instructions processed by the client device 125, such as computer executable instructions included in an information resource or content elements included in an information resource. The information resources and content elements included therein may correspond to scripts, logic, markup, or instructions (e.g., hypertext markup language (HyperText Markup Language, HTML), extensible hypertext markup language (Extensible HyperText Markup Language, XHTML), extensible markup language (Extensible Markup Language, XML), cascading style sheets (Cascading Style Sheets, CSS), javaScript, or any combination thereof. The application 160 may include any number of components, such as a document tree generator, a rendering tree generator, and a display module, to process information resources and content elements included therein. The document tree generator may parse the information resources to generate a document object model (Document Object Model, DOM) tree that includes content elements of the information resources arranged in a hierarchical manner. Using the DOM tree, a rendering tree generator may generate a rendering tree that specifies visual attributes or properties of content elements of the information resource. The display module may render and display the information resources on the display of the client device 125 based on the rendering tree.
Proxy device 145 may include a computing device deployed between client device 125 and network 105. Agent device 145 may be configured to communicate with one or more other computing devices (such as data processing system 110, content provider device 115, content publisher device 125) via network 105. Proxy device 145 may be, for example, a router, a network switch, a gateway, a network node, or any other computing device 115 configured to receive and forward data packets from client device 125 to network 105 or from network 105 to client device 125.
Remote content limiter device 150 may include a server or other computing device operated by a content filtering entity (e.g., script interceptor, advertisement interceptor, internet service provider (Internet Service Provider, ISP), other content provider, etc.) to provide a presentation limiter 165 for running on a computing device connected to network 105. In some implementations, the remote content limiter 150 may provide a presence limiter 165 for installation and operation at the proxy device 145 or the client device 125. Presentation limiter 165 may be installed as a separate application or as an extension to applications running at proxy device 145 and client device 125. The functionality of presentation limiter 165 may be run independently at remote content limiter device 150, proxy device 145, client device 125, or in combination across remote content limiter device 150, proxy device 145, client device 125. When executed, the presentation limiter 165 may modify or change content elements of information resources provided to the client device 125 via the network 105.
Client device 125, proxy device 145, and remote content limiter device 150 may run presence limiter 165. The presentation limiter 165 may include any number of modules, components, or databases to modify or change content elements on an information resource. The presence limiter 165 may include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device, such as a programmable logic array, configured to communicate with other computing devices in addition to devices running the presence limiter 165 via the network 105. The presentation limiter 165 may comprise or run at least one computer program or at least one script. The presentation limiter 165 may comprise a combination of software and hardware, such as one or more processors configured to run one or more scripts. In some implementations, the presence limiter 165 may be an extension, an append component (add-on), or an extension installed to an application 160 running on the client device 125. In some implementations, the presentation limiter 165 may be a separate, independently executable component that interfaces with the application 160.
The content provider device 115, the content publisher device 120, the client device 125, and the remote content limiter device 150 may include a processor and memory, i.e., processing circuitry. The memory stores machine instructions that, when executed by the processor, cause the processor to perform one or more of the operations described herein. The processor may include a microprocessor, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), or the like, or a combination thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing program instructions to the processor. The memory may also include a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ASIC, FPGA, read-only memory (ROM), random Access Memory (RAM), electrically erasable ROM (EEPROM), erasable Programmable ROM (EPROM), flash memory, optical media, or any other suitable memory from which a processor can read instructions. The instructions may include code from any suitable computer programming language.
The content provider device 115, the content publisher device 120, the client device 125, and the remote content limiter device 155 may also include one or more user interface devices. In general, a user interface device refers to any electronic device (e.g., keyboard, mouse, pointing device, touch screen display, microphone, etc.) that communicates data to a user and/or converts sensory information received from a user into electrical signals by generating sensory information (e.g., visualizations on a display, one or more sounds, etc.). According to various implementations, one or more user interface devices may be internal to the housing of the content provider device 115, the content publisher device 120, and the client device 125 (e.g., built-in display, microphone, etc.), or external to the housing of the content provider device 115, the content publisher device 120, the client device 125, and the remote content limiter device 155 (e.g., monitor connected to the client device 125, speaker connected to the client device 125, etc.). For example, the content provider device 115, the content publisher device 120, the client device 125, and the remote content limiter device 150 may include electronic displays that visually display web pages using web page data received from one or more content sources and/or from the data processing system 110 via the network 105.
The data processing system 110 may include at least one server. For example, data processing system 110 may include multiple servers located in at least one data center or server farm. In some implementations, the data processing system 110 includes a content placement system. The data processing system 110 can include at least one content request module 130, at least one resource assembler module 135, and at least one database 140. The content request module 130 and the resource assembler module 135 may each include at least one processing unit, server, virtual server, circuit, engine, proxy, appliance, or other logic device, such as a programmable logic array, configured to communicate with the database 140 and with other computing devices (e.g., the content provider device 115, the content publisher device 120, or the client device 125) via the network 105.
The content request module 130, the resource assembler module 135, the database 140 may comprise or run at least one computer program or at least one script. The content request module 130 and the resource assembler module 135 may be separate components, a single component, or part of the data processing system 110. The content request module 130 and the resource assembler module 135 may include a combination of software and hardware, such as one or more processors configured to run one or more scripts.
The data processing system 110 may also include one or more content stores or databases 140. Database 140 may be local to data processing system 110. In some implementations, database 140 may be remote to data processing system 110, but may be in communication with data processing system 110 via network 105. The database 140 may include information resources and content elements or the like to be included in the information resources for servicing the client device 125. Additional details of the data stored in database 140 are described in detail below.
The content request module 130 may receive a request for content from the client device 125. The request for content may include a request for an information resource or a request for a content element of an information resource. The request for content may include a device identifier corresponding to the client device 125. The request for content may include an application profile that identifies an application running on the client device 125. The request for content may include an identifier for an information resource or content element. For example, the request for content may include a uniform resource locator (Uniform Resource Locator, URL) referencing a particular resource, such as a web page (e.g., "https:// www.example.com/homepage. Html"). The hostname of the URL of the information resource may be different from the hostname of the URL of the content element. For example, the URL of the information resource may be "https:// www.example _publisher. Com/index. Html", while the URL of the content element may be "https:// www.example _thiardmaster. Com/content_item_271828.Html". The URL of the request for the content element may include the same host page as the URL of the information resource. For example, the URL of the information resource may be "https:// www.example.com/index. Html", while the URL of the content element may be "https:// www.example.com/content_item_978.Html". The content request module 130 may also parse requests for content for additional data.
In response to receiving a request for content from a client device 125, the resource assembler module 135 can send an information resource or a content element for the information resource based on an address or identifier of the request. The resource assembler module 135 may identify the information resources and content elements included in the request for content based on the address or identifier. The resource assembler module 135 may access the database 140 to select information resources and content elements identified by an address or identifier. In some implementations, the resource assembler module 135 can send a request to the content provider 115 or the content publisher 120 to access, retrieve, or otherwise receive an information resource or content element identified by an address or identifier.
The resource assembler module 135 may send the content elements for the information resource or the information resource to the client device 125 based on the redirection from the content publisher device 120 or the content provider device 115. The content publisher device 125 may also configure a domain or address such that requests to access information resources maintained by the content publisher device 125 are directed to the data processing system 110. The content request module 130 may receive a request to retrieve or access an information resource of the content publisher device 125. In some implementations, the request can include a device identifier or other information that the resource assembler module 135 can use to select content (e.g., using a content placement system) related to the request of the client device from which the request was received. The resource assembler module 135 may access the content provider device 115 or any other server or device that maintains content elements on behalf of the content provider device 115.
The resource assembler module 135 may send content to the client device 125 on behalf of one or more of the content publisher device 120 and the content provider device 115. The resource assembler module 135 may send or forward the information resource or content element identified by the address or identifier to the client device 125. For example, the data processing system 110 may receive a request for an information resource or content element from the client device 125. The request may include an address referencing one of the content publisher devices 120 and one of the content provider devices 115. In this example, the resource assembler module 135 can forward the request for the information resource to the corresponding content publisher 120. The resource assembler module 135 may also send a request for content elements for insertion into the information resource to the corresponding content provider device 115. Upon receiving information resources from the respective content publishers 120 and content elements from the respective content provider devices 115, the resource assembler module 135 can forward the content document to the client devices 125 associated with the original request.
The resource assembler 135 may generate an information resource comprising one or more content elements. In some embodiments, the resource assembler 135 may modify existing information resources maintained by the content publisher device 125 to insert content elements provided by the content provider device 115. In some implementations, the resource assembler 135 can generate new information resources to include content elements from the content publisher device 125 and the content provider device 115. The subset of content elements of the information resource may include primary content from the content publisher device 120. Another subset of the content elements of the information resource may include third party content from the content provider device 115. The primary content and the third party content may include, for example, text content elements, image content elements, and video content elements, among others. The third party may include an embedded link to redirect the client device 125 to retrieve content corresponding to the address of the link from the content provider device 115 or the content publisher device 120. The source address (e.g., URL) of the primary content may initially be different from the source address of the third party content. In some implementations, the resource assembler 135 can modify the source addresses of the content elements of the primary content and the third party content to the same source address. In some implementations, the content publisher device 120 can run or host the resource assembler 135.
The presence limiter 165 running at the remote content limiter device 150, the proxy device 145, or the client device 125 may then attempt to modify or change the content elements of the information resource. The presentation limiter 165 may also insert additional content elements into the information resource to obscure the identified content elements. In some implementations, the presentation limiter 165 can cause the presentation of the identified content element to be modified such that the content element is presented in a different format than the original presentation format. The data processing system 110 may then deploy countermeasures against the presentation limiter 165 to maintain the integrity of the information resources and content elements sent over the network 105.
B.System and method for limiting content inserted into information resource
The information resources may include one or more content elements (e.g., inline frames, images, segments, etc.). The content elements may define visual content compositions of the information resource. For example, an information resource may include primary content (e.g., text) and content elements including images. An application (e.g., a web browser) may use such content elements to process, render, and display information resources on a display of a computing device. Some of these content elements may originate from a different server than the server providing the information resource. As such, information resources having such content elements may suffer from security vulnerabilities. For example, the proxy device may intercept the content element originally for the information resource and replace the intercepted content element with its own content element. Such content elements may include malicious code, such as malware, trojan horses, and viruses. In addition, due to human-computer interaction (HCI), these content elements may interfere with a user's ability to read or view the primary content of an information resource even without malicious code injection. For example, one content element may have a different color than all remaining content elements on the information resource, thereby enabling the user to distinguish between primary content or other content elements.
Various techniques may be used to prohibit content elements from being contained or displayed on an information resource. One technique may be to use a source address to identify that a content element is from a different source than the rest of the information resource. However, if the source address of a content element is the same as the information resource or if there is no separate request for a content element for insertion into the information resource, the technique may not be able to identify such a content element. Another technique may be to use image processing techniques to identify content elements to detect differences between the content elements and underlying information resources. However, such techniques can be computationally expensive, resulting in hysteresis and degradation of computer performance.
To address these and other technical challenges, the systems presented herein may utilize hash functions to identify and disable content elements. The hash function may be less computationally complex than the image processing algorithm and thus may occupy less computational processing power. A computing device running a presentation restriction script may identify which content elements on an information resource are to be disabled. For each content element, the client device may identify a corresponding bitstream. The computing device may then calculate a hash value using the corresponding bit stream as an input parameter to the hash function to generate the element identifier.
The computing device may then use the calculated element identifier to access a database local or on the server of known restricted content elements, and may apply a content restriction policy based on whether the element identifier is found. If the element identifier is found in the database, the computing device may remove the corresponding content element from the information resource. On the other hand, if the element identifier is not found, the client device may apply an image processing algorithm to the content element to determine whether to remove the content element from the information resource. The computing device may also send the element identifier to a server to determine whether the element identifier is on a database of restricted content elements stored at the server. Once received, the server may also execute image processing algorithms. Thus, the computing device may perform an initial analysis of the content elements using techniques with relatively low processor and memory requirements. In addition, servers may be used to perform relatively processor-intensive techniques such that high precision identification of content elements may be provided without using processor-intensive techniques for all content elements or any highly processor-intensive techniques to be performed at the client device. With this technique, the reliance on image processing techniques to detect content elements can be reduced. Further, since computing the hash function consumes less computing power than the image processing algorithm, the processors and memory of the computing device and server may be freed up for other functions.
Referring to fig. 2, fig. 2 is a block diagram depicting a system 200 for restricting content inserted into an information resource. The system 200 may be a detailed view of the application 160 and the presentation limiter 165 as described in the system 100 in the context of fig. 1. In general, the system 200 may include an application 160, a presentation limiter 165, and a remote restricted content database 245. The application 160 may run on the client device 125 and may include information resources 205 received from the data processing system 110 or the content publisher device 120. The information resource 205 may include one or more content elements 210A-N. Presentation limiter 165 may run on a computing device (such as client device 125, proxy device 145, or remote content limiter device 150) either alone or in combination. The presentation limiter 165 may include a resource resolver 215, an element hash 220, a computing device, a rendering limiter 230, a content limiting policy database 235, and a local limited content database 240. The presence limiter 165 may be in communication with a remote restricted content database 245.
In more detail, the resource resolver 215 may identify content elements 210A-N included in the information resource 205 to which content restriction policies are applied for modifying the presentation of the content elements 210A-N. Content restriction policies may be stored at the content restriction policy database 235 and maintained by the presentation limiter 165. The content restriction policy may specify which element types of content elements 210A-N are to be further analyzed and how to modify the content elements 210A-N identified as restricted. The resource resolver 215 may interface with the application 160 to access the information resource 205 and the content elements 210A-N included in the information resource 205.
The content restriction policy applied by the presentation limiter 165 may specify how to modify, change, or disable the identified content elements 210A-N or the information resources 205 that include such content elements 210A-N. Details regarding modification of the content elements 210A-N and the information resources 205 that include the content elements 210A-N are described below. The content restriction policy may be specified in a particular domain of the content provider device 115 or the content publisher device 120. Content restriction policies may be specified for a particular client device 125. The content restriction policy may be assigned a particular account identifier or user profile associated with one or more client devices 125. The content restriction policy may be specific trait information of a user profile associated with one or more client devices 125. The content restriction policy may be specified for a particular application 160 (e.g., mobile application, some web browser, etc.) running at the client device 125. The content restriction policy may be specified for any interface program (e.g., plug-in, add-in component, etc.) to the application 160 running at the client device 125.
According to the content restriction policy, the resource resolver may identify a subset of the content elements 210A-N included in the information resource 205 for further analysis. The resource resolver 215 may identify an element type for each content element 210A-N included in the information resource 205. Element types may include one of text, paragraphs, partitions, segments, inline frames, images, canvas, applets (applets), scripts, audio, video, tables, lists, and the like. The element type may correspond to an HTML tag (e.g., "< iframe >" for an inline frame). In some implementations, the content restriction policy can specify the element type (e.g., inline frame, image, applet, etc.) to be further analyzed. As specified by the content restriction policy, the resource resolver 215 may identify a subset of content elements 210A-N that match the element type to be further analyzed. In this way, the presence limiter 165 may reduce the number of content elements 210A-N to be processed, thereby freeing up computing resources.
To determine whether to apply the content restriction policy to the content elements 210A-N, the resource resolver 215 may identify a bit stream corresponding to the content elements 210A-N included in the information resource 205. The information resource 205 may correspond to a binary sequence (e.g., byte array or byte stream). Each content element 210A-N included in the information resource 205 may correspond to a portion of a binary sequence. In some implementations, the resource resolver 215 can interface with the application 160 to access a binary sequence corresponding to the information resource 205. In some implementations, the resource resolver 215 can interface with the application 160 to access a portion of a binary sequence corresponding to one of the content elements 210A-N. In some implementations, the resource resolver 215 may interface with the application 160 to access a portion of a binary sequence corresponding to a subset of the content elements 210A-N identified as matching the element type to be further analyzed, as specified by the content restriction policy. In some implementations, the resource parser 215 may identify a subset portion of the bit stream of the content elements 210A-N (e.g., the first N bits in the bit stream or every fifth bit in the bit stream, etc.).
In the event that the resource resolver 215 has identified the entire bit stream of content elements 210A-N, the element hash 220 may hash the identified bit stream to generate element identifiers corresponding to the content elements 210A-N. In some implementations, the element hasher 220 can use a hash function on the identified bitstreams to generate element identifiers corresponding to the content elements 210A-N. The hash function may include any combination of bitstreams identified for content elements 210A-N, such as a cryptographic hash function (e.g., secure hash algorithms (SHA-1, SHA-2, and SHA-3), message digest algorithms (MD 2, MD4, MD5, and MD 6), checksum functions, etc.), a cyclic redundancy check algorithm, a hash table (e.g., an associative array), and a geometric hash function, or any one-to-one hash function, etc. The hash function may be configured or selected to minimize hash collisions such that the likelihood of identifying the same element identifier for two different content elements 210A-N is reduced. In some implementations, the element hasher 220 can hash a subset portion of the bitstreams of the content elements 210A-N.
In some implementations, the hash function used by element hasher 220 may be common in all instances of presentation limiter 165 (e.g., in remote content limiter 150, proxy device 145, and client device 125). For the same content elements 210A-N, one instance of element hasher 220 at one computing device (e.g., one of remote content limiter 150, proxy device 145, or client device 125) may generate the same element identifier as another instance of element hasher 220 at another computing device. In this manner, element hasher 220 may generate a single element identifier to identify the same content elements 210A-N that are sent over network 105 to computing devices connected thereto that run presentation limiter 165 (e.g., other client devices 125, proxy devices 145, and remote content limiter devices 150). By having a single element identifier for the same content element 210A-N, the computing device running the presentation limiter 165 may avoid running a more computationally expensive algorithm (e.g., an image processing algorithm) to determine whether to apply a content restriction policy to the content element 210A-N.
In some implementations, the hash function used by the element hasher 220 can be unique to the local instance of the presence limiter 165 (e.g., at the client device 125). For the same content element 210A-N, one instance of element hasher 220 at one computing device (e.g., one of remote content limiter 150, proxy device 145, or client device 125) may generate an element identifier that is different from an element identifier generated by another instance of element hasher 220 running at another computing device. The element hash 220 may generate an element identifier that is unique to the local instance of the presence limiter 165. The element hasher 220 can enhance data security and encryption, as well as user privacy, by using a hash function that is unique to the local instance of the presence limiter 165.
In some implementations, the hash function used by element hasher 220 may consider any encryption algorithm of the binary sequence corresponding to information resource 205 or content elements 210A-N. Client device 125, proxy device 145, or any intermediate device may apply an encryption algorithm to the binary sequence corresponding to information resource 205 or content elements 210A-N, thereby altering the binary sequence. In some implementations, the encryption algorithm applied to the binary sequence may include wired equivalent privacy (Wired Equivalent Privacy, WEP) and Wi-Fi protected access (Wi-Fi Protected Access, WPA), among other encryption protocols. Due to the encryption algorithm, the element hasher 220 running at one computing device can generate an element identifier that is different from the element identifier generated by the element hasher 220 running at another computing device. To bypass or offset the effects of the encryption algorithm applied to the binary sequence, element hasher 220 may use a one-to-one hash function to generate an element identifier for each identified bit stream. In this way, while the element identifier generated by element hash 220 may be unique to the local instance of presentation limiter 165, the encryption algorithm applied by client device 125, proxy device 145, or any other intermediary device may also generate a unique value. As such, the element identifier generated by the element hash 220 at one instance of the presence limiter 165 may be used in other instances of the presence limiter 165 at other devices.
Using the element identifier generated by element hash 220, content limiter 225 may access local limited content database 240 or remote limited content database 245 to determine whether to apply content limiting policies to content elements 210A-N. The local restricted content database 240 may be maintained by an instance of a presence limiter 165 (such as the client device 125 or the proxy device 145), the presence limiter 165 being local to the computing device running the element hasher 220. The local restricted content database 240 may include any data structure (e.g., array, heap, linked list, binary tree, matrix, table, etc.) storing element identifiers and license indicators that specify whether the corresponding element identifiers are to be restricted or licensed, etc. In some implementations, the local restricted content database 240 can include a first list of element identifiers to be licensed (e.g., a white list) and a second list of element identifiers to be restricted (e.g., a black list). Remote restricted content database 245 may be maintained by another computing device. In some implementations, the remote restricted content database 245 may be maintained by an instance of the presence limiter 165 that is different from the computing device running the element hasher 220. In some implementations, the local restricted content database 240 may be stored and maintained as either the proxy device 145 or the remote content limiter device 150. Remote restricted content database 245 may include any data structure (e.g., an array, heap, linked list, binary tree, matrix, table, etc.) storing element identifiers and permission indicators specifying whether the corresponding element identifiers are to be restricted or permitted. In some implementations, the remote restricted content database 245 may include a first list of element identifiers to be licensed and a second list of element identifiers to be restricted. In some implementations, the local instance of the presence limiter 165 can maintain a local limited content database 245 (e.g., a blacklist) to store element identifiers that are designated to be limited. In some implementations, the local instance of the presence limiter 165 can maintain a separate local unrestricted content database (e.g., a whitelist) to store element identifiers that are designated to be licensed. In some implementations, a remote instance of the presence limiter 165 can maintain a remote limited content database 245 (e.g., a blacklist) to store element identifiers that are designated to be limited. In some implementations, the remote instance of the presence limiter 165 can maintain a separate remote unrestricted content database (e.g., a whitelist) to store element identifiers that are designated to be allowed.
The content limiter 225 may initially access the local limited content database 240. The content limiter 225 may perform a search for element identifiers in the local restricted content database 240. In some implementations, the content limiter 225 can traverse the local restricted content database 240 for element identifiers. In some implementations, the content limiter 225 can use the element identifier as an index into a data structure stored in the local limited content database 240.
If the content limiter 225 finds the element identifier in the local limited content database 240, the content limiter 225 may identify a permission indicator for the element identifier. The content limiter 225 may use the permission indicator to determine whether to apply the content limiting policy to the content elements 210A-N corresponding to the element identifier.
On the other hand, if the content limiter 225 does not find an element identifier in the local restricted content database 240, the content limiter 225 may send a request to the remote restricted content database 245 to find the element identifier. The request to find the element identifier may include the element identifier generated by the element hash 220, as well as other data. Remote restricted content database 245 may be maintained or associated with a device remote from the local instance of presence limiter 165. In some implementations, the content limiter 225 running on the client device 125 can send a request to the proxy device 145 or the remote content limiter device 150 maintaining the remote limited content database 245.
In response to receiving the request from the computing device, the remote device (e.g., proxy device 145 or remote content limiter device 150) may access remote limited content database 245 using the element identifier in the request. The remote device may perform a search for the element identifier in the remote restricted content database 245. In some implementations, the remote device can traverse the remote restricted content database 245 for element identifiers. In some implementations, the remote device can use the element identifier as an index into a data structure stored in the remote restricted content database 245.
If the remote device finds an element identifier in the remote restricted content database 245, the remote device may identify a permission indicator for the element identifier. The remote device may also send a positive response to the inner tolerance modulator 225 in response to finding the element identifier. A positive response may indicate that the element identifier is on the remote restricted content database 245. The positive response may also include a permission indicator as specified in the remote restricted content database 245. The content limiter 225 may receive a positive response from a remote device associated with the remote limited content database 245. The content limiter 225 may store the element identifier and the license indicator received from the remote device on the local limited content database 240. Based on the license indicator, the content limiter 225 may determine whether to apply the content limiting policy to the content elements 210A-N corresponding to the license indicator.
The remote device may also send a negative response to the inner tolerance modulator 225 if the remote device does not find the element identifier in the remote restricted content database 245. A negative response may indicate that the element identifier is not on the remote restricted content database 245. The content limiter 225 may receive a negative response from a remote device associated with the remote limited content database 245. In response to receiving a negative response from the remote device, the content limiter 225 may invoke the rendering limiter 230 to determine whether to apply the content limiting policy to the content elements 210A-N according to the rendering-based limiting extension.
Additionally, if the remote device does not find an element identifier in the remote restricted content database 245, the remote device may determine whether to modify the content elements 210A-N based on the rendering attributes of the content elements 210A-N and the information resource 205 according to the rendering-based restriction extension. The determination of whether to modify the content elements 210A-N may be performed by an instance of the rendering limiter 230 at the remote device according to a rendering-based limit extension. The remote device may access rendering properties of the content elements 210A-N and the information resource 205 received by the application 160. In some implementations, the remote device may send a request for rendering properties to the device running the application 160. The remote device may then receive rendering properties of the content elements 210A-N of the information resource 205 from the device.
By analyzing the rendering properties of the content elements 210A-N and the rendering properties of the information resource 205 according to the rendering-based restriction extension, the remote device may determine whether to apply a content restriction policy to the content elements 210A-N. The render-based restriction extension may specify that a content restriction policy be applied to content elements 210A-N having certain rendering properties. In general, analyzing the rendering properties of the content elements 210A-N and the rendering properties of the information resource 205 according to a render-based constraint extension may be more computationally complex than a hash function. As such, rendering-based constraint extensions may consume more computer resources and processing time relative to the hash function, resulting in reduced performance and hysteresis of the remote device. To partially mitigate the consumption of computer resources and reduce processing time to some extent, the generation of element identifiers and analysis of rendering attributes using hash functions may be bifurcated (bifurcate) or otherwise distributed across multiple devices and instances of presentation limiter 165.
In accordance with the render-based restriction extension, the remote device may compare the rendering attributes of the content elements 210A-N with the selected rendering attributes to determine whether to apply a content restriction policy to the content elements 210A-N. In some implementations, the remote device can compare the size of the content elements 210A-N on the information resource 205 to pre-selected sizes, such as 468X 60 pixels (full banner), 160X 600 pixels (wide skyscraper banner), and 720X 300 pixels (hidden popup). If the remote device determines a match between the size of the content element 210A-N and the pre-selected size, the remote device may determine to apply a content restriction policy to the content element 210A-N. In some implementations, the remote device can compare the locations of the content elements 210A-N on the information resource 205 with pre-selected locations (e.g., toward the top of the information resource 205 or along a side thereof). If the remote device determines a match between the location of the content element 210A-N and the preselected location, the remote device may determine to apply a content restriction policy to the content element 210A-N. In some implementations, the remote device can identify color values (e.g., RGB values, alphanumeric identifiers, or HTML color codes) of the content elements 210A-N and color values of the information resource 205. If the color value of the content element 210A-N and the color value of the information resource 205 differ by a predefined margin, the remote device may determine to apply a content restriction policy to the content element 210A-N. If none of these match, the remote device may determine not to apply the content restriction policy to the content elements 210A-N.
The remote device may also apply any number and any combination of image recognition algorithms to determine whether to apply the content restriction policy to the content elements 210A-N based on the rendering attributes according to the rendering-based restriction extension. The content elements 210A-N may include images or may include source addresses of images. Content elements 210A-N may include video or may include a source address of video. In some implementations, the remote device may apply an image recognition algorithm to determine whether the image or video of the content elements 210A-N includes limited visual elements (e.g., nudities, violence, drugs, and other undesirable elements in the image or video). Image recognition algorithms may include optical character recognition, object recognition, edge detection, feature detection (e.g., affine feature detection), pattern recognition algorithms, and the like. In some implementations, the remote device can identify the character string from the image of the content element 210A-N using an optical character recognition algorithm. The remote device may compare the identified string with a pre-selected string (e.g., "click here," "buy," "sell," "XXX," and "$," etc.). If the identified string matches a pre-selected string, the remote device may determine to apply a content restriction policy to the content elements 210A-N. Otherwise, the remote device may determine not to apply the content restriction policy to the content elements 210A-N.
In connection with determining whether to apply a content restriction policy to content elements 210A-N based on analysis of rendering attributes, the remote device may add or insert an element identifier corresponding to content elements 210A-N to remote restricted content database 245. If the remote device determines that the content restriction policy is to be applied, the remote device may add or insert a permission indicator specifying that the content elements 210A-N corresponding to the element identifier are to be restricted. If the remote device determines that the content restriction policy is not to be applied, the remote device may add or insert a permission indicator into the remote restricted content database 245 indicating that the content elements 210A-N corresponding to the element identifier are to be permitted. The remote device may then send a positive response to the content limiter 225. A positive response may indicate that the element identifier is on the remote restricted content database 245. The positive response may also include a permission indicator retrieved from the remote restricted content database 245.
In some implementations, if the content limiter 225 does not find the element identifier in the local restricted content database 240, the content limiter 225 can invoke the rendering limiter 230. When invoked, rendering limiter 230 may analyze content elements 210A-N to determine whether to apply content restriction policies to content elements 210A-N based on the rendering-based restriction extension. The content limiter 225 may also invoke the rendering limiter 230 to analyze the content elements 210A-N in response to receiving a negative response to the element identifier from a remote device associated with the remote limited content database 245.
By analyzing the rendering properties of the content elements 210A-N and the rendering properties of the information resource 205 according to the rendering-based restriction extension, the rendering limiter 230 may determine whether to apply a content restriction policy to the content elements 210A-N. The render-based restriction extension may specify that a content restriction policy be applied to content elements 210A-N having certain rendering properties.
In accordance with the render-based restriction extension, rendering limiter 230 may compare the rendering properties of content elements 210A-N with the selected rendering properties to determine whether to apply a content restriction policy to content elements 210A-N. In some implementations, rendering limiter 230 may compare the size of content elements 210A-N on information resource 205 to pre-selected sizes, such as 468X 60 pixels (full banner), 160X 600 pixels (wide skyscraper banner), and 720X 300 pixels (implicit popups). If rendering limiter 230 determines a match between the size of content elements 210A-N and the pre-selected size, rendering limiter 230 may determine to apply a content limiting policy to content elements 210A-N. In some implementations, rendering limiter 230 may compare the locations of content elements 210A-N on information resource 205 with pre-selected locations (e.g., toward the top of information resource 205 or along the sides thereof). If rendering limiter 230 determines a match between the location of content elements 210A-N and the pre-selected location, rendering limiter 230 may determine to apply the content limiting policy to content elements 210A-N. In some implementations, rendering limiter 230 may identify color values (e.g., RGB values, alphanumeric identifiers, or HTML color codes) of content elements 210A-N and color values of information resource 205. If the color values of content elements 210A-N and the color values of information resource 205 differ by a predefined margin, rendering limiter 230 may determine to apply a content restriction policy to content elements 210A-N. If none of these match, rendering limiter 230 may determine not to apply the content restriction policy to content elements 210A-N.
In connection with determining whether to apply a content restriction policy to content elements 210A-N based on analysis of rendering attributes, rendering limiter 230 may add or insert an element identifier corresponding to content elements 210A-N to local restricted content database 240. If rendering limiter 230 determines that a content limiting policy is to be applied, rendering limiter 230 may add or insert a permission indicator that specifies that content elements 210A-N corresponding to the element identifier are to be limited. If rendering limiter 230 determines that the content limiting policy is not to be applied, rendering limiter 230 may add or insert a license indicator that specifies that content elements 210A-N corresponding to the element identifier are to be licensed. Rendering limiter 230 or content limiter 225 may send the element identifier and the permission indicator to other computing devices connected to the network (e.g., other client devices 125, proxy devices 145, and remote content limiter devices 150). In some implementations, the rendering limiter 230 or the content limiter 225 can send the element identifier and the license indicator to the second client device 125 via the network 105 for storage at a local restricted content database maintained by the second client device 125. In some implementations, rendering limiter 230 or content limiter 225 may send the element identifier and the license indicator to agent device 145 for storage at a restricted content database maintained by agent device 145. In some implementations, rendering limiter 230 or content limiter 225 may send the element identifier and the permission indicator to remote content limiter device 150 for storage at remote limited content database 250. By sharing element identifiers among computing devices connected to network 105, a computing device running presentation limiter 165 may avoid repeatedly applying computationally complex image processing techniques to the same content elements 210A-N. Thus, sharing element identifiers may increase the efficiency of the computing device running the presentation limiter 165, freeing up processing resources for other functions.
If the element identifier is not found in the local restricted content database 240 or the remote restricted content database 245, the content limiter 225 may maintain the content elements 210A-N through the application 160 during the first inclusion of the content elements 210A-N on the information resource. The first inclusion of the content elements 210A-N may correspond to a first provision of the content elements 210A-N to any device running the presentation limiter 165 connected to the network 105. In some implementations, the content limiter 225 can set or maintain the attributes of the content elements 210A-N to default values during the first inclusion of the information resource 205. After the first inclusion of the content elements 210A-N on the information resource 205, the content limiter 225 may invoke the rendering limiter 230. When invoked, rendering limiter 230 may analyze content elements 210A-N using the functionality described herein to determine whether to apply content restriction policies to content elements 210A-N based on the rendering-based restriction extension. If rendering limiter 230 determines, based on the rendering attributes, that a content restriction policy is to be applied to content elements 210A-N, content limiter 225 may modify content elements 210A-N during subsequent inclusion of content elements 210A-N on any information resource. In this way, the content elements 210A-N may be presented and rendered on the information resource 205 at the content limiter 225 of the running application 160 during the first provision. Based on the analysis of the rendering properties of the content elements 210A-N and the information resource 205, the content elements 210A-N may be modified in subsequent modifications of the content elements 210A-N and subsequent provision of the content limiter 225 to the running application 160.
In response to finding the element identifier in the local restricted content database 240 or the remote restricted content database 245, the content limiter 225 may modify the presentation of the content elements 210A-N on the information resource 205 according to the content limiting policy. The content restriction policy maintained at content restriction policy database 235 may specify that content limiter 225 perform any number or any combination of actions to modify the presentation of content elements 210A-N. In some implementations, the content limiter 225 can disable the content elements 210A-N as specified by the content limiting policy. In some implementations, the content limiter 225 can delete or remove the content elements 210A-N from the information resource 205 as specified by the content limiting policy. In some implementations, the content limiter 225 can identify the code segments corresponding to the content elements 210A-N in the tag of the information resource 205. Content limiter 225 may delete, remove, or otherwise invalidate code segments corresponding to content elements 210A-N. In some implementations, the content limiter 225 can set the visibility attributes of the content elements 210A-N from on to off as specified by the content limiting policy. Setting the visibility attributes of the content elements 210A-N from on to off may cause the application 160 to not render, display, or otherwise render the content elements 210A-N on the information resource 205. In some implementations, the content limiter 225 can delete any redirect links from the content elements 210A-N as specified by the content limiting policy. Interaction or activation of the redirect link may cause the content limiter 225 of the running application 160 to retrieve the additional content. In some implementations, the content limiter 225 can determine whether the content elements 210A-N include a redirect link based on the code segment corresponding to the content element 210A-N.
The content limiter 225 may also modify the transmission and reception of data associated with the content elements 210A-N on the information resource 205 in response to identifying element identifiers on the local limited content database 240 and the remote limited content database 245, as specified by the content limiting policy. In some implementations, the content limiter 225 can alter the transmission of data packets associated with the content elements 210A-N from the computing device running the application 160. Content elements 210A-N may include code segments that specify that a computing device running application 160 send a confirmation response to a log server. The validation response may represent a validation of the receipt or presentation of the content elements 210A-N at the computing device running the application 160. Content limiter 225 may identify a code segment for sending an acknowledgement response. In some implementations, the content limiter 225 can modify, remove, or delete the identified code segment to disable transmission of the acknowledgement response. In some implementations, the content limiter 225 may also permit transmission of the acknowledgement response, and may subsequently modify, remove, or delete the identified code segment to disable transmission of the acknowledgement response. In some implementations, the content limiter 225 may alter the receipt of data packets associated with the content elements 210A-N from another computing device (e.g., the data processing system 110, the content provider device 115, and the content publisher device 120). In some implementations, the content limiter 225 can receive data packets (e.g., segment chunks for streaming video). The content limiter 225 may then remove the data packet from processing by the application 160.
If an element identifier is identified in the local restricted content database 240 by the content limiter 225 or in the remote restricted content database 245 by the remote device, the content limiter 225 may add additional content elements 210A-N on the information resource 205 to modify the presentation of the content elements 210A-N. Content limiter 225 may identify the location and size of content elements 210A-N. The content limiter 225 may identify visual characteristics (e.g., color values) of the information resource 205 including the content elements 210A-N. The content limiter 225 may then generate additional content elements having the identified locations and sizes of the content elements 210A-N and the visual characteristics of the information resource 205 to obscure the content elements 210A-N.
Referring now to fig. 3, fig. 3 is a block diagram depicting a flow of content elements licensed or otherwise limited information resources by a system for limiting content in accordance with an illustrative embodiment. As depicted in flow 300 of fig. 3, information resource 205 may include a first content element 210A, a second content element 210B, and a third content element 210C. The information resource 205 and each content element 210A-C may correspond to a binary sequence or bit stream (depicted in hexadecimal form). The first content element 210A may correspond to a first bit stream 305A (e.g., "xA 831"). The second content element 210B may correspond to a second bitstream 305B (e.g., "xFC 0A"). The third content element 210C may correspond to a third bitstream 305C (e.g., "x4C 9D").
In the context of FIG. 2, element hash 220 may use hash function 310 to generate element identifiers 315A-C (also depicted in hexadecimal form) corresponding to one of content elements 210A-C using bit streams 305A-N. The bitstreams 305A-N may have been identified and obtained by the resource parser 215. As depicted by flow 300 in fig. 3, element hash 220 may generate element identifier 315A ("xC 1 A9") for first content element 210A of first bit stream 305A. The element hash 220 may generate a second element identifier 315B ("x 8BF 2") for the second content element 210B of the second bitstream 305B. The element hash 220 may generate a third element identifier 315C ("x 3C 70") for the third content element 210C of the third bit stream 305C.
Still referring to FIG. 3 in the context of FIG. 2, the content limiter 225 may use the element identifiers 315A-C to determine whether to apply a content limiting policy to any of the content elements 210A-C. To this end, the content limiter 225 may search for the element identifiers 315A-C in a restricted content database, such as the local restricted content database 240 or the remote restricted content database 245. The restricted content database may include a data structure (such as restricted content table 315) for arranging element identifiers by license indicators. On the restricted content table 325 stored at the restricted content database, the content limiter 225 may identify the first element identifier 315A, the second element identifier 315B, and the third element identifier 315C. For the first element identifier 315A, the content limiter 225 may verify that the license indicator specifies that the corresponding first content element 205A is to be limited. In contrast, for the second element identifier 315B and the third element identifier 315C, the license indicator specifies that both the second content element 205B and the third content element 205C are to be licensed.
Having found the first element identifier 315A corresponding to the first content element 205A in the restricted content database, the content limiter 225 may apply a content restriction policy to the first content element 205A. As depicted in fig. 3, the content limiter 225 may delete the first content element 210A from the information resource 205. The content limiter 225 may also maintain the second content element 210B and the third content element 210C simultaneously.
Referring now to FIG. 4, FIG. 4 is a flowchart depicting a method 400 of restricting content inserted into an information resource in accordance with an illustrative embodiment. The functions described herein with respect to method 400 may be performed or otherwise operated by client device 125, proxy device 145, or remote content limiter device 150 as shown in fig. 1, system 200 as shown in fig. 2, or a computing device as shown in fig. 10, or any combination thereof. Briefly summarized, a computing device having one or more processors may identify a content element included in an information resource, apply a content restriction policy to the content element for modifying presentation of the content element (block 405). The computing device may identify a bitstream corresponding to a content element included in the information resource (block 410). The computing device may hash the identified bit stream to generate an element identifier corresponding to the content element (block 415). The computing device may use the element identifier to access a restricted content database (block 420). In response to finding the element identifier in the restricted content database, the computing device may modify the presentation of the content element on the information resource according to the content restriction policy (block 425).
In more detail, a computing device having one or more processors may identify a content element included in an information resource, apply a content restriction policy to the content element for modifying presentation of the content element (block 405). The computing device may identify a content element included in the information resource, apply a content restriction policy to the content element for modifying presentation of the content element. The content restriction policies may be stored in an internal restriction policy database and maintained by the presence limiter. The content restriction policy may specify which element types of content elements are to be further analyzed and how to modify the content elements identified as restricted. The computing device may interface with the application to access the information resource and the content elements included in the information resource.
According to the content limiting policy, the resource resolver may identify a subset of content elements included in the information resource for further analysis. The computing device may identify an element type for each content element included in the information resource. Element types may include one of text, paragraphs, partitions, segments, inline frames, images, canvas, applets, scripts, audio, video, tables, lists, and the like. The element type may correspond to an HTML tag (e.g., "< iframe >" for an inline frame). In some implementations, the content restriction policy can specify the element type (e.g., inline frame, image, applet, etc.) to be further analyzed. As specified by the content restriction policy, the computing device may identify a subset of content elements that match the element type to be further analyzed. In this way, the presence limiter may reduce the number of content elements to be processed, thereby freeing up computing resources.
The computing device may identify a bitstream corresponding to a content element included in the information resource (block 410). To determine whether to apply the content restriction policy to the content element, the computing device may identify a bitstream corresponding to the content element included in the information resource. The information resource may correspond to a binary sequence (e.g., byte array or byte stream). Each content element included in the information resource may correspond to a portion of a binary sequence. In some implementations, a computing device may interface with an application to access a binary sequence corresponding to an information resource. In some implementations, the computing device can interface with an application to access a portion of a binary sequence corresponding to one of the content elements. In some implementations, as specified by the content restriction policy, the computing device can interface with an application to access a portion of a binary sequence corresponding to a subset of content elements identified as matching the element type to be further analyzed. In some implementations, the computing device may identify a subset portion of the bit stream of the content element (e.g., the first N bits in the bit stream or every fifth bit in the bit stream, etc.).
The computing device may hash the identified bit stream to generate an element identifier corresponding to the content element (block 415). In the event that the computing device has identified the bitstream, the computing device may hash the identified bitstream to generate an element identifier corresponding to the content element. In some implementations, the computing device can generate an element identifier corresponding to the content element using a hash function on the identified bit stream. The hash function may include any combination of bitstreams identified for the content elements, such as a cryptographic hash function (e.g., secure hash algorithms (SHA-1, SHA-2, and SHA-3), message digest algorithms (MD 2, MD4, MD5, and MD 6), checksum functions, etc.), a cyclic redundancy check algorithm, a hash table (e.g., an associative array), and a geometric hash function, or any one-to-one hash function, etc. The hash function may be configured or selected to minimize hash collisions such that the likelihood of identifying the same element identifier for two different content elements is reduced. In some implementations, the computing device may hash a subset portion of the bitstream of the content element.
In some implementations, the hash function used by the computing device may be common in all instances of the presentation limiter. For the same content element, one instance of a computing device at one computing device may generate the same element identifier as another instance of a computing device at another computing device. In this way, the computing device may generate a single element identifier to identify the same content element that is sent over the network to the computing device connected thereto.
In some implementations, the hash function used by the computing device may be unique to the local instance of the presence limiter. For the same content element, one instance of a computing device at one computing device may generate an element identifier that is different from an element identifier generated by another instance of a computing device running at another computing device. The computing device may generate an element identifier that is unique to the local instance of the presence limiter. By using a hash function that is unique to the local instance of the presence limiter, the computing device may enhance data security and encryption, as well as user privacy.
In some implementations, the hash function used by the computing device may consider any encryption algorithm of the binary sequence corresponding to the information resource or content element. Any intermediate device may apply an encryption algorithm to the binary sequence corresponding to the information resource or content element, thereby altering the binary sequence. In some implementations, the encryption algorithm applied to the binary sequence may include Wired Equivalent Privacy (WEP) and Wi-Fi protected access (WPA), among other encryption protocols. Because of the encryption algorithm, a computing device running at one computing device may generate an element identifier that is different from an element identifier generated by a computing device running at another computing device. To bypass or offset the effects of the encryption algorithm applied to the binary sequence, the computing device may use a one-to-one hash function to generate element identifiers for each identified bit stream. In this way, while the element identifier generated by the computing device may be unique to the local instance of the presence limiter, the encryption algorithm applied by the intermediary device may produce a unique value. As such, element identifiers generated by the computing device at one instance of the presence limiter may be used in other instances of the presence limiter at other devices.
The computing device may use the element identifier to access a restricted content database (block 420). Using the element identifier generated by the computing device, the computing device may access a local restricted content database or a remote restricted content database to determine whether to apply the content restriction policy to the content element. The local restricted content database may be maintained by an instance of a presence limiter that is local to a computing device running the computing device. The local restricted content database may include any data structure (e.g., array, heap, linked list, binary tree, matrix, table, etc.) storing element identifiers and permission indicators that specify whether the corresponding element identifiers are to be restricted or permitted, etc. A remote restricted content database may be maintained by another computing device. In some implementations, the remote restricted content database may be maintained by an instance of a presentation limiter that is different from the computing device running the computing device. In some implementations, the local restricted content database may be stored and maintained as a remote device. The remote restricted content database may include any data structure (e.g., array, heap, linked list, binary tree, matrix, table, etc.) storing element identifiers and permission indicators that specify whether corresponding element identifiers are to be restricted or permitted, etc.
The computing device may initially access a local restricted content database. The computing device may perform a search for the element identifier in a local restricted content database. In some implementations, the computing device may traverse the local restricted content database for element identifiers. In some implementations, the computing device may use the element identifier as an index to a data structure stored in the local restricted content database. If the computing device finds the element identifier in the local restricted content database, the computing device may identify a permission indicator for the element identifier. The computing device may use the permission indicator to determine whether to apply the content restriction policy to the content element corresponding to the element identifier.
On the other hand, if the computing device does not find an element identifier in the local restricted content database, the computing device may send a request to the remote restricted content database to find the element identifier. The request to find the element identifier may include the element identifier generated by the computing device, as well as other data. A remote restricted content database may be maintained or associated with a device remote from the local instance of the presence limiter. In some implementations, the computing device may send the request to a remote device that maintains a remote restricted content database.
In response to receiving the request from the computing device, the remote device may access the remote restricted content database using the element identifier in the request. The remote device may perform a search for the element identifier in a remote restricted content database. In some implementations, the remote device can traverse the remote restricted content database for element identifiers. In some implementations, the remote device can use the element identifier as an index into a data structure stored in the remote restricted content database.
If the remote device finds the element identifier in the remote restricted content database, the remote device may identify a permission indicator for the element identifier. The remote device may also send a positive response to the computing device in response to finding the element identifier. A positive response may indicate that the element identifier is on the remote restricted content database. The positive response may also include a permission indicator as specified in the remote restricted content database. The computing device may receive a positive response from a remote device associated with the remote restricted content database. The computing device may store the element identifier and the license indicator received from the remote device on a local restricted content database. Based on the permission indicator, the computing device may determine whether to apply the content restriction policy to the content element corresponding to the permission indicator.
The remote device may also send a negative response to the computing device if the remote device does not find the element identifier in the remote restricted content database. A negative response may indicate that the element identifier is not on the remote restricted content database. The computing device may receive a negative response from a remote device associated with the remote restricted content database. In response to receiving a negative response from the remote device, the computing device may invoke the computing device to determine whether to apply the content restriction policy to the content element according to the rendering-based restriction extension.
In addition, if the remote device does not find the element identifier in the remote restricted content database, the remote device may determine whether to modify the content element based on the rendering properties of the content element and the information resource according to the rendering-based restriction extension. The determination of whether to modify the content element may be performed by an instance of the computing device at the remote device according to a render-based constraint extension. The remote device may access rendering properties of the content elements and information resources received by the application. In some implementations, the remote device may send a request for rendering properties to the device running the application. The remote device may then receive rendering properties of the content elements of the information resource from the device.
By analyzing the rendering properties of the content element and the rendering properties of the information resource according to the rendering-based restriction extension, the remote device may determine whether to apply a content restriction policy to the content element. The render-based restriction extension may specify that a content restriction policy be applied to content elements having certain rendering properties. In general, analyzing the rendering properties of content elements and the rendering properties of information resources according to a render-based constraint extension may be computationally more complex than a hash function. As such, rendering-based constraint extensions may consume more computer resources and processing time relative to the hash function, resulting in reduced performance and hysteresis of the remote device. To partially mitigate consumption of computer resources and reduce processing time to some extent, generating element identifiers and analysis of rendering attributes using hash functions may be bifurcated or otherwise distributed among multiple devices and instances of presentation limiters.
In accordance with the render-based restriction extension, the remote device may compare the rendering attributes of the content element with the selected rendering attributes to determine whether to apply the content restriction policy to the content element. In some implementations, the remote device can compare the size of the content element on the information resource to a preselected size. If the remote device determines a match between the size of the content element and the pre-selected size, the remote device may determine to apply the content restriction policy to the content element. In some implementations, the remote device can compare the location of the content element on the information resource with a pre-selected location (e.g., toward the top of the information resource or along a side thereof). If the remote device determines a match between the location of the content element and the pre-selected location, the remote device may determine to apply the content restriction policy to the content element. In some implementations, the remote device can identify color values (e.g., RGB values, alphanumeric identifiers, or HTML color codes) of the content elements and color values of the information resource. The remote device may determine to apply the content restriction policy to the content element if the color value of the content element and the color value of the information resource differ by a predefined margin. If none of these match, the remote device may determine not to apply the content restriction policy to the content element.
The remote device may also apply any number and any combination of image recognition algorithms to determine whether to apply the content restriction policy to the content element based on the rendering attributes according to the rendering-based restriction extension. The content element may comprise an image or may comprise a source address of an image. The content element may include the video or may include a source address of the video. In some implementations, the remote device may apply an image recognition algorithm to determine whether the image or video of the content element includes a restricted visual element. Image recognition algorithms may include optical character recognition, object recognition, edge detection, feature detection (e.g., affine feature detection), pattern recognition algorithms, and the like. In some implementations, the remote device can identify the character string from the image of the content element using an optical character recognition algorithm. The remote device may compare the identified string with the pre-selected string. If the identified string matches the pre-selected string, the remote device may determine to apply a content restriction policy to the content element. Otherwise, the remote device may determine not to apply the content restriction policy to the content element.
In conjunction with determining whether to apply a content restriction policy to a content element based on analysis of rendering attributes, a remote device may add or insert an element identifier corresponding to the content element to a remote restricted content database. If the remote device determines that the content restriction policy is to be applied, the remote device may add or insert a permission indicator specifying that the content element corresponding to the element identifier is to be restricted. If the remote device determines that the content restriction policy is not to be applied, the remote device may add or insert a permission indicator specifying that the content element corresponding to the element identifier is to be permitted. The remote device may then send a positive response to the computing device. A positive response may indicate that the element identifier is on the remote restricted content database. The positive response may also include a permission indicator retrieved from a remote restricted content database.
In some implementations, the computing device can invoke the computing device if the element identifier is not found in the local restricted content database. When invoked, the computing device may analyze the content element to determine whether to apply a content restriction policy to the content element according to the rendering-based restriction extension. The computing device may also invoke the computing device to analyze the content element in response to receiving a negative response to the element identifier from a remote device associated with the remote restricted content database.
By analyzing the rendering attributes of the content elements and the rendering attributes of the information resources according to the render-based restriction extension, the computing device may determine whether to apply the content restriction policy to the content elements. The render-based restriction extension may specify that a content restriction policy be applied to content elements having certain rendering properties.
In accordance with the render-based restriction extension, the computing device may compare the rendering attributes of the content element with the selected rendering attributes to determine whether to apply the content restriction policy to the content element. In some implementations, the computing device may compare the size of the content element on the information resource to a pre-selected size. If the computing device determines a match between the size of the content element and the pre-selected size, the computing device may determine to apply the content restriction policy to the content element. In some implementations, the computing device can compare the location of the content element on the information resource with a pre-selected location (e.g., toward the top of the information resource or along a side thereof). If the computing device determines a match between the location of the content element and the pre-selected location, the computing device may determine to apply the content restriction policy to the content element. In some implementations, the computing device can identify color values (e.g., RGB values, alphanumeric identifiers, or HTML color codes) of the content elements and color values of the information resource. The computing device may determine to apply the content restriction policy to the content element if the color value of the content element and the color value of the information resource differ by a predefined margin. If none of these match, the computing device may determine not to apply the content restriction policy to the content element.
The computing device may also apply any number and any combination of image recognition algorithms to determine whether to apply the content restriction policy to the content element based on the rendering attributes according to the rendering-based restriction extension. The content element may comprise an image or may comprise a source address of an image. The content element may include the video or may include a source address of the video. In some implementations, the remote device may apply an image recognition algorithm to determine whether the image or video of the content element includes a restricted visual element. Image recognition algorithms may include optical character recognition, object recognition, edge detection, feature detection (e.g., affine feature detection), pattern recognition algorithms, and the like. In some implementations, the computing device may identify the character string from the image of the content element using an optical character recognition algorithm. The computing device may compare the identified string with a pre-selected string. If the identified string matches the pre-selected string, the computing device may determine to apply a content restriction policy to the content element. Otherwise, the computing device may determine not to apply the content restriction policy to the content element.
In conjunction with determining whether to apply a content restriction policy to a content element based on analysis of rendering attributes, a computing device may add or insert an element identifier corresponding to the content element to a local restricted content database. If the computing device determines that the content restriction policy is to be applied, the computing device may add or insert a permission indicator specifying that the content element corresponding to the element identifier is to be restricted. If the computing device determines that the content restriction policy is not to be applied, the computing device may add or insert a permission indicator indicating that the content element corresponding to the element identifier is to be permitted.
If the element identifier is not found in the local restricted content database or the remote restricted content database, the computing device may maintain the content element during a first inclusion of the content element on the information resource by the application. The first inclusion of the content element may correspond to a first provision of the content element to any device running a presentation limiter connected to the network. In some implementations, the computing device can set or maintain the attribute of the content element to a default value during the first inclusion of the information resource. After the first inclusion of the content element on the information resource, the computing device may invoke the computing device. When invoked, the computing device analyzes the content elements to determine whether to apply content restriction policies to the content elements according to the rendering-based restriction extensions using the functionality described herein. If the computing device determines, based on the rendering attributes, that the content restriction policy is to be applied to the content element, the computing device may modify the content element during subsequent inclusion of the content element on any information resource. In this way, the content element may be presented and rendered on the information resource at the computing device running the application during the first provision. Based on the analysis of the rendering properties of the content element and the information resource, the content element may be modified in subsequent modification of the content element and subsequent provisioning to the computing device running the application.
In response to finding the element identifier in the restricted content database, the computing device may modify the presentation of the content element on the information resource according to the content restriction policy (block 425). In response to finding the element identifier in the local restricted content database or the remote restricted content database, the computing device may modify the presentation of the content element on the information resource according to the content restriction policy. The content restriction policy maintained at the content restriction policy database may specify that the computing device perform any number or any combination of actions to modify the presentation of the content element. In some implementations, the computing device may disable the content element as specified by the content restriction policy. In some implementations, the computing device may delete or remove the content element from the information resource as specified by the content restriction policy. In some implementations, the computing device can identify a code segment corresponding to the content element in the tag of the information resource. The computing device may delete, remove, or otherwise invalidate the code segments corresponding to the content elements. In some implementations, the computing device may set the visibility attribute of the content element from on to off as specified by the content restriction policy. Setting the visibility property of the content element from on to off may cause the application to not render, display, or otherwise render the content element on the information resource. In some implementations, the computing device can remove any redirect links from the content element as specified by the content restriction policy. Interaction or activation of the redirection link may cause the computing device running the application to retrieve the additional content. In some implementations, the computing device can determine whether the content element includes a redirect link based on the code segment corresponding to the content element.
In response to finding the element identifier, the computing device may also modify transmission and reception of data associated with the content element on the information resource, as specified by the content restriction policy. In some implementations, the computing device may alter the transmission of data packets associated with the content element from the computing device running the application. The content element may include a code segment that specifies that the computing device running the application send a confirmation response to the log server. The confirmation response may represent a confirmation of receipt or presentation of the content element at the computing device running the application. The computing device may identify a code segment for sending an acknowledgement response. In some implementations, the computing device may modify, remove, or delete the identified code segment to disable transmission of the acknowledgement response. In some implementations, the computing device may also permit transmission of the acknowledgement response, and may subsequently modify, remove, or delete the identified code segment to disable transmission of the acknowledgement response. In some implementations, a computing device may alter the receipt of data packets associated with a content element from another computing device (e.g., a data processing system, a content provider device, and a content publisher device). In some implementations, a computing device may receive data packets (e.g., segment chunks for streaming video). The computing device may then remove the data packet from processing by the application.
If the element identifier is found in the local restricted content database or the remote restricted content database, the computing device may add additional content elements on the information resource to modify the presentation of the content elements. The computing device may identify the location and size of the content element. The computing device may identify visual characteristics (e.g., color values) of the information resource including the content element. The computing device may then generate additional content elements having the identified locations and sizes of the content elements and the visual characteristics of the information resource to obscure the content elements.
Fig. 5 is a flowchart depicting a method 500 of restricting content inserted into an information resource in accordance with an illustrative embodiment. The functions described herein with respect to method 500 may be performed or otherwise operated by client device 125, proxy device 145, or remote content limiter device 150 as shown in fig. 1, system 200 as shown in fig. 2, or a computing device as shown in fig. 10, or any combination thereof. Briefly summarized, a client device may identify content elements on an information resource (block 503). The client device may determine whether the content element is a restricted type of content element (block 506). If the content element is not a restricted type of content element, the client device may identify a next content element on the information resource (block 569). If the content element is a limited type of content element, the client device may identify a bit sequence corresponding to the content element (block 509). The client device may extract a subset of the bit sequence to obtain a bit stream of content elements (block 512). The client device may calculate a hash of the bitstream to generate an element identifier (block 515). The client device may access a local restricted content database to search for the element identifier (block 518). The client device may determine whether the element identifier is in a locally restricted content database (block 521). If the element identifier is not in the local restricted content database, the client device may send a request to the remote device (block 524).
The remote device may receive a request from a client device (block 527). The remote device may access a remote restricted content database to search for the element identifier (block 530). The remote device may determine whether the element identifier is in a remote restricted content database (block 533). If the element identifier is in the remote restricted content database, the remote device may send an indicator to the client device (block 536). If the element identifier is not in the remote restricted content database, the remote device may identify rendering properties of the content element (block 539). The remote device may determine whether to modify the content element based on the identified rendering attributes (block 542). If so, the remote device may add the element identifier to the remote restricted content database if so (block 545). If so, the remote device may add the element identifier to the remote restricted content database if so (block 548). The remote device may send an indicator (block 551).
The client device may receive the indicator and add the element identifier to the local restricted content database (block 554). The client device may determine whether the element identifier is selected to be allowed or restricted (block 557). If allowed, the client device may maintain content elements on the information resource (block 560). If so, the client device may modify the content element on the information resource (block 563). The client device may then identify the next content element on the information resource (block 569). The functionality of method 500 may be repeated any number of times.
C.System and method for limiting content inserted into information resource
A content control module operating as a plug-in on an application or as a separate program from an application running on a client device or proxy device (e.g., router) may interfere with the insertion of content elements onto information resources or the presentation of content elements. These content control modules may employ various combinations of techniques to interfere with content elements on information resources. One technique may use a source address to identify that a content element is from a different source than the rest of the information resource. This technique may be counteracted if the source address of the content element is the same as the source address of the information resource. Another technique may use image processing techniques to identify content elements to detect differences between the content elements and underlying information resources. However, these techniques can be computationally expensive, resulting in hysteresis and degradation of computer performance. Yet another technique may identify a content element by matching a hash value of a bit stream corresponding to the content element with a hash value stored in a content restriction database maintaining a restricted hash value list.
These content control modules may raise security concerns. Such a content control module may change the constituent content elements originally supplied by the information resource without authentication. Furthermore, these modules may deviate the behavior of the content elements and the information resources from the way the information resources were originally programmed. For example, the content control module may change a link (e.g., a hyperlink) in one of the content elements, potentially causing the client device to be redirected to a malicious website. Moreover, from a human-computer interaction (HCI) perspective, these changes to content elements and deviations in the behavior of information resources may interfere with the user's experience with the information resources and applications. For example, if the content control module removes one of the content elements from the information resource, the user cannot view or interact with the removed content element, thereby reducing the user's experience with the originally encoded information resource.
In some implementations, the content publisher can include instructions in the information resource that can cause the client device to request content from one or more content servers via one or more links. These content servers may be different from the host servers hosting the content of the content publisher. By including instructions to request content rather than inserting the content directly into the information resource prior to sending the information resource, the content publisher may reduce the latency of provisioning the information resource to the client device and reduce network traffic. Some content control modules running on a client device may interfere with the ability of the client device to send requests for content from one or more content servers by modifying links to the content servers to other or unknown content servers or by preventing any requests from being sent to any content servers. As a result, the client device may not be able to access or display all content items that the content publisher desires to include in the content publisher's information resource.
To circumvent some of the potential hazards of the content control module, the proposed system may exploit some of the weaknesses of the content control module (e.g., the presentation limiter 165 as detailed in section B herein). Each new content element may cause the content control module to recalculate the hash value and reprocess the content element using image processing algorithms to determine whether to limit, resulting in consumption of computing power and hysteresis. This may also lead to a delay in the acknowledgement of the received ping for the content element. If the acknowledgement of receipt of the ping for the content element is delayed, the server may generate an edited version and send the edited version of the content element. The server may edit the file name or change the visual properties of the content element. Thus, the hash value of the bitstream corresponding to the edited version of the content element may be different from the previous hash value, triggering the content control module at the client device to re-run the image processing algorithm. This may reduce the performance of the content control module running at the client device. By reducing the performance of the content control module running at the client device, the use of the content control module may be restricted. Disabling the use of the content control module may permit the content provider and the content publisher to maintain control over how content is displayed to the user on the respective client devices. This may provide for an improved provision of a user interface experience, or may ensure that requirements regarding how content is displayed are met, for example.
Referring now to fig. 6, fig. 6 is a block diagram depicting a system 600 for deploying countermeasures for scripts interfering with the integrity of information resources in accordance with an illustrative embodiment. The system 600 may include some or all of the devices, components, and modules of the environment 100, such as the network 105, the data processing system 110 including the content request module 130, the resource assembler module 135, the database 140, the content provider device 115, the content publisher device 120, the client device 125, the proxy device 150, and the remote content limiter device 155.
In system 600, data processing system 110 may also include interference detector 605, content modifier 610, and database 615. The interference detector 605 and content modifier 610 may include at least one processing unit, server, virtual server, circuit, engine, proxy, appliance, or other logic device, such as a programmable logic array, configured to communicate with the database 140 or database 615 and other computing devices (e.g., the content provider device 115, the content publisher device 120, or the client device 125) via the network 105. The disturbance detector 605 and the content modifier 610 may comprise or run at least one computer program or at least one script. The interference detector 605 and the content modifier 610 may be separate components, a single component, or part of the data processing system 110. The disturbance detector 605 and content modifier 610 may include a combination of software and hardware, such as one or more processors configured to run one or more scripts. The interference detector 605 and content modifier 610 may interface with the content request module 130 and the resource assembler module 135 in selecting and generating content elements and information resources to provide to devices connected to the network 105.
The data processing system 110 may also include one or more databases 615 for storing content elements (e.g., content elements 210A-N) and attributes of information resources. Database 615 may be local to data processing system 110. In some implementations, database 615 may be remote to data processing system 110, but may be in communication with data processing system 110 via network 105. The database 615 may include information resources and attributes of content elements to be included in the information resources, etc., to serve the client device 125, such as information resources and content elements selected and generated by the content request module 130 and the resource assembler module 135. Database 615 may store information resources and content elements generated or modified by content request module 130 and resource assembler module 135 or any other component of data processing system 110. In some embodiments, database 615 may be identical to database 140.
To maintain the integrity of the information resource, the interference detector 605 may identify a first content element (e.g., content elements 210A-N) on the information resource (e.g., information resource 205). The information resource and the first content element may have been previously transmitted or provided to a client device 125 connected to the network 105. The information resource may correspond to a binary sequence. The first content may correspond to a first bit stream. The presence limiter 165 (or any other content control module) running on the client device 125, the proxy device 145, or the remote content limiter device 155 may have interfered with the presence or inclusion of the first content element on the information resource. In some implementations, the presentation limiter 165 may have applied the content restriction policy to the first content element on the information resource, as described in detail in section B.
In some implementations, the interference detector 605 can identify a subset of content elements included in the information resource for further analysis. The interference detector 605 identifies the element type of each content element included in the information resource. Element types may include one of text, paragraphs, partitions, segments, inline frames, images, canvas, applets, scripts, audio, video, tables, lists, and the like. The element type may correspond to an HTML tag (e.g., "< iframe >" for an inline frame). The types of elements to be further analyzed may include the types of elements (e.g., inline frames, audio, video, images, etc.) most likely to be modified by the presentation limiter 165. The interference detector 605 may identify a subset of content elements that match the element type. In this way, the interference detector 605 may reduce the number of content elements to be processed to the number of content elements most likely to be modified by the presentation limiter 165, thereby freeing up computing resources for the data processing system 110.
In some implementations, the interference detector 605 can identify a bit stream corresponding to a first content element included in the information resource. The information resource may correspond to a binary sequence (e.g., byte array or byte stream). Each content element included in the information resource may correspond to a portion of a binary sequence. In some implementations, the interference detector 605 can access a binary sequence corresponding to the information resource. In some implementations, the interference detector 605 can access a portion of a binary sequence corresponding to one of the content elements. In some implementations, the interference detector 605 can access a portion of a binary sequence corresponding to a subset of content elements identified as matching the element type to be further analyzed. In some implementations, the interference detector 605 can access the database 615 for information resources, content elements, and corresponding binary sequences.
With the content elements identified on the information resource, the interference detector 605 may determine any interference with the rendering of the first content element on the information resource. The disruption to the rendering of the first content element may include disabling, or otherwise modifying the display or presentation of the content element on the client device 125 in any manner. The interference may be due to the operation of presence limiter 165 on client device 125, proxy device 145, or remote content limiter device 150. The interference detector 605 may employ any number or combination of techniques to determine such interference that occurs by the presence limiter 165.
Using the time the content element was sent and the time any acknowledgement response was received, the interference detector 605 may determine interference with the rendering of the content element on the information resource. Each information resource may include a request script for requesting insertion of content into the information resource. In response to receiving the information resource, the request script may cause the client device 125 to send a request for content to the data processing system 110. Each content element may include a validation response script. Upon receipt of the content element, the acknowledgement response script may cause the client device 125 running the application 160 to send or transmit an acknowledgement response (e.g., a pingback) back to the data processing system 110 or the content provider device 115. The time at which the content element was sent and the time at which the request or any acknowledgement response to the content was received may be stored in database 140 or database 615.
Any irregularities in the time the content element is sent to the client device 125, the time the request for content associated with the content element is received from the client device 125, and the time any acknowledgement response is received from the client device 125 may be indicative of the operation of the presentation limiter 165 at the client device 125. Performing the function of the presence limiter 165 on the client device 125 may result in any acknowledgement response being received longer than if the presence limiter 165 were not present. The interference detector 605 may compare various times related to the transmission of the content element and the information resource and the receipt of any acknowledgement response associated with the content element in determining whether the rendering of the content element is interfered. The comparison may be performed in real time or at specified time intervals. In some implementations, the response of the first content element may be bound to the content publisher device 125 such that the next information resource is available, preventing a malicious client renderer (e.g., the presentation limiter 165) from waiting for any amount of time before transmitting the response. As a result, malicious renderers using hash-based methods may be as slow and inefficient as non-hash-based "brute force" methods to avoid interfering with the detection of detector 605.
In some implementations, the interference detector 605 can determine occurrence of interference with rendering of the first content element on the information resource based on either no request for content being received or no acknowledgement response for the first content element being received from the client device 125. The absence of receipt of a request for content or receipt of an acknowledgement response to the first content element from the client device 125 may indicate that the presence limiter 165 altered the behavior of the first content element or the information resource thereon. To this end, for each content element, the interference detector 605 may access the database 615 to determine whether the information resource is being transmitted or provided to the client device 125. The interference detector 605 may determine whether a request for content associated with the first content element is received from the client device 125. If a request for content is received from the client device 125, the interference detector 605 may analyze the time at which the request was received, as well as other factors, to determine interference for the first content element. If a request for content is not received from the client device 125, the interference detector 605 may determine an occurrence of interference on the client device with rendering of a first content element on the information resource. For each content element, the interference detector 605 may also access the database 615 to determine whether an acknowledgement response associated with the first content element is received from the client device 125. If an acknowledgement response is received from the client device 125, the interference detector 605 may analyze the time of the acknowledgement response and other factors to determine the interference of the first content element. If an acknowledgement response is not received from the client device 125, the interference detector 605 may determine an occurrence of interference on the client device with the rendering of the first content element on the information resource.
In some implementations, the interference detector 605 may compare the time elapsed between the time the first content element was sent to the client device 125 and the time the acknowledgement response to the first content element was received from the client device 125 to determine the occurrence of interference. The interference detector 605 accesses the database 140 or the database 615 to get the time of transmission and the time of receipt of the acknowledgement response. The interference detector 605 may identify the time at which the first content element was sent to the client device 125. The time at which the first content element is transmitted may correspond to the time at which the data processing system 110 or the content provider device 115 transmitted or otherwise provided the first content element to the client device 125. The interference detector 605 may identify the time at which the acknowledgement response was received. The time at which the acknowledgement response is received may correspond to the time at which the client device 125 processing the first content element sends the acknowledgement response back to the data processing system 110 or the content provider device 115. The interference detector 605 may calculate the time elapsed between the time the first content element was transmitted and the time the acknowledgement response was received. The interference detector 605 may compare the calculated elapsed time to a predetermined threshold (e.g., a microsecond to millisecond range). If the interference detector 605 determines that the calculated elapsed time is greater than or equal to a predetermined threshold, the interference detector 605 may determine that an occurrence of interference with the rendering of the first content element on the information resource. If the interference detector 605 determines that the calculated elapsed time is less than the predetermined threshold, the interference detector 605 may determine that there is no interference with the rendering of the first content element on the information resource.
In some implementations, the interference detector 605 can compare an average time elapsed between a time of transmitting the first content element to the plurality of client devices 125 and a time of receiving the acknowledgement response from the client devices to determine the occurrence of interference. The interference detector 605 accesses the database 140 or the database 615 to obtain the time of transmission and the time of receipt of the acknowledgement response for each client device 125. The interference detector 605 may calculate an average time that passes between the time the first content element is sent and the time the acknowledgement response is received on the plurality of clients. The interference detector 605 may compare the elapsed average time to a predetermined threshold (e.g., a microsecond to millisecond range). If the interference detector 605 determines that the elapsed average time is greater than or equal to the predetermined threshold, the interference detector 605 may determine that interference on the rendering of the first content element on the information resource occurred on the plurality of client devices 125. If the interference detector 605 determines that the elapsed average time is less than the predetermined threshold, the interference detector 605 may determine that no interference on rendering of the first content element on the information resource occurs on the plurality of client devices 125.
In some implementations, the interference detector 605 can compare a first time elapsed between a first transmission and a second transmission of a first content element with a second time elapsed between a first receipt and a second receipt of an acknowledgement response to the first content element. The difference between the elapsed first time and the elapsed second time may indicate that the presentation limiter 165 may interfere with rendering or inserting the first content element onto the information resource. Upon first receipt of the first content element, the presentation limiter 165 may have used a rendering-based restriction policy (e.g., image processing techniques) to analyze the first content element to determine whether to apply the content restriction policy to the content element. The presentation limiter 165 may then have used a hash function to identify whether the first content element corresponds to an element identifier on a restricted content database (e.g., the local restricted content database 240 or the remote restricted content database 245). The performance of the image processing algorithm may take a greater amount of time than computing the hash value.
To identify any differences in the interval between the time the first content element was sent and the time the acknowledgement response was received, the interference detector 605 may identify a first time to send the first content element to the client device 125. The interference detector 605 may identify a first time at which a first acknowledgement response to the first content element is received from the client device 125. The interference detector 605 may calculate a first time that elapses between a first time of transmitting the first content element to the client device 125 and a first time of receiving a first acknowledgement response to the first content element. The interference detector 605 may identify a second time to send the first content element to the client device 125. The interference detector 605 may identify a second time at which a second acknowledgement response to the first content element is received from the client device 125. The interference detector 605 may calculate a second time that elapses between a second time of transmitting the first content element to the client device 125 and a second time of receiving a second acknowledgement response to the first content element from the client device 125. In some implementations, the elapsed first time and the elapsed second time may be calculated using times of sending the first content element and receiving the acknowledgement response on the plurality of client devices 125. The interference detector 605 may calculate the difference between the elapsed first time and the elapsed second time. The interference detector 605 may compare the difference to a predetermined threshold. If the interference detector 605 determines that the difference is greater than or equal to the predetermined threshold, the interference detector 605 may determine that interference has occurred with the rendering of the first content element on the information resource. If the interference detector 605 determines that the difference is less than the predetermined threshold, the interference detector 605 may determine that no interference occurs with the rendering of the first content element on the information.
In some implementations, the interference detector 605 can compare an expected time at which the request for the first content element was received with an actual time at which the request for the first content element was received to determine interference with rendering of the first content element. The presence limiter 165 running on the client device 125 may have altered the behavior of the content element or the information resource thereon. Thus, the client device 125 may be caused to send the request for the first content element after receiving the information resource at a later time than without the presence limiter 165. In view of the change in behavior, the interference detector 605 may access the database 615 to identify the actual time at which a request for content for inserting the first content element onto the information resource was received from the client device 125. The interference detector 605 may also identify the actual time that passes between sending the information resource to the client device 125 and receiving the request for content from the client device 125. The interference detector 605 may determine or calculate the expected time of receipt of a request for content associated with a content element from the client device 125 using any number of factors. These factors may include network bandwidth of network 105, network latency of network 105, device type of client device 125, device configuration parameters of client device 125, and the like. The interference detector 605 may also determine or calculate an expected time that elapses between sending an information resource to the client device 125 and receiving a request for content from the client device 125. The interference detector 605 may compare the expected time when the request for content was received with the actual time. In some implementations, the interference detector 605 may calculate the difference between the expected time and the actual time at which the request for content was received. If the interference detector 605 determines that the difference is greater than or equal to the predetermined threshold, the interference detector 605 may determine that interference has occurred with the rendering of the first content element on the information resource. If the interference detector 605 determines that the difference is less than the predetermined threshold, the interference detector 605 may determine that no interference occurs with the rendering of the first content element on the information.
In some implementations, the interference detector 605 can compare an expected time at which the acknowledgement response to the first content element is received with an actual time at which the acknowledgement response to the first content element is received to determine interference with rendering of the first content element. The presence limiter 165 running on the client device 125 may have altered the behavior of the content element or the information resource thereon. Thus, the client device 125 may be caused to send an acknowledgement response to the first content element after receiving the content element at a later time than if the presence limiter 165 were not present. In view of the change in behavior, the interference detector 605 may access the database 615 to identify the actual time at which the acknowledgement response to the first content element was received from the client device 125. The interference detector 605 may also identify the actual time that passes between sending the information resource to the client device 125 and receiving the acknowledgement response from the client device 125. The interference detector 605 may use any number of factors to determine or calculate the expected time for receipt of the acknowledgement response from the client device 125. These factors may include network bandwidth of network 105, network latency of network 105, device type of client device 125, device configuration parameters of client device 125, and the like. The interference detector 605 may also determine or calculate an expected time that elapses between the transmission of the information resource to the client device 125 and the receipt of the acknowledgement response from the client device 125. The interference detector 605 may compare the expected time of receipt of the acknowledgement response to the first content element with the actual time. In some implementations, the interference detector 605 may calculate the difference between the expected time and the actual time at which the acknowledgement response to the first content element was received. If the interference detector 605 determines that the difference is greater than or equal to the predetermined threshold, the interference detector 605 may determine that interference has occurred with the rendering of the first content element on the information resource. If the interference detector 605 determines that the difference is less than the predetermined threshold, the interference detector 605 may determine that no interference occurs with the rendering of the first content element on the information.
In some implementations, the interference detector 605 can identify a difference in behavior with respect to the first content element from the subset of client devices 125 to determine interference with the first content element on the information resource. The first subset of client devices 125 may run the presence limiter 165 or may otherwise be affected by the presence limiter 165 in processing the information resource and the content elements thereon. On the other hand, the second subset of client devices 125 may not have the presence limiter 165 running thereon. As such, a first subset of the client devices 125 may consume a different amount of time in processing and analyzing content elements than a second subset of the client devices 125. In view of the differences in behavior, for each client device 125, the interference detector 605 may identify the time at which the first content element was sent, the time at which the request for content was received, and the time at which the acknowledgement response was received. Using the identified values as parameters, the interference detector 605 may apply a clustering algorithm (e.g., k-nearest neighbor algorithm, expectation maximization, etc.) to identify the subset of client devices 125. For each subset, the interference detector 605 may calculate the average of the time the first content element was sent, the time the request for content was received, and the time the acknowledgement response was received. The interference detector 605 may calculate a difference of the means on the subset of client devices 125 identified using the clustering algorithm. The interference detector 605 may compare the difference with a predetermined margin. If the interference detector 605 determines that the difference is greater than or equal to the predetermined margin, the interference detector 605 may determine that interference has occurred with the rendering of the first content element on the information resource. If the interference detector 605 determines that the difference is less than the predetermined margin, the interference detector 605 may determine that no interference occurs with the rendering of the first content element on the information.
In response to detecting the disturbance to the rendering of the first content element on the information resource, the content modifier 610 may generate a second content element for a subsequent information resource based on the first content element. The second content element may correspond to a second bitstream different from the first bitstream. When the presentation limiter 165 computes a hash value of the bit stream to generate an element identifier for each content element, a second bit stream that is different from the first bit stream may cause the presentation limiter 165 to re-run the rendering-based restriction policy (e.g., using an image processing algorithm) to analyze the second content element. Repeatedly applying rendering-based restriction policies to determine whether to apply content restriction policies to various content elements having different bitstreams may reduce the performance of the device running the presentation limiter 165. To this end, the content modifier 610 may modify the first content element to generate a second element having a second bit stream different from the first bit stream using any number of techniques and any combination of techniques according to the content modification policy.
The second content element generated by the content modifier 610 may visually appear to be different from the first content element but conveys the same information (e.g., the same text with a different background color or the same image with a different border width), which results in a change from the first bit stream to the second bit stream. In some implementations, the content modifier 610 can modify visual characteristics (e.g., font size, background color, boundary width, size, location on an information resource, etc.) of the first content element to generate the second content element. Modifications to the visual characteristics may result in a change from the first bit stream to the second bit stream. The content modifier 610 may identify visual characteristics of the first content element from the database 615. The content modifier 610 may set the visual characteristic of the first content element to a value different from the default value according to the content modification policy. The content modification policy may specify which values of the visual characteristics to set (e.g., change background color from light green to light blue) based on default values.
The second content element generated by the content modifier 610 may visually appear similar to the first content element, conveying the same information but with different functional behavior to cause a change from the first bit stream to the second bit stream. In some implementations, the content modifier 610 can modify the file pathname of the first content element to generate the second content element. The file pathname may correspond to a source address of the first content element. The file pathname may include a protocol (e.g., http, https, ftp, etc.), a hostname (e.g., www.example.com), and a file name (e.g.,/samplescontent. Html). Content modifier 610 may identify a protocol, a hostname, and a filename from among the filepath names. In some implementations, the content modifier 610 can modify one of the hostname and the filename to generate the second content element. The content modifier 610 may render or regenerate the first content element with the modified file pathname to create the second content element. In some implementations, the content modifier 610 can modify the redirect link of the first content element to generate the second content element. The redirect link may include a source address included in the first content element and may be configured to cause an application 160 running on the client device 125 to retrieve content corresponding to the source address. The content modifier 610 may identify a redirect link for the first content element. The content modifier 610 may render or regenerate the first content element with the modified redirect link to create the second content element.
The second content element generated by the content modifier 610 may correspond to a different code or tag than the first content element, which results in a change from the first bit stream to the second bit stream. The content modifier 610 may modify a code segment corresponding to the first content element or an information resource associated with the first content element to generate a second content element. The code segment may include one or more scripts associated with the first content element. The content modifier 610 may reproduce or regenerate the code segment with modifications to the first content element to create the second content element.
In some implementations, the content modifier 610 can identify an acknowledgement response code from the code segment of the first content element. The content modifier 610 may modify the acknowledgement response code from the code segment of the first content element to generate the second content element. The validation response code, once received by the client device 125 and processed by the application 160 running thereon, may cause the client device 125 to send a validation response (e.g., a pingback) to the data processing system 110 or the content provider device 115.
In some implementations, the content modifier 610 can identify content request codes from code segments of an information resource. The content modifier 610 may modify the content request code from the code segment of the information resource to generate the second content element. The content request code, once received by the client device 125 and processed by the application 160 running thereon, may cause the client device 125 to send a request for content to the data processing system 110 or the content provider device 115 to insert the content element into the information resource.
In some implementations, the content modifier 610 can add, insert, or append the ancillary code to the code segment for the first content element to generate the second content element. The ancillary code may be non-functional code that does not alter or alter the behavior of the second content element relative to the first content element. The ancillary code may cause a change from the first bit stream to the second bit stream.
To verify whether the bitstream has in fact been altered, the content modifier 610 may determine whether the second bitstream of the second content element is different from the first bitstream of the first content element. The content modifier 610 may identify a first bit stream corresponding to a first content element. The content modifier 610 may identify a second bitstream corresponding to a second content element. The content modifier 610 may identify or determine the number of bits that differ between the first bit stream and the second bit stream. Content modifier 610 may compare the different numbers of bits to a threshold number. If the content modifier 610 determines that the different number of bits is greater than or equal to the threshold number, the content modifier 610 may permit the second content element to be sent or provided to the client device 125. If the content modifier 610 determines that the number of different bits is less than the threshold number, the content modifier 610 may limit the transmission or provision of the second content element to the client device 125. The content modifier 610 may also re-run the modification to the first content element to generate another content element.
In some implementations, the content modifier 610 can identify a bit distribution that differs between the first bit stream and the second bit stream. Content modifier 610 may compare the different bit distributions to a predetermined threshold. If the content modifier 610 determines that the different bit distribution is greater than or equal to the predetermined threshold, the content modifier 610 may permit the second content element to be sent or provided to the client device 125. If the content modifier 610 determines that the different bit distribution is less than the predetermined threshold, the content modifier 610 may limit the use to provide or send the second content element to the client device 125. The content modifier 610 may also re-run the modification to the first content element to generate another content element.
In the event that the second content element is generated, the content modifier 610 may send a subsequent information resource including the second content element to the client device 125. In some implementations, the data processing system 110 can receive a request for information resources from the client device 125. In response to receiving the request, the data processing system 110 can send a subsequent information resource. In some implementations, the data processing system 110 can receive a request from the client device 125 for content for insertion into an information resource. In response to the request for content, the content modifier 610 may send a second content element included in the subsequent information to the client device 125. In the event that the second content element corresponds to a second bitstream that is different from the first bitstream, receipt of the second content element by the client device 125 may cause the rendering limiter 165 running on the client device 125 to apply the rendering-based limiting policy.
Referring now to fig. 7, fig. 7 is a block diagram depicting a flow 700 of a countermeasure by a system to modify content elements of an information resource for deploying a script for interfering with the integrity of the information resource in accordance with an illustrative embodiment. As depicted in flow 700 of fig. 7, information resource 205 may include a first content element 210A, a second content element 210B, and a third content element 210C. Each of the first content element 210A, the second content element 210B, and the third content element 210C may correspond to a binary sequence or a bitstream (depicted in hexadecimal form). The first content element 210A may correspond to a bitstream 705 (e.g., "xA 86D").
In the context of fig. 6, the presentation limiter 165 may have applied the content limiting policy to the first content element 210A, thereby interfering with the rendering of the content element 210A on the information resource 205 at the client device 125. Using the techniques described herein, the disturbance detector 605 may detect disturbances to the rendering of the first content element 210A. In the event that interference with the first content element 210A has been detected, the content modifier 610 may modify the first content element 210A to generate a different version of the content element 210A'. Modifications to the content element 210A may result in changes to the bitstream 705. The bit stream 705 corresponding to the content element 210A ("xA 86D") may be changed to another bit stream 705 '("xA 863") corresponding to the modified content element 210A'. The change to the bitstream 705 of the content element 210A may cause the rendering limiter 165 running on the client device 125 to re-run the rendering-based limiting policy (e.g., image processing algorithm). This in turn may result in reduced performance of the client device 125 and the presence limiter 165.
Referring now to FIG. 8, FIG. 8 is a flowchart depicting a method 800 of countermeasures for scripts interfering with the integrity of information resources in accordance with an illustrative embodiment. The functions described herein with respect to method 800 may be performed or otherwise operated by system 100 as shown in fig. 1, system 600 as shown in fig. 6, and computing device as shown in fig. 10, or any combination thereof. Briefly summarized, the data processing system may identify a first content element on an information resource previously sent to a client device (block 805). The first content element may have a first bit stream. The data processing system may determine an interference with rendering of a first content element on an information resource (block 810). In response to determining the disturbance to the rendering of the first content element on the information resource, the data processing system may generate a second content element for a subsequent information resource based on the first content element (block 815). The second content element may have a second bit stream different from the first bit stream. The data processing system may send a subsequent information resource including the second content element to the client device (block 820). The receiving of the second content element may cause a content restriction script running on the client device to apply the rendering-based restriction policy in response to a second bitstream different from the first bitstream.
In more detail, the data processing system may identify a first content element on an information resource previously sent to the client device (block 805). The first content element may have a first bit stream. To maintain the integrity of the information resource, the data processing system may identify a first content element on the information resource. The information resource and the first content element may have been previously transmitted or provided to a client device connected to the network. The information resource may correspond to a binary sequence. The first content may correspond to a first bit stream. A presentation limiter (or any other content control module) running on the client device, the proxy device, or the remote content limiter device may have interfered with the presentation or inclusion of the first content element on the information resource. In some implementations, the presentation limiter may have applied the content restriction policy to the first content element on the information resource, as detailed in section B herein.
In some implementations, the data processing system can identify a subset of content elements included in the information resource for further analysis. The data processing system identifies an element type for each content element included in the information resource. Element types may include one of text, paragraphs, partitions, segments, inline frames, images, canvas, applets, scripts, audio, video, tables, lists, and the like. The element type may correspond to an HTML tag (e.g., "< iframe >" for an inline frame). The element types to be further analyzed may include the element types most likely to be modified by the presentation limiter (e.g., inline frames, audio, video, images, etc.). The data processing system may identify a subset of content elements that match the element type. In this way, the data processing system may reduce the number of content elements to be processed to the number of content elements most likely to be modified by the presentation limiter, thereby freeing up computing resources for the data processing system.
In some implementations, the data processing system can identify a bit stream corresponding to a first content element included in the information resource. The information resource may correspond to a binary sequence (e.g., byte array or byte stream). Each content element included in the information resource may correspond to a portion of a binary sequence. In some implementations, the data processing system can access a binary sequence corresponding to the information resource. In some implementations, the data processing system can access a portion of the binary sequence corresponding to one of the content elements. In some implementations, the data processing system can access a portion of a binary sequence corresponding to a subset of content elements identified as matching the element type to be further analyzed. In some implementations, the data processing system can access a database for information resources and content elements, and corresponding binary sequences.
The data processing system may determine an interference with rendering of a first content element on an information resource (block 810). With content elements identified on the information resource, the data processing system can determine interference with rendering of the first content element on the information resource. The interference with the rendering of the first content element may include disabling, or otherwise modifying the display or presentation of the content element at the client device in any manner. The interference may be due to the running of the presence limiter on the client device, proxy device, or remote content limiter device 150. The data processing system may employ any number or combination of techniques to determine such interference that occurs by the presence limiter.
Using the time the content element was sent and the time any acknowledgement response was received, the data processing system may determine an interference with the rendering of the content element on the information resource. Each information resource may include a request script for requesting insertion of content into the information resource. In response to receiving the information resource, the request script may cause the client device to send a request for content to the data processing system. Each content element may include a validation response script. Upon receipt of the content element, the acknowledgement response script may cause the client device running the application 160 to send or transmit an acknowledgement response (e.g., a pingback) back to the data processing system or content provider device. The time at which the content element was sent and the time at which the request or any acknowledgement response to the content was received may be stored in a database.
Any irregularities in the time the content element is sent to the client device, the time the request for content associated with the content element is received from the client device, and the time any acknowledgement response is received from the client device may be indicative of the operation of the presentation limiter at the client device. Executing the functionality of the presence limiter on the client device may result in any acknowledgement response being received longer than if the presence limiter were not present. The data processing system may compare various times related to the transmission of the content element and the information resource and the receipt of any acknowledgement response associated with the content element in determining whether the rendering of the content element is disturbed. The comparison may be performed in real time or at specified time intervals.
In some implementations, the data processing system can determine occurrence of interference with rendering of the first content element on the information resource based on either not receiving a request for content or not receiving an acknowledgement response for the first content element from the client device. The absence of receipt of a request for content or receipt of an acknowledgement response to the first content element from the client device may indicate that the presence limiter altered the behavior of the first content element or the information resource thereon. To this end, for each content element, the data processing system may access a database to determine whether information resources are being transmitted or provided to the client device. The data processing system may determine whether a request for content associated with a first content element is received from a client device. If a request for content is received from a client device, the data processing system may analyze the time at which the request was received, as well as other factors, to determine interference with the first content element. If a request for content is not received from a client device, the data processing system may determine that an occurrence of interference on the client device with rendering of a first content element on an information resource. For each content element, the data processing system may also access a database to determine whether an acknowledgement response associated with the first content element is received from the client device. If an acknowledgement response is received from the client device, the data processing system may analyze the time of the acknowledgement response and other factors to determine the interference of the first content element. If an acknowledgement response is not received from the client device, the data processing system may determine that an interference on rendering of the first content element on the information resource on the client device occurred.
In some implementations, the data processing system can compare the time elapsed between the time the first content element was sent to the client device and the time the acknowledgement response to the first content element was received from the client device to determine the occurrence of the interference. The data processing system accesses the database for the time of transmission and the time of receipt of the acknowledgement response. The data processing system may identify a time to send the first content element to the client device. The time at which the first content element is transmitted may correspond to the time at which the data processing system or the content provider device transmits or otherwise provides the first content element to the client device. The data processing system may identify a time at which the acknowledgement response was received. The time at which the acknowledgement response is received may correspond to the time at which the client device processing the first content element sends the acknowledgement response back to the data processing system or the content provider device. The data processing system may calculate the time elapsed between the time the first content element was sent and the time the acknowledgement response was received. The data processing system may compare the calculated elapsed time to a predetermined threshold (e.g., a microsecond to millisecond range). If the data processing system determines that the calculated elapsed time is greater than or equal to the predetermined threshold, the data processing system may determine that an disturbance has occurred to the rendering of the first content element on the information resource. If the data processing system determines that the calculated elapsed time is less than the predetermined threshold, the data processing system may determine that no disturbance to the rendering of the first content element on the information resource has occurred.
In some implementations, the data processing system can compare an average time elapsed between a time of transmitting the first content element to the plurality of client devices and a time of receiving the acknowledgement response from the client devices to determine the occurrence of the interference. The data processing system accesses the database for the time of transmission and the time of receipt of the acknowledgement response for each client device. The data processing system may calculate an average time elapsed between a time the first content element was sent on the plurality of clients and a time the acknowledgement response was received. The data processing system may compare the elapsed average time to a predetermined threshold (e.g., a microsecond to millisecond range). If the data processing system determines that the elapsed average time is greater than or equal to the predetermined threshold, the data processing system may determine that interference occurs on the plurality of client devices with rendering of the first content element on the information resource. If the data processing system determines that the elapsed average time is less than the predetermined threshold, the data processing system may determine that no interference occurs on the plurality of client devices with rendering of the first content element on the information resource.
In some implementations, the data processing system can compare a first time elapsed between the first transmission and the second transmission of the first content element with a second time elapsed between the first receipt and the second receipt of the acknowledgement response to the first content element. The difference between the elapsed first time and the elapsed second time may indicate that the presentation limiter may interfere with rendering or inserting the first content element onto the information resource. Upon first receipt of the first content element, the presentation limiter may have used a rendering-based restriction policy (e.g., image processing techniques) to analyze the first content element to determine whether to apply the content restriction policy to the content element. The presence limiter may then have used a hash function to identify whether the first content element corresponds to an element identifier on the restricted content database. The performance of the image processing algorithm may take a greater amount of time than computing the hash value.
To identify any differences in the interval between the time the first content element was sent and the time the acknowledgement response was received, the data processing system may identify a first time at which the first content element was sent to the client device. The data processing system may identify a first time at which a first acknowledgement response to the first content element is received from the client device. The data processing system may calculate a first time that elapses between a first time of sending the first content element to the client device and a first time of receiving a first acknowledgement response to the first content element. The data processing system may identify a second time to send the first content element to the client device. The data processing system may identify a second time at which a second acknowledgement response to the first content element is received from the client device. The data processing system may calculate a second time that elapses between a second time of sending the first content element to the client device and a second time of receiving a second acknowledgement response to the first content element from the client device. In some implementations, the elapsed first time and the elapsed second time may be calculated using times of sending the first content element and receiving the acknowledgement response on the plurality of client devices. The data processing system may calculate a difference between the elapsed first time and the elapsed second time. The data processing system may compare the difference to a predetermined threshold. If the data processing system determines that the difference is greater than or equal to the predetermined threshold, the data processing system may determine that an disturbance to the rendering of the first content element on the information resource occurred. If the data processing system determines that the difference is less than the predetermined threshold, the data processing system may determine that no disturbance to the rendering of the first content element on the information occurred.
In some implementations, the data processing system can compare an expected time of receipt of the request for the first content element with an actual time of receipt of the request for the first content element to determine an interference with rendering of the first content element. The presence limiter running on the client device may have altered the behavior of the content element or the information resource thereon. Thus, the client device may be caused to send the request for the first content element after receiving the information resource at a later time than if the presence limiter were not present. In view of the change in behavior, the data processing system can access the database to identify an actual time at which a request for content for inserting the first content element onto the information resource was received from the client device. The data processing system may also identify an actual time elapsed between sending the information resource to the client device and receiving the request for content from the client device. The data processing system may determine or calculate the expected time of receipt of a request for content associated with a content element from a client device using any number of factors. These factors may include network bandwidth of the network, network latency of the network, device type of the client device, device configuration parameters of the client device, and so forth. The data processing system may also determine or calculate an expected time elapsed between sending the information resource to the client device and receiving the request for content from the client device. The data processing system may compare the expected time when the request for content was received with the actual time. In some implementations, the data processing system can calculate a difference between an expected time at which the request for content was received and an actual time. If the data processing system determines that the difference is greater than or equal to the predetermined threshold, the data processing system may determine that an disturbance to the rendering of the first content element on the information resource occurred. If the data processing system determines that the difference is less than the predetermined threshold, the data processing system may determine that no disturbance to the rendering of the first content element on the information occurred.
In some implementations, the data processing system can compare an expected time of receipt of the acknowledgement response to the first content element with an actual time of receipt of the acknowledgement response to the first content element to determine an interference with rendering of the first content element. The presence limiter running on the client device may have altered the behavior of the content element or the information resource thereon. Thus, the client device may be caused to send an acknowledgement response to the first content element after receiving the content element at a later time than if the presence limiter were not present. In view of the change in behavior, the data processing system may access the database to identify an actual time at which an acknowledgement response to the first content element was received from the client device. The data processing system may also identify an actual time elapsed between sending the information resource to the client device and receiving the acknowledgement response from the client device. The data processing system may use any number of factors to determine or calculate the expected time for receipt of the acknowledgement response from the client device. These factors may include network bandwidth of the network, network latency of the network, device type of the client device, device configuration parameters of the client device, and so forth. The data processing system may also determine or calculate an expected time elapsed between sending the information resource to the client device and receiving the acknowledgement response from the client device. The data processing system may compare the expected time and the actual time at which the acknowledgement response to the first content element was received. In some implementations, the data processing system can calculate a difference between an expected time at which the acknowledgement response to the first content element is received and an actual time. If the data processing system determines that the difference is greater than or equal to the predetermined threshold, the data processing system may determine that an disturbance to the rendering of the first content element on the information resource occurred. If the data processing system determines that the difference is less than the predetermined threshold, the data processing system may determine that no disturbance to the rendering of the first content element on the information occurred.
In some implementations, the data processing system can identify a difference in behavior with respect to a first content element from a subset of the client devices to determine interference with the first content element on the information resource. The first subset of client devices may run or may otherwise be affected by the presence limiter in processing the information resource and the content elements thereon. On the other hand, the second subset of client devices may not have a presence limiter running on them. As such, the first subset of client devices may consume a different amount of time in processing and analyzing the content elements than the second subset of client devices. In view of the differences in behavior, for each client device, the data processing system may identify a time at which the first content element was sent, a time at which a request for content was received, and a time at which an acknowledgement response was received. Using the identified values as parameters, the data processing system may apply a clustering algorithm (e.g., k-nearest neighbor algorithm, expectation maximization, etc.) to identify a subset of the client devices. For each subset, the data processing system may calculate an average of the time at which the first content element was sent, the time at which the request for content was received, and the time at which the acknowledgement response was received. The data processing system may calculate a difference of the average values over the subset of client devices identified using the clustering algorithm. The data processing system may compare the difference to a predetermined margin. If the data processing system determines that the difference is greater than or equal to the predetermined margin, the data processing system may determine that an interference has occurred with the rendering of the first content element on the information resource. If the data processing system determines that the difference is less than the predetermined margin, the data processing system may determine that no disturbance to the rendering of the first content element on the information occurred.
In response to determining the disturbance to the rendering of the first content element on the information resource, the data processing system may generate a second content element for a subsequent information resource based on the first content element (block 815). The second content element may have a second bit stream different from the first bit stream. In response to detecting the disturbance to the rendering of the first content element on the information resource, the data processing system may generate a second content element for a subsequent information resource based on the first content element. The second content element may correspond to a second bitstream different from the first bitstream. When the presentation limiter computes a hash value of the bit stream to generate an element identifier for each content element, a second bit stream different from the first bit stream may cause the presentation limiter to re-run the rendering-based restriction policy (e.g., using an image processing algorithm) to analyze the second content element. Repeatedly applying rendering-based restriction policies to determine whether to apply content restriction policies to various content elements having different bitstreams may reduce the performance of a device running a presentation limiter. To this end, the data processing system may modify the first content element to generate a second element having a second bit stream different from the first bit stream using any number of techniques and any combination of techniques according to the content modification policy.
The second content element generated by the data processing system may visually appear to be different from the first content element but conveys the same information (e.g., the same text with a different background color or the same image with a different border width), which results in a change from the first bit stream to the second bit stream. In some implementations, the data processing system can modify visual characteristics (e.g., font size, background color, boundary width, size, location on the information resource, etc.) of the first content element to generate the second content element. Modifications to the visual characteristics may result in a change from the first bit stream to the second bit stream. The data processing system may identify visual characteristics of the first content element from the database. The data processing system may set the visual characteristic of the first content element to a value different from the default value according to the content modification policy. The content modification policy may specify which values of the visual characteristics to set (e.g., change background color from light green to light blue) based on default values.
The second content element generated by the data processing system may visually appear similar to the first content element, conveying the same information but with different functional behavior to cause a change from the first bit stream to the second bit stream. In some implementations, the data processing system can modify the file pathname of the first content element to generate the second content element. The file pathname may correspond to a source address of the first content element. The file pathname may include a protocol (e.g., http, https, ftp, etc.), a hostname (e.g., www.example.com), and a file name (e.g.,/samplescontent. Html). The data processing system may identify a protocol, a host name, and a file name from the file path name. In some implementations, the data processing system can modify one of the hostname and the filename to generate the second content element. The data processing system may render or regenerate the first content element with the modified file pathname to create the second content element. In some implementations, the data processing system can modify the redirect link of the first content element to generate the second content element. The redirect link may include a source address included in the first content element and may be configured to cause an application 160 running on the client device to retrieve content corresponding to the source address. The data processing system may identify a redirect link for the first content element. The data processing system may render or regenerate the first content element with the modified redirect link to create the second content element.
The second content element generated by the data processing system may correspond to a different code or tag than the code or tag of the first content element, which results in a change from the first bit stream to the second bit stream. The data processing system may modify a code segment corresponding to the first content element or an information resource associated with the first content element to generate a second content element. The code segment may include one or more scripts associated with the first content element. The data processing system may reproduce or regenerate the code segment with modifications to the first content element to create the second content element.
In some implementations, the data processing system can identify an acknowledgement response code from the code segment of the first content element. The data processing system may modify the acknowledgement response code from the code segment of the first content element to generate the second content element. The acknowledgement response code, once received by the client device and processed by the application 160 running thereon, may cause the client device to send an acknowledgement response (e.g., a pingback) to the data processing system or content provider device.
In some implementations, the data processing system can identify content request codes from code segments of the information resource. The data processing system may modify the content request code from the code segment of the information resource to generate the second content element. The content request code, once received by the client device and processed by the application 160 running thereon, may cause the client device to send a request for content to a data processing system or content provider device to insert content elements into the information resource.
In some implementations, the data processing system can add, insert, or append ancillary code to the code segment for the first content element to generate the second content element. The ancillary code may be non-functional code that does not alter or alter the behavior of the second content element relative to the first content element. The ancillary code may cause a change from the first bit stream to the second bit stream.
To verify whether in fact the bit stream has been altered, the data processing system may determine whether the second bit stream of the second content element is different from the first bit stream of the first content element. The data processing system may identify a first bit stream corresponding to a first content element. The data processing system may identify a second bit stream corresponding to a second content element. The data processing system may identify or determine a number of bits that differ between the first bit stream and the second bit stream. The data processing system may compare the different numbers of bits to a threshold number. If the data processing system determines that the different number of bits is greater than or equal to the threshold number, the data processing system may grant permission to send or provide the second content element to the client device. The data processing system may limit the sending or providing of the second content element to the client device if the data processing system determines that the number of different bits is less than the threshold number. The data processing system may also re-run the modification to the first content element to generate another content element.
In some implementations, the data processing system may identify a bit distribution that differs between the first bit stream and the second bit stream. The data processing system may compare the different bit distributions to a predetermined threshold. The data processing system may permit the second content element to be sent or provided to the client device if the data processing system determines that the different bit distribution is greater than or equal to the predetermined threshold. The data processing system may be restricted from providing or transmitting the second content element to the client device if the data processing system determines that the different bit distribution is less than the predetermined threshold. The data processing system may also re-run the modification to the first content element to generate another content element.
The data processing system may send a subsequent information resource including the second content element to the client device (block 820). The receiving of the second content element may cause a content restriction script running on the client device to apply the rendering-based restriction policy in response to a second bitstream different from the first bitstream. In the event that the second content element is generated, the data processing system may send a subsequent information resource including the second content element to the client device. In some implementations, a data processing system can receive a request for an information resource from a client device. In response to receiving the request, the data processing system may send a subsequent information resource. In some implementations, a data processing system can receive a request from a client device for content for insertion into an information resource. In response to the request for content, the data processing system may send a second content element included in the subsequent information to the client device. In the event that the second content element corresponds to a second bitstream that is different from the first bitstream, receipt of the second content element by the client device may cause a rendering-based restriction policy to be applied by a presentation limiter running on the client device.
Referring now to fig. 9, fig. 9 is a flowchart depicting a method 900 of countermeasures for scripts interfering with the integrity of information resources in accordance with an illustrative embodiment. The functions described herein with respect to method 900 may be performed or otherwise operated by system 100 as shown in fig. 1, system 600 as shown in fig. 6, or a computing device as shown in fig. 10, or any combination thereof. Briefly summarized, the data processing system may identify content elements on an information resource (block 905). The data processing system may determine whether a request for content is received (block 910). If a request for content is received, the data processing system may determine whether an acknowledgement response to the content element is received (block 915). If an acknowledgement response is received, the data processing system may identify a time to send the content element to the client device (block 920). The data processing system may identify a time of a first acknowledgement response to the content element from the client device (block 925). The data processing system may determine whether a difference between the time of the first acknowledgement response and the time of transmission is greater than a threshold (block 930). If the difference between the time of the first acknowledgement response and the time of transmission is less than a threshold, the data processing system may identify a time of a second acknowledgement response to the content element from the client device (block 935). The data processing system may determine whether the time elapsed between the first acknowledgement response time and the transmission time is greater than the time elapsed between the second response time and the transmission time by a predetermined margin (block 940). If the time elapsed between the first acknowledgement response time and the transmission time is not greater than the time elapsed between the second response time and the transmission time by a predetermined margin, the data processing system may determine that there is no interference (block 945).
Otherwise, if a request for content is not received, an acknowledgement response to the content element is not received, the difference between the first acknowledgement response time and the transmission time is greater than a threshold, or if the time elapsed between the first acknowledgement response time and the transmission time is greater than the time elapsed between the second response time and the transmission time by a predetermined margin, the data processing system may determine that interference with the content element occurs (block 945). The data processing system may detect the occurrence of interference (block 950). The data processing system may identify attributes of the content element (block 955). The data processing system may generate a new content element based on the identified attributes of the initial content element (block 960). The data processing system may send the new content element in response to another request for content (block 965).
D.Computing system architecture
FIG. 10 illustrates a general architecture of an exemplary computer system 1000 (including a data processing system 110 and its components, such as a content request module 130, a resource assembler module 135, an interference detector 605, a content modifier 610, an application 160 and its modules, or a presentation limiter 165 and its components, a resource parser 215, an element hash 220, a content limiter 225, and a rendering limiter 230) that may be employed to implement any of the computer systems discussed herein, according to some embodiments. Computer system 1000 may be used to provide information for display via network 105. The computer system 1000 of fig. 10 includes one or more processors 1020 communicatively coupled to a memory 1025, one or more communication interfaces 1005, and one or more output devices 1010 (e.g., one or more display units) and one or more input devices 1015. Processor 1020 may be included in data processing system 110 or other components of system 110 such as content request module 130, resource assembler module 135, interference detector 605, and content modifier 610. The processor may be included in client device 125, proxy device 145, remote content limiter device 155, or modules thereof, such as application 160 and presentation limiter 165 and components thereof, resource resolver 215, element hash 220, content limiter 225, and rendering limiter 230.
In computer system 1000 of fig. 10, memory 1025 may comprise any computer-readable storage medium and may store computer instructions, such as processor-executable instructions for performing the various functions described herein for the various systems, as well as any data associated therewith, generated thereby, or received via communication interface(s) or input device(s), if any. Referring again to system 110 of FIG. 1, data processing system 110 may include a memory 1025 for storing information regarding availability of an inventory of one or more content units, reservations of one or more content units, and the like. Memory 1025 may include database 140. The processor(s) 1020 shown in fig. 10 may be used to execute instructions stored in the memory 1025 and in doing so may also read from or write to the memory various information that is processed and/or generated in accordance with the execution of the instructions.
The processor 1020 of the computer system 1000 shown in fig. 10 may also be communicatively coupled to the communication interface(s) 1005 or used to control the communication interface(s) 1005 to send or receive various information depending on the execution of the instructions. For example, communication interface(s) 1005 may be coupled to a wired or wireless network, bus, or other communication means, and thus may allow computer system 1000 to send information to or receive information from other devices (e.g., other computer systems). Although not explicitly shown in the system of fig. 1 or 6, one or more communication interfaces facilitate the flow of information between components of system 1000. In some implementations, the communication interface(s) may be configured to provide a website (e.g., via various hardware components or software components) that serves as an access portal for at least some aspects of the computer system 1000. Examples of communication interface 1005 include a user interface (e.g., a web page) through which a user can communicate with data processing system 1000.
The output device 1010 of the computer system 1000 shown in fig. 10 may be provided, for example, to allow various information to be viewed or otherwise perceived in connection with the execution of instructions. Input device(s) 515 may be provided, for example, to allow a user to manually adjust, select, enter data, or interact with the processor in any of a variety of ways during execution of instructions. Additional information regarding the general computer system architecture that may be used with the various systems discussed herein is further provided herein.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software embodied on tangible media, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs (i.e., one or more modules of computer program instructions) encoded on a computer storage medium for execution by, or to control the operation of, data processing apparatus. The program instructions may be encoded on a manually-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium may be or be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, although the computer storage medium is not a propagated signal, the computer storage medium may contain a source or destination of computer program instructions encoded in an artificially generated propagated signal. Computer storage media may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
Features disclosed herein may be implemented on a smart television module (or a networked television module, a hybrid television module, etc.), which may include a processing module configured to integrate an internet connection with more traditional television program sources (e.g., received via cable, satellite, over-the-air, or other signals). The smart television module may be physically incorporated into a television or may include a separate device such as a set-top box, blue-ray or other digital media player, a gaming machine, a hotel television system, or other companion device. The smart television module may be configured to allow viewers to search for and find video, movies, photos, and other content on the web, on a local cable TV channel, on a satellite TV channel, or stored on a local hard disk drive. A set-top box (STB) or set-top unit (STU) may include an information tool device that may contain a tuner and be connected to a television set and an external signal source, tuning the signal to content that is then displayed on a television screen or other display device. The smart television module may be configured to provide a home screen or top screen that includes icons for a number of different applications, such as a web browser and a number of streaming media services, connecting cable or satellite media sources, other network "channels," etc. The intelligent television module may also be configured to provide an electronic program guide to the user. The companion application of the smart television module may operate on the mobile computing device to provide additional information to the user regarding available programs, allow the user to control the smart television module, and the like. In alternative implementations, the features may be implemented on a laptop or other personal computer, smart phone, other mobile phone, handheld computer, tablet PC, or other computing device.
The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored on one or more computer readable storage devices or received from other sources.
The terms "data processing apparatus," "data processing system," "user device," or "computing device" encompass all kinds of apparatus, devices, and machines for processing data, including, for example, a programmable processor, a computer, a system-on-a-chip, or a plurality of the foregoing programmable processors, computers, system-on-a-chip, or a combination thereof. The apparatus may comprise a dedicated logic circuit, for example an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). In addition to hardware, the apparatus may include code that creates a runtime environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and the operating environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. The content request module 130, the resource assembler module 135, the interference detector 605, and the content modifier 610 may include or share one or more data processing apparatuses, computing devices, or processors. The application 160, presentation limiter 165 and its modules, resource resolver 215, element hash 220, content limiter 225, and rendering limiter 230 may include or share one or more data processing apparatuses, computing devices, or processors.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Typically, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices (e.g., magnetic, magneto-optical disks, or optical disks). However, a computer does not require such a device. Also, for example, the computer may be embedded in another device, such as a mobile phone, a personal digital assistant (personal digital assistant, PDA), a mobile audio or video player, a gaming machine, a global positioning system (Global Positioning System, GPS) receiver, or a portable storage device (e.g., universal serial bus (universal serial bus, USB) flash drive). An apparatus adapted to store computer program instructions and data comprising: all forms of non-volatile memory, media, and memory devices including, for example, semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices); magnetic disks (e.g., internal hard disks or removable disks); magneto-optical disk; CD-ROM and DVD-ROM discs. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), plasma or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user. For example, feedback provided to the user may include any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback, and may receive input from the user in any form (including acoustic, speech, or tactile input). In addition, the computer may interact with the user by transmitting and receiving documents to and from the device used by the user, for example, by sending web pages to a web browser on the user's client device in response to requests received from the web browser.
Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an embodiment of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), internetworks (e.g., the internet), and peer-to-peer networks (e.g., ad hoc) peer-to-peer networks.
A computing system, such as system 1000 or system 110, may include clients and servers. For example, data processing system 110 may include one or more data centers or one or more servers in a server farm. The client and server are typically remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server sends data (e.g., HTML pages) to the client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., results of user interactions) may be received from the client device at the server.
While this specification contains many specifics of embodiments, these should not be construed as limitations on any invention or on the scope of what may be claimed, but rather as descriptions of features specific to particular embodiments of systems and methods described herein. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, although operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying drawings do not necessarily require the particular order shown, or sequential order, to achieve desirable results.
In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products. The content request module 130, the resource assembler module 135, the interference detector 605, and the content modifier 610 may be part of the data processing system 110, a single module, a logic device having one or more processing modules, one or more servers, or part of a search engine. In addition, the application 160, and the rendering limiter 230 of the resource resolver 215, the element hash 220, the content limiter 225, and the presentation limiter 165 may include or may be part of the client device 125, the proxy device 145, and the remote content limiter device 150, a single module, or a logic device having one or more processing modules. The rendering limiter 230 of the resource resolver 215, the element hash 220, the content limiter 225, and the presentation limiter 165 may include or share one or more data processing apparatuses, computing devices, or processors, and be part of the client device 125, the proxy device 145, and the remote content limiter device 150, a single module, or a logical device having one or more processing modules.
Having now described a few illustrative embodiments and implementations, it is apparent that the foregoing has been presented by way of example and not limitation. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, those acts and those elements may be combined in other ways to achieve the same objectives. Acts, elements and features discussed only in connection with one embodiment are not intended to be excluded from other embodiments or similar roles in the embodiments.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "characterized by," "herein," and variations thereof is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and alternative embodiments that comprise the items listed thereafter. In one embodiment, the systems and methods described herein include one, each combination of more than one, or all of the described elements, acts, or components.
Any reference to an embodiment or element or act of a system and method herein in the singular can also encompass embodiments comprising a plurality of such elements, and any reference to any embodiment or element or act herein in the plural can also encompass embodiments comprising only a single element. Singular or plural references are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to single or multiple configurations. References to any action or element based on any information, action or element may include implementations in which the action or element is based at least in part on any information, action or element.
Any embodiment disclosed herein may be combined with any other embodiment, and references to "an embodiment," "some embodiments," "alternative embodiments," "various embodiments," "one embodiment," etc., are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment. These terms are not necessarily all referring to the same embodiment. Any embodiment may be combined with any other embodiment, either inclusive or exclusive, in any manner consistent with aspects and embodiments disclosed herein.
Reference to "or" may be construed as inclusive such that any term described using "or" may indicate any one of a singular, more than one, and all of the described terms.
Where technical features in the drawings, detailed description, or any claim are followed by reference signs, the reference signs have been included for the sole purpose of increasing the intelligibility of the drawings, detailed description, and claims. Thus, no reference signs or deletions should be construed as limiting the scope of any of the claims.
The systems and methods described herein may be embodied in other specific forms without departing from the features of the systems and methods described herein. While the examples provided herein relate to restricting content inserted into information resources and deploying countermeasures thereto, the systems and methods described herein may include application to other environments. The foregoing embodiments are illustrative and not limiting of the described systems and methods. The scope of the systems and methods described herein are, therefore, indicated by the appended claims rather than by the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.
Claims (34)
1. A method of restricting content inserted into an information resource, comprising:
identifying, by a computing device having one or more processors, content elements included in an information resource, applying content restriction policies to the content elements for modifying presentation of the content elements;
identifying, by the computing device, a bit stream corresponding to a content element included in the information resource;
hashing, by the computing device, the identified bit stream to generate an element identifier corresponding to the content element;
Accessing, by the computing device, a restricted content database using the element identifier; and
responsive to finding the element identifier in the restricted content database, modifying, by the computing device, presentation of the content element on the information resource according to the content restriction policy.
2. The method of claim 1, wherein accessing the restricted content database further comprises:
accessing, by the computing device, a local restricted content database stored on the computing device using the element identifier; and
responsive to not finding the element identifier in the local restricted content database, sending, by the computing device to a remote device, a request to find the element identifier on a remote restricted content database associated with the remote device, receipt of the request triggering the remote device to access the remote restricted content database using the element identifier; and
a response is received by the computing device from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
3. The method of claim 1 or 2, wherein accessing the restricted content database further comprises:
Accessing, by the computing device, a local restricted content database stored on the computing device using the element identifier;
responsive to not finding the element identifier in the local restricted content database, determining, by the computing device, to modify the content element based on rendering attributes of the content element and the information resource according to a content rendering restriction extension; and
the element identifier is inserted into the local restricted content database by the computing device in response to determining to apply the content restriction policy to the content element according to a content rendering restriction extension.
4. The method of any preceding claim, wherein accessing the restricted content database further comprises:
accessing, by the computing device, a local restricted content database stored on the computing device using the element identifier;
responsive to not finding the element identifier in the local restricted content database, sending, by the computing device to a remote device, a request to find the element identifier on a remote restricted content database associated with the remote device, receipt of the request triggering the remote device to:
Accessing the remote restricted content database using the element identifier,
responsive to not finding the element identifier in the remote restricted content database, determining to modify the content element based on rendering attributes of the content element and the information resource according to a content rendering restriction extension, and
responsive to determining to apply the content restriction policy to the content element according to a content rendering restriction extension, inserting the element identifier into the remote restricted content database; and receiving, by the computing device, a response from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
5. The method of any preceding claim, further comprising:
accessing, by the computing device, a local restricted content database stored on the computing device using the element identifier;
responsive to not finding the element identifier in the local restricted content database, sending, by the computing device to a remote device, a request for a remote restricted content database associated with the remote device, receipt of the request triggering the remote device to:
Determining to modify the content element based on rendering properties of the content element and the information resource according to a content rendering restriction extension, and
a response is received by the computing device from the remote device indicating that the content element is to be modified.
6. The method of claim 5, the receipt of the request further triggering the remote device to:
generating an element identifier corresponding to the content element; and is also provided with
The element identifier is inserted into the remote restricted content database in response to determining to apply the content restriction policy to the content element according to a content rendering restriction extension.
7. The method of any preceding claim, further comprising:
in response to not finding the element identifier on the restricted content database, setting, by the computing device, an attribute of the content element to a default value during a first inclusion of the content element on the information resource;
after the first inclusion of the content element, determining, by the computing device, to modify the content element based on rendering properties of the content element and the information resource according to a content rendering limit extension; and
Responsive to determining to apply the content restriction policy to the content element according to a content rendering restriction extension, inserting, by the computing device, the element identifier into the restricted content database; and is also provided with
Wherein disabling the content element further comprises: the content element is deleted from at least one of the information resource or a second information resource during a second inclusion of the content element after the first inclusion, as specified by the content restriction policy.
8. The method of any preceding claim, wherein disabling the content element further comprises:
licensing, by the computing device, sending the pingback of the content element to a remote server; and
after sending the pingback of the content element to the remote server, the content element is deleted from the information resource by the computing device.
9. The method of any preceding claim, wherein modifying the presentation of the content element further comprises: a second content element is inserted over the content element located on the information resource as specified by the content restriction policy.
10. The method of any preceding claim, wherein modifying the presentation of the content element further comprises: the content element is removed from the information resource as specified by the content restriction policy.
11. The method of any preceding claim, wherein modifying the presentation of the content element further comprises: the visibility attribute of the content element is set to null as specified by the content restriction policy.
12. The method of any preceding claim, wherein identifying the bitstream further comprises: the method further includes identifying, by the computing device, the bitstream from a portion of a binary sequence representing the content element, the bitstream corresponding to the portion of the content element.
13. A computer system, comprising:
a memory storing processor readable instructions;
one or more processors arranged to read and execute processor readable instructions stored in the memory;
wherein the processor readable instructions comprise instructions arranged to control the computer system to perform the method according to any preceding claim.
14. A computer readable medium carrying a computer program, comprising computer readable instructions configured to cause a computer to perform the method according to any one of claims 1 to 12.
15. A method of restricting content inserted into an information resource, comprising:
Identifying, by a computing device having one or more processors, a content element included in an information resource, applying a content restriction policy to the content element for modifying presentation of the content element;
identifying, by the computing device, a bit stream corresponding to a content element included in the information resource;
hashing, by the computing device, the identified bit stream to generate an element identifier corresponding to the content element;
accessing, by the computing device, a restricted content database using the element identifier; and
responsive to finding the element identifier in the restricted content database, modifying, by the computing device, presentation of the content element on the information resource according to the content restriction policy.
16. The method of claim 15, wherein accessing the restricted content database further comprises:
accessing, by the computing device, a local restricted content database stored on the computing device using the element identifier; and
responsive to not finding the element identifier in the local restricted content database, sending, by the computing device to a remote device, a request to find an element identifier on a remote restricted content database associated with the remote device, receipt of the request triggering the remote device to access the remote restricted content database using the element identifier; and
A response is received by the computing device from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
17. The method of claim 15, wherein accessing the restricted content database further comprises:
accessing, by the computing device, a local restricted content database stored on the computing device using the element identifier, the local restricted content database including a first list of element identifiers to be licensed and a second list of element identifiers to be restricted;
responsive to not finding the element identifier in the local restricted content database, determining, by the computing device, to modify the content element based on rendering attributes of the content element and the information resource according to a content rendering restriction extension;
responsive to determining to apply the content restriction policy to the content element according to a content rendering restriction extension, inserting, by the computing device, the element identifier into a second list included in the local restricted content database; and
responsive to determining to modify the content element according to the content rendering restriction extension, the element identifier is sent by the computing device to a remote restricted content database for storage.
18. The method of claim 15, wherein accessing the restricted content database further comprises:
accessing, by the computing device, a local restricted content database stored on the computing device using the element identifier;
responsive to not finding the element identifier in the local restricted content database, sending, by the computing device to a remote device, a request to find the element identifier on a remote restricted content database associated with the remote device, receipt of the request triggering the remote device to:
accessing the remote restricted content database using the element identifier,
responsive to not finding the element identifier in the remote restricted content database, determining to modify the content element based on rendering attributes of the content element and the information resource according to a content rendering restriction extension, and
responsive to determining to apply the content restriction policy to the content element according to a content rendering restriction extension, inserting the element identifier into the remote restricted content database; and receiving, by the computing device, a response from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
19. The method of claim 15, further comprising:
in response to not finding the element identifier on the restricted content database, setting, by the computing device, an attribute of the content element to a default value during a first inclusion of the content element on the information resource;
after the first inclusion of the content element, determining, by the computing device, to modify the content element based on rendering properties of the content element and the information resource according to a content rendering limit extension; and
responsive to determining to apply the content restriction policy to the content element according to a content rendering restriction extension, inserting, by the computing device, the element identifier into the restricted content database; and is also provided with
Wherein disabling the content element further comprises: the content element is deleted from at least one of the information resource or a second information resource during a second inclusion of the content element after the first inclusion, as specified by the content restriction policy.
20. The method of claim 15, wherein disabling the content element further comprises:
licensing, by the computing device, sending the pingback of the content element to a remote server; and
After sending the pingback of the content element to the remote server, the content element is deleted from the information resource by the computing device.
21. The method of claim 15, wherein modifying the presentation of the content element further comprises: a second content element is inserted over the content element located on the information resource as specified by the content restriction policy.
22. The method of claim 15, wherein modifying the presentation of the content element further comprises: the content element is removed from the information resource as specified by the content restriction policy.
23. The method of claim 15, wherein modifying the presentation of the content element further comprises: the visibility attribute of the content element is set to null as specified by the content restriction policy.
24. The method of claim 15, wherein identifying the bitstream further comprises: the method further includes identifying, by the computing device, the bitstream from a portion of a binary sequence representing the content element, the bitstream corresponding to the portion of the content element.
25. A system for restricting content inserted into an information resource, comprising:
A resource resolver running on one or more processors configured to:
identifying content elements included in an information resource, applying a content restriction policy to the content elements for modifying presentation of the content elements; and is also provided with
Identifying a bit stream corresponding to a content element included in the information resource;
an element hash, running on the one or more processors, configured to hash the identified bit stream to generate an element identifier corresponding to the content element; and
a content limiter executing on the one or more processors configured to:
accessing a restricted content database using the element identifier; and is also provided with
In response to finding the element identifier in the restricted content database, modifying presentation of the content element on the information resource according to the content restriction policy.
26. The system of claim 25, wherein the content limiter is further configured to:
accessing a local restricted content database stored on the computing device using the element identifier;
responsive to not finding the element identifier in the local restricted content database, sending a request to a remote device to find an element identifier on a remote restricted content database associated with the remote device, receipt of the request triggering the remote device to access the remote restricted content database using the element identifier; and is also provided with
A response is received from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
27. The system of claim 25, wherein the content limiter is further configured to:
accessing a local restricted content database stored on the computing device using the element identifier;
responsive to not finding the element identifier in the local restricted content database, determining to modify the content element based on rendering attributes of the content element and the information resource according to a content rendering restriction extension;
responsive to determining to modify the content element according to a content rendering restriction extension, inserting the element identifier into the local restricted content database; and is also provided with
In response to determining to modify the content element according to the content rendering limit extension, the element identifier is sent to a remote limited content database for storage.
28. The system of claim 25, wherein the content limiter is further configured to:
accessing a local restricted content database stored on the computing device using the element identifier;
in response to not finding the element identifier in the local restricted content database, sending a request to a remote device to find the element identifier on a remote restricted content database associated with the remote device, receipt of the request triggering the remote device to:
Accessing the remote restricted content database using the element identifier,
responsive to not finding the element identifier in the remote restricted content database, determining to modify the content element based on rendering attributes of the content element and the information resource according to a content rendering restriction extension, and
responsive to determining to apply a content restriction policy to the content element according to a content rendering restriction extension, inserting the element identifier into the remote restricted content database; and receiving a response from the remote device indicating that the element identifier is on a remote restricted content database associated with the remote device.
29. The system of claim 25, wherein the content limiter is further configured to:
in response to not finding the element identifier on the restricted content database, setting an attribute of the content element to a default value during a first inclusion of the content element on the information resource;
after the first inclusion of the content element, determining to modify the content element based on rendering properties of the content element and the information resource according to a content rendering limit extension; and is also provided with
The content element is deleted from at least one of the information resource or a second information resource during a second inclusion of the content element after the first inclusion, as specified by the content restriction policy.
30. The system of claim 25, wherein the content limiter is further configured to:
allowing an acknowledgement response to the content element to be sent to a remote server; and is also provided with
After sending an acknowledgement response to the content element to the remote server, the content element is deleted from the information resource.
31. The system of claim 25, wherein the content limiter is further configured to: a second content element is inserted over the content element located on the information resource as specified by the content restriction policy.
32. The system of claim 25, wherein the content limiter is further configured to: the content element is removed from the information resource as specified by the content restriction policy.
33. The system of claim 25, wherein the content limiter is further configured to: the visibility attribute of the content element is set to null as specified by the content restriction policy.
34. The system of claim 25, wherein the resource resolver is further configured to identify a bit stream corresponding to a portion of the content element from a portion of a binary sequence representing the content element.
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201662440792P | 2016-12-30 | 2016-12-30 | |
US62/440,792 | 2016-12-30 | ||
CN201780014528.6A CN108701158B (en) | 2016-12-30 | 2017-01-24 | Hash-based dynamic restriction of content on information resources |
PCT/US2017/014786 WO2018125266A1 (en) | 2016-12-30 | 2017-01-24 | Hash-based dynamic restriction of content on information resources |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780014528.6A Division CN108701158B (en) | 2016-12-30 | 2017-01-24 | Hash-based dynamic restriction of content on information resources |
Publications (1)
Publication Number | Publication Date |
---|---|
CN116244480A true CN116244480A (en) | 2023-06-09 |
Family
ID=57966187
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780014528.6A Active CN108701158B (en) | 2016-12-30 | 2017-01-24 | Hash-based dynamic restriction of content on information resources |
CN202310159074.9A Pending CN116244480A (en) | 2016-12-30 | 2017-01-24 | Hash-based dynamic restriction of content on information resources |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780014528.6A Active CN108701158B (en) | 2016-12-30 | 2017-01-24 | Hash-based dynamic restriction of content on information resources |
Country Status (6)
Country | Link |
---|---|
US (2) | US11645368B2 (en) |
EP (1) | EP3408762A1 (en) |
JP (1) | JP6867482B2 (en) |
KR (1) | KR102262480B1 (en) |
CN (2) | CN108701158B (en) |
WO (1) | WO2018125266A1 (en) |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10615966B2 (en) | 2017-05-12 | 2020-04-07 | International Business Machines Corporation | Selective content security using visual hashing |
EP3853786A1 (en) * | 2019-12-11 | 2021-07-28 | Google LLC | Content provider recommendations to improve targetting and other settings |
US11899617B2 (en) * | 2020-12-14 | 2024-02-13 | Verizon Patent And Licensing Inc. | Systems and methods for dynamic content optimization at the network edge using shared customizable functions |
Family Cites Families (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6457030B1 (en) | 1999-01-29 | 2002-09-24 | International Business Machines Corporation | Systems, methods and computer program products for modifying web content for display via pervasive computing devices |
US20020016910A1 (en) | 2000-02-11 | 2002-02-07 | Wright Robert P. | Method for secure distribution of documents over electronic networks |
US20030182420A1 (en) | 2001-05-21 | 2003-09-25 | Kent Jones | Method, system and apparatus for monitoring and controlling internet site content access |
US7650420B2 (en) | 2001-12-28 | 2010-01-19 | The Directv Group, Inc. | System and method for content filtering |
US20050259819A1 (en) | 2002-06-24 | 2005-11-24 | Koninklijke Philips Electronics | Method for generating hashes from a compressed multimedia content |
EP1540542A2 (en) * | 2002-09-18 | 2005-06-15 | Vontu, Inc | Detection of preselected data |
US8041719B2 (en) * | 2003-05-06 | 2011-10-18 | Symantec Corporation | Personal computing device-based mechanism to detect preselected data |
US7673344B1 (en) | 2002-09-18 | 2010-03-02 | Symantec Corporation | Mechanism to search information content for preselected data |
JP4300292B2 (en) | 2003-10-03 | 2009-07-22 | 独立行政法人産業技術総合研究所 | Distributed information sharing / retrieval method and system in peer-to-peer network |
US7523112B2 (en) * | 2004-02-19 | 2009-04-21 | Research In Motion Limited | System and method for searching a remote database |
ES2363517T3 (en) | 2004-04-02 | 2011-08-08 | Panasonic Corporation | SYSTEM OF DETECTION OF CONTENT NOT AUTHORIZED. |
GB2422455A (en) | 2005-01-24 | 2006-07-26 | Hewlett Packard Development Co | Securing the privacy of sensitive information in a data-handling system |
US20070201502A1 (en) | 2006-02-28 | 2007-08-30 | Maven Networks, Inc. | Systems and methods for controlling the delivery behavior of downloaded content |
CN101335762A (en) * | 2007-06-25 | 2008-12-31 | 株式会社日立制作所 | Method, server, terminal and system reflecting historical using behavior of webpage |
US20090300671A1 (en) * | 2008-05-30 | 2009-12-03 | At&T Knowledge Ventures, L.P. | Controlling Access to Multimedia Content |
US9068837B2 (en) | 2010-01-29 | 2015-06-30 | Here Global B.V. | Method of operating a navigation system |
CN102340529B (en) * | 2010-07-21 | 2014-09-03 | 中国移动通信集团福建有限公司 | Page generating system and page generating method based on WAP (Wireless Application Protocol) platform |
EP2609538B1 (en) * | 2010-08-25 | 2016-10-19 | Lookout Inc. | System and method for server-coupled malware prevention |
US20130013705A1 (en) * | 2011-07-08 | 2013-01-10 | Image Vision Labs, Inc. | Image scene recognition |
DE102012007217A1 (en) | 2012-04-11 | 2013-10-17 | Torsten Schmale | Information technology method for safe handling and safe processing of sensitive data for social security number, involves performing translation of sensitive data on placeholder data and vice versa to use services of private cloud |
CN103913174B (en) | 2012-12-31 | 2016-10-19 | 深圳先进技术研究院 | The generation method and system of a kind of navigation information and mobile client and server end |
US8869281B2 (en) * | 2013-03-15 | 2014-10-21 | Shape Security, Inc. | Protecting against the introduction of alien content |
US9756058B1 (en) | 2014-09-29 | 2017-09-05 | Amazon Technologies, Inc. | Detecting network attacks based on network requests |
US20170059347A1 (en) | 2015-08-28 | 2017-03-02 | Google Inc. | Determining Improved Pick-Up Locations |
US10126141B2 (en) | 2016-05-02 | 2018-11-13 | Google Llc | Systems and methods for using real-time imagery in navigation |
US10024683B2 (en) | 2016-06-06 | 2018-07-17 | Uber Technologies, Inc. | User-specific landmarks for navigation systems |
CN106403971B (en) | 2016-08-25 | 2021-10-08 | 北京小米移动软件有限公司 | Information interaction method and device |
US10458802B2 (en) | 2017-06-13 | 2019-10-29 | Gt Gettaxi Limited | System and method for navigating drivers to dynamically selected drop-off locations for shared rides |
CN109040960A (en) | 2018-08-27 | 2018-12-18 | 优视科技新加坡有限公司 | A kind of method and apparatus for realizing location-based service |
CN109357673A (en) | 2018-10-30 | 2019-02-19 | 上海仝物云计算有限公司 | Vision navigation method and device based on image |
-
2017
- 2017-01-24 KR KR1020197015208A patent/KR102262480B1/en active IP Right Grant
- 2017-01-24 EP EP17703589.6A patent/EP3408762A1/en not_active Ceased
- 2017-01-24 WO PCT/US2017/014786 patent/WO2018125266A1/en active Application Filing
- 2017-01-24 JP JP2019522570A patent/JP6867482B2/en active Active
- 2017-01-24 CN CN201780014528.6A patent/CN108701158B/en active Active
- 2017-01-24 CN CN202310159074.9A patent/CN116244480A/en active Pending
- 2017-01-24 US US16/086,277 patent/US11645368B2/en active Active
-
2021
- 2021-07-19 US US17/379,495 patent/US11797653B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
US11645368B2 (en) | 2023-05-09 |
JP6867482B2 (en) | 2021-04-28 |
KR102262480B1 (en) | 2021-06-08 |
WO2018125266A1 (en) | 2018-07-05 |
EP3408762A1 (en) | 2018-12-05 |
US20190130079A1 (en) | 2019-05-02 |
US11797653B2 (en) | 2023-10-24 |
CN108701158A (en) | 2018-10-23 |
JP2020504354A (en) | 2020-02-06 |
CN108701158B (en) | 2023-03-10 |
US20210349976A1 (en) | 2021-11-11 |
KR20190072619A (en) | 2019-06-25 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11907360B2 (en) | Systems and methods for deploying countermeasures against unauthorized scripts interfering with the rendering of content elements on information resources | |
CN106095869B (en) | Advertisement information processing method, user equipment, background server and system | |
US11797653B2 (en) | Hash-based dynamic restriction of content on information resources | |
US8931084B1 (en) | Methods and systems for scripting defense | |
KR102502616B1 (en) | Quasi-Low Entropy Browsing History for Personalization | |
US11886546B2 (en) | Systems and methods for dynamically restricting the rendering of unauthorized content included in information resources | |
US8904492B2 (en) | Method of controlling information processing system, computer-readable recording medium storing program for controlling apparatus | |
CN109891421B (en) | Strategies to deploy hash-based dynamic constraints on content elements on information resources | |
CN117909603A (en) | System and method for preventing interference in rendering content elements on information resources |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
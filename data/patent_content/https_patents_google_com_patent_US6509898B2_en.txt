US6509898B2 - Usage based methods of traversing and displaying generalized graph structures - Google Patents
Usage based methods of traversing and displaying generalized graph structures Download PDFInfo
- Publication number
- US6509898B2 US6509898B2 US09/062,341 US6234198A US6509898B2 US 6509898 B2 US6509898 B2 US 6509898B2 US 6234198 A US6234198 A US 6234198A US 6509898 B2 US6509898 B2 US 6509898B2
- Authority
- US
- United States
- Prior art keywords
- node
- usage
- nodes
- computer readable
- child
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
- 238000000034 method Methods 0.000 title claims abstract description 168
- 238000003860 storage Methods 0.000 claims description 20
- 230000006870 function Effects 0.000 abstract description 9
- 238000000926 separation method Methods 0.000 abstract description 7
- 238000001994 activation Methods 0.000 description 121
- 230000004913 activation Effects 0.000 description 119
- 239000013598 vector Substances 0.000 description 45
- 230000007480 spreading Effects 0.000 description 39
- 238000003892 spreading Methods 0.000 description 39
- 239000011159 matrix material Substances 0.000 description 31
- 238000012800 visualization Methods 0.000 description 22
- 230000009466 transformation Effects 0.000 description 12
- 230000008569 process Effects 0.000 description 11
- 238000000844 transformation Methods 0.000 description 9
- 238000004458 analytical method Methods 0.000 description 8
- 230000008859 change Effects 0.000 description 8
- 238000007792 addition Methods 0.000 description 7
- 230000000694 effects Effects 0.000 description 6
- 230000002457 bidirectional effect Effects 0.000 description 5
- 230000002452 interceptive effect Effects 0.000 description 5
- 238000012423 maintenance Methods 0.000 description 5
- 230000000007 visual effect Effects 0.000 description 5
- 230000001680 brushing effect Effects 0.000 description 4
- 238000013507 mapping Methods 0.000 description 4
- 238000012986 modification Methods 0.000 description 4
- 230000004048 modification Effects 0.000 description 4
- 230000003993 interaction Effects 0.000 description 3
- 230000007246 mechanism Effects 0.000 description 3
- 238000012544 monitoring process Methods 0.000 description 3
- 230000010363 phase shift Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000001149 cognitive effect Effects 0.000 description 2
- 239000003086 colorant Substances 0.000 description 2
- 238000004891 communication Methods 0.000 description 2
- 238000007796 conventional method Methods 0.000 description 2
- 230000007423 decrease Effects 0.000 description 2
- 230000003247 decreasing effect Effects 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 238000012886 linear function Methods 0.000 description 2
- 238000002910 structure generation Methods 0.000 description 2
- 230000002123 temporal effect Effects 0.000 description 2
- 238000012360 testing method Methods 0.000 description 2
- 238000007794 visualization technique Methods 0.000 description 2
- 235000008694 Humulus lupulus Nutrition 0.000 description 1
- 240000007643 Phytolacca americana Species 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 230000015572 biosynthetic process Effects 0.000 description 1
- 230000002860 competitive effect Effects 0.000 description 1
- 238000005094 computer simulation Methods 0.000 description 1
- 230000008602 contraction Effects 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 238000012217 deletion Methods 0.000 description 1
- 230000037430 deletion Effects 0.000 description 1
- 238000007689 inspection Methods 0.000 description 1
- 238000012804 iterative process Methods 0.000 description 1
- 238000003825 pressing Methods 0.000 description 1
- 238000012545 processing Methods 0.000 description 1
- 238000005086 pumping Methods 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9558—Details of hyperlinks; Management of linked annotations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/74—Browsing; Visualisation therefor
- G06F16/748—Hypervideo
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
- G06F16/94—Hypermedia
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
Definitions
- the present invention is related to the field of displaying generalized graph structures. Specifically, the present invention is related to generating a tree structure representation for display of a generalized graph structure, and the present invention is related to displaying tree structure representations of a generalized graph structure.
- the present invention addresses the problem of laying out large directed graphs, such as World Wide Web sites, so that the important relationships are exposed.
- the World-Wide Web (“web”) is perhaps the most important information access mechanism to be introduced to the general public in the 20th Century. As larger numbers of organizations rely on the Internet to distribute information to potential consumers and investors, they also realize its potential for distributing and organizing large volumes of data for later retrieval by employees and business partners. A company's web site is rapidly becoming one of its most important business investments.
- a web site As an information repository, a web site generally receives a high amounts of usage. Web site usage patterns that are derived by monitoring how the company's employees use its web site enhance the companies understanding of its business activities. For example, monitoring what product literature the sales force is downloading may be a way to forecast sales. In short, traditional market analysis can be applied to this information resource.
- a web site is a dynamic structure, because its topology as evidenced by its linkage structure, the contents of its pages, and its usage changes continually. Analysts want to be able to analyze the evolving web site.
- Web site administrators and designers have a need to understand the relationship between the web site's usage parameters and its link topology, and vice versa. Since web sites are dynamically changing over time, maintains need to understand how changes to the topology affect usage.
- some conventional web site display methods encode usage information in the visualization
- no conventional methods reference usage information in generating the structure to be displayed from the generalized graph structure.
- no conventional system modifies the positioning of nodes based within a displayed structure upon the nodes usage.
- a conventional technique for understanding a complex generalized graph structure is to display a representation of the links and nodes which constitute the generalized graph structure.
- One view of the World Wide Web is that of a generalized graph structure, with web pages representing nodes and hyperlinks representing the links between the nodes. Because of the complexity of the generalized graph structure as evidenced by the large number of links between nodes, some links of the generalized graph structure are usually not presented in the representation so as to enable a viewer or user to effective cognitively process the representation.
- An object of the present invention is to ensure that the method for generating the representation for display includes the more important links in the representation.
- Another object of the present invention is to ensure that the method for displaying the representation positions nodes or links according to their importance. This allows a viewer or user to understand the importance of a node or link based upon its position in displayed representation.
- the representation of the generalized graph structure used for display is a tree structure.
- usage parameters are referenced in generating the tree structure from the generalized graph structure. This aspect is applicable to several types of usage parameters, and is applicable to several methods for generating the tree structure. For example, frequency, recency, spacing of accesses, and path information are each types of usage parameters that can be referenced according to the present invention.
- An example of generating the tree structure from the generalized graph structure by referencing usage parameters is a breadth first traversal method of the graph that references usage parameters associated with each node or link.
- the usage parameters which are associated with each node are referenced in order to determine the visitation order in the graph traversal method.
- the visitation order is determined by visiting the highest used nodes first.
- the child nodes are visited in order of decreasing usage parameter.
- popular web pages are favored over less popular ones.
- a child node will be claimed by a more popular web page rather than by its less popular sibling which also has a hyperlink to the child node.
- the visitation order is determined by visiting the nodes having the highest used link.
- a depth first traversal of the graph references the usage parameters.
- the method of displaying the tree structure references the usage parameters to determine the positioning of the nodes in the layout of the tree structure.
- the root node is positioned in the center of the layout.
- sibling nodes are spread out on links which emanate radially about their parent.
- this example includes a squashed cone tree layout.
- the highest-used sibling nodes can be placed farthest apart from each other so as to achieve optimal separation so that they have the most growth space.
- the lowest-used nodes are then placed in the remaining space between the high-usage nodes. This method continues to place nodes the farthest apart from each other based upon usage values, around their parent.
- sibling nodes are positioned at the same radius from the root node.
- this example includes a disk tree layout.
- each leaf node in the hierarchy may be assigned the same amount of angular space.
- the layout angle of each node may be a function of the ranking of the node's usage parameter relative to its siblings. Therefore, sibling nodes are laid out in order of monotonically related layout angle and usage parameter, so that the highest used nodes are positioned near each other and the lowest used nodes are positioned near each other.
- derived usage parameters such as need probability, cocitation clustering, or functions of both node and link usages can alternatively be used according to the present invention.
- FIG. 1 illustrates a general purpose computer suitable for performing the methods of the present invention.
- FIG. 2 illustrates a generalized graph structure
- FIG. 3 illustrates a tree structure generated from the generalized graph structure illustrated in FIG. 2 .
- FIG. 4 is another illustration of the tree structure shown in FIG. 3 which shows the depth of each node.
- FIG. 5 illustrates a disk tree representation of the tree structure shown FIGS. 3 and 4.
- FIG. 6 illustrates a generalized graph structure having nine nodes and containing many cycles which will be used to illustrate various usage based tree structure generation methods according to the present invention.
- FIG. 7 illustrates a topology matrix corresponding to the generalized graph structure shown in FIG. 6 .
- FIG. 8 illustrates a usage parameter vector pertaining to the nodes of the generalized graph structure shown in FIG. 6 .
- FIG. 9 illustrates a breadth first method for generating a tree structure from a generalized graph structure according to the present invention.
- FIG. 10 illustrates a tree structure generated from the generalized graph structure shown in FIG. 6 by the breadth first method shown in FIG. 9 using the node usage parameter vector shown in FIG. 8 .
- FIG. 11 a usage parameter matrix pertaining to the links of the generalized graph structure shown in FIG. 6 .
- FIG. 12 illustrates a tree structure generated from the generalized graph structure shown in FIG. 6 by the breadth first method shown in FIG. 9 using the link usage parameter matrix shown in FIG. 11 .
- FIG. 13 illustrates a depth first method for generating a tree structure from a generalized graph structure according to the present invention.
- FIG. 14 illustrates a tree structure generated from the generalized graph structure shown in FIG. 6 by the depth first method shown in FIG. 13 using the node usage parameter vector shown in FIG. 8 .
- FIG. 15 illustrates node placement according to the present invention for display of sibling nodes relative to their parent at layout angles such that highest ranking sibling nodes ranked by their usage parameters are optimally separated.
- FIG. 16 illustrates node placement according to the present invention for display of sibling nodes relative to their parent at layout angles that increase monotonically with the ranking of the sibling nodes ranked by their usage parameters.
- FIG. 17 illustrates another generalized graph structure.
- FIG. 18 illustrates a method of displaying a tree structure based upon usage according to the present invention.
- FIG. 19 illustrates a squashed cone tree representation of the generalized graph structure shown in FIG. 17 displayed by a method according to the present invention.
- FIG. 20 illustrates a disk tree representation of the generalized graph structure shown in FIG. 17 displayed by a method according to the present invention.
- FIG. 21 illustrates a method of displaying a related series of graphs in a time tube according to the present invention.
- FIG. 22 illustrates a related series of graphs suitable for display as a series of planar slices in a time tube according to the present invention.
- FIG. 23 illustrates a planar template for determining node placement within planar slices of a time tube representation of a related series of graphs according to the present invention.
- FIG. 24 illustrates a series of planar slices in a time tube representing a changing tree structure displayed by methods according to the present invention.
- FIG. 25 illustrates a series of planar slices in a time tube illustrating a spatial contraction and addition of new nodes when interpreted with the time axis moving from left to right, and illustrating a spatial expansion and node clustering when interpreted with the time axis moving from right to left.
- FIG. 26 illustrates activation levels of web pages during spreading activation algorithm as displayed by a conventional mathematics package.
- FIG. 27 illustrates a method for interactively receiving activation input and displaying results of a spreading activation algorithm according to the present invention.
- FIG. 28 illustrates a display of a spreading activation results and specification of new activation input according to the method shown in FIG. 26 .
- FIG. 29 illustrates a method according to the present invention of displaying the process of spreading activation in a series of planar slices of a time tube.
- FIG. 30 illustrates a display of the process of spreading activation in a series of planar slices of a time tube generated according to the method shown in FIG. 28 of the present invention.
- Breadth-first traversal transforms the web graph into a tree by placing a node as closely to the root node as possible. After obtaining this tree, the structure is then visualized using the disk tree visualization technique.
- a disk tree uses a circular layout to visualize the hierarchy. Each successive circle denotes levels in the tree.
- the layout algorithm runs in two passes. In the first pass, the algorithm traverses the entire hierarchy using post-order traversal. At each node, the algorithm calculates the number of leaf nodes in that sub-tree. So the total number of leaves in the tree is known.
- the algorithm then calculates the amount of angular space to be allocated for each leaf node (360 degrees divided by the total number of leaves).
- the algorithm traverses the hierarchy using breadth-first traversal. At each node, it allocates the amount of angular space for that node by looking to see how many leaf nodes are rooted at that sub-tree. In this manner, each leaf node is guaranteed a fixed amount of angular space.
- the disk tree has several advantages. First, the structure of the tree is visualized compactly, with the pattern easily recognizable. Second, when viewed straight on or at slight angles, there are no occlusion problems since the entire layout lies on a two dimensional plane. Third, unlike cone trees, since it is a two dimensional technique, the third dimension can be utilized for other information, such as time, or a three dimensional glyph at each node. Lastly, the circularity is aesthetically pleasing to the eye.
- the visualization itself actually validates the choice of a preferred breadth first transformation algorithm.
- the high traffic areas are usually concentrated near the root node. This means that the algorithm places easy to reach nodes starting from the root node. As the document gets farther and farther away from the root node, the document has a lesser possibility of being accessed.
- FIG. 1 illustrates a general purpose computer architecture 100 suitable for implementing the methods according to the present invention.
- the general purpose computer 100 includes at least a microprocessor 102 , a display monitor 104 , and a cursor control device 105 .
- the cursor control device 105 can be implemented as a mouse, a joy stick, a series of buttons, or any other input device which allows a user to control position of a cursor or pointer on the display monitor 104 .
- the general purpose computer may also include random access memory 107 , external storage 103 , ROM memory 108 , a keyboard 106 , a modem 110 and a graphics co-processor 109 .
- All of the elements of the general purpose computer 100 may be tied together by a common bus 101 for transporting data between the various elements.
- the bus 101 typically includes data, address, and control signals.
- the general purpose computer 100 illustrated in FIG. 1 includes a single data bus 101 which ties together all of the elements of the general purpose computer 100 , there is no requirement that there be a single communication bus 101 which connects the various elements of the general purpose computer 100 .
- the microprocessor 102 , RAM 107 , ROM 108 , and graphics co-processor 109 might be tied together with a data bus while the hard disk 103 , modem 110 , keyboard 106 , display monitor 104 , and cursor control device 105 are connected together with a second data bus (not shown).
- first data bus 101 and the second data bus could be linked by a bidirectional bus interface (not shown).
- some of the elements, such as the microprocessor 102 and graphics co-processor 109 could be connected to both the first data bus 101 and the second data bus (not shown) and communication between the first and second data bus would occur through the microprocessor 102 and graphics co-processor 109 .
- the methods of the present invention are thus executable on any general purpose computing architecture such as the 100 illustrated in FIG. 1, but there is clearly no limitation that this architecture is the only one which can execute the methods of the present invention.
- FIG. 2 illustrates a generalized graph structure 200 consisting of fifteen nodes 201 through 215 .
- the various nodes 201 through 215 of the generalized graph structure 200 are connected to each other by links, such as those labeled 216 through 225 .
- the links connecting the various nodes may either bidirectional or unidirectional.
- a bidirectional link will be represented as a link having no arrows at either end, and a unidirectional link will be denoted by a link having an arrow at one end or the other, which will indicate that a link exists only in the direction that the arrow is pointing.
- FIG. 3 illustrates a tree structure representation 300 of the generalized graph structure 200 illustrated in FIG. 2 .
- Links 216 through 225 are not shown in the tree structure 300 corresponding to the generalized graph structure 200 .
- Links 216 through 225 were omitted because they create cycles in the generalized graph structure 200 .
- a tree structure has no cycles; in other words, there is only one path from any node to any other node.
- the tree structure representation 300 there is only one path from any node to any other node because all cycles have been broken.
- FIG. 4 shows another tree structure representation 400 of the tree structure representation 300 illustrated in FIG. 3 .
- node 201 is identified as the root node.
- the root node 201 has a depth of zero.
- the children of the root node 201 are nodes 202 , 203 , and 204 , which exist at a depth of one.
- Node 202 has one child (node 205 ) and node 204 has three children (nodes 206 , 207 , and 208 ).
- Nodes 205 through 208 are at depth two. The depth of any node is determined by the number of links which must be traversed in order to travel back to the root node.
- Nodes 209 , 210 , 203 , 214 , 215 , 207 , 212 , and 213 are leaf nodes, because they have no children.
- FIG. 5 illustrates a disk tree representation 500 of the tree structure 400 shown in FIG. 4 .
- the center point 501 of the disk tree representation 500 corresponds to the root node 201 of the tree structure 400 .
- Each of the points 501 through 515 represents one of the nodes 201 through 215 .
- the reference numeral corresponding to the point in the disk tree 500 for each node of the tree structure 400 is computed.
- node 201 in FIG. 4 is illustrated as node 501 in the disk tree 500
- node 202 is represented by point 502
- node 203 is represented by point 503
- node 215 is represented by point 515 .
- Circle 550 contains all points which represent nodes that are at a depth of one from the root node represented by point 501 .
- Circle 560 contains all points representing nodes at depth two.
- Circle 570 contains all points representing nodes at depth three, and circle 580 contains all points representing nodes at depth four.
- the points in FIG. 5 display and represent the nodes of FIG. 4; thus the term node is sometimes used hereinafter used to refer to the point on a display representing a node.
- the angular placement of each point representing a node in the disk tree 500 is determined as follows. The total number of leaf nodes is determined, and the 360° of the circle is divided by that total number of leaf nodes.
- disk tree 500 there are eight leaf nodes represented by points 512 , 513 , 509 , 510 , 503 , 514 , 515 , and 507 .
- Each leaf node thus has 45° of angular space dedicated to it in the disk tree 500 .
- the angular placement of a parent node is the angle which bisects the angle formed by its outer most leaf nodes and the root node.
- point 504 representing node 204 has outer most leaves 214 and 213 , which correspond to points 514 and 513 , respectively, on disk tree 500 .
- the angle formed by an outer most leaf 514 , the outer most leaf point 513 , and the root node 501 is 180°.
- parent node 504 is the angle bisecting that 180° angle.
- parent point 511 has children points 515 and 514 .
- the children points 515 and 514 together with the root node 501 form a 45° angle, therefore parent point 511 is placed at an angle which bisects that 45° angle.
- the layout of graph structures is performed based upon usage information.
- conventional layout methods are based primarily upon either topology or content
- the methods according to the present invention encode additional information by prioritizing (or ranking) usage. These methods provide degree of interest functions for graph visualizations, thereby minimizing cognitive load. While the scope of the present invention extends far beyond applications to the web, the web is used to exemplify the methods according to the present invention.
- the present invention addresses the problem of laying out large directed graphs, such as found in the world wide web, so that the relevant relationships are exposed.
- a usage based traversal turns a general graph into a tree.
- the order of traversal or order of layout or both are chosen based upon usage data such as simple frequencies or cocitation frequencies.
- an intranet view for a company can be dynamically organized.
- additional information is encoded into graph visualizations by laying out graphs based on usage-based information. For example, in information retrieval, hypertext documents are accessed in various frequencies (some are more popular than others). According to the present invention, the popularity of an item helps determine the priority the item will receive in the layout of the graph. By coupling the usage data and encoding it into the structural layout of the graph, changes in usage and topology can be viewed at the same time.
- the scope of the proposed invention is not limited to documents on the world wide web, the web as viewed by an administrator of a web site is used as an example to ground the concepts of the present invention.
- the present invention allows web administrators in charge of maintenance to understand the relationship between a web site's usage patterns and its topology.
- a traditional technique for understanding a complex link structure is to present a visualization or representation of the links and nodes.
- One view of the Web is that of a graph, with documents representing nodes and hyperlinks representing the links between documents.
- Some information is usually filtered or culled to enable effective cognitive visual processing. To ensure that the layout algorithm presents the more important information, these algorithms often employ degree-of-interest functions.
- the methods according to the present invention employ usage information to make layout decisions for a variety of layout algorithms. Some of these algorithms attempt to maximize screen real estate while others function by trying to reveal subtle relationships amongst the elements. Frequency, recency, spacing of accesses, and path information are all forms of usage information which can be referenced according to the methods of the present invention. Additionally, derived usage information like need odds and cocitation clustering can also be used, though the present invention is not limited to only these forms.
- One method to layout a topology involves starting with a node, called the root node, and spreading out the links radially about the node. The ancillary nodes then repeat until the screen real estate is consumed.
- the layout algorithm may wish to place the highest-used nodes farthest apart from each other so that they have the most growth space. The lowest-used nodes are then placed in the remaining space between the high-usage nodes. The layout continues to place nodes the farthest apart from each other based upon usage values, around the hub. The highest used nodes are optimally separated from each other allowing plenty of screen real estate for their related children nodes to be placed. This is done at the expense of the less used nodes.
- Another layout method according to the present invention orders the nodes by usage and then lays them out from high to low (or low to high) to reveal popularity (or deadwood).
- a modified breadth first traversal of a graph encodes usage in its structure.
- the immediate children of the root node are laid out, then their children.
- the order in which the children are visited is not specified in the traversal.
- additional information is encoded into the graph layout simply by choosing a visitation order based on some parameter. For example, the visitation order is determined by sorting nodes based on the amounts of usage (favor popular web pages over less popular ones).
- Another layout algorithm that can be modified to reference usage parameters according to the present invention is depth-first traversal, in which nodes in a common ancestry are presented. In this alternative, a vertical slice is presented at the cost of missing nearby neighbors. At each step, the algorithm must determine which children to choose to explore. Similar to the best breadth-first traversal according to the present invention, the child that has the highest usage is visited first.
- Usage patterns not only reveal how a document structure is being accessed over an aggregated time-period, but also when collected over time, reveal a flow through the topology. This adds another dimension to the representation. The maintenance personnel can see how usage is changing over time (perhaps due to user changes or external events) and how structural changes affect usage patterns. Comparing these time slices allow the maintenance personnel to discover not only how many people and where they are currently traversing the structure, but also to correlate changes.
- FIG. 6 illustrates a generalized graph structure having nine nodes, 1 through 9 , and containing many cycles which will be used to illustrate various usage based tree structure generation methods according to the present invention.
- bidirectional links between nodes are represented as a pair of unidirectional links.
- node 1 has a link 612 to node 2
- node 2 has a link 621 to node 1 .
- FIG. 7 illustrates a topology matrix 700 corresponding to the generalized graph structure 600 .
- Rows 1 through 9 of the topology matrix 700 correspond to nodes 1 through 9
- columns 1 through 9 of the topology matrix 700 correspond to nodes 1 - 9 .
- a topology matrix entry at row i and column i represents the existence or absence of a link from node i to node j.
- node 6 has a link 663 to node 3
- node 7 has a link 678 to node 8 .
- the existence of a link from node i to node j is represented as a 1 at row i, column j of the topology matrix 700 .
- a topology matrix is generally square, because it specifies linkages from each node to every other node in a generalized graph structure. Diagonal entries of the topology matrix are always zero. Because the links in the generalized graph structure 600 are bidirectional, the topology matrix 700 is symmetric about its diagonal, although there is no requirement that this be the case.
- FIG. 8 illustrates a usage parameter vector 800 corresponding to the generalized graph structure 600 shown in FIG. 6 .
- the usage parameter for node 1 is 75 at entry 801 of the usage parameter vector 800 .
- the usage parameter associated with node 8 is 29 and is found in entry 808 of the usage parameter vector 800 .
- the usage parameter vector 800 is simply a list of usage parameters associated with each node of a generalized graph structure.
- an N node generalized graph structure will have an N entry usage parameter vector associated with it.
- the usage parameters in the usage parameter vector 800 thus correspond to measured usages of the corresponding nodes.
- the usage parameter associated with each node could be used to represent the average number of accesses per day of each particular web page in the web site.
- the user parameter associated with each node could represent the sums of the amounts of time that the various users who accessed the page kept the page open. This alternative usage parameter would encode the total dwell time measured by all users who access the page in a given fixed time period.
- the quantity which is encoded by the usage parameter associated with each node can be computed in a variety of separate ways, each of which measures a different type of usage. The methods according to the present invention are applicable to any usage parameter that can be conceived and computed for each node.
- usage parameters are most likely normalized to some pre-defined scale.
- the usage parameters illustrated in FIG. 8 are normalized to a scale from 0 to 100.
- Usage parameters could alternatively be normalized, for example, from 0 to 1, or from ⁇ 1024 to +1024.
- FIG. 9 illustrates a usage-based breadth first method 900 for generating a tree structure from a generalized graph structure according to the present invention.
- the method 900 begins at step 901 with the claiming of a root node.
- the root node In order to generate a tree structure by a breadth first algorithm, the root node must be specified so that the depth of any node can be calculated relative to the root node.
- the claiming of the root node in step 901 can occur by a variety of mechanisms. For example, a user may place his cursor on a specific node of a generalized graph structure displayed on a computer monitor using his cursor control device and then select the node by pressing a button on the mouse 105 . Alternatively, the root node may be claimed by implication from its node name.
- the web home page may have a URL (universal resource locator) which has a semantic structure which indicates that it must be the root node.
- URL www.xerox.com may be parsed by a program implementing the methods according to the present invention, and this program may recognize that this web page is the root node of the web site to which the program is being applied by virtue of the name of the node.
- the current depth is set to zero at step 902 .
- Step 902 merely specifies that the depth of the root node is, by definition, zero. This definition was illustrated in the tree structure 400 in FIG.
- the method visits the claimed node having the highest usage parameter associated with it, which is at the current depth and which has not yet already been visited.
- the only node which will have been claimed is the root node, and the root node will also be the only node which exists at the current depth, and it will have not yet been visited. Therefore, the first time that step 903 is encountered in the method 900 , the root node is visited.
- the method claims all children of the currently visited node, which have not already been claimed.
- the nodes which are claimed in step 904 can be easily identified by referring to the topology matrix and usage parameter vector.
- the children which should be claimed at step 904 are those nodes which have nonzero entries in the visited node's row of the topology matrix which have not already been claimed.
- the method 900 determines whether or not there are any additional claimed nodes at the current depth which have not yet been visited.
- the first time that step 905 is encountered in the method 900 the answer to the test presented in 905 will be no, because the only node at the current depth of zero is the root node itself. Therefore, branch 952 takes the method to step 906 where the current depth is incremented.
- the first time that step 906 is encountered in the method 900 the current depth will be set to one.
- the method 900 determines if there are any nodes at the current depth (which was just increased). In other words, test 907 determines whether or not all nodes in the generalized graph structure have been both claimed and visited. If there are no nodes at the current depth, then all nodes have been claimed and visited and branch 954 takes the method to completion at step 908 . However, assuming that there are nodes at the newly incremented current depth, branch 953 takes a method back to step 903 . At step 903 , the claimed node having the highest usage parameter at the current depth is visited. In other words, for all nodes which have been claimed that are at the current depth, the usage parameter is referenced from the usage parameter vector, and the claimed node having the highest usage parameter is selected first for visitation.
- Steps 903 , 904 , and 905 are repeated for each claimed node in order of decreasing usage parameter associated with the claimed nodes at the current depth.
- the method 900 continues until all nodes have been claimed and visited, and then the method is done at step 908 .
- FIG. 10 illustrates a tree structure generated from the generalized graph structure 600 shown in FIG. 6 by the breadth first method 900 shown in FIG. 9 and making reference to the usage parameter vector 800 shown in FIG. 8 .
- the user specified node 1 as the root node and nodes 2 and 4 were claimed as the root node's children. After the depth had been incremented to 1 , node 2 was visited prior to node 4 because node 2 's usage parameter (found in entry 802 of the usage parameter vector) was larger than the usage parameter corresponding to node 4 found at entry 804 of the usage parameter vector 800 .
- node 2 's usage parameter was 84 while node 4 's usage parameter was 51 , therefore node 2 was selected for visitation first, since 84 is greater than 51 .
- nodes 3 and 5 were claimed as children of node 2 .
- node 4 was visited at depth equals one, it claimed node 7 as its child. Then all nodes at depth one had been visited, so the method 900 incremented the depth to two, and node 5 was selected for visitation prior to nodes 3 and 7 because node 5 's usage parameter of 86 (found in entry 805 of the usage parameter vector 800 ) was greater than node 3 's usage parameter of 6 and node 7 's usage parameter of 44 .
- the method 900 claimed nodes 6 and 8 as node 5 's children. Then node 7 was visited, but there were no children that could be claimed for node 7 . Similarly, node 3 was visited at depth 2 , but it could claim no children. So the depth was incremented to 3, and node 6 , having usage parameter 96 , was visited, and node 9 was claimed as the child of node 6 . Node 8 at depth 3 and node 9 at depth 4 could not claim any children when they were visited. After claim 9 was visited, the current depth was incremented to five, but the method 900 determined at step 907 that no nodes existed at this depth, so branch 954 ended the method 900 at step 908 .
- FIG. 11 illustrates a usage parameter matrix 1100 .
- the usage parameter matrix 1100 includes usage parameters pertaining to each of the links in the generalized graph structure 600 shown in FIG. 6 .
- the usage parameters found in the usage parameter matrix 1100 specify the amount of measured usage of each of the links shown in the generalized graph structure 600 shown in FIG. 6 .
- the amount of usage of link 652 which provides a path from node 5 to node 2 , is 28.
- the usage parameter associated with the link from node i to node j is specified by the usage parameter found in row i, column j of the usage parameter matrix 1100 .
- the link usage parameters found in the usage parameter matrix 1100 can be referenced instead of the usage parameters found in the usage parameter vector 800 to determine the order of visitation at step 903 .
- the usage parameter's associated with links pointing to the claimed children at a node may be referenced as the usage parameter determining the order of visitation of nodes at the same depth. If the link usage parameters shown in usage parameter matrix 1100 are modeling usage of hyperlinks in a nine page web site, then this example is concerned with the hyperlink usage rather than usage of any other individual web pages.
- FIG. 12 illustrates a tree structure 1200 generated from the generalized graph structure 600 using the usage parameter matrix 1100 by the method 900 according to the present invention.
- the user has selected node 2 as the root node, nodes 1 , 3 , 5 were claimed as children of the root node 2 , and node 3 at depth 1 was visited first because the usage parameter corresponding to links 623 from node 2 to node 3 has a usage parameter of 74 , which is greater than the usage parameter of link 621 and the usage parameter of link 625 .
- node 3 was visited, it claimed node 6 as its child, and then node 1 was visited at depth 1 .
- Node 1 claims node 4 as its child and then node 5 at depth 1 was visited.
- Node 5 claims node 8 as its child, and node 8 at depth 2 was visited first because the usage parameter associated with link 658 was greater than the usage parameter associated with link 636 and greater than the usage parameter associated with link 614 . Thus, when node 8 was visited, it claimed node 7 and 9 .
- the methods according to the present invention may use any usage parameter to determine the ordering of visitation.
- any usage parameter to determine the ordering of visitation.
- the usage parameter associated with each node could be a weighted linear function of the node usage parameter (such as shown in the usage parameter vector 800 ) and the link usage parameter (such as shown in the usage parameter matrix 700 ) to generate a derived usage parameter.
- the products of the link and node usage parameters could be computed and used as the usage parameter, which determines the node visitation order in step 903 .
- the products of link usages from the root to a given node could be computed and used as the given node's usage parameters for determination of ordering of visitation at step 903 .
- the method 900 illustrated in FIG. 9 is only an example of a usage-based breadth first method that can be employed according to the present invention.
- the method 900 could be modified so that all sibling nodes of the currently visited node are visited prior to visiting cousin nodes or distantly related nodes that are at the same depth.
- FIG. 13 illustrates a usage-based depth first method of generating a tree structure from a generalized graph structure according to the present invention.
- the root node After a root node has been identified, at step 1301 the root node is visited, and the children of the root node are claimed at 1302 .
- the method visits the claimed child having the highest usage parameter which has not yet been visited.
- the method determines whether or not the currently visited node has any children which have not yet been claimed. If unclaimed children exist, branch 1350 claims those children and then step 1303 visits the claimed child having the usage parameter which has not yet been visited. In other words, steps 1303 , 1304 , and 1305 are performed until the end of a lineage of children has been reached.
- branch 1351 takes the method 1300 to step 1306 , where the parent of the currently visited node is revisited.
- the method 1300 determines whether or not the currently visited node has any claimed children which have not yet been visited. If claimed children exist which have not yet been visited, branch 1352 takes a method back to step 1303 . However, if there are no claimed children which have not yet been visited, then branch 1353 takes a method 1300 to step 1308 . At step 1308 , the method 1300 checks to see whether or not the root node is being revisited.
- branch 1354 takes a method 1300 back to step 1306 where the parent of the currently visited node is revisited. If step 1308 determines that the method 1300 is revisiting the root node, branch 1355 takes the method 1300 to completion at step 1309 .
- the usage-based depth first method 1300 visits as many nodes in a linked lineage as it can until it reaches a leaf node.
- step 1306 sends the method 1300 back to the leaf node's parent, so that other children of the leaf node's parent can be visited.
- any visited node's entire descendent sub tree will be claimed and visited before any of its siblings are visited.
- FIG. 14 illustrates a tree structure 1400 generated from the generalized tree structure 600 using the usage parameter vector 800 shown in FIG. 8 by the depth first method 1300 according to the present invention.
- Node 1 is the root node of the tree structure 1400 .
- Nodes 2 and 4 are claimed as children of node 1 , and node 2 is visited before node 4 because node 2 's usage parameter is higher than node 4 's usage parameter.
- nodes 3 and 5 are claimed as its children.
- node 5 is visited because node 5 's usage parameter is higher than node 3 's usage parameter.
- node 6 and 8 are claimed as its children.
- node 6 is visited because node 6 's usage parameter is higher than node 8 's usage parameter.
- node 9 is claimed as its child, and then node 9 is visited.
- step 1304 determines that there are no children which can be claimed by node 9
- step 1306 dictates that node 6 is revisited
- step 1307 determines that there are no more claimed children of node 6 which have not yet been visited.
- branch 1353 takes the method to step 1308 which determines that node 6 is not the root node.
- branch 1354 takes a method back to step 1306 where node 6 's parent is revisited. At this point in the method 1300 , node 5 is being revisited.
- Step 1307 determines that there is a claimed child of node 5 which has not yet been visited, namely node 8 .
- branch 1352 takes method 1300 back to step 1303 where node 8 is visited.
- node 7 is claimed as its child.
- step 1304 determines that there are no children which node 7 can claim, so step 1306 dictates that node 8 be revisited.
- step 1306 again takes the method back to node 5
- another loop through steps 1307 and 1308 takes the method back to node 2 .
- node 3 is visited, node 2 is then revisited, and then the root node 1 is revisited.
- step 1307 determines that there is a claimed child of the root node 1 , which has not yet been visited, namely node 4 .
- branch 1352 take the method back to step 1303 and node 4 is visited.
- step 1304 determines that there are no children which node 4 can claim, therefore branch 1351 takes a method back to step 1306 , so that the root node is again revisited.
- step 1307 determines that all claimed children of the root node have been visited, so branch 1353 takes a method to step 1308 , which determines that the method 1300 is revisiting the root node and then branch 1355 takes the method to completion as step 1309 .
- the various variations of usage parameters used for determining the order of visitation of children nodes in the depth first method 1300 according to the present invention are available as discussed above relative to the usage-based breadth first method 900 .
- link usage, node usage, linear or non-linear functions of link and node usage, path usage, as represented by functions of each link from the root to a give node, and a variety of other usage parameters may be employed using the method 1300 illustrated in FIG. 13 .
- slight variations of the usage-based depth first method 1300 may be implemented according to the present invention.
- FIG. 15 illustrates a manner of laying out a display of a tree structure radially about a parent node 1501 .
- Nodes 1510 , 1520 , 1530 , 1540 , 1560 , 1570 , 1580 , and 1590 are children of parent node 1501 .
- the reference numerals have been assigned such that they are monotonically related to the usage parameter of the sibling nodes.
- node 1590 has a higher usage parameter than node 1580 .
- the lowest usage node is node 1510 .
- the highest used nodes are separated optimally from each other, at the expense of lesser used nodes.
- node 1590 (the highest usage node) is placed 180° away from node 1580 (the second highest used node).
- node 1580 the second highest used node.
- the lowest used node is placed so as to bisect the angle formed by the two adjacent nodes having the highest total usage.
- Node 1590 ranks 1 and node 1510 ranks 8.
- the lowest used half of the siblings can be laid out such that the lowest used node is placed so as to bisect the angle formed by the two adjacent siblings which have the lowest sum of their rankings.
- node 1590 which ranks one
- node 1570 which ranks three
- that ranking is the lowest ranking (indicating highest usage) of any of the right angles formed by the four highest usage nodes.
- the lowest used node 1510 is placed so as to bisect nodes 1590 and 1570 .
- each sibling may be allocated a constant amount of angular space based upon the total number of siblings, and then the highest used half of the siblings may be plotted to achieve optimal separation from each other based upon usage, and then the lowest used half of the siblings may be laid out so as to bisect the angles formed by the highest half of the nodes as described above.
- the highest usage nodes can always be placed 180° from each other and angular space between already laid out adjacent nodes can be divided by two each time a new node is laid out, even if the number of siblings is not an exact power of two.
- FIG. 16 illustrates another method according to the present invention of displaying a group of sibling nodes using their usage parameters to determines their placement about their parent node 1501 .
- a certain angle is specified as the angle at which the highest usage node will be placed.
- the 360° of the circle is divided by the total number of sibling nodes.
- the highest usage node is placed as the specified angle designated for, and then the remaining nodes are placed so as to be adjacent to the next highest usage node relative to them.
- the highest usage node is placed at the specified angle, and the second highest usage node is placed adjacent to the highest usage node, the third highest usage node is placed adjacent to the second highest usage node, and so forth, until the lowest usage node is laid out.
- the angular placement of each node is monotonically related to its layout angle relative to its parent.
- FIG. 17 illustrates a generalized graph structure 1700 consisting of twenty-three nodes, 1701 through 1723 .
- links 1750 through 1762 are eliminated so as to eliminate cycles and thereby create a tree structure.
- FIG. 18 illustrates a method of displaying a tree structure using usage rankings according to the present invention.
- each sibling is ranked according to its usage parameter.
- the tree structure is laid out based upon the rankings of all the sibling groups within the tree structure.
- FIG. 19 is a squashed cone tree display of the tree structure derived from the generalized graph structure 1700 shown in FIG. 17 .
- the points representing nodes of the generalized graph structure 1700 are labeled with reference numerals which are correspondent to the reference numerals of the nodes shown in FIG. 17 .
- node 1723 is displayed as point 1923 in the display 1900 .
- the usage parameters associated with the various nodes are inversely related to the reference numeral. For example, amongst a group of sibling nodes 1702 through 1705 , node 1702 has the highest usage, and node 1705 has the lowest usage.
- the reference numeral can be viewed as the ranking of the usage parameter relative to its siblings.
- the root node 1901 is placed in the center, and its children nodes 1902 , 1903 , 1904 , and 1905 are laid out according to the optimal separation procedure described above relative to FIG. 15 .
- the eight children of node 1902 which are nodes 1906 through 1913 , are laid out radially from their center parent 1902 in the manner described above relative to FIG. 15 .
- the children of node 1906 namely nodes 1919 through 1922 , are laid out so as to achieve optimal separation in the manner described above relative to FIG. 15 .
- the children of node 1903 are positioned such that the highest ranking and highest usage node 1914 is placed as far away from the center 1901 as possible, and its siblings are placed as described above.
- the child node 1904 is placed as far away as possible from the center 1901 at point 1918 .
- the child of point 1918 (node 1923 ) is placed as far away as possible from node 1904 .
- the highest usage node of any group of siblings is preferably place at an angle farthest away from its grandparent node, although there is no requirement according to the present invention that this be the case.
- Sibling nodes may be connected to their adjacent siblings via translucent lines to further clarify their sibling relationships. The optional translucent lines are illustrated in FIG. 19, but are not labeled with reference numerals.
- FIG. 20 illustrates a disk tree display of the tree structure generated from the generalized graph structure 1700 shown in FIG. 17 .
- highest usage nodes are placed at angles closest to the vertical.
- node 2002 is the highest usage node at depth 1
- node 2003 is the next highest usage node at depth 1
- node 2005 is the least used node of depth 1 .
- the user can see the nodes at that depth in order of their usage, seeing the most used nodes first.
- node 2006 is the highest usage and node 2013 is the lowest usage.
- each leaf node is assigned a constant amount of angular space in the layout of FIG.
- the layout of FIG. 20 measures the layout angle for each child node from the center of the layout of the tree structure. Therefore, the layout angle of each node is measured as the angle formed by a ray extending from the center 2001 to the node and a ray extending from the center 2001 to the vertical (which passes through point 2019 in FIG. 19 ).
- squashed cone tree depiction 1900 uses the optimal separation layout technique described with reference to FIG. 15, and although the disk tree representation 2000 is laid out using the monotonic relationship between ranking and layout angle, there is no requirement according to the present invention that this relationship between sibling placement and type of display algorithm occur.
- a squashed cone tree representation can have sibling placements determined by the method described relative to FIG. 16 in which monotonic relationships between layout angles and sibling nodes exist.
- a disk tree representation may employ the optimal separation sibling layout procedure such as described with respect to FIG. 15 .
- Time tubes according to the present invention are a type of visualization that enables the identification of interesting changes and quick access to data across a wide range of transformations.
- Time tubes exist in a three dimensional work space and are created by stacking and aligning two-dimensional circular slice (such as disk trees) into a cylindrical representation, similar to a log.
- Each disk tree is a visual representation of the data during a stage of the transformation (such as clustering or temporal).
- the resulting visualization allows the user to see how data were transformed from one point to another.
- This higher level representation permits the user to perform a set of operations (such as rotation, picking, and brushing) and navigation techniques (such as changing point of view or zooming) to understand complex transformations of large data sets as well as identify and isolate areas of interest within data sets.
- Time tubes also provide the framework to instantiate novel visualizations, layout algorithms, and interactions.
- Time tubes according to the present invention address the problem of how to show the changes over time of the structure and usage of a large document collection.
- a two-dimensional circular tree (or other layout) is computed at multiple points in time. All nodes that ever exist are used to lay out the tree. Nodes and links may be colored to indicate addition, deletion, and usage.
- the present invention may be used to interpret internet events, such as the change in usage of the Xerox site after the filing of Xerox's 10-K.
- the third dimension is used to represent time.
- multiple disk trees are laid out along a spatial axis.
- a spatial axis By using a spatial axis to represent time, the viewer sees the information space-time in a single visualization, thus facilitating easy sense-making on the entire information space-time space.
- conventional display monitors 104 are two dimensional display devices, a three dimensional display structure must be projected onto the two dimensional display 104 .
- the third dimension is thus projected onto the first two. However, this projection does not negate the power of the three dimensional structure.
- Most readers can readily attest that although movies are projected onto a two dimensional screen, the three dimensional content being displayed is readily understood and appreciated.
- Slices in the information space-time of time tubes according to the present invention are actually not laid out parallel to each other. Each slice is rotated so that it occupies the same amount of screen area as other slices. Because of perspective effects, if each slice were parallel to each other, then slices in the center would occupy smaller amounts of space than slices on the side. Also, the viewer would see the front side of the slices that are on the left side of the viewing frustum, and the backside of the slices that are on the right side of the viewing frustum. By carefully monitoring the viewing degree of interest, the system can also emphasize certain slices, and de-emphasize others to get a focus+context effect. This mapping of multiple variables is mitigated if the disk trees are turned toward the viewer. By making the disk trees two dimensional in a three dimensional world, additional flexibility in the mapping is gained at the cost of perspective distortions and lower readability.
- time tube Another interesting variant of the time tube is obtained by stacking the disk trees in the time tube and then flying through the tube, or similarly, to play the disk trees one after another in time order so as to create an animation of change. That is, instead of mapping time into space, time is simply mapped into time.
- This method is more compact, hence the disk trees can be larger, and it engages the motion detection capabilities of the human perceptual system. The detection of change and the interpretations of series of changes are enhanced at the cost of the ability to do comparisons between different points in time.
- a time tube according to the present invention consists of a series of individual two-dimensional visualizations (slices) aligned within a cylinder. Transformations (such as the addition of new entities, the changing of values of existing entities, and the distortion of physical size) applied to a series of data as is transforms from one state to another are visualized.
- a time tube may undergo one or more transformations from one state to another state.
- the transformations use the length of the cylindrical tube, filling the length of the tube with two-dimensional representations of the data, or slices, at various stages of the transformations.
- Time tubes can encode several dimensions of the transformations at once by altering the representations of size, color, and layout.
- time tubes can visualize include, but are not limited to: (1) temporal (with respect to the Web site analysis tool, web pages are added, changed, and deleted over the course of a period of time); (2) value-based (with respect to the Web site analysis Tool, since frequency is encoded by color, when a page's visitation rate changes, so does its corresponding color), and (3) spatial (although the web site analysis tool does not utilize this ability, entities can shrink and expand).
- the process of how data is clustered and which elements end up in which cluster may be illustrated according to the present invention.
- the ability to perform both tasks visually at the same time is quite useful.
- size, color, and layout can redundantly encode various aspects of a clustering, making it easier to identify trends and patterns within the data.
- time tubes Since a time tube is a cylindrical log, it can be rotated along its axis to move data closer to the user's viewpoint. The user is also able to select one entity and have the corresponding entities highlighted in each slice (a technique called brushing). If a user finds one slice particularly interesting, he can grab it and drag the slice out of the time tube for further inspection. The slices can also be rotated to provide the user with a face-on perspective of each slice. Given that Time Tubes exist in a three dimensional work space, the user can fly around the time tube, zooming in and out of areas of interest.
- FIG. 21 illustrates a method for displaying a related series of graphs according to the present invention.
- an inventory of all unique nodes in all graphs is performed, thereby creating a list of all nodes which have existed in any of the related series of graphs.
- node positions within a slice template are assigned based upon the inventory generated in step 2101 .
- the planar slices of a time tube are laid out by placing each node existing in each of the related series of graphs into the planar slice corresponding to the graphs in which each node is found.
- FIG. 22 shows a series of related graphs suitable for display by method 2100 according to the present invention.
- FIG. 22 shows four separate graphs which are related. Specifically, the graphs share common nodes.
- the four graphs may be viewed as evolution of a web site occurring over a time period.
- the structure of the graph shown corresponding to time 1 may be viewed as the beginning structure of a web site.
- nodes H and I are added as children to node B.
- nodes N, O, P, and Q which had been children of node D, are deleted.
- nodes I, D, T, and U are deleted.
- many nodes remain throughout all times 1 through 4 , while other nodes exist only during certain times.
- FIG. 23 illustrates a planar template determining positions of nodes within planar slices which make up a time tube.
- the planar template 2300 is constructed by inventorying all nodes which have existed at any time. During the inventory performed in step 2101 , the parent of each node must be recorded as well, so that a tree structure representing all nodes which have existed at any time.
- the points shown in the planar template 2300 correspond to the placement of each node within each of the planar slices, which make up the time tube according to the present invention.
- the central point 23 A is the point for display of node A.
- the point 23 H is the position for display of node H.
- FIG. 24 illustrates a series of planar slices which constitute a time tube according to the present invention.
- the planar slices 2400 illustrated in FIG. 24 correspond to the related series of graphs shown in FIG. 22 and the planar template 2300 shown in FIG. 23 .
- FIG. 25 illustrates several aspects of the methods of displaying a related series of graphs according to the present invention.
- FIG. 25 illustrates physical scaling of the dimensions of a series of planar slices. Points 2501 , 2502 , 2503 , and 2504 each represent the same node. A user's cursor 2570 placed upon point 2501 causes translucent line 2550 to highlight the relationship between points 2501 through 2504 .
- FIG. 25 also illustrates clustering or aggregation of four elements 2511 through 2514 into one element 2510 when viewed from time 4 to time 3 . Translucent lines 2561 through 2564 highlight the relationship between the clustered nodes 2511 through 2514 into their resulting node 2510 at time 3 .
- FIG. 25 illustrates physical scaling of the dimensions of a series of planar slices. Points 2501 , 2502 , 2503 , and 2504 each represent the same node. A user's cursor 2570 placed upon point 2501 causes translucent line 2550 to highlight the relationship between points 2501 through 2504 .
- FIG. 25 is used to illustrate several features of the method according to the present invention. To illustrate the clustering aspect, the viewer must assume that time is flowing from the right to the left direction such that time 3 occurs after time 4 .
- FIG. 25 also illustrates the addition of nodes at depth 3 such as nodes 2590 and 2591 at time 3 and the addition of nodes at depth 4 at time 4 such as nodes 2592 and 2593 .
- FIG. 25 illustrates a type of zoom which can be applied to a generalized graph structure which is displayed at time 4 . For example, time 1 shows a zoomed or enlarged view of the depth 0 , 1 , and 2 depth nodes of the graph shown at time 4 .
- time tubes according to the present invention can illustrate arbitrary generalized graphs which might include cycles. Moreover, there is no requirement that each node in each planar slice be placed in the same position as specified in the planar template. For example, translucent lines such as shown in FIG. 25 as line 2550 could alternatively be used to show correspondence of nodes rather than relying on continuity of physical placement within planar slices to indicate correspondence of nodes.
- the interactive method of the preferred embodiment of the time tube aspect of the present invention allows users to interact with the visualization in various ways. For example, by clicking a button, the system rotates all of the slices so that they are being viewed head-on. Clicking on a slice brings that slice to the center focus, thus allowing viewing of that week's (or time period's) worth of data in more detail. That slice is also drawn on a trans parent circular background, so the slices in the time tube are still visible. Using a “Flick-Up” gesture, the slice goes back into the time tube. Using a “Flick-Down” gesture, the slice becomes the floor (at a slight angle). The cursor control device 105 can be used to poke around in the slices.
- Right-clicking a node zooms to the local area of that node to show more detail.
- Hitting the home key sends the user back the global view. This enables a “Drill-Down” operation that is of favorite among analysts. The rapid exploration of local patterns is of great interest to them.
- Spreading activation is a generalized process that determines the effect of injecting a quantity (activation) into a network of connected elements. Specifically, spreading activation is performed by multiplying a flow matrix M that represents the strength of connections by an activation vector A(t) to obtain a new vector A(t+1). Using disk trees and times tubes according to the present invention, the process of spreading activation can be visualized.
- the present invention solves the problem of how to communicate to a user the possible relevance of a set of networked documents and how that relevance was determined. It is especially useful for a large collection of documents.
- degree of interest is predicted using spreading activation, and that spreading activation is visualized in order to make it understandable to the user.
- a very practical application of the present invention is to one's own or a competitor's web site. More generally, it is applicable to any network that can be roughly approximated by a tree.
- the present invention enables web site visualization, and thereby provide competitive intelligence for web site administrator and designers.
- an activation network embedded in a generalized graph structure is modeled as an activation matrix R.
- the activation matrix R is square because each node has a column and row dedicated to it.
- Each off-diagonal element R ij contains the strength of association of node j to node i, and the diagonal contains zeros.
- the strengths in the R matrix determine how much activation flows from each node to each other node during an activation iteration.
- the input activation being introduced into the generalized graph structure is represented by an activation input vector C, where C i represents the activation pumped into node i during each iteration.
- the time evolution of the flow of activation is determined by the following iteration equation.
- M is a flow matrix that determines the flow and decay of activation among nodes.
- the flow matrix M is specified the following equation.
- g is a parameter determining the relaxation of node activity back to zero when it receives no additional activation input
- a is a parameter denoting the amount of activation spread from a node to its neighbors.
- I is the identity matrix.
- disk trees are a two dimensional representation of a collection of connected items.
- the items are web pages, and the connections are hyperlinks that exist between documents.
- the plane perpendicular to a disk tree may be used to encode the frequency with which a page was visited when the page is selected.
- the plane perpendicular to the Disk Tree encodes the amount of activation each node receives, also called an activation bar. The number of elements that show the corresponding spreading activation value is variable.
- the number of elements to display can be determined by, but is not limited to the following methods: predetermined (as in the case where the spreading activation values are shown for the top 100 documents), based upon the top specified percentage, or a predefined threshold.
- the color of each activation bar is not limited to one color according to the present invention, but can be a color gradient or a set of different colors depending upon the value of activation.
- Various networks can be used to spread activation. In a web site analysis tool according to the present invention, content, usage, and topology networks are used, but other networks, such as recommendations, can also be employed. Activation can be simultaneously spread through one or more pages and simultaneously spread through one or more networks.
- One of the more powerful functions a visualization of spreading activation can perform is revealing the results of spreading activation through different networks, Additionally, when networks are combined using a weighting scheme, the contribution of each network on the resulting activation of a page can be assessed by using different colors for each network in the activation bar. The effect of using different underlying flow networks (such as content and usage) can be determined by subtracting the resulting activation patterns from each network and displaying the difference.
- the amount of activation to spread through the network can be determined by the amount of time the cursor spends on a page. This process is referred to as dwell time.
- the set of pages to use for pumping activation input can be determined by the history of pages the user has selected in the visualization or through some other means (such as a text window that displays the current activation sources that users can drag and drop pages into and out of).
- the set of pages can be determined by a sort of “fuzzy brushing,” where the pages are determined by a selected page's neighbors (as measured by the hyperlink structure, content, usage, or any other metrics).
- FIG. 26 illustrates spreading activation as modeled in Matlab (a conventional mathematics package).
- the x-axis represents the individual documents ordered by a breadth first search of the Xerox Web site, the y-axis represents the amount of activation each document receives, and the z-axis represents each step in spreading activation process.
- the result of the process is a vector, which can be visualized in Matlab as a two-dimensional plot.
- the iterative process of spreading activation can be visualized using time tubes according to the present invention.
- Each successive disk tree (also called planar slice) of the time tube is used to show the resulting activation at each stage of the activation process.
- the activation bars are not the preferred method for displaying activation, because the plane perpendicular to each disk tree is used to encode the transformation. Instead, the color of each node in the disk tree is used to display the activation values.
- Visualizing spreading activation with time tubes enables the user to identify and analyze interesting events in the algorithm, such as the identification of phase shifts. A phase shift occurs when the change in activation at a node in successive steps of the spreading activation algorithm reverses its sign.
- FIG. 27 illustrates a method of displaying results of a spreading activation algorithm pertaining to a generalized graph structure according to the present invention.
- a disk tree is displayed in a plane.
- the input vector C of the spreading activation algorithm is determined.
- the spreading activation vector A is iteratively computed over N iterations.
- the final activation vector A(N) is displayed perpendicular to the plane of the disk tree.
- the method 2700 determines whether or not there is more input for the spreading activation algorithm. If more input exists, then branch 2750 takes the method back to step 2702 so that a new activation input vector C can be used. If there is no more input at step 2705 , then branch 2751 causes the method to exit at step 2706 .
- FIG. 28 illustrates the method of displaying results of a spreading activation algorithm according to the present invention.
- activation input can be specified by a variety of interactive manners. For example, as illustrated in FIG. 28, a cursor 2801 can be placed on a displayed node 2805 causing activation input to be cumulatively added over time to this node. For example, the longer that the cursor 2801 stays on node 2805 , the more activation input is generated for that node. In another variation, the cursor must be placed on a node and the node selected, such as by pushing a mouse button, for activation input to begin to accumulate on the node.
- the user may then move the cursor 2801 to another node and begin to add activation at that other node while still maintaining the activation input that was generated for the previously selected node.
- the user had added activation input to the root node 2899 by placing his cursor on the root node and selecting the root node for a certain amount of time, and then the user moved his cursor 2801 over to node 2805 and began to add additional activation input to node 2805 without affecting the activation input which was previously defined for the root node 2899 .
- the display 2800 reflects the final activation vector A(N) which results from the then existing activation input vector C.
- FIG. 28 shows a disk tree representation of a generalized graph structure, as discussed above many links which exist in the generalized graph structure may be omitted from the tree structure displayed. Therefore, according to another aspect of the method of displaying results of a spreading activation algorithm according to the present invention, whenever a user selects a node translucent lines will appear, which show omitted links in the generalized graph structure. For example, in FIG. 28, the user has selected node 2805 , and translucent lines 2820 and 2821 connect node 2805 to nodes 2806 and 2807 respectively.
- Translucent lines 2820 and 2821 represent links which exist in the generalized graph structure which were omitted in the tree structure. These translucent lines 2820 and 2821 may assist a user in understanding how activation has spread from the nodes to which activation input was added to those nodes to which activation has spread. For example, some of the activation which was added at 2805 probably spread through to node 2807 through the link 2821 , which was not shown in the tree structure. Another mechanism by which activation input can be added to a node is by selecting the node and then typing in an amount of activation to add. At any time, the user may reset the activation input vector C and start adding activation input from zero again.
- the interactive nature of the display of the final activation and the formation of an activation input vector through the measuring of the dwell time of a cursor on a node provides a dynamic simulation of flow networks which greatly helps a user understand the dynamics of a generalized graph structure.
- FIG. 29 illustrates a method of displaying the state of the activation vector A(t) during the N iterations (rather than only at the end of the N iterations as described with reference to FIG. 28 ).
- the spreading activation vector A is computed over N iterations, and the spreading activation vector A(t) is saved at some or all of the iterative steps (some or all value of t from 0 to N) at step 2902 .
- selected activation vectors are displayed as disk trees in time tubes having the activation level at various nodes and/or links color encoded into the planar slices which make up the time tube.
- the activation vectors at various time steps of the spreading activation algorithm may be displayed as activation bars which are coincident with the time axis of the time tube, so long as sufficient spacing in the time dimension between the planar slices exist so that activation bars do not cross into adjacent planar slices of the time tube. This is illustrated in FIG. 30 .
- a large amount of activation is added to node 3011 at time 1 .
- some of that activation has spread to nodes 3022 , 3032 , 3042 , 3052 , 3072 , 3062 , 3082 , and 3092 .
- the final activation vector A(N) is illustrated.
- the iterations chosen for display can be based upon where the largest amount of change occurred, or can be based on the phase shifts detected during the spreading activation algorithm, or of course all N ⁇ 1 intermediate activation vectors can be displayed.
- more than one activation vector may be computed and displayed.
- a web site analyst might want to display the difference between a recommended usage pattern and an observed usage pattern by spreading the same activation input vector C through two separate flow matrices M 1 and M 2 , and then displaying the difference between the resulting final activation vectors on the disk tree.
- the process of computing this difference can be illustrated on a time tube such as illustrated in FIG. 30 .
- weighted combinations of different flow matrices M 1 and M 2 may be computed and the results displayed on a time tube or disk tree such that activation bars representing activation vectors are segmented such that a user can see what part of each level of activation was contributed by which flow matrix.
- the visualization methods according to the present invention expand the capabilities of web analysis programs in the amount of data they are able to display as well as making the evolutionary patterns of web ecologies more apparent.
Abstract
Description
Claims (34)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/062,341 US6509898B2 (en) | 1998-04-17 | 1998-04-17 | Usage based methods of traversing and displaying generalized graph structures |
EP99107559A EP0950960B1 (en) | 1998-04-17 | 1999-04-15 | Usage based methods of traversing and displaying generalized graph structures |
BR9901367-3A BR9901367A (en) | 1998-04-17 | 1999-04-19 | Methods based on the use of crossing and displaying generalized graphic structures. |
JP11094099A JP4355049B2 (en) | 1998-04-17 | 1999-04-19 | USAGE BASED CIRCUIT AND DISPLAY METHOD, DEVICE AND MEDIUM FOR GENERALIZED GRAPH STRUCTURE |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/062,341 US6509898B2 (en) | 1998-04-17 | 1998-04-17 | Usage based methods of traversing and displaying generalized graph structures |
Publications (2)
Publication Number | Publication Date |
---|---|
US20020067360A1 US20020067360A1 (en) | 2002-06-06 |
US6509898B2 true US6509898B2 (en) | 2003-01-21 |
Family
ID=22041843
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/062,341 Expired - Lifetime US6509898B2 (en) | 1998-04-17 | 1998-04-17 | Usage based methods of traversing and displaying generalized graph structures |
Country Status (4)
Country | Link |
---|---|
US (1) | US6509898B2 (en) |
EP (1) | EP0950960B1 (en) |
JP (1) | JP4355049B2 (en) |
BR (1) | BR9901367A (en) |
Cited By (138)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010032332A1 (en) * | 1999-10-12 | 2001-10-18 | Ward Alan S. | Method of generating profile-optimized code |
US20020038218A1 (en) * | 2000-09-22 | 2002-03-28 | Hikmet Senay | Methods for graphically representing interactions among entities |
US20020059284A1 (en) * | 2000-10-20 | 2002-05-16 | Ran Bronstein | Method for rapid transfer of data with a multi-spline model |
US20020105552A1 (en) * | 2000-12-18 | 2002-08-08 | Lane Derek Graham | Method of navigating a collection of interconnected nodes |
US20020133516A1 (en) * | 2000-12-22 | 2002-09-19 | International Business Machines Corporation | Method and apparatus for end-to-end content publishing system using XML with an object dependency graph |
US20020165755A1 (en) * | 2001-03-29 | 2002-11-07 | Kitts Brendan J. | Method of predicting behavior of a customer at a future date and a data processing system readable medium |
US20030009368A1 (en) * | 2001-07-06 | 2003-01-09 | Kitts Brendan J. | Method of predicting a customer's business potential and a data processing system readable medium including code for the method |
US20030007002A1 (en) * | 2001-07-09 | 2003-01-09 | Yozo Hida | Tree visualization system and method based upon a compressed half-plane model of hyperbolic geometry |
US20030048266A1 (en) * | 2001-07-09 | 2003-03-13 | Samsung Electronics Co., Ltd. | Method for representing image-based rendering information in 3D scene |
US20030050909A1 (en) * | 2001-08-27 | 2003-03-13 | Mihai Preda | Ranking nodes in a graph |
US20030084187A1 (en) * | 2001-10-31 | 2003-05-01 | Myongsu Choe | Prefix aggregation algorithm for routing coordination protocol in a loosely coupled massively parallel router |
US20030132959A1 (en) * | 2002-01-16 | 2003-07-17 | Simister J. Bret | Interface engine providing a continuous user interface |
US20030195944A1 (en) * | 2002-04-12 | 2003-10-16 | Chi Ed H. | Systems and methods for assessing user success rates of accessing information in a collection of contents |
US20030222890A1 (en) * | 2002-05-31 | 2003-12-04 | David Salesin | System and method for adaptable presentations |
US20040078300A1 (en) * | 1999-01-25 | 2004-04-22 | Smith John R. | Method and apparatus for progressive information querying on proprietary data and for the progressive selling of information |
US20040080549A1 (en) * | 2000-05-31 | 2004-04-29 | Lord Robert William | Data referencing within a database graph |
US6750859B2 (en) * | 2000-06-28 | 2004-06-15 | Sun Microsystems, Inc. | Size conditioned visibility search system and method |
US20040212616A1 (en) * | 2003-04-22 | 2004-10-28 | International Business Machines Corporation | Displaying multi-ownership in a tree-map visualization |
US20040212615A1 (en) * | 2003-04-22 | 2004-10-28 | International Business Machines Corporation | Displaying arbitrary relationships in a tree-map visualization |
US20040217983A1 (en) * | 2003-04-09 | 2004-11-04 | Ken Forsse | Process for visually organizing informational concepts and relationships utilizing a matrix |
US20040245402A1 (en) * | 2003-04-14 | 2004-12-09 | Eads Space Transportation Sa | Foldable and deployable assembly of elements mounted on board a spacecraft |
US20050055330A1 (en) * | 2001-05-15 | 2005-03-10 | Britton Colin P. | Surveillance, monitoring and real-time events platform |
US20050086238A1 (en) * | 1999-05-25 | 2005-04-21 | Nevin Rocky Harry W.Iii | Method and apparatus for displaying data stored in linked nodes |
US20050093866A1 (en) * | 2003-10-31 | 2005-05-05 | Ebert Peter S. | Smart radar chart |
US20050132054A1 (en) * | 2003-12-10 | 2005-06-16 | International Business Machines Corporation | Fine-grained authorization by traversing generational relationships |
US20050166214A1 (en) * | 2002-07-29 | 2005-07-28 | Silicon Graphics, Inc. | System and method for managing graphics applications |
US20050191608A1 (en) * | 2002-09-02 | 2005-09-01 | Evolutioncode Pty Ltd. | Recalling items of informaton |
US6947937B1 (en) * | 1999-01-19 | 2005-09-20 | British Telecommunications Public Limited Company | Data selection system and method therefor |
US6954749B2 (en) | 2002-10-07 | 2005-10-11 | Metatomix, Inc. | Methods and apparatus for identifying related nodes in a directed graph having named arcs |
US20050228805A1 (en) * | 2001-05-15 | 2005-10-13 | Metatomix, Inc. | Methods and apparatus for real-time business visibility using persistent schema-less data storage |
US6973638B1 (en) * | 1998-03-12 | 2005-12-06 | International Business Machines Corporation | Execution of extended activity diagrams by code generation |
US20050283753A1 (en) * | 2003-08-07 | 2005-12-22 | Denise Ho | Alert triggers and event management in a relationship system |
US6982682B1 (en) * | 2002-07-29 | 2006-01-03 | Silicon Graphics, Inc. | System and method for managing graphics applications |
US20060036620A1 (en) * | 2002-05-03 | 2006-02-16 | Metatomix, Inc. | Methods and apparatus for visualizing relationships among triples of resource description framework (RDF) data sets |
US20060070127A1 (en) * | 2004-09-28 | 2006-03-30 | International Business Machines Corporation | Methods, systems, computer program products and data structures for hierarchical organization of data associated with security events |
US20060080312A1 (en) * | 2004-10-12 | 2006-04-13 | International Business Machines Corporation | Methods, systems and computer program products for associating records in healthcare databases with individuals |
US20060149705A1 (en) * | 2005-01-04 | 2006-07-06 | International Business Machines Corporation | Methods, systems, and computer program products for relating data in healthcare databases |
US7086012B1 (en) | 2001-12-27 | 2006-08-01 | Perttunen Cary D | Representation of weighted tree-related elements |
US20060271563A1 (en) * | 2001-05-15 | 2006-11-30 | Metatomix, Inc. | Appliance for enterprise information integration and enterprise resource interoperability platform and methods |
US20060277227A1 (en) * | 2001-05-15 | 2006-12-07 | Metatomix, Inc. | Methods and apparatus for enterprise application integration |
US20060294459A1 (en) * | 2000-12-22 | 2006-12-28 | International Business Machines Corporation | Method and apparatus for end-to-end content publishing system using xml with an object dependency graph |
US20070165045A1 (en) * | 2004-01-12 | 2007-07-19 | Allegorithmic | Method and tool for modifying a procedural map |
US20070174090A1 (en) * | 2006-01-26 | 2007-07-26 | International Business Machines Corporation | Methods, systems and computer program products for synthesizing medical procedure information in healthcare databases |
US20070174091A1 (en) * | 2006-01-26 | 2007-07-26 | International Business Machines Corporation | Methods, data structures, systems and computer program products for identifying obsure patterns in healthcare related data |
US7251687B1 (en) | 2000-06-02 | 2007-07-31 | Vignette Corporation | Method for click-stream analysis using web directory reverse categorization |
US20070185737A1 (en) * | 2006-02-07 | 2007-08-09 | International Business Machines Corporation | Methods, systems and computer program products for providing a level of anonymity to patient records/information |
US7272786B1 (en) | 2000-07-20 | 2007-09-18 | Vignette Corporation | Metadata, models, visualization and control |
US7278105B1 (en) | 2000-08-21 | 2007-10-02 | Vignette Corporation | Visualization and analysis of user clickpaths |
US20080077463A1 (en) * | 2006-09-07 | 2008-03-27 | International Business Machines Corporation | System and method for optimizing the selection, verification, and deployment of expert resources in a time of chaos |
US20080075014A1 (en) * | 2006-09-22 | 2008-03-27 | The Hong Kong Polytechnic University | Methods and apparatus for ranking a node in a network having a plurality of interconnecting nodes |
US20080109420A1 (en) * | 2001-05-15 | 2008-05-08 | Metatomix, Inc. | Methods and apparatus for querying a relational data store using schema-less queries |
US20080163123A1 (en) * | 2006-12-29 | 2008-07-03 | Bernstein Howard B | System and method for improving the navigation of complex visualizations for the visually impaired |
US20080163127A1 (en) * | 2006-12-29 | 2008-07-03 | Microsoft Corporation | Enhanced user navigation in a media environment |
US7437268B1 (en) | 2002-12-17 | 2008-10-14 | Vignette Corporation | Systems and methods for analyzing data |
US20080270435A1 (en) * | 2004-03-16 | 2008-10-30 | Turbo Data Laboratories Inc. | Method for Handling Tree-Type Data Structure, Information Processing Device, and Program |
US20080294459A1 (en) * | 2006-10-03 | 2008-11-27 | International Business Machines Corporation | Health Care Derivatives as a Result of Real Time Patient Analytics |
US20080294692A1 (en) * | 2006-10-03 | 2008-11-27 | International Business Machines Corporation | Synthetic Events For Real Time Patient Analysis |
US7461120B1 (en) | 2002-07-09 | 2008-12-02 | Vignette Corporation | Method and system for identifying a visitor at a website server by requesting additional characteristic of a visitor computer from a visitor server |
US20090024553A1 (en) * | 2006-10-03 | 2009-01-22 | International Business Machines Corporation | Automatic generation of new rules for processing synthetic events using computer-based learning processes |
US7495673B1 (en) * | 2005-06-04 | 2009-02-24 | Shankar S Srinivasan | Resource tepee |
US7512612B1 (en) | 2002-08-08 | 2009-03-31 | Spoke Software | Selecting an optimal path through a relationship graph |
US7523128B1 (en) | 2003-03-18 | 2009-04-21 | Troux Technologies | Method and system for discovering relationships |
US20090106179A1 (en) * | 2007-10-18 | 2009-04-23 | Friedlander Robert R | System and method for the longitudinal analysis of education outcomes using cohort life cycles, cluster analytics-based cohort analysis, and probablistic data schemas |
US20090115785A1 (en) * | 2007-11-01 | 2009-05-07 | Ebay Inc. | User interface framework for viewing large scale graphs on the web |
US20090132555A1 (en) * | 2007-11-15 | 2009-05-21 | Raghavendra Singh | Method for visualisation of status data in an electronic system |
US20090132232A1 (en) * | 2006-03-30 | 2009-05-21 | Pegasystems Inc. | Methods and apparatus for implementing multilingual software applications |
US20090240523A1 (en) * | 2008-03-24 | 2009-09-24 | International Business Machines Corporation | Optimizing pharmaceutical treatment plans across multiple dimensions |
US7603430B1 (en) | 2002-07-09 | 2009-10-13 | Vignette Corporation | System and method of associating events with requests |
US20090259947A1 (en) * | 2008-02-22 | 2009-10-15 | Accenture Global Services Gmbh | System for displaying a plurality of associated items in a collaborative environment |
US7627688B1 (en) | 2002-07-09 | 2009-12-01 | Vignette Corporation | Method and system for detecting gaps in a data stream |
US20090300538A1 (en) * | 2008-06-03 | 2009-12-03 | Canon Kabushiki Kaisha | Display control apparatus and display control method |
US7656405B1 (en) | 2007-05-10 | 2010-02-02 | At&T Corp. | System and method for generating circular layout graphs |
US7660869B1 (en) | 2000-08-21 | 2010-02-09 | Vignette Software, LLC | Network real estate analysis |
US7664712B1 (en) | 2005-08-05 | 2010-02-16 | Troux Technologies | Method and system for impact analysis using a data model |
US7683902B1 (en) | 2009-03-27 | 2010-03-23 | International Business Machines Corporation | Method to visualize performance data of a multi-layered state diagram |
US20100094805A1 (en) * | 2008-10-09 | 2010-04-15 | Metatomix, Inc. | User interface apparatus and methods |
US20100115445A1 (en) * | 2008-11-05 | 2010-05-06 | Savvion, Inc. | Software with Improved View of a Business Process |
US20100125833A1 (en) * | 2008-11-19 | 2010-05-20 | Sap Ag | Graphical Representation of a Java Bytecode |
US7792774B2 (en) | 2007-02-26 | 2010-09-07 | International Business Machines Corporation | System and method for deriving a hierarchical event based database optimized for analysis of chaotic events |
US20100268684A1 (en) * | 2008-01-02 | 2010-10-21 | International Business Machines Corporation | System and Method for Optimizing Federated and ETLd Databases with Considerations of Specialized Data Structures Within an Environment Having Multidimensional Constraints |
US7822710B1 (en) | 2006-05-24 | 2010-10-26 | Troux Technologies | System and method for data collection |
US7831706B1 (en) | 1999-12-30 | 2010-11-09 | Vignette Software Llc | Method of gathering information related to activity of a user and a data processing system program product |
US7830383B1 (en) | 2002-03-18 | 2010-11-09 | Perttunen Cary D | Determining related stocks based on postings of messages |
US7853611B2 (en) | 2007-02-26 | 2010-12-14 | International Business Machines Corporation | System and method for deriving a hierarchical event based database having action triggers based on inferred probabilities |
US7861151B2 (en) | 2006-12-05 | 2010-12-28 | Microsoft Corporation | Web site structure analysis |
US7890545B1 (en) | 2005-03-31 | 2011-02-15 | Troux Technologies | Method and system for a reference model for an enterprise architecture |
US20110169833A1 (en) * | 2010-01-08 | 2011-07-14 | International Business Machines Corporation | Ranking Nodes in a Graph |
US8027956B1 (en) | 2007-10-30 | 2011-09-27 | Troux Technologies | System and method for planning or monitoring system transformations |
US8185824B1 (en) * | 1998-12-09 | 2012-05-22 | Cisco Technology, Inc. | Method and apparatus providing a graphical user interface for representing and navigating hierarchical networks |
US8214877B1 (en) | 2006-05-22 | 2012-07-03 | Troux Technologies | System and method for the implementation of policies |
US8234223B1 (en) | 2005-04-28 | 2012-07-31 | Troux Technologies, Inc. | Method and system for calculating cost of an asset using a data model |
US8250525B2 (en) | 2007-03-02 | 2012-08-21 | Pegasystems Inc. | Proactive performance management for multi-user enterprise software systems |
US8335704B2 (en) | 2005-01-28 | 2012-12-18 | Pegasystems Inc. | Methods and apparatus for work management and routing |
US8346802B2 (en) | 2007-02-26 | 2013-01-01 | International Business Machines Corporation | Deriving a hierarchical event based database optimized for pharmaceutical analysis |
US20130097096A1 (en) * | 2010-05-01 | 2013-04-18 | Core Technology Limited | Process entity graphs |
US8443105B1 (en) * | 2011-12-12 | 2013-05-14 | The United States Of America As Represented By The Director, National Security Agency | Device for and method of network routing |
US20130155068A1 (en) * | 2011-12-16 | 2013-06-20 | Palo Alto Research Center Incorporated | Generating a relationship visualization for nonhomogeneous entities |
US20130166601A1 (en) * | 2010-04-30 | 2013-06-27 | Evan V. Chrapko | Systems and methods for conducting reliable assessments with connectivity information |
US8479157B2 (en) | 2004-05-26 | 2013-07-02 | Pegasystems Inc. | Methods and apparatus for integration of declarative rule-based processing with procedural programming in a digital data-processing evironment |
US8601025B1 (en) * | 2011-09-28 | 2013-12-03 | Emc Corporation | Techniques using a bidirectional graph for reporting to clients |
US8635592B1 (en) | 2011-02-08 | 2014-01-21 | Troux Technologies, Inc. | Method and system for tailoring software functionality |
US8880487B1 (en) | 2011-02-18 | 2014-11-04 | Pegasystems Inc. | Systems and methods for distributed rules processing |
US8924335B1 (en) | 2006-03-30 | 2014-12-30 | Pegasystems Inc. | Rule-based user interface conformance methods |
US8935129B1 (en) * | 2010-06-04 | 2015-01-13 | Bentley Systems, Incorporated | System and method for simplifying a graph'S topology and persevering the graph'S semantics |
US9047202B1 (en) * | 2007-04-30 | 2015-06-02 | Hewlett-Packard Development Company, L.P. | Creating a relationship tree representing relationships of graphs to enable navigation through the graphs without accessing an input data set |
US9171338B2 (en) | 2009-09-30 | 2015-10-27 | Evan V Chrapko | Determining connectivity within a community |
US9195936B1 (en) | 2011-12-30 | 2015-11-24 | Pegasystems Inc. | System and method for updating or modifying an application without manual coding |
US9264329B2 (en) | 2010-03-05 | 2016-02-16 | Evan V Chrapko | Calculating trust scores based on social graph statistics |
US9280581B1 (en) | 2013-03-12 | 2016-03-08 | Troux Technologies, Inc. | Method and system for determination of data completeness for analytic data calculations |
US20160071035A1 (en) * | 2014-09-05 | 2016-03-10 | International Business Machines Corporation | Implementing socially enabled business risk management |
US9438619B1 (en) | 2016-02-29 | 2016-09-06 | Leo M. Chan | Crowdsourcing of trustworthiness indicators |
US9443004B2 (en) | 2009-10-23 | 2016-09-13 | Leo M. Chan | Social graph data analytics |
US9454286B1 (en) | 1999-02-03 | 2016-09-27 | Cary D. Perttunen | Representing purchasable item sizes using annulus sectors |
US9578043B2 (en) | 2015-03-20 | 2017-02-21 | Ashif Mawji | Calculating a trust score |
US20170161318A1 (en) * | 2015-11-25 | 2017-06-08 | International Business Machines Corporation | Method for backfilling graph structure and articles comprising the same |
US9678719B1 (en) | 2009-03-30 | 2017-06-13 | Pegasystems Inc. | System and software for creation and modification of software |
US9679254B1 (en) | 2016-02-29 | 2017-06-13 | Www.Trustscience.Com Inc. | Extrapolating trends in trust scores |
US9721296B1 (en) | 2016-03-24 | 2017-08-01 | Www.Trustscience.Com Inc. | Learning an entity's trust model and risk tolerance to calculate a risk score |
US9740709B1 (en) | 2016-02-17 | 2017-08-22 | Www.Trustscience.Com Inc. | Searching for entities based on trust score and geography |
US9740368B1 (en) * | 2016-08-10 | 2017-08-22 | Quid, Inc. | Positioning labels on graphical visualizations of graphs |
US9891801B2 (en) | 2014-05-12 | 2018-02-13 | Sap Se | Visualization and navigation for multi-dimensional hierarchical data |
US10067853B2 (en) * | 2016-03-15 | 2018-09-04 | Ca, Inc. | Generating a directed graph representing application program execution flow from an execution trace |
US10152477B2 (en) * | 2014-03-14 | 2018-12-11 | International Business Machines Corporation | Communication method and system for accessing media data |
US10180969B2 (en) | 2017-03-22 | 2019-01-15 | Www.Trustscience.Com Inc. | Entity resolution and identity management in big, noisy, and/or unstructured data |
US20190139279A1 (en) * | 2016-06-21 | 2019-05-09 | National Institute For Materials Science | Search system, search method, and physical property database management device |
US10311106B2 (en) | 2011-12-28 | 2019-06-04 | Www.Trustscience.Com Inc. | Social graph visualization and user interface |
US10318877B2 (en) | 2010-10-19 | 2019-06-11 | International Business Machines Corporation | Cohort-based prediction of a future event |
US10417282B1 (en) | 2015-07-22 | 2019-09-17 | Wells Fargo Bank, N.A. | Entity mapping |
US10467200B1 (en) | 2009-03-12 | 2019-11-05 | Pegasystems, Inc. | Techniques for dynamic data processing |
US10469396B2 (en) | 2014-10-10 | 2019-11-05 | Pegasystems, Inc. | Event processing with enhanced throughput |
US10698647B2 (en) | 2016-07-11 | 2020-06-30 | Pegasystems Inc. | Selective sharing for collaborative application usage |
US10698599B2 (en) | 2016-06-03 | 2020-06-30 | Pegasystems, Inc. | Connecting graphical shapes using gestures |
USRE48596E1 (en) * | 2002-01-16 | 2021-06-15 | Intel Corporation | Interface engine providing a continuous user interface |
US11048488B2 (en) | 2018-08-14 | 2021-06-29 | Pegasystems, Inc. | Software code optimizer and method |
US11347797B2 (en) * | 2019-11-19 | 2022-05-31 | Bit Discovery Inc. | Asset search and discovery system using graph data structures |
US11526898B2 (en) | 2019-09-05 | 2022-12-13 | Microsoft Technology Licensing, Llc | Dynamic visualization of product usage tree based on raw telemetry data |
US11567945B1 (en) | 2020-08-27 | 2023-01-31 | Pegasystems Inc. | Customized digital content generation systems and methods |
US11985037B2 (en) | 2022-12-01 | 2024-05-14 | www.TrustScience.com | Systems and methods for conducting more reliable assessments with connectivity statistics |
Families Citing this family (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6993531B1 (en) * | 1999-02-04 | 2006-01-31 | Naas Aaron J | System and method of routine navigation |
AU1844001A (en) | 1999-11-30 | 2001-06-12 | Maxamine International Pty Ltd | Web map tool |
GB2357596A (en) * | 1999-12-20 | 2001-06-27 | Univ London | A navigation engine for assessing the quality of a trail between linked pages |
US6915484B1 (en) | 2000-08-09 | 2005-07-05 | Adobe Systems Incorporated | Text reflow in a structured document |
US7149795B2 (en) * | 2000-09-18 | 2006-12-12 | Converged Access, Inc. | Distributed quality-of-service system |
FR2817639B3 (en) * | 2000-12-01 | 2003-03-28 | Voyez Vous | METHOD AND SYSTEM FOR DYNAMIC REPRESENTATION OF A SPACE OF CHARACTERIZED OBJECTS FOR RECOMMENDING SUCH OBJECTS OR THEIR CHARACTERISTICS |
JP2002259446A (en) * | 2000-12-21 | 2002-09-13 | Xerox Corp | System and method for browsing node-link structure based on estimated degree of interest |
JP2003006224A (en) * | 2001-06-26 | 2003-01-10 | Kawasaki Heavy Ind Ltd | Method and device for automatic update of www pages |
EP1435058A4 (en) * | 2001-10-11 | 2005-12-07 | Visualsciences Llc | System, method, and computer program product for processing and visualization of information |
US7415452B1 (en) * | 2002-06-21 | 2008-08-19 | Adobe Systems Incorporated | Traversing a hierarchical layout template |
US20080201357A1 (en) * | 2003-06-27 | 2008-08-21 | Omniture, Inc. | Page Grouping for Site Traffic Analysis Reports |
US7792844B2 (en) * | 2002-06-28 | 2010-09-07 | Adobe Systems Incorporated | Capturing and presenting site visitation path data |
US8694504B2 (en) * | 2003-03-05 | 2014-04-08 | Spore, Inc. | Methods and systems for technology analysis and mapping |
US7440933B2 (en) * | 2004-06-18 | 2008-10-21 | International Business Machines Corporation | Method for facilitating problem resolution |
US20060124569A1 (en) * | 2004-12-10 | 2006-06-15 | Parkins Gary A | Alignment system and method for vertically stored objects |
US8054756B2 (en) * | 2006-09-18 | 2011-11-08 | Yahoo! Inc. | Path discovery and analytics for network data |
US8812957B2 (en) * | 2007-01-31 | 2014-08-19 | Adobe Systems Incorporated | Relevance slider in a site analysis report |
US8099491B2 (en) * | 2007-01-31 | 2012-01-17 | Adobe Systems Incorporated | Intelligent node positioning in a site analysis report |
US8694890B2 (en) * | 2007-01-31 | 2014-04-08 | Adobe Sytems Incorporated | Use of color in a site analysis report |
US8549002B2 (en) * | 2008-05-15 | 2013-10-01 | Oracle International Corporation | Cluster health indicator with dynamic load correlation |
WO2012031301A1 (en) | 2010-09-03 | 2012-03-08 | Jackson Robert Lewis Jr | Sparse dynamic selection trees |
US8495108B2 (en) * | 2010-11-30 | 2013-07-23 | International Business Machines Corporation | Virtual node subpool management |
CN104145271B (en) * | 2012-03-02 | 2017-08-15 | 国际商业机器公司 | Data display equipment, data display method |
US9799127B2 (en) * | 2014-03-03 | 2017-10-24 | Deep Node, Inc. | Displaying a live stream of events using a dynamically-constructed three-dimensional data tree |
CN105488088B (en) * | 2014-12-31 | 2019-05-07 | 哈尔滨安天科技股份有限公司 | Two-dimensional network angular distribution layout method based on tree structure |
US10191946B2 (en) * | 2015-03-11 | 2019-01-29 | International Business Machines Corporation | Answering natural language table queries through semantic table representation |
CN110516205B (en) * | 2019-07-19 | 2023-04-07 | 平安科技（深圳）有限公司 | Data structure diagram display method and device, computer equipment and storage medium |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5546529A (en) * | 1994-07-28 | 1996-08-13 | Xerox Corporation | Method and apparatus for visualization of database search results |
US5870559A (en) * | 1996-10-15 | 1999-02-09 | Mercury Interactive | Software system and associated methods for facilitating the analysis and management of web sites |
US5926180A (en) * | 1996-01-16 | 1999-07-20 | Nec Corporation | Browsing unit and storage medium recording a browsing program thereon |
-
1998
- 1998-04-17 US US09/062,341 patent/US6509898B2/en not_active Expired - Lifetime
-
1999
- 1999-04-15 EP EP99107559A patent/EP0950960B1/en not_active Expired - Lifetime
- 1999-04-19 BR BR9901367-3A patent/BR9901367A/en not_active IP Right Cessation
- 1999-04-19 JP JP11094099A patent/JP4355049B2/en not_active Expired - Lifetime
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5546529A (en) * | 1994-07-28 | 1996-08-13 | Xerox Corporation | Method and apparatus for visualization of database search results |
US5926180A (en) * | 1996-01-16 | 1999-07-20 | Nec Corporation | Browsing unit and storage medium recording a browsing program thereon |
US5870559A (en) * | 1996-10-15 | 1999-02-09 | Mercury Interactive | Software system and associated methods for facilitating the analysis and management of web sites |
Non-Patent Citations (10)
Title |
---|
"Tree Visualization with Tree-Maps: 2-d Space-Filling Approach" Ben Shneiderman, Univ. of Maryland, ACM Transactions on Graphics, vol. 11, No. 1, Jan. 1992, pp. 92-99.* * |
Carriere, Jeromy and Kazman, Rick, "Research Report: Interacting with Huge Hierarchies: Beyond Cone Trees," Proceedings of Information Visualization Symposium, Oct. 30-31, 1995, Atlanta Georgia, pp. 74-81. |
Doolittle, Sean, "WebAnalyzer-Site Management Program Helps Webmasters", PC Today, Online!, vol. 10, No. 8, Aug. 26, 1996, pp. 1-3. |
Hill, William and Holland, Jim, "Edit Wear and Read Wear," Proceedings of CHI, 1992, pp. 3-9. |
Lamping, J., et al., "The Hyperbolic Brower: A Focus + Context Technique for Visualizing Large Hierarchies," Journal of Visual Languages and Computing, GB, London, vol. 7, No. 1, 1996, pp. 33-55. |
Lamping, John and Rao, Ramana, "Laying Out and Visualizing Large Trees Using a Hyperbolic Space," Proceedings of UIST 1994, Nov., 1994, pp. 13-14. |
Mukherjea, S., et al., "Visualizing Complex Hypermedia Networks though Multiple Hierarchical Views," Conference on Human Factors in Computing Systems, US. New York, ACM, May 7, 1995, pp. 331-337. |
Mukherjea, Sougata and Foley, James D., "Visualizing the World-Wide Web with the Navigational View Builder," Computer Networks and ISDN Systems, 1995, pp. 1075-1087. |
Pitkow, James and Bharat, Krishna A., "Webviz: A Tool for World-Wide Web Access Log Analysis," Proceedings of the First International World-Wide Web Conference, May 1994, Entire article. |
Sledgewick, Robert, "Algorithms in C++," 1992, Addison Wesley, Chapters 29, 31, and 32, pp. 415-435, 451-469, 471-483. |
Cited By (280)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6973638B1 (en) * | 1998-03-12 | 2005-12-06 | International Business Machines Corporation | Execution of extended activity diagrams by code generation |
US8185824B1 (en) * | 1998-12-09 | 2012-05-22 | Cisco Technology, Inc. | Method and apparatus providing a graphical user interface for representing and navigating hierarchical networks |
US6947937B1 (en) * | 1999-01-19 | 2005-09-20 | British Telecommunications Public Limited Company | Data selection system and method therefor |
US20040078300A1 (en) * | 1999-01-25 | 2004-04-22 | Smith John R. | Method and apparatus for progressive information querying on proprietary data and for the progressive selling of information |
US9454286B1 (en) | 1999-02-03 | 2016-09-27 | Cary D. Perttunen | Representing purchasable item sizes using annulus sectors |
US9547923B2 (en) * | 1999-05-25 | 2017-01-17 | Google Inc. | Methods for generating visual data from nodes containing identify data for individuals from a set view point |
US20130127864A1 (en) * | 1999-05-25 | 2013-05-23 | Google Inc. | Methods for Generating Visual Data From Nodes Containing Identify Data for Individuals From a Set View Point |
US9530227B2 (en) * | 1999-05-25 | 2016-12-27 | Google Inc. | Methods for generating visual data from nodes containing identity data for persons from a set point of view |
US20120162230A1 (en) * | 1999-05-25 | 2012-06-28 | Google Inc. | Methods for Generating Visual Data From Nodes Containing Identify Data for Individuals From a Set View Point |
US20130127865A1 (en) * | 1999-05-25 | 2013-05-23 | Google Inc. | Methods for Generating Visual Data From Nodes Containing Identify Data for Individuals From a Set View Point |
US8019786B2 (en) * | 1999-05-25 | 2011-09-13 | Nevin Iii Rocky Harry W | Method and apparatus for displaying data stored in linked nodes |
US8799323B2 (en) | 1999-05-25 | 2014-08-05 | Google Inc. | Method and apparatus for displaying data stored in linked nodes |
US20050086238A1 (en) * | 1999-05-25 | 2005-04-21 | Nevin Rocky Harry W.Iii | Method and apparatus for displaying data stored in linked nodes |
US6922829B2 (en) * | 1999-10-12 | 2005-07-26 | Texas Instruments Incorporated | Method of generating profile-optimized code |
US20010032332A1 (en) * | 1999-10-12 | 2001-10-18 | Ward Alan S. | Method of generating profile-optimized code |
US9172761B2 (en) | 1999-12-30 | 2015-10-27 | Open Text S.A. | Method of gathering information related to activity of a user and a data processing system program product |
US7831706B1 (en) | 1999-12-30 | 2010-11-09 | Vignette Software Llc | Method of gathering information related to activity of a user and a data processing system program product |
US20110029663A1 (en) * | 1999-12-30 | 2011-02-03 | Mccullough Sean M | Method of gathering information related to activity of a user and a data processing system program product |
US7305409B2 (en) * | 2000-05-31 | 2007-12-04 | Microsoft Corporation | Data referencing within a database graph |
US20040080549A1 (en) * | 2000-05-31 | 2004-04-29 | Lord Robert William | Data referencing within a database graph |
US7392264B2 (en) * | 2000-05-31 | 2008-06-24 | Microsoft Corporation | Data referencing within a database graph |
US20050151738A1 (en) * | 2000-05-31 | 2005-07-14 | Microsoft Corporation | Data referencing within a database graph |
US9838489B2 (en) | 2000-06-02 | 2017-12-05 | Open Text Sa Ulc | Method for click-stream analysis using web directory reverse categorization |
US8341019B2 (en) | 2000-06-02 | 2012-12-25 | Open Text, S.A. | Method for click-stream analysis using web directory reverse categorization |
US7251687B1 (en) | 2000-06-02 | 2007-07-31 | Vignette Corporation | Method for click-stream analysis using web directory reverse categorization |
US7827274B1 (en) | 2000-06-02 | 2010-11-02 | Vignette Software Llc | Method for click-stream analysis using web directory reverse categorization |
US9087350B2 (en) | 2000-06-02 | 2015-07-21 | Open Text S.A. | Method for click-stream analysis using web directory reverse categorization |
US6750859B2 (en) * | 2000-06-28 | 2004-06-15 | Sun Microsystems, Inc. | Size conditioned visibility search system and method |
US7272786B1 (en) | 2000-07-20 | 2007-09-18 | Vignette Corporation | Metadata, models, visualization and control |
US8392551B2 (en) | 2000-08-21 | 2013-03-05 | Open Text S.A. | Network real estate analysis |
US7278105B1 (en) | 2000-08-21 | 2007-10-02 | Vignette Corporation | Visualization and analysis of user clickpaths |
US7660869B1 (en) | 2000-08-21 | 2010-02-09 | Vignette Software, LLC | Network real estate analysis |
US8024448B2 (en) | 2000-08-21 | 2011-09-20 | Vignette Software Llc | Network real estate analysis |
US20100153518A1 (en) * | 2000-08-21 | 2010-06-17 | Vignette Software Llc | Network real estate analysis |
US20020038218A1 (en) * | 2000-09-22 | 2002-03-28 | Hikmet Senay | Methods for graphically representing interactions among entities |
US7219307B2 (en) * | 2000-09-22 | 2007-05-15 | Jpmorgan Chase Bank | Methods for graphically representing interactions among entities |
US20020059284A1 (en) * | 2000-10-20 | 2002-05-16 | Ran Bronstein | Method for rapid transfer of data with a multi-spline model |
US6931604B2 (en) * | 2000-12-18 | 2005-08-16 | Derek Graham Lane | Method of navigating a collection of interconnected nodes |
US20020105552A1 (en) * | 2000-12-18 | 2002-08-08 | Lane Derek Graham | Method of navigating a collection of interconnected nodes |
US7076728B2 (en) * | 2000-12-22 | 2006-07-11 | International Business Machines Corporation | Method and apparatus for end-to-end content publishing system using XML with an object dependency graph |
US7409634B2 (en) | 2000-12-22 | 2008-08-05 | International Business Machines Corporation | Method and apparatus for end-to-end content publishing system using XML with an object dependency graph |
US20020133516A1 (en) * | 2000-12-22 | 2002-09-19 | International Business Machines Corporation | Method and apparatus for end-to-end content publishing system using XML with an object dependency graph |
US20060294459A1 (en) * | 2000-12-22 | 2006-12-28 | International Business Machines Corporation | Method and apparatus for end-to-end content publishing system using xml with an object dependency graph |
US20020165755A1 (en) * | 2001-03-29 | 2002-11-07 | Kitts Brendan J. | Method of predicting behavior of a customer at a future date and a data processing system readable medium |
US20080109420A1 (en) * | 2001-05-15 | 2008-05-08 | Metatomix, Inc. | Methods and apparatus for querying a relational data store using schema-less queries |
US7640239B2 (en) | 2001-05-15 | 2009-12-29 | Metatomix, Inc. | Methods and apparatus for real-time business visibility using persistent schema-less data storage |
US20080109485A1 (en) * | 2001-05-15 | 2008-05-08 | Metatomix, Inc. | Methods and apparatus for enterprise application integration |
US8335792B2 (en) | 2001-05-15 | 2012-12-18 | Britton Colin P | Methods and apparatus for enterprise application integration |
US20060271563A1 (en) * | 2001-05-15 | 2006-11-30 | Metatomix, Inc. | Appliance for enterprise information integration and enterprise resource interoperability platform and methods |
US20060277227A1 (en) * | 2001-05-15 | 2006-12-07 | Metatomix, Inc. | Methods and apparatus for enterprise application integration |
US7831604B2 (en) | 2001-05-15 | 2010-11-09 | Britton Colin P | Methods and apparatus for enterprise application integration |
US8572059B2 (en) | 2001-05-15 | 2013-10-29 | Colin P. Britton | Surveillance, monitoring and real-time events platform |
US20050055330A1 (en) * | 2001-05-15 | 2005-03-10 | Britton Colin P. | Surveillance, monitoring and real-time events platform |
US8412720B2 (en) | 2001-05-15 | 2013-04-02 | Colin P. Britton | Methods and apparatus for querying a relational data store using schema-less queries |
US7890517B2 (en) | 2001-05-15 | 2011-02-15 | Metatomix, Inc. | Appliance for enterprise information integration and enterprise resource interoperability platform and methods |
US20050228805A1 (en) * | 2001-05-15 | 2005-10-13 | Metatomix, Inc. | Methods and apparatus for real-time business visibility using persistent schema-less data storage |
US20030009368A1 (en) * | 2001-07-06 | 2003-01-09 | Kitts Brendan J. | Method of predicting a customer's business potential and a data processing system readable medium including code for the method |
US7620913B2 (en) | 2001-07-09 | 2009-11-17 | Business Objects Americas | Tree visualization system and method based upon a compressed half-plane model of hyperbolic geometry |
US7148896B2 (en) * | 2001-07-09 | 2006-12-12 | Samsung Electronics Co., Ltd. | Method for representing image-based rendering information in 3D scene |
US6901555B2 (en) * | 2001-07-09 | 2005-05-31 | Inxight Software, Inc. | Tree visualization system and method based upon a compressed half-plane model of hyperbolic geometry |
US20030007002A1 (en) * | 2001-07-09 | 2003-01-09 | Yozo Hida | Tree visualization system and method based upon a compressed half-plane model of hyperbolic geometry |
US20030048266A1 (en) * | 2001-07-09 | 2003-03-13 | Samsung Electronics Co., Ltd. | Method for representing image-based rendering information in 3D scene |
US20030050909A1 (en) * | 2001-08-27 | 2003-03-13 | Mihai Preda | Ranking nodes in a graph |
US7076483B2 (en) * | 2001-08-27 | 2006-07-11 | Xyleme Sa | Ranking nodes in a graph |
US20030084187A1 (en) * | 2001-10-31 | 2003-05-01 | Myongsu Choe | Prefix aggregation algorithm for routing coordination protocol in a loosely coupled massively parallel router |
US7814185B2 (en) * | 2001-10-31 | 2010-10-12 | Samsung Electronics Co., Ltd. | Prefix aggregation algorithm for routing coordination protocol in a loosely coupled massively parallel router |
US7086012B1 (en) | 2001-12-27 | 2006-08-01 | Perttunen Cary D | Representation of weighted tree-related elements |
US6957392B2 (en) * | 2002-01-16 | 2005-10-18 | Laszlo Systems, Inc. | Interface engine providing a continuous user interface |
US7954066B2 (en) * | 2002-01-16 | 2011-05-31 | Laszlo Systems, Inc. | Interface engine providing a continuous user interface |
US20030132959A1 (en) * | 2002-01-16 | 2003-07-17 | Simister J. Bret | Interface engine providing a continuous user interface |
US20060026526A1 (en) * | 2002-01-16 | 2006-02-02 | Simister J B | Interface engine providing a continuous user interface |
USRE48596E1 (en) * | 2002-01-16 | 2021-06-15 | Intel Corporation | Interface engine providing a continuous user interface |
US8456473B1 (en) | 2002-03-18 | 2013-06-04 | Cary D. Perttunen | Graphical representation of financial information |
US8659605B1 (en) | 2002-03-18 | 2014-02-25 | Cary D. Perttunen | Graphical representation of financial information |
US9135659B1 (en) | 2002-03-18 | 2015-09-15 | Cary D. Perttunen | Graphical representation of financial information |
US7928982B1 (en) | 2002-03-18 | 2011-04-19 | Perttunen Cary D | Visible representation of stock market indices |
US7830383B1 (en) | 2002-03-18 | 2010-11-09 | Perttunen Cary D | Determining related stocks based on postings of messages |
US8228332B1 (en) | 2002-03-18 | 2012-07-24 | Perttunen Cary D | Visible representation of a user's watch list of stocks and stock market indices |
US20030195944A1 (en) * | 2002-04-12 | 2003-10-16 | Chi Ed H. | Systems and methods for assessing user success rates of accessing information in a collection of contents |
US7203899B2 (en) * | 2002-04-12 | 2007-04-10 | Xerox Corporation | Systems and methods for assessing user success rates of accessing information in a collection of contents |
US20060036620A1 (en) * | 2002-05-03 | 2006-02-16 | Metatomix, Inc. | Methods and apparatus for visualizing relationships among triples of resource description framework (RDF) data sets |
US20030222890A1 (en) * | 2002-05-31 | 2003-12-04 | David Salesin | System and method for adaptable presentations |
US7461120B1 (en) | 2002-07-09 | 2008-12-02 | Vignette Corporation | Method and system for identifying a visitor at a website server by requesting additional characteristic of a visitor computer from a visitor server |
US9021022B2 (en) | 2002-07-09 | 2015-04-28 | Open Text S.A. | Method and system for identifying website visitors |
US20090083269A1 (en) * | 2002-07-09 | 2009-03-26 | Vignette Corporation | Method and system for identifying website visitors |
US7895355B2 (en) | 2002-07-09 | 2011-02-22 | Vignette Software Llc | Method and system for detecting gaps in a data stream |
US8578014B2 (en) | 2002-07-09 | 2013-11-05 | Open Text S.A. | System and method of associating events with requests |
US8073927B2 (en) | 2002-07-09 | 2011-12-06 | Vignette Software Llc | System and method of associating events with requests |
US10999384B2 (en) | 2002-07-09 | 2021-05-04 | Open Text Sa Ulc | Method and system for identifying website visitors |
US20100058158A1 (en) * | 2002-07-09 | 2010-03-04 | Vignette Corporation | Method and system for detecting gaps in a data stream |
US20100049791A1 (en) * | 2002-07-09 | 2010-02-25 | Vignette Corporation | System and method of associating events with requests |
US8291040B2 (en) | 2002-07-09 | 2012-10-16 | Open Text, S.A. | System and method of associating events with requests |
US7627688B1 (en) | 2002-07-09 | 2009-12-01 | Vignette Corporation | Method and system for detecting gaps in a data stream |
US8386561B2 (en) | 2002-07-09 | 2013-02-26 | Open Text S.A. | Method and system for identifying website visitors |
US9936032B2 (en) | 2002-07-09 | 2018-04-03 | Open Text Sa Ulc | Method and system for identifying website visitors |
US7603430B1 (en) | 2002-07-09 | 2009-10-13 | Vignette Corporation | System and method of associating events with requests |
US7140024B2 (en) | 2002-07-29 | 2006-11-21 | Silicon Graphics, Inc. | System and method for managing graphics applications |
US6982682B1 (en) * | 2002-07-29 | 2006-01-03 | Silicon Graphics, Inc. | System and method for managing graphics applications |
US8441490B1 (en) | 2002-07-29 | 2013-05-14 | Rpx Corporation | System and method for managing graphics applications |
US20050166214A1 (en) * | 2002-07-29 | 2005-07-28 | Silicon Graphics, Inc. | System and method for managing graphics applications |
US7512612B1 (en) | 2002-08-08 | 2009-03-31 | Spoke Software | Selecting an optimal path through a relationship graph |
US7539697B1 (en) | 2002-08-08 | 2009-05-26 | Spoke Software | Creation and maintenance of social relationship network graphs |
US8523575B2 (en) * | 2002-09-02 | 2013-09-03 | Nextthinksoft Pty Ltd. | Recalling items of information |
US20050191608A1 (en) * | 2002-09-02 | 2005-09-01 | Evolutioncode Pty Ltd. | Recalling items of informaton |
US6954749B2 (en) | 2002-10-07 | 2005-10-11 | Metatomix, Inc. | Methods and apparatus for identifying related nodes in a directed graph having named arcs |
US7613712B2 (en) | 2002-10-07 | 2009-11-03 | Metatomix, Inc. | Methods and apparatus for identifying related nodes in a directed graph having named arcs |
US20070198454A1 (en) * | 2002-10-07 | 2007-08-23 | Metatomix, Inc. | Methods and apparatus for identifying related nodes in a directed graph having named arcs |
US7437268B1 (en) | 2002-12-17 | 2008-10-14 | Vignette Corporation | Systems and methods for analyzing data |
US7558790B1 (en) * | 2003-03-18 | 2009-07-07 | Troux Technologies | Method and system for querying an applied data model |
US7523128B1 (en) | 2003-03-18 | 2009-04-21 | Troux Technologies | Method and system for discovering relationships |
US7698683B1 (en) | 2003-03-18 | 2010-04-13 | Troux Technologies | Adaptive system for dynamic object-oriented schemas |
US20040217983A1 (en) * | 2003-04-09 | 2004-11-04 | Ken Forsse | Process for visually organizing informational concepts and relationships utilizing a matrix |
US20040245402A1 (en) * | 2003-04-14 | 2004-12-09 | Eads Space Transportation Sa | Foldable and deployable assembly of elements mounted on board a spacecraft |
US20040212616A1 (en) * | 2003-04-22 | 2004-10-28 | International Business Machines Corporation | Displaying multi-ownership in a tree-map visualization |
US8077178B2 (en) * | 2003-04-22 | 2011-12-13 | International Business Machines Corporation | Displaying multi-ownership in a tree-map visualization |
US20090007022A1 (en) * | 2003-04-22 | 2009-01-01 | International Business Machines Corporation | Displaying multi-ownership in a tree-map visualization |
US20040212615A1 (en) * | 2003-04-22 | 2004-10-28 | International Business Machines Corporation | Displaying arbitrary relationships in a tree-map visualization |
US7427987B2 (en) * | 2003-04-22 | 2008-09-23 | International Business Machines Corporation | Displaying multi-ownership in a tree-map visualization |
US7605813B2 (en) * | 2003-04-22 | 2009-10-20 | International Business Machines Corporation | Displaying arbitrary relationships in a tree-map visualization |
US20050283753A1 (en) * | 2003-08-07 | 2005-12-22 | Denise Ho | Alert triggers and event management in a relationship system |
US20050093866A1 (en) * | 2003-10-31 | 2005-05-05 | Ebert Peter S. | Smart radar chart |
US7268782B2 (en) * | 2003-10-31 | 2007-09-11 | Sap Aktiengesellschaft | Smart radar chart |
US20080222719A1 (en) * | 2003-12-10 | 2008-09-11 | International Business Machines Corporation | Fine-Grained Authorization by Traversing Generational Relationships |
US20050132054A1 (en) * | 2003-12-10 | 2005-06-16 | International Business Machines Corporation | Fine-grained authorization by traversing generational relationships |
US20070165045A1 (en) * | 2004-01-12 | 2007-07-19 | Allegorithmic | Method and tool for modifying a procedural map |
US20080270435A1 (en) * | 2004-03-16 | 2008-10-30 | Turbo Data Laboratories Inc. | Method for Handling Tree-Type Data Structure, Information Processing Device, and Program |
US7627604B2 (en) * | 2004-03-16 | 2009-12-01 | Turbo Data Laboratories, Inc. | Method for handling tree-type data structure, information processing device, and program |
US8479157B2 (en) | 2004-05-26 | 2013-07-02 | Pegasystems Inc. | Methods and apparatus for integration of declarative rule-based processing with procedural programming in a digital data-processing evironment |
US8959480B2 (en) | 2004-05-26 | 2015-02-17 | Pegasystems Inc. | Methods and apparatus for integration of declarative rule-based processing with procedural programming in a digital data-processing environment |
US8782780B2 (en) | 2004-09-28 | 2014-07-15 | International Business Machines Corporation | Hierarchical organization of data associated with events |
US8131472B2 (en) | 2004-09-28 | 2012-03-06 | International Business Machines Corporation | Methods for hierarchical organization of data associated with medical events in databases |
US20060070127A1 (en) * | 2004-09-28 | 2006-03-30 | International Business Machines Corporation | Methods, systems, computer program products and data structures for hierarchical organization of data associated with security events |
US20060069514A1 (en) * | 2004-09-28 | 2006-03-30 | International Business Machines Corporation | Methods, systems, computer program products and data structures for hierarchical organization of data associated with medical events in databases |
US20060080312A1 (en) * | 2004-10-12 | 2006-04-13 | International Business Machines Corporation | Methods, systems and computer program products for associating records in healthcare databases with individuals |
US8892571B2 (en) | 2004-10-12 | 2014-11-18 | International Business Machines Corporation | Systems for associating records in healthcare database with individuals |
US20070299697A1 (en) * | 2004-10-12 | 2007-12-27 | Friedlander Robert R | Methods for Associating Records in Healthcare Databases with Individuals |
US8495069B2 (en) | 2004-10-12 | 2013-07-23 | International Business Machines Corporation | Associating records in healthcare databases with individuals |
US9230060B2 (en) | 2004-10-12 | 2016-01-05 | International Business Machines Corporation | Associating records in healthcare databases with individuals |
US20070299691A1 (en) * | 2005-01-04 | 2007-12-27 | Friedlander Robert R | Systems and Computer Program Products for Relating Data in Healthcare Databases |
US8983951B2 (en) | 2005-01-04 | 2015-03-17 | International Business Machines Corporation | Techniques for relating data in healthcare databases |
US7580922B2 (en) | 2005-01-04 | 2009-08-25 | International Business Machines Corporation | Methods for relating data in healthcare databases |
US20060149705A1 (en) * | 2005-01-04 | 2006-07-06 | International Business Machines Corporation | Methods, systems, and computer program products for relating data in healthcare databases |
US8335704B2 (en) | 2005-01-28 | 2012-12-18 | Pegasystems Inc. | Methods and apparatus for work management and routing |
US7890545B1 (en) | 2005-03-31 | 2011-02-15 | Troux Technologies | Method and system for a reference model for an enterprise architecture |
US8234223B1 (en) | 2005-04-28 | 2012-07-31 | Troux Technologies, Inc. | Method and system for calculating cost of an asset using a data model |
US7495673B1 (en) * | 2005-06-04 | 2009-02-24 | Shankar S Srinivasan | Resource tepee |
US7664712B1 (en) | 2005-08-05 | 2010-02-16 | Troux Technologies | Method and system for impact analysis using a data model |
US8200501B2 (en) | 2006-01-26 | 2012-06-12 | International Business Machines Corporation | Methods, systems and computer program products for synthesizing medical procedure information in healthcare databases |
US20070174091A1 (en) * | 2006-01-26 | 2007-07-26 | International Business Machines Corporation | Methods, data structures, systems and computer program products for identifying obsure patterns in healthcare related data |
US20070174090A1 (en) * | 2006-01-26 | 2007-07-26 | International Business Machines Corporation | Methods, systems and computer program products for synthesizing medical procedure information in healthcare databases |
US20070185737A1 (en) * | 2006-02-07 | 2007-08-09 | International Business Machines Corporation | Methods, systems and computer program products for providing a level of anonymity to patient records/information |
US8566113B2 (en) | 2006-02-07 | 2013-10-22 | International Business Machines Corporation | Methods, systems and computer program products for providing a level of anonymity to patient records/information |
US10838569B2 (en) | 2006-03-30 | 2020-11-17 | Pegasystems Inc. | Method and apparatus for user interface non-conformance detection and correction |
US8924335B1 (en) | 2006-03-30 | 2014-12-30 | Pegasystems Inc. | Rule-based user interface conformance methods |
US20090132232A1 (en) * | 2006-03-30 | 2009-05-21 | Pegasystems Inc. | Methods and apparatus for implementing multilingual software applications |
US9658735B2 (en) | 2006-03-30 | 2017-05-23 | Pegasystems Inc. | Methods and apparatus for user interface optimization |
US8214877B1 (en) | 2006-05-22 | 2012-07-03 | Troux Technologies | System and method for the implementation of policies |
US7822710B1 (en) | 2006-05-24 | 2010-10-26 | Troux Technologies | System and method for data collection |
US9202184B2 (en) | 2006-09-07 | 2015-12-01 | International Business Machines Corporation | Optimizing the selection, verification, and deployment of expert resources in a time of chaos |
US20080077463A1 (en) * | 2006-09-07 | 2008-03-27 | International Business Machines Corporation | System and method for optimizing the selection, verification, and deployment of expert resources in a time of chaos |
US20080075014A1 (en) * | 2006-09-22 | 2008-03-27 | The Hong Kong Polytechnic University | Methods and apparatus for ranking a node in a network having a plurality of interconnecting nodes |
US7688748B2 (en) * | 2006-09-22 | 2010-03-30 | The Hong Kong Polytechnic University | Methods and apparatus for ranking a node in a network having a plurality of interconnecting nodes |
US8055603B2 (en) | 2006-10-03 | 2011-11-08 | International Business Machines Corporation | Automatic generation of new rules for processing synthetic events using computer-based learning processes |
US20090024553A1 (en) * | 2006-10-03 | 2009-01-22 | International Business Machines Corporation | Automatic generation of new rules for processing synthetic events using computer-based learning processes |
US8145582B2 (en) | 2006-10-03 | 2012-03-27 | International Business Machines Corporation | Synthetic events for real time patient analysis |
US20080294459A1 (en) * | 2006-10-03 | 2008-11-27 | International Business Machines Corporation | Health Care Derivatives as a Result of Real Time Patient Analytics |
US20080294692A1 (en) * | 2006-10-03 | 2008-11-27 | International Business Machines Corporation | Synthetic Events For Real Time Patient Analysis |
US7861151B2 (en) | 2006-12-05 | 2010-12-28 | Microsoft Corporation | Web site structure analysis |
US8504922B2 (en) | 2006-12-29 | 2013-08-06 | Microsoft Corporation | Enhanced user navigation to previously visited areas in a media environment |
US20080163123A1 (en) * | 2006-12-29 | 2008-07-03 | Bernstein Howard B | System and method for improving the navigation of complex visualizations for the visually impaired |
US20080163127A1 (en) * | 2006-12-29 | 2008-07-03 | Microsoft Corporation | Enhanced user navigation in a media environment |
US7765496B2 (en) | 2006-12-29 | 2010-07-27 | International Business Machines Corporation | System and method for improving the navigation of complex visualizations for the visually impaired |
US8135740B2 (en) | 2007-02-26 | 2012-03-13 | International Business Machines Corporation | Deriving a hierarchical event based database having action triggers based on inferred probabilities |
US7853611B2 (en) | 2007-02-26 | 2010-12-14 | International Business Machines Corporation | System and method for deriving a hierarchical event based database having action triggers based on inferred probabilities |
US7792774B2 (en) | 2007-02-26 | 2010-09-07 | International Business Machines Corporation | System and method for deriving a hierarchical event based database optimized for analysis of chaotic events |
US20110071975A1 (en) * | 2007-02-26 | 2011-03-24 | International Business Machines Corporation | Deriving a Hierarchical Event Based Database Having Action Triggers Based on Inferred Probabilities |
US8346802B2 (en) | 2007-02-26 | 2013-01-01 | International Business Machines Corporation | Deriving a hierarchical event based database optimized for pharmaceutical analysis |
US9189361B2 (en) | 2007-03-02 | 2015-11-17 | Pegasystems Inc. | Proactive performance management for multi-user enterprise software systems |
US8250525B2 (en) | 2007-03-02 | 2012-08-21 | Pegasystems Inc. | Proactive performance management for multi-user enterprise software systems |
US9047202B1 (en) * | 2007-04-30 | 2015-06-02 | Hewlett-Packard Development Company, L.P. | Creating a relationship tree representing relationships of graphs to enable navigation through the graphs without accessing an input data set |
US7656405B1 (en) | 2007-05-10 | 2010-02-02 | At&T Corp. | System and method for generating circular layout graphs |
US20090106179A1 (en) * | 2007-10-18 | 2009-04-23 | Friedlander Robert R | System and method for the longitudinal analysis of education outcomes using cohort life cycles, cluster analytics-based cohort analysis, and probablistic data schemas |
US7930262B2 (en) | 2007-10-18 | 2011-04-19 | International Business Machines Corporation | System and method for the longitudinal analysis of education outcomes using cohort life cycles, cluster analytics-based cohort analysis, and probabilistic data schemas |
US8027956B1 (en) | 2007-10-30 | 2011-09-27 | Troux Technologies | System and method for planning or monitoring system transformations |
US9947119B2 (en) | 2007-11-01 | 2018-04-17 | Ebay Inc. | User interface framework for viewing large scale graphs on the web |
US8823709B2 (en) * | 2007-11-01 | 2014-09-02 | Ebay Inc. | User interface framework for viewing large scale graphs on the web |
US20090115785A1 (en) * | 2007-11-01 | 2009-05-07 | Ebay Inc. | User interface framework for viewing large scale graphs on the web |
US7788280B2 (en) | 2007-11-15 | 2010-08-31 | International Business Machines Corporation | Method for visualisation of status data in an electronic system |
US20090132555A1 (en) * | 2007-11-15 | 2009-05-21 | Raghavendra Singh | Method for visualisation of status data in an electronic system |
US20100268684A1 (en) * | 2008-01-02 | 2010-10-21 | International Business Machines Corporation | System and Method for Optimizing Federated and ETLd Databases with Considerations of Specialized Data Structures Within an Environment Having Multidimensional Constraints |
US8712955B2 (en) | 2008-01-02 | 2014-04-29 | International Business Machines Corporation | Optimizing federated and ETL'd databases with considerations of specialized data structures within an environment having multidimensional constraint |
US20090259947A1 (en) * | 2008-02-22 | 2009-10-15 | Accenture Global Services Gmbh | System for displaying a plurality of associated items in a collaborative environment |
US9208262B2 (en) * | 2008-02-22 | 2015-12-08 | Accenture Global Services Limited | System for displaying a plurality of associated items in a collaborative environment |
US20090240523A1 (en) * | 2008-03-24 | 2009-09-24 | International Business Machines Corporation | Optimizing pharmaceutical treatment plans across multiple dimensions |
US8121858B2 (en) | 2008-03-24 | 2012-02-21 | International Business Machines Corporation | Optimizing pharmaceutical treatment plans across multiple dimensions |
US20090300538A1 (en) * | 2008-06-03 | 2009-12-03 | Canon Kabushiki Kaisha | Display control apparatus and display control method |
US9105222B2 (en) * | 2008-06-03 | 2015-08-11 | Canon Kabushiki Kaisha | Display control apparatus and display control method |
US10481878B2 (en) | 2008-10-09 | 2019-11-19 | Objectstore, Inc. | User interface apparatus and methods |
US20100094805A1 (en) * | 2008-10-09 | 2010-04-15 | Metatomix, Inc. | User interface apparatus and methods |
US20170091679A1 (en) * | 2008-11-05 | 2017-03-30 | Aurea Software, Inc. | Software with Improved View of a Business Process |
US8832580B2 (en) * | 2008-11-05 | 2014-09-09 | Aurea Software, Inc. | Software with improved view of a business process |
US9875453B2 (en) * | 2008-11-05 | 2018-01-23 | Aurea Software, Inc. | System to construct an improved view of a process |
US20100115445A1 (en) * | 2008-11-05 | 2010-05-06 | Savvion, Inc. | Software with Improved View of a Business Process |
US9552563B2 (en) * | 2008-11-05 | 2017-01-24 | Aurea Software, Inc. | System to construct an improved view of a process |
US20150006238A1 (en) * | 2008-11-05 | 2015-01-01 | Aurea Software, Inc. | Software with Improved View of Business Process |
US11687859B2 (en) * | 2008-11-05 | 2023-06-27 | Aurea Software, Inc. | Software with improved view of a business process |
US20100125833A1 (en) * | 2008-11-19 | 2010-05-20 | Sap Ag | Graphical Representation of a Java Bytecode |
US8826233B2 (en) * | 2008-11-19 | 2014-09-02 | Sap Ag | Graphical representation of a JAVA bytecode |
US10467200B1 (en) | 2009-03-12 | 2019-11-05 | Pegasystems, Inc. | Techniques for dynamic data processing |
US7683902B1 (en) | 2009-03-27 | 2010-03-23 | International Business Machines Corporation | Method to visualize performance data of a multi-layered state diagram |
US9678719B1 (en) | 2009-03-30 | 2017-06-13 | Pegasystems Inc. | System and software for creation and modification of software |
US9460475B2 (en) | 2009-09-30 | 2016-10-04 | Evan V Chrapko | Determining connectivity within a community |
US11323347B2 (en) | 2009-09-30 | 2022-05-03 | Www.Trustscience.Com Inc. | Systems and methods for social graph data analytics to determine connectivity within a community |
US10127618B2 (en) | 2009-09-30 | 2018-11-13 | Www.Trustscience.Com Inc. | Determining connectivity within a community |
US11968105B2 (en) | 2009-09-30 | 2024-04-23 | Www.Trustscience.Com Inc. | Systems and methods for social graph data analytics to determine connectivity within a community |
US9171338B2 (en) | 2009-09-30 | 2015-10-27 | Evan V Chrapko | Determining connectivity within a community |
US9747650B2 (en) | 2009-09-30 | 2017-08-29 | Www.Trustscience.Com Inc. | Determining connectivity within a community |
US9443004B2 (en) | 2009-10-23 | 2016-09-13 | Leo M. Chan | Social graph data analytics |
US10348586B2 (en) | 2009-10-23 | 2019-07-09 | Www.Trustscience.Com Inc. | Parallel computatonal framework and application server for determining path connectivity |
US10187277B2 (en) | 2009-10-23 | 2019-01-22 | Www.Trustscience.Com Inc. | Scoring using distributed database with encrypted communications for credit-granting and identification verification |
US10812354B2 (en) | 2009-10-23 | 2020-10-20 | Www.Trustscience.Com Inc. | Parallel computational framework and application server for determining path connectivity |
US11665072B2 (en) | 2009-10-23 | 2023-05-30 | Www.Trustscience.Com Inc. | Parallel computational framework and application server for determining path connectivity |
US8681155B2 (en) | 2010-01-08 | 2014-03-25 | International Business Machines Corporation | Ranking nodes in a graph |
US8456472B2 (en) | 2010-01-08 | 2013-06-04 | International Business Machines Corporation | Ranking nodes in a graph |
US20110169833A1 (en) * | 2010-01-08 | 2011-07-14 | International Business Machines Corporation | Ranking Nodes in a Graph |
US10887177B2 (en) | 2010-03-05 | 2021-01-05 | Www.Trustscience.Com Inc. | Calculating trust scores based on social graph statistics |
US11546223B2 (en) | 2010-03-05 | 2023-01-03 | Www.Trustscience.Com Inc. | Systems and methods for conducting more reliable assessments with connectivity statistics |
US10079732B2 (en) | 2010-03-05 | 2018-09-18 | Www.Trustscience.Com Inc. | Calculating trust scores based on social graph statistics |
US9264329B2 (en) | 2010-03-05 | 2016-02-16 | Evan V Chrapko | Calculating trust scores based on social graph statistics |
US20130166601A1 (en) * | 2010-04-30 | 2013-06-27 | Evan V. Chrapko | Systems and methods for conducting reliable assessments with connectivity information |
US9922134B2 (en) * | 2010-04-30 | 2018-03-20 | Www.Trustscience.Com Inc. | Assessing and scoring people, businesses, places, things, and brands |
US20130097096A1 (en) * | 2010-05-01 | 2013-04-18 | Core Technology Limited | Process entity graphs |
US8935129B1 (en) * | 2010-06-04 | 2015-01-13 | Bentley Systems, Incorporated | System and method for simplifying a graph'S topology and persevering the graph'S semantics |
US10318877B2 (en) | 2010-10-19 | 2019-06-11 | International Business Machines Corporation | Cohort-based prediction of a future event |
US8635592B1 (en) | 2011-02-08 | 2014-01-21 | Troux Technologies, Inc. | Method and system for tailoring software functionality |
US9270743B2 (en) | 2011-02-18 | 2016-02-23 | Pegasystems Inc. | Systems and methods for distributed rules processing |
US8880487B1 (en) | 2011-02-18 | 2014-11-04 | Pegasystems Inc. | Systems and methods for distributed rules processing |
US8601025B1 (en) * | 2011-09-28 | 2013-12-03 | Emc Corporation | Techniques using a bidirectional graph for reporting to clients |
US8443105B1 (en) * | 2011-12-12 | 2013-05-14 | The United States Of America As Represented By The Director, National Security Agency | Device for and method of network routing |
US9721039B2 (en) * | 2011-12-16 | 2017-08-01 | Palo Alto Research Center Incorporated | Generating a relationship visualization for nonhomogeneous entities |
US20130155068A1 (en) * | 2011-12-16 | 2013-06-20 | Palo Alto Research Center Incorporated | Generating a relationship visualization for nonhomogeneous entities |
US10311106B2 (en) | 2011-12-28 | 2019-06-04 | Www.Trustscience.Com Inc. | Social graph visualization and user interface |
US9195936B1 (en) | 2011-12-30 | 2015-11-24 | Pegasystems Inc. | System and method for updating or modifying an application without manual coding |
US10572236B2 (en) | 2011-12-30 | 2020-02-25 | Pegasystems, Inc. | System and method for updating or modifying an application without manual coding |
US9280581B1 (en) | 2013-03-12 | 2016-03-08 | Troux Technologies, Inc. | Method and system for determination of data completeness for analytic data calculations |
US10152477B2 (en) * | 2014-03-14 | 2018-12-11 | International Business Machines Corporation | Communication method and system for accessing media data |
US9891801B2 (en) | 2014-05-12 | 2018-02-13 | Sap Se | Visualization and navigation for multi-dimensional hierarchical data |
US20160071035A1 (en) * | 2014-09-05 | 2016-03-10 | International Business Machines Corporation | Implementing socially enabled business risk management |
US11057313B2 (en) | 2014-10-10 | 2021-07-06 | Pegasystems Inc. | Event processing with enhanced throughput |
US10469396B2 (en) | 2014-10-10 | 2019-11-05 | Pegasystems, Inc. | Event processing with enhanced throughput |
US11900479B2 (en) | 2015-03-20 | 2024-02-13 | Www.Trustscience.Com Inc. | Calculating a trust score |
US9578043B2 (en) | 2015-03-20 | 2017-02-21 | Ashif Mawji | Calculating a trust score |
US10380703B2 (en) | 2015-03-20 | 2019-08-13 | Www.Trustscience.Com Inc. | Calculating a trust score |
US10417282B1 (en) | 2015-07-22 | 2019-09-17 | Wells Fargo Bank, N.A. | Entity mapping |
US11294960B1 (en) | 2015-07-22 | 2022-04-05 | Wells Fargo Bank, N.A. | Entity mapping |
US10114856B2 (en) * | 2015-11-25 | 2018-10-30 | International Business Machines Corporation | Method for backfilling graph structure and articles comprising the same |
US20170161318A1 (en) * | 2015-11-25 | 2017-06-08 | International Business Machines Corporation | Method for backfilling graph structure and articles comprising the same |
US11386129B2 (en) | 2016-02-17 | 2022-07-12 | Www.Trustscience.Com Inc. | Searching for entities based on trust score and geography |
US9740709B1 (en) | 2016-02-17 | 2017-08-22 | Www.Trustscience.Com Inc. | Searching for entities based on trust score and geography |
US9679254B1 (en) | 2016-02-29 | 2017-06-13 | Www.Trustscience.Com Inc. | Extrapolating trends in trust scores |
US9438619B1 (en) | 2016-02-29 | 2016-09-06 | Leo M. Chan | Crowdsourcing of trustworthiness indicators |
US9584540B1 (en) | 2016-02-29 | 2017-02-28 | Leo M. Chan | Crowdsourcing of trustworthiness indicators |
US10055466B2 (en) | 2016-02-29 | 2018-08-21 | Www.Trustscience.Com Inc. | Extrapolating trends in trust scores |
US11341145B2 (en) | 2016-02-29 | 2022-05-24 | Www.Trustscience.Com Inc. | Extrapolating trends in trust scores |
US10067853B2 (en) * | 2016-03-15 | 2018-09-04 | Ca, Inc. | Generating a directed graph representing application program execution flow from an execution trace |
US10121115B2 (en) | 2016-03-24 | 2018-11-06 | Www.Trustscience.Com Inc. | Learning an entity's trust model and risk tolerance to calculate its risk-taking score |
US11640569B2 (en) | 2016-03-24 | 2023-05-02 | Www.Trustscience.Com Inc. | Learning an entity's trust model and risk tolerance to calculate its risk-taking score |
US9721296B1 (en) | 2016-03-24 | 2017-08-01 | Www.Trustscience.Com Inc. | Learning an entity's trust model and risk tolerance to calculate a risk score |
US10698599B2 (en) | 2016-06-03 | 2020-06-30 | Pegasystems, Inc. | Connecting graphical shapes using gestures |
US11138772B2 (en) * | 2016-06-21 | 2021-10-05 | National Institute For Materials Science | Search system, search method, and material property database management apparatus |
US20190139279A1 (en) * | 2016-06-21 | 2019-05-09 | National Institute For Materials Science | Search system, search method, and physical property database management device |
US10698647B2 (en) | 2016-07-11 | 2020-06-30 | Pegasystems Inc. | Selective sharing for collaborative application usage |
US9740368B1 (en) * | 2016-08-10 | 2017-08-22 | Quid, Inc. | Positioning labels on graphical visualizations of graphs |
US10180969B2 (en) | 2017-03-22 | 2019-01-15 | Www.Trustscience.Com Inc. | Entity resolution and identity management in big, noisy, and/or unstructured data |
US11048488B2 (en) | 2018-08-14 | 2021-06-29 | Pegasystems, Inc. | Software code optimizer and method |
US11526898B2 (en) | 2019-09-05 | 2022-12-13 | Microsoft Technology Licensing, Llc | Dynamic visualization of product usage tree based on raw telemetry data |
US11347797B2 (en) * | 2019-11-19 | 2022-05-31 | Bit Discovery Inc. | Asset search and discovery system using graph data structures |
US11816161B2 (en) | 2019-11-19 | 2023-11-14 | Bit Discovery Inc. | Asset search and discovery system using graph data structures |
US11567945B1 (en) | 2020-08-27 | 2023-01-31 | Pegasystems Inc. | Customized digital content generation systems and methods |
US11985037B2 (en) | 2022-12-01 | 2024-05-14 | www.TrustScience.com | Systems and methods for conducting more reliable assessments with connectivity statistics |
Also Published As
Publication number | Publication date |
---|---|
EP0950960A2 (en) | 1999-10-20 |
BR9901367A (en) | 2000-05-09 |
JP4355049B2 (en) | 2009-10-28 |
JPH11327993A (en) | 1999-11-30 |
EP0950960B1 (en) | 2012-12-05 |
EP0950960A3 (en) | 2000-03-22 |
US20020067360A1 (en) | 2002-06-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6509898B2 (en) | Usage based methods of traversing and displaying generalized graph structures | |
US6369819B1 (en) | Methods for visualizing transformations among related series of graphs | |
US6151595A (en) | Methods for interactive visualization of spreading activation using time tubes and disk trees | |
US7043702B2 (en) | Method for visualizing user path through a web site and a path's associated information scent | |
Risden et al. | An initial examination of ease of use for 2D and 3D information visualizations of web content | |
Wills | NicheWorks—interactive visualization of very large graphs | |
Wills | NicheWorks—interactive visualization of very large graphs | |
Eick | Visualizing online activity | |
US6460025B1 (en) | Intelligent exploration through multiple hierarchies using entity relevance | |
Chi | Improving web usability through visualization | |
Keim et al. | Hierarchical pixel bar charts | |
US6897885B1 (en) | Invisible link visualization method and system in a hyperbolic space | |
US20050038533A1 (en) | System and method for simplifying and manipulating k-partite graphs | |
Vehlow et al. | Visualizing dynamic hierarchies in graph sequences | |
WO2003010679A1 (en) | System and method for analyzing transaction data | |
Buono et al. | Visualizing association rules in a framework for visual data mining | |
Leung et al. | FpViz: a visualizer for frequent pattern mining | |
Ceglar et al. | Guiding knowledge discovery through interactive data mining | |
Oosthuizen et al. | Visual web mining of organizational web sites | |
Abello et al. | Navigating giga-graphs | |
Eick | Visual analysis of website browsing patterns | |
Qian et al. | Fluency of visualizations: linking spatiotemporal visualizations to improve cybersecurity visual analytics | |
Bikakis et al. | A hierarchical framework for efficient multilevel visual exploration and analysis | |
Vranić et al. | Towards better understanding of frequent itemset relationships through tree-like data structures | |
BHAVSAR | Development of novel algorithms for analysis and visualization of large graph |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: XEROX CORPORATION, CONNECTICUTFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHI, ED H.;PIROLLI, PETER L. T.;PITKOW, JAMES E.;AND OTHERS;REEL/FRAME:009258/0131;SIGNING DATES FROM 19980514 TO 19980525 |
|
AS | Assignment |
Owner name: BANK ONE, NA, AS ADMINISTRATIVE AGENT, ILLINOISFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:013111/0001Effective date: 20020621Owner name: BANK ONE, NA, AS ADMINISTRATIVE AGENT,ILLINOISFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:013111/0001Effective date: 20020621 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT, TEXASFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476Effective date: 20030625Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT,TEXASFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476Effective date: 20030625 |
|
FEPP | Fee payment procedure |
Free format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: XEROX CORPORATION, NEW YORKFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:BANK ONE, NA;REEL/FRAME:026954/0028Effective date: 20030625Owner name: XEROX CORPORATION, NEW YORKFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A.;REEL/FRAME:026954/0817Effective date: 20061204 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:027728/0811Effective date: 20111110 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
AS | Assignment |
Owner name: XEROX CORPORATION, CONNECTICUTFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A. AS SUCCESSOR-IN-INTEREST ADMINISTRATIVE AGENT AND COLLATERAL AGENT TO BANK ONE, N.A.;REEL/FRAME:061388/0388Effective date: 20220822Owner name: XEROX CORPORATION, CONNECTICUTFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A. AS SUCCESSOR-IN-INTEREST ADMINISTRATIVE AGENT AND COLLATERAL AGENT TO JPMORGAN CHASE BANK;REEL/FRAME:066728/0193Effective date: 20220822 |
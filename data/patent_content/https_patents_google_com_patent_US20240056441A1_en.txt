US20240056441A1 - Decentralized Identity Management for Web3 - Google Patents
Decentralized Identity Management for Web3 Download PDFInfo
- Publication number
- US20240056441A1 US20240056441A1 US18/076,651 US202218076651A US2024056441A1 US 20240056441 A1 US20240056441 A1 US 20240056441A1 US 202218076651 A US202218076651 A US 202218076651A US 2024056441 A1 US2024056441 A1 US 2024056441A1
- Authority
- US
- United States
- Prior art keywords
- data
- computing system
- access
- user
- blockchain
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 120
- 230000009471 action Effects 0.000 claims description 67
- 230000004044 response Effects 0.000 claims description 11
- 238000013475 authorization Methods 0.000 description 44
- 230000008569 process Effects 0.000 description 41
- 230000015654 memory Effects 0.000 description 30
- 238000010586 diagram Methods 0.000 description 24
- 238000012545 processing Methods 0.000 description 23
- 238000012549 training Methods 0.000 description 18
- 238000004891 communication Methods 0.000 description 14
- 230000006870 function Effects 0.000 description 13
- 238000013528 artificial neural network Methods 0.000 description 12
- 230000003993 interaction Effects 0.000 description 12
- 238000007726 management method Methods 0.000 description 9
- 239000008280 blood Substances 0.000 description 7
- 210000004369 blood Anatomy 0.000 description 7
- 230000008901 benefit Effects 0.000 description 6
- 230000011218 segmentation Effects 0.000 description 5
- 230000000007 visual effect Effects 0.000 description 5
- 238000013515 script Methods 0.000 description 4
- 230000004075 alteration Effects 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 3
- 238000012217 deletion Methods 0.000 description 3
- 230000037430 deletion Effects 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 3
- 230000001815 facial effect Effects 0.000 description 3
- 230000000306 recurrent effect Effects 0.000 description 3
- 238000010200 validation analysis Methods 0.000 description 3
- 230000008859 change Effects 0.000 description 2
- 238000013527 convolutional neural network Methods 0.000 description 2
- 238000013500 data storage Methods 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 239000003814 drug Substances 0.000 description 2
- 229940079593 drug Drugs 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000003709 image segmentation Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000009877 rendering Methods 0.000 description 2
- 238000011160 research Methods 0.000 description 2
- 239000004984 smart glass Substances 0.000 description 2
- 208000024891 symptom Diseases 0.000 description 2
- 238000013519 translation Methods 0.000 description 2
- 238000007792 addition Methods 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 238000012550 audit Methods 0.000 description 1
- 230000003416 augmentation Effects 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 210000001124 body fluid Anatomy 0.000 description 1
- 238000013145 classification model Methods 0.000 description 1
- 238000007906 compression Methods 0.000 description 1
- 230000006835 compression Effects 0.000 description 1
- 238000004590 computer program Methods 0.000 description 1
- 238000013144 data compression Methods 0.000 description 1
- 238000013479 data entry Methods 0.000 description 1
- 238000013523 data management Methods 0.000 description 1
- 238000003745 diagnosis Methods 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 230000004807 localization Effects 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 238000005065 mining Methods 0.000 description 1
- 230000000116 mitigating effect Effects 0.000 description 1
- 238000003062 neural network model Methods 0.000 description 1
- 238000010422 painting Methods 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
- 238000001356 surgical procedure Methods 0.000 description 1
- 238000011282 treatment Methods 0.000 description 1
- 238000012800 visualization Methods 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
- H04L63/0861—Network architectures or network communication protocols for network security for authentication of entities using biometrical features, e.g. fingerprint, retina-scan
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/10—Network architectures or network communication protocols for network security for controlling access to devices or network resources
- H04L63/102—Entity profiles
Definitions
- the present disclosure relates generally to the authorization of access to personal data associated with a user. More particularly, the present disclosure relates to leveraging the data security of a blockchain for providing a secure database for personal data such as biological data for the particular user that can be accessed by different third parties and a view log can be generated to track viewers.
- a plurality of different third parties associated with a plurality of different third parties may request user data from a user.
- the different third parties can include medical service providers, biometric security companies, and insurance companies. Additionally, the plurality of different third parties can collect and aggregate their own user-specific data for each of their plurality of users. The third party specific collection and aggregation can lead to a user having their personal information stored in a plurality of different databases that the user may not be able to control.
- the user may be repetitively providing the same or similar data to a plurality of third parties.
- the third parties can then replicate and/or alter the data in a plurality of different ways without notice to the user. Additionally, the user may have limited control over the deletion of the data. Even for the third parties that do provide an accessible deletion feature, the user data may be stored by a plurality of third parties, which can make the deletion task tedious and, in some instances, impractical.
- the computing system can include one or more processors and one or more non-transitory computer-readable media that collectively store instructions that, when executed by the one or more processors, cause the computing system to perform operations.
- the operations can include receiving an access request from a third party computing system.
- the access request can be descriptive of a request to access biological data for a particular user.
- the biological data can be stored on a blockchain.
- the biological data can be associated with biological characteristics of the particular user.
- the operations can include determining a particular entity associated with the third party computing system.
- the operations can include transmitting a notification to a particular user computing system.
- the particular user computing system can be associated with the particular user.
- the notification can be descriptive of the access request and the particular entity.
- the operations can include receiving user input data from a particular user computing system.
- the user input data can be descriptive of a user response to the access request.
- the operations can include determining an access action based on the user input data.
- the access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain.
- the operations can include adjusting a view log based on the access action.
- the view log can be descriptive of one or more viewers associated with the biological data.
- the method can include receiving, by a computing system including one or more processors, an access request from a third party computing system.
- the access request can be descriptive of a request to access personal data associated with a particular user.
- the personal data can be stored on a blockchain.
- the personal data can include biometric data associated with the particular user.
- the method can include determining, by the computing system, a particular entity associated with the third party computing system.
- the particular entity can be associated with a third party service provider.
- the method can include determining, by the computing system, an access action based on whether the particular entity is associated with one or more authorized entities.
- the one or more authorized entities can be determined based on one or more user inputs.
- the method can include adjusting, by the computing system, a view log associated with the personal data based on the access action.
- adjusting the view log can include adding log data associated with the particular entity and the access request to the view log.
- the method can include providing, by the computing system, blockchain data associated with the particular user.
- the blockchain data can include the personal data.
- the operations can include providing personal data to a third party computing system.
- the personal data can be associated with a particular user.
- the personal data can be stored on a blockchain.
- the operations can include determining a particular entity associated with the third party computing system.
- the particular entity can be associated with one or more web identifiers.
- the operations can include determining a view time associated with the third party computing system having access to the personal data.
- the operations can include generating log data based on the particular entity and the view time.
- the log data can be descriptive of the one or more web identifiers and the view time.
- the operations can include storing the log data in association with the personal data.
- FIG. 1 A depicts a block diagram of an example computing system that performs user identity management according to example embodiments of the present disclosure.
- FIG. 1 B depicts a block diagram of an example computing device that performs identity management according to example embodiments of the present disclosure.
- FIG. 2 depicts a block diagram of an example access authorization system according to example embodiments of the present disclosure.
- FIG. 3 depicts a block diagram of an example access action determination system according to example embodiments of the present disclosure.
- FIG. 4 depicts a block diagram of an example computing system that performs personal data access authorization according to example embodiments of the present disclosure.
- FIG. 5 depicts a block diagram of an example user dataset according to example embodiments of the present disclosure.
- FIG. 6 depicts a flow chart diagram of an example method to perform user data access authorization according to example embodiments of the present disclosure.
- FIG. 7 depicts a flow chart diagram of an example method to perform personalization model access authorization according to example embodiments of the present disclosure.
- FIG. 8 depicts a flow chart diagram of an example method to perform access authorization according to example embodiments of the present disclosure.
- FIG. 9 A depicts a block diagram of an example computing system that performs identity management according to example embodiments of the present disclosure.
- FIG. 9 B depicts a block diagram of an example computing device that performs identity management according to example embodiments of the present disclosure.
- FIG. 9 C depicts a block diagram of an example computing system that performs identity management according to example embodiments of the present disclosure.
- the present disclosure is directed to systems and methods for decentralized identity management.
- the systems and methods disclosed herein can leverage personal data stored on a blockchain to provide biometric data and other personal data to a third party computing system in a secure manner.
- the systems and methods can include receiving an access request from a third party computing system.
- the access request can be descriptive of a request to access biological data for a particular user.
- the biological data can be stored on a blockchain.
- the biological data can be associated with biological characteristics of the particular user.
- the systems and methods can include determining a particular entity associated with the third party computing system.
- the systems and methods can include transmitting a notification to a particular user computing system.
- the particular user computing system can be associated with the particular user.
- the notification can be descriptive of the access request and the particular entity.
- the systems and methods can include receiving user input data from a particular user computing system.
- the user input data can be descriptive of a user response to the access request.
- the systems and methods can include determining an access action based on the user input data.
- the access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain.
- a viewer log can be adjusted based on the access action.
- the viewer log can be descriptive of one or more viewers associated with the biological data.
- the systems and methods of the present disclosure can leverage a blockchain to provide a secure system for providing personal data to third parties, which can limit and/or remove the ability of third parties to copy and/or edit the personal data.
- the systems and methods can be leveraged to provide a user with the ability to wipe their information from the blockchain, which when paired with the mitigation of the ability to copy the personal data can allow for a user to wipe (or erase) the user data from the internet.
- the user can facilitate the read and write access to the personal data, which can allow the user to decide which and to what extent their data is stored and/or viewed.
- the user can utilize the systems and methods disclosed herein to facilitate whether a particular medical service provider, insurance company, and/or biometric security provider are allowed to view the personal data.
- the personal data can include a user's medical history, biometric data, and/or other biological data.
- the systems and methods can receive an access request from a third party computing system.
- the access request can be descriptive of a request to access biological data for a particular user.
- the biological data can be stored on a blockchain.
- the biological data can be associated with biological characteristics of the particular user.
- the biological data can include biometric data associated with the particular user.
- the biometric data can include iris data associated with the particular user.
- the iris data can be descriptive of one or more identifying features of an iris of the particular user.
- the biometric data can include face data associated with the particular user.
- the face data can be descriptive of one or more identifying features of a face of the particular user.
- the biometric data can include fingerprint data associated with the particular user.
- the fingerprint data can be descriptive of one or more identifying features of a fingerprint of the particular user.
- the systems and methods can determine a particular entity associated with the third party computing system.
- the particular entity can be associated with a web platform.
- the particular entity may be associated with a medical service provider, an authentication computing system, and/or a government entity. Determining the particular entity can be based on obtaining and processing an internet protocol address, a device yin number, profile information, and/or transmission metadata. The determination may be based on a database of entities associated with particular web IDs.
- a notification can be generated and/or transmitted to a particular user computing system.
- the particular user computing system can be associated with the particular user.
- the notification can be descriptive of the access request and the particular entity.
- the access request can include a timestamp and a particular level of access requested. The levels of access can differ based on the type of entity. For example, a medical service provider may be provided write access and read access, while a non-medical professional may be provided read access without write access.
- the notification can be provided to a particular user's smartphone, a smart wearable (e.g., a smartwatch or smart glasses), a tablet, and/or another computing device. In some implementations, the notification may include an option to request further information from the third party computing system.
- User input data can then be received from a particular user computing system.
- the user input data can be descriptive of a user response to the access request.
- the user input data can be descriptive of approval of the request, denial of the request, and/or a partial approval.
- the user input data may be descriptive of a request for further information on the particular entity.
- the user input data can include a selection of an option provided via the user interface of the notification portal.
- the user input data may be received with a user identifier and/or a device identifier.
- the notification generation and transmittal may be replaced and/or complemented by location determination.
- a location of the particular user can be determined based on one or more mobile devices associated with the particular user.
- the location data can then be utilized to authenticate the access of the biological data based on the particular entity being a medical service provider associated with the location of the particular user (e.g., a user may be in a hospital and a hospital computer may be requesting access).
- the systems and methods can determine an access action based on the user input data.
- the access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain.
- the access action can include a read call without write access.
- the level of access can include full access, partial access, and/or no access.
- the access action can be descriptive of a particular subset of the biological data to provide access to the third party to view.
- the subset can include biometric data, medical history data, and/or other biological data.
- the access action can include providing the biological data to the third party computing system.
- the access action can include providing a subset of the biological data to the third party computing system.
- the access action can include accessing a blockchain node based on the access request and identifying blockchain data associated with the particular user.
- the blockchain data can include the biological data.
- the blockchain data can include a view log associated with the biological data.
- a view log can be adjusted based on the access action.
- the view log can be descriptive of one or more viewers associated with the biological data.
- the view log can be stored on the blockchain and may be associated with the particular user and/or the biological data.
- the systems and methods can include causing the access action to occur and determining a view time of the access action. Adjusting the viewer log can include logging the view time associated with the access action.
- the systems and methods can include determining the particular entity is associated with a medical service provider.
- the access action can include providing the biological data to the medical service provider.
- the systems and methods can facilitate the access to biometric data that can be utilized for validating the identity of the particular user.
- the systems and methods can include receiving an access request from a third party computing system.
- the access request can be descriptive of a request to access personal data associated with a particular user.
- the personal data can be stored on a blockchain.
- the personal data can include biometric data associated with the particular user.
- a particular entity associated with the third party computing system can be determined.
- the particular entity can be associated with a third party service provider.
- the systems and methods can include determining an access action based on whether the particular entity is associated with one or more authorized entities.
- the one or more authorized entities can be determined based on one or more user inputs.
- the systems and methods can include adjusting a view log associated with the personal data based on the access action. Adjusting the view log can include adding log data associated with the particular entity and the access request to the view log.
- the systems and methods can include providing blockchain data associated with the particular user.
- the blockchain data can include the personal data.
- the systems and methods can receive an access request from a third party computing system.
- the access request can be descriptive of a request to access personal data associated with a particular user.
- the personal data can be stored on a blockchain.
- the personal data can include biometric data associated with the particular user.
- the personal data can include other biological data such as medical history data, drug routine, and/or blood type.
- the biometric data can include iris data, fingerprint data, and/or facial data that can be utilized to verify the identity of the particular user.
- the personal data can include other user data associated with the identity of the particular user.
- the systems and methods can determine a particular entity associated with the third party computing system.
- the particular entity can be associated with a third party service provider.
- the third party service provider can include a medical service provider, a security provider (e.g., a security provider that utilizes fingerprint data to provide secure locks for buildings), and/or an insurance service provider.
- An access action can be determined based on whether the particular entity is associated with one or more authorized entities.
- the one or more authorized entities can be determined based on one or more user inputs.
- the one or more authorized entities can be determined based on an authorization list.
- the one or more authorized entities can be determined based on the type of entity.
- the particular entity may be determined to be a medical entity, a government entity, a research entity, and/or an insurance entity.
- a view log associated with the personal data can then be adjusted based on the access action. Adjusting the view log can include adding log data associated with the particular entity and the access request to the view log.
- the view log can include a plurality of entries associated with a plurality of different accesses provided to a plurality of different third parties.
- the view log can include the time of access and one or more identifiers associated with the particular third party who accessed the personal data.
- the one or more identifiers can include internet protocol addresses, web IDs, data associated with a web profile, a blockchain ID, and/or a hash function.
- the systems and methods can provide blockchain data associated with the particular user.
- the blockchain data can include the personal data.
- the blockchain data can include encrypted personal data and may include information descriptive of times and dates for different medical exams for the particular user.
- the systems and methods can generate and store log data on a blockchain in association with the viewing of the personal data by third parties.
- the systems and methods can include providing personal data to a third party computing system.
- the personal data can be associated with a particular user.
- the personal data can be stored on a blockchain.
- the systems and methods can include determining a particular entity associated with the third party computing system.
- the particular entity can be associated with one or more web identifiers.
- the systems and methods can include determining a view time associated with the third party computing system having access to the personal data and generating log data based on the particular entity and the view time.
- the log time can be descriptive of the one or more web identifiers and the view tine.
- the systems and methods can include storing the log data in association with the personal data.
- the systems and methods can provide personal data to a third party computing system.
- the personal data can be associated with a particular user.
- the personal data can be stored on a blockchain.
- the personal data can include biological data.
- the biological data can include medical history data, biometric data, and/or general identity-specific data (e.g., blood type and/or birth information).
- the systems and methods can determine a particular entity associated with the third party computing system.
- the particular entity can be associated with one or more web identifiers.
- the particular entity can include a hospital, an employer, an insurance company, a security company, a dentist, a general practitioner, a medical specialist, and/or a blood donation company.
- a view time associated with the third party computing system having access to the personal data can then be determined.
- the view time can be determined by accessing an internal clock of a computing system.
- the view time may be based on the time of request and/or may be based on the time of the access occurring.
- Log data can be generated based on the particular entity and the view time.
- the log time can be descriptive of the one or more web identifiers and the view time.
- the log data may include metadata associated with the type of access, the view duration of the access, and/or the level of access provided to the particular third party computing system.
- the log data can then be stored in association with the personal data.
- the log data can be stored with previous log data of a view log.
- the view log can store data associated with the interactions with the personal data, which can include a read call, a write call, and/or download call.
- the personal data, the view log, and/or the authorization data may be encrypted when stored on the blockchain.
- the encryption can utilize one or more cryptographic techniques.
- the blockchain data can include one or more pointers to the personal data stored in a user database.
- the blockchain can be utilized to verify what gets accessed and what gets written, which may minimize the possibility of a bulk copy of data. Additionally and/or alternatively, the systems and methods can add medical history and biometric data to a blockchain log. In some implementations, the systems and methods can add biological data to blockchain.
- the personal data can be utilized to determine and/or provide preliminary predictions to medical service providers based on the medical history and/or one or more input symptoms (e.g., a medical service provider can access the medical history and provide their own report, which can be processed with the medical history to provide a preliminary diagnosis).
- a medical service provider can access the medical history and provide their own report, which can be processed with the medical history to provide a preliminary diagnosis.
- the user may be able to select what data is saved and what data is not allowed to be documented and stored.
- the systems and methods can include a black box neural network model stored to the blockchain and trained on the biological data associated with the particular user.
- the third party computing system may build a second machine-learned model on top of the other machine-learned model.
- An authorization list (e.g., a permissions list associated with the user) can be managed via a mobile application.
- the systems and methods disclosed herein can allow a user to easily move data from one application to another.
- the user can be aggregated on the blockchain to store data from a plurality of medical service providers to be later provided to a plurality of other medical service providers.
- the personal data can be stored on a blockchain with one or more token IDs associated with the user.
- the personal data can include account IDs associated with the user and one or more third parties.
- the access action can include a read call and/or can include a write call.
- virtual reality data and/or augmented-reality data can be stored on the blockchain. Additionally and/or alternatively, medical history data, biometric data, non-fungible token data, personal information, profile information, tags, application data, payment data, addresses, names, drivers license data, passport data, and identity data can be stored as part of the user data.
- the systems and methods can include embedding a unique hidden code in the personal data, which can be identified during scans for the hidden code or fingerprint. Additionally and/or alternatively, the systems and methods can include an application that runs on a protected virtual machine, which is utilized to read the personal data to provide temporary, but not permanent, access.
- the systems and methods of the present disclosure provide a number of technical effects and benefits.
- the system and methods can provide systems and methods for providing secure management of personal data for a user.
- the systems and methods disclosed herein can leverage blockchain technology to prevent the duplication and localization of the personal data and can be utilized to control who can edit and/or add to the user data.
- Another technical benefit of the systems and methods of the present disclosure is the ability to leverage a notification interface to provide a user interface to a user to allow for the selection of which requesters can access their data.
- data associated with the viewers can be logged to track who and to what extent the personal data is viewed and/or interacted with by third parties.
- the systems and methods disclosed herein can process an access request, determine an entity associated with the requestor, generate a notification based on the request and the entity, transmit the notification, and obtain, in return, input data descriptive of whether the requestor can access the personal data. Data associated with the particular entity can then be logged in a view log in case an audit of viewers occurs.
- Another example of technical effect and benefit relates to improved computational efficiency and improvements in the functioning of a computing system.
- the systems and methods disclosed herein can leverage the blockchain storage to limit the amount of power required to edit and or delete personal data being utilized by a plurality of third parties.
- a user can augment a single dataset instead of having to navigate to a plurality of web pages to edit a plurality of datasets, which may be redundant to one another.
- FIG. 1 A depicts a block diagram of an example computing system 100 that performs user identity management according to example embodiments of the present disclosure.
- the system 100 includes a user computing system 130 , a server computing system 110 , a creator computing system 150 , and a blockchain computing system 170 that are communicatively coupled over a network 180 .
- the user computing system 130 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
- a personal computing device e.g., laptop or desktop
- a mobile computing device e.g., smartphone or tablet
- a gaming console or controller e.g., a gaming console or controller
- a wearable computing device e.g., an embedded computing device, or any other type of computing device.
- the user computing system 130 includes one or more processors 132 and a memory 134 .
- the one or more processors 132 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 134 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 134 can store data 136 and instructions 138 which are executed by the processor 132 to cause the user computing system 130 to perform operations.
- the user computing system 130 can also include one or more user input components that receive user input.
- the user input component can be a touch-sensitive component (e.g., a touch-sensitive display screen or a touch pad) that is sensitive to the touch of a user input object (e.g., a finger or a stylus).
- the touch-sensitive component can serve to implement a virtual keyboard.
- Other example user input components include a microphone, a traditional keyboard, or other means by which a user can provide user input.
- the server computing system 110 includes one or more processors 112 and a memory 114 .
- the one or more processors 112 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 114 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 114 can store data 118 and instructions 116 which are executed by the processor 112 to cause the server computing system 110 to perform operations.
- the server computing system 110 includes or is otherwise implemented by one or more server computing devices. In instances in which the server computing system 110 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof.
- the blockchain computing system 170 includes one or more processors and a memory.
- the one or more processors can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory can store data and instructions which are executed by the processor to cause the blockchain computing system 170 to perform operations.
- the blockchain computing system 170 includes or is otherwise implemented by one or more server computing devices.
- the network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links.
- communication over the network 180 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- the computing system 100 can include a number of applications (e.g., applications 1 through N). Each application can be in communication with a central intelligence layer.
- Example applications can include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc.
- each application can communicate with the central intelligence layer (and model(s) stored therein) using an API (e.g., a common API across all applications).
- the central intelligence layer can communicate with a central device data layer.
- the central device data layer can be a centralized repository of data for the computing system 100 .
- the central device data layer can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components.
- the central device data layer can communicate with each device component using an API (e.g., a private API).
- FIG. 1 A depicts an exemplary computing system 100 that can be used to implement personal data access authorization according to aspects of the present disclosure.
- the system 100 has a user-server architecture that includes a server 110 that communicates with one or more user computing systems 130 over a network 180 .
- the present disclosure can be implemented using other suitable architectures, which can include any number of computing systems communicating over a network 180 .
- the system 100 includes a server 110 , such as, for example, a web server.
- the server 110 can be one or more computing devices that are implemented as a parallel computing system and/or a distributed computing system. In particular, multiple computing devices can act together as a single server 110 .
- the server 110 can have one or more processor(s) 112 and a memory 114 .
- the server 110 can also include a network interface used to communicate with one or more remote computing devices (e.g., user devices) 130 over a network 180 .
- the processor(s) 112 can be any suitable processing device, such as a microprocessor, microcontroller, integrated circuit, or other suitable processing device.
- the memory 114 can include any suitable computing system or media, including, but not limited to, non-transitory computer-readable media, RAM, ROM, hard drives, flash drives, or other memory devices.
- the memory 114 can store information accessible by processor(s) 112 , including instructions 116 that can be executed by processor(s) 112 .
- the instructions 116 can be any set of instructions that when executed by the processor(s) 112 , cause the processor(s) 112 to provide desired functionality.
- the instructions 116 can be executed by the processor(s) 112 to implement index adjustment (e.g., index deduplication).
- the user profile database 120 can be configured to store a plurality of user profiles associated with a plurality of users utilizing one or more user computing systems 130 .
- the user profile database 120 can be configured to be utilized for facilitating one or more interactions.
- the facilitation of the one or more interactions can involve the use of a blockchain application programming interface (API) 122 to send data to and receive data from a blockchain computing system 170 .
- API application programming interface
- a server computing system 110 can utilize the blockchain API 122 to update one or more ledgers 172 of the blockchain computing system 170 .
- the one or more ledgers 172 can be associated with one or more tokens 174 .
- the one or more tokens 174 can include one or more non-fungible tokens, which can include scripts associated with a digital asset (e.g., image data, video data, text data, latent encoding data, domain data, audio data, augmented-reality asset rendering data, and/or virtual-reality asset rendering data).
- the script can reference a specific digital asset that is provided for sale.
- the digital asset can include image data, text data, video data, latent encoding data, a domain name, a virtual property, an augmented-reality asset, a virtual-reality asset (e.g., a virtual-reality environment and/or a virtual-reality object for interaction in an environment), a smart contract, a physical item authentication, etc.
- the one or more ledgers 172 can be associated with cryptocurrency that can be utilized to make transactions in a physical marketplace and/or a virtual marketplace.
- element can refer to computer logic utilized to provide desired functionality.
- any element, function, and/or instructions can be implemented in hardware, application specific circuits, firmware and/or software controlling a general purpose processor.
- the elements or functions are program code files stored on the storage device, loaded into memory and executed by a processor or can be provided from computer program products, for example computer executable instructions, that are stored in a tangible computer-readable storage medium such as RAM, hard disk or optical or magnetic media.
- Memory 114 can also include data 118 that can be retrieved, manipulated, created, or stored by processor(s) 112 .
- the data 118 can include search result data, ranking data, image data (e.g., digital maps, satellite images, aerial photographs, street-level photographs, synthetic models, paintings, personal images, portraits, etc.), video data, audio data, text data (e.g., books, articles, blogs, poems, etc.), latent encoding data, blockchain address data, tables, vector data (e.g., vector representations of roads, parcels, buildings, etc.), point of interest data (e.g., locales such as islands, cities, restaurants, hospitals, parks, hotels, and schools), or other data or related information.
- the data 118 can be used to access information and data associated with a specific digital asset, website, search result, blockchain, etc.
- the data 118 can be stored in one or more databases.
- the one or more databases can be connected to the server 110 by a high bandwidth LAN or WAN, or can also be connected to server 110 through network 180 .
- the one or more databases can be split up so that they are located in multiple locales.
- the server 110 can exchange data with one or more user computing systems 130 over the network 180 .
- user computing systems 130 can be any suitable type of computing device, such as a general purpose computer, special purpose computer, navigational device, laptop, desktop, integrated circuit, mobile device, smartphone, tablet, wearable-computing devices, a display with one or more processors coupled thereto and/or embedded therein, or other suitable computing device.
- the user computing system 130 can be multiple computing devices acting together to perform operations or computing actions.
- a user computing system 130 can include a processor(s) 132 and a memory 134 .
- the memory 134 can store information accessible by processor(s) 132 , including instructions that can be executed by processor(s) and data.
- memory 134 can store data 136 and instructions 138 .
- Instructions 138 can provide instructions for implementing a browser, a non-fungible token purchase, and/or a plurality of other functions.
- the user of user computing system 130 can exchange data with server 110 by using the browser to visit a website accessible at a particular web-address.
- the personal data management of the present disclosure can be provided as an element of a user interface of a website and/or application.
- the data 136 can include data related to running a specialized application on the user computing system 130 .
- the specialized application can be used to exchange data with server 110 over the network 180 .
- the data 136 can include user-device-readable code for providing and implementing aspects of the present disclosure. Additionally and/or alternatively, the data 136 can include data related to previously inputted or received data. For example, the data 136 can include data related to past occurrences of the special application.
- the user computing system 130 can include various user input devices for receiving information from a user, such as a touch screen, touch pad, data entry keys, speakers, mouse, motion sensor, and/or a microphone suitable for voice recognition. Further, the user computing system 130 can have a display for presenting information, such as a user interface, displaying a digital asset, displaying pop-ups or application elements displayed in an interface, and/or other forms of information.
- the user computing system 130 can also include a user profile 140 that can be used to identify a user of the user computing system 130 .
- the user profile 140 can be optionally used by the user to make one or more transactions which can then be recorded on one or more ledgers 172 of the blockchain computing system 170 .
- the user profile 140 can be descriptive of user information, which can include identification numbers and/or payment account information.
- the user profile 140 can include data associated with a crypto wallet, which may be linked to a browser application via an application extension and/or embedding.
- the user computing system 130 can further include a graphics processing unit. Graphics processing unit can be used by processor 132 to index adjustment. In some embodiments, the user computing system 130 performs any and all index adjustment.
- the user computing system 130 can include a network interface for communicating with a server 110 over a network 180 .
- Network interface can include any components or configuration suitable for communication with server 110 over network 180 , including, for example, one or more ports, transmitters, wireless cards, controllers, physical layer components, or other items for communication according to any currently known or future developed communications protocol or technology.
- the network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof.
- the network 180 can also include a direct connection between user computing system 130 and the server 110 .
- communication between the server 110 and a user computing system 130 can be carried via network interface using any type of wired and/or wireless connection, using a variety of communication protocols (e.g., TCP/IP, HTTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- the exemplary computing system 100 can include one or more creator computing systems 150 .
- the one or more creator computing systems 150 can be utilized for generating images, videos, prose, poetry, audio, etc., which can then be provided for sale.
- the one or more creator computing systems 150 can include one or more processors 152 , which can be utilized to execute one or more operations to implement the systems and methods disclosed herein.
- the one or more creator computing systems 150 can include one or more memory components 154 , which can be utilized to store data 156 and one or more instructions 158 .
- the data 156 can include data related to one or more applications, one or more media datasets, etc.
- the instructions 158 can include one or more operations for implementing the systems and methods disclosed herein.
- the one or more creator computing systems 150 can store data associated with one or more digital assets 160 and/or one or more creator profiles 162 .
- the one or more digital assets 160 can include text data, image data, video data, audio data, latent encoding data, domain data, or a variety of other data formats.
- the one or more creator profiles 162 can include information associated with one or more “creators” of the one or more digital assets 160 .
- the one or more creator profiles 162 can include identification data, transaction data, and/or crypto wallet data.
- the exemplary computing system 100 can include one or more blockchain computing systems 170 .
- the one or more blockchain computing systems 170 can include a plurality of computing devices being utilized for decentralized data storage, such that a plurality of “blocks” can be distributed throughout a network of computing devices to provide a secure system for data storage, which can include one or more ledgers 172 and one or more tokens 174 .
- each of the one or more tokens 174 can be associated with at least a portion of the one or more ledgers 172 .
- Blockchain can refer to a system configured to securely record information.
- the blockchain can include a decentralized system that can render changing information extremely difficult.
- the blockchain can include a digital ledger of transactions that can be duplicated and distributed across a network of computing systems. Each block in the chain can include a number of transactions. When a new transaction occurs on the blockchain, a record of that transaction can be added to every computing device's ledger.
- the blockchain can be utilized to track the exchange of currency and/or digital assets via the recording of transactions on the digital ledger, which can be propagated throughout the decentralized system.
- the currency exchanged and tracked via the blockchain computing system 170 can be referred to as cryptocurrency.
- the tokens 174 can include one or more non-fungible tokens.
- the non-fungible tokens can be minted on a blockchain associated with the blockchain computing system 170 .
- a non-fungible token can be a certificate of authenticity of a digital asset. NFTs can be non-interchangeable thus making their worth depend on the price anyone may be willing to pay for the asset. NFTs can be printed on blockchains such that their scarcity and authenticity can be maintained.
- a digital asset can be defined as anything that is stored digitally and can be uniquely identifiable that organizations can use to realize value. Examples of digital assets can include a tweet, a social media comment, documents, audio, images, videos, logos, website domains, slide presentations, spreadsheets, CSS files and formats, executable code, and/or websites.
- FIG. 1 B depicts a block diagram of an example blockchain 50 that may be utilized by the blockchain computing system 170 of the exemplary computing system 100 of FIG. 1 A .
- the example blockchain 50 can include a plurality of blocks that can be utilized to store data with one or more cryptographic features.
- the blockchain 50 can be stored on a decentralized computing system comprising a plurality of computing devices.
- the blockchain 50 can be a public blockchain (e.g., a blockchain that is open without access restrictions such that anyone with an internet access can send transactions or validate transactions as part of the decentralized, distributed system), a private blockchain (e.g., a blockchain that provides access based on permissions set by network administrators), or a hybrid blockchain (e.g., a blockchain with a combination of blocks with no restrictions and blocks with restrictions).
- the blockchain 50 can include proof of work features that can include one or more cryptographic forms of proof.
- the proof of work can be provided upon a request to update the blockchain 50 (e.g., a request to update the ledgers based on a new transaction).
- the proof of work can convey that a certain device or group of devices have performed a certain amount of computation, which can then be validated by other parties.
- the blockchain 50 can be updated, or may remain unchanged in response to a failure to validate.
- the proof of work feature can be utilized to mitigate the computational cost of every device in the system having to perform the same computational functions and checks for determining a request is valid for updating the blockchain 50 .
- Each block can include a hash, a previous hash associated with the hash of the previous block, and data.
- each block can include a nonce.
- a hash can be a hash value of a fixed length that can be a fingerprint for the particular block. The hash value can be generated based on a hash function and may be changed each time a change is made to the data of that particular block.
- the previous hash can include a hash value of the block immediately preceding the particular block. The previous hash can be utilized to ensure the downstream ground truth stays unchanged unless proper validation occurs.
- the data can include transaction data (e.g., a transaction ledger), a timestamp, a value associated with a cryptocurrency value, a non-fungible token (e.g., a non-fungible token including a script that references a digital asset, nonce data, and/or general blockchain data.
- transaction data e.g., a transaction ledger
- timestamp e.g., a value associated with a cryptocurrency value
- a non-fungible token e.g., a non-fungible token including a script that references a digital asset
- nonce data e.g., a script that references a digital asset
- general blockchain data e.g., a blockchain data that specifies a script that references a digital asset
- Nonce i.e., a number only used once
- the nonce can be a number that blockchain miners are solving for, in order to receive an incentive (e.g., cryptocurrency).
- the blockchain 50 can include one or more security protocols and/or features.
- the blockchain 50 can include a cryptographic system.
- the blockchain 50 can validate the blockchain 50 is valid by ensuring the stored previous hash stored in the block matches the hash value of the previous block from the last block back to the first block (e.g., the genesis block).
- the blockchain 50 can include proof of work validation that can rely on verifying proof of computation before implementing a change to the stored data (e.g., the stored ledger). Proof of work validation can take seconds, minutes, and/or hours based in part on the number of blocks in the blockchain 50 .
- the blockchain 50 can be implemented on a distributed, decentralized computing system.
- each computing device in the distributed, decentralized computing system can store a portion of (e.g., a block of the plurality of blocks) or all of the blocks in the blockchain 50 . Therefore, the system can verify data by ensuring the data is uniform across most, if not all, of the distributed system. Each node of the distributed system can be checked for tampering before adding new data.
- the data can include data associated with a cryptocurrency value (e.g., a ledger associated with a specific cryptocurrency value), data associated with a digital asset (e.g., a non-fungible token minted on the blockchain 50 that can include a script associated with the digital asset), data associated with a smart contract (e.g., a smart contract that includes conditions that automatically initiates an action in response to a criteria being met), and/or timestamp data (e.g., timestamp data for block creation, minting, a transaction, etc.).
- a cryptocurrency value e.g., a ledger associated with a specific cryptocurrency value
- data associated with a digital asset e.g., a non-fungible token minted on the blockchain 50 that can include a script associated with the digital asset
- data associated with a smart contract e.g., a smart contract that includes conditions that automatically initiates an action in response to a criteria being met
- timestamp data e.g., timestamp data for block creation, mint
- FIG. 1 B depicts a first block 10 , a second block 20 , a third block 30 , a fourth block 40 , and an nth block 60 .
- the first block 10 can be a genesis block (e.g., a first overall block in the blockchain).
- the first block 10 can include a respective first hash 12 (e.g., a hash value associated with the first block 10 ).
- the first block 10 may include a first previous hash 14 (e.g., if the first block 10 has a block before it in the blockchain 50 , then the hash of the previous block can be stored on the first block 10 ). Additionally and/or alternatively, the first block 10 can include data 16 and nonce 18 .
- the second block 20 can follow the first block 10 .
- the second block 20 can include a respective second hash 22 (e.g., a hash value associated with the second block 20 ).
- the second block 20 may include a second previous hash 24 (e.g., the second previous hash 24 can be the same as, or reference, the first hash 12 ). Additionally and/or alternatively, the second block 20 can include data 26 and nonce 28 .
- the third block 30 can follow the second block 20 .
- the third block 30 can include a respective third hash 32 (e.g., a hash value associated with the third block 30 ).
- the third block 30 may include a third previous hash 34 (e.g., the third previous hash 34 can be the same as, or reference, the second hash 22 ). Additionally and/or alternatively, the third block 30 can include data 36 and nonce 38 .
- the fourth block 40 , the nth block 60 , and other potential blocks can include a respective hash, a respective previous hash, and data.
- the first data 16 , the second data 26 , the third data 36 , and the data of the other blocks can include overlapping data, can differ, and/or be the same such that the data is duplicative for all blocks.
- each block can be associated with a different transaction (e.g., a different minting, a different sale, etc.).
- the first nonce 18 , the second nonce 28 , the third nonce 38 , and the nonce's of the other blocks can differ and may be solved during mining.
- the data in each block can include ledger data, which can include a timestamp, asset and/or cryptocurrency exchanged, actors involved in transaction, and/or a variety of other information.
- a plurality of different blockchains can be utilized for the systems and methods disclosed herein.
- the different blockchains can include different configurations.
- the different blockchains can include parallel chains, side chains, shared blocks, differing chains, varying permissions, varying purposes, varying number of blocks, and/or varying hash functions and/or varying hashing value lengths.
- the systems and methods can include one or more machine-learned model computing systems 900 .
- the one or more machine-learned models can be utilized for a variety of tasks for enabling token data identification, obtainment, indexing, and deduplication.
- FIG. 9 A depicts a block diagram of an example computing system 900 that performs user identity management according to example embodiments of the present disclosure.
- the system 900 includes a user computing device 902 , a server computing system 930 , and a training computing system 950 that are communicatively coupled over a network 980 .
- the user computing device 902 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
- a personal computing device e.g., laptop or desktop
- a mobile computing device e.g., smartphone or tablet
- a gaming console or controller e.g., a gaming console or controller
- a wearable computing device e.g., an embedded computing device, or any other type of computing device.
- the user computing device 902 includes one or more processors 912 and a memory 914 .
- the one or more processors 912 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 914 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 914 can store data 916 and instructions 918 which are executed by the processor 912 to cause the user computing device 902 to perform operations.
- the user computing device 902 can store or include one or more machine-learned models 920 .
- the machine-learned models 920 can be or can otherwise include various machine-learned models such as neural networks (e.g., deep neural networks) or other types of machine-learned models, including non-linear models and/or linear models.
- Neural networks can include feed-forward neural networks, recurrent neural networks (e.g., long short-term memory recurrent neural networks), convolutional neural networks or other forms of neural networks.
- Example machine-learned models 920 are discussed with reference to FIGS. 2 & 3 .
- the one or more machine-learned models 920 can be received from the server computing system 930 over network 980 , stored in the user computing device memory 914 , and then used or otherwise implemented by the one or more processors 912 .
- the user computing device 902 can implement multiple parallel instances of a single machine-learned model 920 (e.g., to perform user-specific prediction or suggestion across multiple instances of third party service providers).
- the machine-learned model 920 can include one or more detection models, one or more segmentation models, one or more classification models, one or more augmentation models, one or more generation models, and/or one or more feature extractor models.
- the machine-learned model 920 can process input data to generate a suggestion and/or a prediction specific to the particular user.
- one or more machine-learned models 940 can be included in or otherwise stored and implemented by the server computing system 930 that communicates with the user computing device 902 according to a client-server relationship.
- the machine-learned models 940 can be implemented by the server computing system 930 as a portion of a web service (e.g., a personalization service).
- a web service e.g., a personalization service.
- one or more models 920 can be stored and implemented at the user computing device 902 and/or one or more models 940 can be stored and implemented at the server computing system 930 .
- the user computing device 902 can also include one or more user input components 922 that receive user input.
- the user input component 922 can be a touch-sensitive component (e.g., a touch-sensitive display screen or a touch pad) that is sensitive to the touch of a user input object (e.g., a finger or a stylus).
- the touch-sensitive component can serve to implement a virtual keyboard.
- Other example user input components include a microphone, a traditional keyboard, or other means by which a user can provide user input.
- the server computing system 930 includes one or more processors 932 and a memory 934 .
- the one or more processors 932 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 934 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 934 can store data 936 and instructions 938 which are executed by the processor 932 to cause the server computing system 930 to perform operations.
- the server computing system 930 includes or is otherwise implemented by one or more server computing devices. In instances in which the server computing system 930 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof.
- the server computing system 930 can store or otherwise include one or more machine-learned models 940 .
- the models 940 can be or can otherwise include various machine-learned models.
- Example machine-learned models include neural networks or other multi-layer non-linear models.
- Example neural networks include feed forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks.
- Example models 940 are discussed with reference to FIGS. 2 & 3 .
- the user computing device 902 and/or the server computing system 930 can train the models 920 and/or 940 via interaction with the training computing system 950 that is communicatively coupled over the network 980 .
- the training computing system 950 can be separate from the server computing system 930 or can be a portion of the server computing system 930 .
- the training computing system 950 includes one or more processors 952 and a memory 954 .
- the one or more processors 952 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 954 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 954 can store data 956 and instructions 958 which are executed by the processor 952 to cause the training computing system 950 to perform operations.
- the training computing system 950 includes or is otherwise implemented by one or more server computing devices.
- the training computing system 950 can include a model trainer 960 that trains the machine-learned models 920 and/or 940 stored at the user computing device 902 and/or the server computing system 930 using various training or learning techniques, such as, for example, backwards propagation of errors.
- a loss function can be backpropagated through the model(s) to update one or more parameters of the model(s) (e.g., based on a gradient of the loss function).
- Various loss functions can be used such as mean squared error, likelihood loss, cross entropy loss, hinge loss, and/or various other loss functions.
- Gradient descent techniques can be used to iteratively update the parameters over a number of training iterations.
- performing backwards propagation of errors can include performing truncated backpropagation through time.
- the model trainer 960 can perform a number of generalization techniques (e.g., weight decays, dropouts, etc.) to improve the generalization capability of the models being trained.
- the model trainer 960 can train the machine-learned models 920 and/or 940 based on a set of training data 962 .
- the training data 962 can include, for example, training blockchain data, training biometric data, training medical history data, training symptom data, ground truth labels, ground truth information, and/or ground truth segmentation masks.
- the training examples can be provided by the user computing device 902 .
- the model 920 provided to the user computing device 902 can be trained by the training computing system 950 on user-specific data received from the user computing device 902 . In some instances, this process can be referred to as personalizing the model.
- the model trainer 960 includes computer logic utilized to provide desired functionality.
- the model trainer 960 can be implemented in hardware, firmware, and/or software controlling a general purpose processor.
- the model trainer 960 includes program files stored on a storage device, loaded into a memory and executed by one or more processors.
- the model trainer 960 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or optical or magnetic media.
- the network 980 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links.
- communication over the network 980 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- the machine-learned models described in this specification may be used in a variety of tasks, applications, and/or use cases.
- the input to the machine-learned model(s) of the present disclosure can be image data.
- the machine-learned model(s) can process the image data to generate an output.
- the machine-learned model(s) can process the image data to generate an image recognition output (e.g., a recognition of the image data, a latent embedding of the image data, an encoded representation of the image data, a hash of the image data, etc.).
- the machine-learned model(s) can process the image data to generate an image segmentation output.
- the machine-learned model(s) can process the image data to generate an image classification output.
- the machine-learned model(s) can process the image data to generate an image data modification output (e.g., an alteration of the image data, etc.).
- the machine-learned model(s) can process the image data to generate an encoded image data output (e.g., an encoded and/or compressed representation of the image data, etc.).
- the machine-learned model(s) can process the image data to generate a prediction output.
- the input to the machine-learned model(s) of the present disclosure can be text or natural language data.
- the machine-learned model(s) can process the text or natural language data to generate an output.
- the machine-learned model(s) can process the natural language data to generate a language encoding output.
- the machine-learned model(s) can process the text or natural language data to generate a latent text embedding output.
- the machine-learned model(s) can process the text or natural language data to generate a classification output.
- the machine-learned model(s) can process the text or natural language data to generate a textual segmentation output.
- the machine-learned model(s) can process the text or natural language data to generate a semantic intent output.
- the machine-learned model(s) can process the text or natural language data to generate an upscaled text or natural language output (e.g., text or natural language data that is higher quality than the input text or natural language, etc.).
- the machine-learned model(s) can process the text or natural language data to generate a prediction output.
- the input to the machine-learned model(s) of the present disclosure can be speech data.
- the machine-learned model(s) can process the speech data to generate an output.
- the machine-learned model(s) can process the speech data to generate a speech recognition output.
- the machine-learned model(s) can process the speech data to generate a speech translation output.
- the machine-learned model(s) can process the speech data to generate a latent embedding output.
- the machine-learned model(s) can process the speech data to generate an encoded speech output (e.g., an encoded and/or compressed representation of the speech data, etc.).
- an encoded speech output e.g., an encoded and/or compressed representation of the speech data, etc.
- the machine-learned model(s) can process the speech data to generate a textual representation output (e.g., a textual representation of the input speech data, etc.).
- the machine-learned model(s) can process the speech data to generate a prediction output.
- the input to the machine-learned model(s) of the present disclosure can be latent encoding data (e.g., a latent space representation of an input, etc.).
- the machine-learned model(s) can process the latent encoding data to generate an output.
- the machine-learned model(s) can process the latent encoding data to generate a recognition output.
- the machine-learned model(s) can process the latent encoding data to generate a reconstruction output.
- the machine-learned model(s) can process the latent encoding data to generate a search output.
- the machine-learned model(s) can process the latent encoding data to generate a reclustering output.
- the machine-learned model(s) can process the latent encoding data to generate a prediction output.
- the input to the machine-learned model(s) of the present disclosure can be statistical data.
- the machine-learned model(s) can process the statistical data to generate an output.
- the machine-learned model(s) can process the statistical data to generate a recognition output.
- the machine-learned model(s) can process the statistical data to generate a prediction output.
- the machine-learned model(s) can process the statistical data to generate a classification output.
- the machine-learned model(s) can process the statistical data to generate a segmentation output.
- the machine-learned model(s) can process the statistical data to generate a segmentation output.
- the machine-learned model(s) can process the statistical data to generate a visualization output.
- the machine-learned model(s) can process the statistical data to generate a diagnostic output.
- the machine-learned model(s) can be configured to perform a task that includes encoding input data for reliable and/or efficient transmission or storage (and/or corresponding decoding).
- the task may be audio compression task.
- the input may include audio data and the output may comprise compressed audio data.
- the input includes visual data (e.g., one or more images or videos), the output comprises compressed visual data, and the task is a visual data compression task.
- the task may comprise generating an embedding for input data (e.g., input audio or visual data).
- the input includes visual data
- the task is a computer vision task.
- the input includes pixel data for one or more images and the task is an image processing task.
- the image processing task can be image classification, where the output is a set of scores, each score corresponding to a different object class and representing the likelihood that the one or more images depict an object belonging to the object class.
- the image processing task may be object detection, where the image processing output identifies one or more regions in the one or more images and, for each region, a likelihood that region depicts an object of interest.
- the image processing task can be image segmentation, where the image processing output defines, for each pixel in the one or more images, a respective likelihood for each category in a predetermined set of categories.
- the set of categories can be foreground and background.
- the set of categories can be object classes.
- the image processing task can be depth estimation, where the image processing output defines, for each pixel in the one or more images, a respective depth value.
- the image processing task can be motion estimation, where the network input includes multiple images, and the image processing output defines, for each pixel of one of the input images, a motion of the scene depicted at the pixel between the images in the network input.
- the input includes audio data representing a spoken utterance and the task is a speech recognition task.
- the output may comprise a text output which is mapped to the spoken utterance.
- the task comprises encrypting or decrypting input data.
- the task comprises a microprocessor performance task, such as branch prediction or memory address translation.
- FIG. 9 A illustrates one example computing system that can be used to implement the present disclosure.
- the user computing device 902 can include the model trainer 960 and the training dataset 962 .
- the models 920 can be both trained and used locally at the user computing device 902 .
- the user computing device 902 can implement the model trainer 960 to personalize the models 920 based on user-specific data.
- FIG. 9 B depicts a block diagram of an example computing device 970 that performs according to example embodiments of the present disclosure.
- the computing device 970 can be a user computing device or a server computing device.
- the computing device 970 includes a number of applications (e.g., applications 1 through N). Each application contains its own machine learning library and machine-learned model(s). For example, each application can include a machine-learned model.
- Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc.
- each application can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components.
- each application can communicate with each device component using an API (e.g., a public API).
- the API used by each application is specific to that application.
- FIG. 9 C depicts a block diagram of an example computing device 990 that performs according to example embodiments of the present disclosure.
- the computing device 990 can be a user computing device or a server computing device.
- the computing device 990 includes a number of applications (e.g., applications 1 through N). Each application is in communication with a central intelligence layer. Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc. In some implementations, each application can communicate with the central intelligence layer (and model(s) stored therein) using an API (e.g., a common API across all applications).
- applications e.g., applications 1 through N.
- Each application is in communication with a central intelligence layer.
- Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc.
- each application can communicate with the central intelligence layer (and model(s) stored therein) using an API (e.g., a common API across all applications).
- the central intelligence layer includes a number of machine-learned models. For example, as illustrated in FIG. 9 C , a respective machine-learned model (e.g., a model) can be provided for each application and managed by the central intelligence layer. In other implementations, two or more applications can share a single machine-learned model. For example, in some implementations, the central intelligence layer can provide a single model (e.g., a single model) for all of the applications. In some implementations, the central intelligence layer is included within or otherwise implemented by an operating system of the computing device 990 .
- a respective machine-learned model e.g., a model
- two or more applications can share a single machine-learned model.
- the central intelligence layer can provide a single model (e.g., a single model) for all of the applications.
- the central intelligence layer is included within or otherwise implemented by an operating system of the computing device 990 .
- the central intelligence layer can communicate with a central device data layer.
- the central device data layer can be a centralized repository of data for the computing device 990 .
- the central device data layer can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components.
- the central device data layer can communicate with each device component using an API (e.g., a private API).
- FIG. 2 depicts a block diagram of an example access authorization system according to example embodiments of the present disclosure.
- the access authorization system 200 can be configured to receive an access request from a third party computing system 204 descriptive of a request to access user data (e.g., personal data 218 and/or a view log 220 ) associated with a particular user and, as a result of receipt of the access request from a third party computing system 204 , provide access action 216 that is descriptive of a level of access provided to the third party computing system 204 .
- the access authorization system 200 can include an authorization block 210 that facilitates the authorization determination.
- a user computing system 202 can communicate with a third party computing system 204 (e.g., a third party computing system associated with a medical service provider, a security system provider, a government entity, an insurance provider, and/or a web platform).
- the third party computing system 204 can generate an access request in response to the interaction (e.g., the user computing system 202 may send a medical request and/or a security request associated with the third party computing system 204 , which can trigger a request to receive user data to better tailor the search results).
- the access request can be obtained and processed by an authorization block 210 .
- the authorization block 210 can include one or more deterministic functions. Alternatively and/or additionally, the authorization block 210 can include a machine-learned model trained on previous authorization interactions by the user.
- the authorization block 210 can process the access request to determine whether the third party computing system is associated with an authorized entity (e.g., an authorized web domain, an authorized medical service provider, an authorized security system provider, and/or an authorized web platform) by comparing the identification data against an authorization list 212 of authorized entities. Alternatively and/or additionally, the authorization block 210 can generate a notification 214 that can be sent to the user computing system 202 prompting an input from the user. The authorization block 210 can then receive an authorization input, a semi-authorization input, and/or a no authorization input from the user computing system 202 . The authorization block 210 can then determine and/or generate an access action 216 based on the user input.
- an authorized entity e.g., an authorized web domain, an authorized medical service provider, an authorized security system provider, and/or an authorized web platform
- the access action 216 may include providing access to personal data 218 to the third party computing system 204 .
- the personal data 218 and/or the view log 220 may be stored on a blockchain.
- Access to the personal data 218 can include providing a viewing interface to the third party computing system 204 that allows the third party to view the data and/or interact with the data without augmenting or copying the data.
- log data in response to providing access to the personal data 218 , log data can be generated and added to the view log 220 .
- the log data can include a time of access, a duration of access, a type of access (e.g., view access, copy access, and/or edit access), and/or the particular entity.
- the log data can be written onto the blockchain.
- the view log 220 and the personal data 218 can be associated with the particular user and may be paired with a user-specific blockchain ID.
- the personal data 218 and/or the view log 220 may be associated with a token ID.
- Providing access to the personal data can include obtaining and/or utilizing one or more public keys and/or one or more private keys.
- FIG. 3 depicts a block diagram of an example access action determination system 300 according to example embodiments of the present disclosure.
- an access request 302 and third party data 304 can be obtained from a third party computing system.
- the third party data 304 can be processed with an entity model 306 to generate entity data 308 .
- the entity data 308 can be descriptive of a particular entity associated with the third party computing system.
- the entity data 308 can be descriptive of a type of entity (e.g., a medical provider entity, a security system entity, a government entity, and/or an insurance entity) associated with the third party computing system.
- the access request 302 and the entity data 308 can be processed with an authorization block 310 .
- the authorization block 310 may generate a notification 312 descriptive of the access request 302 and the entity data 308 .
- the notification 312 can be transmitted to a user computing system, which can return user input data 314 in response to a selection of a user interface element of the notification 312 . For example, a selection of a level of access element in the user interface of the notification 312 .
- An access action 318 can then be determined based on the user input data 314 .
- the authorization block 310 can obtain an authorization list 316 associated with the particular user.
- the entity data 308 can be processed with the authorization list 316 to determine if the entity data 308 is associated with a particular line item of the authorization list 316 . If an association is determined, the access request and the line item can be compared to determine whether the type of access and/or the level of access meet the pre-authorization type and level for the particular entity or particular entity type.
- an access action 318 can be determined.
- the access action can include providing full access to the user data, access to only certain types of user data, or no access to the user data.
- the access action 318 can include a read call and/or a write call.
- a view log 320 may be adjusted based on the access action 318 . For example, the entity data 308 , the time of access, the type of access, and what was done during the access may be added to the view log 320 .
- FIG. 4 depicts a block diagram of an example computing system that performs personal data access authorization 400 according to example embodiments of the present disclosure.
- the computing system that performs personal data access authorization 400 can include a user computing system 410 , a third party computing system 420 , and/or a blockchain computing system 430 .
- the user computing system 410 , the third party computing system 420 , and the blockchain computing system 430 can communicate over a network 402 .
- the various computing systems can communicate with one another in order to facilitate the exchange of user data to generate a more user-specific prediction or suggestion with regards to a service provided by the third party.
- the user computing system 410 can include a notification interface 412 , storage of authorization data 414 , and/or a blockchain ID 416 .
- the notification interface 412 can be part of a user interface for providing notifications for display. Additionally and/or alternatively, the notification interface 412 can receive one or more user inputs associated with a selection of a level of access to be provided to the third party web platform.
- the authorization data 414 can include instructions for determining and/or implementing access actions. Additionally and/or alternatively, the authorization data 414 can include data associated with previous authorization actions.
- the blockchain ID 416 can include data associated with a blockchain specific profile for the user.
- the blockchain ID 416 can include public or private keys, token IDs, and/or contract addresses.
- the third party computing system 420 can include access request data 422 , service operations 424 , and/or a third party interface 426 .
- the access request data 422 can be descriptive of a template access request to be sent when collecting data. Alternatively and/or additionally, the access request data 422 can be descriptive of the data requesting to be accessed (e.g., medical history data, biometric data, provider-specific data, time-specific data, etc.) and the type of access (e.g., read access, edit access, write access, copy access, delete access, etc.).
- the service operations 424 can include one or more operations for implementing an operation associated with a computer-implemented service provided by at least one of the third party service provider, a web platform, web application, and/or a web service. The service operations 424 may leverage the personal data for a more user-specific experience.
- the third party interface 426 can be part of a larger web platform interface.
- the blockchain computing system 430 can be a distributed and decentralized computing system.
- the blockchain computing system 430 can store the personal data 432 , the view log 434 , and/or the authorization data 436 over the decentralized and decentralized blockchain.
- the personal data 432 , the view log 434 , and/or the authorization data 436 may be governed by a smart contract such that viewing may occur in response to a trigger event. Additionally and/or alternatively, the personal data 432 , the view log 434 , and/or the authorization data 436 may be encrypted via one or more encryption techniques.
- FIG. 5 depicts a block diagram of an example user dataset 500 according to example embodiments of the present disclosure.
- the personal data may be obtained from a plurality of third party computing systems (e.g., one or more biometric entities, one or more medical entities, and/or one or more other entities) over a period of time (e.g., years, months, days, hours, minutes, etc.).
- a first user data 510 associated with a first user and second user data 522 associated with a second user can be stored on a blockchain 508 .
- the first user data 510 and/or the second user data 522 can be generated based on data provided and/or generated based on user-specific documentation, which can include biometrics documentation data 502 , a first medical service provider data 504 , and/or an nth medical service provider data 506 .
- the user may be able to choose when and to what extent data is obtained from each particular entity.
- the permissions may be stored on the blockchain 508 .
- the first user data 510 can include medical history data 512 , biometric data 514 , client-specific data 516 , previous interaction data, and/or view log data 520 .
- the medical history data 512 can include past medical exams, past surgeries, past treatments, past blood work, past medical visits, and/or other medical context associated with the first user.
- the medical history data 512 may be obtained and/or generated based on data provided from third party computing systems (e.g., the biometrics documentation data 502 from a biometric entity, a first medical service provider data 504 from a first medical provider, and/or an nth medical service provider data 506 from an nth medical provider).
- the biometric data 514 can include iris data, facial data, bodily fluid data, and/or fingerprint data associated with the first user.
- the biometric data 514 may be obtained and/or generated based on data provided from a third party computing system.
- the client-specific data 516 can include additional client-specific data associated with the first user.
- the client-specific data 516 may be obtained and/or generated based on interactions with a general interface and/or a specific web platform.
- the previous interaction data 518 can include previous interactions with one or more web platforms.
- the view log data 520 may include data descriptive of instances of data generation and/or data viewing.
- FIG. 6 depicts a flow chart diagram of an example method to perform according to example embodiments of the present disclosure.
- FIG. 6 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement.
- the various steps of the method 600 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
- a computing system can receive an access request from a third party computing system.
- the access request can be descriptive of a request to access biological data for a particular user.
- the biological data can be stored on a blockchain.
- the biological data can be associated with biological characteristics of the particular user.
- the biological data can include biometric data associated with the particular user.
- the biometric data can include iris data associated with the particular user.
- the iris data can be descriptive of one or more identifying features of an iris of the particular user.
- the biometric data can include face data associated with the particular user.
- the face data can be descriptive of one or more identifying features of a face of the particular user.
- the biometric data can include fingerprint data associated with the particular user.
- the fingerprint data can be descriptive of one or more identifying features of a fingerprint of the particular user.
- the computing system can determine a particular entity associated with the third party computing system.
- the particular entity can be associated with a web platform.
- the particular entity may be associated with a medical service provider, an authentication computing system, and/or a government entity. Determining the particular entity can be based on obtaining and processing an internet protocol address, a device yin number, profile information, and/or transmission metadata. The determination may be based on a database of entities associated with particular web IDs.
- the computing system can transmit a notification to a particular user computing system.
- the particular user computing system can be associated with the particular user.
- the notification can be descriptive of the access request and the particular entity.
- the access request can include a timestamp and a particular level of access requested. The levels of access can differ based on the type of entity. For example, a medical service provider may be provided write access and read access, while a non-medical professional may be provided read access without write access.
- the notification can be provided to a particular user's smartphone, a smart wearable (e.g., a smartwatch or smart glasses), a tablet, and/or another computing device. In some implementations, the notification may include an option to request further information from the third party computing system.
- the computing system can receive user input data from a particular user computing system.
- the user input data can be descriptive of a user response to the access request.
- the user input data can be descriptive of approval of the request, denial of the request, and/or a partial approval.
- the user input data may be descriptive of a request for further information on the particular entity.
- the user input data can include a selection of an option provided via the user interface of the notification portal.
- the user input data may be received with a user identifier and/or a device identifier.
- the notification generation and transmittal may be replaced and/or complemented by location determination.
- a location of the particular user can be determined based on one or more mobile devices associated with the particular user.
- the location data can then be utilized to authenticate the access of the biological data based on the particular entity being a medical service provider associated with the location of the particular user (e.g., a user may be in a hospital and a hospital computer may be requesting access).
- the computing system can determine an access action based on the user input data.
- the access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain.
- the access action can include a read call without write access.
- the level of access can include full access, partial access, and/or no access.
- the access action can be descriptive of a particular subset of the biological data to provide access to the third party to view.
- the subset can include biometric data, medical history data, and/or other biological data.
- the access action can include providing the biological data to the third party computing system.
- the access action can include providing a subset of the biological data to the third party computing system.
- the access action can include accessing a blockchain node based on the access request and identifying blockchain data associated with the particular user.
- the blockchain data can include the biological data.
- the blockchain data can include a view log associated with the biological data.
- the computing system can adjust a view log based on the access action.
- the view log can be descriptive of one or more viewers associated with the biological data.
- the view log can be stored on the blockchain and may be associated with the particular user and/or the biological data.
- the computing system can cause the access action to occur and determine a view time of the access action. Adjusting the viewer log can include logging the view time associated with the access action.
- the computing system can determine the particular entity is associated with a medical service provider.
- the access action can include providing the biological data to the medical service provider.
- FIG. 7 depicts a flow chart diagram of an example method to perform according to example embodiments of the present disclosure.
- FIG. 7 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement.
- the various steps of the method 700 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
- a computing system can receive an access request from a third party computing system.
- the access request can be descriptive of a request to access personal data associated with a particular user.
- the personal data can be stored on a blockchain.
- the personal data can include biometric data associated with the particular user.
- the personal data can include other biological data such as medical history data, drug routine, and/or blood type.
- the biometric data can include iris data, fingerprint data, and/or facial data that can be utilized to verify the identity of the particular user.
- the personal data can include other user data associated with the identity of the particular user.
- the computing system can determine a particular entity associated with the third party computing system.
- the particular entity can be associated with a third party service provider.
- the third party service provider can include a medical service provider, a security provider (e.g., a security provider that utilizes fingerprint data to provide secure locks for buildings), and/or an insurance service provider.
- the computing system can determine an access action based on whether the particular entity is associated with one or more authorized entities.
- the one or more authorized entities can be determined based on one or more user inputs.
- the one or more authorized entities can be determined based on an authorization list.
- the one or more authorized entities can be determined based on the type of entity.
- the particular entity may be determined to be a medical entity, a government entity, a research entity, and/or an insurance entity.
- the computing system can adjust a view log associated with the personal data based on the access action. Adjusting the view log can include adding log data associated with the particular entity and the access request to the view log.
- the view log can include a plurality of entries associated with a plurality of different accesses provided to a plurality of different third parties.
- the view log can include the time of access and one or more identifiers associated with the particular third party who accessed the personal data.
- the one or more identifiers can include internet protocol addresses, web IDs, data associated with a web profile, a blockchain ID, and/or a hash function.
- the computing system can provide blockchain data associated with the particular user.
- the blockchain data can include the personal data.
- the blockchain data can include encrypted personal data and may include information descriptive of times and dates for different medical exams for the particular user.
- FIG. 8 depicts a flow chart diagram of an example method to perform according to example embodiments of the present disclosure.
- FIG. 8 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement.
- the various steps of the method 800 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
- a computing system can provide personal data to a third party computing system.
- the personal data can be associated with a particular user.
- the personal data can be stored on a blockchain.
- the personal data can include biological data.
- the biological data can include medical history data, biometric data, and/or general identity-specific data (e.g., blood type and/or birth information).
- the computing system can determine a particular entity associated with the third party computing system.
- the particular entity can be associated with one or more web identifiers.
- the particular entity can include a hospital, an employer, an insurance company, a security company, a dentist, a general practitioner, a medical specialist, and/or a blood donation company.
- the computing system can determine a view time associated with the third party computing system having access to the personal data.
- the view time can be determined by accessing an internal clock of a computing system.
- the view time may be based on the time of request and/or may be based on the time of the access occurring.
- the computing system can generate log data based on the particular entity and the view time.
- the log time can be descriptive of the one or more web identifiers and the view time.
- the log data may include metadata associated with the type of access, the view duration of the access, and/or the level of access provided to the particular third party computing system.
- the computing system can store the log data in association with the personal data.
- the log data can be stored with previous log data of a view log.
- the view log can store data associated with the interactions with the personal data, which can include a read call, a write call, and/or download call.
- the technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems.
- the inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components.
- processes discussed herein can be implemented using a single device or component or multiple devices or components working in combination.
- Databases and applications can be implemented on a single system or distributed across multiple systems. Distributed components can operate sequentially or in parallel.
Abstract
Systems and methods for identity management can leverage a blockchain to securely store and access personal data. Third party computing systems can request access to the personal data to obtain biometric data, medical history data, and/or other biological data associated with the user. The systems and methods can determine whether to provide access to the data and can generate log data to be logged in a view log based on the access provided.
Description
- This application claims priority to and the benefit of U.S. Provisional Patent Application No. 63/396,649, filed Aug. 10, 2022. U.S. Provisional Patent Application No. 63/396,649 is hereby incorporated by reference in its entirety.
- The present disclosure relates generally to the authorization of access to personal data associated with a user. More particularly, the present disclosure relates to leveraging the data security of a blockchain for providing a secure database for personal data such as biological data for the particular user that can be accessed by different third parties and a view log can be generated to track viewers.
- A plurality of different third parties associated with a plurality of different third parties may request user data from a user. The different third parties can include medical service providers, biometric security companies, and insurance companies. Additionally, the plurality of different third parties can collect and aggregate their own user-specific data for each of their plurality of users. The third party specific collection and aggregation can lead to a user having their personal information stored in a plurality of different databases that the user may not be able to control.
- Therefore, the user may be repetitively providing the same or similar data to a plurality of third parties. The third parties can then replicate and/or alter the data in a plurality of different ways without notice to the user. Additionally, the user may have limited control over the deletion of the data. Even for the third parties that do provide an accessible deletion feature, the user data may be stored by a plurality of third parties, which can make the deletion task tedious and, in some instances, impractical.
- Aspects and advantages of embodiments of the present disclosure will be set forth in part in the following description, or can be learned from the description, or can be learned through practice of the embodiments.
- One example aspect of the present disclosure is directed to a computing system. The computing system can include one or more processors and one or more non-transitory computer-readable media that collectively store instructions that, when executed by the one or more processors, cause the computing system to perform operations. The operations can include receiving an access request from a third party computing system. The access request can be descriptive of a request to access biological data for a particular user. The biological data can be stored on a blockchain. In some implementations, the biological data can be associated with biological characteristics of the particular user. The operations can include determining a particular entity associated with the third party computing system. The operations can include transmitting a notification to a particular user computing system. The particular user computing system can be associated with the particular user. In some implementations, the notification can be descriptive of the access request and the particular entity. The operations can include receiving user input data from a particular user computing system. The user input data can be descriptive of a user response to the access request. The operations can include determining an access action based on the user input data. The access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain. The operations can include adjusting a view log based on the access action. The view log can be descriptive of one or more viewers associated with the biological data.
- Another example aspect of the present disclosure is directed to a computer-implemented method. The method can include receiving, by a computing system including one or more processors, an access request from a third party computing system. The access request can be descriptive of a request to access personal data associated with a particular user. The personal data can be stored on a blockchain. In some implementations, the personal data can include biometric data associated with the particular user. The method can include determining, by the computing system, a particular entity associated with the third party computing system. The particular entity can be associated with a third party service provider. The method can include determining, by the computing system, an access action based on whether the particular entity is associated with one or more authorized entities. The one or more authorized entities can be determined based on one or more user inputs. The method can include adjusting, by the computing system, a view log associated with the personal data based on the access action. In some implementations, adjusting the view log can include adding log data associated with the particular entity and the access request to the view log. The method can include providing, by the computing system, blockchain data associated with the particular user. The blockchain data can include the personal data.
- Another example aspect of the present disclosure is directed to one or more non-transitory computer-readable media that collectively store instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform operations. The operations can include providing personal data to a third party computing system. The personal data can be associated with a particular user. In some implementations, the personal data can be stored on a blockchain. The operations can include determining a particular entity associated with the third party computing system. The particular entity can be associated with one or more web identifiers. The operations can include determining a view time associated with the third party computing system having access to the personal data. The operations can include generating log data based on the particular entity and the view time. The log data can be descriptive of the one or more web identifiers and the view time. The operations can include storing the log data in association with the personal data.
- Other aspects of the present disclosure are directed to various systems, apparatuses, non-transitory computer-readable media, user interfaces, and electronic devices.
- These and other features, aspects, and advantages of various embodiments of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate example embodiments of the present disclosure and, together with the description, serve to explain the related principles.
- Detailed discussion of embodiments directed to one of ordinary skill in the art is set forth in the specification, which makes reference to the appended figures, in which:
-
FIG. 1A depicts a block diagram of an example computing system that performs user identity management according to example embodiments of the present disclosure. -
FIG. 1B depicts a block diagram of an example computing device that performs identity management according to example embodiments of the present disclosure. -
FIG. 2 depicts a block diagram of an example access authorization system according to example embodiments of the present disclosure. -
FIG. 3 depicts a block diagram of an example access action determination system according to example embodiments of the present disclosure. -
FIG. 4 depicts a block diagram of an example computing system that performs personal data access authorization according to example embodiments of the present disclosure. -
FIG. 5 depicts a block diagram of an example user dataset according to example embodiments of the present disclosure. -
FIG. 6 depicts a flow chart diagram of an example method to perform user data access authorization according to example embodiments of the present disclosure. -
FIG. 7 depicts a flow chart diagram of an example method to perform personalization model access authorization according to example embodiments of the present disclosure. -
FIG. 8 depicts a flow chart diagram of an example method to perform access authorization according to example embodiments of the present disclosure. -
FIG. 9A depicts a block diagram of an example computing system that performs identity management according to example embodiments of the present disclosure. -
FIG. 9B depicts a block diagram of an example computing device that performs identity management according to example embodiments of the present disclosure. -
FIG. 9C depicts a block diagram of an example computing system that performs identity management according to example embodiments of the present disclosure. - Reference numerals that are repeated across plural figures are intended to identify the same features in various implementations.
- Generally, the present disclosure is directed to systems and methods for decentralized identity management. In particular, the systems and methods disclosed herein can leverage personal data stored on a blockchain to provide biometric data and other personal data to a third party computing system in a secure manner. For example, the systems and methods can include receiving an access request from a third party computing system. The access request can be descriptive of a request to access biological data for a particular user. In some implementations, the biological data can be stored on a blockchain. The biological data can be associated with biological characteristics of the particular user. The systems and methods can include determining a particular entity associated with the third party computing system. In some implementations, the systems and methods can include transmitting a notification to a particular user computing system. The particular user computing system can be associated with the particular user. In some implementations, the notification can be descriptive of the access request and the particular entity. The systems and methods can include receiving user input data from a particular user computing system. The user input data can be descriptive of a user response to the access request. The systems and methods can include determining an access action based on the user input data. The access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain. A viewer log can be adjusted based on the access action. The viewer log can be descriptive of one or more viewers associated with the biological data.
- In particular, the systems and methods of the present disclosure can leverage a blockchain to provide a secure system for providing personal data to third parties, which can limit and/or remove the ability of third parties to copy and/or edit the personal data. Additionally and/or alternatively, the systems and methods can be leveraged to provide a user with the ability to wipe their information from the blockchain, which when paired with the mitigation of the ability to copy the personal data can allow for a user to wipe (or erase) the user data from the internet. The user can facilitate the read and write access to the personal data, which can allow the user to decide which and to what extent their data is stored and/or viewed. For example, the user can utilize the systems and methods disclosed herein to facilitate whether a particular medical service provider, insurance company, and/or biometric security provider are allowed to view the personal data. The personal data can include a user's medical history, biometric data, and/or other biological data.
- The systems and methods can receive an access request from a third party computing system. The access request can be descriptive of a request to access biological data for a particular user. In some implementations, the biological data can be stored on a blockchain. The biological data can be associated with biological characteristics of the particular user. Additionally and/or alternatively, the biological data can include biometric data associated with the particular user. The biometric data can include iris data associated with the particular user. The iris data can be descriptive of one or more identifying features of an iris of the particular user. Alternatively and/or additionally, the biometric data can include face data associated with the particular user. The face data can be descriptive of one or more identifying features of a face of the particular user. In some implementations, the biometric data can include fingerprint data associated with the particular user. The fingerprint data can be descriptive of one or more identifying features of a fingerprint of the particular user.
- The systems and methods can determine a particular entity associated with the third party computing system. The particular entity can be associated with a web platform. In some implementations, the particular entity may be associated with a medical service provider, an authentication computing system, and/or a government entity. Determining the particular entity can be based on obtaining and processing an internet protocol address, a device yin number, profile information, and/or transmission metadata. The determination may be based on a database of entities associated with particular web IDs.
- A notification can be generated and/or transmitted to a particular user computing system. The particular user computing system can be associated with the particular user. In some implementations, the notification can be descriptive of the access request and the particular entity. The access request can include a timestamp and a particular level of access requested. The levels of access can differ based on the type of entity. For example, a medical service provider may be provided write access and read access, while a non-medical professional may be provided read access without write access. The notification can be provided to a particular user's smartphone, a smart wearable (e.g., a smartwatch or smart glasses), a tablet, and/or another computing device. In some implementations, the notification may include an option to request further information from the third party computing system.
- User input data can then be received from a particular user computing system. The user input data can be descriptive of a user response to the access request. The user input data can be descriptive of approval of the request, denial of the request, and/or a partial approval. In some implementations, the user input data may be descriptive of a request for further information on the particular entity. The user input data can include a selection of an option provided via the user interface of the notification portal. The user input data may be received with a user identifier and/or a device identifier.
- In some implementations, the notification generation and transmittal may be replaced and/or complemented by location determination. For example, a location of the particular user can be determined based on one or more mobile devices associated with the particular user. The location data can then be utilized to authenticate the access of the biological data based on the particular entity being a medical service provider associated with the location of the particular user (e.g., a user may be in a hospital and a hospital computer may be requesting access).
- The systems and methods can determine an access action based on the user input data. The access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain. The access action can include a read call without write access. The level of access can include full access, partial access, and/or no access. In some implementations, the access action can be descriptive of a particular subset of the biological data to provide access to the third party to view. The subset can include biometric data, medical history data, and/or other biological data.
- In some implementations, the access action can include providing the biological data to the third party computing system. Alternatively and/or additionally, the access action can include providing a subset of the biological data to the third party computing system.
- In some implementations, the access action can include accessing a blockchain node based on the access request and identifying blockchain data associated with the particular user. The blockchain data can include the biological data. In some implementations, the blockchain data can include a view log associated with the biological data.
- A view log can be adjusted based on the access action. The view log can be descriptive of one or more viewers associated with the biological data. The view log can be stored on the blockchain and may be associated with the particular user and/or the biological data.
- In some implementations, the systems and methods can include causing the access action to occur and determining a view time of the access action. Adjusting the viewer log can include logging the view time associated with the access action.
- Alternatively and/or additionally, the systems and methods can include determining the particular entity is associated with a medical service provider. In some implementations, the access action can include providing the biological data to the medical service provider.
- The systems and methods can facilitate the access to biometric data that can be utilized for validating the identity of the particular user. For example, the systems and methods can include receiving an access request from a third party computing system. The access request can be descriptive of a request to access personal data associated with a particular user. In some implementations, the personal data can be stored on a blockchain. The personal data can include biometric data associated with the particular user. A particular entity associated with the third party computing system can be determined. The particular entity can be associated with a third party service provider. The systems and methods can include determining an access action based on whether the particular entity is associated with one or more authorized entities. The one or more authorized entities can be determined based on one or more user inputs. The systems and methods can include adjusting a view log associated with the personal data based on the access action. Adjusting the view log can include adding log data associated with the particular entity and the access request to the view log. The systems and methods can include providing blockchain data associated with the particular user. The blockchain data can include the personal data.
- The systems and methods can receive an access request from a third party computing system. The access request can be descriptive of a request to access personal data associated with a particular user. In some implementations, the personal data can be stored on a blockchain. The personal data can include biometric data associated with the particular user. Alternatively and/or additionally, the personal data can include other biological data such as medical history data, drug routine, and/or blood type. The biometric data can include iris data, fingerprint data, and/or facial data that can be utilized to verify the identity of the particular user. In some implementations, the personal data can include other user data associated with the identity of the particular user.
- The systems and methods can determine a particular entity associated with the third party computing system. The particular entity can be associated with a third party service provider. The third party service provider can include a medical service provider, a security provider (e.g., a security provider that utilizes fingerprint data to provide secure locks for buildings), and/or an insurance service provider.
- An access action can be determined based on whether the particular entity is associated with one or more authorized entities. The one or more authorized entities can be determined based on one or more user inputs. The one or more authorized entities can be determined based on an authorization list. Alternatively and/or additionally, the one or more authorized entities can be determined based on the type of entity. For example, the particular entity may be determined to be a medical entity, a government entity, a research entity, and/or an insurance entity.
- A view log associated with the personal data can then be adjusted based on the access action. Adjusting the view log can include adding log data associated with the particular entity and the access request to the view log. The view log can include a plurality of entries associated with a plurality of different accesses provided to a plurality of different third parties. The view log can include the time of access and one or more identifiers associated with the particular third party who accessed the personal data. The one or more identifiers can include internet protocol addresses, web IDs, data associated with a web profile, a blockchain ID, and/or a hash function.
- The systems and methods can provide blockchain data associated with the particular user. The blockchain data can include the personal data. For example, the blockchain data can include encrypted personal data and may include information descriptive of times and dates for different medical exams for the particular user.
- The systems and methods can generate and store log data on a blockchain in association with the viewing of the personal data by third parties. For example, the systems and methods can include providing personal data to a third party computing system. The personal data can be associated with a particular user. In some implementations, the personal data can be stored on a blockchain. The systems and methods can include determining a particular entity associated with the third party computing system. The particular entity can be associated with one or more web identifiers. The systems and methods can include determining a view time associated with the third party computing system having access to the personal data and generating log data based on the particular entity and the view time. The log time can be descriptive of the one or more web identifiers and the view tine. In some implementations, the systems and methods can include storing the log data in association with the personal data.
- The systems and methods can provide personal data to a third party computing system. The personal data can be associated with a particular user. In some implementations, the personal data can be stored on a blockchain. The personal data can include biological data. The biological data can include medical history data, biometric data, and/or general identity-specific data (e.g., blood type and/or birth information).
- The systems and methods can determine a particular entity associated with the third party computing system. The particular entity can be associated with one or more web identifiers. The particular entity can include a hospital, an employer, an insurance company, a security company, a dentist, a general practitioner, a medical specialist, and/or a blood donation company.
- A view time associated with the third party computing system having access to the personal data can then be determined. The view time can be determined by accessing an internal clock of a computing system. The view time may be based on the time of request and/or may be based on the time of the access occurring.
- Log data can be generated based on the particular entity and the view time. The log time can be descriptive of the one or more web identifiers and the view time. The log data may include metadata associated with the type of access, the view duration of the access, and/or the level of access provided to the particular third party computing system.
- The log data can then be stored in association with the personal data. The log data can be stored with previous log data of a view log. The view log can store data associated with the interactions with the personal data, which can include a read call, a write call, and/or download call.
- The personal data, the view log, and/or the authorization data may be encrypted when stored on the blockchain. The encryption can utilize one or more cryptographic techniques. In some implementations, the blockchain data can include one or more pointers to the personal data stored in a user database.
- The blockchain can be utilized to verify what gets accessed and what gets written, which may minimize the possibility of a bulk copy of data. Additionally and/or alternatively, the systems and methods can add medical history and biometric data to a blockchain log. In some implementations, the systems and methods can add biological data to blockchain.
- In some implementations, the personal data can be utilized to determine and/or provide preliminary predictions to medical service providers based on the medical history and/or one or more input symptoms (e.g., a medical service provider can access the medical history and provide their own report, which can be processed with the medical history to provide a preliminary diagnosis). The user may be able to select what data is saved and what data is not allowed to be documented and stored.
- In some implementations, the systems and methods can include a black box neural network model stored to the blockchain and trained on the biological data associated with the particular user. The third party computing system may build a second machine-learned model on top of the other machine-learned model.
- An authorization list (e.g., a permissions list associated with the user) can be managed via a mobile application.
- The systems and methods disclosed herein can allow a user to easily move data from one application to another. The user can be aggregated on the blockchain to store data from a plurality of medical service providers to be later provided to a plurality of other medical service providers.
- The personal data can be stored on a blockchain with one or more token IDs associated with the user. The personal data can include account IDs associated with the user and one or more third parties.
- In some implementations, the access action can include a read call and/or can include a write call.
- In some implementations, virtual reality data and/or augmented-reality data can be stored on the blockchain. Additionally and/or alternatively, medical history data, biometric data, non-fungible token data, personal information, profile information, tags, application data, payment data, addresses, names, drivers license data, passport data, and identity data can be stored as part of the user data.
- The systems and methods can include embedding a unique hidden code in the personal data, which can be identified during scans for the hidden code or fingerprint. Additionally and/or alternatively, the systems and methods can include an application that runs on a protected virtual machine, which is utilized to read the personal data to provide temporary, but not permanent, access.
- The systems and methods of the present disclosure provide a number of technical effects and benefits. As one example, the system and methods can provide systems and methods for providing secure management of personal data for a user. For example, the systems and methods disclosed herein can leverage blockchain technology to prevent the duplication and localization of the personal data and can be utilized to control who can edit and/or add to the user data.
- Another technical benefit of the systems and methods of the present disclosure is the ability to leverage a notification interface to provide a user interface to a user to allow for the selection of which requesters can access their data. Additionally, data associated with the viewers can be logged to track who and to what extent the personal data is viewed and/or interacted with by third parties. For example, the systems and methods disclosed herein can process an access request, determine an entity associated with the requestor, generate a notification based on the request and the entity, transmit the notification, and obtain, in return, input data descriptive of whether the requestor can access the personal data. Data associated with the particular entity can then be logged in a view log in case an audit of viewers occurs.
- Another example of technical effect and benefit relates to improved computational efficiency and improvements in the functioning of a computing system. For example, the systems and methods disclosed herein can leverage the blockchain storage to limit the amount of power required to edit and or delete personal data being utilized by a plurality of third parties. In particular, a user can augment a single dataset instead of having to navigate to a plurality of web pages to edit a plurality of datasets, which may be redundant to one another.
- With reference now to the Figures, example embodiments of the present disclosure will be discussed in further detail.
-
FIG. 1A depicts a block diagram of anexample computing system 100 that performs user identity management according to example embodiments of the present disclosure. Thesystem 100 includes auser computing system 130, aserver computing system 110, acreator computing system 150, and ablockchain computing system 170 that are communicatively coupled over anetwork 180. - The
user computing system 130 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device. - The
user computing system 130 includes one ormore processors 132 and amemory 134. The one ormore processors 132 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 134 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 134 can storedata 136 andinstructions 138 which are executed by theprocessor 132 to cause theuser computing system 130 to perform operations. - The
user computing system 130 can also include one or more user input components that receive user input. For example, the user input component can be a touch-sensitive component (e.g., a touch-sensitive display screen or a touch pad) that is sensitive to the touch of a user input object (e.g., a finger or a stylus). The touch-sensitive component can serve to implement a virtual keyboard. Other example user input components include a microphone, a traditional keyboard, or other means by which a user can provide user input. - The
server computing system 110 includes one ormore processors 112 and amemory 114. The one ormore processors 112 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 114 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 114 can storedata 118 andinstructions 116 which are executed by theprocessor 112 to cause theserver computing system 110 to perform operations. - In some implementations, the
server computing system 110 includes or is otherwise implemented by one or more server computing devices. In instances in which theserver computing system 110 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof. - The
blockchain computing system 170 includes one or more processors and a memory. The one or more processors can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. The memory can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. The memory can store data and instructions which are executed by the processor to cause theblockchain computing system 170 to perform operations. In some implementations, theblockchain computing system 170 includes or is otherwise implemented by one or more server computing devices. - The
network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links. In general, communication over thenetwork 180 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL). - The
computing system 100 can include a number of applications (e.g.,applications 1 through N). Each application can be in communication with a central intelligence layer. Example applications can include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc. In some implementations, each application can communicate with the central intelligence layer (and model(s) stored therein) using an API (e.g., a common API across all applications). - The central intelligence layer can communicate with a central device data layer. The central device data layer can be a centralized repository of data for the
computing system 100. In some implementations, the central device data layer can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, the central device data layer can communicate with each device component using an API (e.g., a private API). - Additionally and/or alternatively,
FIG. 1A depicts anexemplary computing system 100 that can be used to implement personal data access authorization according to aspects of the present disclosure. Thesystem 100 has a user-server architecture that includes aserver 110 that communicates with one or moreuser computing systems 130 over anetwork 180. However, the present disclosure can be implemented using other suitable architectures, which can include any number of computing systems communicating over anetwork 180. - The
system 100 includes aserver 110, such as, for example, a web server. Theserver 110 can be one or more computing devices that are implemented as a parallel computing system and/or a distributed computing system. In particular, multiple computing devices can act together as asingle server 110. Theserver 110 can have one or more processor(s) 112 and amemory 114. Theserver 110 can also include a network interface used to communicate with one or more remote computing devices (e.g., user devices) 130 over anetwork 180. - The processor(s) 112 can be any suitable processing device, such as a microprocessor, microcontroller, integrated circuit, or other suitable processing device. The
memory 114 can include any suitable computing system or media, including, but not limited to, non-transitory computer-readable media, RAM, ROM, hard drives, flash drives, or other memory devices. Thememory 114 can store information accessible by processor(s) 112, includinginstructions 116 that can be executed by processor(s) 112. Theinstructions 116 can be any set of instructions that when executed by the processor(s) 112, cause the processor(s) 112 to provide desired functionality. - In particular, the
instructions 116 can be executed by the processor(s) 112 to implement index adjustment (e.g., index deduplication). Theuser profile database 120 can be configured to store a plurality of user profiles associated with a plurality of users utilizing one or moreuser computing systems 130. In some implementations, theuser profile database 120 can be configured to be utilized for facilitating one or more interactions. The facilitation of the one or more interactions can involve the use of a blockchain application programming interface (API) 122 to send data to and receive data from ablockchain computing system 170. For example, aserver computing system 110 can utilize theblockchain API 122 to update one ormore ledgers 172 of theblockchain computing system 170. The one ormore ledgers 172 can be associated with one ormore tokens 174. The one ormore tokens 174 can include one or more non-fungible tokens, which can include scripts associated with a digital asset (e.g., image data, video data, text data, latent encoding data, domain data, audio data, augmented-reality asset rendering data, and/or virtual-reality asset rendering data). In particular, the script can reference a specific digital asset that is provided for sale. The digital asset can include image data, text data, video data, latent encoding data, a domain name, a virtual property, an augmented-reality asset, a virtual-reality asset (e.g., a virtual-reality environment and/or a virtual-reality object for interaction in an environment), a smart contract, a physical item authentication, etc. In some implementations, the one ormore ledgers 172 can be associated with cryptocurrency that can be utilized to make transactions in a physical marketplace and/or a virtual marketplace. - It will be appreciated that the term “element” can refer to computer logic utilized to provide desired functionality. Thus, any element, function, and/or instructions can be implemented in hardware, application specific circuits, firmware and/or software controlling a general purpose processor. In one implementation, the elements or functions are program code files stored on the storage device, loaded into memory and executed by a processor or can be provided from computer program products, for example computer executable instructions, that are stored in a tangible computer-readable storage medium such as RAM, hard disk or optical or magnetic media.
-
Memory 114 can also includedata 118 that can be retrieved, manipulated, created, or stored by processor(s) 112. Thedata 118 can include search result data, ranking data, image data (e.g., digital maps, satellite images, aerial photographs, street-level photographs, synthetic models, paintings, personal images, portraits, etc.), video data, audio data, text data (e.g., books, articles, blogs, poems, etc.), latent encoding data, blockchain address data, tables, vector data (e.g., vector representations of roads, parcels, buildings, etc.), point of interest data (e.g., locales such as islands, cities, restaurants, hospitals, parks, hotels, and schools), or other data or related information. As an example, thedata 118 can be used to access information and data associated with a specific digital asset, website, search result, blockchain, etc. - The
data 118 can be stored in one or more databases. The one or more databases can be connected to theserver 110 by a high bandwidth LAN or WAN, or can also be connected toserver 110 throughnetwork 180. The one or more databases can be split up so that they are located in multiple locales. - The
server 110 can exchange data with one or moreuser computing systems 130 over thenetwork 180. Although twouser computing systems 130 are illustrated inFIG. 1A , any number ofuser computing systems 130 can be connected to theserver 110 over thenetwork 180. Theuser computing systems 130 can be any suitable type of computing device, such as a general purpose computer, special purpose computer, navigational device, laptop, desktop, integrated circuit, mobile device, smartphone, tablet, wearable-computing devices, a display with one or more processors coupled thereto and/or embedded therein, or other suitable computing device. Further, theuser computing system 130 can be multiple computing devices acting together to perform operations or computing actions. - Similar to
server 110, auser computing system 130 can include a processor(s) 132 and amemory 134. Thememory 134 can store information accessible by processor(s) 132, including instructions that can be executed by processor(s) and data. As an example,memory 134 can storedata 136 andinstructions 138. -
Instructions 138 can provide instructions for implementing a browser, a non-fungible token purchase, and/or a plurality of other functions. In particular, the user ofuser computing system 130 can exchange data withserver 110 by using the browser to visit a website accessible at a particular web-address. The personal data management of the present disclosure can be provided as an element of a user interface of a website and/or application. - The
data 136 can include data related to running a specialized application on theuser computing system 130. In particular, the specialized application can be used to exchange data withserver 110 over thenetwork 180. Thedata 136 can include user-device-readable code for providing and implementing aspects of the present disclosure. Additionally and/or alternatively, thedata 136 can include data related to previously inputted or received data. For example, thedata 136 can include data related to past occurrences of the special application. - The
user computing system 130 can include various user input devices for receiving information from a user, such as a touch screen, touch pad, data entry keys, speakers, mouse, motion sensor, and/or a microphone suitable for voice recognition. Further, theuser computing system 130 can have a display for presenting information, such as a user interface, displaying a digital asset, displaying pop-ups or application elements displayed in an interface, and/or other forms of information. - The
user computing system 130 can also include auser profile 140 that can be used to identify a user of theuser computing system 130. Theuser profile 140 can be optionally used by the user to make one or more transactions which can then be recorded on one ormore ledgers 172 of theblockchain computing system 170. Theuser profile 140 can be descriptive of user information, which can include identification numbers and/or payment account information. For example, theuser profile 140 can include data associated with a crypto wallet, which may be linked to a browser application via an application extension and/or embedding. - The
user computing system 130 can further include a graphics processing unit. Graphics processing unit can be used byprocessor 132 to index adjustment. In some embodiments, theuser computing system 130 performs any and all index adjustment. - The
user computing system 130 can include a network interface for communicating with aserver 110 over anetwork 180. Network interface can include any components or configuration suitable for communication withserver 110 overnetwork 180, including, for example, one or more ports, transmitters, wireless cards, controllers, physical layer components, or other items for communication according to any currently known or future developed communications protocol or technology. - The
network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof. Thenetwork 180 can also include a direct connection betweenuser computing system 130 and theserver 110. In general, communication between theserver 110 and auser computing system 130 can be carried via network interface using any type of wired and/or wireless connection, using a variety of communication protocols (e.g., TCP/IP, HTTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL). - In some implementations, the
exemplary computing system 100 can include one or morecreator computing systems 150. The one or morecreator computing systems 150 can be utilized for generating images, videos, prose, poetry, audio, etc., which can then be provided for sale. The one or morecreator computing systems 150 can include one ormore processors 152, which can be utilized to execute one or more operations to implement the systems and methods disclosed herein. The one or morecreator computing systems 150 can include one ormore memory components 154, which can be utilized to storedata 156 and one ormore instructions 158. Thedata 156 can include data related to one or more applications, one or more media datasets, etc. Theinstructions 158 can include one or more operations for implementing the systems and methods disclosed herein. - The one or more
creator computing systems 150 can store data associated with one or moredigital assets 160 and/or one or more creator profiles 162. The one or moredigital assets 160 can include text data, image data, video data, audio data, latent encoding data, domain data, or a variety of other data formats. The one ormore creator profiles 162 can include information associated with one or more “creators” of the one or moredigital assets 160. The one ormore creator profiles 162 can include identification data, transaction data, and/or crypto wallet data. - Additionally and/or alternatively, the
exemplary computing system 100 can include one or moreblockchain computing systems 170. The one or moreblockchain computing systems 170 can include a plurality of computing devices being utilized for decentralized data storage, such that a plurality of “blocks” can be distributed throughout a network of computing devices to provide a secure system for data storage, which can include one ormore ledgers 172 and one ormore tokens 174. In some implementations, each of the one ormore tokens 174 can be associated with at least a portion of the one ormore ledgers 172. - Blockchain can refer to a system configured to securely record information. The blockchain can include a decentralized system that can render changing information extremely difficult. The blockchain can include a digital ledger of transactions that can be duplicated and distributed across a network of computing systems. Each block in the chain can include a number of transactions. When a new transaction occurs on the blockchain, a record of that transaction can be added to every computing device's ledger. The blockchain can be utilized to track the exchange of currency and/or digital assets via the recording of transactions on the digital ledger, which can be propagated throughout the decentralized system. The currency exchanged and tracked via the
blockchain computing system 170 can be referred to as cryptocurrency. - The
tokens 174 can include one or more non-fungible tokens. The non-fungible tokens can be minted on a blockchain associated with theblockchain computing system 170. A non-fungible token (NFT) can be a certificate of authenticity of a digital asset. NFTs can be non-interchangeable thus making their worth depend on the price anyone may be willing to pay for the asset. NFTs can be printed on blockchains such that their scarcity and authenticity can be maintained. A digital asset can be defined as anything that is stored digitally and can be uniquely identifiable that organizations can use to realize value. Examples of digital assets can include a tweet, a social media comment, documents, audio, images, videos, logos, website domains, slide presentations, spreadsheets, CSS files and formats, executable code, and/or websites. -
FIG. 1B depicts a block diagram of anexample blockchain 50 that may be utilized by theblockchain computing system 170 of theexemplary computing system 100 ofFIG. 1A . Theexample blockchain 50 can include a plurality of blocks that can be utilized to store data with one or more cryptographic features. Theblockchain 50 can be stored on a decentralized computing system comprising a plurality of computing devices. Theblockchain 50 can be a public blockchain (e.g., a blockchain that is open without access restrictions such that anyone with an internet access can send transactions or validate transactions as part of the decentralized, distributed system), a private blockchain (e.g., a blockchain that provides access based on permissions set by network administrators), or a hybrid blockchain (e.g., a blockchain with a combination of blocks with no restrictions and blocks with restrictions). Theblockchain 50 can include proof of work features that can include one or more cryptographic forms of proof. The proof of work can be provided upon a request to update the blockchain 50 (e.g., a request to update the ledgers based on a new transaction). The proof of work can convey that a certain device or group of devices have performed a certain amount of computation, which can then be validated by other parties. Once validated, theblockchain 50 can be updated, or may remain unchanged in response to a failure to validate. The proof of work feature can be utilized to mitigate the computational cost of every device in the system having to perform the same computational functions and checks for determining a request is valid for updating theblockchain 50. - Each block can include a hash, a previous hash associated with the hash of the previous block, and data. In some implementations, each block can include a nonce. A hash can be a hash value of a fixed length that can be a fingerprint for the particular block. The hash value can be generated based on a hash function and may be changed each time a change is made to the data of that particular block. The previous hash can include a hash value of the block immediately preceding the particular block. The previous hash can be utilized to ensure the downstream ground truth stays unchanged unless proper validation occurs. The data can include transaction data (e.g., a transaction ledger), a timestamp, a value associated with a cryptocurrency value, a non-fungible token (e.g., a non-fungible token including a script that references a digital asset, nonce data, and/or general blockchain data. Nonce (i.e., a number only used once) can be a number added to a block in a blockchain that can meet a difficulty level restriction when a block is rehashed. The nonce can be a number that blockchain miners are solving for, in order to receive an incentive (e.g., cryptocurrency).
- The
blockchain 50 can include one or more security protocols and/or features. Theblockchain 50 can include a cryptographic system. For example, theblockchain 50 can validate theblockchain 50 is valid by ensuring the stored previous hash stored in the block matches the hash value of the previous block from the last block back to the first block (e.g., the genesis block). In some implementations, theblockchain 50 can include proof of work validation that can rely on verifying proof of computation before implementing a change to the stored data (e.g., the stored ledger). Proof of work validation can take seconds, minutes, and/or hours based in part on the number of blocks in theblockchain 50. Additionally and/or alternatively, theblockchain 50 can be implemented on a distributed, decentralized computing system. In some implementations, each computing device in the distributed, decentralized computing system can store a portion of (e.g., a block of the plurality of blocks) or all of the blocks in theblockchain 50. Therefore, the system can verify data by ensuring the data is uniform across most, if not all, of the distributed system. Each node of the distributed system can be checked for tampering before adding new data. - The data can include data associated with a cryptocurrency value (e.g., a ledger associated with a specific cryptocurrency value), data associated with a digital asset (e.g., a non-fungible token minted on the
blockchain 50 that can include a script associated with the digital asset), data associated with a smart contract (e.g., a smart contract that includes conditions that automatically initiates an action in response to a criteria being met), and/or timestamp data (e.g., timestamp data for block creation, minting, a transaction, etc.). - In particular,
FIG. 1B depicts afirst block 10, asecond block 20, athird block 30, afourth block 40, and annth block 60. Although five blocks are depicted, any number of blocks can be utilized. Thefirst block 10 can be a genesis block (e.g., a first overall block in the blockchain). Thefirst block 10 can include a respective first hash 12 (e.g., a hash value associated with the first block 10). Thefirst block 10 may include a first previous hash 14 (e.g., if thefirst block 10 has a block before it in theblockchain 50, then the hash of the previous block can be stored on the first block 10). Additionally and/or alternatively, thefirst block 10 can includedata 16 andnonce 18. - The
second block 20 can follow thefirst block 10. Thesecond block 20 can include a respective second hash 22 (e.g., a hash value associated with the second block 20). Thesecond block 20 may include a second previous hash 24 (e.g., the secondprevious hash 24 can be the same as, or reference, the first hash 12). Additionally and/or alternatively, thesecond block 20 can includedata 26 andnonce 28. - The
third block 30 can follow thesecond block 20. Thethird block 30 can include a respective third hash 32 (e.g., a hash value associated with the third block 30). Thethird block 30 may include a third previous hash 34 (e.g., the thirdprevious hash 34 can be the same as, or reference, the second hash 22). Additionally and/or alternatively, thethird block 30 can includedata 36 andnonce 38. - Additionally and/or alternatively, the
fourth block 40, thenth block 60, and other potential blocks can include a respective hash, a respective previous hash, and data. Thefirst data 16, thesecond data 26, thethird data 36, and the data of the other blocks can include overlapping data, can differ, and/or be the same such that the data is duplicative for all blocks. In some implementations, each block can be associated with a different transaction (e.g., a different minting, a different sale, etc.). Thefirst nonce 18, thesecond nonce 28, thethird nonce 38, and the nonce's of the other blocks can differ and may be solved during mining. - The data in each block can include ledger data, which can include a timestamp, asset and/or cryptocurrency exchanged, actors involved in transaction, and/or a variety of other information.
- In some implementations, a plurality of different blockchains can be utilized for the systems and methods disclosed herein. The different blockchains can include different configurations. The different blockchains can include parallel chains, side chains, shared blocks, differing chains, varying permissions, varying purposes, varying number of blocks, and/or varying hash functions and/or varying hashing value lengths.
- In some implementations, the systems and methods can include one or more machine-learned
model computing systems 900. The one or more machine-learned models can be utilized for a variety of tasks for enabling token data identification, obtainment, indexing, and deduplication. -
FIG. 9A depicts a block diagram of anexample computing system 900 that performs user identity management according to example embodiments of the present disclosure. Thesystem 900 includes auser computing device 902, aserver computing system 930, and atraining computing system 950 that are communicatively coupled over anetwork 980. - The
user computing device 902 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device. - The
user computing device 902 includes one ormore processors 912 and amemory 914. The one ormore processors 912 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 914 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 914 can storedata 916 andinstructions 918 which are executed by theprocessor 912 to cause theuser computing device 902 to perform operations. - In some implementations, the
user computing device 902 can store or include one or more machine-learnedmodels 920. For example, the machine-learnedmodels 920 can be or can otherwise include various machine-learned models such as neural networks (e.g., deep neural networks) or other types of machine-learned models, including non-linear models and/or linear models. Neural networks can include feed-forward neural networks, recurrent neural networks (e.g., long short-term memory recurrent neural networks), convolutional neural networks or other forms of neural networks. Example machine-learnedmodels 920 are discussed with reference toFIGS. 2 & 3 . - In some implementations, the one or more machine-learned
models 920 can be received from theserver computing system 930 overnetwork 980, stored in the usercomputing device memory 914, and then used or otherwise implemented by the one ormore processors 912. In some implementations, theuser computing device 902 can implement multiple parallel instances of a single machine-learned model 920 (e.g., to perform user-specific prediction or suggestion across multiple instances of third party service providers). - More particularly, the machine-learned
model 920 can include one or more detection models, one or more segmentation models, one or more classification models, one or more augmentation models, one or more generation models, and/or one or more feature extractor models. The machine-learnedmodel 920 can process input data to generate a suggestion and/or a prediction specific to the particular user. - Additionally or alternatively, one or more machine-learned
models 940 can be included in or otherwise stored and implemented by theserver computing system 930 that communicates with theuser computing device 902 according to a client-server relationship. For example, the machine-learnedmodels 940 can be implemented by theserver computing system 930 as a portion of a web service (e.g., a personalization service). Thus, one ormore models 920 can be stored and implemented at theuser computing device 902 and/or one ormore models 940 can be stored and implemented at theserver computing system 930. - The
user computing device 902 can also include one or moreuser input components 922 that receive user input. For example, theuser input component 922 can be a touch-sensitive component (e.g., a touch-sensitive display screen or a touch pad) that is sensitive to the touch of a user input object (e.g., a finger or a stylus). The touch-sensitive component can serve to implement a virtual keyboard. Other example user input components include a microphone, a traditional keyboard, or other means by which a user can provide user input. - The
server computing system 930 includes one ormore processors 932 and amemory 934. The one ormore processors 932 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 934 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 934 can storedata 936 andinstructions 938 which are executed by theprocessor 932 to cause theserver computing system 930 to perform operations. - In some implementations, the
server computing system 930 includes or is otherwise implemented by one or more server computing devices. In instances in which theserver computing system 930 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof. - As described above, the
server computing system 930 can store or otherwise include one or more machine-learnedmodels 940. For example, themodels 940 can be or can otherwise include various machine-learned models. Example machine-learned models include neural networks or other multi-layer non-linear models. Example neural networks include feed forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks.Example models 940 are discussed with reference toFIGS. 2 & 3 . - The
user computing device 902 and/or theserver computing system 930 can train themodels 920 and/or 940 via interaction with thetraining computing system 950 that is communicatively coupled over thenetwork 980. Thetraining computing system 950 can be separate from theserver computing system 930 or can be a portion of theserver computing system 930. - The
training computing system 950 includes one ormore processors 952 and amemory 954. The one ormore processors 952 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 954 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 954 can storedata 956 andinstructions 958 which are executed by theprocessor 952 to cause thetraining computing system 950 to perform operations. In some implementations, thetraining computing system 950 includes or is otherwise implemented by one or more server computing devices. - The
training computing system 950 can include amodel trainer 960 that trains the machine-learnedmodels 920 and/or 940 stored at theuser computing device 902 and/or theserver computing system 930 using various training or learning techniques, such as, for example, backwards propagation of errors. For example, a loss function can be backpropagated through the model(s) to update one or more parameters of the model(s) (e.g., based on a gradient of the loss function). Various loss functions can be used such as mean squared error, likelihood loss, cross entropy loss, hinge loss, and/or various other loss functions. Gradient descent techniques can be used to iteratively update the parameters over a number of training iterations. - In some implementations, performing backwards propagation of errors can include performing truncated backpropagation through time. The
model trainer 960 can perform a number of generalization techniques (e.g., weight decays, dropouts, etc.) to improve the generalization capability of the models being trained. - In particular, the
model trainer 960 can train the machine-learnedmodels 920 and/or 940 based on a set oftraining data 962. Thetraining data 962 can include, for example, training blockchain data, training biometric data, training medical history data, training symptom data, ground truth labels, ground truth information, and/or ground truth segmentation masks. - In some implementations, if the user has provided consent, the training examples can be provided by the
user computing device 902. Thus, in such implementations, themodel 920 provided to theuser computing device 902 can be trained by thetraining computing system 950 on user-specific data received from theuser computing device 902. In some instances, this process can be referred to as personalizing the model. - The
model trainer 960 includes computer logic utilized to provide desired functionality. Themodel trainer 960 can be implemented in hardware, firmware, and/or software controlling a general purpose processor. For example, in some implementations, themodel trainer 960 includes program files stored on a storage device, loaded into a memory and executed by one or more processors. In other implementations, themodel trainer 960 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or optical or magnetic media. - The
network 980 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links. In general, communication over thenetwork 980 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL). - The machine-learned models described in this specification may be used in a variety of tasks, applications, and/or use cases.
- In some implementations, the input to the machine-learned model(s) of the present disclosure can be image data. The machine-learned model(s) can process the image data to generate an output. As an example, the machine-learned model(s) can process the image data to generate an image recognition output (e.g., a recognition of the image data, a latent embedding of the image data, an encoded representation of the image data, a hash of the image data, etc.). As another example, the machine-learned model(s) can process the image data to generate an image segmentation output. As another example, the machine-learned model(s) can process the image data to generate an image classification output. As another example, the machine-learned model(s) can process the image data to generate an image data modification output (e.g., an alteration of the image data, etc.). As another example, the machine-learned model(s) can process the image data to generate an encoded image data output (e.g., an encoded and/or compressed representation of the image data, etc.). As another example, the machine-learned model(s) can process the image data to generate a prediction output.
- In some implementations, the input to the machine-learned model(s) of the present disclosure can be text or natural language data. The machine-learned model(s) can process the text or natural language data to generate an output. As an example, the machine-learned model(s) can process the natural language data to generate a language encoding output. As another example, the machine-learned model(s) can process the text or natural language data to generate a latent text embedding output. As another example, the machine-learned model(s) can process the text or natural language data to generate a classification output. As another example, the machine-learned model(s) can process the text or natural language data to generate a textual segmentation output. As another example, the machine-learned model(s) can process the text or natural language data to generate a semantic intent output. As another example, the machine-learned model(s) can process the text or natural language data to generate an upscaled text or natural language output (e.g., text or natural language data that is higher quality than the input text or natural language, etc.). As another example, the machine-learned model(s) can process the text or natural language data to generate a prediction output.
- In some implementations, the input to the machine-learned model(s) of the present disclosure can be speech data. The machine-learned model(s) can process the speech data to generate an output. As an example, the machine-learned model(s) can process the speech data to generate a speech recognition output. As another example, the machine-learned model(s) can process the speech data to generate a speech translation output. As another example, the machine-learned model(s) can process the speech data to generate a latent embedding output. As another example, the machine-learned model(s) can process the speech data to generate an encoded speech output (e.g., an encoded and/or compressed representation of the speech data, etc.). As another example, the machine-learned model(s) can process the speech data to generate a textual representation output (e.g., a textual representation of the input speech data, etc.). As another example, the machine-learned model(s) can process the speech data to generate a prediction output.
- In some implementations, the input to the machine-learned model(s) of the present disclosure can be latent encoding data (e.g., a latent space representation of an input, etc.). The machine-learned model(s) can process the latent encoding data to generate an output. As an example, the machine-learned model(s) can process the latent encoding data to generate a recognition output. As another example, the machine-learned model(s) can process the latent encoding data to generate a reconstruction output. As another example, the machine-learned model(s) can process the latent encoding data to generate a search output. As another example, the machine-learned model(s) can process the latent encoding data to generate a reclustering output. As another example, the machine-learned model(s) can process the latent encoding data to generate a prediction output.
- In some implementations, the input to the machine-learned model(s) of the present disclosure can be statistical data. The machine-learned model(s) can process the statistical data to generate an output. As an example, the machine-learned model(s) can process the statistical data to generate a recognition output. As another example, the machine-learned model(s) can process the statistical data to generate a prediction output. As another example, the machine-learned model(s) can process the statistical data to generate a classification output. As another example, the machine-learned model(s) can process the statistical data to generate a segmentation output. As another example, the machine-learned model(s) can process the statistical data to generate a segmentation output. As another example, the machine-learned model(s) can process the statistical data to generate a visualization output. As another example, the machine-learned model(s) can process the statistical data to generate a diagnostic output.
- In some cases, the machine-learned model(s) can be configured to perform a task that includes encoding input data for reliable and/or efficient transmission or storage (and/or corresponding decoding). For example, the task may be audio compression task. The input may include audio data and the output may comprise compressed audio data. In another example, the input includes visual data (e.g., one or more images or videos), the output comprises compressed visual data, and the task is a visual data compression task. In another example, the task may comprise generating an embedding for input data (e.g., input audio or visual data).
- In some cases, the input includes visual data, and the task is a computer vision task. In some cases, the input includes pixel data for one or more images and the task is an image processing task. For example, the image processing task can be image classification, where the output is a set of scores, each score corresponding to a different object class and representing the likelihood that the one or more images depict an object belonging to the object class. The image processing task may be object detection, where the image processing output identifies one or more regions in the one or more images and, for each region, a likelihood that region depicts an object of interest. As another example, the image processing task can be image segmentation, where the image processing output defines, for each pixel in the one or more images, a respective likelihood for each category in a predetermined set of categories. For example, the set of categories can be foreground and background. As another example, the set of categories can be object classes. As another example, the image processing task can be depth estimation, where the image processing output defines, for each pixel in the one or more images, a respective depth value. As another example, the image processing task can be motion estimation, where the network input includes multiple images, and the image processing output defines, for each pixel of one of the input images, a motion of the scene depicted at the pixel between the images in the network input.
- In some cases, the input includes audio data representing a spoken utterance and the task is a speech recognition task. The output may comprise a text output which is mapped to the spoken utterance. In some cases, the task comprises encrypting or decrypting input data. In some cases, the task comprises a microprocessor performance task, such as branch prediction or memory address translation.
-
FIG. 9A illustrates one example computing system that can be used to implement the present disclosure. Other computing systems can be used as well. For example, in some implementations, theuser computing device 902 can include themodel trainer 960 and thetraining dataset 962. In such implementations, themodels 920 can be both trained and used locally at theuser computing device 902. In some of such implementations, theuser computing device 902 can implement themodel trainer 960 to personalize themodels 920 based on user-specific data. -
FIG. 9B depicts a block diagram of anexample computing device 970 that performs according to example embodiments of the present disclosure. Thecomputing device 970 can be a user computing device or a server computing device. - The
computing device 970 includes a number of applications (e.g.,applications 1 through N). Each application contains its own machine learning library and machine-learned model(s). For example, each application can include a machine-learned model. Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc. - As illustrated in
FIG. 9B , each application can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, each application can communicate with each device component using an API (e.g., a public API). In some implementations, the API used by each application is specific to that application. -
FIG. 9C depicts a block diagram of anexample computing device 990 that performs according to example embodiments of the present disclosure. Thecomputing device 990 can be a user computing device or a server computing device. - The
computing device 990 includes a number of applications (e.g.,applications 1 through N). Each application is in communication with a central intelligence layer. Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc. In some implementations, each application can communicate with the central intelligence layer (and model(s) stored therein) using an API (e.g., a common API across all applications). - The central intelligence layer includes a number of machine-learned models. For example, as illustrated in
FIG. 9C , a respective machine-learned model (e.g., a model) can be provided for each application and managed by the central intelligence layer. In other implementations, two or more applications can share a single machine-learned model. For example, in some implementations, the central intelligence layer can provide a single model (e.g., a single model) for all of the applications. In some implementations, the central intelligence layer is included within or otherwise implemented by an operating system of thecomputing device 990. - The central intelligence layer can communicate with a central device data layer. The central device data layer can be a centralized repository of data for the
computing device 990. As illustrated inFIG. 9C , the central device data layer can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, the central device data layer can communicate with each device component using an API (e.g., a private API). -
FIG. 2 depicts a block diagram of an example access authorization system according to example embodiments of the present disclosure. In some implementations, theaccess authorization system 200 can be configured to receive an access request from a thirdparty computing system 204 descriptive of a request to access user data (e.g.,personal data 218 and/or a view log 220) associated with a particular user and, as a result of receipt of the access request from a thirdparty computing system 204, provideaccess action 216 that is descriptive of a level of access provided to the thirdparty computing system 204. Thus, in some implementations, theaccess authorization system 200 can include anauthorization block 210 that facilitates the authorization determination. - For example, a
user computing system 202 can communicate with a third party computing system 204 (e.g., a third party computing system associated with a medical service provider, a security system provider, a government entity, an insurance provider, and/or a web platform). The thirdparty computing system 204 can generate an access request in response to the interaction (e.g., theuser computing system 202 may send a medical request and/or a security request associated with the thirdparty computing system 204, which can trigger a request to receive user data to better tailor the search results). The access request can be obtained and processed by anauthorization block 210. Theauthorization block 210 can include one or more deterministic functions. Alternatively and/or additionally, theauthorization block 210 can include a machine-learned model trained on previous authorization interactions by the user. - The
authorization block 210 can process the access request to determine whether the third party computing system is associated with an authorized entity (e.g., an authorized web domain, an authorized medical service provider, an authorized security system provider, and/or an authorized web platform) by comparing the identification data against anauthorization list 212 of authorized entities. Alternatively and/or additionally, theauthorization block 210 can generate anotification 214 that can be sent to theuser computing system 202 prompting an input from the user. Theauthorization block 210 can then receive an authorization input, a semi-authorization input, and/or a no authorization input from theuser computing system 202. Theauthorization block 210 can then determine and/or generate anaccess action 216 based on the user input. Theaccess action 216 may include providing access topersonal data 218 to the thirdparty computing system 204. In some implementations, thepersonal data 218 and/or theview log 220 may be stored on a blockchain. Access to thepersonal data 218 can include providing a viewing interface to the thirdparty computing system 204 that allows the third party to view the data and/or interact with the data without augmenting or copying the data. - In some implementations, in response to providing access to the
personal data 218, log data can be generated and added to theview log 220. The log data can include a time of access, a duration of access, a type of access (e.g., view access, copy access, and/or edit access), and/or the particular entity. The log data can be written onto the blockchain. Theview log 220 and thepersonal data 218 can be associated with the particular user and may be paired with a user-specific blockchain ID. In some implementations, thepersonal data 218 and/or theview log 220 may be associated with a token ID. Providing access to the personal data can include obtaining and/or utilizing one or more public keys and/or one or more private keys. -
FIG. 3 depicts a block diagram of an example accessaction determination system 300 according to example embodiments of the present disclosure. In particular, anaccess request 302 andthird party data 304 can be obtained from a third party computing system. Thethird party data 304 can be processed with anentity model 306 to generateentity data 308. Theentity data 308 can be descriptive of a particular entity associated with the third party computing system. Alternatively and/or additionally, theentity data 308 can be descriptive of a type of entity (e.g., a medical provider entity, a security system entity, a government entity, and/or an insurance entity) associated with the third party computing system. - The
access request 302 and theentity data 308 can be processed with anauthorization block 310. Theauthorization block 310 may generate anotification 312 descriptive of theaccess request 302 and theentity data 308. Thenotification 312 can be transmitted to a user computing system, which can returnuser input data 314 in response to a selection of a user interface element of thenotification 312. For example, a selection of a level of access element in the user interface of thenotification 312. Anaccess action 318 can then be determined based on theuser input data 314. - Alternatively and/or additionally, the
authorization block 310 can obtain anauthorization list 316 associated with the particular user. Theentity data 308 can be processed with theauthorization list 316 to determine if theentity data 308 is associated with a particular line item of theauthorization list 316. If an association is determined, the access request and the line item can be compared to determine whether the type of access and/or the level of access meet the pre-authorization type and level for the particular entity or particular entity type. Based on the processing, anaccess action 318 can be determined. The access action can include providing full access to the user data, access to only certain types of user data, or no access to the user data. Alternatively and/or additionally, theaccess action 318 can include a read call and/or a write call. Aview log 320 may be adjusted based on theaccess action 318. For example, theentity data 308, the time of access, the type of access, and what was done during the access may be added to theview log 320. -
FIG. 4 depicts a block diagram of an example computing system that performs personaldata access authorization 400 according to example embodiments of the present disclosure. In particular, the computing system that performs personaldata access authorization 400 can include auser computing system 410, a thirdparty computing system 420, and/or ablockchain computing system 430. Theuser computing system 410, the thirdparty computing system 420, and theblockchain computing system 430 can communicate over anetwork 402. The various computing systems can communicate with one another in order to facilitate the exchange of user data to generate a more user-specific prediction or suggestion with regards to a service provided by the third party. - The
user computing system 410 can include anotification interface 412, storage ofauthorization data 414, and/or ablockchain ID 416. Thenotification interface 412 can be part of a user interface for providing notifications for display. Additionally and/or alternatively, thenotification interface 412 can receive one or more user inputs associated with a selection of a level of access to be provided to the third party web platform. Theauthorization data 414 can include instructions for determining and/or implementing access actions. Additionally and/or alternatively, theauthorization data 414 can include data associated with previous authorization actions. Theblockchain ID 416 can include data associated with a blockchain specific profile for the user. Theblockchain ID 416 can include public or private keys, token IDs, and/or contract addresses. - The third
party computing system 420 can includeaccess request data 422,service operations 424, and/or athird party interface 426. Theaccess request data 422 can be descriptive of a template access request to be sent when collecting data. Alternatively and/or additionally, theaccess request data 422 can be descriptive of the data requesting to be accessed (e.g., medical history data, biometric data, provider-specific data, time-specific data, etc.) and the type of access (e.g., read access, edit access, write access, copy access, delete access, etc.). Theservice operations 424 can include one or more operations for implementing an operation associated with a computer-implemented service provided by at least one of the third party service provider, a web platform, web application, and/or a web service. Theservice operations 424 may leverage the personal data for a more user-specific experience. Thethird party interface 426 can be part of a larger web platform interface. - The
blockchain computing system 430 can be a distributed and decentralized computing system. Theblockchain computing system 430 can store thepersonal data 432, theview log 434, and/or theauthorization data 436 over the decentralized and decentralized blockchain. Thepersonal data 432, theview log 434, and/or theauthorization data 436 may be governed by a smart contract such that viewing may occur in response to a trigger event. Additionally and/or alternatively, thepersonal data 432, theview log 434, and/or theauthorization data 436 may be encrypted via one or more encryption techniques. -
FIG. 5 depicts a block diagram of anexample user dataset 500 according to example embodiments of the present disclosure. The personal data may be obtained from a plurality of third party computing systems (e.g., one or more biometric entities, one or more medical entities, and/or one or more other entities) over a period of time (e.g., years, months, days, hours, minutes, etc.). For example, afirst user data 510 associated with a first user andsecond user data 522 associated with a second user can be stored on ablockchain 508. Thefirst user data 510 and/or thesecond user data 522 can be generated based on data provided and/or generated based on user-specific documentation, which can includebiometrics documentation data 502, a first medicalservice provider data 504, and/or an nth medicalservice provider data 506. The user may be able to choose when and to what extent data is obtained from each particular entity. The permissions may be stored on theblockchain 508. - The
first user data 510 can includemedical history data 512,biometric data 514, client-specific data 516, previous interaction data, and/orview log data 520. Themedical history data 512 can include past medical exams, past surgeries, past treatments, past blood work, past medical visits, and/or other medical context associated with the first user. Themedical history data 512 may be obtained and/or generated based on data provided from third party computing systems (e.g., thebiometrics documentation data 502 from a biometric entity, a first medicalservice provider data 504 from a first medical provider, and/or an nth medicalservice provider data 506 from an nth medical provider). Thebiometric data 514 can include iris data, facial data, bodily fluid data, and/or fingerprint data associated with the first user. Thebiometric data 514 may be obtained and/or generated based on data provided from a third party computing system. The client-specific data 516 can include additional client-specific data associated with the first user. The client-specific data 516 may be obtained and/or generated based on interactions with a general interface and/or a specific web platform. Theprevious interaction data 518 can include previous interactions with one or more web platforms. Theview log data 520 may include data descriptive of instances of data generation and/or data viewing. -
FIG. 6 depicts a flow chart diagram of an example method to perform according to example embodiments of the present disclosure. AlthoughFIG. 6 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement. The various steps of themethod 600 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure. - At 602, a computing system can receive an access request from a third party computing system. The access request can be descriptive of a request to access biological data for a particular user. In some implementations, the biological data can be stored on a blockchain. The biological data can be associated with biological characteristics of the particular user. Additionally and/or alternatively, the biological data can include biometric data associated with the particular user. The biometric data can include iris data associated with the particular user. The iris data can be descriptive of one or more identifying features of an iris of the particular user. Alternatively and/or additionally, the biometric data can include face data associated with the particular user. The face data can be descriptive of one or more identifying features of a face of the particular user. In some implementations, the biometric data can include fingerprint data associated with the particular user. The fingerprint data can be descriptive of one or more identifying features of a fingerprint of the particular user.
- At 604, the computing system can determine a particular entity associated with the third party computing system. The particular entity can be associated with a web platform. In some implementations, the particular entity may be associated with a medical service provider, an authentication computing system, and/or a government entity. Determining the particular entity can be based on obtaining and processing an internet protocol address, a device yin number, profile information, and/or transmission metadata. The determination may be based on a database of entities associated with particular web IDs.
- At 606, the computing system can transmit a notification to a particular user computing system. The particular user computing system can be associated with the particular user. In some implementations, the notification can be descriptive of the access request and the particular entity. The access request can include a timestamp and a particular level of access requested. The levels of access can differ based on the type of entity. For example, a medical service provider may be provided write access and read access, while a non-medical professional may be provided read access without write access. The notification can be provided to a particular user's smartphone, a smart wearable (e.g., a smartwatch or smart glasses), a tablet, and/or another computing device. In some implementations, the notification may include an option to request further information from the third party computing system.
- At 608, the computing system can receive user input data from a particular user computing system. The user input data can be descriptive of a user response to the access request. The user input data can be descriptive of approval of the request, denial of the request, and/or a partial approval. In some implementations, the user input data may be descriptive of a request for further information on the particular entity. The user input data can include a selection of an option provided via the user interface of the notification portal. The user input data may be received with a user identifier and/or a device identifier.
- In some implementations, the notification generation and transmittal may be replaced and/or complemented by location determination. For example, a location of the particular user can be determined based on one or more mobile devices associated with the particular user. The location data can then be utilized to authenticate the access of the biological data based on the particular entity being a medical service provider associated with the location of the particular user (e.g., a user may be in a hospital and a hospital computer may be requesting access).
- At 610, the computing system can determine an access action based on the user input data. The access action can be descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain. The access action can include a read call without write access. The level of access can include full access, partial access, and/or no access. In some implementations, the access action can be descriptive of a particular subset of the biological data to provide access to the third party to view. The subset can include biometric data, medical history data, and/or other biological data.
- In some implementations, the access action can include providing the biological data to the third party computing system. Alternatively and/or additionally, the access action can include providing a subset of the biological data to the third party computing system.
- In some implementations, the access action can include accessing a blockchain node based on the access request and identifying blockchain data associated with the particular user. The blockchain data can include the biological data. In some implementations, the blockchain data can include a view log associated with the biological data.
- At 612, the computing system can adjust a view log based on the access action. The view log can be descriptive of one or more viewers associated with the biological data. The view log can be stored on the blockchain and may be associated with the particular user and/or the biological data.
- In some implementations, the computing system can cause the access action to occur and determine a view time of the access action. Adjusting the viewer log can include logging the view time associated with the access action.
- Alternatively and/or additionally, the computing system can determine the particular entity is associated with a medical service provider. In some implementations, the access action can include providing the biological data to the medical service provider.
-
FIG. 7 depicts a flow chart diagram of an example method to perform according to example embodiments of the present disclosure. AlthoughFIG. 7 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement. The various steps of themethod 700 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure. - At 702, a computing system can receive an access request from a third party computing system. The access request can be descriptive of a request to access personal data associated with a particular user. In some implementations, the personal data can be stored on a blockchain. The personal data can include biometric data associated with the particular user. Alternatively and/or additionally, the personal data can include other biological data such as medical history data, drug routine, and/or blood type. The biometric data can include iris data, fingerprint data, and/or facial data that can be utilized to verify the identity of the particular user. In some implementations, the personal data can include other user data associated with the identity of the particular user.
- In some implementations, the computing system can determine a particular entity associated with the third party computing system. The particular entity can be associated with a third party service provider. The third party service provider can include a medical service provider, a security provider (e.g., a security provider that utilizes fingerprint data to provide secure locks for buildings), and/or an insurance service provider.
- At 704, the computing system can determine an access action based on whether the particular entity is associated with one or more authorized entities. The one or more authorized entities can be determined based on one or more user inputs. The one or more authorized entities can be determined based on an authorization list. Alternatively and/or additionally, the one or more authorized entities can be determined based on the type of entity. For example, the particular entity may be determined to be a medical entity, a government entity, a research entity, and/or an insurance entity.
- At 706, the computing system can adjust a view log associated with the personal data based on the access action. Adjusting the view log can include adding log data associated with the particular entity and the access request to the view log. The view log can include a plurality of entries associated with a plurality of different accesses provided to a plurality of different third parties. The view log can include the time of access and one or more identifiers associated with the particular third party who accessed the personal data. The one or more identifiers can include internet protocol addresses, web IDs, data associated with a web profile, a blockchain ID, and/or a hash function.
- At 708, the computing system can provide blockchain data associated with the particular user. The blockchain data can include the personal data. For example, the blockchain data can include encrypted personal data and may include information descriptive of times and dates for different medical exams for the particular user.
-
FIG. 8 depicts a flow chart diagram of an example method to perform according to example embodiments of the present disclosure. AlthoughFIG. 8 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement. The various steps of themethod 800 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure. - At 802, a computing system can provide personal data to a third party computing system. The personal data can be associated with a particular user. In some implementations, the personal data can be stored on a blockchain. The personal data can include biological data. The biological data can include medical history data, biometric data, and/or general identity-specific data (e.g., blood type and/or birth information).
- At 804, the computing system can determine a particular entity associated with the third party computing system. The particular entity can be associated with one or more web identifiers. The particular entity can include a hospital, an employer, an insurance company, a security company, a dentist, a general practitioner, a medical specialist, and/or a blood donation company.
- At 806, the computing system can determine a view time associated with the third party computing system having access to the personal data. The view time can be determined by accessing an internal clock of a computing system. The view time may be based on the time of request and/or may be based on the time of the access occurring.
- At 808, the computing system can generate log data based on the particular entity and the view time. The log time can be descriptive of the one or more web identifiers and the view time. The log data may include metadata associated with the type of access, the view duration of the access, and/or the level of access provided to the particular third party computing system.
- At 810, the computing system can store the log data in association with the personal data. The log data can be stored with previous log data of a view log. The view log can store data associated with the interactions with the personal data, which can include a read call, a write call, and/or download call.
- The technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems. The inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components. For instance, processes discussed herein can be implemented using a single device or component or multiple devices or components working in combination. Databases and applications can be implemented on a single system or distributed across multiple systems. Distributed components can operate sequentially or in parallel.
- While the present subject matter has been described in detail with respect to various specific example embodiments thereof, each example is provided by way of explanation, not limitation of the disclosure. Those skilled in the art, upon attaining an understanding of the foregoing, can readily produce alterations to, variations of, and equivalents to such embodiments. Accordingly, the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art. For instance, features illustrated or described as part of one embodiment can be used with another embodiment to yield a still further embodiment. Thus, it is intended that the present disclosure cover such alterations, variations, and equivalents.
Claims (20)
1. A computing system, the computing system comprising:
one or more processors; and
one or more non-transitory computer-readable media that collectively store instructions that, when executed by the one or more processors, cause the computing system to perform operations, the operations comprising:
receiving an access request from a third party computing system, wherein the access request is descriptive of a request to access biological data for a particular user, wherein the biological data is stored on a blockchain, and wherein the biological data is associated with biological characteristics of the particular user;
determining a particular entity associated with the third party computing system;
transmitting a notification to a particular user computing system, wherein the particular user computing system is associated with the particular user, wherein the notification is descriptive of the access request and the particular entity;
receiving user input data from a particular user computing system, wherein the user input data is descriptive of a user response to the access request;
determining an access action based on the user input data, wherein the access action is descriptive of a level of access to be provided to the third party computing system to the biological data on the blockchain; and
adjusting a view log based on the access action, wherein the view log is descriptive of one or more viewers associated with the biological data.
2. The computing system of claim 1 , wherein the operations further comprise:
causing the access action to occur;
determining a view time of the access action; and
wherein adjusting the viewer log comprises logging the view time associated with the access action.
3. The computing system of claim 1 , wherein the operations further comprise:
determining the particular entity is associated with a medical service provider; and
wherein the access action comprises providing the biological data to the medical service provider.
4. The computing system of claim 1 , wherein the access action comprises a read call without write access.
5. The computing system of claim 1 , wherein the access action comprises at least one of:
providing the biological data to the third party computing system; or
providing a subset of the biological data to the third party computing system.
6. The computing system of claim 1 , wherein the access action comprises:
accessing a blockchain node based on the access request; and
identifying blockchain data associated with the particular user.
7. The computing system of claim 1 , wherein the biological data comprises biometric data associated with the particular user.
8. The computing system of claim 7 , wherein the biometric data comprises iris data associated with the particular user, wherein the iris data is descriptive of one or more identifying features of an iris of the particular user.
9. The computing system of claim 7 , wherein the biometric data comprises face data associated with the particular user, wherein the face data is descriptive of one or more identifying features of a face of the particular user.
10. The computing system of claim 7 , wherein the biometric data comprises fingerprint data associated with the particular user, wherein the fingerprint data is descriptive of one or more identifying features of a fingerprint of the particular user.
11. The computing system of claim 1 , wherein the particular entity is associated with a web platform.
12. A computer-implemented method, the method comprising:
receiving, by a computing system comprising one or more processors, an access request from a third party computing system, wherein the access request is descriptive of a request to access personal data associated with a particular user, wherein the personal data is stored on a blockchain, and wherein the personal data comprises biometric data associated with the particular user;
determining, by the computing system, a particular entity associated with the third party computing system, wherein the particular entity is associated with a third party service provider;
determining, by the computing system, an access action based on whether the particular entity is associated with one or more authorized entities, wherein the one or more authorized entities are determined based on one or more user inputs;
adjusting, by the computing system, a view log associated with the personal data based on the access action, wherein adjusting the view log comprises adding log data associated with the particular entity and the access request to the view log; and
providing, by the computing system, blockchain data associated with the particular user, wherein the blockchain data comprises the personal data.
13. The method of claim 12 , wherein the biometric data is descriptive of one or more identifying features associated with the particular user.
14. The method of claim 12 , wherein the view log comprises a plurality of entries, wherein each entry comprises identification data associated with a viewer of the personal data.
15. The method of claim 12 , further comprising:
determining, by the computing system, the particular entity is associated with a medical service provider; and
wherein the access action comprises providing write access to the medical service provider.
16. The method of claim 15 , further comprising:
obtaining, by the computing system, additional personal data from the medical service provider; and
adding, by the computing system, the additional personal data to the blockchain.
17. One or more non-transitory computer-readable media that collectively store instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform operations, the operations comprising:
providing personal data to a third party computing system, wherein the personal data is associated with a particular user, wherein the personal data is stored on a blockchain;
determining a particular entity associated with the third party computing system, wherein the particular entity is associated with one or more web identifiers;
determining a view time associated with the third party computing system having access to the personal data;
generating log data based on the particular entity and the view time, wherein the log data is descriptive of the one or more web identifiers and the view time; and
storing the log data in association with the personal data.
18. The one or more non-transitory computer-readable media of claim 17 , wherein the personal data comprises medical history data associated with the particular user, wherein the medical history data is descriptive one or more previous medical statuses for the particular user.
19. The one or more non-transitory computer-readable media of claim 17 , wherein the log data is stored on the blockchain.
20. The one or more non-transitory computer-readable media of claim 17 , wherein the one or more web identifiers comprise at least one of an internet protocol address, web profile information, a blockchain key, or a computing device identifier.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US18/076,651 US20240056441A1 (en) | 2022-08-10 | 2022-12-07 | Decentralized Identity Management for Web3 |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202263396649P | 2022-08-10 | 2022-08-10 | |
US18/076,651 US20240056441A1 (en) | 2022-08-10 | 2022-12-07 | Decentralized Identity Management for Web3 |
Publications (1)
Publication Number | Publication Date |
---|---|
US20240056441A1 true US20240056441A1 (en) | 2024-02-15 |
Family
ID=89845713
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US18/076,651 Pending US20240056441A1 (en) | 2022-08-10 | 2022-12-07 | Decentralized Identity Management for Web3 |
Country Status (1)
Country | Link |
---|---|
US (1) | US20240056441A1 (en) |
-
2022
- 2022-12-07 US US18/076,651 patent/US20240056441A1/en active Pending
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11632238B2 (en) | Traceability of edits to digital documents via distributed ledgers | |
US20220050921A1 (en) | Systems and methods for functionally separating heterogeneous data for analytics, artificial intelligence, and machine learning in global data ecosystems | |
US20200162266A1 (en) | Facilitating analytic services for provenance of digital documents | |
US20230059806A1 (en) | Apparatus and Methods for Producing Data Structures Having Internal Self-References Suitable for Immutably Representing and Verifying Data | |
US20180205546A1 (en) | Systems, methods, apparatuses for secure management of legal documents | |
JP2020519210A (en) | Systems and methods for implementing centralized privacy controls in decentralized systems | |
US11755998B2 (en) | Smart data annotation in blockchain networks | |
US20170277774A1 (en) | Systems and methods for secure storage of user information in a user profile | |
US20230054446A1 (en) | Systems and methods for functionally separating geospatial information for lawful and trustworthy analytics, artificial intelligence and machine learning | |
US11048780B2 (en) | Preventing fraud in digital content licensing and distribution using distributed ledgers | |
US11907403B2 (en) | Dynamic differential privacy to federated learning systems | |
US20170277775A1 (en) | Systems and methods for secure storage of user information in a user profile | |
JP2019521537A (en) | System and method for securely storing user information in a user profile | |
US20220342958A1 (en) | Distributed systems for intelligent resource protection and validation | |
US10698639B2 (en) | Method and system of provisioning electronic forms | |
US20230009908A1 (en) | Distributed platform for integration of existing digital unique resources | |
CN113947471A (en) | Method, device and equipment for constructing risk assessment model | |
US11663397B1 (en) | Digital posting match recommendation apparatus and method | |
US20240056441A1 (en) | Decentralized Identity Management for Web3 | |
US20240048547A1 (en) | User Data and Personalization Models Implemented on a Blockchain | |
US20220027350A1 (en) | Blockchain enabled service provider system | |
US20240048397A1 (en) | Identity Management for Web2 and Web3 Environments | |
EP4322023A1 (en) | Authoritative factual service for blockchain smart contracts | |
US20240054190A1 (en) | Digital Rights Management for NFTs Across Search Surfaces | |
CN117040826A (en) | User data and personalization model implemented on blockchain |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BADR, IBRAHIM;REEL/FRAME:062486/0783Effective date: 20220823 |
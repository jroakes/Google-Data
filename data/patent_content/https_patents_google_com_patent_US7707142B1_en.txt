US7707142B1 - Methods and systems for performing an offline search - Google Patents
Methods and systems for performing an offline search Download PDFInfo
- Publication number
- US7707142B1 US7707142B1 US10/814,069 US81406904A US7707142B1 US 7707142 B1 US7707142 B1 US 7707142B1 US 81406904 A US81406904 A US 81406904A US 7707142 B1 US7707142 B1 US 7707142B1
- Authority
- US
- United States
- Prior art keywords
- result set
- search query
- categories
- search
- article
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
Definitions
- the invention generally relates to search engines. More particularly, the invention relates to methods and systems for performing an offline search for an article.
- search applications operating in a networked computer environment such as the World Wide Web and client-device search applications operating in an individual computer can provide search results in response to entry of a user's search query.
- the search results are ranked in accordance with the search application's scoring or ranking system or method. For example, conventional search applications score or rank articles of a search result for a particular query by the number of times a keyword or particular word or phrase appears in each article in the search results.
- a client device such as a personal computer, personal digital assistant, or mobile phone.
- Some articles are stored on one or more storage devices coupled to, accessible by, or otherwise associated with the client device(s). Users sometimes wish to search the storage device(s) for articles.
- the search results may be displayed as a list of article identifiers associated with the search results.
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or anything else that identifies an article.
- a user may browse and visit a web page associated with one or more of the search results to evaluate whether the web page is relevant to the user's search query. For example, a user may manipulate a mouse or another input device and “click” on an article identifier to view a web page associated with the search result. In many instances, the user will browse and visit several web pages provided in the search result, clicking on article identifiers associated with each of the several web pages to access various web pages associated with the search results before locating useful or relevant information to address the user's search query.
- URL Uniform Resource Locator
- search results for a particular search query on a network search engine are from online data sources accessible via a network such as the Internet. If a particular user does not have access to a network such as the Internet, i.e. the user is working offline, obtaining search results may be limited to previously cached web pages stored by an Internet browser program. To obtain broader search results from the network, the user would have to wait to access the network, i.e. go online, and initiate the search query so that online data sources can be accessed via the network. Obtaining search results in the above manner can be time consuming and cumbersome since the user has to wait to access a network, which may not always be practical.
- Users may generate and access a large number of articles, such as e-mails, web pages, word processing documents, spreadsheet documents, instant messenger messages, and presentation documents, using a client device, such as a personal computer, personal digital assistant, or mobile phone.
- a client device such as a personal computer, personal digital assistant, or mobile phone.
- Some articles are stored on a storage device associated with the client device. Users sometimes wish to search the storage device for articles.
- Some conventional client-device search applications can be slow to process search results including articles stored on a client-side device.
- Embodiments of the present invention comprise methods and systems for performing an offline search for an article.
- a method includes receiving a search query, determining whether the search query has been previously entered, if the search query has been previously entered, retrieving a previously stored result set, determining whether at least a portion of the previously stored result set meets at least one condition, and if the portion of the previously stored result set meets the at least one condition, outputting the previously stored result set.
- a method includes receiving a search query, determining whether the search query has been previously entered, if the search query has not been previously entered, receiving a result set, storing the result set and associated search query in an offline-accessible data store, and indexing the result set and associated search query for subsequent retrieval of the result set.
- FIG. 1 illustrates a block diagram of a system in accordance with one embodiment of the present invention
- FIG. 2 illustrates a flow diagram of a method in accordance with one embodiment of the present invention
- FIG. 3 illustrates a flow diagram of a subroutine of the method shown in FIG. 2 ;
- FIG. 4 illustrates a flow diagram of another method in accordance with one embodiment of the present invention.
- FIG. 1 is a block diagram illustrating an exemplary environment for implementation of an embodiment of the present invention. While the environment shown in FIG. 1 reflects a client-side search engine architecture embodiment, other embodiments are possible.
- the system 100 shown in FIG. 1 includes multiple client devices 102 a - n that can communicate with a server device 150 over a network 106 .
- the network 106 shown in FIG. 1 comprises the Internet. In other embodiments, other networks, such as an intranet, may be used instead.
- methods according to the present invention may operate within a single client device that does not communicate with a server device or a network.
- the client devices 102 a - n shown in FIG. 1 each include a computer-readable medium 108 .
- the embodiment shown in FIG. 1 includes a random access memory (RAM) 108 coupled to a processor 110 .
- the processor 110 executes computer-executable program instructions stored in memory 108 .
- Such processors may include a microprocessor, an ASIC, state machines, or other processors, and can be any of a number of suitable computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
- Such processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.
- Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a , with computer-readable instructions.
- suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions.
- various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.
- the instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.
- Client devices 102 a - n can be coupled to a network 106 , or alternatively, can be stand alone machines. Client devices 102 a - n may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display device, or other input or output devices. Examples of client devices 102 a - n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, the client devices 102 a - n may be any type of processor-based platform that operates on any suitable operating system, such as Microsoft® Windows® or Linux, capable of supporting one or more client application programs.
- any suitable operating system such as Microsoft® Windows® or Linux
- the client device 102 a shown can comprise a personal computer executing client application programs, also known as client applications 120 .
- the client applications 120 can be contained in memory 108 and can include, for example, a word processing application, a spreadsheet application, an e-mail application, an instant messenger application, a presentation application, an Internet browser application, a calendar/organizer application, a video playing application, an audio playing application, an image display application, a file management program, an operating system shell, and other applications capable of being executed by a client device.
- Client applications may also include client-side applications that interact with or accesses other applications (such as, for example, a web-browser executing on the client device 102 a that interacts with a remote e-mail server to access e-mail).
- the user 112 a can interact with the various client applications 120 and articles associated with the client applications 120 via various input and output devices of the client device 102 a .
- Articles include, for example, word processor documents, spreadsheet documents, presentation documents, e-mails, instant messenger messages, database entries, calendar entries, appointment entries, task manager entries, source code files, and other client application program content, files, messages, items, web pages of various formats, such as HTML, XML, XHTML, Portable Document Format (PDF) files, and media files, such as image files, audio files, and video files, or any other documents or items or groups of documents or items or information of any suitable type whatsoever.
- PDF Portable Document Format
- the user's 112 a interaction with articles, the client applications 120 , and the client device 102 a creates event data that may be observed, recorded, analyzed or otherwise used.
- An event can be any occurrence possible associated with an article, client application 120 , or client device 102 a , such as inputting text in an article, displaying an article on a display device, sending an article, receiving an article, manipulating an input device, opening an article, saving an article, printing an article, closing an article, opening a client application program, closing a client application program, idle time, processor load, disk access, memory usage, bringing a client application program to the foreground, changing visual display details of the application (such as resizing or minimizing) and any other suitable occurrence associated with an article, a client application program, or the client device whatsoever.
- event data can be generated when the client device 102 a interacts with an article independent of the user 112 a , such as when receiving an e-mail or performing a scheduled task.
- the memory 108 of the client device 102 a can also contain a capture processor 124 , a queue 126 , and a search engine 122 .
- the client device 102 a can also contain or is in communication with a data store 140 .
- the capture processor 124 can capture events and pass them to the queue 126 .
- the queue 126 can pass the captured events to the search engine 122 or the search engine 122 can retrieve new events from the queue 126 .
- the queue 126 notifies the search engine 122 when a new event arrives in the queue 126 and the search engine 122 retrieves the event (or events) from the queue 126 when the search engine 122 is ready to process the event (or events).
- the search engine 122 When the search engine 122 receives an event it can be processed and can be stored in the data store 140 .
- the search engine 122 can receive an explicit query from the user 112 a or generate an implicit query and it can retrieve information from the data store 140 in response to the query.
- the queue is located in the search engine 122 .
- the client device 102 a does not have a queue and the events are passed from the capture processor 124 directly to the search engine 122 .
- the event data is transferred using an information exchange protocol.
- the information exchange protocol can comprise, for example, any suitable rule or conversion facilitating data exchange, and can include, for example, any one of the following communication mechanisms: Extensible Markup Language—Remote Procedure Calling protocol (XML/RPC), Hypertext Transfer Protocol (HTTP), Simple Object Access Protocol (SOAP), shared memory, sockets, local or remote procedure calling, or any other suitable information exchange mechanism.
- XML/RPC Extensible Markup Language—Remote Procedure Calling protocol
- HTTP Hypertext Transfer Protocol
- SOAP Simple Object Access Protocol
- shared memory sockets, local or remote procedure calling, or any other suitable information exchange mechanism.
- the capture processor 124 can capture an event by identifying and extracting event data associated with an event. Examples of events include sending or receiving an e-mail message, a user viewing a web page, saving a word processing document, printing a spreadsheet document, inputting text to compose or edit an e-mail, opening a presentation application, closing an instant messenger application, entering a keystroke, moving the mouse, and hovering the mouse over a hyperlink.
- An example of event data captured by the capture processor 124 for an event involving viewing of a web page by a user can comprise the URL of the web page, the time and date the user viewed the web page, the content of the web page in original or processed forms, a screenshot of the page as displayed to the user, a thumbnail version of the screenshot, and image data associated with the web page.
- An example of event data captured by the capture processor 124 for an event involving the receipt of an e-mail message by the user 112 a can comprise the sender of the message, the recipients of the message, the time and date the message was received, the content of the message, and a conversation ID.
- a conversation ID can be used to associate messages that form a conversation and can be provided by the instant messenger application or can be generated by the capture processor 124 .
- a conversation can be one or more messages between the user 112 a and at least one other user until the user 112 a logs out of or closes the instant messenger application or the instant messenger application is inactive for a certain period of time (for example, 30 minutes).
- Another example of event data captured by the capture processor 124 for an event involving the viewing of a web page by a user can comprise the URL of the web page, the time and date the user viewed the web page, the content of the web page in original or processed forms, a screenshot of the page as displayed to the user, and a thumbnail version of the screenshot.
- the capture processor 124 comprises multiple capture components.
- the capture processor 124 shown in FIG. 1 comprises a separate capture component for each client application in order to capture events associated with each application.
- the capture processor 124 shown also comprises a separate capture component that monitors overall network activity in order to capture event data associated with network activity, such as the receipt or sending of an instant messenger message.
- the capture processor 124 shown in FIG. 1 also can comprise a separate client device capture component that monitors overall client device performance data, such as processor load, idle time, disk access, the client applications in use, and the amount of memory available.
- 1 also comprises a separate capture component to monitor and capture keystrokes input by the user and a separate capture component to monitor and capture items, such as text, displayed on a display device associated with the client device 102 a .
- An individual capture component can monitor multiple client applications and multiple capture components can monitor different aspects of a single client application.
- the capture processor 124 can monitor activity on the client device and can capture events by a generalized event definition and registration mechanism, such as an event schema.
- Each capture component can define its own event schema or can use a predefined one.
- Event schema can differ depending on the client application or activity the capture component is monitoring.
- the event schema can describe the format for an event, for example, by providing fields for event data associated with the event (such as the time of the event) and fields related to any associated article (such as the title) as well as the content of any associated article (such as the document body).
- An event schema can describe the format for any suitable event data that relates to an event.
- an event schema for an instant messenger event sent by a user 112 a can include a recipient or list of recipients, the time sent, the date sent, content of the message, and a conversation ID.
- An event schema for a web page currently being viewed by a user can include the Uniform Resource Locator (URL) of the web page, the time being viewed, and the content of the web page.
- An event schema for a word processing document being saved by a user can include the title of the document, the time saved, the format of the document, the text of the document, and the location of the document. More generally, an event schema can describe the state of the system around the time of the event. For example, an event schema can contain a URL for a web page event associated with a previous web page that the user navigated from. An event schema can also contain lists of information, such as, for example, multiple recipient fields from an e-mail. An event schema can also contain optional fields so that an application can include additional event data if desired.
- the capture processor 124 can capture events occurring presently (or “real-time events”) and can capture events that have occurred in the past (or “historical events”).
- Real-time events can be “indexable” or “non-indexable.”
- the search engine 122 indexes indexable real-time events, but does not index non-indexable real-time events.
- the search engine 122 may determine whether to index an event based on the importance of the event. Indexable real-time events can be more important events associated with an article, such as viewing a web page, loading or saving a file, and receiving or sending an instant message or e-mail. Non-indexable events can be deemed not important enough by the search engine 122 to index and store the event, such as moving the mouse or selecting a portion of text in an article.
- Non-indexable events can be used by the search engine 122 to update the current user state. While all real-time events can relate to what the user is currently doing (or the current user state), indexable real-time events can be indexed and stored in the data store 140 . Alternatively, the search engine 122 can index all real-time events.
- Real-time events can include, for example, sending or receiving an article, such as an instant messenger message, examining a portion of an article, such as selecting a portion of text or moving a mouse over a portion of a web page, changing an article, such as typing a word in an e-e-e-mail or pasting a sentence in a word processing document, closing an article, such as closing an instant messenger window or changing an email message being viewed, loading, saving, opening, or viewing an article, such as a word processing document, web page, or e-mail, listening to or saving an MP3 file or other audio/video file, or updating the metadata of an article, such as book marking a web page, printing a presentation document, deleting a word processing document, or moving a spreadsheet document.
- an article such as an instant messenger message
- examining a portion of an article such as selecting a portion of text or moving a mouse over a portion of a web page
- changing an article such as typing a word in an e-e-e-mail or past
- Historical events are similar to indexable real-time events except that the event occurred before the installation of the search engine 122 or was otherwise not captured, because, for example, the search engine 122 was not operational for a period of time while the client device 102 a was operational or because no capture component existed for a specific type of historical event at the time the event took place.
- Examples of historical events include the user's saved word processing documents, media files, presentation documents, calendar entries, spreadsheet documents, the e-mails in a user's inbox, and the web pages bookmarked by the user.
- the capture processor 124 can capture historical events by periodically crawling the memory 108 and any associated data storage device for events not previously captured by the capture processor 124 .
- the capture processor 124 can also capture historical events by requesting certain client applications, such as a web browser or an e-mail application, to retrieve articles and other associated information. For example, the capture processor 124 can request that the web browser application obtain all viewed web pages by the user or request that the e-mail application obtain all e-mail messages associated with the user. These articles may not currently exist in memory 108 or on a storage device of the client device 102 a . For example, the e-mail application may have to retrieve e-mails from a server device. In one embodiment, the search engine 122 indexes historical events.
- events captured by the capture processor 124 are sent to the queue 126 in the form of an event schema.
- the capture processor 124 can also send performance data to the queue 126 .
- Examples of performance data include current processor load, average processor load over a predetermined period of time, idle time, disk access, the client applications in use, and the amount of memory available.
- Performance data can also be provided by specific performance monitoring components, some of which may be part of the search engine 122 , for example.
- the performance data in the queue 126 can be retrieved by the search engine 122 and the capture components of the capture processor 124 .
- capture components can retrieve the performance data to alter how many events are sent to the queue 126 , or how detailed the events are that are sent (fewer or smaller events when the system is busy), or how frequently events are sent (events are sent less often when the system is busy or there are too many events waiting to be processed).
- the search engine 122 can use performance data to determine when it indexes various events and when and how often it issues implicit queries.
- the queue 126 holds the events and performance data until the search engine 122 is ready to process an event or events.
- the queue 126 uses the performance data to help determine how quickly to provide the events to the search engine 122 .
- the queue 126 can comprise one or more separate queues including a user state queue and an index queue.
- the index queue can queue indexable events, for example.
- the queue 126 can have additional queues or comprise a single queue.
- the queue 126 can be implemented as a circular priority queue using memory mapped files.
- the queue can be a two- or three-priority queue where higher priority events are served before lower priority events, and other components may be able to specify the type of events they are interested in.
- real-time events can be given higher priority than historical events, and indexable events can be given higher priority than non-indexable real time events.
- Other implementations of the queue 126 are possible.
- the client device 102 a does not have a queue 126 .
- events are passed directly from the capture processor 124 to the search engine 122 .
- events can be transferred between the capture components and the search engine using suitable information exchange mechanisms such as: Extensible Markup Language—Remote Procedure Calling protocol (XML/RPC), Hypertext Transfer Protocol (HTTP), Simple Object Access Protocol (SOAP), shared memory, sockets, local or remote procedure calling, or any other suitable information exchange mechanism.
- XML/RPC Extensible Markup Language—Remote Procedure Calling protocol
- HTTP Hypertext Transfer Protocol
- SOAP Simple Object Access Protocol
- the search engine 122 shown contains an indexer 130 , a query system 132 , and a formatter 134 .
- the query system 132 can retrieve all real-time events and performance data from the queue 126 .
- the query system 132 can use performance data and real-time events to update the current user state and generate an implicit query.
- the query system 132 can also receive and process explicit queries from the user 112 a .
- Performance data can also be retrieved by the search engine 122 from the queue 126 for use in determining the amount of activity possible by the search engine 122 .
- events can be transferred between the capture components and the search engine using suitable information exchange mechanisms such as: Extensible Markup Language—Remote Procedure Calling protocol (XML/RPC), Hypertext Transfer Protocol (HTTP), Simple Object Access Protocol (SOAP), shared memory, sockets, local or remote procedure calling, or any other suitable information exchange mechanism
- suitable information exchange mechanisms such as: Extensible Markup Language—Remote Procedure Calling protocol (XML/RPC), Hypertext Transfer Protocol (HTTP), Simple Object Access Protocol (SOAP), shared memory, sockets, local or remote procedure calling, or any other suitable information exchange mechanism
- indexable real-time events and historical events are retrieved from the queue 126 by the indexer 130 .
- the queue 126 may send the indexable events to the indexer 130 .
- the indexer 130 can index the indexable events and can send them to the data store 140 where they are stored.
- the data store 140 can be any type of computer-readable media and can be integrated with the client device 102 a , such as a hard drive, or external to the client device 102 a , such as an external hard drive or on another data storage device accessed through the network 106 .
- the data store can be one or more logical or physical storage areas. In one embodiment, the data store 140 can be in memory 108 .
- the data store 140 may facilitate one or a combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs, and may include compression and encryption.
- the data store comprises an index 142 , a database 144 and a repository 146 .
- the indexer 130 when the indexer 130 receives an event, the indexer 130 can determine, from the event, terms (if any) associated with the event, location information associated with the event (if available), the time of the event (if available), images (if any) associated with the event, and/or any other information defining the event.
- the indexer 130 can also determine if the event relates to other events and associate the event with related events. For example, for a received instant messenger message event, the indexer can associate the message event with other message events from the same conversation. The messages from the same conversation can be associated with each other in a conversation object, which can be stored in the data store 140 .
- the indexer 130 can send and incorporate the terms, locations, and times, associated with the event in the index 142 of the data store 140 .
- the event can be sent to the database 144 for storage and the content of the associated article and any associated images can be stored in the repository 146 .
- the conversation object associated with e-mail messages can be stored in the database 144 .
- a user 112 a can input an explicit query into a search engine interface displayed on the client device 102 a , which is received by the search engine 122 .
- the search engine 122 can also generate an implicit query based on a current user state, which can be determined by the query system 132 from real-time events. Based on the query, the query system 132 can locate relevant information in the data store 140 and provide a result set.
- the result set comprises article identifiers for articles associated with the client applications 120 or client articles.
- Client articles include articles associated with the user 112 a or client device 102 a , such as the user's e-mails, word processing documents, instant messenger messages, previously viewed web pages and any other article or portion of an article associated with the client device 102 a or user 112 a .
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or other suitable information that may identify an article.
- the result set also comprises article identifiers for articles located on the network 106 or network articles located by a search engine on a server device.
- Network articles include articles located on the network 106 not previously viewed or otherwise referenced by the user 112 a , such as web pages not previously viewed by the user 112 a.
- the formatter 134 can receive the search result set from the query system 132 of the search engine 122 and can format the results for output to a display processor 128 .
- the formatter 134 formats the results in XML, HTML, or tab delineated text.
- the display processor 128 can be contained in memory 108 and can control the display of the result set on a display device associated with the client device 102 a .
- the display processor 128 may comprise various components.
- the display processor 128 comprises a Hypertext Transfer Protocol (HTTP) server that receives requests for information and responds by constructing and transmitting Hypertext Markup Language (HTML) pages.
- the HTTP server comprises a scaled-down version of the Apache Web server.
- the display processor 128 can be associated with a set of APIs to allow various applications to receive the results and display them in various formats.
- the display APIs can be implemented in various ways, including, for example, DLL exports, COM interface, VB, JAVA, or NET libraries, or a web service.
- the query system 132 can compare a search query such as an explicit query entered into a search engine interface to an indexed list of one or more previously stored search queries in the data store 140 or index 142 . If the search query matches a previously stored search query, a corresponding article or result set can be retrieved from the data store 140 , database 144 , repository 146 , external data storage medium 172 , external data storage reader 174 , or other data storage device. If the search query does not match a previously stored search query, the search query can then be transmitted to the network 106 for determining a result set for the search query. In this manner, the system 100 limits traffic on the network 106 and saves users 112 a - n time in locating an article in response to a previously entered search query.
- a search query such as an explicit query entered into a search engine interface
- a corresponding article or result set can be retrieved from the data store 140 , database 144 , repository 146 , external data storage medium 172 , external data storage reader 174
- a server device 150 can be coupled to the network 106 .
- the search engine 122 can transmit a search query comprised of an explicit or implicit query or both to the server device 150 .
- the user 112 a can also enter a search query in a search engine interface, which can be transmitted to the server device 150 by the client device 102 a via the network 106 .
- the query signal may instead be sent to a proxy server (not shown), which then transmits the query signal to server device 150 .
- Other configurations are also possible.
- the server device 150 shown includes a server executing a search engine application program, such as the GoogleTM search engine. In other embodiments, the server device 150 can comprise a related information server or an advertising server. Similar to the client devices 102 a - n , the server device 150 shown can include a processor 160 coupled to a computer-readable memory 162 . Server device 150 , depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 150 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices. The server processor 160 can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill. In another embodiment, the server device 150 may exist on a client-device. In still another embodiment, there can be multiple server devices 150 .
- a search engine application program such as the GoogleTM search engine.
- the server device 150 can comprise a related information server or an advertising server. Similar
- Memory 162 contains the search engine application program, also known as a network search engine 170 .
- the search engine 170 can locate relevant information from the network 106 in response to a search query from a client device 102 a .
- the search engine 170 then can provide the result set to the client device 102 a via the network 106 .
- the result set can comprise one or more article identifiers.
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, a time, a date, an expiration date, or anything else that identifies an article.
- an article identifier comprises a URL associated with an article.
- the server device 150 has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems connected to the network 106 , and indexed the articles in memory 162 or on another data storage device.
- articles can also be indexed in another data storage device.
- Articles can be indexed in an external data storage medium 172 such as a DVD or compact disc for transmission by mail delivery or other means to a user 112 a - n .
- Articles indexed on the external data storage medium 172 can then be accessed by a client 102 a - n using an external data storage reader 174 such as a DVD or compact disc drive.
- an external data storage reader 174 such as a DVD or compact disc drive.
- the client device 102 a is a stand-alone device that is not permanently coupled to a network.
- the system 100 shown in FIG. 1 is merely exemplary, and is used to explain the exemplary methods shown in FIGS. 2 through 4 .
- a search engine receives a search query from a user, determines whether the search query has been previously entered by the user, if the search query has been previously entered, retrieves a previously stored result set, determines whether at least a portion of the previously stored result set meets at least one condition, and if the at least a portion of the previously stored result set meets the at least one condition, outputting the previously stored result set.
- the search engine receives a search query, determines whether the search query has been previously entered, if the search query has not been previously entered, receives a result set, stores the result set and associated search query in an offline-accessible data store, and indexes the result set for subsequent retrieval of the result set.
- the search engine receives a request for an article in a result set from a client device, the article accessible via a network, determines whether the article is stored in an offline-accessible data store associated with the client device, and if the article is stored in an offline-accessible data store, determining whether the article meets at least one condition, if the article meets at least one condition, retrieving the article from the offline-accessible data store, if the article does not meet at least one condition, retrieving the article via the network, if the article is not stored in an offline-accessible data store, retrieving the article via the network, and outputting the article on the client device.
- the search engine receives a search query, determines whether the search query has been previously entered, if the search query has not been previously entered, receives a result set, stores the result set in an offline-accessible data store; and indexes the result set for subsequent retrieval, and if the search query has been previously entered, determines whether a previously stored result set meets at least one condition. If the result set meets at least one condition, the search engine outputs the previously stored result set; and if the result set does not meet at least one condition, the search engine receives a result set, stores the result set in an offline-accessible data store, and indexes the result set for subsequent retrieval.
- FIG. 2 illustrates an exemplary method 200 that provides a method for performing an offline search for an article.
- This exemplary method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention.
- the method 200 shown in FIG. 2 can be executed or otherwise performed by any of various systems.
- the method 200 is described below as carried out by the system 100 shown in FIG. 1 by way of example, and various elements of the system 100 are referenced in explaining the example method of FIG. 2 .
- Block 202 the method 200 begins.
- Block 202 is followed by block 204 , in which a search query is received.
- a search query is received.
- a user 112 a enters a search query into a search engine interface, and the query system 132 receives the search query.
- Block 204 is followed by decision block 206 , in which a determination is made whether the search query has been previously entered by the user.
- the query system 132 compares the search query to an indexed list of search queries stored in the data store 140 , index 142 , or another data storage device.
- the indexed list of search queries is a list of previously stored search queries that have been previously entered by the user. If the present search query matches a previously stored search query in the indexed list of search queries, then the “YES” branch is followed to block 208 .
- Block 208 goes to block 302 of FIG. 3 , which is discussed in greater detail below.
- a result set is requested and received. This may be accomplished by, for example, retrieving, accessing, or otherwise obtaining an article and associated article data via a network 106 such as the Internet, from a client device 102 a , from an external data storage medium 172 , or from an external data storage reader 174 . As described with reference to FIG. 1 , the query system 132 can locate relevant information in the data store 140 and provide a result set in response to a search query.
- the result set comprises article identifiers for articles associated with the client applications 120 or client articles.
- a search engine 122 or a network search engine 170 receives article data associated with articles in a result set as a response to an explicit search query such as relevant information previously stored in a data store 140 , database 144 , memory 108 , network 106 , server 150 , external data storage medium 172 , external data storage reader 174 , or a client 102 a - n .
- the query system 132 provides a result set that includes one or more articles and/or article identifiers, in response to a search query that has not been previously entered by the user 112 a - n.
- a user 112 a - n can perform an offline search. That is, the user 112 a can operate the client 102 a while the network 106 is not accessible by the client 102 a .
- a result set can comprise articles, such as web pages that the user has accessed before, and articles stored on a DVD such as popular web pages.
- the client 102 a via the query system 132 , can receive a result set from the external data storage medium 172 while the user 112 a is offline.
- Block 210 is followed by block 212 , in which expiration data for the result set can be determined. Note that this feature is optional.
- query system 132 can determine expiration data based in part on article data, such as determining an expiration time based on a preset amount of time from the time that the article of interest was received or accessed, or based on a preset amount of time from the time of a specific event or change associated with the article of interest.
- the expiration data is then stored as article data associated with the respective article. In some instances, expiration data can be determined for the result set rather than an individual article.
- the query system 132 determined expiration data based in part on article data such as the date and/or time a result set was generated, stored, or otherwise collected.
- the query system 132 can determine expiration data for an article, such as an expiration date for a web page.
- the expiration data is based on a preset time from a time and/or date associated with the web page. If for example, the web page was indexed at a time and date designated as “02:00:00” and “11-Feb-04,” respectively, the capture processor 124 can determine that the web page “expires” at a preset time such as 48 hours after that time, or at “02:00:00” and “13-Feb-04.” Note that other preset times can be used in accordance with various embodiments of the invention. Furthermore, note that other times or dates associated with an article can be used in accordance with various embodiments of the invention.
- Block 212 is followed by block 214 , in which the search query and result set are indexed for subsequent comparison.
- the search query is stored by the query system 132 in the data store 140 , index 142 , or other data storage device.
- the stored search query is also referenced against any result sets received and stored as described in blocks 210 - 212 .
- the result sets can comprise the expiration time for a particular article, cache of articles, or result set for a particular search query.
- a search query and result set can be indexed or otherwise organized into one or more unique categories depending on the types of articles comprising the query, result set, both the search query and result set, or the types of data sources that the articles comprising the result set were received from or otherwise obtained from.
- the query system 132 could receive a result set comprising articles such as web pages for a particular search query.
- the indexer 130 could also receive a result set comprising articles such as documents or emails from a client-side device for the particular search query.
- at least three categories of articles could exist for a result set, web pages, documents, and emails.
- Other types of articles in similar or other categories could be received by the indexer 130 .
- Each category of articles could be then be monitored, updated, and indexed by the indexer 130 and query system 132 as needed.
- Block 214 is followed by block 216 , in which the search query and result set are stored in a data store.
- the query system 132 stores the result set and the associated search query in a data store such as data store 140 , database 144 , memory 108 , network 106 , server 150 , external data storage medium 172 , external data storage reader 174 , or a client 102 a - n .
- the result set stored in a data store is also known as a “cache” of articles and/or article identifiers. Note that the result set can comprise articles, article identifiers, article data, web pages, documents, and/or emails.
- An offline-accessible data store can be, but is not limited to, a data store 140 , database 144 , memory 108 , network 106 , server 150 , external data storage medium 172 , external data storage reader 174 , a client 102 a - n , any data storage device on the client-side, or any data storage device that can be accessed by a client while offline from a network.
- Block 216 is followed by block 218 , in which the method 200 ends.
- FIG. 3 illustrates an example of a subroutine 300 for performing an offline search for an article.
- the subroutine 300 shown determines an article for a search query that has been previously entered into a search engine.
- the order of processing the various data can be interchanged. In other embodiments, the order of processing can be predetermined or can be interchangeable depending upon the article data processed.
- An example of subroutine 300 is as follows.
- the example subroutine 300 begins at block 302 .
- the query system 132 determines that a search query has been previously entered as described by decision block 206 in FIG. 2 .
- the query system 132 compares the search query to an indexed list of search queries stored in the data store 140 , index 142 , or another data storage device.
- the indexed list of search queries is a list of previously stored search queries that have been previously entered by the user.
- Block 302 is followed by block 304 , in which a previously stored result set is retrieved from an offline-accessible data store.
- the query system 132 determines that the search query has been previously entered.
- the query system 132 calls to the data store 140 , index 142 , database 144 , repository 146 , external data storage reader 174 , external data storage medium 172 , or other data storage device to retrieve a result set for the previously entered search query.
- Block 304 is followed by decision block 306 , in which a determination is made whether at least a portion of the result set meets at least one condition.
- the query system 132 determines whether at least a portion of the result set for the previously entered search query meets at least one condition indicating the portion of the result set is a valid search result set for the present search query. This permits the query system 132 to identify a time when the result set, a cache of articles, category of articles, or an individual article may no longer meet at least one condition indicating that the portion of the result set is a valid search result for the particular previously stored search query. Therefore, if the query system 132 determines that a previously stored result set meets at least one condition, then the “YES” branch is followed to block 310 .
- a condition can be based at least on some or all of the following: validity of a portion of the result set, a portion of the result set is new, a portion of the result set includes a change, a new article exists in a category of the result set, a new article has been received in a category of the result set, an article has been changed in the result set, a new e-mail has been received in a category of the result set, a new e-mail has been sent in a category of the result set, a new web page has been received in a category of the result set, a web page has been changed in a category of the result set, a new document has been received in a category of the result set, and a new document has been generated in a category of the result set.
- the query system 132 determines whether at least a portion of a particular result set meets at least one condition based on the recency of the articles in the result set. For example, if the result set includes an article such as a web page, then the time and date that the web page was last updated can be used to determine an expiration date for the article. Using a preset amount of time, such as 48 hours, the preset amount of time can be added to the time and date that the web page was last updated, and the query system 132 can determine if the current date and time exceeds the preset amount of time. Alternatively, the query system 132 could use a single time and date for a category or cache of articles to determine an expiration date for the cache or category of articles.
- the preset amount of time can be added to the time and date the category or cache of articles was stored, and the query system 132 can determine if the current date and time exceeds the preset amount of time. In this manner, the query system 132 can identify a time when a particular result set, article or article identifier, or category or cache of articles does not meet at least one condition indicating that the portion of the result set is a valid search result for a particular previously stored search query. In other embodiments, other durations of time can be used for a preset time in determining whether at least one condition is met for a particular an article, article identifier, category, cache, or result set.
- the query system 132 determines whether at least a portion of a particular result set meets at least one condition indicating that the portion of the result set is “valid,” such as a subset of the result set. Since a result set can include multiple search results, validation of each particular result can be made. For example, if a result set contains fifty articles such as fifty web pages, and only a subset of the web pages, thirty web pages, are determined to meet a condition indicating the portion of the result set to be “valid,” then the subset of “valid” search results can be returned in response to the search query. In this example, the other twenty web pages are considered “expired” search results. In this manner, the speed of processing a result set can be increased since ranking and/or displaying a layout of “valid” search results does not need to be re-processed.
- providing “expired” search results can be utilized. For example, if a user 112 a - n cannot access the network 106 and is performing an offline search, a result set can be provided even though the user 112 a - n cannot access the network 106 . In this example, a result set can be provided with “expired” search results that are flagged or otherwise marked for the user to identify as expired results.
- the query system 132 monitors the result set and determines whether a “change” with respect to the result set has occurred.
- a “change” can be the presence of a “new” article that was not included in the initial search that provided the result set in response to a previously entered search query, the detection of additions or edits to a document, the detection of a newly updated web page, or the determination that a web page or article has expired based on a preset amount of time.
- a “new” article (or article identifier) is an article (or article identifier) that was not present in a preceding result set for a particular search query.
- the query system 132 can determine whether a “change” has occurred with respect to a particular category of articles or article identifiers within the result set. For example, as described above, a result set can be organized into categories such as web pages, documents, and e-mails. If the query system 132 previously stored 10 e-mails in the email category for a particular result set, the query system 132 can determine that the e-mail category is no longer a “valid” search result for a particular search query if new e-mails have been received since the original 10 e-mails were stored for the particular search query.
- the presence of the new e-mails is a “change” that would invalidate the category of e-mails in the search result since the new e-mails were not included in the initial search using the original search query, and the new e-mails could be relevant articles for the present search query.
- the determination of new articles or article identifiers in a particular category of a result set for a previously stored search query is an example of a “change” as used herein.
- a changes can include, but is not limited to, determining that a new article exists in a category of the result set, determining that a new article has been received in a category of the result set, determining that an article has been changed in the result set, determining that a new e-mail has been received in a category of the result set, determining that a new e-mail has been sent in a category of the result set, determining that a new web page has been received in a category of the result set, determining that a web page has been changed in a category of the result set, determining that a new document has been received in a category of the result set, and determining that a new document has been generated in a category of the result set.
- Other examples of a change exist.
- a “change” for a particular category of articles or article identifiers in a result set may not represent a “change” that affects a condition such as the validity of articles or article identifiers in other categories of the particular result set.
- the presence of new e-mails would be a “change” affecting a condition such as validity of the e-mail category for the particular result set.
- previously stored articles and article identifiers in the other categories, such as web pages and documents could still be valid in the result set for the previously stored search query.
- the query system 132 determines at least a portion of the previously stored result set does not meet at least one condition such as the portion of the result set is valid, then the “NO” branch is followed to block 308 .
- the subroutine 300 returns to block 210 of FIG. 2 , where a new result set is provided, and the method 200 continues.
- the portion of the previously stored result set is output, such as displaying on a display device associated with the client device.
- the query system 132 calls to the display processor 128 to output the validated result set from the offline data store.
- the display processor 128 utilizes an associated display interface for a user 112 a - n to view the result set. In this manner, offline search results for a previously stored search query can be returned to the user 112 a - n , thus limiting traffic on the network 106 and saving users 112 a - n time in locating articles in response to previously entered search queries.
- Block 312 follows block 310 , the subroutine 300 ends.
- FIG. 4 illustrates an exemplary method 400 that provides a method for performing an offline search for an article.
- This exemplary method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention.
- the method 400 shown in FIG. 4 can be executed or otherwise performed by any of various systems.
- the method 400 is described below as carried out by the system 100 shown in FIG. 1 by way of example, and various elements of the system 100 are referenced in explaining the example method of FIG. 4 .
- Block 402 the method 400 begins. Block 402 is followed by block 404 , in which a request for an article in a result set is received.
- a request for an article in a result set is received.
- a user 112 a - n selects an article identifier in a result set for a particular search query.
- the article identifier corresponds to an article accessible via the network 106 .
- the query system 132 receives the user selection or request for the article or article identifier.
- the user 112 a is working offline, and selects an article or article identifier in a result set for a particular search query.
- the particular article or article identifier can correspond to a previously stored article in an offline-accessible data store.
- the query system 132 receives the user's request or selection of the article or article identifier.
- Block 404 is followed by decision block 406 , in which a determination is made whether the selected article is stored in an offline-accessible data store.
- the query system 132 compares the selected article or article identifier to an indexed list of articles and article identifiers stored in the data store 140 , index 142 , database 144 , repository 146 , or another data storage device.
- the indexed list of articles and article identifiers is a list of previously stored articles and article identifiers that have been previously stored. If the selected article or article identifier matches a previously stored article or article identifier in the indexed list, then the “YES” branch is followed to decision block 408 .
- the query system 132 determines whether the selected article meets at least one condition such as whether the selected article is a valid article. Similar to conditions described above such as validation features described in decision block 306 , this permits the query system 132 to identify a time when the article, result set, a cache of articles, or category of articles may no longer meet at least one condition indicative of a valid search result. Therefore, if the query system 132 determines that a previously stored article meets at least one condition, then the “YES” branch is followed to block 410 .
- the article is output.
- the query system 132 calls to the display processor to output the article or article identifier, such as by displaying the article on a display interface associated with the client device.
- a user 112 a - n can view the selected article which can include, for example, a web page, a document, or an email.
- Block 410 is followed by block 412 , in which the method 400 ends.
- the article is retrieved from a server device via a network. Since the article or article identifier does not match a list of previously stored articles and article identifiers, the selected article is retrieved for the user 112 a - n .
- the query system 132 calls to a server device 150 via the network 106 to retrieve the selected article. The selected article can then be output for display to the user 112 a - n.
- Block 414 is followed by block 410 as described above, in which the article is output, such as for display to a user 112 a - n.
- the “NO” branch is followed to block 414 .
- the article is retrieved from a server device on the network, and the selected article can be output for display to the user 112 a - n.
Abstract
Description
Claims (35)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/814,069 US7707142B1 (en) | 2004-03-31 | 2004-03-31 | Methods and systems for performing an offline search |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/814,069 US7707142B1 (en) | 2004-03-31 | 2004-03-31 | Methods and systems for performing an offline search |
Publications (1)
Publication Number | Publication Date |
---|---|
US7707142B1 true US7707142B1 (en) | 2010-04-27 |
Family
ID=42112563
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/814,069 Active 2026-12-05 US7707142B1 (en) | 2004-03-31 | 2004-03-31 | Methods and systems for performing an offline search |
Country Status (1)
Country | Link |
---|---|
US (1) | US7707142B1 (en) |
Cited By (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070204216A1 (en) * | 2006-02-24 | 2007-08-30 | Morgan Brian S | System and method for creating layouts using a layout editor |
US20090287684A1 (en) * | 2008-05-14 | 2009-11-19 | Bennett James D | Historical internet |
US20090292692A1 (en) * | 2008-05-21 | 2009-11-26 | Kabushiki Kaisha Toshiba | Information Search Method and Information Processing Apparatus |
US20100169339A1 (en) * | 2008-12-30 | 2010-07-01 | Yahoo! Inc., A Delaware Corporation | System, method, or apparatus for updating stored search result values |
US20100241660A1 (en) * | 2009-03-20 | 2010-09-23 | Microsoft Corporation | Retrieval of metadata for peripheral devices |
US20100332499A1 (en) * | 2009-06-26 | 2010-12-30 | Iac Search & Media, Inc. | Method and system for determining confidence in answer for search |
US20110282863A1 (en) * | 2010-05-11 | 2011-11-17 | Donald Cohen | Use of virtual database technology for internet search and data integration |
US20130066633A1 (en) * | 2011-09-09 | 2013-03-14 | Verisign, Inc. | Providing Audio-Activated Resource Access for User Devices |
US8688669B1 (en) * | 2012-05-22 | 2014-04-01 | Google Inc. | Content item searching and retrieval |
US20140344455A1 (en) * | 2011-12-19 | 2014-11-20 | Nec Europe Ltd. | Method and system to measure user engagement with content through event tracking on the client side |
US20150032714A1 (en) * | 2011-03-28 | 2015-01-29 | Doat Media Ltd. | Method and system for searching for applications respective of a connectivity mode of a user device |
US20170017672A1 (en) * | 2015-07-14 | 2017-01-19 | Microsoft Technology Licensing, Llc | Accessing search results in offline mode |
US9639611B2 (en) | 2010-06-11 | 2017-05-02 | Doat Media Ltd. | System and method for providing suitable web addresses to a user device |
US9665647B2 (en) | 2010-06-11 | 2017-05-30 | Doat Media Ltd. | System and method for indexing mobile applications |
US9846699B2 (en) | 2010-06-11 | 2017-12-19 | Doat Media Ltd. | System and methods thereof for dynamically updating the contents of a folder on a device |
US9912778B2 (en) | 2010-06-11 | 2018-03-06 | Doat Media Ltd. | Method for dynamically displaying a personalized home screen on a user device |
US10055433B2 (en) | 2014-09-18 | 2018-08-21 | Microsoft Technology Licensing, Llc | Referenced content indexing |
US20180285458A1 (en) * | 2017-04-04 | 2018-10-04 | Yandex Europe Ag | Method and system for generating an offline search engine result page |
US10114534B2 (en) | 2010-06-11 | 2018-10-30 | Doat Media Ltd. | System and method for dynamically displaying personalized home screens respective of user queries |
US10191991B2 (en) | 2010-06-11 | 2019-01-29 | Doat Media Ltd. | System and method for detecting a search intent |
US10339172B2 (en) | 2010-06-11 | 2019-07-02 | Doat Media Ltd. | System and methods thereof for enhancing a user's search experience |
CN110572311A (en) * | 2019-08-09 | 2019-12-13 | 青岛海信移动通信技术股份有限公司 | Mail downloading method and terminal |
CN111414756A (en) * | 2020-03-24 | 2020-07-14 | 李德朋 | Policy data processing method |
US10713312B2 (en) | 2010-06-11 | 2020-07-14 | Doat Media Ltd. | System and method for context-launching of applications |
US11113327B2 (en) | 2019-02-13 | 2021-09-07 | Optum Technology, Inc. | Document indexing, searching, and ranking with semantic intelligence |
US11651156B2 (en) | 2020-05-07 | 2023-05-16 | Optum Technology, Inc. | Contextual document summarization with semantic intelligence |
Citations (144)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5418948A (en) | 1991-10-08 | 1995-05-23 | West Publishing Company | Concept matching of natural language queries with a database of document concepts |
US5678038A (en) | 1994-06-21 | 1997-10-14 | International Business Machines Corporation | Storing and retrieving heterogeneous classification systems utilizing globally unique identifiers |
US5696962A (en) | 1993-06-24 | 1997-12-09 | Xerox Corporation | Method for computerized information retrieval using shallow linguistic analysis |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5717913A (en) | 1995-01-03 | 1998-02-10 | University Of Central Florida | Method for detecting and extracting text data using database schemas |
US5754938A (en) | 1994-11-29 | 1998-05-19 | Herz; Frederick S. M. | Pseudonymous server for system for customized electronic identification of desirable objects |
US5826261A (en) | 1996-05-10 | 1998-10-20 | Spencer; Graham | System and method for querying multiple, distributed databases by selective sharing of local relative significance information for terms related to the query |
US5890152A (en) | 1996-09-09 | 1999-03-30 | Seymour Alvin Rapaport | Personal feedback browser for obtaining media files |
US5911139A (en) | 1996-03-29 | 1999-06-08 | Virage, Inc. | Visual image database search engine which allows for different schema |
US5933827A (en) | 1996-09-25 | 1999-08-03 | International Business Machines Corporation | System for identifying new web pages of interest to a user |
US5940821A (en) | 1997-05-21 | 1999-08-17 | Oracle Corporation | Information presentation in a knowledge base search and retrieval system |
US5964839A (en) | 1996-03-29 | 1999-10-12 | At&T Corp | System and method for monitoring information flow and performing data collection |
US5987446A (en) | 1996-11-12 | 1999-11-16 | U.S. West, Inc. | Searching large collections of text using multiple search engines concurrently |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6012067A (en) | 1998-03-02 | 2000-01-04 | Sarkar; Shyam Sundar | Method and apparatus for storing and manipulating objects in a plurality of relational data managers on the web |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6070158A (en) | 1996-08-14 | 2000-05-30 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
USRE36727E (en) | 1989-12-26 | 2000-06-06 | Kageneck; Karl-Erbo G. | Method of indexing and retrieval of electronically-stored documents |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6112203A (en) | 1998-04-09 | 2000-08-29 | Altavista Company | Method for ranking documents in a hyperlinked environment using connectivity and selective content analysis |
US6122647A (en) | 1998-05-19 | 2000-09-19 | Perspecta, Inc. | Dynamic generation of contextual links in hypertext documents |
US6167434A (en) | 1998-07-15 | 2000-12-26 | Pang; Stephen Y. | Computer code for removing junk e-mail messages |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6199059B1 (en) | 1998-04-22 | 2001-03-06 | International Computex, Inc. | System and method for classifying and retrieving information with virtual object hierarchy |
US6272507B1 (en) | 1997-04-09 | 2001-08-07 | Xerox Corporation | System for ranking search results from a collection of documents using spreading activation techniques |
US20010037328A1 (en) | 2000-03-23 | 2001-11-01 | Pustejovsky James D. | Method and system for interfacing to a knowledge acquisition system |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US20020016786A1 (en) | 1999-05-05 | 2002-02-07 | Pitkow James B. | System and method for searching and recommending objects from a categorically organized information repository |
US20020040311A1 (en) | 2000-10-04 | 2002-04-04 | John Douglass | Web browser page rating system |
US20020059272A1 (en) | 2000-04-20 | 2002-05-16 | Porter Edward W. | Apparatuses, methods, programming, and propagated signals for creating, editing, organizing and viewing collaborative databases |
US6397221B1 (en) | 1998-09-12 | 2002-05-28 | International Business Machines Corp. | Method for creating and maintaining a frame-based hierarchically organized databases with tabularly organized data |
US20020065800A1 (en) * | 2000-11-30 | 2002-05-30 | Morlitz David M. | HTTP archive file |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US20020095427A1 (en) | 2000-11-09 | 2002-07-18 | Kaplan Ari David | System, method and apparatus for the wireless monitoring and management of computer systems |
US20020099700A1 (en) | 1999-12-14 | 2002-07-25 | Wen-Syan Li | Focused search engine and method |
US20020103806A1 (en) * | 2000-10-18 | 2002-08-01 | Masafumi Yamanoue | Data supply controlling device, data supplying method, storage medium for data supplying program, and data supplying system |
US20020103698A1 (en) | 2000-10-31 | 2002-08-01 | Christian Cantrell | System and method for enabling user control of online advertising campaigns |
US20020103737A1 (en) | 2000-09-07 | 2002-08-01 | Briere Daniel D. | Marketing collateral repository and supporting data management and communication environment |
US20020116291A1 (en) | 2000-12-22 | 2002-08-22 | Xerox Corporation | Recommender system and method |
US20020120456A1 (en) * | 2001-02-23 | 2002-08-29 | Jakob Berg | Method and arrangement for search and recording of media signals |
US20020129059A1 (en) | 2000-12-29 | 2002-09-12 | Eck Jeffery R. | XML auto map generator |
US6460036B1 (en) | 1994-11-29 | 2002-10-01 | Pinpoint Incorporated | System and method for providing customized electronic newspapers and target advertisements |
US20020174101A1 (en) | 2000-07-12 | 2002-11-21 | Fernley Helen Elaine Penelope | Document retrieval system |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US6505191B1 (en) | 1998-07-24 | 2003-01-07 | Jarg Corporation | Distributed computer database system and method employing hypertext linkage analysis |
US20030014398A1 (en) | 2001-06-29 | 2003-01-16 | Hitachi, Ltd. | Query modification system for information retrieval |
US20030020749A1 (en) | 2001-07-10 | 2003-01-30 | Suhayya Abu-Hakima | Concept-based message/document viewer for electronic communications and internet searching |
US20030033296A1 (en) | 2000-01-31 | 2003-02-13 | Kenneth Rothmuller | Digital media management apparatus and methods |
US20030046311A1 (en) * | 2001-06-19 | 2003-03-06 | Ryan Baidya | Dynamic search engine and database |
US6546388B1 (en) | 2000-01-14 | 2003-04-08 | International Business Machines Corporation | Metadata search results ranking system |
US20030069877A1 (en) | 2001-08-13 | 2003-04-10 | Xerox Corporation | System for automatically generating queries |
US20030079185A1 (en) | 1998-10-09 | 2003-04-24 | Sanjeev Katariya | Method and system for generating a document summary |
US20030093790A1 (en) | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20030093276A1 (en) | 2001-11-13 | 2003-05-15 | Miller Michael J. | System and method for automated answering of natural language questions and queries |
US6571234B1 (en) | 1999-05-11 | 2003-05-27 | Prophet Financial Systems, Inc. | System and method for managing online message board |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US20030115552A1 (en) | 2001-11-27 | 2003-06-19 | Jorg Jahnke | Method and system for automatic creation of multilingual immutable image files |
US6583798B1 (en) | 2000-07-21 | 2003-06-24 | Microsoft Corporation | On-object user interface |
US6587856B1 (en) | 1998-12-07 | 2003-07-01 | Oracle International Corporation | Method and system for representing and accessing object-oriented data in a relational database system |
US20030123443A1 (en) | 1999-04-01 | 2003-07-03 | Anwar Mohammed S. | Search engine with user activity memory |
US20030130982A1 (en) | 2002-01-09 | 2003-07-10 | Stephane Kasriel | Web-site analysis system |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US20030135499A1 (en) | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | System and method for mining a user's electronic mail messages to determine the user's affinities |
US6602300B2 (en) | 1998-02-03 | 2003-08-05 | Fujitsu Limited | Apparatus and method for retrieving data from a document database |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US6633868B1 (en) | 2000-07-28 | 2003-10-14 | Shermann Loyall Min | System and method for context-based document retrieval |
US20030220913A1 (en) * | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US20030220912A1 (en) * | 2002-05-24 | 2003-11-27 | Fain Daniel C. | Method and apparatus for categorizing and presenting documents of a distributed database |
US6665666B1 (en) | 1999-10-26 | 2003-12-16 | International Business Machines Corporation | System, method and program product for answering questions using a search engine |
US20040003097A1 (en) | 2002-05-17 | 2004-01-01 | Brian Willis | Content delivery system |
US20040001104A1 (en) * | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Resource browser sessions search |
US6687704B1 (en) | 2000-08-31 | 2004-02-03 | Hewlett-Packard Development Company, L.P. | Database model system and method |
US20040030741A1 (en) | 2001-04-02 | 2004-02-12 | Wolton Richard Ernest | Method and apparatus for search, visual navigation, analysis and retrieval of information from networks with remote notification and content delivery |
US6697799B1 (en) | 1999-09-10 | 2004-02-24 | Requisite Technology, Inc. | Automated classification of items using cascade searches |
US6697840B1 (en) | 2000-02-29 | 2004-02-24 | Lucent Technologies Inc. | Presence awareness in collaborative systems |
US20040036716A1 (en) | 2002-06-12 | 2004-02-26 | Jordahl Jena J. | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US20040059564A1 (en) | 2002-09-19 | 2004-03-25 | Ming Zhou | Method and system for retrieving hint sentences using expanded queries |
US20040064447A1 (en) | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US20040068486A1 (en) | 2002-10-02 | 2004-04-08 | Xerox Corporation | System and method for improving answer relevance in meta-search engines |
US20040073534A1 (en) | 2002-10-11 | 2004-04-15 | International Business Machines Corporation | Method and apparatus for data mining to discover associations and covariances associated with data |
US6745178B1 (en) | 2000-04-28 | 2004-06-01 | International Business Machines Corporation | Internet based method for facilitating networking among persons with similar interests and for facilitating collaborative searching for information |
US20040122656A1 (en) | 2001-03-16 | 2004-06-24 | Eli Abir | Knowledge system method and appparatus |
US20040133560A1 (en) | 2003-01-07 | 2004-07-08 | Simske Steven J. | Methods and systems for organizing electronic documents |
US20040139106A1 (en) * | 2002-12-31 | 2004-07-15 | International Business Machines Corporation | Search engine facility with automated knowledge retrieval generation and maintenance |
US6766320B1 (en) | 2000-08-24 | 2004-07-20 | Microsoft Corporation | Search engine with natural language-based robust parsing for user query and relevance feedback learning |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US6772188B1 (en) | 2000-07-14 | 2004-08-03 | America Online, Incorporated | Method and apparatus for communicating with an entity automatically identified in an electronic communication |
US6778951B1 (en) | 2000-08-09 | 2004-08-17 | Concerto Software, Inc. | Information retrieval method with natural language interface |
US6785671B1 (en) | 1999-12-08 | 2004-08-31 | Amazon.Com, Inc. | System and method for locating web-based product offerings |
US6795825B2 (en) | 2000-09-12 | 2004-09-21 | Naphtali David Rishe | Database querying system and method |
US6803906B1 (en) | 2000-07-05 | 2004-10-12 | Smart Technologies, Inc. | Passive touch system and method of detecting user input |
US20040225667A1 (en) | 2003-03-12 | 2004-11-11 | Canon Kabushiki Kaisha | Apparatus for and method of summarising text |
US6820237B1 (en) | 2000-01-21 | 2004-11-16 | Amikanow! Corporation | Apparatus and method for context-based highlighting of an electronic document |
US6820093B2 (en) | 1996-07-30 | 2004-11-16 | Hyperphrase Technologies, Llc | Method for verifying record code prior to an action based on the code |
US6834287B1 (en) | 2001-03-14 | 2004-12-21 | Trilogy Development Group, Inc. | Classification engine for managing attribute-based data |
US20040267730A1 (en) | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US20040267813A1 (en) * | 2003-06-30 | 2004-12-30 | Rivers-Moore Jonathan E. | Declarative solution definition |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US6850934B2 (en) | 2001-03-26 | 2005-02-01 | International Business Machines Corporation | Adaptive search engine query |
US6853998B2 (en) | 2001-02-07 | 2005-02-08 | International Business Machines Corporation | Customer self service subsystem for classifying user contexts |
US20050065909A1 (en) | 2003-08-05 | 2005-03-24 | Musgrove Timothy A. | Product placement engine and method |
US6874126B1 (en) | 2001-11-30 | 2005-03-29 | View Space Technologies | Method and apparatus for controlling content display by the cursor motion |
US20050114306A1 (en) | 2003-11-20 | 2005-05-26 | International Business Machines Corporation | Integrated searching of multiple search sources |
US20050125390A1 (en) | 2003-12-03 | 2005-06-09 | Oliver Hurst-Hiller | Automated satisfaction measurement for web search |
US20050125382A1 (en) | 2003-12-03 | 2005-06-09 | Microsoft Corporation | Search system using user behavior data |
US6925456B2 (en) | 2000-04-27 | 2005-08-02 | Fujitsu Limited | Information searching apparatus and method for online award entry |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US6948134B2 (en) | 2000-07-21 | 2005-09-20 | Microsoft Corporation | Integrated method for creating a refreshable Web Query |
US6950791B1 (en) | 2000-09-13 | 2005-09-27 | Antartica Systems, Inc. | Method for describing objects in a virtual space |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US6961954B1 (en) | 1997-10-27 | 2005-11-01 | The Mitre Corporation | Automated segmentation, information extraction, summarization, and presentation of broadcast news |
US6961910B2 (en) | 2000-02-17 | 2005-11-01 | International Business Machines Corporation | System for interacting with participants at a web site through an interactive visual proxy |
US6963830B1 (en) | 1999-07-19 | 2005-11-08 | Fujitsu Limited | Apparatus and method for generating a summary according to hierarchical structure of topic |
US20050262073A1 (en) | 1989-10-26 | 2005-11-24 | Michael Reed | Multimedia search system |
US6976090B2 (en) | 2000-04-20 | 2005-12-13 | Actona Technologies Ltd. | Differentiated content and application delivery via internet |
US6976053B1 (en) | 1999-10-14 | 2005-12-13 | Arcessa, Inc. | Method for using agents to create a computer index corresponding to the contents of networked computers |
US20060010150A1 (en) * | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US7007085B1 (en) | 2001-09-28 | 2006-02-28 | Bellsouth Intellectual Property Corporation | Message log for wireline, voice mail, email, fax, pager, instant messages and chat |
US7006588B2 (en) * | 2000-11-29 | 2006-02-28 | Research In Motion Limited | System and method for synchronization signal detection and recovery from false triggers |
US7022905B1 (en) | 1999-10-18 | 2006-04-04 | Microsoft Corporation | Classification of information and use of classifications in searching and retrieval of information |
US7027975B1 (en) | 2000-08-08 | 2006-04-11 | Object Services And Consulting, Inc. | Guided natural language interface system and method |
US7032174B2 (en) | 2001-03-27 | 2006-04-18 | Microsoft Corporation | Automatically adding proper names to a database |
US7043492B1 (en) | 2001-07-05 | 2006-05-09 | Requisite Technology, Inc. | Automated classification of items using classification mappings |
US7054870B2 (en) | 2000-11-15 | 2006-05-30 | Kooltorch, Llc | Apparatus and methods for organizing and/or presenting data |
US7054860B2 (en) * | 2000-06-02 | 2006-05-30 | Hitachi, Ltd. | Method and system for retrieving a document and computer readable storage medium |
US20060136405A1 (en) | 2003-01-24 | 2006-06-22 | Ducatel Gary M | Searching apparatus and methods |
US7082428B1 (en) * | 2002-09-16 | 2006-07-25 | Bellsouth Intellectual Property Corporation | Systems and methods for collaborative searching |
US7099860B1 (en) | 2000-10-30 | 2006-08-29 | Microsoft Corporation | Image retrieval systems and methods with semantic and feature based relevance feedback |
US7146399B2 (en) | 2001-05-25 | 2006-12-05 | 2006 Trident Company | Run-time architecture for enterprise integration with transformation generation |
US7171352B2 (en) | 2004-04-23 | 2007-01-30 | Microsoft Corporation | Linguistic object model |
US7181459B2 (en) | 1999-05-04 | 2007-02-20 | Iconfind, Inc. | Method of coding, categorizing, and retrieving network pages and sites |
US7194485B2 (en) | 2003-11-21 | 2007-03-20 | International Business Machines Corporation | Mapping XML schema components to qualified java components |
US7194455B2 (en) | 2002-09-19 | 2007-03-20 | Microsoft Corporation | Method and system for retrieving confirming sentences |
US7293015B2 (en) | 2002-09-19 | 2007-11-06 | Microsoft Corporation | Method and system for detecting user intentions in retrieval of hint sentences |
US7293014B2 (en) | 2001-06-18 | 2007-11-06 | Siebel Systems, Inc. | System and method to enable searching across multiple databases and files using a single search |
US7305129B2 (en) | 2003-01-29 | 2007-12-04 | Microsoft Corporation | Methods and apparatus for populating electronic forms from scanned documents |
US7318049B2 (en) | 2000-11-17 | 2008-01-08 | Gregory Fx Iannacci | System and method for an automated benefit recognition, acquisition, value exchange, and transaction settlement system using multivariable linear and nonlinear modeling |
US7412708B1 (en) | 2004-03-31 | 2008-08-12 | Google Inc. | Methods and systems for capturing information |
US7421645B2 (en) | 2000-06-06 | 2008-09-02 | Microsoft Corporation | Method and system for providing electronic commerce actions based on semantically labeled strings |
US7437353B2 (en) | 2003-12-31 | 2008-10-14 | Google Inc. | Systems and methods for unification of search results |
US7451136B2 (en) | 2000-10-11 | 2008-11-11 | Microsoft Corporation | System and method for searching multiple disparate search engines |
US7478089B2 (en) | 2003-10-29 | 2009-01-13 | Kontera Technologies, Inc. | System and method for real-time web page context analysis for the real-time insertion of textual markup objects and dynamic content |
-
2004
- 2004-03-31 US US10/814,069 patent/US7707142B1/en active Active
Patent Citations (146)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050262073A1 (en) | 1989-10-26 | 2005-11-24 | Michael Reed | Multimedia search system |
USRE36727E (en) | 1989-12-26 | 2000-06-06 | Kageneck; Karl-Erbo G. | Method of indexing and retrieval of electronically-stored documents |
US5418948A (en) | 1991-10-08 | 1995-05-23 | West Publishing Company | Concept matching of natural language queries with a database of document concepts |
US5696962A (en) | 1993-06-24 | 1997-12-09 | Xerox Corporation | Method for computerized information retrieval using shallow linguistic analysis |
US5678038A (en) | 1994-06-21 | 1997-10-14 | International Business Machines Corporation | Storing and retrieving heterogeneous classification systems utilizing globally unique identifiers |
US5754938A (en) | 1994-11-29 | 1998-05-19 | Herz; Frederick S. M. | Pseudonymous server for system for customized electronic identification of desirable objects |
US6460036B1 (en) | 1994-11-29 | 2002-10-01 | Pinpoint Incorporated | System and method for providing customized electronic newspapers and target advertisements |
US5717913A (en) | 1995-01-03 | 1998-02-10 | University Of Central Florida | Method for detecting and extracting text data using database schemas |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5911139A (en) | 1996-03-29 | 1999-06-08 | Virage, Inc. | Visual image database search engine which allows for different schema |
US5964839A (en) | 1996-03-29 | 1999-10-12 | At&T Corp | System and method for monitoring information flow and performing data collection |
US5826261A (en) | 1996-05-10 | 1998-10-20 | Spencer; Graham | System and method for querying multiple, distributed databases by selective sharing of local relative significance information for terms related to the query |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US6820093B2 (en) | 1996-07-30 | 2004-11-16 | Hyperphrase Technologies, Llc | Method for verifying record code prior to an action based on the code |
US6070158A (en) | 1996-08-14 | 2000-05-30 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
US5890152A (en) | 1996-09-09 | 1999-03-30 | Seymour Alvin Rapaport | Personal feedback browser for obtaining media files |
US5933827A (en) | 1996-09-25 | 1999-08-03 | International Business Machines Corporation | System for identifying new web pages of interest to a user |
US5987446A (en) | 1996-11-12 | 1999-11-16 | U.S. West, Inc. | Searching large collections of text using multiple search engines concurrently |
US6272507B1 (en) | 1997-04-09 | 2001-08-07 | Xerox Corporation | System for ranking search results from a collection of documents using spreading activation techniques |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US5940821A (en) | 1997-05-21 | 1999-08-17 | Oracle Corporation | Information presentation in a knowledge base search and retrieval system |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6961954B1 (en) | 1997-10-27 | 2005-11-01 | The Mitre Corporation | Automated segmentation, information extraction, summarization, and presentation of broadcast news |
US6602300B2 (en) | 1998-02-03 | 2003-08-05 | Fujitsu Limited | Apparatus and method for retrieving data from a document database |
US6012067A (en) | 1998-03-02 | 2000-01-04 | Sarkar; Shyam Sundar | Method and apparatus for storing and manipulating objects in a plurality of relational data managers on the web |
US20030055831A1 (en) | 1998-03-16 | 2003-03-20 | S.L.I. Systems, Inc. | Search engine |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US6112203A (en) | 1998-04-09 | 2000-08-29 | Altavista Company | Method for ranking documents in a hyperlinked environment using connectivity and selective content analysis |
US6199059B1 (en) | 1998-04-22 | 2001-03-06 | International Computex, Inc. | System and method for classifying and retrieving information with virtual object hierarchy |
US6122647A (en) | 1998-05-19 | 2000-09-19 | Perspecta, Inc. | Dynamic generation of contextual links in hypertext documents |
US6167434A (en) | 1998-07-15 | 2000-12-26 | Pang; Stephen Y. | Computer code for removing junk e-mail messages |
US6505191B1 (en) | 1998-07-24 | 2003-01-07 | Jarg Corporation | Distributed computer database system and method employing hypertext linkage analysis |
US6397221B1 (en) | 1998-09-12 | 2002-05-28 | International Business Machines Corp. | Method for creating and maintaining a frame-based hierarchically organized databases with tabularly organized data |
US20030079185A1 (en) | 1998-10-09 | 2003-04-24 | Sanjeev Katariya | Method and system for generating a document summary |
US6587856B1 (en) | 1998-12-07 | 2003-07-01 | Oracle International Corporation | Method and system for representing and accessing object-oriented data in a relational database system |
US20030123443A1 (en) | 1999-04-01 | 2003-07-03 | Anwar Mohammed S. | Search engine with user activity memory |
US7181459B2 (en) | 1999-05-04 | 2007-02-20 | Iconfind, Inc. | Method of coding, categorizing, and retrieving network pages and sites |
US20020016786A1 (en) | 1999-05-05 | 2002-02-07 | Pitkow James B. | System and method for searching and recommending objects from a categorically organized information repository |
US6571234B1 (en) | 1999-05-11 | 2003-05-27 | Prophet Financial Systems, Inc. | System and method for managing online message board |
US20060010150A1 (en) * | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US6963830B1 (en) | 1999-07-19 | 2005-11-08 | Fujitsu Limited | Apparatus and method for generating a summary according to hierarchical structure of topic |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US6697799B1 (en) | 1999-09-10 | 2004-02-24 | Requisite Technology, Inc. | Automated classification of items using cascade searches |
US6976053B1 (en) | 1999-10-14 | 2005-12-13 | Arcessa, Inc. | Method for using agents to create a computer index corresponding to the contents of networked computers |
US7022905B1 (en) | 1999-10-18 | 2006-04-04 | Microsoft Corporation | Classification of information and use of classifications in searching and retrieval of information |
US6665666B1 (en) | 1999-10-26 | 2003-12-16 | International Business Machines Corporation | System, method and program product for answering questions using a search engine |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US6785671B1 (en) | 1999-12-08 | 2004-08-31 | Amazon.Com, Inc. | System and method for locating web-based product offerings |
US20020099700A1 (en) | 1999-12-14 | 2002-07-25 | Wen-Syan Li | Focused search engine and method |
US6546388B1 (en) | 2000-01-14 | 2003-04-08 | International Business Machines Corporation | Metadata search results ranking system |
US6820237B1 (en) | 2000-01-21 | 2004-11-16 | Amikanow! Corporation | Apparatus and method for context-based highlighting of an electronic document |
US20030033296A1 (en) | 2000-01-31 | 2003-02-13 | Kenneth Rothmuller | Digital media management apparatus and methods |
US6961910B2 (en) | 2000-02-17 | 2005-11-01 | International Business Machines Corporation | System for interacting with participants at a web site through an interactive visual proxy |
US6697840B1 (en) | 2000-02-29 | 2004-02-24 | Lucent Technologies Inc. | Presence awareness in collaborative systems |
US20010037328A1 (en) | 2000-03-23 | 2001-11-01 | Pustejovsky James D. | Method and system for interfacing to a knowledge acquisition system |
US20030093790A1 (en) | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20020059272A1 (en) | 2000-04-20 | 2002-05-16 | Porter Edward W. | Apparatuses, methods, programming, and propagated signals for creating, editing, organizing and viewing collaborative databases |
US6976090B2 (en) | 2000-04-20 | 2005-12-13 | Actona Technologies Ltd. | Differentiated content and application delivery via internet |
US6925456B2 (en) | 2000-04-27 | 2005-08-02 | Fujitsu Limited | Information searching apparatus and method for online award entry |
US6745178B1 (en) | 2000-04-28 | 2004-06-01 | International Business Machines Corporation | Internet based method for facilitating networking among persons with similar interests and for facilitating collaborative searching for information |
US7054860B2 (en) * | 2000-06-02 | 2006-05-30 | Hitachi, Ltd. | Method and system for retrieving a document and computer readable storage medium |
US7421645B2 (en) | 2000-06-06 | 2008-09-02 | Microsoft Corporation | Method and system for providing electronic commerce actions based on semantically labeled strings |
US6803906B1 (en) | 2000-07-05 | 2004-10-12 | Smart Technologies, Inc. | Passive touch system and method of detecting user input |
US20020174101A1 (en) | 2000-07-12 | 2002-11-21 | Fernley Helen Elaine Penelope | Document retrieval system |
US6772188B1 (en) | 2000-07-14 | 2004-08-03 | America Online, Incorporated | Method and apparatus for communicating with an entity automatically identified in an electronic communication |
US6948134B2 (en) | 2000-07-21 | 2005-09-20 | Microsoft Corporation | Integrated method for creating a refreshable Web Query |
US6583798B1 (en) | 2000-07-21 | 2003-06-24 | Microsoft Corporation | On-object user interface |
US6633868B1 (en) | 2000-07-28 | 2003-10-14 | Shermann Loyall Min | System and method for context-based document retrieval |
US7027975B1 (en) | 2000-08-08 | 2006-04-11 | Object Services And Consulting, Inc. | Guided natural language interface system and method |
US6778951B1 (en) | 2000-08-09 | 2004-08-17 | Concerto Software, Inc. | Information retrieval method with natural language interface |
US6766320B1 (en) | 2000-08-24 | 2004-07-20 | Microsoft Corporation | Search engine with natural language-based robust parsing for user query and relevance feedback learning |
US6687704B1 (en) | 2000-08-31 | 2004-02-03 | Hewlett-Packard Development Company, L.P. | Database model system and method |
US20020103737A1 (en) | 2000-09-07 | 2002-08-01 | Briere Daniel D. | Marketing collateral repository and supporting data management and communication environment |
US6795825B2 (en) | 2000-09-12 | 2004-09-21 | Naphtali David Rishe | Database querying system and method |
US6950791B1 (en) | 2000-09-13 | 2005-09-27 | Antartica Systems, Inc. | Method for describing objects in a virtual space |
US20020040311A1 (en) | 2000-10-04 | 2002-04-04 | John Douglass | Web browser page rating system |
US7451136B2 (en) | 2000-10-11 | 2008-11-11 | Microsoft Corporation | System and method for searching multiple disparate search engines |
US20020103806A1 (en) * | 2000-10-18 | 2002-08-01 | Masafumi Yamanoue | Data supply controlling device, data supplying method, storage medium for data supplying program, and data supplying system |
US7099860B1 (en) | 2000-10-30 | 2006-08-29 | Microsoft Corporation | Image retrieval systems and methods with semantic and feature based relevance feedback |
US20020103698A1 (en) | 2000-10-31 | 2002-08-01 | Christian Cantrell | System and method for enabling user control of online advertising campaigns |
US20020095427A1 (en) | 2000-11-09 | 2002-07-18 | Kaplan Ari David | System, method and apparatus for the wireless monitoring and management of computer systems |
US7054870B2 (en) | 2000-11-15 | 2006-05-30 | Kooltorch, Llc | Apparatus and methods for organizing and/or presenting data |
US7318049B2 (en) | 2000-11-17 | 2008-01-08 | Gregory Fx Iannacci | System and method for an automated benefit recognition, acquisition, value exchange, and transaction settlement system using multivariable linear and nonlinear modeling |
US7006588B2 (en) * | 2000-11-29 | 2006-02-28 | Research In Motion Limited | System and method for synchronization signal detection and recovery from false triggers |
US20020065800A1 (en) * | 2000-11-30 | 2002-05-30 | Morlitz David M. | HTTP archive file |
US20020116291A1 (en) | 2000-12-22 | 2002-08-22 | Xerox Corporation | Recommender system and method |
US20020129059A1 (en) | 2000-12-29 | 2002-09-12 | Eck Jeffery R. | XML auto map generator |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US6853998B2 (en) | 2001-02-07 | 2005-02-08 | International Business Machines Corporation | Customer self service subsystem for classifying user contexts |
US20020120456A1 (en) * | 2001-02-23 | 2002-08-29 | Jakob Berg | Method and arrangement for search and recording of media signals |
US6834287B1 (en) | 2001-03-14 | 2004-12-21 | Trilogy Development Group, Inc. | Classification engine for managing attribute-based data |
US20040122656A1 (en) | 2001-03-16 | 2004-06-24 | Eli Abir | Knowledge system method and appparatus |
US6850934B2 (en) | 2001-03-26 | 2005-02-01 | International Business Machines Corporation | Adaptive search engine query |
US7032174B2 (en) | 2001-03-27 | 2006-04-18 | Microsoft Corporation | Automatically adding proper names to a database |
US20040030741A1 (en) | 2001-04-02 | 2004-02-12 | Wolton Richard Ernest | Method and apparatus for search, visual navigation, analysis and retrieval of information from networks with remote notification and content delivery |
US7146399B2 (en) | 2001-05-25 | 2006-12-05 | 2006 Trident Company | Run-time architecture for enterprise integration with transformation generation |
US7293014B2 (en) | 2001-06-18 | 2007-11-06 | Siebel Systems, Inc. | System and method to enable searching across multiple databases and files using a single search |
US20030046311A1 (en) * | 2001-06-19 | 2003-03-06 | Ryan Baidya | Dynamic search engine and database |
US20030014398A1 (en) | 2001-06-29 | 2003-01-16 | Hitachi, Ltd. | Query modification system for information retrieval |
US7043492B1 (en) | 2001-07-05 | 2006-05-09 | Requisite Technology, Inc. | Automated classification of items using classification mappings |
US20030020749A1 (en) | 2001-07-10 | 2003-01-30 | Suhayya Abu-Hakima | Concept-based message/document viewer for electronic communications and internet searching |
US20030069877A1 (en) | 2001-08-13 | 2003-04-10 | Xerox Corporation | System for automatically generating queries |
US7007085B1 (en) | 2001-09-28 | 2006-02-28 | Bellsouth Intellectual Property Corporation | Message log for wireline, voice mail, email, fax, pager, instant messages and chat |
US20030093276A1 (en) | 2001-11-13 | 2003-05-15 | Miller Michael J. | System and method for automated answering of natural language questions and queries |
US20030115552A1 (en) | 2001-11-27 | 2003-06-19 | Jorg Jahnke | Method and system for automatic creation of multilingual immutable image files |
US6874126B1 (en) | 2001-11-30 | 2005-03-29 | View Space Technologies | Method and apparatus for controlling content display by the cursor motion |
US20030130982A1 (en) | 2002-01-09 | 2003-07-10 | Stephane Kasriel | Web-site analysis system |
US20030135499A1 (en) | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | System and method for mining a user's electronic mail messages to determine the user's affinities |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US20040003097A1 (en) | 2002-05-17 | 2004-01-01 | Brian Willis | Content delivery system |
US20030220913A1 (en) * | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US20030220912A1 (en) * | 2002-05-24 | 2003-11-27 | Fain Daniel C. | Method and apparatus for categorizing and presenting documents of a distributed database |
US20040036716A1 (en) | 2002-06-12 | 2004-02-26 | Jordahl Jena J. | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US20040001104A1 (en) * | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Resource browser sessions search |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US7082428B1 (en) * | 2002-09-16 | 2006-07-25 | Bellsouth Intellectual Property Corporation | Systems and methods for collaborative searching |
US7293015B2 (en) | 2002-09-19 | 2007-11-06 | Microsoft Corporation | Method and system for detecting user intentions in retrieval of hint sentences |
US7194455B2 (en) | 2002-09-19 | 2007-03-20 | Microsoft Corporation | Method and system for retrieving confirming sentences |
US20040059564A1 (en) | 2002-09-19 | 2004-03-25 | Ming Zhou | Method and system for retrieving hint sentences using expanded queries |
US20040064447A1 (en) | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US20040068486A1 (en) | 2002-10-02 | 2004-04-08 | Xerox Corporation | System and method for improving answer relevance in meta-search engines |
US20040073534A1 (en) | 2002-10-11 | 2004-04-15 | International Business Machines Corporation | Method and apparatus for data mining to discover associations and covariances associated with data |
US20040139106A1 (en) * | 2002-12-31 | 2004-07-15 | International Business Machines Corporation | Search engine facility with automated knowledge retrieval generation and maintenance |
US20040133560A1 (en) | 2003-01-07 | 2004-07-08 | Simske Steven J. | Methods and systems for organizing electronic documents |
US20060136405A1 (en) | 2003-01-24 | 2006-06-22 | Ducatel Gary M | Searching apparatus and methods |
US7305129B2 (en) | 2003-01-29 | 2007-12-04 | Microsoft Corporation | Methods and apparatus for populating electronic forms from scanned documents |
US20040225667A1 (en) | 2003-03-12 | 2004-11-11 | Canon Kabushiki Kaisha | Apparatus for and method of summarising text |
US20040267730A1 (en) | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US7162473B2 (en) | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20040267813A1 (en) * | 2003-06-30 | 2004-12-30 | Rivers-Moore Jonathan E. | Declarative solution definition |
US20050065909A1 (en) | 2003-08-05 | 2005-03-24 | Musgrove Timothy A. | Product placement engine and method |
US7478089B2 (en) | 2003-10-29 | 2009-01-13 | Kontera Technologies, Inc. | System and method for real-time web page context analysis for the real-time insertion of textual markup objects and dynamic content |
US20050114306A1 (en) | 2003-11-20 | 2005-05-26 | International Business Machines Corporation | Integrated searching of multiple search sources |
US7194485B2 (en) | 2003-11-21 | 2007-03-20 | International Business Machines Corporation | Mapping XML schema components to qualified java components |
US20050125390A1 (en) | 2003-12-03 | 2005-06-09 | Oliver Hurst-Hiller | Automated satisfaction measurement for web search |
US20050125382A1 (en) | 2003-12-03 | 2005-06-09 | Microsoft Corporation | Search system using user behavior data |
US7437353B2 (en) | 2003-12-31 | 2008-10-14 | Google Inc. | Systems and methods for unification of search results |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US7412708B1 (en) | 2004-03-31 | 2008-08-12 | Google Inc. | Methods and systems for capturing information |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US7171352B2 (en) | 2004-04-23 | 2007-01-30 | Microsoft Corporation | Linguistic object model |
Non-Patent Citations (59)
Title |
---|
"askSam(TM) Making Information Useful," askSam,-Organize your information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"askSam™ Making Information Useful," askSam,—Organize your information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"Overview," Stuff I've Seen-Home Page, http://research.Microsoft.com/adapt/sis/index.htm, pp. 1-2, printed May 26, 2004. |
"Searching for the next Google-New trends are helping nimble startups elbow in to the plundered market," Red Herring-The Business of Technology, Mar. 9, 2004, http://redherring.com/PrintArticle.aspx?a=4782§or=Capital, p. 1-5, printed Mar. 30, 2004. |
"Selecting Task-Relevant Sources for Just-In-Time Retrieval," pp. 1-3, no date. |
"Standardization Priorities for the Directory-Directory Interoperability Forum White Paper," The Open Group, Dec. 2001, pp. 1-21. |
"WhenU Just-In-Time Marketing," http://www.whenu.com printed Mar. 19, 2004. |
80-20 Software-Products-80-20 One Search, http://www.80-20.com/products/one-search/retriever.asp, printed Mar. 16, 2004. |
Alexa® Web Search-Toolbar Quick Tour, http://pages.alexa.com/prod-serv/quicktour.html, pp. 1-5, printed Mar. 16, 2004. |
Barrett, R. et al., "How to Personalize the Web," IBM Research, http://www.almaden.ibm.com/cs/wbi/papers/chi97/wbipaper.html, pp. 1-13, printed Mar. 16, 2004. |
Battelle, J., CNN.com "When geeks go camping, ideas hatch," http://www.cnn.com/2004/TECH/ptech/01/09/bus2.feat.geek.camp/index.html, pp. 1-3, printed Jan. 13, 2004. |
Berlin, J., et al., "Database Schema Matching Using Machine Learning with Feature Selection," CAISE 2002, LNCS 2348, pp. 452-466, http://www.springerlink.com/contant/73u6cpt0qek8rgh0/. |
Boyan, J., et al., "A Machine Learning Architecture for Optimizing Web Search Engines," School of Computer Science, Carnegie Mellon University, May 10, 1996, pp. 1-8. |
Bradenbaugh, F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly(TM) Online Catalog, http://www.oreilly.com/catalog/iscook/chapter/ch01.html, pp. 1-30, printed Dec. 29, 2003. |
Bradenbaugh, F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly™ Online Catalog, http://www.oreilly.com/catalog/iscook/chapter/ch01.html, pp. 1-30, printed Dec. 29, 2003. |
Brill, E., "A Simple Rule-Based Part of Speech Tagger," Department of Computer Science, University of Pennsylvania, 1992, pp. 1-5. |
Brin, S., et al, "The Anatomy of a Large-Scale Hypertextual Web Search Engine," http://www7.scu.edu.au/programme/fullpapers/1921/com1921.htm, pp. 1-18, 1998. |
Budzik, J., et al., User Interactions with Everyday Applications as Context for Just-in-time Information Access, Intelligent Information Laboratory, Northwestern University, pp. 1-8, no date. |
Chen, et al., "Bringing order to the Web: automatically categorizing search results", Proceedings of the SIGCHI conference on Human factors in computing systems, Apr. 2000, p. 145-152. Retrieved from the Internet:<URL: http://portal.acm.org/ft-gateway.cfm?id=332418&type=pdf&coll=GUIDE&dl=GUIDE&CFID=49352357&CFTOKEN=43112086>. * |
Claypool, M., et al., "Inferring User Interest," IEEE Internet Computing, 2001, pp. 1-17, vol. 5, No. 6, located at http://web.cs.wpi.edu/~claypool/papers/iui/iui.pdf. |
Claypool, M., et al., "Inferring User Interest," IEEE Internet Computing, 2001, pp. 1-17, vol. 5, No. 6, located at http://web.cs.wpi.edu/˜claypool/papers/iui/iui.pdf. |
Czerwinski, M., et al., "Visualizing Implicit Queries for Information Management and Retrieval," ACM CHI '99, May 15-20, 1999, pp. 560-567. |
Czerwinski, M., et al., "Visualizing Implicit Queries for Information Management and Retrieval," CHI 99, May 15-20, 1999, ACM, pp. 560-567. |
DEVONthink, http://www.devon-techonologies.com/products/devonthink.php, printed Mar. 16, 2004. |
dtSearch® -http://www.dtsearch.com/, printed Mar. 15, 2004. |
Dumais, S., et al, "Stuff I've Seen: A System for Personal Information Retrieval and Re-Use," Microsoft Research, SIGIR'03, Jul. 28-Aug. 1, 2003, pp. 1-8. |
Enfish, http://www.enfish.com, printed Mar. 16, 2004. |
Fast Search & Transfer-Home-Enterprise Search, http://solutions.altavista.com/en/news/pr-020402-desktop.shtmu, printed Mar. 16, 2004. |
Fertig, S., et al., "Lifestreams: an Alternative to the Desktop Metaphor," http://www.acm.org/sigchi/chi96/proceedings/videos/Fertig/etf.htm, pp. 1-3, printed Mar. 16, 2004. |
Garofalakis, M., et al., "XTRACT: a System for Extracting Document Type Descriptors from XML Documents," SIGMOD, ACM, Jun. 2000, p. 165-176, vol. 29, No. 2. |
Geisler, G., "Enriched Links: a Framework for Improving Web Navigation Using Pop-Up Views," pp. 1-14, 2000. |
Horvitz, E., et al., "The Lumiere project: Bayesian user modeling for inferring the goals and needs of software users", Proceedings of the Fourteenth Conference on Uncertainty, 1998, pp. 256-265, Morgan Kaufmann: San Francisco. |
International Search Report and Written Opinion, PCT/US2004/038562, Apr. 6, 2005, 12 pages. |
ISYS Search Software-ISYS: desktop, http://www.isysusa.com/products/desktop/index.html, printed Mar. 16, 2004. |
Joachims, T., et al., "WebWatcher: a Tour Guide for the World Wide Web," 1998. |
Joho, H., et al., "A Study of User Interaction with a Concept-Based Interactive Query Expansion Support Tool," Advances in Information Retrieval, a Study of User Interaction, Lecture Notes in Computer Science, Mar. 2, 2004, pp. 42-56, vol. 2997. |
Jones, G., et al., "Context-Aware Retrieval for Ubiquitous Computing Environments," Mobile and Ubiquitous Information Access, Lecture Notes in Computer Science, Jan. 27, 2004, pp. 227-243, vol. 2954. |
Knezevic, P. et al., "The Architecture of the Obelix-an Improved Internet Search Engine," Proceedings of the 33rd Annual Hawaii International Conference on System Sciences (HICSS) Jan. 4-7, 2000, Maui, HI, USA, pp. 2145-2155. |
Li, W., et al., "Semantic Integration in Heterogeneous Databases Using Neural Networks," Proceedings of the 20th International Conference on Very Large Data Bases, Sep. 12-15, 1994, pp. 1-12, Morgan Kaufmann Publishers, San Francisco, CA. |
Li, W., et al., "Semint: a Tool for Identifying Attribute Correspondences in Heterogeneous Databases Using Neural Networks," Data Knowl. Eng., Apr. 2000, pp. 484, vol. 33, No. 1, http://dx.doi.org/10.1016/S0169-023X(99)00044-0. |
Markoff, J., "Google Moves Toward Clash with Microsoft," The New York Times, May 19, 2004, http://www.nytimes.com/2004/5/19/technology/19google.html?ex=1085964389&ei=1&e..., pp. 1-4, printed May 19, 2004. |
Morita, M. et al., "Information Filtering Based on User Behavior Analysis and Best Match Text Retrieval," Proceedings of the Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, Dublin, Jul. 3-6, 1994, pp. 272-281. |
Naraine, R., "Future of Search Will Make You Dizzy," Enterprise, May 20, 2004, http://www.internetnews.com/ent-news/article.php/3356831, pp. 1-4, printed May 21, 2004. |
Pasca, Marius, "Acquisition of categorized named entities for web search", Proceedings of the thirteenth ACM international conference on Information and knowledge management, Nov. 2004, p. 137-145. Retrieved from the Internet:<URL: ttp://portal.acm.org/ ft-gateway.cfm?id=1031194&type=pdf&coll=GUIDE&dl=GUIDE&CFID=49352998&CFTOKEN =66340472>. * |
Phelps, A., "All You Can Seek," Special Services, Jul. 1999, vol. 7, Iss. 7, [online] [Retrieved on Oct. 16, 2006] Retrieved from the Internet: http://www.smartcomputing.com/editorial/article.asp?article=articles/archive/g0707/26g07/26g07.asp. |
Rhodes, B., "Margin Notes Building a Contextually Aware Associative Memory," The Proceedings of the International Conference on Intelligent User Interfaces (IUI'00), Jan. 9-12, 2000. |
Rhodes, B., et al., "Just-in-time information retrieval agents," Systems Journal, vol. 39, Nos. 3&4, 2000, pp. 685-704. |
Rhodes, B., et al., "Remembrance Agent-a continuously running automated information retrieval system," the Proceedings of the First International Conference on the Practical Application of Intelligent Agents and Multi Agent Technology (PAAM '96), pp. 487-495. |
Rizzo, T., "WinFS 101: Introducing the New Windows File System," Longhorn Developer Center Home: Headline Archive: WinFS 101: Introducing the New . . . , http://msdn.Microsoft.com/Longhorn/archive/default.aspx?pull+/library/en-us/dnwinfs/htm..., pp. 1-5, printed Apr. 21, 2004. |
Scha, R., et al., "An Augmented Context Free Grammar for Discourse," Proceedings of the 12th Conference on Computational Linguistics-vol. 2, Computational Linguistics, Aug. 22-27, 1988, pp. 573-577, Morristown, NJ, http://dx.doi.org/10.3115/991719.991756. |
Shedherd, M., et al., "Browsing and Keyword-Based Profiles: a Cautionary Tale," Proceedings of the 34th Hawaii International Conference on System Sciences, Jan. 3-6, 2001, pp. 1365-1373. |
Sherman, C., "HotBot's New Desktop Search Toolbar," www.searchenginewatch.com, http://searchenginewatch.com/searchday/print.php/34711-339921, pp. 1-3, printed Apr. 14, 2004. |
Sullivan, D., "Alta Vista Releases Search Software," The Search Engine Report, Aug. 4, 1998, pp. 1-2. |
U.S. Appl. No. 10/749,440, filed Dec. 31, 2003, Badros et al. |
WebWatcher Home Page, "Welcome to the WebWatcher Project," http://www-2.cs.cmu.edu/~webwatcher/, printed Oct. 15, 2003. |
WebWatcher Home Page, "Welcome to the WebWatcher Project," http://www-2.cs.cmu.edu/˜webwatcher/, printed Oct. 15, 2003. |
White, R., et al., "The Use of Implicit Evidence for Relevance Feedback in Web Retrieval," Lecture Notes in Computer Science, Jan. 1, 2002, pp. 93-109, vol. 2291. |
X1 instantly searches files & email. For outlook, Outlook, http://www.x1.com/, printed Mar. 15, 2004. |
Zellweger, P., et al., "Fluid Links for Informed and Incremental Link Transitions," Proceedings of Hypertext'98, Pittsburgh, PA, Jun. 20-24, 1998, pp. 50-57. |
Cited By (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070204216A1 (en) * | 2006-02-24 | 2007-08-30 | Morgan Brian S | System and method for creating layouts using a layout editor |
US20090287684A1 (en) * | 2008-05-14 | 2009-11-19 | Bennett James D | Historical internet |
US20090292692A1 (en) * | 2008-05-21 | 2009-11-26 | Kabushiki Kaisha Toshiba | Information Search Method and Information Processing Apparatus |
US20100169339A1 (en) * | 2008-12-30 | 2010-07-01 | Yahoo! Inc., A Delaware Corporation | System, method, or apparatus for updating stored search result values |
US20100241660A1 (en) * | 2009-03-20 | 2010-09-23 | Microsoft Corporation | Retrieval of metadata for peripheral devices |
US8352492B2 (en) * | 2009-03-20 | 2013-01-08 | Microsoft Corporation | Retrieval of metadata for peripheral devices |
US9239879B2 (en) * | 2009-06-26 | 2016-01-19 | Iac Search & Media, Inc. | Method and system for determining confidence in answer for search |
US20100332499A1 (en) * | 2009-06-26 | 2010-12-30 | Iac Search & Media, Inc. | Method and system for determining confidence in answer for search |
US20110282863A1 (en) * | 2010-05-11 | 2011-11-17 | Donald Cohen | Use of virtual database technology for internet search and data integration |
US9639611B2 (en) | 2010-06-11 | 2017-05-02 | Doat Media Ltd. | System and method for providing suitable web addresses to a user device |
US10339172B2 (en) | 2010-06-11 | 2019-07-02 | Doat Media Ltd. | System and methods thereof for enhancing a user's search experience |
US10713312B2 (en) | 2010-06-11 | 2020-07-14 | Doat Media Ltd. | System and method for context-launching of applications |
US10191991B2 (en) | 2010-06-11 | 2019-01-29 | Doat Media Ltd. | System and method for detecting a search intent |
US10114534B2 (en) | 2010-06-11 | 2018-10-30 | Doat Media Ltd. | System and method for dynamically displaying personalized home screens respective of user queries |
US9665647B2 (en) | 2010-06-11 | 2017-05-30 | Doat Media Ltd. | System and method for indexing mobile applications |
US9846699B2 (en) | 2010-06-11 | 2017-12-19 | Doat Media Ltd. | System and methods thereof for dynamically updating the contents of a folder on a device |
US9912778B2 (en) | 2010-06-11 | 2018-03-06 | Doat Media Ltd. | Method for dynamically displaying a personalized home screen on a user device |
US20150032714A1 (en) * | 2011-03-28 | 2015-01-29 | Doat Media Ltd. | Method and system for searching for applications respective of a connectivity mode of a user device |
US9858342B2 (en) * | 2011-03-28 | 2018-01-02 | Doat Media Ltd. | Method and system for searching for applications respective of a connectivity mode of a user device |
US20130066633A1 (en) * | 2011-09-09 | 2013-03-14 | Verisign, Inc. | Providing Audio-Activated Resource Access for User Devices |
US20140344455A1 (en) * | 2011-12-19 | 2014-11-20 | Nec Europe Ltd. | Method and system to measure user engagement with content through event tracking on the client side |
US8688669B1 (en) * | 2012-05-22 | 2014-04-01 | Google Inc. | Content item searching and retrieval |
US10055433B2 (en) | 2014-09-18 | 2018-08-21 | Microsoft Technology Licensing, Llc | Referenced content indexing |
US20170017672A1 (en) * | 2015-07-14 | 2017-01-19 | Microsoft Technology Licensing, Llc | Accessing search results in offline mode |
US20180285458A1 (en) * | 2017-04-04 | 2018-10-04 | Yandex Europe Ag | Method and system for generating an offline search engine result page |
US10713308B2 (en) * | 2017-04-04 | 2020-07-14 | Yandex Europe Ag | Method and system for generating an offline search engine result page |
US11347815B2 (en) * | 2017-04-04 | 2022-05-31 | Yandex Europe Ag | Method and system for generating an offline search engine result page |
US11113327B2 (en) | 2019-02-13 | 2021-09-07 | Optum Technology, Inc. | Document indexing, searching, and ranking with semantic intelligence |
CN110572311A (en) * | 2019-08-09 | 2019-12-13 | 青岛海信移动通信技术股份有限公司 | Mail downloading method and terminal |
CN110572311B (en) * | 2019-08-09 | 2022-01-11 | 青岛海信移动通信技术股份有限公司 | Mail downloading method and terminal |
CN111414756A (en) * | 2020-03-24 | 2020-07-14 | 李德朋 | Policy data processing method |
US11651156B2 (en) | 2020-05-07 | 2023-05-16 | Optum Technology, Inc. | Contextual document summarization with semantic intelligence |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7707142B1 (en) | Methods and systems for performing an offline search | |
US7725508B2 (en) | Methods and systems for information capture and retrieval | |
US9836544B2 (en) | Methods and systems for prioritizing a crawl | |
AU2005231112B2 (en) | Methods and systems for structuring event data in a database for location and retrieval | |
US10180980B2 (en) | Methods and systems for eliminating duplicate events | |
US7580568B1 (en) | Methods and systems for identifying an image as a representative image for an article | |
US9672232B1 (en) | Systems and methods for selectively storing event data | |
US7941439B1 (en) | Methods and systems for information capture | |
US7333976B1 (en) | Methods and systems for processing contact information | |
US8275839B2 (en) | Methods and systems for processing email messages | |
US20090276408A1 (en) | Systems And Methods For Generating A User Interface | |
US20080059419A1 (en) | Systems and methods for providing search results | |
US7412708B1 (en) | Methods and systems for capturing information | |
US7788274B1 (en) | Systems and methods for category-based search | |
WO2005098595A2 (en) | Methods and systems for interfacing applications with a search engine | |
US7272601B1 (en) | Systems and methods for associating a keyword with a user interface area | |
US7680888B1 (en) | Methods and systems for processing instant messenger messages | |
US7853606B1 (en) | Alternate methods of displaying search results | |
US7499958B1 (en) | Systems and methods of replicating all or part of a data store | |
US8631076B1 (en) | Methods and systems for associating instant messenger events | |
US7581227B1 (en) | Systems and methods of synchronizing indexes | |
US8595214B1 (en) | Systems and methods for article location and retrieval |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:IONESCU, MIHAI FLORIN;REEL/FRAME:016005/0728Effective date: 20040716 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
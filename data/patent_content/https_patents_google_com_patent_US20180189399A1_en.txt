US20180189399A1 - Systems and methods for identifying and characterizing signals contained in a data stream - Google Patents
Systems and methods for identifying and characterizing signals contained in a data stream Download PDFInfo
- Publication number
- US20180189399A1 US20180189399A1 US15/394,586 US201615394586A US2018189399A1 US 20180189399 A1 US20180189399 A1 US 20180189399A1 US 201615394586 A US201615394586 A US 201615394586A US 2018189399 A1 US2018189399 A1 US 2018189399A1
- Authority
- US
- United States
- Prior art keywords
- microblog
- residual
- count
- time series
- query
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G06F17/30867—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2458—Special types of queries, e.g. statistical queries, fuzzy queries or distributed queries
- G06F16/2477—Temporal data queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/26—Visual data mining; Browsing structured data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
- G06F17/10—Complex mathematical operations
- G06F17/18—Complex mathematical operations for evaluating statistical data, e.g. average values, frequency distributions, probability functions, regression analysis
-
- G06F17/30554—
-
- G06N99/005—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q50/00—Systems or methods specially adapted for specific business sectors, e.g. utilities or tourism
- G06Q50/01—Social networking
Definitions
- This specification relates to systems and methods for identifying and characterizing signals contained in a data stream, such as a signal contained in a time series of a data stream over a relevant time period where the data stream is associated with a topic.
- This specification describes technologies for identifying and characterizing signals contained in a data stream, such as a signal contained in a time series of a microblog count for microblogs associated with a query over a relevant time period.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of: obtaining an historical time distribution of event counts associated with a topic for a relevant time period; extracting a predictable portion of the historical time distribution of event counts to produce a residual event count time distribution including residual event counts at successive times; determining a residual triggering threshold based on the residual event count time distribution; and taking an action when a residual event count exceeds the residual triggering threshold.
- the action can include providing a notification to a user of a spike in event counts associated with the topic.
- the event can be a microblog and the action can be forwarding data to display microblog data as part of search results.
- Another innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of: receiving a query; obtaining a microblog count time series for microblogs associated with the query for a relevant time period; extracting a predictable portion of the microblog count time series to produce a residual microblog count time series for the relevant time period, the residual microblog count time series including residual microblog counts at successive times; determining a residual triggering threshold based on the residual microblog count time series; and forwarding data to display microblog content as part of search results for a given query when a residual microblog count exceeds the residual triggering threshold.
- the foregoing and other embodiments can each optionally include one or more of the following features, alone or in combination.
- one embodiment includes all the following features in combination.
- the method can include using a machine learning model to predict the predictable portion of the microblog count time series.
- the microblog count can be a count of tweets provided on the Twitter platform.
- the method can stop inserting microblog content as part of search results for the query, as a result of a method described in this specification, a specified time after the excess microblog count falls below the threshold.
- the method can further include communicating to a user a confidence metric that the residual microblog count reflects an event for which a user should be notified, the confidence metric based at least in part on the degree to which the residual microblog count exceeds the triggering threshold.
- the method can further include incorporating user interaction with provided microblog content in determining whether to provide additional microblog content as part of search results for a query.
- the method can further include restricting the microblog count time series to microblogs from a particular location.
- inventions of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods.
- a system of one or more computers to be configured to perform particular operations or actions means that the system has installed on it software, firmware, hardware, or a combination of them that in operation cause the system to perform the operations or actions.
- one or more computer programs to be configured to perform particular operations or actions means that the one or more programs include instructions that, when executed by data processing apparatus, cause the apparatus to perform the operations or actions.
- FIG. 1 is a schematic of a system for identifying and characterizing signals contained in a data stream.
- FIG. 2 is a flowchart of a method for identifying and characterizing signals contained in a data stream.
- FIG. 3 is a flowchart of an alternative method for identifying and characterizing signals contained in a data stream.
- FIG. 4 shows two graphs of event count times series data for events that match a query.
- FIG. 5 shows two graphs of event count times series data for events that match another query and where the graphs reveal the avoidance of triggering for slower increases when using the method of FIG. 2 .
- FIG. 6 is an example of an event carousel embedded in a search results page provided in response to a query.
- Such a platform should notify a user as early as possible while being accurate, providing the user with context and not providing false notifications.
- Embodiments described in this specification provide a machine learning approach that models a history of near real-time event counts, e.g., tweet counts, matching a given query to decide when a spike occurs.
- An advantage of this approach is earlier, and more accurate detection of breaking news.
- triggering a notification of a spike in near real-time event counts can be improved when a model of such time series is available.
- trending activity that should trigger an action is hard to predict.
- Embodiments described in this specification solve this problem by first predicting what a data count, e.g., a microblog count, would have been under “regular” circumstances, i.e. embodiments extract the predictable part of a microblog count time series, and then apply triggering logic based on how the actual counts differ from their predicted counts.
- This approach adjusts for predictable time series fluctuations, such as time of the day. For example, this approach excludes time of day variations from contributing to triggering decisions so that an expected increase in activity, e.g., in the mornings, would not be mistaken for a spike.
- embodiments described in this specification collect training data and use a regularized regression model to produce an interpretable predictive model.
- Such a predictive model gives an improved spike detection mechanism.
- FIG. 1 shows an example system 100 for detecting and characterizing signals in a data stream.
- the system receives, from a data source such as a microblog source, data such as microblog content, e.g., tweets and retweets, 102 which is fed into 3 different parts of the system: a data analysis engine 104 , user quality database 106 and a search index 108 .
- the data analysis engine 104 generates a time series for data, e.g., for microblogs, associated with a topic or query.
- the user quality 106 database determines a user quality score and a user location for users that author the microblogs.
- the search index 108 indexes the microblog content.
- the system further includes a relevancy analysis engine 110 .
- a user enters a query into a search engine using a computing device 112 .
- the query is received by the relevancy analysis engine 110 (in some cases via a search engine front end).
- the relevancy analysis engine 110 forwards the query to the data analysis engine 104 .
- the data analysis engine 104 returns to the relevancy analysis engine 110 a historical distribution of microblog counts, e.g., a time series of microblog counts for the query over a relevant time period such as the past several days,
- the data analysis engine 104 can also return to the relevancy analysis engine 110 data about the location of the relevant microblogs and associated hashtag data.
- a microblog e.g., a tweet
- a microblog is associated with a query when the microblog contains a substantive query word or a synonym of a substantive query word.
- the query includes more than one substantive word and a microblog only has one of the substantive words it would not be counted as associated with the query. For example, a microblog that only mentions Obama would not count for the query [Obama Trump].
- Certain embodiments also eliminate non-substantive words. Substantive words can vary by context. For example, the query “the who”, in which the word “the” is unusually substantive.
- the query from the relevancy analysis engine 110 to the data analysis engine 104 only considers the text of the query and text of the microblog.
- the response from the data analysis engine 104 informs the relevancy analysis engine 110 about many-dimensional patterns in the relevant microblogs. Knowing these patterns, the relevancy engine 110 issues a query to the search index 108 that could associate a microblog, e.g., a tweet, with the query because of a combination any of the following: timestamp of microblog, country from which the microblog was issued, hashtags in the microblog, entities (e.g. Joe Celebrity or the Olympics) mentioned in the microblog, sub-country location from which the microblog was issued, microblog usernames mentioned in the microblog, and words (unigrams) or phrases in the microblog.
- a microblog e.g., a tweet
- the relevancy analysis engine 110 determines whether to take an action, e.g., notify a user, or include microblog content into search results provided by an associated search engine in response to a query. If the relevancy analysis engine 110 determines that microblog content should be included in search results in response to a user submitted query, the relevancy analysis engine 110 sends a query to the search index 108 and receives relevant microblog content in return.
- an action e.g., notify a user
- microblog content into search results provided by an associated search engine in response to a query. If the relevancy analysis engine 110 determines that microblog content should be included in search results in response to a user submitted query, the relevancy analysis engine 110 sends a query to the search index 108 and receives relevant microblog content in return.
- FIG. 2 is a flowchart of an example process 200 for detecting and characterizing signals in a data stream, e.g., a signal in a microblog count time series.
- the process 200 will be described as being performed by a system of one or more computers, located in one or more locations, and programmed appropriately in accordance with this specification.
- a system for detecting and characterizing signals in a data stream e.g., the system 100 of FIG. 1 , appropriately programmed, can perform the method 200 .
- One embodiment of the method includes receiving 202 a query, e.g., a query entered into a search engine by a user; obtaining 204 (e.g., from a data analysis engine) a microblog count time series for microblogs associated with the query for a relevant time period; extracting 206 (e.g., at a relevancy analysis engine) a predictable portion of the microblog count time series to produce a residual time series, the residual time series including residual microblog counts at successive times; determining 208 (e.g., at the relevancy analysis engine) a residual triggering threshold based on the residual time series; and forwarding for display 210 (e.g., by the relevancy analysis engine) data representing a microblog content as part of search results for the query when a residual microblog count exceeds the residual triggering threshold.
- the microblog content is provided in a microblog carousel as part of the search results.
- the microblog content is simply included in the search results.
- certain embodiments described in this specification are related to the delay between something happening in the real word, e.g. a news event, and the time at which the relevancy analysis engine 110 determines that the system should take action such as provide a user with a notification.
- a timeline could progress as follows: a news event occurs; 5 minutes pass and a microblog count, e.g., a tweet count, associated with a query for the news event starts to rise; 10 minutes pass and a relevancy analysis engine 110 determines the system should take action (i.e., the relevancy analysis engine determines there is a “spike” in the microblog count for the relevant query relative to the count that is predicted); an associated search engine starts to show microblogs in search results responsive to the relevant query.
- Embodiments described in this specification shorten the time it takes the relevancy analysis engine to determine that the system should take action.
- FIG. 3 is a flowchart of an alternative method for identifying and characterizing signals contained in an event data stream.
- the illustrated method 300 includes: obtaining 302 an historical time distribution of event counts associated with a topic for a relevant time period; extracting 304 (e.g., at a relevancy analysis engine) a predictable portion of the historical time distribution of event counts to produce a residual event count time distribution including residual event counts at successive times; determining 306 (e.g., at a relevancy analysis engine) a residual triggering threshold based on the residual event count time distribution; and taking 308 an action (e.g., at a relevancy analysis engine) when a residual event count exceeds the residual triggering threshold.
- extracting 304 e.g., at a relevancy analysis engine
- a predictable portion of the historical time distribution of event counts to produce a residual event count time distribution including residual event counts at successive times
- determining 306 e.g., at a relevancy analysis engine
- a residual triggering threshold based on the residual
- event count is the number of microblogs, e.g., tweets, created in a certain time interval (bucket) which match a query.
- Event in this example is creation of a relevant microblog.
- an event could also be the creation of other forms of social media, a scholarly article or other content reflecting a developing event.
- LASSO least absolute shrinkage and selection operator
- LASSO is a regression analysis method that performs both variable selection and regularization in order to enhance the prediction accuracy and interpretability of the statistical model it produces.
- To derive the prediction model one can collect a large number of different queries' time series over a period of time.
- Such historic datasets (which include attributes such as time series timestamps or global (query independent) time series of tweet counts) are the training set used to build machine learned models predicting next bucket microblog count for a given query.
- embodiments described in this specification use a predictive model to anticipate the predictable portion of the near real-time event counts, e.g., to anticipate the predictable portion of a microblog count time series associated with a given query or topic.
- interpretability is desirable but not required. Models that are harder to interpret than LASSO can also be used in this context. Such less interpretable models can often give more accurate predictions, but can be harder to debug. For example, it is possible that a neural network can be used instead.
- a time series is a series of values of a quantity obtained at successive times, often with equal intervals between them.
- microblog counts are collected in equal time intervals that can be referred to as buckets.
- the size of the bucket is a trade-off between precision and recall. The bigger the bucket the more confident an embodiment of a system is about the signal but the later an embodiment of a system will determine a spike in counts.
- Embodiments of the system obtain, from the data analysis engine 104 of FIG. 1 , a microblog count time series data such as a multi-day history of overlapping 60 minute buckets to produce 30 minute buckets where each 30-minute bucket includes a count of microblogs, e.g., tweets®, over a 30 minute period.
- a microblog count time series data such as a multi-day history of overlapping 60 minute buckets to produce 30 minute buckets where each 30-minute bucket includes a count of microblogs, e.g., tweets®, over a 30 minute period.
- the recorded counts are 60 minute counts, but written at 30 min intervals to develop a microblog count time series with 30 minute intervals.
- An embodiment of the system then extracts the predictable portion of the time series (as provided by the predictive model described above) from the microblog count time series to produce a residual time series.
- the residual time series thus includes residual microblog counts at successive time intervals, e.g., in 30 minute buckets.
- This embodiment of the system determines a triggering threshold based on the residual time series.
- the number of buckets can be range, e.g., from 12 to 192 half hour buckets. In other embodiments, the size of the bucket can be varied, for example, from 1 minute to 2 hours. In further embodiments the interquartile range can be replaced with a different measurement of the variability of the microblog counts.
- the tuning parameter x' is a constant.
- the tuning parameter is set so that the system triggers regularly for real events (but rarely if ever on spam such as ads for cheap hotels) and so that the system triggers close to the actual time of the event.
- a trigger can be a variety of actions such as a notification of a user or inclusion of relevant microblog content in search results in response to a query.
- the system balances false positives (indicating that an event is spiking on a microblog when such an event is not actually spiking) and false negatives (not indicating an event related spike is happening on a microblog when that event is actually spiking).
- the system will trigger (e.g., notifications or inclusion of microblog content in search results) more aggressively.
- One can use one tuning parameter on several hundred or several thousand queries and send all the resulting triggers to human raters.
- the human raters can point out triggers that are not accurate and how the triggers should be adjusted.
- the constant is set lower for sports queries and higher for other queries.
- One embodiment of the system includes microblogs in search results for as long as the model tells it that the microblog count is spiking, and for an additional number of hours, e.g., for 2 hours, after the last time at which the microblog count was spiking.
- FIG. 4 shows two graphs of event count times series data for events, e.g., social media data such as tweets, that match a query, e.g., a query for “NYC train outage.”
- the top graph shows an approach that uses a trigger threshold equal to (median+iqr multiplier*iqr), where the median is a median of a microblog counts for microblogs matching the specified query for a specified recent period (e.g., the past several days), iqr—its interquartile range, and iqr multiplier is a constant.
- the bottom graph uses the residual method shown in FIG. 2 .
- the method of FIG. 2 provides earlier detection and more detection of spikes in microblog counts associated with the query “NYC train outage.”
- FIG. 5 shows two graphs of event count times series data for events, e.g., social media data such as tweets, that match a query where the graphs reveal the avoidance of triggering for slower increases when using the method of FIG. 2 .
- the top graph shows an approach that uses a trigger threshold equal to (median+iqr multiplier*iqr).
- the method of FIG. 2 may not trigger, e.g., notification of a user or inclusion of microblog content in search results, if the increase in counts is predictable whereas the method used for the top graph will trigger under certain circumstances even if the increase in microblog counts is predictable.
- FIG. 6 is an example of a social media carousel shown embedded in a search results page that is a result of the operation of certain embodiments.
- a query is not required by certain embodiments of the invention to initiate the process of detecting a spike in near real-time content associated with a topic.
- embodiments of the systems and methods described in this specification can be used to accurately notify a user of an event when content about the event is spiking. Such accurate notification can be reflected in application metrics, e.g., user engagement metrics.
- Embodiments can also restrict the microblog count time series to a specific location.
- Microbloggers often maintain public profiles that include a location of the microblogger.
- embodiments can use the microblogger's location and the query to identify hashtags that are relevant, e.g., if there is an earthquake in San Francisco and the user searches for San Francisco, the system can expand retrieval of microblog content to include content associated with related hashtags such as #sfearthquake.
- near real-time event counts can include a variety of types of data in addition to microblog counts including social media counts and other publications, e.g., scholarly publications or news publications. These other types of near real-time data can be used in addition to or instead of the microblog data.
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible non-transitory storage medium for execution by, or to control the operation of, data processing apparatus.
- the computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- an artificially-generated propagated signal e.g., a machine-generated electrical, optical, or electromagnetic signal
- data processing apparatus refers to data processing hardware and encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can also be, or further include, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can optionally include, in addition to hardware, code that creates an execution environment for computer programs, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program which may also be referred to or described as a program, software, a software application, an app, a module, a software module, a script, or code, can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages; and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub-programs, or portions of code.
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a data communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by special purpose logic circuitry, e.g., an FPGA or an ASIC, or by a combination of special purpose logic circuitry and one or more programmed computers.
- Computers suitable for the execution of a computer program can be based on general or special purpose microprocessors or both, or any other kind of central processing unit.
- a central processing unit will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data.
- the central processing unit and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's device in response to requests received from the web browser.
- a computer can interact with a user by sending text messages or other forms of message to a personal device, e.g., a smartphone, running a messaging application, and receiving responsive messages from the user in return.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface, a web browser, or an app through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (LAN) and a wide area network (WAN), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data, e.g., an HTML page, to a user device, e.g., for purposes of displaying data to and receiving user input from a user interacting with the device, which acts as a client.
- Data generated at the user device e.g., a result of the user interaction, can be received at the server from the device.
- the term “database” will be used broadly to refer to any collection of data: the data does not need to be structured in any particular way, or structured at all, and it can be stored on storage devices in one or more locations.
- the index database can include multiple collections of data, each of which may be organized and accessed differently.
- engine will be used broadly to refer to a software based system or subsystem that can perform one or more specific functions.
- an engine will be implemented as one or more software modules or components, installed on one or more computers in one or more locations.
- one or more computers will be dedicated to a particular engine; in other cases, multiple engines can be installed and running on the same computer or computers.
Abstract
Description
- This specification relates to systems and methods for identifying and characterizing signals contained in a data stream, such as a signal contained in a time series of a data stream over a relevant time period where the data stream is associated with a topic.
- Individuals use devices to make digital recordings of many aspects of their lives and of more and more events and topics. Such individuals make digital recordings using a variety of devices such as mobile phones, tablets, laptops or desktops, via the internet of things, and using cameras or other sensors such as wearable sensors. Thus, one can learn about developing events or views as they are reflected in digital media. Indeed, there is a need, and an opportunity, to detect developing events, such as developing news, accurately and early via digital media and to be able to provide such information to users.
- This specification describes technologies for identifying and characterizing signals contained in a data stream, such as a signal contained in a time series of a microblog count for microblogs associated with a query over a relevant time period.
- In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of: obtaining an historical time distribution of event counts associated with a topic for a relevant time period; extracting a predictable portion of the historical time distribution of event counts to produce a residual event count time distribution including residual event counts at successive times; determining a residual triggering threshold based on the residual event count time distribution; and taking an action when a residual event count exceeds the residual triggering threshold. The action can include providing a notification to a user of a spike in event counts associated with the topic. In one embodiment, the event can be a microblog and the action can be forwarding data to display microblog data as part of search results.
- Another innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of: receiving a query; obtaining a microblog count time series for microblogs associated with the query for a relevant time period; extracting a predictable portion of the microblog count time series to produce a residual microblog count time series for the relevant time period, the residual microblog count time series including residual microblog counts at successive times; determining a residual triggering threshold based on the residual microblog count time series; and forwarding data to display microblog content as part of search results for a given query when a residual microblog count exceeds the residual triggering threshold.
- The foregoing and other embodiments can each optionally include one or more of the following features, alone or in combination. In particular, one embodiment includes all the following features in combination. The method can include using a machine learning model to predict the predictable portion of the microblog count time series. The microblog count can be a count of tweets provided on the Twitter platform. The method can stop inserting microblog content as part of search results for the query, as a result of a method described in this specification, a specified time after the excess microblog count falls below the threshold. The relevant time period for the microblog count time series can be between 1 and 7 days. Determining a residual triggering threshold can be based at least in part on a median of the residual time series and a measure of the variance of the residual time series. The method can further include communicating to a user a confidence metric that the residual microblog count reflects an event for which a user should be notified, the confidence metric based at least in part on the degree to which the residual microblog count exceeds the triggering threshold. The method can further include incorporating user interaction with provided microblog content in determining whether to provide additional microblog content as part of search results for a query. The method can further include restricting the microblog count time series to microblogs from a particular location.
- Other embodiments of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods. For a system of one or more computers to be configured to perform particular operations or actions means that the system has installed on it software, firmware, hardware, or a combination of them that in operation cause the system to perform the operations or actions. For one or more computer programs to be configured to perform particular operations or actions means that the one or more programs include instructions that, when executed by data processing apparatus, cause the apparatus to perform the operations or actions.
- The subject matter described in this specification can be implemented in particular embodiments so as to realize one or more of the following advantages. By receiving news of a developing event earlier and more accurately, users get their information more efficiently and in a more timely manner. Depending on the context, timely receipt of developing news and the wisdom of the crowd can be highly advantageous. In addition, delivering timely and accurate notification of developing events can reduce the number of searches conducted looking for information about the developing events saving compute resources and freeing up network bandwidth for more productive purposes. Furthermore, microbloggers and other publishers reap rewards because their content can immediately reach a wide, engaged, and appropriate audience. This encourages more people and organizations to microblog, and to do so more quickly and accurately, which is advantageous for information and communication generally.
- The details of one or more embodiments of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
FIG. 1 is a schematic of a system for identifying and characterizing signals contained in a data stream. -
FIG. 2 is a flowchart of a method for identifying and characterizing signals contained in a data stream. -
FIG. 3 is a flowchart of an alternative method for identifying and characterizing signals contained in a data stream. -
FIG. 4 shows two graphs of event count times series data for events that match a query. -
FIG. 5 shows two graphs of event count times series data for events that match another query and where the graphs reveal the avoidance of triggering for slower increases when using the method ofFIG. 2 . -
FIG. 6 is an example of an event carousel embedded in a search results page provided in response to a query. - Like reference numbers and designations in the various drawings indicate like elements.
- It is challenging to determine when to notify a user of a search engine platform or other online platform of a developing event. Such a platform should notify a user as early as possible while being accurate, providing the user with context and not providing false notifications.
- Embodiments described in this specification provide a machine learning approach that models a history of near real-time event counts, e.g., tweet counts, matching a given query to decide when a spike occurs. An advantage of this approach is earlier, and more accurate detection of breaking news.
- More specifically, triggering a notification of a spike in near real-time event counts (e.g., tweet counts) based on a raw time series can be improved when a model of such time series is available. As noted, trending activity that should trigger an action, such as a notification to a user, is hard to predict. Embodiments described in this specification solve this problem by first predicting what a data count, e.g., a microblog count, would have been under “regular” circumstances, i.e. embodiments extract the predictable part of a microblog count time series, and then apply triggering logic based on how the actual counts differ from their predicted counts. This approach adjusts for predictable time series fluctuations, such as time of the day. For example, this approach excludes time of day variations from contributing to triggering decisions so that an expected increase in activity, e.g., in the mornings, would not be mistaken for a spike.
- To build such a model, embodiments described in this specification collect training data and use a regularized regression model to produce an interpretable predictive model. Such a predictive model gives an improved spike detection mechanism.
-
FIG. 1 shows anexample system 100 for detecting and characterizing signals in a data stream. The system receives, from a data source such as a microblog source, data such as microblog content, e.g., tweets and retweets, 102 which is fed into 3 different parts of the system: adata analysis engine 104, user quality database 106 and asearch index 108. Thedata analysis engine 104 generates a time series for data, e.g., for microblogs, associated with a topic or query. The user quality 106 database determines a user quality score and a user location for users that author the microblogs. Thesearch index 108 indexes the microblog content. The system further includes arelevancy analysis engine 110. - In operation, a user enters a query into a search engine using a computing device 112. The query is received by the relevancy analysis engine 110 (in some cases via a search engine front end). At step A, the
relevancy analysis engine 110 forwards the query to thedata analysis engine 104. At step B, thedata analysis engine 104 returns to the relevancy analysis engine 110 a historical distribution of microblog counts, e.g., a time series of microblog counts for the query over a relevant time period such as the past several days, Thedata analysis engine 104 can also return to therelevancy analysis engine 110 data about the location of the relevant microblogs and associated hashtag data. - In certain embodiments described in this specification, a microblog, e.g., a tweet, is associated with a query when the microblog contains a substantive query word or a synonym of a substantive query word. However, in one embodiment, if the query includes more than one substantive word and a microblog only has one of the substantive words it would not be counted as associated with the query. For example, a microblog that only mentions Obama would not count for the query [Obama Trump]. Certain embodiments also eliminate non-substantive words. Substantive words can vary by context. For example, the query “the who”, in which the word “the” is unusually substantive.
- In certain embodiments, the query from the
relevancy analysis engine 110 to thedata analysis engine 104 only considers the text of the query and text of the microblog. The response from thedata analysis engine 104 informs therelevancy analysis engine 110 about many-dimensional patterns in the relevant microblogs. Knowing these patterns, therelevancy engine 110 issues a query to thesearch index 108 that could associate a microblog, e.g., a tweet, with the query because of a combination any of the following: timestamp of microblog, country from which the microblog was issued, hashtags in the microblog, entities (e.g. Joe Celebrity or the Olympics) mentioned in the microblog, sub-country location from which the microblog was issued, microblog usernames mentioned in the microblog, and words (unigrams) or phrases in the microblog. - Based on the distribution data received from the
data analysis engine 104, therelevancy analysis engine 110 determines whether to take an action, e.g., notify a user, or include microblog content into search results provided by an associated search engine in response to a query. If therelevancy analysis engine 110 determines that microblog content should be included in search results in response to a user submitted query, therelevancy analysis engine 110 sends a query to thesearch index 108 and receives relevant microblog content in return. -
FIG. 2 is a flowchart of anexample process 200 for detecting and characterizing signals in a data stream, e.g., a signal in a microblog count time series. For convenience, theprocess 200 will be described as being performed by a system of one or more computers, located in one or more locations, and programmed appropriately in accordance with this specification. For example, a system for detecting and characterizing signals in a data stream, e.g., thesystem 100 ofFIG. 1 , appropriately programmed, can perform themethod 200. - One embodiment of the method includes receiving 202 a query, e.g., a query entered into a search engine by a user; obtaining 204 (e.g., from a data analysis engine) a microblog count time series for microblogs associated with the query for a relevant time period; extracting 206 (e.g., at a relevancy analysis engine) a predictable portion of the microblog count time series to produce a residual time series, the residual time series including residual microblog counts at successive times; determining 208 (e.g., at the relevancy analysis engine) a residual triggering threshold based on the residual time series; and forwarding for display 210 (e.g., by the relevancy analysis engine) data representing a microblog content as part of search results for the query when a residual microblog count exceeds the residual triggering threshold. In one embodiment, the microblog content is provided in a microblog carousel as part of the search results. In another embodiment, the microblog content is simply included in the search results.
- Thus, certain embodiments described in this specification are related to the delay between something happening in the real word, e.g. a news event, and the time at which the
relevancy analysis engine 110 determines that the system should take action such as provide a user with a notification. A timeline could progress as follows: a news event occurs; 5 minutes pass and a microblog count, e.g., a tweet count, associated with a query for the news event starts to rise; 10 minutes pass and arelevancy analysis engine 110 determines the system should take action (i.e., the relevancy analysis engine determines there is a “spike” in the microblog count for the relevant query relative to the count that is predicted); an associated search engine starts to show microblogs in search results responsive to the relevant query. Embodiments described in this specification shorten the time it takes the relevancy analysis engine to determine that the system should take action. -
FIG. 3 is a flowchart of an alternative method for identifying and characterizing signals contained in an event data stream. The illustratedmethod 300 includes: obtaining 302 an historical time distribution of event counts associated with a topic for a relevant time period; extracting 304 (e.g., at a relevancy analysis engine) a predictable portion of the historical time distribution of event counts to produce a residual event count time distribution including residual event counts at successive times; determining 306 (e.g., at a relevancy analysis engine) a residual triggering threshold based on the residual event count time distribution; and taking 308 an action (e.g., at a relevancy analysis engine) when a residual event count exceeds the residual triggering threshold. In one embodiment, event count is the number of microblogs, e.g., tweets, created in a certain time interval (bucket) which match a query. “Event” in this example is creation of a relevant microblog. However, an event could also be the creation of other forms of social media, a scholarly article or other content reflecting a developing event. - As noted above, embodiments described in this specification collect training data and use a regularized regression model to produce an interpretable predictive model. One can use least absolute shrinkage and selection operator (LASSO) regression in deriving the prediction model. In statistics and machine learning, LASSO is a regression analysis method that performs both variable selection and regularization in order to enhance the prediction accuracy and interpretability of the statistical model it produces. To derive the prediction model one can collect a large number of different queries' time series over a period of time. Such historic datasets (which include attributes such as time series timestamps or global (query independent) time series of tweet counts) are the training set used to build machine learned models predicting next bucket microblog count for a given query.
- Thus, embodiments described in this specification use a predictive model to anticipate the predictable portion of the near real-time event counts, e.g., to anticipate the predictable portion of a microblog count time series associated with a given query or topic.
- In general, interpretability is desirable but not required. Models that are harder to interpret than LASSO can also be used in this context. Such less interpretable models can often give more accurate predictions, but can be harder to debug. For example, it is possible that a neural network can be used instead.
- A time series is a series of values of a quantity obtained at successive times, often with equal intervals between them. In certain embodiments, microblog counts are collected in equal time intervals that can be referred to as buckets. The size of the bucket is a trade-off between precision and recall. The bigger the bucket the more confident an embodiment of a system is about the signal but the later an embodiment of a system will determine a spike in counts.
- Embodiments of the system obtain, from the
data analysis engine 104 ofFIG. 1 , a microblog count time series data such as a multi-day history of overlapping 60 minute buckets to produce 30 minute buckets where each 30-minute bucket includes a count of microblogs, e.g., tweets®, over a 30 minute period. In other words, the recorded counts are 60 minute counts, but written at 30 min intervals to develop a microblog count time series with 30 minute intervals. - An embodiment of the system then extracts the predictable portion of the time series (as provided by the predictive model described above) from the microblog count time series to produce a residual time series. The residual time series thus includes residual microblog counts at successive time intervals, e.g., in 30 minute buckets. This embodiment of the system then determines a triggering threshold based on the residual time series.
- In one embodiment, the triggering threshold equals median'+x'*IQR', where median'=median(residuals), IQR'=the Interquartile Range(residuals), x' is a tuning parameter, residuals=[residual(−1), residual(−2), . . . , residual(−K)], residual(−i)=numerator(−i)−predicted_numerator(−i), i is in [1, . . . , K]; num buckets ago: i=1 is the most recent bucket, i=2 is the second most recent bucket. The number of buckets can be range, e.g., from 12 to 192 half hour buckets. In other embodiments, the size of the bucket can be varied, for example, from 1 minute to 2 hours. In further embodiments the interquartile range can be replaced with a different measurement of the variability of the microblog counts.
- In certain embodiments, the tuning parameter x' is a constant. The tuning parameter is set so that the system triggers regularly for real events (but rarely if ever on spam such as ads for cheap hotels) and so that the system triggers close to the actual time of the event. Again, a trigger can be a variety of actions such as a notification of a user or inclusion of relevant microblog content in search results in response to a query. In one embodiment, the system balances false positives (indicating that an event is spiking on a microblog when such an event is not actually spiking) and false negatives (not indicating an event related spike is happening on a microblog when that event is actually spiking). If the system lowers the constant and thus the threshold, the system will trigger (e.g., notifications or inclusion of microblog content in search results) more aggressively. One can use human raters and historical data to set the tuning parameter. Using a repository of historical data, one can “replay time” with a given tuning parameter to see when the system would trigger, e.g., a notification, on a given query. Then, one can consider whether that tuning parameter is causing the system to trigger too early or too late based on knowledge of the actual timing and context of the event in question. One can use one tuning parameter on several hundred or several thousand queries and send all the resulting triggers to human raters. The human raters can point out triggers that are not accurate and how the triggers should be adjusted. In certain embodiments, the constant is set lower for sports queries and higher for other queries.
- One embodiment of the system includes microblogs in search results for as long as the model tells it that the microblog count is spiking, and for an additional number of hours, e.g., for 2 hours, after the last time at which the microblog count was spiking.
-
FIG. 4 shows two graphs of event count times series data for events, e.g., social media data such as tweets, that match a query, e.g., a query for “NYC train outage.” The top graph shows an approach that uses a trigger threshold equal to (median+iqr multiplier*iqr), where the median is a median of a microblog counts for microblogs matching the specified query for a specified recent period (e.g., the past several days), iqr—its interquartile range, and iqr multiplier is a constant. The bottom graph uses the residual method shown inFIG. 2 . As can be seen inFIG. 4 , the method ofFIG. 2 provides earlier detection and more detection of spikes in microblog counts associated with the query “NYC train outage.” -
FIG. 5 shows two graphs of event count times series data for events, e.g., social media data such as tweets, that match a query where the graphs reveal the avoidance of triggering for slower increases when using the method ofFIG. 2 . Again the top graph shows an approach that uses a trigger threshold equal to (median+iqr multiplier*iqr). As can be seen in the bottom graph ofFIG. 5 , the method ofFIG. 2 may not trigger, e.g., notification of a user or inclusion of microblog content in search results, if the increase in counts is predictable whereas the method used for the top graph will trigger under certain circumstances even if the increase in microblog counts is predictable. - Once a triggering (e.g., inclusion of microblog content in search results) occurs, one embodiment of the
relevancy analysis engine 110 ofFIG. 1 forwards, to a search engine front end which in turn forwards to a user device, for display data representing microblog content as part of search results for the query.FIG. 6 is an example of a social media carousel shown embedded in a search results page that is a result of the operation of certain embodiments. - A query is not required by certain embodiments of the invention to initiate the process of detecting a spike in near real-time content associated with a topic. As long as a topic of interest is obtained in some way, embodiments of the systems and methods described in this specification can be used to accurately notify a user of an event when content about the event is spiking. Such accurate notification can be reflected in application metrics, e.g., user engagement metrics.
- Embodiments can also restrict the microblog count time series to a specific location. Microbloggers often maintain public profiles that include a location of the microblogger. Furthermore, embodiments can use the microblogger's location and the query to identify hashtags that are relevant, e.g., if there is an earthquake in San Francisco and the user searches for San Francisco, the system can expand retrieval of microblog content to include content associated with related hashtags such as #sfearthquake.
- Also near real-time event counts can include a variety of types of data in addition to microblog counts including social media counts and other publications, e.g., scholarly publications or news publications. These other types of near real-time data can be used in addition to or instead of the microblog data.
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible non-transitory storage medium for execution by, or to control the operation of, data processing apparatus. The computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them. Alternatively, or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- The term “data processing apparatus” refers to data processing hardware and encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can also be, or further include, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can optionally include, in addition to hardware, code that creates an execution environment for computer programs, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- A computer program, which may also be referred to or described as a program, software, a software application, an app, a module, a software module, a script, or code, can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages; and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub-programs, or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a data communication network. The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by special purpose logic circuitry, e.g., an FPGA or an ASIC, or by a combination of special purpose logic circuitry and one or more programmed computers. Computers suitable for the execution of a computer program can be based on general or special purpose microprocessors or both, or any other kind of central processing unit. Generally, a central processing unit will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data. The central processing unit and the memory can be supplemented by, or incorporated in, special purpose logic circuitry. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few. Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's device in response to requests received from the web browser. Also, a computer can interact with a user by sending text messages or other forms of message to a personal device, e.g., a smartphone, running a messaging application, and receiving responsive messages from the user in return.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface, a web browser, or an app through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (LAN) and a wide area network (WAN), e.g., the Internet.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server transmits data, e.g., an HTML page, to a user device, e.g., for purposes of displaying data to and receiving user input from a user interacting with the device, which acts as a client. Data generated at the user device, e.g., a result of the user interaction, can be received at the server from the device.
- In this specification, the term “database” will be used broadly to refer to any collection of data: the data does not need to be structured in any particular way, or structured at all, and it can be stored on storage devices in one or more locations. Thus, for example, the index database can include multiple collections of data, each of which may be organized and accessed differently.
- Similarly, in this specification the term “engine” will be used broadly to refer to a software based system or subsystem that can perform one or more specific functions. Generally, an engine will be implemented as one or more software modules or components, installed on one or more computers in one or more locations. In some cases, one or more computers will be dedicated to a particular engine; in other cases, multiple engines can be installed and running on the same computer or computers.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or on the scope of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially be claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination. Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system modules and components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous.
Claims (20)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/394,586 US20180189399A1 (en) | 2016-12-29 | 2016-12-29 | Systems and methods for identifying and characterizing signals contained in a data stream |
PCT/US2017/058844 WO2018125373A1 (en) | 2016-12-29 | 2017-10-27 | Systems and methods for identifying and characterizing signals contained in a data stream |
EP17889191.7A EP3563252A4 (en) | 2016-12-29 | 2017-10-27 | Systems and methods for identifying and characterizing signals contained in a data stream |
CN201780080757.8A CN110121729A (en) | 2016-12-29 | 2017-10-27 | For identification with the system and method for the signal for including in characterize data stream |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/394,586 US20180189399A1 (en) | 2016-12-29 | 2016-12-29 | Systems and methods for identifying and characterizing signals contained in a data stream |
Publications (1)
Publication Number | Publication Date |
---|---|
US20180189399A1 true US20180189399A1 (en) | 2018-07-05 |
Family
ID=62709147
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/394,586 Pending US20180189399A1 (en) | 2016-12-29 | 2016-12-29 | Systems and methods for identifying and characterizing signals contained in a data stream |
Country Status (4)
Country | Link |
---|---|
US (1) | US20180189399A1 (en) |
EP (1) | EP3563252A4 (en) |
CN (1) | CN110121729A (en) |
WO (1) | WO2018125373A1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2020263226A1 (en) * | 2019-06-25 | 2020-12-30 | Google Llc | Using live data streams and/or search queries to determine information about developing events |
CN113094241A (en) * | 2021-05-07 | 2021-07-09 | 北京京东振世信息技术有限公司 | Method, device and equipment for determining accuracy of real-time program and storage medium |
US20210279609A1 (en) * | 2020-03-03 | 2021-09-09 | Fujifilm Business Innovation Corp. | Failure prediction apparatus and learning device |
US11256992B2 (en) | 2019-06-25 | 2022-02-22 | Google Llc | Developing event-specific provisional knowledge graphs |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN111209531B (en) * | 2018-11-21 | 2023-08-08 | 百度在线网络技术（北京）有限公司 | Correlation degree processing method, device and storage medium |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090319518A1 (en) * | 2007-01-10 | 2009-12-24 | Nick Koudas | Method and system for information discovery and text analysis |
US8682720B1 (en) * | 2010-12-30 | 2014-03-25 | Google Inc. | Selection and display of online advertisements |
US20140149128A1 (en) * | 2012-11-29 | 2014-05-29 | Verizon Patent And Licensing Inc. | Healthcare fraud detection with machine learning |
US20150019513A1 (en) * | 2013-07-11 | 2015-01-15 | Tata Consultancy Services Limited | Time-series analysis based on world event derived from unstructured content |
US20150040047A1 (en) * | 2013-07-31 | 2015-02-05 | Adobe Systems Incorporated | Interactive visualization of trending data |
US20160112394A1 (en) * | 2014-10-20 | 2016-04-21 | Yp Llc | Systems and methods for implementing a personalized provider recommendation engine |
Family Cites Families (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8638363B2 (en) * | 2009-02-18 | 2014-01-28 | Google Inc. | Automatically capturing information, such as capturing information using a document-aware device |
US8838564B2 (en) * | 2011-05-19 | 2014-09-16 | Yahoo! Inc. | Method to increase content relevance using insights obtained from user activity updates |
JP2013033375A (en) * | 2011-08-02 | 2013-02-14 | Sony Corp | Information processing apparatus, information processing method, and program |
CN103176983B (en) * | 2011-12-20 | 2016-04-27 | 中国科学院计算机网络信息中心 | A kind of event method for early warning based on internet information |
GB201211853D0 (en) * | 2012-07-04 | 2012-08-15 | Qatar Foundation | A system and method for event or entity analysis and exploration in microblogs |
US20140081973A1 (en) * | 2012-09-14 | 2014-03-20 | Google Inc. | Spike classification |
WO2014066698A1 (en) * | 2012-10-24 | 2014-05-01 | Metavana, Inc. | Method and system for social media burst classifications |
CN103345524B (en) * | 2013-07-19 | 2017-03-22 | 中国地质大学（武汉） | Method and system for detecting microblog hot topics |
US9535990B2 (en) * | 2014-05-20 | 2017-01-03 | Google Inc. | Systems and methods for generating video program extracts based on search queries |
CN105335391B (en) * | 2014-07-09 | 2019-02-15 | 阿里巴巴集团控股有限公司 | The treating method and apparatus of searching request based on search engine |
CN104123377B (en) * | 2014-07-30 | 2017-06-06 | 福州大学 | A kind of microblog topic temperature forecasting system and method |
CN104598617A (en) * | 2015-01-30 | 2015-05-06 | 百度在线网络技术（北京）有限公司 | Method and device for displaying search results |
CN106202491A (en) * | 2016-07-19 | 2016-12-07 | 中国银联股份有限公司 | A kind of based on seasonal effect in time series data digging method and system |
-
2016
- 2016-12-29 US US15/394,586 patent/US20180189399A1/en active Pending
-
2017
- 2017-10-27 CN CN201780080757.8A patent/CN110121729A/en active Pending
- 2017-10-27 WO PCT/US2017/058844 patent/WO2018125373A1/en unknown
- 2017-10-27 EP EP17889191.7A patent/EP3563252A4/en not_active Ceased
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090319518A1 (en) * | 2007-01-10 | 2009-12-24 | Nick Koudas | Method and system for information discovery and text analysis |
US8682720B1 (en) * | 2010-12-30 | 2014-03-25 | Google Inc. | Selection and display of online advertisements |
US20140149128A1 (en) * | 2012-11-29 | 2014-05-29 | Verizon Patent And Licensing Inc. | Healthcare fraud detection with machine learning |
US20150019513A1 (en) * | 2013-07-11 | 2015-01-15 | Tata Consultancy Services Limited | Time-series analysis based on world event derived from unstructured content |
US20150040047A1 (en) * | 2013-07-31 | 2015-02-05 | Adobe Systems Incorporated | Interactive visualization of trending data |
US20160112394A1 (en) * | 2014-10-20 | 2016-04-21 | Yp Llc | Systems and methods for implementing a personalized provider recommendation engine |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2020263226A1 (en) * | 2019-06-25 | 2020-12-30 | Google Llc | Using live data streams and/or search queries to determine information about developing events |
US11256992B2 (en) | 2019-06-25 | 2022-02-22 | Google Llc | Developing event-specific provisional knowledge graphs |
US11366812B2 (en) | 2019-06-25 | 2022-06-21 | Google Llc | Using live data streams and/or search queries to determine information about developing events |
US11853902B2 (en) | 2019-06-25 | 2023-12-26 | Google Llc | Developing event-specific provisional knowledge graphs |
US20210279609A1 (en) * | 2020-03-03 | 2021-09-09 | Fujifilm Business Innovation Corp. | Failure prediction apparatus and learning device |
CN113094241A (en) * | 2021-05-07 | 2021-07-09 | 北京京东振世信息技术有限公司 | Method, device and equipment for determining accuracy of real-time program and storage medium |
Also Published As
Publication number | Publication date |
---|---|
WO2018125373A1 (en) | 2018-07-05 |
EP3563252A1 (en) | 2019-11-06 |
CN110121729A (en) | 2019-08-13 |
EP3563252A4 (en) | 2020-05-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20180189399A1 (en) | Systems and methods for identifying and characterizing signals contained in a data stream | |
US11977847B2 (en) | Dynamically updated text classifier | |
US20190278787A1 (en) | Personalized content delivery system | |
US9104982B2 (en) | Prevention of invalid selections based on machine learning of user-specific latency | |
Chen et al. | Terec: A temporal recommender system over tweet stream | |
US20210365643A1 (en) | Natural language outputs for path prescriber model simulation for nodes in a time-series network | |
US10748165B2 (en) | Collecting and analyzing electronic survey responses including user-composed text | |
US8856146B2 (en) | Device for determining internet activity | |
US20240152810A1 (en) | Machine learning monitoring systems and methods | |
US20190057197A1 (en) | Temporal anomaly detection system and method | |
US10915391B2 (en) | Sensor data anomaly detection | |
US20160055242A1 (en) | Systems and methods for analyzing content from digital content sources | |
US10862953B2 (en) | Techniques for prediction of popularity of media | |
US20160078086A1 (en) | Query Rewriting Using Session Information | |
EP2994846A1 (en) | Hybrid human machine learning system and method | |
US20200089711A1 (en) | Method and system for generating push notifications related to digital news | |
US20190019204A1 (en) | Distributing electronic surveys through a messenger platform | |
US20210365611A1 (en) | Path prescriber model simulation for nodes in a time-series network | |
US20220100756A1 (en) | Navigation agent for a search interface | |
US20200175076A1 (en) | Training and implementing an audit generation model | |
Lee et al. | CAST: A context-aware story-teller for streaming social content | |
US11263486B2 (en) | Computer-based systems including machine learning models trained on distinct dataset types and methods of use thereof | |
US11526776B1 (en) | System and method for generating predictions of geopolitical events | |
US20140129694A1 (en) | Evaluating information retrieval systems in real-time across dynamic clusters of evidence | |
US20170308519A1 (en) | Learning semantic parsing |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:POPESCUL, ALEXANDRIN;COLEN, MATT;OFITSEROV, VLADIMIR;REEL/FRAME:041154/0582Effective date: 20170201 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STCV | Information on status: appeal procedure |
Free format text: NOTICE OF APPEAL FILED |
|
STCV | Information on status: appeal procedure |
Free format text: APPEAL BRIEF (OR SUPPLEMENTAL BRIEF) ENTERED AND FORWARDED TO EXAMINER |
|
STCV | Information on status: appeal procedure |
Free format text: EXAMINER'S ANSWER TO APPEAL BRIEF MAILED |
|
STCV | Information on status: appeal procedure |
Free format text: ON APPEAL -- AWAITING DECISION BY THE BOARD OF APPEALS |
|
STCV | Information on status: appeal procedure |
Free format text: BOARD OF APPEALS DECISION RENDERED |
|
STCV | Information on status: appeal procedure |
Free format text: APPLICATION INVOLVED IN COURT PROCEEDINGS |
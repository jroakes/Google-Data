US20160063410A1 - Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities - Google Patents
Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities Download PDFInfo
- Publication number
- US20160063410A1 US20160063410A1 US14/472,353 US201414472353A US2016063410A1 US 20160063410 A1 US20160063410 A1 US 20160063410A1 US 201414472353 A US201414472353 A US 201414472353A US 2016063410 A1 US2016063410 A1 US 2016063410A1
- Authority
- US
- United States
- Prior art keywords
- entities
- entity
- user
- term
- task description
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/06—Resources, workflows, human or project management; Enterprise or organisation planning; Enterprise or organisation modelling
- G06Q10/063—Operations research, analysis or management
- G06Q10/0631—Resource planning, allocation, distributing or scheduling for enterprises or organisations
- G06Q10/06312—Adjustment or analysis of established resource schedule, e.g. resource or task levelling, or dynamic rescheduling
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
- H04W4/023—Services making use of location information using mutual or relative location information between multiple location based services [LBS] targets or of distance thresholds
-
- H04W4/04—
Definitions
- the disclosure relates generally to task management, and more specifically to assisting users with task management.
- Some task management or calendaring applications allow a user to enter tasks either on a list or on a calendar. Although such an application may track all of a user's tasks in one place, the user must continue to track the list of tasks and eventually do what the task entails. Such an application does not reduce the burden on the user, and may actually increase the user's work, because the user has to enter each of the tasks, and must monitor or review what tasks need to be completed, what tasks have high priority, and so on.
- the software application may identify a keyword that represents a profession or type of business (e.g., dentist or optometrist).
- a specific business entity or other entity
- the user has a relationship with a specific business entity (or other entity) for a specific profession (e.g., a specific dentist or a specific optometrist).
- the user is prompted to select the specific business or entity (e.g., who is your dentist).
- the user makes the selection using a map or mapping application. Once the correlation is established, the software application can identify tasks that correspond to the same category and thus link them to the same selected entity.
- the entities in this context may be business entities, government entities, or other organizations that provide goods or services for individual people. Sometimes these entities are referred to as “local service providers.”
- a method of simplifying task management is performed at a computing device having one or more processors and memory.
- the memory stores one or more programs configured for execution by the one or more processors.
- the method receives a first task description from a user, which includes a first term.
- the method matches the first term to a first predefined category of entities.
- Each entity has a physical location.
- the entities may be business entities, government entities, non-profit organizations, and so on.
- the method displays a plurality of entities selected based on geographic proximity of the entities to a location corresponding to the user.
- the method receives user selection of a first entity from the displayed plurality of entities and stores the user selection. Subsequently, the method receives a second task description from the user.
- the second task description includes a second term, which is distinct from the first term.
- the method matches the second term to the first predefined category of entities and correlates the second task description to the first entity based on the stored user selection of the first entity for the first predefined category.
- the method then updates information for the second task description to include the first entity.
- each entity is pre-assigned to one or more of a set of predefined categories that include the first predefined category.
- the displayed entities are further selected based on pre-assignment to the first predefined category.
- each entity is pre-assigned to a unique predefined category. In other implementations, at least one entity is pre-assigned to a plurality of predefined categories.
- the first task description comprises a character string and the first term comprises a sequence of adjacent words in the character string.
- each predefined category has a respective set of one or more lookup terms.
- Matching the first term to a first predefined category of entities comprises looking up the first term in an index that includes the lookup terms for each of the predefined categories, to identify the first predefined category.
- the displayed entities are displayed on a geographic map that includes the location corresponding to the user.
- Each displayed entity is shown at a respective location on the geographic map corresponding to a respective physical location of the respective entity.
- the predefined categories include one of more of dentist, doctor, optometrist, plumber, electrician, locksmith, and florist.
- FIG. 1 illustrates a context in which some implementations operate.
- FIG. 2 is a block diagram of a client computing device according to some implementations.
- FIG. 3 is a block diagram of a server according to some implementations.
- FIG. 4 provides an example process flow for assisting a user to complete a task in accordance with some implementations.
- FIG. 5 illustrates a portion of a user interface that may be used in accordance with some implementations.
- FIGS. 6A-6C provide a flowchart of a process, performed at a client computing device, for assisting users with tasks according to some implementations.
- FIG. 1 is a block diagram that illustrates the major components of some implementations.
- the various client devices 102 also identified herein as computing devices
- servers 300 in a server system 110 communicate over one or more networks 108 (such as the Internet).
- a client device 102 may be a smart phone, a tablet computer, a laptop computer, a desktop computer, or other computing device that has access to a communication network 108 and can run a software application 106 (e.g., a task management application or a messaging application).
- the software application 106 runs within a web browser 104 .
- the server system 110 consists of a single server 300 . In other implementations, the server system 110 includes a plurality of servers 300 . In some implementations, the servers 300 are connected by an internal communication network or bus 122 .
- the server system 110 includes one or more web servers 112 , which receive requests from users (e.g., from client devices 102 ) and return appropriate information, resources, links, and so on.
- the server system 110 includes one or more application servers 114 , which provide various applications, such as a messaging application or task management application (e.g., software application 106 ).
- the server system 110 typically includes one or more databases 116 , which store information such as web pages, a user list 118 , and various other information (e.g., user specific information, such as user names and encrypted passwords, user preferences, and so on, as well as system level information, as illustrated below in FIG. 3 ).
- databases 116 which store information such as web pages, a user list 118 , and various other information (e.g., user specific information, such as user names and encrypted passwords, user preferences, and so on, as well as system level information, as illustrated below in FIG. 3 ).
- FIG. 2 is a block diagram illustrating a client device 102 that a user uses to access a software application 106 .
- a client device is also referred to as a computing device, which may be a tablet computer, a laptop computer, a smart phone, a desktop computer, a PDA, or other computing device than can run a software application 106 and has access to a communication network 108 .
- a client device 102 typically includes one or more processing units (CPUs) 202 for executing modules, programs, or instructions stored in the memory 214 and thereby performing processing operations; one or more network or other communications interfaces 204 ; memory 214 ; and one or more communication buses 212 for interconnecting these components.
- CPUs processing units
- the communication buses 212 may include circuitry (sometimes called a chipset) that interconnects and controls communications between system components.
- a client device 102 includes a user interface 206 comprising a display device 208 and one or more input devices or mechanisms 210 .
- the input device/mechanism includes a keyboard and a mouse; in some implementations, the input device/mechanism includes a “soft” keyboard, which is displayed as needed on the display device 208 , enabling a user to “press keys” that appear on the display 208 .
- the memory 214 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices.
- the memory 214 includes non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices.
- the memory 214 includes one or more storage devices remotely located from the CPU(s) 202 .
- the memory 214 or alternately the non-volatile memory device(s) within the memory 214 , comprises a non-transitory computer readable storage medium.
- the memory 214 , or the computer readable storage medium of the memory 214 stores the following programs, modules, and data structures, or a subset thereof:
- the application data 226 at the client device 102 includes a category list 232 .
- Each category identifies a type of entity that provides goods or services to users/customers.
- the categories include one or more of dentist, doctor, optometrist, plumber, electrician, locksmith, and florist.
- categories include government entities as well, such as police or DMV.
- the entity categories include non-profit organizations as well as social organizations and clubs (e.g., a PTA).
- the entities are limited to those that have a physical location.
- the entities are limited to those that have some form of contact information (e.g., a phone number or web address).
- a user may choose which entities are active.
- Each category in the category list typically has an associated name (e.g., “dentist”) as well as other data, such as keywords associated with the category (e.g., “dental,” “teeth,” and “root canal”).
- the associated keywords are saved in a term index 236 , as described below.
- the application data 226 at the client device 102 includes an entity list 234 .
- Each record in the entity list 234 identifies a specific business entity (e.g., “Joe's Barber Shop” in a specific city), a specific government entity (e.g., a DMV office in a specific city), or other organization (e.g., a specific rotary club in a specific city).
- Each record also includes other information about the entity, such as a phone number, a physical address, an email address, a web address, and so on.
- each entity is pre-assigned to one or more of the entity categories in the category list 232 .
- each entity is assigned to a unique category.
- an entity may be assigned to multiple categories.
- each entity is assigned to a unique primary category.
- the application data 226 at a client device 102 includes a term index 236 or other data structure to identify a category corresponding to specific terms.
- terms associated with each of the categories are included in a term index 236 , enabling quick identification of a category corresponding to terms that have been entered.
- a “term” may be a single word or multiple adjacent words that constitute a logical unit. For example, “root canal” is one term that is associated with the category “dentist.”
- the application data 226 for a client device 102 includes data 238 that specifies what entities a user has selected for various entity categories. Some implementations use a selected entities table 238 .
- each record in the selected entities table 238 includes a user identifier (e.g., a unique user ID), a category identifier (e.g., a category name), and an entity identifier (e.g., a unique identifier for an entity).
- one or more of the category list 232 , the entity list 234 , the term index 236 , and the selected entities data 238 are stored at a server system 110 instead of, or in addition to, at the client device 102 .
- Each of the above identified executable modules, applications, or sets of procedures may be stored in one or more of the previously mentioned memory devices and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- the memory 214 may store a subset of the modules and data structures identified above.
- the memory 214 may store additional modules or data structures not described above.
- FIG. 2 shows a client device 102
- FIG. 2 is intended more as a functional description of the various features that may be present rather than as a structural schematic of the implementations described herein. In practice, and as recognized by those of ordinary skill in the art, items shown separately could be combined and some items could be separated.
- FIG. 3 is a block diagram illustrating a server 300 that may be used in a server system 110 .
- a typical server system includes many individual servers 300 , which may be tens, hundreds, or thousands.
- a server 300 typically includes one or more processing units (CPUs) 302 for executing modules, programs, or instructions stored in the memory 314 and thereby performing processing operations; one or more network or other communications interfaces 304 ; memory 314 ; and one or more communication buses 312 for interconnecting these components.
- the communication buses 312 may include circuitry (sometimes called a chipset) that interconnects and controls communications between system components.
- a server 300 includes a user interface 306 , which may include a display device 308 and one or more input devices 310 , such as a keyboard and a mouse.
- the memory 314 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices.
- the memory 314 includes non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices.
- the memory 314 includes one or more storage devices remotely located from the CPU(s) 302 .
- the memory 314 or alternately the non-volatile memory device(s) within the memory 314 , comprises a non-transitory computer readable storage medium.
- the memory 314 , or the computer readable storage medium of the memory 314 stores the following programs, modules, and data structures, or a subset thereof:
- Each of the above identified elements in FIG. 3 may be stored in one or more of the previously mentioned memory devices.
- Each executable program, module, or procedure corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- the memory 314 may store a subset of the modules and data structures identified above.
- the memory 314 may store additional modules or data structures not described above.
- FIG. 3 illustrates a server 300
- FIG. 3 is intended more as functional illustration of the various features that may be present in a set of one or more servers rather than as a structural schematic of the implementations described herein.
- items shown separately could be combined and some items could be separated.
- the actual number of servers used to implement these features, and how features are allocated among them, will vary from one implementation to another, and may depend in part on the amount of data traffic that the system must handle during peak usage periods as well as during average usage periods.
- the functionality for a software application 106 may be shared between a client device 102 and a server system 110 .
- the majority of the subsequent processing occurs on the client device.
- all of the application data 226 may be stored at the client device and used directly by the client device.
- the majority of the processing and data storage occurs at a server 300 , and the client device 102 uses a web browser 104 to view and interact with the data.
- the category list 232 , the entity list 234 , and the term index 236 may be stored only at the server system 110 .
- One of skill in the art recognizes that various allocations of functionality between the client device 102 and the server system 110 are possible, and some implementations support multiple configurations (e.g., based on user selection).
- FIG. 4 illustrates a process flow for a specific example of assisting a user with task management.
- a user provides a task description 230 A, such as “Call optometrist,” “Eye appointment,” or “Vision checkup.”
- the task description 230 A is entered into a task management application or a messaging application (e.g., in a messaging application calendar).
- the software application 106 provides possible completions to the task description as it is entered.
- the matching module 222 compares ( 402 ) one or more terms from the task description 230 A to a category list 232 .
- the terms “optometrist,” “eye,” and “vision” may be matched to the “optometrist” category, whereas the terms “call,” “appointment,” and “checkup” would not match a category.
- the matching module 222 looks up the terms from a task description in a term index 236 to identify a matching category.
- the map module 224 presents ( 404 ) options so that the user can select the appropriate entity.
- the entities are pre-assigned to categories, and thus only the relevant entities are displayed on the map 422 .
- the entities are not pre-assigned, and thus the map 422 displays a greater number of options.
- the map is interactive, and thus the user can zoom in/out or scroll the map portion that is displayed.
- the map is initially displayed based on a location associated with the user. For example, a user whose home address is in San Francisco may see a map showing a portion of San Francisco, as illustrated in the map 422 .
- the map is based on an alternative location, such as the user's current geographic location (e.g., as determined by GPS).
- Some implementations provide an interface other than a map, which may be used instead of or in addition to the map interface. For example, some implementations provide a scrollable list of entities corresponding to the category, which may be sorted alphabetically or based on distance from the user location. Some implementations provide an entry box so that the user can enter the name of the appropriate entity. In some implementations that enable a user to key in the name of the desired entity, the user interface provides completion options as the user types, which may be updated after each keystroke.
- the software application stores ( 406 ) the user selection (e.g., in the application data 226 at the client device or in the database 116 at the server system 110 ).
- the relevant information from the entities list 234 is copied to the selected entities data 238 .
- This stored information 424 may include the name of the entity or the name of a person working for the entity, a phone number of the entity, a physical address for the entity, a web address for the entity, or an email address for the entity.
- the selected entities table 238 stores an entity identifier, which is the unique identifier for the entity in the entity list (e.g., the primary key of the entity table). If the entity table is maintained centrally, using a link also has the advantage of always pointing to the current information.
- the same user enters another task description 230 B.
- the entered task description is “eye appointment,” and that this is not the same as the first task description 230 A.
- the matching module 222 compares ( 408 ) the task description 230 B to the category list 232 , and identifies “optometrist” 426 as the corresponding category.
- the software application looks up the stored data 424 and finds that the user has previous selected an optometrist, and thus correlates ( 410 ) the new optometry task to the user's saved optometrist information.
- the software application 106 then updates the user interface with the relevant information, which simplifies the task of making an eye appointment by providing an annotated task description 230 B′.
- the annotations are added to the task description.
- the annotations are stored separately from the task description.
- FIG. 5 provides a skeletal user interface for some implementations.
- the user interface is displayed on a computing device 102 , which is a smart phone here.
- the user has entered a task description to “Call dentist” 502 , and the software application 106 has identified the key term “dentist.” In this example, the user has not previously identified a dentist, so the user interface prompts the user with the message “Who is your dentist?” 504 .
- the message 504 is an active link, and selecting the link (e.g., using a touch gesture) brings up the interface to select a dentist (similar to the map 422 in FIG. 4 ).
- Other implementations provide various user interface controls for selecting an entity (e.g., a dentist). For example, some implementations provide a drop down control and a map icon adjacent to the message 504 , allowing a user to select from a list or to open a map for selection.
- FIGS. 6A-6C provide a flowchart of a process 600 , performed by a computing device 102 , for simplifying ( 602 ) task management.
- the method is performed ( 604 ) at a computing device 102 having one or more processors and memory.
- the memory stores ( 604 ) one or more programs configured for execution by the one or more processors.
- the one or more programs comprise a task management application.
- the one or more programs comprise a messaging application.
- the one or more programs may implement calendaring or scheduling functionality within the messaging application.
- the task description 230 is a character string, such as “call optometrist” 230 A in FIG. 4 .
- the character string is constructed solely from user input (i.e., the user enters each of the characters).
- the software application 106 identifies completions to the task description based on what the user has already entered, enabling the user to enter the description more quickly and/or more accurately.
- Some implementations provide partial completions (e.g., an individual word rather than an entire task description).
- some of the completions (or partial completions) are based on the category names in the category list 232 . This can result in more structured task descriptions, and may simplify the matching process 402 later.
- the task description 230 includes ( 606 ) a first term.
- the first term is ( 608 ) a single word, such as the word “eye” or the word “vision” as illustrated by the task descriptions 230 A in FIG. 4 .
- the first term itself is the name of a category, such as the term “optometrist” in FIG. 4 .
- the first term is ( 610 ) a sequence of adjacent words in the task description character string. For example, “root canal” is a term that may be matched to the “dentist” category.
- the process 600 matches ( 612 ) the first term to a first predefined category of entities.
- one or more of the entities are ( 614 ) business entities (e.g., companies selling goods or services to people).
- one or more of the entities are ( 616 ) government entities (e.g., government entities that provide services to people).
- one or more of the entities are ( 618 ) non-profit organizations, social organizations, or clubs. In some cases, all of these entities are referred to as “service providers.”
- Some implementations focus on entities that are geographically near the user, and thus the entities are referred to as “local service providers.” For example, a person typically goes to a dentist or optometrist near when the user lives.
- each entity has ( 620 ) a physical location, although some implementations support other entities, as long as they have some contact information (e.g., a phone number, email address, or website).
- contact information e.g., a phone number, email address, or website.
- each entity is pre-assigned ( 622 ) to one or more of a set of predefined categories that include the first predefined category. Pre-assigned categories can be very helpful to users, because once the appropriate category is identified, the data subsequently presented to the user can be filtered to the relevant entities (e.g., if a user is looking up a dentist, the user sees only dentists, not retail stores, plumbers, restaurants, etc.
- each entity is pre-assigned ( 624 ) to a unique predefined category. In other implementations, some of the entities are pre-assigned ( 626 ) to multiple predefined categories.
- each predefined category has ( 628 ) a respective set of one or more lookup terms.
- the category “dentist” may have the lookup terms “dentist,” “teeth,” and “root canal.” Note that “teeth” could be ambiguous if “orthodontia” were another of the predefined categories.
- matching the first term to a first predefined category of entities includes ( 630 ) looking up the first term in an term index 236 that includes the lookup terms for each of the predefined categories. The lookup identifies ( 630 ) the first predefined category.
- the predefined categories include ( 632 ) one or more of dentist, doctor, optometrist, plumber, electrician, locksmith, and florist.
- the categories used are based on experimental data regarding what types of entities have ongoing relationships with their customers. For example, a user is likely to return to the same dentist or optometrist, but may not necessarily go back to the same florist.
- the user interface then prompts the user to select a specific entity corresponding to the identified category.
- the user interface displays ( 634 ) multiple entities that are selected ( 634 ) based on geographic proximity to a location corresponding to the user. This is illustrated above in FIG. 4 using the map interface 422 .
- the displayed entities are further selected ( 636 ) based on pre-assignment of the entities to the first predefined category.
- the displayed entities are displayed ( 638 ) on a geographic map that includes the location corresponding to the user (as illustrated by the map 422 in FIG. 4 ).
- each displayed entity is shown ( 640 ) at a respective location on the geographic map corresponding to a respective physical location of the respective entity.
- the location corresponding to the user is ( 644 ) a home location of the user. In some implementations, the location corresponding to the user is ( 646 ) the user's current geographic location (e.g., determined by GPS from a mobile device).
- the displayed entities are sorted ( 642 ) in a list based on the geographic proximity, with nearest entities displayed first.
- Some implementations display a sorted list instead of a map interface.
- Some implementations display both a sorted list and a map interface, or enable a user to choose the selection methodology.
- the user selects ( 648 ) a first entity from the displayed multiple entities, and the user selection is stored ( 650 ). This is illustrated above in FIG. 4 .
- the second task description includes ( 652 ) a second term, which is distinct from the first term. Like the first term, the second term may be a single word of a sequence of words.
- the matching module 222 matches ( 654 ) the second term to the first predefined category of entities. Based on this matching, the software application correlates ( 656 ) the second task description to the first entity. The correlation uses ( 656 ) the stored user selection of the first entity for the first predefined category.
- the software application then updates ( 658 ) information for the second task description to include the first entity (e.g., information about the first entity). This is illustrated by the annotated task message 230 B′ in FIG. 4 .
- Some implementations extend the described process in various ways. For example, whereas a user may have a single dentist or a single optometrist, a user may have multiple doctors or multiple relationships with other categories of business. Therefore, some implementations allow a user to store these multiple relationships for the same entity category. Implementations typically limit the categories to ones where a user uses a single entity or a small number of entities. For these categories, the user selected entities (local service providers) simplify task management. Some implementations support other categories as well, such as “restaurants,” where a user may designate many entities corresponding to the category. In the restaurant example, the list acts more like a list of favorites.
- Some implementations extend the described process to entities that are not physically close to the user and/or have no user-accessible physical location. For example, a user may do banking through an Internet-only bank, or have a life insurance carrier that is out of state. Some implementations provide a user interface to look up entities by name or using a functional hierarchy to find the right one. Some implementations allow a user to enter the data for an entity manually. For example, a user may enter a phone number or web address for an Internet bank, and a subsequent task description to “call the bank” would be associated with the bank data entered. Some implementations provide a map user interface to easily identify local service providers, with an option to enter data manually when the appropriate entity is not on the map.
- Some implementations enable a user to associate an entity with a label that is not matched to a predefined category.
- the label acts like an alias or a custom category for the designated entity, and allows the user to identify an entity within a task description in a concise way.
- Some implementations enable a user to associate a specific local service provider with a category while creating a task description. For example, a user may select directly from the set of categories and then associate the category with a local service provider.
Abstract
A process simplifies task management. The process receives a first task description from a user. The first task description includes a first term. The process matches the first term to a first predefined category of entities. Each entity has a physical location. The process displays multiple entities selected based on geographic proximity to a location corresponding to the user and receives user selection of a first entity. The process stores the user selection. The process later receives a second task description from the user. The second task description includes a second term, distinct from the first term. The process matches the second term to the first predefined category of entities and correlates the second task description to the first entity based on the stored user selection of the first entity for the first predefined category. The process updates information for the second task description to include the first entity.
Description
- The disclosure relates generally to task management, and more specifically to assisting users with task management.
- Busy users have to manage many different tasks, both at work and at home. Some task management or calendaring applications allow a user to enter tasks either on a list or on a calendar. Although such an application may track all of a user's tasks in one place, the user must continue to track the list of tasks and eventually do what the task entails. Such an application does not reduce the burden on the user, and may actually increase the user's work, because the user has to enter each of the tasks, and must monitor or review what tasks need to be completed, what tasks have high priority, and so on.
- Disclosed implementations address the above deficiencies and other problems associated with managing a user's tasks. When a user enters a task description, the software application may identify a keyword that represents a profession or type of business (e.g., dentist or optometrist). In some instances, the user has a relationship with a specific business entity (or other entity) for a specific profession (e.g., a specific dentist or a specific optometrist). On a one-time basis, the user is prompted to select the specific business or entity (e.g., who is your dentist). In some implementations, the user makes the selection using a map or mapping application. Once the correlation is established, the software application can identify tasks that correspond to the same category and thus link them to the same selected entity. For example, suppose the user has a specific optometrist. A future task entry to “make eye appointment” is correlated to the category “optometrist,” and thus correlated to the same optometrist, including the contact information. This simplifies the user's task. The entities in this context may be business entities, government entities, or other organizations that provide goods or services for individual people. Sometimes these entities are referred to as “local service providers.”
- In accordance with some implementations, a method of simplifying task management is performed at a computing device having one or more processors and memory. The memory stores one or more programs configured for execution by the one or more processors. The method receives a first task description from a user, which includes a first term. The method matches the first term to a first predefined category of entities. Each entity has a physical location. The entities may be business entities, government entities, non-profit organizations, and so on. The method displays a plurality of entities selected based on geographic proximity of the entities to a location corresponding to the user. The method receives user selection of a first entity from the displayed plurality of entities and stores the user selection. Subsequently, the method receives a second task description from the user. The second task description includes a second term, which is distinct from the first term. The method matches the second term to the first predefined category of entities and correlates the second task description to the first entity based on the stored user selection of the first entity for the first predefined category. The method then updates information for the second task description to include the first entity.
- In accordance with some implementations, each entity is pre-assigned to one or more of a set of predefined categories that include the first predefined category. In some implementations, the displayed entities are further selected based on pre-assignment to the first predefined category.
- In some implementations, each entity is pre-assigned to a unique predefined category. In other implementations, at least one entity is pre-assigned to a plurality of predefined categories.
- In accordance with some implementations, the first task description comprises a character string and the first term comprises a sequence of adjacent words in the character string.
- In accordance with some implementations, each predefined category has a respective set of one or more lookup terms. Matching the first term to a first predefined category of entities comprises looking up the first term in an index that includes the lookup terms for each of the predefined categories, to identify the first predefined category.
- In accordance with some implementations, the displayed entities are displayed on a geographic map that includes the location corresponding to the user. Each displayed entity is shown at a respective location on the geographic map corresponding to a respective physical location of the respective entity.
- In accordance with some implementations, the predefined categories include one of more of dentist, doctor, optometrist, plumber, electrician, locksmith, and florist.
- Thus methods and systems are provided that facilitate completion of tasks.
- For a better understanding of the aforementioned implementations of the invention as well as additional implementations thereof, reference should be made to the Description of Implementations below, in conjunction with the following drawings in which like reference numerals refer to corresponding parts throughout the figures.
-
FIG. 1 illustrates a context in which some implementations operate. -
FIG. 2 is a block diagram of a client computing device according to some implementations. -
FIG. 3 is a block diagram of a server according to some implementations. -
FIG. 4 provides an example process flow for assisting a user to complete a task in accordance with some implementations. -
FIG. 5 illustrates a portion of a user interface that may be used in accordance with some implementations. -
FIGS. 6A-6C provide a flowchart of a process, performed at a client computing device, for assisting users with tasks according to some implementations. - Reference will now be made in detail to implementations, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be apparent to one of ordinary skill in the art that the present invention may be practiced without these specific details.
-
FIG. 1 is a block diagram that illustrates the major components of some implementations. The various client devices 102 (also identified herein as computing devices) andservers 300 in aserver system 110 communicate over one or more networks 108 (such as the Internet). Aclient device 102 may be a smart phone, a tablet computer, a laptop computer, a desktop computer, or other computing device that has access to acommunication network 108 and can run a software application 106 (e.g., a task management application or a messaging application). In some implementations, thesoftware application 106 runs within aweb browser 104. - In some implementations, the
server system 110 consists of asingle server 300. In other implementations, theserver system 110 includes a plurality ofservers 300. In some implementations, theservers 300 are connected by an internal communication network orbus 122. Theserver system 110 includes one ormore web servers 112, which receive requests from users (e.g., from client devices 102) and return appropriate information, resources, links, and so on. In some implementations, theserver system 110 includes one ormore application servers 114, which provide various applications, such as a messaging application or task management application (e.g., software application 106). Theserver system 110 typically includes one ormore databases 116, which store information such as web pages, auser list 118, and various other information (e.g., user specific information, such as user names and encrypted passwords, user preferences, and so on, as well as system level information, as illustrated below inFIG. 3 ). -
FIG. 2 is a block diagram illustrating aclient device 102 that a user uses to access asoftware application 106. A client device is also referred to as a computing device, which may be a tablet computer, a laptop computer, a smart phone, a desktop computer, a PDA, or other computing device than can run asoftware application 106 and has access to acommunication network 108. Aclient device 102 typically includes one or more processing units (CPUs) 202 for executing modules, programs, or instructions stored in thememory 214 and thereby performing processing operations; one or more network orother communications interfaces 204;memory 214; and one ormore communication buses 212 for interconnecting these components. Thecommunication buses 212 may include circuitry (sometimes called a chipset) that interconnects and controls communications between system components. Aclient device 102 includes auser interface 206 comprising adisplay device 208 and one or more input devices ormechanisms 210. In some implementations, the input device/mechanism includes a keyboard and a mouse; in some implementations, the input device/mechanism includes a “soft” keyboard, which is displayed as needed on thedisplay device 208, enabling a user to “press keys” that appear on thedisplay 208. - In some implementations, the
memory 214 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices. In some implementations, thememory 214 includes non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices. In some implementations, thememory 214 includes one or more storage devices remotely located from the CPU(s) 202. Thememory 214, or alternately the non-volatile memory device(s) within thememory 214, comprises a non-transitory computer readable storage medium. In some implementations, thememory 214, or the computer readable storage medium of thememory 214, stores the following programs, modules, and data structures, or a subset thereof: -
- an
operating system 216, which includes procedures for handling various basic system services and for performing hardware dependent tasks; - a
communications module 218, which is used for connecting theclient device 102 to other computers and devices via the one or more communication network interfaces 204 (wired or wireless) and one ormore communication networks 108, such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; - a
display module 220, which receives input from the one ormore input devices 210, and generates user interface elements for display on thedisplay device 208; - a
web browser 104, which enables a user to communicate over a network 108 (such as the Internet) with remote computers or devices; - a
software application 106, such as a messaging application or a task management application. In some implementations, thesoftware application 106 runs within theweb browser 104 as illustrated inFIG. 1 . In some implementations, thesoftware application 106 runs independently of a web browser 104 (e.g., a desktop application). In some implementations, the software application includes amatching module 222, which matches a term (e.g., a sequence of one or more words) from a user-enteredtask description 230 to a stored set ofentity categories 232. Entity categories typically identify types of businesses. This is illustrated below inFIG. 4 . In some implementations, thesoftware application 106 includes amap module 224. Themap module 224 displays a map that includes entities (e.g., local service providers) near the user. This is illustrated below inFIG. 4 ; -
application data 226, which is used by thesoftware application 106. In some implementations, theapplication data 226 includesconfiguration data 228, which identifies how the software application is configured for aparticular computing device 102. For example, the configuration data may specify whichentity categories 232 are active, whether task assistance is turned on or off, as well as user interface customizations. When a user enters atask description 230, it is stored. In some implementations, theapplication data 226 is stored in a relational database, a CSV file, or an XML file.
- an
- In some implementations, the
application data 226 at theclient device 102 includes acategory list 232. Each category identifies a type of entity that provides goods or services to users/customers. For example, in some implementations the categories include one or more of dentist, doctor, optometrist, plumber, electrician, locksmith, and florist. In some implementations, categories include government entities as well, such as police or DMV. In some implementations, the entity categories include non-profit organizations as well as social organizations and clubs (e.g., a PTA). In some implementations, the entities are limited to those that have a physical location. In some implementations, the entities are limited to those that have some form of contact information (e.g., a phone number or web address). In some implementations, a user may choose which entities are active. - Each category in the category list typically has an associated name (e.g., “dentist”) as well as other data, such as keywords associated with the category (e.g., “dental,” “teeth,” and “root canal”). In some implementations, the associated keywords are saved in a
term index 236, as described below. - In some implementations, the
application data 226 at theclient device 102 includes anentity list 234. Each record in theentity list 234 identifies a specific business entity (e.g., “Joe's Barber Shop” in a specific city), a specific government entity (e.g., a DMV office in a specific city), or other organization (e.g., a specific rotary club in a specific city). Each record also includes other information about the entity, such as a phone number, a physical address, an email address, a web address, and so on. In some implementations, each entity is pre-assigned to one or more of the entity categories in thecategory list 232. In some implementations, each entity is assigned to a unique category. In some implementations, an entity may be assigned to multiple categories. In some implementations that enable assignment to multiple categories, each entity is assigned to a unique primary category. - In some implementations, the
application data 226 at aclient device 102 includes aterm index 236 or other data structure to identify a category corresponding to specific terms. In some implementations, terms associated with each of the categories are included in aterm index 236, enabling quick identification of a category corresponding to terms that have been entered. As used herein, a “term” may be a single word or multiple adjacent words that constitute a logical unit. For example, “root canal” is one term that is associated with the category “dentist.” Some implementations have more complex matching algorithms, and thus store alternative data structures to support those algorithms. - In some implementations, the
application data 226 for aclient device 102 includesdata 238 that specifies what entities a user has selected for various entity categories. Some implementations use a selected entities table 238. In some implementations, each record in the selected entities table 238 includes a user identifier (e.g., a unique user ID), a category identifier (e.g., a category name), and an entity identifier (e.g., a unique identifier for an entity). - In some implementations, one or more of the
category list 232, theentity list 234, theterm index 236, and the selectedentities data 238 are stored at aserver system 110 instead of, or in addition to, at theclient device 102. - Each of the above identified executable modules, applications, or sets of procedures may be stored in one or more of the previously mentioned memory devices and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations, the
memory 214 may store a subset of the modules and data structures identified above. Furthermore, thememory 214 may store additional modules or data structures not described above. - Although
FIG. 2 shows aclient device 102,FIG. 2 is intended more as a functional description of the various features that may be present rather than as a structural schematic of the implementations described herein. In practice, and as recognized by those of ordinary skill in the art, items shown separately could be combined and some items could be separated. -
FIG. 3 is a block diagram illustrating aserver 300 that may be used in aserver system 110. A typical server system includes manyindividual servers 300, which may be tens, hundreds, or thousands. Aserver 300 typically includes one or more processing units (CPUs) 302 for executing modules, programs, or instructions stored in thememory 314 and thereby performing processing operations; one or more network orother communications interfaces 304;memory 314; and one ormore communication buses 312 for interconnecting these components. Thecommunication buses 312 may include circuitry (sometimes called a chipset) that interconnects and controls communications between system components. In some implementations, aserver 300 includes auser interface 306, which may include adisplay device 308 and one ormore input devices 310, such as a keyboard and a mouse. - In some implementations, the
memory 314 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices. In some implementations, thememory 314 includes non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices. In some implementations, thememory 314 includes one or more storage devices remotely located from the CPU(s) 302. Thememory 314, or alternately the non-volatile memory device(s) within thememory 314, comprises a non-transitory computer readable storage medium. In some implementations, thememory 314, or the computer readable storage medium of thememory 314, stores the following programs, modules, and data structures, or a subset thereof: -
- an
operating system 316, which includes procedures for handling various basic system services and for performing hardware dependent tasks; - a
communications module 318, which is used for connecting theserver 300 to other computers via the one or more communication network interfaces 304 (wired or wireless), an internal network orbus 122, andcommunication networks 108, such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; - a
display module 320, which receives input from one ormore input devices 310, and generates user interface elements for display on adisplay device 308; - one or
more web servers 112, which receive requests from aclient device 102, and return responsive web pages, resources, or links. In some implementations, each request is logged in thedatabase 116; - one or
more application servers 114, which provide various software applications 106 (such as an email or other messaging application) to theclient devices 102. In some implementations, an application is provided as a set of web pages, which are delivered to theclient devices 102 and displayed in aweb browser 104. The web pages are delivered as needed or requested. In some implementations, an application is delivered to aclient device 102 as a download, which is installed and run from theclient device 102 outside of aweb browser 104. In some implementations, the application server provides amatching module 222 as part of thesoftware application 106. In other implementations, thematching module 222 is a separate application provided by theapplication server 114. As illustrated inFIG. 4 , thematching module 222 matches a term from a user-enteredtask description 230 against acategory list 232. In some implementations, theapplication server 114 provides amap module 224, which may be a separate application or an integrated part of thematching module 222 or thesoftware application 106. Themap module 224 is described with respect toFIGS. 2 and 4 ; - one or
more databases 116, which store various data used by the modules or programs identified above. In some implementations, thedatabase 116 includes a list of authorizedusers 118, which may include user names, encrypted passwords, and other relevant information about each user. In some implementations, thedatabase 116stores task descriptions 230. In some implementations, thedatabase 116 stores acategory list 232, anentity list 234, aterm index 236, and selectedentities data 238, which are described above with respect toFIG. 2 .
- an
- Each of the above identified elements in
FIG. 3 may be stored in one or more of the previously mentioned memory devices. Each executable program, module, or procedure corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations, thememory 314 may store a subset of the modules and data structures identified above. Furthermore, thememory 314 may store additional modules or data structures not described above. - Although
FIG. 3 illustrates aserver 300,FIG. 3 is intended more as functional illustration of the various features that may be present in a set of one or more servers rather than as a structural schematic of the implementations described herein. In practice, and as recognized by those of ordinary skill in the art, items shown separately could be combined and some items could be separated. The actual number of servers used to implement these features, and how features are allocated among them, will vary from one implementation to another, and may depend in part on the amount of data traffic that the system must handle during peak usage periods as well as during average usage periods. - As illustrated in
FIGS. 2 and 3 , the functionality for asoftware application 106 may be shared between aclient device 102 and aserver system 110. In some implementations, after the software application is installed on aclient device 102, the majority of the subsequent processing occurs on the client device. For example, all of theapplication data 226 may be stored at the client device and used directly by the client device. In other implementations, the majority of the processing and data storage occurs at aserver 300, and theclient device 102 uses aweb browser 104 to view and interact with the data. For example, thecategory list 232, theentity list 234, and theterm index 236 may be stored only at theserver system 110. One of skill in the art recognizes that various allocations of functionality between theclient device 102 and theserver system 110 are possible, and some implementations support multiple configurations (e.g., based on user selection). -
FIG. 4 illustrates a process flow for a specific example of assisting a user with task management. A user provides atask description 230A, such as “Call optometrist,” “Eye appointment,” or “Vision checkup.” In some implementations, thetask description 230A is entered into a task management application or a messaging application (e.g., in a messaging application calendar). In some implementations, thesoftware application 106 provides possible completions to the task description as it is entered. - The
matching module 222 compares (402) one or more terms from thetask description 230A to acategory list 232. Here, the terms “optometrist,” “eye,” and “vision” may be matched to the “optometrist” category, whereas the terms “call,” “appointment,” and “checkup” would not match a category. In some implementations, thematching module 222 looks up the terms from a task description in aterm index 236 to identify a matching category. - Once the matching category “optometrist” 420 is identified, the
map module 224 presents (404) options so that the user can select the appropriate entity. In some implementations, the entities are pre-assigned to categories, and thus only the relevant entities are displayed on themap 422. In other implementations, the entities are not pre-assigned, and thus themap 422 displays a greater number of options. In some implementations, the map is interactive, and thus the user can zoom in/out or scroll the map portion that is displayed. In some implementations, the map is initially displayed based on a location associated with the user. For example, a user whose home address is in San Francisco may see a map showing a portion of San Francisco, as illustrated in themap 422. In some implementations, the map is based on an alternative location, such as the user's current geographic location (e.g., as determined by GPS). Some implementations provide an interface other than a map, which may be used instead of or in addition to the map interface. For example, some implementations provide a scrollable list of entities corresponding to the category, which may be sorted alphabetically or based on distance from the user location. Some implementations provide an entry box so that the user can enter the name of the appropriate entity. In some implementations that enable a user to key in the name of the desired entity, the user interface provides completion options as the user types, which may be updated after each keystroke. - If the user selects one of the entity options presented, the software application stores (406) the user selection (e.g., in the
application data 226 at the client device or in thedatabase 116 at the server system 110). In some implementations, the relevant information from the entities list 234 is copied to the selectedentities data 238. This storedinformation 424 may include the name of the entity or the name of a person working for the entity, a phone number of the entity, a physical address for the entity, a web address for the entity, or an email address for the entity. In some implementations, rather than copying the entity data, the selected entities table 238 stores an entity identifier, which is the unique identifier for the entity in the entity list (e.g., the primary key of the entity table). If the entity table is maintained centrally, using a link also has the advantage of always pointing to the current information. - At some point in the future, the same user enters another
task description 230B. In this example, suppose that the entered task description is “eye appointment,” and that this is not the same as thefirst task description 230A. Thematching module 222 compares (408) thetask description 230B to thecategory list 232, and identifies “optometrist” 426 as the corresponding category. - This time, however, the software application looks up the stored
data 424 and finds that the user has previous selected an optometrist, and thus correlates (410) the new optometry task to the user's saved optometrist information. Thesoftware application 106 then updates the user interface with the relevant information, which simplifies the task of making an eye appointment by providing an annotatedtask description 230B′. In some implementations, the annotations are added to the task description. In some implementations, the annotations are stored separately from the task description. - Once the user correlates a specific entity with a category one time, all future task entries can take advantage of the saved information. For example, a user does not go to a dentist or optometrist frequently, and thus is unlikely to remember the phone number or web address. In some instances, a user may not even remember the name of the entity when it is time to make another appointment a year later, and thus it could be difficult to even look up the relevant entity. Because disclosed implementations match based on various descriptive terms (e.g., “eye appointment”), the user is not burdened with remembering details about the entity.
-
FIG. 5 provides a skeletal user interface for some implementations. The user interface is displayed on acomputing device 102, which is a smart phone here. The user has entered a task description to “Call dentist” 502, and thesoftware application 106 has identified the key term “dentist.” In this example, the user has not previously identified a dentist, so the user interface prompts the user with the message “Who is your dentist?” 504. In some implementations, themessage 504 is an active link, and selecting the link (e.g., using a touch gesture) brings up the interface to select a dentist (similar to themap 422 inFIG. 4 ). Other implementations provide various user interface controls for selecting an entity (e.g., a dentist). For example, some implementations provide a drop down control and a map icon adjacent to themessage 504, allowing a user to select from a list or to open a map for selection. -
FIGS. 6A-6C provide a flowchart of aprocess 600, performed by acomputing device 102, for simplifying (602) task management. The method is performed (604) at acomputing device 102 having one or more processors and memory. The memory stores (604) one or more programs configured for execution by the one or more processors. In some implementations, the one or more programs comprise a task management application. In some implementations, the one or more programs comprise a messaging application. For example, the one or more programs may implement calendaring or scheduling functionality within the messaging application. - A user enters a
task description 230, which is received (606) by thesoftware application 106. In some implementations, thetask description 230 is a character string, such as “call optometrist” 230A inFIG. 4 . In some implementations, the character string is constructed solely from user input (i.e., the user enters each of the characters). In other implementations, thesoftware application 106 identifies completions to the task description based on what the user has already entered, enabling the user to enter the description more quickly and/or more accurately. Some implementations provide partial completions (e.g., an individual word rather than an entire task description). In some implementations, some of the completions (or partial completions) are based on the category names in thecategory list 232. This can result in more structured task descriptions, and may simplify thematching process 402 later. - The
task description 230 includes (606) a first term. In some instances, the first term is (608) a single word, such as the word “eye” or the word “vision” as illustrated by thetask descriptions 230A inFIG. 4 . In some instances, the first term itself is the name of a category, such as the term “optometrist” inFIG. 4 . In some instances, the first term is (610) a sequence of adjacent words in the task description character string. For example, “root canal” is a term that may be matched to the “dentist” category. - The
process 600 matches (612) the first term to a first predefined category of entities. In some implementations, one or more of the entities are (614) business entities (e.g., companies selling goods or services to people). In some implementations, one or more of the entities are (616) government entities (e.g., government entities that provide services to people). In some implementations, one or more of the entities are (618) non-profit organizations, social organizations, or clubs. In some cases, all of these entities are referred to as “service providers.” Some implementations focus on entities that are geographically near the user, and thus the entities are referred to as “local service providers.” For example, a person typically goes to a dentist or optometrist near when the user lives. - Typically, each entity has (620) a physical location, although some implementations support other entities, as long as they have some contact information (e.g., a phone number, email address, or website).
- In some implementations, each entity is pre-assigned (622) to one or more of a set of predefined categories that include the first predefined category. Pre-assigned categories can be very helpful to users, because once the appropriate category is identified, the data subsequently presented to the user can be filtered to the relevant entities (e.g., if a user is looking up a dentist, the user sees only dentists, not retail stores, plumbers, restaurants, etc. In some implementations, each entity is pre-assigned (624) to a unique predefined category. In other implementations, some of the entities are pre-assigned (626) to multiple predefined categories.
- In some implementations, each predefined category has (628) a respective set of one or more lookup terms. For example, the category “dentist” may have the lookup terms “dentist,” “teeth,” and “root canal.” Note that “teeth” could be ambiguous if “orthodontia” were another of the predefined categories. In some implementations, matching the first term to a first predefined category of entities includes (630) looking up the first term in an
term index 236 that includes the lookup terms for each of the predefined categories. The lookup identifies (630) the first predefined category. - Different implementations use various sets of entity categories. In some implementations, the predefined categories include (632) one or more of dentist, doctor, optometrist, plumber, electrician, locksmith, and florist. In some implementations, the categories used are based on experimental data regarding what types of entities have ongoing relationships with their customers. For example, a user is likely to return to the same dentist or optometrist, but may not necessarily go back to the same florist.
- The user interface then prompts the user to select a specific entity corresponding to the identified category. The user interface displays (634) multiple entities that are selected (634) based on geographic proximity to a location corresponding to the user. This is illustrated above in
FIG. 4 using themap interface 422. In some implementations, the displayed entities are further selected (636) based on pre-assignment of the entities to the first predefined category. In some implementations, the displayed entities are displayed (638) on a geographic map that includes the location corresponding to the user (as illustrated by themap 422 inFIG. 4 ). In these implementations, each displayed entity is shown (640) at a respective location on the geographic map corresponding to a respective physical location of the respective entity. In some implementations, the location corresponding to the user is (644) a home location of the user. In some implementations, the location corresponding to the user is (646) the user's current geographic location (e.g., determined by GPS from a mobile device). - In some implementations, the displayed entities are sorted (642) in a list based on the geographic proximity, with nearest entities displayed first. Some implementations display a sorted list instead of a map interface. Some implementations display both a sorted list and a map interface, or enable a user to choose the selection methodology.
- The user selects (648) a first entity from the displayed multiple entities, and the user selection is stored (650). This is illustrated above in
FIG. 4 . - Subsequently, the user enters (652) a
second task description 230. The second task description includes (652) a second term, which is distinct from the first term. Like the first term, the second term may be a single word of a sequence of words. Thematching module 222 matches (654) the second term to the first predefined category of entities. Based on this matching, the software application correlates (656) the second task description to the first entity. The correlation uses (656) the stored user selection of the first entity for the first predefined category. The software application then updates (658) information for the second task description to include the first entity (e.g., information about the first entity). This is illustrated by the annotatedtask message 230B′ inFIG. 4 . - Some implementations extend the described process in various ways. For example, whereas a user may have a single dentist or a single optometrist, a user may have multiple doctors or multiple relationships with other categories of business. Therefore, some implementations allow a user to store these multiple relationships for the same entity category. Implementations typically limit the categories to ones where a user uses a single entity or a small number of entities. For these categories, the user selected entities (local service providers) simplify task management. Some implementations support other categories as well, such as “restaurants,” where a user may designate many entities corresponding to the category. In the restaurant example, the list acts more like a list of favorites.
- Some implementations extend the described process to entities that are not physically close to the user and/or have no user-accessible physical location. For example, a user may do banking through an Internet-only bank, or have a life insurance carrier that is out of state. Some implementations provide a user interface to look up entities by name or using a functional hierarchy to find the right one. Some implementations allow a user to enter the data for an entity manually. For example, a user may enter a phone number or web address for an Internet bank, and a subsequent task description to “call the bank” would be associated with the bank data entered. Some implementations provide a map user interface to easily identify local service providers, with an option to enter data manually when the appropriate entity is not on the map.
- Some implementations enable a user to associate an entity with a label that is not matched to a predefined category. The label acts like an alias or a custom category for the designated entity, and allows the user to identify an entity within a task description in a concise way.
- Some implementations enable a user to associate a specific local service provider with a category while creating a task description. For example, a user may select directly from the set of categories and then associate the category with a local service provider.
- The terminology used in the description of the invention herein is for the purpose of describing particular implementations only and is not intended to be limiting of the invention. As used in the description of the invention and the appended claims, the singular forms “a,” “an,” and “the” are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will also be understood that the term “and/or” as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms “comprises” and/or “comprising,” when used in this specification, specify the presence of stated features, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, steps, operations, elements, components, and/or groups thereof.
- The foregoing description, for purpose of explanation, has been described with reference to specific implementations. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The implementations described herein were chosen and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to best utilize the invention and various implementations with various modifications as are suited to the particular use contemplated.
Claims (20)
1. A method of simplifying task management, comprising:
at a computing device having one or more processors and memory storing one or more programs configured for execution by the one or more processors:
receiving a first task description from a user, wherein the first task description includes a first term;
matching the first term to a first predefined category of entities, wherein each entity has a physical location;
displaying a plurality of entities selected based on geographic proximity of the entities to a location corresponding to the user;
receiving user selection of a first entity from the displayed plurality of entities and storing the user selection;
receiving a second task description from the user, wherein the second task description includes a second term, distinct from the first term;
matching the second term to the first predefined category of entities;
correlating the second task description to the first entity based on the stored user selection of the first entity for the first predefined category; and
updating information for the second task description to include the first entity.
2. The method of claim 1 , wherein one or more of the entities are business entities.
3. The method of claim 1 , wherein one or more of the entities are government entities.
4. The method of claim 1 , wherein one or more of the entities are non-profit organizations.
5. The method of claim 1 , wherein each entity is pre-assigned to one or more of a set of predefined categories that include the first predefined category.
6. The method of claim 5 , wherein the displayed entities are further selected based on pre-assignment to the first predefined category.
7. The method of claim 5 , wherein each entity is pre-assigned to a unique predefined category.
8. The method of claim 5 , wherein at least one entity is pre-assigned to a plurality of predefined categories.
9. The method of claim 1 , wherein the first term comprises a single word.
10. The method of claim 1 , wherein the first task description comprises a character string and the first term comprises a sequence of adjacent words in the character string.
11. The method of claim 1 , wherein each predefined category has a respective set of one or more lookup terms, and wherein matching the first term to a first predefined category of entities comprises looking up the first term in an index that includes the lookup terms for each of the predefined categories, to identify the first predefined category.
12. The method of claim 1 , wherein the displayed entities are displayed on a geographic map that includes the location corresponding to the user, and wherein each displayed entity is shown at a respective location on the geographic map corresponding to a respective physical location of the respective entity.
13. The method of claim 1 , wherein the displayed entities are sorted in a list based on the geographic proximity, with nearest entities displayed first.
14. The method of claim 1 , wherein the location corresponding to the user is a home location of the user.
15. The method of claim 1 , wherein the location corresponding to the user is the user's current geographic location.
16. The method of claim 1 , wherein the predefined categories include one of more of dentist, doctor, optometrist, plumber, electrician, locksmith, and florist.
17. A computing device, comprising:
one or more processors;
memory; and
one or more programs stored in the memory configured for execution by the one or more processors, the one or more programs comprising instructions for:
receiving a first task description from a user, wherein the first task description includes a first term;
matching the first term to a first predefined category of entities, wherein each entity has a physical location;
displaying a plurality of entities selected based on geographic proximity of the entities to a location corresponding to the user;
receiving user selection of a first entity from the displayed plurality of entities and storing the user selection;
receiving a second task description from the user, wherein the second task description includes a second term, distinct from the first term;
matching the second term to the first predefined category of entities;
correlating the second task description to the first entity based on the stored user selection of the first entity for the first predefined category; and
updating information for the second task description to include the first entity.
18. The computing device of claim 17 , wherein each entity is pre-assigned to one or more of a set of predefined categories that include the first predefined category.
19. The computing device of claim 18 , wherein the displayed entities are further selected based on pre-assignment to the first predefined category.
20. A non-transitory computer readable storage medium storing one or more programs configured for execution by a computing device having one or more processors and memory, the one or more programs comprising instructions for:
receiving a first task description from a user, wherein the first task description includes a first term;
matching the first term to a first predefined category of entities, wherein each entity has a physical location;
displaying a plurality of entities selected based on geographic proximity of the entities to a location corresponding to the user;
receiving user selection of a first entity from the displayed plurality of entities and storing the user selection;
receiving a second task description from the user, wherein the second task description includes a second term, distinct from the first term;
matching the second term to the first predefined category of entities;
correlating the second task description to the first entity based on the stored user selection of the first entity for the first predefined category; and
updating information for the second task description to include the first entity.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/472,353 US20160063410A1 (en) | 2014-08-28 | 2014-08-28 | Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/472,353 US20160063410A1 (en) | 2014-08-28 | 2014-08-28 | Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities |
Publications (1)
Publication Number | Publication Date |
---|---|
US20160063410A1 true US20160063410A1 (en) | 2016-03-03 |
Family
ID=55402904
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/472,353 Abandoned US20160063410A1 (en) | 2014-08-28 | 2014-08-28 | Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities |
Country Status (1)
Country | Link |
---|---|
US (1) | US20160063410A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170323272A1 (en) * | 2016-05-09 | 2017-11-09 | Bank Of America Corporation | System environment for user-specific program aggregation and non-collocated third party system extraction and deployment |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5944769A (en) * | 1996-11-08 | 1999-08-31 | Zip2 Corporation | Interactive network directory service with integrated maps and directions |
US6487495B1 (en) * | 2000-06-02 | 2002-11-26 | Navigation Technologies Corporation | Navigation applications using related location-referenced keywords |
US20090094235A1 (en) * | 2007-09-24 | 2009-04-09 | Jingle Networks, Inc. | Ordering directory assistance search results by local popularity of search results |
US20090106681A1 (en) * | 2007-10-19 | 2009-04-23 | Abhinav Gupta | Method and apparatus for geographic specific search results including a map-based display |
US7761439B1 (en) * | 2004-06-30 | 2010-07-20 | Google Inc. | Systems and methods for performing a directory search |
US20120143859A1 (en) * | 2010-12-01 | 2012-06-07 | Microsoft Corporation | Real-time personalized recommendation of location-related entities |
US8312010B1 (en) * | 2007-08-16 | 2012-11-13 | Google Inc. | Local business ranking using mapping information |
US20130091463A1 (en) * | 2011-10-05 | 2013-04-11 | Paul Nordstrom | Semantic selection and purpose facilitation |
-
2014
- 2014-08-28 US US14/472,353 patent/US20160063410A1/en not_active Abandoned
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5944769A (en) * | 1996-11-08 | 1999-08-31 | Zip2 Corporation | Interactive network directory service with integrated maps and directions |
US6487495B1 (en) * | 2000-06-02 | 2002-11-26 | Navigation Technologies Corporation | Navigation applications using related location-referenced keywords |
US7761439B1 (en) * | 2004-06-30 | 2010-07-20 | Google Inc. | Systems and methods for performing a directory search |
US8312010B1 (en) * | 2007-08-16 | 2012-11-13 | Google Inc. | Local business ranking using mapping information |
US20090094235A1 (en) * | 2007-09-24 | 2009-04-09 | Jingle Networks, Inc. | Ordering directory assistance search results by local popularity of search results |
US20090106681A1 (en) * | 2007-10-19 | 2009-04-23 | Abhinav Gupta | Method and apparatus for geographic specific search results including a map-based display |
US20120143859A1 (en) * | 2010-12-01 | 2012-06-07 | Microsoft Corporation | Real-time personalized recommendation of location-related entities |
US20130091463A1 (en) * | 2011-10-05 | 2013-04-11 | Paul Nordstrom | Semantic selection and purpose facilitation |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170323272A1 (en) * | 2016-05-09 | 2017-11-09 | Bank Of America Corporation | System environment for user-specific program aggregation and non-collocated third party system extraction and deployment |
US10629300B2 (en) | 2016-05-09 | 2020-04-21 | Bank Of America Corporation | Geographic selection system based on resource allocation and distribution |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11755969B2 (en) | System and method for accessing healthcare appointments from multiple disparate sources | |
US20160062605A1 (en) | Systems and methods for providing suggested reminders | |
US9600512B2 (en) | Systems and methods for implementing customized drop-down menus | |
US10083488B2 (en) | Purchasing contact information from an electronically displayed map | |
US11016872B1 (en) | Determining a user habit | |
US11049599B2 (en) | Zero knowledge multi-party prescription management and drug interaction prevention system | |
US9535573B2 (en) | Systems and methods for dynamic list views and detail pages | |
CN106663246B (en) | System and method for biased task assisted autocomplete suggestion | |
KR20100095315A (en) | System and providing method for supporting financial consultant business by interoperating web and mobile | |
US10599620B2 (en) | Method and system for object synchronization in CRM systems | |
US9462002B2 (en) | System, method, and computer program product for sharing files based on user profile visibility | |
US10503801B1 (en) | Graphical user interfaces (GUIs) for improvements in case management and docketing | |
US20200167880A1 (en) | Electronic physician referral management system and methods | |
US11138222B2 (en) | Enabling multiple third-party data services to update custom data objects | |
US20160063410A1 (en) | Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities | |
JP2017123068A (en) | Reservation processing device, user terminal and reservation processing method | |
US20150169729A1 (en) | Data storage device and data storing method | |
CN109284423A (en) | Business option card lookup method and device | |
JP6092990B1 (en) | Reservation processing device, reservation processing method, and reservation processing program | |
US11328348B2 (en) | Obfuscated service provider identity during client selection | |
US9785620B2 (en) | Creating linked communications | |
CN111506644B (en) | Application data processing method and device and electronic equipment | |
US20160063450A1 (en) | Systems and Methods for Task Countdowns for Specified Tasks | |
US8386953B1 (en) | Accordion user interface | |
JP2017097790A (en) | Reservation processing device, reservation processing method, and reservation processing program |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:TSAY, JACQUELINE AMY;SOHN, TIMOTHY YOUNGJIN;UMAPATHY, VIJAY;REEL/FRAME:033780/0856Effective date: 20140827 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
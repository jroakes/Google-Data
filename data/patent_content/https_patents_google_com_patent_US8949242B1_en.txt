US8949242B1 - Semantic document analysis - Google Patents
Semantic document analysis Download PDFInfo
- Publication number
- US8949242B1 US8949242B1 US13/011,456 US201113011456A US8949242B1 US 8949242 B1 US8949242 B1 US 8949242B1 US 201113011456 A US201113011456 A US 201113011456A US 8949242 B1 US8949242 B1 US 8949242B1
- Authority
- US
- United States
- Prior art keywords
- segment
- document
- semantic
- similarity
- determining
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/36—Creation of semantic tools, e.g. ontology or thesauri
Definitions
- This specification relates to semantic document analysis.
- a framework is provided to perform time series analysis of semantic changes in documents that helps to detect changes between versions of the same document that are relevant to a main topic of the document. This may be accomplished, for example, by generating semantic vectors representing current and previous versions of a document and segments of the document. The similarity between the vectors and changes in similarity are then monitored over time to determine whether the content provided in a segment of the document relates to the main topic of the document, or whether the segment has changed in a statistically expected way. In this way, the most important and relevant segments of a document may be identified and distinguished from segments that do not behave in a statistically expected way.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of segmenting a document into segments; generating semantic representations, each corresponding to one of the segments; determining a corresponding segment score for one or more of the segments based on the corresponding semantic representation, such that each segment score represents a change in the corresponding segment; comparing each segment score to a threshold score, such that the threshold score represents an expectation of change for the document; and identifying segments having segment scores that indicate the change in the corresponding segment deviates from the expectation of change for the document based on the comparison.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- Determining a corresponding segment score for one or more of the segments based on the corresponding semantic representation can include determining a measure of similarity between the corresponding semantic representation of a first segment and a previous semantic representation of the first segment; determining an average measure of similarity between consecutive semantic representations of the first segment; and determining a difference between the measure of similarity and the average measure of similarity, such that the corresponding segment score is based, at least in part, on the difference.
- the corresponding semantic representation of the first segment and the previous semantic representation can be L2 normalized vectors, and determining the measure of similarity can include computing a dot product between the corresponding semantic representation of the first segment and the previous semantic representation.
- Determining a corresponding segment score for one or more of the segments based on the corresponding semantic representation can include determining a measure of similarity between the corresponding semantic representation of a first segment and an average semantic representation of the first segment, the average semantic representation derived from prior semantic representations of the first segment; determining an average measure of similarity between a previous semantic representation of the first segment and a previous average semantic representation of the first segment, the previous average semantic representation derived from earlier semantic representations of the first segment; and determining a difference between the measure of similarity and the average measure of similarity, such that the corresponding segment score is based, at least in part, on the difference.
- Determining a corresponding segment score for one or more of the segments based on the corresponding semantic representation can include determining a measure of similarity between the corresponding semantic representation of a first segment and a semantic representation of the document; determining an average measure of similarity between previous semantic representations of the first segment and previous semantic representations of the document; and determining a difference between the measure of similarity and the average measure of similarity, such that the corresponding segment score is based, at least in part, on the difference.
- the acts can include: filtering segments identified as having segment scores that indicate the change in the corresponding segment deviates from the expectation of change for the document; and generating a semantic representation for the document based on semantic representations corresponding to unfiltered segments.
- Generating semantic representations, each corresponding to one of the segments can include forming a semantic vector for one or more of the segments, such that each element of the vector has a weight corresponding to a term frequency-inverse document frequency (TF-IDF) score of a corresponding term in the document.
- TF-IDF term frequency-inverse document frequency
- the most important sections of a document can be determined by using observations of different versions of the document and monitoring the semantic deviations of each section of the document over time.
- Several versions of each document can be analyzed for their semantic content, and the most important and relevant portions of a document can be retained for further use.
- Relevancy detection can be accomplished by building semantic representations for sections of a document and observing how consistent the sections are over time. Changes to documents that are important can be provided to users as updates in a news feed or other fashion, while changes that users would not find interesting are filtered out.
- the precision of updates is improved by filtering out unrelated document segments and identification of the main subject of a document.
- FIG. 1 illustrates an example system for performing semantic analysis of documents.
- FIG. 2 is a flow chart of a technique for detecting relevant changes to a document.
- FIG. 3 is a block diagram of a semantic analysis system.
- a new version of a document 102 is considered as input to the system 100 .
- a document can be a markup language document, a word processing document, a portable document format (PDF) document, or a feed source, to name just a few.
- PDF portable document format
- the document 102 is then segmented by a page segmentor 104 into page segments 106 according to, for example, the Hypertext Markup Language (HTML) structure of the document 102 .
- the content is segmented using a set of heuristic rules, e.g., rules based on the use of html tags embedded in the content, to group semantically similar sections together.
- content from a news resource may be segmented into a latest news section, a front page section, an advertisement section, a hot topic section, and a footer section based on similarities in HTML tags and various common patterns in HTML documents.
- the segments 106 are provided to a semantic processor 108 which creates a semantic representation 110 for each segment in the form of a semantic vector, for instance.
- semantic vectors there are several approaches for forming semantic vectors, such as using the term frequency-inverse document frequency (TF-IDF) score of the terms in the document, a summation of term representations, or a representation based on clusters of related words, for instance.
- TF-IDF term frequencies are counted for a given segment based on some representative corpus used for IDF values, and each term having a non zero frequency can be given a score of TF ⁇ IDF.
- Other semantic representations of document segments are possible.
- the semantic vectors are then compared to the previous semantic vectors of the corresponding segments by the semantic history analyzer 114 . With different representations of a segment, the differences that have taken place can be evaluated, and the characteristics of the document as a whole can be inferred.
- segments can be dropped by the segment filter 116 if they do not behave in a statistically expected way.
- the remaining segments 118 can be provided to a user news feed or other process.
- this analysis By performing this analysis over a long period of time, an expectation of how the document as a whole changes is generated. Any segment which does not change in a way described by this expected change can then be discounted, and any updates generated from that segment, for example, based on detected content changes, discarded. Ultimately, this analysis scores each segment based on its relevancy to the main content of the document, so that sections which will drive users to the document will have a higher rating of relevancy, and other sections will have a lower rating.
- semantic analysis of documents can be broken up into a series of steps, for example, as illustrated in FIG. 2 .
- the semantic analysis is performed by first segmenting a document ( 202 ).
- a document can be segmented, for example, based on the Hypertext Markup Language (HTML) structure of the document.
- HTML Hypertext Markup Language
- the document is segmented based on similarities in HTML tags and various common patterns in HTML documents. Other ways of segmenting the document are possible.
- a semantic representation of each segment is generated ( 204 ).
- each segment is represented by a semantic vector consisting of term representations, i.e., vector elements, where term frequencies are counted for a given segment based on some representative corpus used for IDF values, and each term having a non zero frequency is given a score of TF ⁇ IDF, where the score is the weight of the term representation in the semantic vector.
- term representations i.e., vector elements
- each term having a non zero frequency is given a score of TF ⁇ IDF, where the score is the weight of the term representation in the semantic vector.
- the representation is compared to a previous semantic representation corresponding to the same segment or segments ( 206 ).
- the comparison is performed by determining a similarity between the two semantic representations.
- the similarity can be determined by L2 normalizing the vectors and then calculating the dot product of the two vectors to obtain the cosine of the angle between the vectors.
- the similarity between two consecutive segment representations of a segment are stored for use in determining how the segment or the document can be expected to change.
- segment level statistics are calculated and maintained for multiple comparisons of a corresponding segment, include, for example, a rolling average of the similarity between two consecutive segment representations over time, the variance of the segment's similarity, the change in similarity between the current comparison and the most recent comparison, the average change in similarity each time two vector pairs are compared, and the variance of this average delta.
- Document level statistics are determined ( 208 ) based on the segment level statistics, e.g., by drawing inferences from information derived from multiple comparisons obtained over time.
- the document level statistics, segment level statistics, or a combination thereof are then combined to represent an expected conceptual change of the document and to determine if current changes to segments conform to the expected change.
- the expected conceptual change of the document is represented by an average rate of change in the similarity between consecutive semantic representations of a segment, a value indicating the similarity of the segment to the collective representation of the document, and an average rate of change in that value.
- the changes in segments are compared to the document level statistics ( 210 ), for example, to identify changes that are different from an expectation of change for the document.
- identified changes are utilized to remove segments which consistently change differently from the expectation and to store the most recent representations for remaining segments which can then be used to derive an updated expectation of change for the document.
- the remaining segments may also be used to distinguish important sections of the document in filtering or sorting documents, or in generating a news feed of relevant updated content.
- a series of semantic representations are collected by creating a semantic representation of each segment of a document each time the document is updated or input to system 100 , for example.
- the series of semantic representations is used to determine the semantic consistency of a segment and the semantic relevancy of a segment to the main topic at a single point in time and the main topic over the document's history.
- Semantic consistency can be defined as the degree to which a segment pertains to a single set of topics.
- a highly consistent segment would be a single block of text, such as a section of a Wikipedia document, which has a concrete and constant focus.
- a highly inconsistent segment would be a news headline section of a document, where on each update any recent headline could potentially be part of the content.
- the semantic consistency of a segment is determined based on the similarity of the most current representation of a segment to its previous representation and an moving average of this similarity.
- the similarity between two vectors is determined, for example, by the cosine of the angle ⁇ between the two vectors.
- all vectors are L2 normalized, i.e. each vector represents a point on a unit sphere in very high dimensional space, and the similarity between two vectors is determined by taking the dot product of the two vectors.
- various implementations also generate other segment level statistics, including, for example, a rolling average of the similarity between two consecutive segment representations over time, the variance of the segment's similarity, the change in similarity between the current comparison and the most recent comparison, the average change in similarity each time two vector pairs are compared, and the variance of this average delta.
- these segment level statistics and the most recent semantic representation of each segment are stored in a database.
- semantic representations of each segment are maintained over longer periods of time for computing more long term shifts, such as the shift found over one week, or one month.
- a set of document level statistics representing the document are generated to account for documents having multiple segments. These statistics are generated by computing a set of averages, and variances, over the various segment level statistics. For this, each segment is weighted by the percentage of text the segment contributes to the document as a whole. In further implementations, this weight incorporates the visual presence of the segment in the document, as determined from rendering the document. For instance, in some examples, the weight for each segment is based, at least in part, on the relative size of the segment within the rendered layout such that segments occupying larger areas are weighted more heavily.
- a segment having a display width greater than 50% of the overall document width and a segment height greater than 50% of the overall document height indicates the segment is a predominant section within the document and is, therefore, likely to be more important than a segment having a much smaller height ratio located at the bottom of the document such as a footer section.
- the set of document level statistics includes: the average segment similarity, the variance of segment similarity, the average similarity of segments over time, the variance of the similarity of segments over time, the largest segment size, the similarity of the largest segment with respect to the document vector, the average size of segments, and the variance of the size of segments.
- semantic vectors for segments which are within some tight bound of the expected average segment are averaged together to create a document level representation, or “document vector,” of the core segments or “main topic” for a document.
- the document vector in some implementations is calculated as the average of semantic vectors whose similarities are within some standard deviation of the mean of all semantic vectors for the document.
- a damping factor is applied to the document vector, e.g. 0.25. This representation is used to generate, for each segment, a value indicating the similarity of the segment to the collective representation of the document.
- the segment level and document level statistics are used to determine and assign, for each segment, a segment score representing the probability that the segment is changing at the same rate as the average segment of the document.
- the full weighted score of a segment is a weighted sum of two probabilities that the segment changes at the expected rate—one from the average similarity, and one from the average similarity over time—and the similarity of the segment to the collective representation of the document, e.g., based on the dot product between the document vector and the document level representation for the segment.
- This single score captures both how much this segment has changed in the most current update, and how much this segment has changed in general. Segments are discarded if they differ on both dimensions, i.e. they change more than expected consistently over a period of time, and they continue to change more than expected.
- the reference similarity provides an indication of the deviation between the semantic representation of a segment and the main topic of the document—i.e., the document vector.
- the similarity score provides an indication of the deviation between the two most recent semantic representations of a segment and the average deviation between consecutive semantic representations of the segment over time.
- the average similarity provides an indication of the deviation between the semantic representation of a segment and the average semantic representation for the same segment over time.
- the segment score corresponding to each segment of a document is used to determine whether or not the segment should be filtered out. If the segment score is less than some threshold, the segment is considered irrelevant, and thus filtered. For example, in some implementations, if a segment's score is ⁇ 0.5, the segment is filtered out.
- pages can be broadly classified as portal pages or subject pages. While subject pages have some segments which change either at a fixed rate, or very infrequently overall, portal pages typically have no real expected amount of change, with each segment changing uniquely, and frequently.
- documents such as portal web pages or links page provide information from diverse sources such that the document has no consistency over all.
- some implementations limit the size of filtered segments. For example, in some implementations, if, after filtering all the segments of the document, a significant portion of the document is filtered out, then all the filtering is dropped. If the size of filtered segments is below a threshold detailing how much should be dropped, the filtering is maintained.
- semantic based information is correlated with external signals such as click-thru rates. For example, if search queries lead to a high click through rate to the document, with few users leaving the document and selecting another search result, they can be viewed as an explicit declaration of the document's main topic. These queries can then be combined together and used to generate a single semantic representation which provides another reference point for relevancy, much like the main topic representation of a document.
- An electronic document which for brevity is simply referred to herein as a document, may, but need not, correspond to a file.
- a document may be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
- FIG. 3 is a schematic diagram of an example system configured to perform time series analysis of semantic changes in documents that helps to detect changes between versions of the same document that are relevant to a main topic of the document.
- the system generally consists of a server 302 .
- the server 302 is optionally connected to one or more user or client computers 390 through a network 380 .
- the server 302 consists of one or more data processing apparatus. While only one data processing apparatus is shown in FIG. 3 , multiple data processing apparatus can be used.
- the server 302 includes various modules, e.g.
- executable software programs including a page segmentor 304 for segmenting a document into page segments, a semantic processor 306 for generating semantic representations for each segment in the form of semantic vectors, a semantic history analyzer 308 for comparing semantic vectors to previous semantic vectors and for extrapolating an expected conceptual change in the document, and a segment filter 310 for identifying segments that do not behave in a statistically expected way.
- Each module runs as part of the operating system on the server 302 , runs as an application on the server 302 , or runs as part of the operating system and part of an application on the server 302 , for instance.
- the software modules can be distributed on one or more data processing apparatus connected by one or more networks or other suitable communication mediums.
- the server 302 also includes hardware or firmware devices including one or more processors 312 , one or more additional devices 314 , a computer readable medium 316 , a communication interface 318 , and one or more user interface devices 320 .
- Each processor 312 is capable of processing instructions for execution within the server 302 .
- the processor 312 is a single or multi-threaded processor.
- Each processor 312 is capable of processing instructions stored on the computer readable medium 316 or on a storage device such as one of the additional devices 314 .
- the server 302 uses its communication interface 318 to communicate with one or more computers 390 , for example, over a network 380 .
- Examples of user interface devices 320 include a display, a camera, a speaker, a microphone, a tactile feedback device, a keyboard, and a mouse.
- the server 302 can store instructions that implement operations associated with the modules described above, for example, on the computer readable medium 316 or one or more additional devices 314 , for example, one or more of a floppy disk device, a hard disk device, an optical disk device, or a tape device.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media, e.g., multiple CDs, disks, or other storage devices.
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA, or field programmable gate array, or an ASIC, or application-specific integrated circuit.
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program also known as a program, software, software application, script, or code
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub-programs, or portions of code.
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA or an ASIC.
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending documents to
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network, e.g., the Internet, and peer-to-peer networks, e.g., ad hoc peer-to-peer networks.
- LAN local area network
- WAN wide area network
- Internet inter-network
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data, e.g., an HTML document, to a client device, e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction, can be received from the client device at the server.
Abstract
Description
where x=the dot product of two consecutive semantic vectors for the same segment, average=the rolling average of this similarity, and std=standard deviation of this similarity; and
where x=the similarity between the current semantic vector and the average semantic vector for the same segment, average=the rolling average of this similarity, and std=the standard deviation of these similarities. In this way, the reference similarity provides an indication of the deviation between the semantic representation of a segment and the main topic of the document—i.e., the document vector. The similarity score provides an indication of the deviation between the two most recent semantic representations of a segment and the average deviation between consecutive semantic representations of the segment over time. Finally, the average similarity provides an indication of the deviation between the semantic representation of a segment and the average semantic representation for the same segment over time. Thus, the weighted combination of these components provides a measure of consistency and relevancy such that scores exceeding a threshold indicate the segment has changed in a way that is different from an expected change. Other ways of calculating the document segment score are possible, including using different weights.
Claims (25)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/011,456 US8949242B1 (en) | 2010-01-21 | 2011-01-21 | Semantic document analysis |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US29718110P | 2010-01-21 | 2010-01-21 | |
US13/011,456 US8949242B1 (en) | 2010-01-21 | 2011-01-21 | Semantic document analysis |
Publications (1)
Publication Number | Publication Date |
---|---|
US8949242B1 true US8949242B1 (en) | 2015-02-03 |
Family
ID=52395799
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/011,456 Active 2031-08-07 US8949242B1 (en) | 2010-01-21 | 2011-01-21 | Semantic document analysis |
Country Status (1)
Country | Link |
---|---|
US (1) | US8949242B1 (en) |
Cited By (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140280204A1 (en) * | 2013-03-14 | 2014-09-18 | International Business Machines Corporation | Document Provenance Scoring Based On Changes Between Document Versions |
US20170083507A1 (en) * | 2015-09-22 | 2017-03-23 | International Business Machines Corporation | Analyzing Concepts Over Time |
US20170124217A1 (en) * | 2015-10-30 | 2017-05-04 | International Business Machines Corporation | System, method, and recording medium for knowledge graph augmentation through schema extension |
US9817806B1 (en) | 2016-06-28 | 2017-11-14 | International Business Machines Corporation | Entity-based content change management within a document content management system |
US20180253471A1 (en) * | 2017-03-06 | 2018-09-06 | Yahoo Holdings Inc. | Method and system for query optimization |
US10073882B1 (en) * | 2013-07-15 | 2018-09-11 | Google Llc | Semantically equivalent query templates |
US10229042B2 (en) | 2017-01-19 | 2019-03-12 | International Business Machines Corporation | Detection of meaningful changes in content |
CN111488931A (en) * | 2020-04-10 | 2020-08-04 | 腾讯科技（深圳）有限公司 | Article quality evaluation method, article recommendation method and corresponding devices |
CN111797634A (en) * | 2020-06-04 | 2020-10-20 | 语联网（武汉）信息技术有限公司 | Document segmentation method and device |
US11017301B2 (en) | 2015-07-27 | 2021-05-25 | International Business Machines Corporation | Obtaining and using a distributed representation of concepts as vectors |
US11068791B2 (en) * | 2016-09-14 | 2021-07-20 | International Business Machines Corporation | Providing recommendations utilizing a user profile |
US11397776B2 (en) | 2019-01-31 | 2022-07-26 | At&T Intellectual Property I, L.P. | Systems and methods for automated information retrieval |
US11455464B2 (en) * | 2019-09-18 | 2022-09-27 | Accenture Global Solutions Limited | Document content classification and alteration |
US20220382728A1 (en) * | 2021-06-01 | 2022-12-01 | Microsoft Technology Licensing, Llc | Automated generation of revision summaries |
US11599580B2 (en) * | 2018-11-29 | 2023-03-07 | Tata Consultancy Services Limited | Method and system to extract domain concepts to create domain dictionaries and ontologies |
US11645577B2 (en) | 2019-05-21 | 2023-05-09 | International Business Machines Corporation | Detecting changes between documents using a machine learning classifier |
US11940953B2 (en) | 2019-11-25 | 2024-03-26 | International Business Machines Corporation | Assisted updating of electronic documents |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050138028A1 (en) * | 2003-12-17 | 2005-06-23 | International Business Machines Corporation | Processing, browsing and searching an electronic document |
US8005841B1 (en) * | 2006-04-28 | 2011-08-23 | Qurio Holdings, Inc. | Methods, systems, and products for classifying content segments |
-
2011
- 2011-01-21 US US13/011,456 patent/US8949242B1/en active Active
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050138028A1 (en) * | 2003-12-17 | 2005-06-23 | International Business Machines Corporation | Processing, browsing and searching an electronic document |
US8005841B1 (en) * | 2006-04-28 | 2011-08-23 | Qurio Holdings, Inc. | Methods, systems, and products for classifying content segments |
Non-Patent Citations (5)
Title |
---|
"Vector Space Model", [retrieved on Jan. 20, 2010], Wikipedia, Retrieved from the Internet: , 4 pages. |
"What Is LSA?", [retrieved on Jan. 20, 2010], Retrieved from the Internet: , 4 pages. |
"Vector Space Model", [retrieved on Jan. 20, 2010], Wikipedia, Retrieved from the Internet: <URL: http://en.wikipedia.org/w/index.php?ti%E2%80%A6>, 4 pages. |
"What Is LSA?", [retrieved on Jan. 20, 2010], Retrieved from the Internet: <URL: http://lsa3.colorado.edu/whatis.html>, 4 pages. |
Landauer, Thomas K., et al., "An Introduction to Latent Semantic Analysis", Discourse processes 25:2-3) (Jul. 1, 1998), pp. 259-294. |
Cited By (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140379657A1 (en) * | 2013-03-14 | 2014-12-25 | International Business Machines Corporation | Document Provenance Scoring Based On Changes Between Document Versions |
US11429651B2 (en) * | 2013-03-14 | 2022-08-30 | International Business Machines Corporation | Document provenance scoring based on changes between document versions |
US20140280204A1 (en) * | 2013-03-14 | 2014-09-18 | International Business Machines Corporation | Document Provenance Scoring Based On Changes Between Document Versions |
US10073882B1 (en) * | 2013-07-15 | 2018-09-11 | Google Llc | Semantically equivalent query templates |
US11017301B2 (en) | 2015-07-27 | 2021-05-25 | International Business Machines Corporation | Obtaining and using a distributed representation of concepts as vectors |
US10691766B2 (en) | 2015-09-22 | 2020-06-23 | International Business Machines Corporation | Analyzing concepts over time |
US9798818B2 (en) * | 2015-09-22 | 2017-10-24 | International Business Machines Corporation | Analyzing concepts over time |
US20170083507A1 (en) * | 2015-09-22 | 2017-03-23 | International Business Machines Corporation | Analyzing Concepts Over Time |
US11379548B2 (en) | 2015-09-22 | 2022-07-05 | International Business Machines Corporation | Analyzing concepts over time |
US10102294B2 (en) | 2015-09-22 | 2018-10-16 | International Business Machines Corporation | Analyzing concepts over time |
US10147036B2 (en) | 2015-09-22 | 2018-12-04 | International Business Machines Corporation | Analyzing concepts over time |
US10152550B2 (en) | 2015-09-22 | 2018-12-11 | International Business Machines Corporation | Analyzing concepts over time |
US10783202B2 (en) | 2015-09-22 | 2020-09-22 | International Business Machines Corporation | Analyzing concepts over time |
US10713323B2 (en) | 2015-09-22 | 2020-07-14 | International Business Machines Corporation | Analyzing concepts over time |
US10628507B2 (en) | 2015-09-22 | 2020-04-21 | International Business Machines Corporation | Analyzing concepts over time |
US10671683B2 (en) | 2015-09-22 | 2020-06-02 | International Business Machines Corporation | Analyzing concepts over time |
US10380187B2 (en) * | 2015-10-30 | 2019-08-13 | International Business Machines Corporation | System, method, and recording medium for knowledge graph augmentation through schema extension |
US20170124217A1 (en) * | 2015-10-30 | 2017-05-04 | International Business Machines Corporation | System, method, and recording medium for knowledge graph augmentation through schema extension |
US11204960B2 (en) | 2015-10-30 | 2021-12-21 | International Business Machines Corporation | Knowledge graph augmentation through schema extension |
US10007649B2 (en) | 2016-06-28 | 2018-06-26 | International Business Machines Corporation | Entity-based document content change management system |
US9817806B1 (en) | 2016-06-28 | 2017-11-14 | International Business Machines Corporation | Entity-based content change management within a document content management system |
US11068791B2 (en) * | 2016-09-14 | 2021-07-20 | International Business Machines Corporation | Providing recommendations utilizing a user profile |
US10229042B2 (en) | 2017-01-19 | 2019-03-12 | International Business Machines Corporation | Detection of meaningful changes in content |
US20180253471A1 (en) * | 2017-03-06 | 2018-09-06 | Yahoo Holdings Inc. | Method and system for query optimization |
US11599580B2 (en) * | 2018-11-29 | 2023-03-07 | Tata Consultancy Services Limited | Method and system to extract domain concepts to create domain dictionaries and ontologies |
US11397776B2 (en) | 2019-01-31 | 2022-07-26 | At&T Intellectual Property I, L.P. | Systems and methods for automated information retrieval |
US11645577B2 (en) | 2019-05-21 | 2023-05-09 | International Business Machines Corporation | Detecting changes between documents using a machine learning classifier |
US11455464B2 (en) * | 2019-09-18 | 2022-09-27 | Accenture Global Solutions Limited | Document content classification and alteration |
US11940953B2 (en) | 2019-11-25 | 2024-03-26 | International Business Machines Corporation | Assisted updating of electronic documents |
CN111488931B (en) * | 2020-04-10 | 2023-04-07 | 腾讯科技（深圳）有限公司 | Article quality evaluation method, article recommendation method and corresponding devices |
CN111488931A (en) * | 2020-04-10 | 2020-08-04 | 腾讯科技（深圳）有限公司 | Article quality evaluation method, article recommendation method and corresponding devices |
CN111797634A (en) * | 2020-06-04 | 2020-10-20 | 语联网（武汉）信息技术有限公司 | Document segmentation method and device |
CN111797634B (en) * | 2020-06-04 | 2023-09-08 | 语联网（武汉）信息技术有限公司 | Document segmentation method and device |
US20220382728A1 (en) * | 2021-06-01 | 2022-12-01 | Microsoft Technology Licensing, Llc | Automated generation of revision summaries |
US11714791B2 (en) * | 2021-06-01 | 2023-08-01 | Microsoft Technology Licensing, Llc | Automated generation of revision summaries |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8949242B1 (en) | Semantic document analysis | |
US11868375B2 (en) | Method, medium, and system for personalized content delivery | |
US20210374396A1 (en) | Systems, methods and computer readable media for identifying content to represent web pages and creating a representative image from the content | |
CN109997124B (en) | System and method for measuring semantic relevance of keywords | |
US8856146B2 (en) | Device for determining internet activity | |
US10095782B2 (en) | Summarization of short comments | |
US20170286429A1 (en) | Computer System for Automated Assessment at Scale of Topic-Specific Social Media Impact | |
US8990208B2 (en) | Information management and networking | |
US20100241647A1 (en) | Context-Aware Query Recommendations | |
US20150142767A1 (en) | Scoring authors of social network content | |
US20090319449A1 (en) | Providing context for web articles | |
US9900227B2 (en) | Analyzing changes in web analytics metrics | |
US8983898B1 (en) | Extracting instance attributes from text | |
KR101735312B1 (en) | Apparatus and system for detecting complex issues based on social media analysis and method thereof | |
US20160357857A1 (en) | Apparatus, system and method for string disambiguation and entity ranking | |
US9104746B1 (en) | Identifying contrarian terms based on website content | |
US9336330B2 (en) | Associating entities based on resource associations | |
Goarany et al. | Mining social tags to predict mashup patterns | |
US10334057B2 (en) | Pattern based optimization of digital component transmission | |
US20150169794A1 (en) | Updating location relevant user behavior statistics from classification errors | |
US8745059B1 (en) | Clustering queries for image search | |
US8332415B1 (en) | Determining spam in information collected by a source | |
US20160241671A1 (en) | Profile update evaluator | |
US8607140B1 (en) | Classifying changes to resources | |
US20150169628A1 (en) | Location detection from queries using evidence for location alternatives |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LIN, ZHEN;STEVENS, KEITH;REEL/FRAME:025877/0462Effective date: 20100707 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
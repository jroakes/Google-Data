EP3051377B1 - Intelligent controller providing time to target state - Google Patents
Intelligent controller providing time to target state Download PDFInfo
- Publication number
- EP3051377B1 EP3051377B1 EP16156765.6A EP16156765A EP3051377B1 EP 3051377 B1 EP3051377 B1 EP 3051377B1 EP 16156765 A EP16156765 A EP 16156765A EP 3051377 B1 EP3051377 B1 EP 3051377B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- global
- control
- time
- model
- temperature
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 230000008859 change Effects 0.000 claims description 32
- 238000000034 method Methods 0.000 claims description 26
- 230000007704 transition Effects 0.000 claims description 25
- 230000015654 memory Effects 0.000 claims description 13
- 238000012886 linear function Methods 0.000 claims description 7
- 230000004044 response Effects 0.000 description 94
- 238000004891 communication Methods 0.000 description 21
- 238000010586 diagram Methods 0.000 description 19
- 238000010438 heat treatment Methods 0.000 description 16
- 238000012545 processing Methods 0.000 description 16
- 230000006399 behavior Effects 0.000 description 8
- 238000013459 approach Methods 0.000 description 7
- 238000004364 calculation method Methods 0.000 description 7
- 230000001186 cumulative effect Effects 0.000 description 7
- 230000007613 environmental effect Effects 0.000 description 7
- 238000013500 data storage Methods 0.000 description 6
- 230000008569 process Effects 0.000 description 6
- 230000000694 effects Effects 0.000 description 5
- 238000012544 monitoring process Methods 0.000 description 5
- 230000008520 organization Effects 0.000 description 5
- 238000001816 cooling Methods 0.000 description 4
- 238000013480 data collection Methods 0.000 description 4
- 238000013461 design Methods 0.000 description 4
- 238000005516 engineering process Methods 0.000 description 4
- 230000006870 function Effects 0.000 description 4
- 238000012986 modification Methods 0.000 description 4
- 230000004048 modification Effects 0.000 description 4
- 238000003860 storage Methods 0.000 description 4
- 238000010276 construction Methods 0.000 description 3
- 238000009826 distribution Methods 0.000 description 3
- 230000000737 periodic effect Effects 0.000 description 3
- 238000004378 air conditioning Methods 0.000 description 2
- 238000004422 calculation algorithm Methods 0.000 description 2
- 238000011217 control strategy Methods 0.000 description 2
- 239000012530 fluid Substances 0.000 description 2
- 230000010365 information processing Effects 0.000 description 2
- 230000010354 integration Effects 0.000 description 2
- 238000003973 irrigation Methods 0.000 description 2
- 230000002262 irrigation Effects 0.000 description 2
- 238000013507 mapping Methods 0.000 description 2
- 239000008186 active pharmaceutical agent Substances 0.000 description 1
- 230000003044 adaptive effect Effects 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 230000004075 alteration Effects 0.000 description 1
- 239000000969 carrier Substances 0.000 description 1
- 238000012512 characterization method Methods 0.000 description 1
- 230000007748 combinatorial effect Effects 0.000 description 1
- 239000002131 composite material Substances 0.000 description 1
- 238000004590 computer program Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 238000009795 derivation Methods 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 238000011161 development Methods 0.000 description 1
- 230000005611 electricity Effects 0.000 description 1
- 238000002474 experimental method Methods 0.000 description 1
- 239000000835 fiber Substances 0.000 description 1
- 238000010348 incorporation Methods 0.000 description 1
- 238000009434 installation Methods 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 239000000463 material Substances 0.000 description 1
- 230000005055 memory storage Effects 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 239000013307 optical fiber Substances 0.000 description 1
- 239000013641 positive control Substances 0.000 description 1
- 238000012827 research and development Methods 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 238000007619 statistical method Methods 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 238000013519 translation Methods 0.000 description 1
- 238000009423 ventilation Methods 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/28—Data switching networks characterised by path configuration, e.g. LAN [Local Area Networks] or WAN [Wide Area Networks]
- H04L12/2803—Home automation networks
- H04L12/2823—Reporting information sensed by appliance or service execution status of appliance services in a home automation network
- H04L12/2825—Reporting to a device located outside the home and the home network
-
- F—MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
- F24—HEATING; RANGES; VENTILATING
- F24F—AIR-CONDITIONING; AIR-HUMIDIFICATION; VENTILATION; USE OF AIR CURRENTS FOR SCREENING
- F24F11/00—Control or safety arrangements
- F24F11/62—Control or safety arrangements characterised by the type of control or by internal processing, e.g. using fuzzy logic, adaptive control or estimation of values
- F24F11/63—Electronic processing
- F24F11/64—Electronic processing using pre-stored data
-
- F—MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
- F24—HEATING; RANGES; VENTILATING
- F24F—AIR-CONDITIONING; AIR-HUMIDIFICATION; VENTILATION; USE OF AIR CURRENTS FOR SCREENING
- F24F11/00—Control or safety arrangements
- F24F11/30—Control or safety arrangements for purposes related to the operation of the system, e.g. for safety or monitoring
-
- F—MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
- F24—HEATING; RANGES; VENTILATING
- F24F—AIR-CONDITIONING; AIR-HUMIDIFICATION; VENTILATION; USE OF AIR CURRENTS FOR SCREENING
- F24F11/00—Control or safety arrangements
- F24F11/50—Control or safety arrangements characterised by user interfaces or communication
- F24F11/52—Indication arrangements, e.g. displays
-
- F—MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
- F24—HEATING; RANGES; VENTILATING
- F24F—AIR-CONDITIONING; AIR-HUMIDIFICATION; VENTILATION; USE OF AIR CURRENTS FOR SCREENING
- F24F11/00—Control or safety arrangements
- F24F11/50—Control or safety arrangements characterised by user interfaces or communication
- F24F11/56—Remote control
- F24F11/58—Remote control using Internet communication
-
- F—MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
- F24—HEATING; RANGES; VENTILATING
- F24F—AIR-CONDITIONING; AIR-HUMIDIFICATION; VENTILATION; USE OF AIR CURRENTS FOR SCREENING
- F24F11/00—Control or safety arrangements
- F24F11/62—Control or safety arrangements characterised by the type of control or by internal processing, e.g. using fuzzy logic, adaptive control or estimation of values
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05B—CONTROL OR REGULATING SYSTEMS IN GENERAL; FUNCTIONAL ELEMENTS OF SUCH SYSTEMS; MONITORING OR TESTING ARRANGEMENTS FOR SUCH SYSTEMS OR ELEMENTS
- G05B13/00—Adaptive control systems, i.e. systems automatically adjusting themselves to have a performance which is optimum according to some preassigned criterion
- G05B13/02—Adaptive control systems, i.e. systems automatically adjusting themselves to have a performance which is optimum according to some preassigned criterion electric
- G05B13/04—Adaptive control systems, i.e. systems automatically adjusting themselves to have a performance which is optimum according to some preassigned criterion electric involving the use of models or simulators
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05B—CONTROL OR REGULATING SYSTEMS IN GENERAL; FUNCTIONAL ELEMENTS OF SUCH SYSTEMS; MONITORING OR TESTING ARRANGEMENTS FOR SUCH SYSTEMS OR ELEMENTS
- G05B15/00—Systems controlled by a computer
- G05B15/02—Systems controlled by a computer electric
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05B—CONTROL OR REGULATING SYSTEMS IN GENERAL; FUNCTIONAL ELEMENTS OF SUCH SYSTEMS; MONITORING OR TESTING ARRANGEMENTS FOR SUCH SYSTEMS OR ELEMENTS
- G05B17/00—Systems involving the use of models or simulators of said systems
- G05B17/02—Systems involving the use of models or simulators of said systems electric
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05B—CONTROL OR REGULATING SYSTEMS IN GENERAL; FUNCTIONAL ELEMENTS OF SUCH SYSTEMS; MONITORING OR TESTING ARRANGEMENTS FOR SUCH SYSTEMS OR ELEMENTS
- G05B19/00—Programme-control systems
- G05B19/02—Programme-control systems electric
- G05B19/418—Total factory control, i.e. centrally controlling a plurality of machines, e.g. direct or distributed numerical control [DNC], flexible manufacturing systems [FMS], integrated manufacturing systems [IMS], computer integrated manufacturing [CIM]
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D23/00—Control of temperature
- G05D23/19—Control of temperature characterised by the use of electric means
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D23/00—Control of temperature
- G05D23/19—Control of temperature characterised by the use of electric means
- G05D23/1902—Control of temperature characterised by the use of electric means characterised by the use of a variable reference value
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/28—Data switching networks characterised by path configuration, e.g. LAN [Local Area Networks] or WAN [Wide Area Networks]
- H04L12/2803—Home automation networks
- H04L12/2816—Controlling appliance services of a home automation network by calling their functionalities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/28—Data switching networks characterised by path configuration, e.g. LAN [Local Area Networks] or WAN [Wide Area Networks]
- H04L12/40—Bus networks
- H04L12/40006—Architecture of a communication node
- H04L12/40013—Details regarding a bus controller
-
- F—MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
- F24—HEATING; RANGES; VENTILATING
- F24F—AIR-CONDITIONING; AIR-HUMIDIFICATION; VENTILATION; USE OF AIR CURRENTS FOR SCREENING
- F24F11/00—Control or safety arrangements
- F24F11/50—Control or safety arrangements characterised by user interfaces or communication
- F24F11/61—Control or safety arrangements characterised by user interfaces or communication using timers
-
- F—MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
- F24—HEATING; RANGES; VENTILATING
- F24F—AIR-CONDITIONING; AIR-HUMIDIFICATION; VENTILATION; USE OF AIR CURRENTS FOR SCREENING
- F24F11/00—Control or safety arrangements
- F24F11/62—Control or safety arrangements characterised by the type of control or by internal processing, e.g. using fuzzy logic, adaptive control or estimation of values
- F24F11/63—Electronic processing
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05B—CONTROL OR REGULATING SYSTEMS IN GENERAL; FUNCTIONAL ELEMENTS OF SUCH SYSTEMS; MONITORING OR TESTING ARRANGEMENTS FOR SUCH SYSTEMS OR ELEMENTS
- G05B2219/00—Program-control systems
- G05B2219/20—Pc systems
- G05B2219/26—Pc applications
- G05B2219/2642—Domotique, domestic, home control, automation, smart house
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/28—Data switching networks characterised by path configuration, e.g. LAN [Local Area Networks] or WAN [Wide Area Networks]
- H04L12/2803—Home automation networks
- H04L2012/2847—Home automation networks characterised by the type of home appliance used
- H04L2012/285—Generic home appliances, e.g. refrigerators
Definitions
- the current patent application is directed to intelligent controllers and, in particular, to intelligent controllers, and methods incorporated within intelligent controllers, that continuously calculate, store in memory, and display projections regarding the time remaining until a target state is obtained.
- Control systems and control theory are well-developed fields of research and development that have had a profound impact on the design and development of a large number of systems and technologies, from airplanes, spacecraft, and other vehicle and transportation systems to computer systems, industrial manufacturing and operations facilities, machine tools, process machinery, and consumer devices.
- Control theory encompasses a large body of practical, system-control-design principles, but is also an important branch of theoretical and applied mathematics.
- Various different types of controllers are commonly employed in many different application domains, from simple closed-loop feedback controllers to complex, adaptive, state-space and differential-equations-based processor-controlled control systems.
- intelligent controllers include various types of displays, including text and graphical displays and display interfaces that allow text and graphical information to be displayed on any of various local and remote devices interconnected with the intelligent controllers. These displays, as discussed further below, are used for higher-level interactive control-input interfaces and control-schedule interfaces.
- many intelligent controllers display continuously, periodically, or intermittently updated information about regions or volumes controlled by the intelligent controllers and information related to control tasks submitted to the intelligent controllers.
- Designers, developers, manufacturers, and, ultimately, users of intelligent controllers continue to seek new types of information displays and information-display capabilities within, and provided by, intelligent controllers.
- JP H01 252850 presents a display device for air conditioning.
- a display means is allowed to index the lapse of time required from the present room temperature to a preset room temperature or the operating status up to the preset room temperature from the start of operation.
- the current application is directed to intelligent controllers that continuously, periodically, or intermittently calculate and display the time remaining until a control task is projected to be completed by the intelligent controller.
- the intelligent controller employs multiple different models for the time behavior of one or more parameters or characteristics within a region or volume affected by one or more devices, systems, or other entities controlled by the intelligent controller.
- the intelligent controller collects data, over time, from which the models are constructed and uses the models to predict the time remaining until one or more characteristics or parameters of the region or volume reaches one or more specified values as a result of intelligent controller control of one or more devices, systems, or other entities.
- the current application is directed to a general class of intelligent controllers that continuously, periodically, or intermittently calculate the time remaining until one or more characteristics or parameters of a region or volume reach one or more specified values as a result of control, by the intelligent controller, of a device, system, or other entity that operates on, or affects, the region or volume.
- the current application discloses, in addition to methods and implementations for calculating, storing, and displaying projections of the time remaining for completion of control tasks, a specific example of time-to-temperature methods and time-to-temperature displays in an intelligent controller that serves as a detailed example of the methods for calculating, storing, and displaying projections of the time remaining for completion of input control tasks employed by the general class of intelligent controllers to which the current application is directed.
- the intelligent thermostat is an example of a smart-home device.
- the detailed description includes three subsections: (1) an overview of the smart-home environment; (2) methods and implementations for calculating, storing, and displaying projections of the time remaining for completion of control tasks; and (3) methods and implementations for calculating, storing, and displaying projections of the time remaining for completion of control tasks in the context of an intelligent thermostat.
- the first subsection provides a description of one area of technology that offers many opportunities for application and incorporation of methods for displaying remaining-time projections.
- the second subsection provides a detailed description of a general class of intelligent controllers that determine, store, and display projections of the time remaining for completion of control tasks.
- the third subsection provides a specific example of time-to-temperature determinations made by intelligent thermostats.
- FIG. 1 illustrates a smart-home environment.
- the smart-home environment 100 includes a number of intelligent, multi-sensing, network-connected devices. These smart-home devices intercommunicate and are integrated together within the smart-home environment.
- the smart-home devices may also communicate with cloud-based smart-home control and/or data-processing systems in order to distribute control functionality, to access higher-capacity and more reliable computational facilities, and to integrate a particular smart home into a larger, multi-home or geographical smart-home-device-based aggregation.
- the smart-home devices may include one more intelligent thermostats 102, one or more intelligent hazard-detection units 104, one or more intelligent entryway-interface devices 106, smart switches, including smart wall-like switches 108, smart utilities interfaces and other services interfaces, such as smart wall-plug interfaces 110, and a wide variety of intelligent, multi-sensing, network-connected appliances 112, including refrigerators, televisions, washers, dryers, lights, audio systems, intercom systems, mechanical actuators, wall air conditioners, pool-heating units, irrigation systems, and many other types of intelligent appliances and systems.
- smart-home devices include one or more different types of sensors, one or more controllers and/or actuators, and one or more communications interfaces that connect the smart-home devices to other smart-home devices, routers, bridges, and hubs within a local smart-home environment, various different types of local computer systems, and to the Internet, through which a smart-home device may communicate with cloud-computing servers and other remote computing systems.
- Data communications are generally carried out using any of a large variety of different types of communications media and protocols, including wireless protocols, such as Wi-Fi, ZigBee, 6LoWPAN, various types of wired protocols, including CAT6 Ethernet, HomePlug, and other such wired protocols, and various other types of communications protocols and technologies.
- Smart-home devices may themselves operate as intermediate communications devices, such as repeaters, for other smart-home devices.
- the smart-home environment may additionally include a variety of different types of legacy appliances and devices 140 and 142 which lack communications interfaces and processor-based controllers.
- FIG. 2 illustrates integration of smart-home devices with remote devices and systems.
- Smart-home devices within a smart-home environment 200 can communicate through the Internet 202 via 3G/4G wireless communications 204, through a hubbed network 206, or by other communications interfaces and protocols.
- Many different types of smart-home-related data, and data derived from smart-home data 208 can be stored in, and retrieved from, a remote system 210, including a cloud-based remote system.
- the remote system may include various types of statistics, inference, and indexing engines 212 for data processing and derivation of additional information and rules related to the smart-home environment.
- the stored data can be exposed, via one or more communications media and protocols, in part or in whole, to various remote systems and organizations, including charities 214, governments 216, academic institutions 218, businesses 220, and utilities 222.
- the remote data-processing system 210 is managed or operated by an organization or vendor related to smart-home devices or contracted for remote data-processing and other services by a homeowner, landlord, dweller, or other smart-home-associated user.
- the data may also be further processed by additional commercial-entity data-processing systems 213 on behalf of the smart-homeowner or manager and/or the commercial entity or vendor which operates the remote data-processing system 210.
- external entities may collect, process, and expose information collected by smart-home devices within a smart-home environment, may process the information to produce various types of derived results which may be communicated to, and shared with, other remote entities, and may participate in monitoring and control of smart-home devices within the smart-home environment as well as monitoring and control of the smart-home environment.
- export of information from within the smart-home environment to remote entities may be strictly controlled and constrained, using encryption, access rights, authentication, and other well-known techniques, to ensure that information deemed confidential by the smart-home manager and/or by the remote data-processing system is not intentionally or unintentionally made available to additional external computing facilities, entities, organizations, and individuals.
- Figure 3 illustrates information processing within the environment of intercommunicating entities illustrated in Figure 2 .
- the various processing engines 212 within the external data-processing system 210 can process data with respect to a variety of different goals, including provision of managed services 302, various types of advertizing and communications 304, social-networking exchanges and other electronic social communications 306, and for various types of monitoring and rule-generation activities 308.
- the various processing engines 212 communicate directly or indirectly with smart-home devices 310-313, each of which may have data-consumer (“DC"), data-source (“DS”), services-consumer (“SC”), and services-source (“SS”) characteristics.
- the processing engines may access various other types of external information 316, including information obtained through the Internet, various remote information sources, and even remote sensor, audio, and video feeds and sources.
- Figure 4 illustrates a general class of intelligent controllers to which the current application is directed.
- the intelligent controller 402 controls a device, machine, system, or organization 404 via any of various different types of output control signals and receives information about the controlled entity and an environment from sensor output received by the intelligent controller from sensors embedded within the controlled entity 404, the intelligent controller 402, or in the environment.
- the intelligent controller is shown connected to the controlled entity 404 via a wire or fiber-based communications medium 406.
- the intelligent controller may be interconnected with the controlled entity by alternative types of communications media and communications protocols, including wireless communications.
- the intelligent controller and controlled entity may be implemented and packaged together as a single system that includes both the intelligent controller and a machine, device, system, or organization controlled by the intelligent controller.
- the controlled entity may include multiple devices, machines, system, or organizations and the intelligent controller may itself be distributed among multiple components and discrete devices and systems.
- the intelligent controller In addition to outputting control signals to controlled entities and receiving sensor input, the intelligent controller also provides a user interface 410-413 through which a human user can input immediate-control inputs to the intelligent controller as well as create and modify the various types of control schedules, and may also provide the immediate-control and schedule interfaces to remote entities, including a user-operated processing device or a remote automated control system.
- the intelligent controller provides a graphical-display component 410 that displays a control schedule 416 and includes a number of input components 411-413 that provide a user interface for input of immediate-control directives to the intelligent controller for controlling the controlled entity or entities and input of scheduling-interface commands that control display of one or more control schedules, creation of control schedules, and modification of control schedules.
- the general class of intelligent controllers to which the current is directed receive sensor input, output control signals to one or more controlled entities, and provide a user interface that allows users to input immediate-control command inputs to the intelligent controller for translation by the intelligent controller into output control signals as well as to create and modify one or more control schedules that specify desired controlled-entity operational behavior over one or more time periods.
- the user interface may be included within the intelligent controller as input and display devices, may be provided through remote devices, including mobile phones, or may be provided both through controller-resident components as well as through remote devices.
- FIG. 5 illustrates additional internal features of an intelligent controller.
- An intelligent controller is generally implemented using one or more processors 502, electronic memory 504-507, and various types of microcontrollers 510-512, including a microcontroller 512 and transceiver 514 that together implement a communications port that allows the intelligent controller to exchange data and commands with one or more entities controlled by the intelligent controller, with other intelligent controllers, and with various remote computing facilities, including cloud-computing facilities through cloud-computing servers.
- an intelligent controller includes multiple different communications ports and interfaces for communicating by various different protocols through different types of communications media.
- intelligent controllers for example, to use wireless communications to communicate with other wireless-enabled intelligent controllers within an environment and with mobile-communications carriers as well as any of various wired communications protocols and media.
- an intelligent controller may use only a single type of communications protocol, particularly when packaged together with the controlled entities as a single system.
- Electronic memories within an intelligent controller may include both volatile and non-volatile memories, with low-latency, high-speed volatile memories facilitating execution of control routines by the one or more processors and slower, non-volatile memories storing control routines and data that need to survive power-on/power-off cycles.
- Certain types of intelligent controllers may additionally include mass-storage devices.
- FIG. 6 illustrates a generalized computer architecture that represents an example of the type of computing machinery that may be included in an intelligent controller, server computer, and other processor-based intelligent devices and systems.
- the computing machinery includes one or multiple central processing units (“CPUs”) 602-605, one or more electronic memories 608 interconnected with the CPUs by a CPU/memory-subsystem bus 610 or multiple busses, a first bridge 612 that interconnects the CPU/memory-subsystem bus 610 with additional busses 614 and 616 and/or other types of high-speed interconnection media, including multiple, high-speed serial interconnects.
- CPUs central processing units
- first bridge 612 that interconnects the CPU/memory-subsystem bus 610 with additional busses 614 and 616 and/or other types of high-speed interconnection media, including multiple, high-speed serial interconnects.
- busses and/or serial interconnections connect the CPUs and memory with specialized processors, such as a graphics processor 618, and with one or more additional bridges 620, which are interconnected with high-speed serial links or with multiple controllers 622-627, such as controller 627, that provide access to various different types of mass-storage devices 628, electronic displays, input devices, and other such components, subcomponents, and computational resources.
- specialized processors such as a graphics processor 618
- additional bridges 620 which are interconnected with high-speed serial links or with multiple controllers 622-627, such as controller 627, that provide access to various different types of mass-storage devices 628, electronic displays, input devices, and other such components, subcomponents, and computational resources.
- FIG. 7 illustrates features and characteristics of an intelligent controller of the general class of intelligent controllers to which the current application is directed.
- An intelligent controller includes controller logic 702 generally implemented as electronic circuitry and processor-based computational components controlled by computer instructions stored in physical data-storage components, including various types of electronic memory and/or mass-storage devices.
- controller logic 702 generally implemented as electronic circuitry and processor-based computational components controlled by computer instructions stored in physical data-storage components, including various types of electronic memory and/or mass-storage devices.
- computer instructions stored in physical data-storage devices and executed within processors comprise the control components of a wide variety of modern devices, machines, and systems, and are as tangible, physical, and real as any other component of a device, machine, or system.
- statements are encountered that suggest that computer-instruction-implemented control logic is "merely software" or something abstract and less tangible than physical machine components.
- Computer instructions executed by processors must be physical entities stored in physical devices. Otherwise, the processors would not be able to access and execute the instructions.
- the term "software" can be applied to a symbolic representation of a program or routine, such as a printout or displayed list of programming-language statements, but such symbolic representations of computer programs are not executed by processors. Instead, processors fetch and execute computer instructions stored in physical states within physical data-storage devices.
- computer-readable media are physical data-storage media, such as disks, memories, and mass-storage devices that store data in a tangible, physical form that can be subsequently retrieved from the physical data-storage media.
- the controller logic accesses and uses a variety of different types of stored information and inputs in order to generate output control signals 704 that control the operational behavior of one or more controlled entities.
- the information used by the controller logic may include one or more stored control schedules 706, received output from one or more sensors 708-710, immediate control inputs received through an immediate-control interface 712, and data, commands, and other information received from remote data-processing systems, including cloud-based data-processing systems 713.
- the controller logic provides an interface 714 that allows users to create and modify control schedules and may also output data and information to remote entities, other intelligent controllers, and to users through an information-output interface.
- FIG. 8 illustrates a typical control environment within which an intelligent controller operates.
- an intelligent controller 802 receives control inputs from users or other entities 804 and uses the control inputs, along with stored control schedules and other information, to generate output control signals 805 that control operation of one or more controlled entities 808. Operation of the controlled entities may alter an environment within which sensors 810-812 are embedded.
- the sensors return sensor output, or feedback, to the intelligent controller 802. Based on this feedback, the intelligent controller modifies the output control signals in order to achieve a specified goal or goals for controlled-system operation. In essence, an intelligent controller modifies the output control signals according to two different feedback loops.
- the first, most direct feedback loop includes output from sensors that the controller can use to determine subsequent output control signals or control-output modification in order to achieve the desired goal for controlled-system operation.
- a second feedback loop involves environmental or other feedback 816 to users which, in turn, elicits subsequent user control and scheduling inputs to the intelligent controller 802.
- users can either be viewed as another type of sensor that outputs immediate-control directives and control-schedule changes, rather than raw sensor output, or can be viewed as a component of a higher-level feedback loop.
- sensor output is directly or indirectly related to some type of parameter, machine state, organization state, computational state, or physical environmental parameter.
- Figure 9 illustrates the general characteristics of sensor output.
- a sensor may output a signal, represented by curve 904, over time, with the signal directly or indirectly related to a parameter P , plotted with respect to the vertical axis 906.
- the sensor may output a signal continuously or at intervals, with the time of output plotted with respect to the horizontal axis 908.
- sensor output may be related to two or more parameters.
- a sensor outputs values directly or indirectly related to two different parameters P 1 and P 2 , plotted with respect to axes 912 and 914, respectively, over time, plotted with respect to vertical axis 916.
- sensors produce output directly or indirectly related to a single parameter, as in plot 902 in Figure 9 .
- the sensor output is assumed to be a set of parameter values for a parameter P.
- the parameter may be related to environmental conditions, such as temperature, ambient light level, sound level, and other such characteristics.
- the parameter may also be the position or positions of machine components, the data states of memory-storage address in data-storage devices, the current drawn from a power supply, the flow rate of a gas or fluid, the pressure of a gas or fluid, and many other types of parameters that comprise useful information for control purposes.
- Figures 10A-D illustrate information processed and generated by an intelligent controller during control operations. All the figures show plots, similar to plot 902 in Figure 9 , in which values of a parameter or another set of control-related values are plotted with respect to a vertical axis and time is plotted with respect to a horizontal axis.
- Figure 10A shows an idealized specification for the results of controlled-entity operation.
- the vertical axis 1002 in Figure 10A represents a specified parameter value, P S .
- the specified parameter value may be temperature.
- the specified parameter value may be flow rate.
- Figure 10A is the plot of a continuous curve 1004 that represents desired parameter values, over time, that an intelligent controller is directed to achieve through control of one or more devices, machines, or systems.
- the specification indicates that the parameter value is desired to be initially low 1006, then rise to a relatively high value 1008, then subside to an intermediate value 1010, and then again rise to a higher value 1012.
- a control specification can be visually displayed to a user, as one example, as a control schedule.
- Figure 10B shows an alternate view, or an encoded-data view, of a control schedule corresponding to the control specification illustrated in Figure 10A .
- the control schedule includes indications of a parameter-value increase 1016 corresponding to edge 1018 in Figure 10A , a parameter-value decrease 1020 corresponding to edge 1022 in Figure 10A , and a parameter-value increase 1024 corresponding to edge 1016 in Figure 10A .
- the directional arrows plotted in Figure 10B can be considered to be setpoints, or indications of desired parameter changes at particular points in time within some period of time.
- a setpoint change may be stored as a record with multiple fields, including fields that indicate whether the setpoint change is a system-generated setpoint or a user-generated setpoint, whether the setpoint change is an immediate-control-input setpoint change or a scheduled setpoint change, the time and date of creation of the setpoint change, the time and date of the last edit of the setpoint change, and other such fields.
- a setpoint may be associated with two or more parameter values.
- a range setpoint may indicate a range of parameter values within which the intelligent controller should maintain a controlled environment. Setpoint changes are often referred to as "setpoints.”
- Figure 10C illustrates the control output by an intelligent controller that might result from the control schedule illustrated in Figure 10B .
- the magnitude of an output control signal is plotted with respect to the vertical axis 1026.
- the control output may be a voltage signal output by an intelligent thermostat to a heating unit, with a high-voltage signal indicating that the heating unit should be currently operating and a low-voltage output indicating that the heating system should not be operating.
- Edge 1028 in Figure 10C corresponds to setpoint 1016 in Figure 10B .
- the width of the positive control output 1030 may be related to the length, or magnitude, of the desired parameter-value change, indicated by the length of setpoint arrow 1016.
- the intelligent controller discontinues output of a high-voltage signal, as represented by edge 1032. Similar positive output control signals 1034 and 1036 are elicited by setpoints 1020 and 1024 in Figure 10B .
- Figure 10D illustrates the observed parameter changes, as indicated by sensor output, resulting from control, by the intelligent controller, of one or more controlled entities.
- the sensor output directly or indirectly related to the parameter P, is plotted with respect to the vertical axis 1040.
- the observed parameter value is represented by a smooth, continuous curve 1042. Although this continuous curve can be seen to be related to the initial specification curve, plotted in Figure 10A , the observed curve does not exactly match that specification curve.
- the parameter value may begin to fall 1046, resulting in a feedback-initiated control output to resume operation of the controlled entity in order to maintain the desired parameter value.
- the desired high-level constant parameter value 1008 in Figure 10A may, in actuality, end up as a time-varying curve 1048 that does not exactly correspond to the control specification 1004.
- the first level of feedback discussed above with reference to Figure 8 , is used by the intelligent controller to control one or more control entities so that the observed parameter value, over time, as illustrated in Figure 10D , matches the specified time behavior of the parameter in Figure 10A as closely as possible.
- the second level feedback control loop may involve alteration of the specification, illustrated in Figure 10A , by a user, over time, either by changes to stored control schedules or by input of immediate-control directives, in order to generate a modified specification that produces a parameter-value/time curve reflective of a user's desired operational results.
- Figures 11A-C show three different types of control schedules.
- the control schedule is a continuous curve 1102 representing a parameter value, plotted with respect to the vertical axis 1104, as a function of time, plotted with respect to the horizontal axis 1106.
- the continuous curve comprises only horizontal and vertical sections. Horizontal sections represent periods of time at which the parameter is desired to remain constant and vertical sections represent desired changes in the parameter value at particular points in time.
- This is a simple type of control schedule and is used, below, in various examples of automated control-schedule learning.
- automated control-schedule-learning methods can also learn more complex types of schedules.
- Figure 11B shows a control schedule that includes not only horizontal and vertical segments, but arbitrarily angled straight-line segments.
- a change in the parameter value may be specified, by such a control schedule, to occur at a given rate, rather than specified to occur instantaneously, as in the simple control schedule shown in Figure 11A .
- Automated-control-schedule-learning methods may also accommodate smooth-continuous-curve-based control schedules, such as that shown in Figure 11C .
- the characterization and data encoding of smooth, continuous-curve-based control schedules, such as that shown in Figure 11C is more complex and includes a greater amount of stored data than the simpler control schedules shown in Figures 11B and 11A .
- a parameter value tends to relax towards lower values in the absence of system operation, such as when the parameter value is temperature and the controlled system is a heating unit.
- the parameter value may relax toward higher values in the absence of system operation, such as when the parameter value is temperature and the controlled system is an air conditioner.
- the direction of relaxation often corresponds to the direction of lower resource or expenditure by the system.
- the direction of relaxation may depend on the environment or other external conditions, such as when the parameter value is temperature and the controlled system is an HVAC system including both heating and cooling functionality.
- the continuous-curve-represented control schedule 1102 may be alternatively encoded as discrete setpoints corresponding to vertical segments, or edges, in the continuous curve.
- a continuous-curve control schedule is generally used, in the following discussion, to represent a stored control schedule either created by a user or remote entity via a schedule-creation interface provided by the intelligent controller or created by the intelligent controller based on already-existing control schedules, recorded immediate-control inputs, and/or recorded sensor data, or a combination of these types of information.
- Immediate-control inputs are also graphically represented in parameter-value versus time plots.
- Figures 12A-G show representations of immediate-control inputs that may be received and executed by an intelligent controller, and then recorded and overlaid onto control schedules, such as those discussed above with reference to F igures 11A-C , as part of automated control-schedule learning.
- An immediate-control input is represented graphically by a vertical line segment that ends in a small filled or shaded disk.
- Figure 12A shows representations of two immediate-control inputs 1202 and 1204.
- An immediate-control input is essentially equivalent to an edge in a control schedule, such as that shown in Figure 11A , that is input to an intelligent controller by a user or remote entity with the expectation that the input control will be immediately carried out by the intelligent controller, overriding any current control schedule specifying intelligent-controller operation.
- An immediate-control input is therefore a real-time setpoint input through a control-input interface to the intelligent controller.
- an immediate-control input alters the current control schedule
- an immediate-control input is generally associated with a subsequent, temporary control schedule, shown in Figure 12A as dashed horizontal and vertical lines that form a temporary-control-schedule parameter vs. time curve extending forward in time from the immediate-control input.
- Temporary control schedules 1206 and 1208 are associated with immediate-control inputs 1202 and 1204, respectively, in Figure 12A .
- Figure 12B illustrates an example of immediate-control input and associated temporary control schedule.
- the immediate-control input 1210 is essentially an input setpoint that overrides the current control schedule and directs the intelligent controller to control one or more controlled entities in order to achieve a parameter value equal to the vertical coordinate of the filled disk 1212 in the representation of the immediate-control input.
- a temporary constant-temperature control-schedule interval 1214 extends for a period of time following the immediate-control input, and the immediate-control input is then relaxed by a subsequent immediate-control-input endpoint, or subsequent setpoint 1216.
- the length of time for which the immediate-control input is maintained, in interval 1214 is a parameter of automated control-schedule learning.
- the direction and magnitude of the subsequent immediate-control-input endpoint setpoint 1216 represents one or more additional automated-control-schedule-learning parameters.
- an automated-control-schedule-learning parameter is an adjustable parameter that controls operation of automated control-schedule learning, and is different from the one or more parameter values plotted with respect to time that comprise control schedules.
- the parameter values plotted with respect to the vertical axis in the example control schedules to which the current discussion refers are related directly or indirectly to observables, including environmental conditions, machines states, and the like.
- Figure 12C shows an existing control schedule on which an immediate-control input is superimposed.
- the existing control schedule called for an increase in the parameter value P, represented by edge 1220, at 7:00 a.m. (1222 in Figure 12C ).
- the immediate-control input 1224 specifies an earlier parameter-value change of somewhat less magnitude.
- Figures 12D-G illustrate various subsequent temporary control schedules that may obtain, depending on various different implementations of intelligent-controller logic and/or current values of automated-control-schedule-learning parameter values.
- the temporary control schedule associated with an immediate-control input is shown with dashed line segments and that portion of the existing control schedule overridden by the immediate-control input is shown by dotted line segments.
- the desired parameter value indicated by the immediate-control input 1224 is maintained for a fixed period of time 1226 after which the temporary control schedule relaxes, as represented by edge 1228, to the parameter value that was specified by the control schedule at the point in time that the immediate-control input is carried out.
- This parameter value is maintained 1230 until the next scheduled setpoint, which corresponds to edge 1232 in Figure 12C , at which point the intelligent controller resumes control according to the control schedule.
- the parameter value specified by the immediate-control input 1224 is maintained 1232 until a next scheduled setpoint is reached, in this case the setpoint corresponding to edge 1220 in the control schedule shown in Figure 12C .
- the intelligent controller resumes control according to the existing control schedule. This approach is desired by certain users, who expect manually enetered setpoint to remain in force until a next scheduled setpoint change.
- the parameter value specified by the immediate-control input 1224 is maintained by the intelligent controller for a fixed period of time 1234, following which the parameter value that would have been specified by the existing control schedule at that point in time is resumed 1236.
- the parameter value specified by the immediate-control input 1224 is maintained 1238 until a setpoint with opposite direction from the immediate-control input is reached, at which the existing control schedule is resumed 1240.
- the immediate-control input may be relaxed further, to a lowest-reasonable level, in order to attempt to optimize system operation with respect to resource and/or energy expenditure.
- a user is compelled to positively select parameter values greater than, or less than, a parameter value associated with a minimal or low rate of energy or resource usage.
- an intelligent controller monitors immediate-control inputs and schedule changes over the course of a monitoring period, generally coinciding with the time span of a control schedule or subschedule, while controlling one or more entities according to an existing control schedule except as overridden by immediate-control inputs and input schedule changes.
- the recorded data is superimposed over the existing control schedule and a new provisional schedule is generated by combining features of the existing control schedule and schedule changes and immediate-control inputs.
- the new provisional schedule is promoted to the existing control schedule for future time intervals for which the existing control schedule is intended to control system operation.
- Figures 13A-D illustrate the general context in which intelligent controllers, to which the current application is directed, operate.
- this context comprises a region or volume 1302, one or more intelligent controllers 1304 and 1306, and one or more devices, systems, or other entities 1306-1308 that are controlled by the one or more intelligent controllers and that operate on the region or volume 1302.
- the intelligent controllers are described as controlling the region or volume 1302 although, in fact, they directly control the one or more devices, systems, or other entities 1306-1308.
- the region or volume 1302 may be a complex region or volume that includes multiple connected or separate subregions or subvolumes.
- the region, regions, volume, or volumes controlled by an intelligent controller is referred to, below, as the "controlled environment.”
- the intelligent controllers may reside within the environment, as intelligent controller 1304 shown in Figure 13A , or may reside externally, as, for example, intelligent controller 1306 in Figure 13A .
- the devices, systems, or other entities that operate on the environment 1306-1308 may reside within the environment, as, for example, system 1306 in Figure 13A , or may be located outside of the environment, as, for example, systems 1307-1308 in Figure 13A .
- the systems are HVAC systems and/or additional air conditioners and heaters and the intelligent controllers are intelligent thermostats, with the environment a residence, multi-family dwelling, commercial building, or industrial building that is heated, cooled, and/or ventilated by the systems controlled by the intelligent thermostats.
- the intelligent controllers 1304 and 1306 generally intercommunicate with one another and may additionally intercommunicate with a remote computing system 1310 to which certain of control tasks and intelligent-control-related computations are distributed.
- the intelligent controllers generally output control signals to, and receive data signals from, the systems 1306-1308 controlled by the intelligent controllers.
- the systems 1306-1308 are controlled by the intelligent controllers to operate on the environment 1302. This operation may involve exchange of various types of substances, operations that result in heat exchange with the environment, exchange of electrical current with the environment, and many other types of operations. These operations generally affect one or more characteristics or parameters of the environment which are directly or indirectly monitored by the intelligent controllers.
- the intelligent controllers to which the current application is directed, generally control the environment based on control schedules and immediate-control inputs that can be thought of as overlaid on or added to the control schedules.
- the context within which the general class of intelligent controllers operates is illustrated, in Figure 13C , with two plots 1312 and 1314.
- the first plot 1312 is a portion of a control schedule to which an immediate-control input 1316 has been added.
- the portion of the control schedule may feature a scheduled setpoint rather than the immediate-control input 1316.
- the vertical axis is labeled " P " 1318 to represent the value of a particular parameter or characteristic of the environment, referred to as an "environmental parameter," and the horizontal axis represents time 1320.
- the immediate-control input 1316 or, alternatively, a scheduled setpoint generally represent a desired change in the parameter or characteristic 1322, designated ⁇ P .
- the intelligent controller At the time of the immediate-control input, or before or at the time of a scheduled input, the intelligent controller generally outputs control signals to the systems in order to change the parameter or characteristic P by ⁇ P.
- ⁇ P is positive, with the desired parameter P greater than the current value of the parameter P , the ⁇ P may also be negative, with the desired value of P less than the current P.
- intelligent controllers control the systems with respect to multiple parameters, in which case there may be separate control schedules for each parameter, and multiple parameters may be combined together to form a composite parameter for a single control schedule.
- setpoints may be associated with multiple P values for each of one or more environmental parameters.
- each setpoint specifies a single parameter value, and that intelligent controllers output control signals to one or more systems in order to control the value of the parameter P within the controlled environment 1302.
- the parameter P changes, over time, in a continuous manner from the initial P value 1324 to the desired P value 1326.
- the P values cannot be instantaneously altered at times corresponding to immediate-control inputs or scheduled setpoints.
- ⁇ t 1328 referred to as the "response time” that separates the time of an immediate-control input or scheduled setpoint change in the time which the parameter value specified by the setpoint change or immediate-control input is achieved.
- Intelligent controllers to which the current application is directed model the P versus t behavior within this response-time ⁇ t interval 1328 so that, at any point in time during the response time, the time remaining to a point in time the desired t value is obtained, or, in other words, the remaining response time, can be displayed or reported.
- the intelligent controller calculates the length of time interval ⁇ t 1 1332, the remaining response time, and reports the length of this time interval in a textural, graphical, or numeric display output on an intelligent-controller display device, such as display device 410 in Figure 4 , or outputs the information through a remote-display interface for display on a remote display device, such as a smart phone.
- the information may include a remaining-response-time indication, an indication of the remaining response time relative to the entire response time, information including the response time so far elapsed, and other response-time related information. It should be noted that calculation of the time remaining before a desired P value is achieved may be used independently, for various different intelligent-controller operations, from the display of the remaining response time. For example, intelligent controllers may alter control strategies depending on the remaining response time computed for various different control strategies.
- Figure 13D shows various different conditions and effects that may alter the P versus t behavior of a controlled environment.
- the time of day, weather, and time of year 1340 may alter the P versus t behavior of the environment, referred to below as the environment's P response.
- the P response may also be altered by different types of inputs 1342-1344 to the systems or internal states of the systems. For example, a system that requires electricity for operation may be inoperable during power failures, as a result of which the P response during power failures may be substantially different than the P response when power is available.
- the P response may also be affected by external entities other than the systems 1346 which operate on the environment or by internal systems and devices other than systems 1306-1308 that operate on the environment 1348.
- changes to buildings or structures, such as opened windows 1350 may significantly alter the P response to the environment due to a thermal or material exchange 1352.
- FIGS 14A-E illustrate construction of one or more of a first type of P -response model based on observed P -response data.
- Figure 14A shows a collection of data by an intelligent controller and construction of a parameterized P -response curve from the data.
- the horizontal axis 1402 is a time axis with respect to which various data states are shown.
- the intelligent controller monitors the change in P value in time and plots points to represent an observed P -response curve.
- the first such plot 1404 represents the points plotted with respect to a first observed P -response curve of the intelligent controller.
- the points are stored in a file or database, often as encoded coordinate pairs, rather than plotted in a graphical plot.
- the stored data is referred to as a "plot" in the following discussion.
- Observation of a first P response generally produces a set of points, such as those shown plotted in plot 1404, that describe a general trend in P versus t behavior.
- the intelligent controller continues to make observations of P responses, over time, adding observed P versus t points to the plot, as shown by plots 1406-1409 in Figure 14A . After some time, were the recorded P versus t points plotted visually in a graph, they would form a relatively dense cloud of points that suggest a P versus t curve that describes the P response for the control environment.
- the intelligent controller can generate a parameterized model, or function, that statistically best fits the collected points, as represented in Figure 14A by parameterized plot 1410.
- a parameterized plot is a plot that is associated with a model that represents the observed P versus t data over the course of many P -response observations.
- the P -response data may be discarded following plot parameterization, or after passage of significant periods of time.
- Figure 14B illustrates one P -response-curve model.
- the model is non-linear between zero and about 15 minutes, is approximately linear for ten minutes, is again non-linear until about 35 minutes, and then flattens considerably thereafter.
- ⁇ P changes can be appropriate for certain ⁇ P changes and certain types of characteristics and parameters in certain environments acted on by certain types of devices and systems, but is certainly not appropriate for a large number or even a large fraction of possible controlled environments, ⁇ P changes, and characteristics and parameters.
- the expression is parameterized by two constants a and b.
- the model computes ⁇ P as a function of time, the function parameterized by and one or more constant-valued parameters that are determined for a given P and a given controlled environment.
- the slope of the straight-line portion of the P -response curve generated from the model can be varied by varying the value of parameter b , while the range in ⁇ P values can be altered by changing the value of parameter a .
- Many other types of models can be used for P -response curves.
- the parameterized model generated for a collection of observed P responses is generally only an estimate and, because of all the different factors that may affect P responses, the parameterized model is generally an estimate for the average P response of the controlled environment.
- the model curve to be plotted within the dense clouds of points representing the observed data, generally only a very few of the observed points would actually fall on the P -response curve generated by the model.
- Models are selected and evaluated by evaluating how well the data fits the model. There are many statistical methods that may be employed to compute the fit of a model to experimental data.
- Figures 14C-D illustrate one such method.
- Figure 14C shows the model P response curve in a graphical plot 1430 similar to that shown in Figure 14B along with one of the observed P versus t points 1432.
- the ⁇ P coordinate 1438 of the observed P versus t point is labeled ⁇ p o and the ⁇ P coordinate 1440 of the point on the model curve corresponding to time t 1 1410 is labeled ⁇ p c .
- FIG 14D it is often the case that fit values calculated from various different data sets fall into a particular type of probability distribution.
- One such probability distribution is shown in Figure 14D .
- the vertical axis 1460 represents the probability of observing a particular fit value and the horizontal axis 1462 represents the different possible fit values.
- the area under the probability-distribution curve to the right of the fit value 1466 shown cross-hatched in Figure 14D , represents the probability of observing the fit value 1464 or a fit value greater than that fit value.
- This probability can also be used to evaluate the reasonableness of the model with respect to observed data. When the probability of a fit value equal to or greater than the observed fit value falls below a threshold probability, the model may be rejected.
- the intelligent controller may, after observing each response and adding the data points for the observed P response to a plot, compute the fit value of various different models with respect to the data and, when one or more models is associated with a fit value less than a first threshold value or with a corresponding probability value greater than a second threshold value, the intelligent controller may select the best fitting model from the one or more models and generate a parameterized plot by associating the selected model, including selected constant values for the model parameters, with the plot. This constitutes what is referred to as "parameterizing the plot" in the following discussion. Once a plot is parameterized, the plot becomes a global model that can be used, by the intelligent controller, to predict remaining response time, or time-to, values for display and for other purposes.
- the parameterized plot may be continued to be refined, over time, following addition of new P -response data, including changing the global model associated with the parameterized plot and altering constant-parameter values. This refinement may continue indefinitely, or may be discontinued after a highly reliable model is constructed. Alternatively, the parameterized plot may represent a sliding data window, with only recent data used to select a current associated model and parameter values.
- An intelligent controller may generate various different parameterized models, also referred to as "global models," for various different conditions.
- Figure 14E illustrates generation of multiple global models as a continuation of the timeline shown in Figure 14A .
- the intelligent controller may elect to divide the collected data points among multiple plots 1412-1415 each collecting observed P responses under different conditions. For example, when it is determined that weather and outside-temperature are important influences on P responses, the intelligent controller may collect separate P -response data for sunny days, cloudy days, nighttime, days with high wind, and other such different weather conditions.
- Figure 14E illustrates division of the initial plot 1410 into four plots 1412-1415 arranged along a vertical parameter or condition dimension, such as a weather-and-temperature dimension. Then, as shown in Figure 14E , the intelligent controller may continue to collect data for each of these individual plots until they can be parameterized, with the parameterized plots shown in column 1420. At this point, the intelligent controller may then generate new plots, essentially extending the data collection along a new dimension, as represented by the column of sets of plots 1422 shown in Figure 14E .
- the intermediate global models, such as global model 1410 maybe retained in addition to the subsequently generated global models for particular conditions.
- an intelligent controller need not be constrained to generating only a single global model, but may generate multiple global models, each for a different condition or set of conditions, in order to better approximate P response curves that obtain under those conditions.
- the response model may depend on the magnitude of the ⁇ P represented by a scheduled setpoint change or immediate-input control.
- a second type of P -response model that may be employed by intelligent controllers is referred to as a "local model.”
- a local model A second type of P -response model that may be employed by intelligent controllers.
- Figures 15A-B illustrate several types of local modeling techniques.
- Figure 15A illustrates one type of local model.
- ⁇ t unstable 1502 Following output of control signals to one or more systems by an intelligent controller, there is a period of time referred to as ⁇ t unstable 1502 during which the P value may fail to change or actually change in the direction opposite from the desired direction.
- the ⁇ P versus t response may be nearly linear 1504.
- Figure 15B even when the response following the unstable period is not linear, but is instead a curve, the response may be approximated by a series of local linear models.
- global models and local models provide models of P responses.
- the global models are generally used during the initial portion of a response time following an immediate-control input or scheduled setpoint because, during this initial period of time, there is generally insufficient observed data to compute parameters for a local model and/or to select a particular local model.
- a local model can be selected and parameterized to provide more accurate remaining-response-time predictions up until the time that the desired P value is obtained. This is, however, not always the case.
- the global model is more predictive throughout the entire response time or that, after a local model is selected and used, the global model again, after another period of time, is again better able to predict the remaining-response-time value from a local model.
- neither global nor local models provide adequate predictive power. For this reason, many intelligent controllers of the class of intelligent controllers to which the current application is directed continuously reevaluate P -response models and attempt to select the best model for each point in time over an entire interval during which the remaining-response-time values are continuously, periodically, or intermittently calculated and displayed.
- Figure 16 illustrates a control-flow diagram for intelligent-controller operation.
- an intelligent controller at a high level, continuously operates within the context of an event handler or event loop.
- the intelligent controller waits for a next control event.
- the intelligent controller determines the type of event and invokes a corresponding control routine.
- the intelligent controller calls an immediate-control routine, in step 1606, to carry out the intelligent controller's portion of a user interaction to receive one or more immediate-control inputs that direct the intelligent controller to issue control signals, adjust a control schedule, and/or carry out other activities specified by a user through an intermediate-control interface.
- control event is a scheduled control event, such as when the current time corresponds to a time at which a control schedule specifies a control activity to be undertaken, as determined in step 1608, a schedule-control routine is called, in step 1610, to carry out the scheduled control event.
- the intelligent controller invokes a schedule-interaction routine, in step 1614, to carry out the intelligent controller's portion of a schedule-input or schedule-change dialog with the user through a schedule interface.
- the control event is a sensor event, as determined in step 1616 a sensor routine is called by the intelligent controller in step 1618 to process the sensor event.
- Sensor events may include interrupts generated by a sensor as a result of a change in sensor output, expiration of timers set to awaken the intelligent controller to process sensor data of a next-scheduled sensor-data-processing interval, and other such types of events.
- a timeTo event 1620 may occur during P -response data selection and is handled by a call to a timeTo event-handling routine 1622.
- a timeTo display event may occur during remaining-response-time display, as determined in step 1624, and is handled by a timeTo display event-handling routine called in step 1626.
- Figure 16 shows many other different types of events that may occur and may be handled by the intelligent-controller event handler or event loop illustrated in Figure 16 , including various different error events, power-on and power-off events, controller-reset events, and other events related to controller operation.
- Figure 16 also shows a default event handler 1630 that may be invoked to handle unusual or unexpected events.
- Figures 17-19D illustrate, using control-flow diagrams, functionality that allows an intelligent controller, in one implementation, to calculate and display remaining-response-time values, as discussed above with reference to Figures 13A-15B .
- Figure 17 illustrates functionality added to the immediate-control routine, called in step 1606 of Figure 16 , following an immediate-control event.
- This immediate-control routine shown in Figure 17 , assumes than an immediate-control event generates an immediate-control input.
- the immediate-control routine determines ⁇ P T , or the P -value difference between a currently observed P value and the P value specified by the immediate-control input.
- ⁇ P T value is greater than a threshold value, as determined in step 1704, the "begin timeTo" routine is called, in step 170,6 to begin data collection for a next observed P response, and the routine "begin timeTo display” is called in step 1708 to begin continuous, periodic, or intermittent display of a remaining-response-time value. Otherwise, a global variable displayMode is set to the triple ⁇ /none/ ⁇ in step 1710 to ensure that display of remaining-response-time values is not initiated. The values stored in the triple are discussed, below.
- steps 1712, 1714, and additional steps represented by ellipses 1716 are not further described, as they are related to receiving and implementing an immediate-control input. Steps similar to steps 1702, 1704, 1706, 1708, and 1710 may also be included at the beginning of the scheduled-control routine shown in step 1610 of Figure 16 .
- Figures 18A-E illustrate, using control-flow diagrams, the P -response data-collection machinery of one implementation of an intelligent controller.
- Figure 18A provides a control-flow diagram for the routine "begin timeTo," called in step 1706 of Figure 17 .
- the routine enters a current P versus t data point into the P -response record.
- the routine arranges for a subsequent timeTo event, such as setting a timeTo timer or arranging for subsequent interrupt.
- the routine "begin timeTo" sets up a P-response record for collecting data during a current response time, enters a first data point into the record, and schedules a next timeTo event for collection of a next data point.
- Figures 18B-C provide a control-flow diagram for the routine "timeTo” that is called to handle timeTo events in step 1622 in Figure 16 .
- the routine "timeTo” determines a value ⁇ P c with the magnitude of the P -value difference between the desired setpoint P value and the current P value.
- the routine "timeTo” enters a next P versus t data point into the P -response record.
- ⁇ P c is not less than a threshold value, indicating that there is still substantial time remaining until the desired setpoint P value is obtained, the routine "timeTo” arranges for a subsequent timeTo event, in step 1812, and returns.
- step 1814 the routine "timeTo" selects a cumulative plot to which to add the data points stored in the P- response record. The selection may involve selecting a plot associated with conditions closest to current conditions, when multiple plots are maintained by the intelligent controller.
- step 1816 the routine "timeTo” adds the data points collected for the current P response to the selected cumulative plot.
- the routine "parameterize selected plot” is called, in step 1822, to attempt to parameterize the cumulative plot to which the data points have been added in step 1816.
- the routine continues in Figure 18C .
- the routine "new dimension" is called in step 1828 to consider adding a new dimension of global models, as discussed above with reference to Figure 14E .
- the thresholds of steps 1811 and 1824 have different values.
- each occurrence of the term "threshold” represents a potentially different numeric value.
- the threshold of step 1824 is, in addition, a value less than or equal to a threshold included in Figure 18D , discussed below.
- Figure 18D provides a control-flow diagram for the routine "parameterize selected plot" called in step 1822 of Figure 18B .
- the routine initiates a number of local variables, including the variables "model,” “fit,” and “parameters.”
- each of a set of possible global models is considered.
- each of a set of possible parameter combinations for the currently considered model is considered. For example, in the case of the model discussed above with reference to Figure 14B , various different combinations of the a and b constant parameters for the model would be considered, one at a time, in the for -loop of steps 1833-1837.
- step 1834 a fit is computed for the currently considered model and currently considered parameter combination.
- the computed fit is less than the fit value stored in the local variable "fit,” as determined in step 1835, then the local variable "model” is set to an indication of the currently considered model, the local variable “fit” is set to the computed fit value in step 1834, and the local variable “parameters” is set to the currently considered parameter combination.
- step 1842 the cumulative plot selected by the routine "parameterize selected plot” is deemed parameterized and associated with the computed fit value and the parameter combination stored in the local variable "parameters.”
- Figure 18E provides a control-flow diagram for the routine "compute fit” called in step 1834 and in other steps in other of the control-flow diagrams of Figures 17-19D .
- the routine "compute fit” computes a fit value as well as a probability value, as discussed above with reference to Figures 14C-D , for a data set with respect to a particular P- response model.
- the model and data set is received, in step 1850, and the local variable "fit" is set to zero.
- the routine "compute fit” considers each data point in a plot, computing the ⁇ o / c i value, as discussed above with reference to Figure 14C , and adding that value to the local variable "fit.”
- a probability value for the computed fit is computed, in step 1858, and the computed fit and probability value are associated with a plot.
- Figures 19A-D provide control-flow diagrams for the routines involved in the display of remaining-response-time values by an intelligent controller, in one implementation.
- Figure 19A provides a control-flow diagram for the routine "begin timeTo display," called in step 1708 of Figure 17 .
- This routine initiates the display of remaining-response-time values during a response time following an immediate-control input or scheduled setpoint change.
- the routine "begin timeTo display” selects an appropriate parameterized plot, or global model, for initial computation of remaining-response-time values.
- the appropriate parameterized plot may be a single global model, in certain cases, when there is only one statistically meaningful global model, or, when multiple global models have been prepared, is the global model associated with parameters and characteristics closest to those at the current time.
- the fit associated with the parameterized plot is less than a threshold value, as determined in step 1904, the parameterized plot has been statistically validated and can be used for remaining-response-time calculations. Otherwise, in step 1906, the routine attempts to find a different parameterized plot with an associated fit value less than the threshold value.
- step 1910 a target T value is computed as the current time plus the time at which ⁇ P reaches the setpoint P value in the selected parameterized plot.
- step 1912 the global variable "displayMode” is set to a triplet that includes an indication of the selected parameterized plot, the mode value "plot," and the computed target T .
- step 1914 the routine "begin timeTo display” arranges for a subsequent timeTo-display event and then, in step 1916, sets the local variable "previousMode” to the null triplet and sets the global variable "transition” to FALSE.
- the display mode is set to a triplet including no values for the selected parameterized plot and target T and a mode of "generic," in step 1918.
- Figure 19B provides a control-flow diagram for the routine "timeTo display” called to handle a timeTo-display event, in step 1626 of Figure 16 .
- the routine "timeTo display” determines whether the global variable "transition” is TRUE. When the global variable "transition” is TRUE, then the global variable "w" is decremented, in step 1922 and, when the value stored in the variable "w" after decrementing the variable "w" is less than 0, the global variable “transition” is set to FALSE and the global variable "w” is set to 0.
- the global variable "w" is used, during a transition period, to weight contributions to a computed remaining-response-time value from a current model and a previous model, when a previous model exists. This is further discussed, below, with reference to Figure 19B .
- the routine "timeTo display” determines whether or not the displayMode global variable includes a mode value "local.” When the displayMode global variable includes the mode value "local,” as determined in step 1924, a local model, as discussed above with reference to Figures 15A-B , is currently being used for remaining-response-time calculations. In that case, the routine "local" is called, in step 1926.
- routine "timeTo display” attempts to determine a local model to which to transition for subsequent remaining-response-time calculations.
- a local model is selected and the P -response record currently collecting data points of the current P response is accessed.
- the routine "compute fit” is called to compute a fit for the local model with respect to currently collected data points for the current P response.
- step 1933 the routine "timeTo display” computes a new target T value for the local model selected in step 1928 and, in step 1934, the previousMode global variable is set to the value of the displayMode global variable and the displayMode global variable is updated to have the value of a triplet that includes an indication of the local model selected in step 1928, the mode "local,” and a new target T value computed for the local model in step 1933.
- the routine "local,” called in step 1926, and described below with reference to Figure 19C either maintains continued use of the current local model or transitions back to a global model, new local model, or no model.
- step 1936 the routine "display” is called in order to update the display of the remaining-response-time value by the intelligent controller.
- the mode field of the displayMode global variable is set to "none," in step 1938, to discontinue display of remaining-response-time values.
- the routine "timeTo display” arranges for a subsequent timeTo-display event.
- Figure 19C provides a control-flow diagram for the routine "local” called in step 1926 of Figure 19B .
- the routine "local” accesses the current P- response record and computes a fit for the currently used local model with respect to the data points in the current P -response record.
- the routine "local” returns. Otherwise, in step 1948, the routine "local” selects a new local model and computes a fit for the new local model with respect to the current data points in the P -response record, in step 1950.
- step 1954 a new target T value is computed for the new local model and, in step 1956, the global variable "previousMode” is set to the current value of the global variable "displayMode," the global variable “displayMode” is set to a triple that includes an indication of the new local model, the mode "local,” and the new target T value computed in step 1954, global variable "w” is set to 1.0, and the global variable "transition” is set to TRUE.
- step 1952 When the new local model is not less than the threshold value, as determined in step 1952, then when a parameterized plot is available with an associated fit value less than the threshold value, as determined in step 1960, then, in step 1962, a new target T value is computed and, in step 1964, the global variables "previousMode,” “transition,” “displayMode,” and “w” are updated to select the parameterized plot as the current model in similar fashion to the update of these local variables in step 1956. Otherwise, in step 1966, the current display mode is set to the mode "generic.”
- Figure 19D provides a control-flow diagram for the routine "display,” called in step 1936 of Figure 19B .
- the routine "display” returns, since no remaining-response-time value is currently being displayed. Otherwise, when the display mode is "generic,” as determined in step 1972, then a routine "generic display” is called in step 1974 to display a directional indication or other generic display, rather than a remaining-response-time value.
- the intelligent controller may display the word "heating” rather than a remaining-response-time value when the intelligent controller is unable to accurately calculate a remaining-response-time value for lack of a reasonable model. Otherwise, when the display mode is either "local” or "global,” the routine "display” computes a value ⁇ t 1 1976 as the different between the target T time stored in the display mode local variable and the current time.
- the routine "display” computes a second value ⁇ t 2 as the difference between the previous-model target T and the current time, in step 1982. Otherwise, the value ⁇ t 2 is set to zero, in step 1984.
- the routine "display” computes a ⁇ t value as the remaining-response-time value. The remaining-response-time value is computed as a weighted combination of ⁇ t 2 based on the previous model and ⁇ t 1 based on the current model.
- step 1988 the routine "display” calls a display ⁇ t routine that displays the computed remaining-response-time value on a display component of the intelligent controller or to a remote device by the intelligent controller.
- the intelligent controller computes remaining-response-time values and stores the computed remaining-response-time values in at least one memory prior to transferring the computed remaining-response-time values to local or remote display devices.
- Remaining-response-time values are generally transferred through cables, wires, optical fibers, and air.
- FIG. 20A illustrates steps for time to temperature computation in one intelligent-thermostat implementation.
- T2T time to temperature
- HVAC heating, ventilation, and air-conditioning
- the T2T estimates are displayed, when accurate estimates can be obtained, on a display interface, such as display interface 410 shown in Figure 4 .
- a generic display of temperature-change direction such as "heating” or “cooling,” may instead be displayed, or, alternatively, no T2T or generic display may be provided.
- the intelligent thermostat's T2T algorithm is invoked during a learning phase that occurs soon after first installation or factory reset.
- the intelligent thermostat begins to build and maintain its own database of T2T-related information, which is customized for a particular controlled environment and particular HVAC system that heats and cools the controlled environment, during a normal course of operation.
- the intelligent thermostat controls the HVAC system according to a control schedule and immediate-control inputs, with significant ⁇ T changes and corresponding response times occurring at or before scheduled setpoint changes and after immediate-control inputs, and generally insignificant ⁇ T changes occurring during periods of time between setpoints and immediate-control inputs, when the intelligent thermostat seeks to maintain a specified temperature or temperature range.
- the global model can subsequently be continuously improved using more data points, as time goes forward, since each heating cycle represents yet another experiment.
- the time span of the global model can be limited to only a recent period, such as the most recent 30 to 60 days, so that it will be more likely to reflect the effects of the current season of the year.
- Figure 20B provides a diagram that includes a plot of the global model.
- the T2T algorithm is put into use when the current operating setpoint temperature is changed from an initial value H 0 to a desired final value H F .
- This setpoint change can be invoked by a user by using either a walk-up dial or a remote network access facility, or alternatively can be invoked by a scheduled setpoint change that changes the current operating setpoint temperature.
- This initial estimate which can be called a global-model initial estimate, can be shown immediately on the intelligent thermostat display, even in real time as the user turns the dial for the case of a manual walk-up setpoint change.
- a global-model estimate continues to be used to provide the current time to temperature estimate TT(t) by mapping the current measured room temperature H(t) into TT(t) using the global model.
- the global model T2T estimate is denoted "TT G (t)."
- the actual room temperature values H(t) can be provided at regular periodic intervals, such as every 30 seconds, by the intelligent thermostat sensing circuitry.
- the real-time model R which can alternatively be called a "local model,” does not become useful for purposes of T2T estimation until a statistically meaningful linear function fitting the real-time data can be constructed, often not until there has been a certain predetermined empirically-established rise in temperature, such as 0.2 degrees C, at a point 2054 following a lowest point 2052 in trajectory of H(t).
- a certain predetermined empirically-established rise in temperature such as 0.2 degrees C
- One empirically-established guideline that has been found useful is to wait until 10 temperature samples spaced 30 seconds apart subsequent to the 0.2 degree C post-nadir rise point 2054 have been collected.
- the real-time model R can be used to establish a real-time model estimate by using a straight-line projection onto the target temperature line, as shown in FIG. 20B .
- the real-time model T2T estimate is denoted " TT R (t)."
- TT R (t) For one implementation, only the latest 10 temperature samples are used to project the straight line that computes the real-time estimate TT R (t). In other implementations, all of the data points subsequent to the point 2054 can be used to compute the TT R (t).
- step 2010 repeats until such time as TT R (t) is sufficiently reliable, whereupon step 2014 is carried out.
- the transition can be achieved in a variety of ways.
- the transition is performed as a straight-line transition from one curve to the other, where the transition occurs at a rate of not more than 10 seconds per second.
- the real-time estimate alone can be used, in step 2016, until the end of the cycle.
- the global model may be recomputed, at step 2006, so that the most recent historical data can be leveraged prior to instantiation of the next heating cycle.
- the global model can be recomputed once every several cycles, once per day, or on some other periodic basis.
- the T2T display may be turned off, and instead of a time reading, a generic display, such as the term "heating," may be undertaken. For example, when the statistical deviation of the data samples from a straight line subsequent to point 2054 is greater than a certain threshold, the T2T display may be turned off. Likewise, when the real-time model estimate of T2T starts growing for an extended period of time, or indicates an unreasonably large number, the T2T display is turned off.
- intelligent-controller logic may include logic-circuit implementations, firmware, and computer-instruction-based routines and program implementations, all of which may vary depending on the selected values of a wide variety of different implementation and design parameters, including programming language, modular organization, hardware platform, data structures, control structures, and many other such design and implementation parameters.
- the remaining-response-time determinations and displays may be directed to many different types of control scenarios and environmental parameters, as discussed above, including multiple different parameters.
- determinations and displays may include graphical, textural, and numeric representations of the remaining response time as well as the remaining response time relative to a total response time, the remaining response time as well as the already transpired response time, estimated changes in value of other parameters during the response time, and many other types of information.
- the remaining response times determined by an intelligent controller can be used for a variety of additional purposes and determinations made by an intelligent controller.
Description
- The current patent application is directed to intelligent controllers and, in particular, to intelligent controllers, and methods incorporated within intelligent controllers, that continuously calculate, store in memory, and display projections regarding the time remaining until a target state is obtained.
- Control systems and control theory are well-developed fields of research and development that have had a profound impact on the design and development of a large number of systems and technologies, from airplanes, spacecraft, and other vehicle and transportation systems to computer systems, industrial manufacturing and operations facilities, machine tools, process machinery, and consumer devices. Control theory encompasses a large body of practical, system-control-design principles, but is also an important branch of theoretical and applied mathematics. Various different types of controllers are commonly employed in many different application domains, from simple closed-loop feedback controllers to complex, adaptive, state-space and differential-equations-based processor-controlled control systems.
- Many modern intelligent controllers include various types of displays, including text and graphical displays and display interfaces that allow text and graphical information to be displayed on any of various local and remote devices interconnected with the intelligent controllers. These displays, as discussed further below, are used for higher-level interactive control-input interfaces and control-schedule interfaces. In addition, many intelligent controllers display continuously, periodically, or intermittently updated information about regions or volumes controlled by the intelligent controllers and information related to control tasks submitted to the intelligent controllers. Designers, developers, manufacturers, and, ultimately, users of intelligent controllers continue to seek new types of information displays and information-display capabilities within, and provided by, intelligent controllers.
-
JP H01 252850 - The invention is defined by the independent claims. Embodiments of the invention are defined in the dependent claims.
- The current application is directed to intelligent controllers that continuously, periodically, or intermittently calculate and display the time remaining until a control task is projected to be completed by the intelligent controller. In general, the intelligent controller employs multiple different models for the time behavior of one or more parameters or characteristics within a region or volume affected by one or more devices, systems, or other entities controlled by the intelligent controller. The intelligent controller collects data, over time, from which the models are constructed and uses the models to predict the time remaining until one or more characteristics or parameters of the region or volume reaches one or more specified values as a result of intelligent controller control of one or more devices, systems, or other entities.
-
-
Figure 1 illustrates a smart-home environment. -
Figure 2 illustrates integration of smart-home devices with remote devices and systems. -
Figure 3 illustrates information processing within the environment of intercommunicating entities illustrated inFigure 2 . -
Figure 4 illustrates a general class of intelligent controllers to which the current application is directed. -
Figure 5 illustrates additional internal features of an intelligent controller. -
Figure 6 illustrates a generalized computer architecture that represents an example of the type of computing machinery that may be included in an intelligent controller, server computer, and other processor-based intelligent devices and systems. -
Figure 7 illustrates features and characteristics of an intelligent controller of the general class of intelligent controllers to which the current application is directed. -
Figure 8 illustrates a typical control environment within which an intelligent controller operates. -
Figure 9 illustrates the general characteristics of sensor output. -
Figures 10A-D illustrate information processed and generated by an intelligent controller during control operations. -
Figures 11A-C show three different types of control schedules. -
Figures 12A-G show representations of immediate-control inputs that may be received and executed by an intelligent controller, and then recorded and overlaid onto control schedules, such as those discussed above with reference toFigures 11A-C , as part of automated control-schedule learning. -
Figures 13A-D illustrate the general context in which intelligent controllers, to which the current application is directed, operate. -
Figures 14A-E illustrate construction of one or more of a first type of P-response model based on observed P-response data. -
Figures 15A-B illustrate several types of local modeling techniques. -
Figure 16 illustrates a control-flow diagram for intelligent-controller operation.Figures 17-19D illustrate, using control-flow diagrams, functionality that allows an intelligent controller, in one implementation, to calculate and display remaining response times, as discussed above with reference toFigures 13A-15B . -
Figure 20A illustrates steps for time to temperature computation in one intelligent-thermostat implementation. -
Figure 20B provides a diagram that includes a plot of the global model. - The current application is directed to a general class of intelligent controllers that continuously, periodically, or intermittently calculate the time remaining until one or more characteristics or parameters of a region or volume reach one or more specified values as a result of control, by the intelligent controller, of a device, system, or other entity that operates on, or affects, the region or volume. In addition, the general class of intelligent controllers to which the current application is directed continuously, periodically, or intermittently display an estimate of the time remaining until the one or more characteristics and parameters reach specified values. The current application discloses, in addition to methods and implementations for calculating, storing, and displaying projections of the time remaining for completion of control tasks, a specific example of time-to-temperature methods and time-to-temperature displays in an intelligent controller that serves as a detailed example of the methods for calculating, storing, and displaying projections of the time remaining for completion of input control tasks employed by the general class of intelligent controllers to which the current application is directed. The intelligent thermostat is an example of a smart-home device. The subject matter of this patent specification relates to the subject matter of the following commonly assigned applications, each of which is incorporated by reference herein:
US Ser. No. 12/984,602 filed January 4, 2011 US Ser. No. 13/269,501 filed October 7, 2011 - The detailed description includes three subsections: (1) an overview of the smart-home environment; (2) methods and implementations for calculating, storing, and displaying projections of the time remaining for completion of control tasks; and (3) methods and implementations for calculating, storing, and displaying projections of the time remaining for completion of control tasks in the context of an intelligent thermostat. The first subsection provides a description of one area of technology that offers many opportunities for application and incorporation of methods for displaying remaining-time projections. The second subsection provides a detailed description of a general class of intelligent controllers that determine, store, and display projections of the time remaining for completion of control tasks. The third subsection provides a specific example of time-to-temperature determinations made by intelligent thermostats.
-
Figure 1 illustrates a smart-home environment. The smart-home environment 100 includes a number of intelligent, multi-sensing, network-connected devices. These smart-home devices intercommunicate and are integrated together within the smart-home environment. The smart-home devices may also communicate with cloud-based smart-home control and/or data-processing systems in order to distribute control functionality, to access higher-capacity and more reliable computational facilities, and to integrate a particular smart home into a larger, multi-home or geographical smart-home-device-based aggregation. - The smart-home devices may include one more
intelligent thermostats 102, one or more intelligent hazard-detection units 104, one or more intelligent entryway-interface devices 106, smart switches, including smart wall-like switches 108, smart utilities interfaces and other services interfaces, such as smart wall-plug interfaces 110, and a wide variety of intelligent, multi-sensing, network-connectedappliances 112, including refrigerators, televisions, washers, dryers, lights, audio systems, intercom systems, mechanical actuators, wall air conditioners, pool-heating units, irrigation systems, and many other types of intelligent appliances and systems. - In general, smart-home devices include one or more different types of sensors, one or more controllers and/or actuators, and one or more communications interfaces that connect the smart-home devices to other smart-home devices, routers, bridges, and hubs within a local smart-home environment, various different types of local computer systems, and to the Internet, through which a smart-home device may communicate with cloud-computing servers and other remote computing systems. Data communications are generally carried out using any of a large variety of different types of communications media and protocols, including wireless protocols, such as Wi-Fi, ZigBee, 6LoWPAN, various types of wired protocols, including CAT6 Ethernet, HomePlug, and other such wired protocols, and various other types of communications protocols and technologies. Smart-home devices may themselves operate as intermediate communications devices, such as repeaters, for other smart-home devices. The smart-home environment may additionally include a variety of different types of legacy appliances and
devices -
Figure 2 illustrates integration of smart-home devices with remote devices and systems. Smart-home devices within a smart-home environment 200 can communicate through theInternet 202 via 3G/4G wireless communications 204, through ahubbed network 206, or by other communications interfaces and protocols. Many different types of smart-home-related data, and data derived from smart-home data 208, can be stored in, and retrieved from, aremote system 210, including a cloud-based remote system. The remote system may include various types of statistics, inference, andindexing engines 212 for data processing and derivation of additional information and rules related to the smart-home environment. The stored data can be exposed, via one or more communications media and protocols, in part or in whole, to various remote systems and organizations, includingcharities 214,governments 216,academic institutions 218,businesses 220, andutilities 222. In general, the remote data-processing system 210 is managed or operated by an organization or vendor related to smart-home devices or contracted for remote data-processing and other services by a homeowner, landlord, dweller, or other smart-home-associated user. The data may also be further processed by additional commercial-entity data-processingsystems 213 on behalf of the smart-homeowner or manager and/or the commercial entity or vendor which operates the remote data-processing system 210. Thus, external entities may collect, process, and expose information collected by smart-home devices within a smart-home environment, may process the information to produce various types of derived results which may be communicated to, and shared with, other remote entities, and may participate in monitoring and control of smart-home devices within the smart-home environment as well as monitoring and control of the smart-home environment. Of course, in many cases, export of information from within the smart-home environment to remote entities may be strictly controlled and constrained, using encryption, access rights, authentication, and other well-known techniques, to ensure that information deemed confidential by the smart-home manager and/or by the remote data-processing system is not intentionally or unintentionally made available to additional external computing facilities, entities, organizations, and individuals. -
Figure 3 illustrates information processing within the environment of intercommunicating entities illustrated inFigure 2 . Thevarious processing engines 212 within the external data-processing system 210 can process data with respect to a variety of different goals, including provision of managedservices 302, various types of advertizing andcommunications 304, social-networking exchanges and other electronicsocial communications 306, and for various types of monitoring and rule-generation activities 308. Thevarious processing engines 212 communicate directly or indirectly with smart-home devices 310-313, each of which may have data-consumer ("DC"), data-source ("DS"), services-consumer ("SC"), and services-source ("SS") characteristics. In addition, the processing engines may access various other types ofexternal information 316, including information obtained through the Internet, various remote information sources, and even remote sensor, audio, and video feeds and sources. -
Figure 4 illustrates a general class of intelligent controllers to which the current application is directed. Theintelligent controller 402 controls a device, machine, system, ororganization 404 via any of various different types of output control signals and receives information about the controlled entity and an environment from sensor output received by the intelligent controller from sensors embedded within the controlledentity 404, theintelligent controller 402, or in the environment. InFigure 4 , the intelligent controller is shown connected to the controlledentity 404 via a wire or fiber-basedcommunications medium 406. However, the intelligent controller may be interconnected with the controlled entity by alternative types of communications media and communications protocols, including wireless communications. In many cases, the intelligent controller and controlled entity may be implemented and packaged together as a single system that includes both the intelligent controller and a machine, device, system, or organization controlled by the intelligent controller. The controlled entity may include multiple devices, machines, system, or organizations and the intelligent controller may itself be distributed among multiple components and discrete devices and systems. In addition to outputting control signals to controlled entities and receiving sensor input, the intelligent controller also provides a user interface 410-413 through which a human user can input immediate-control inputs to the intelligent controller as well as create and modify the various types of control schedules, and may also provide the immediate-control and schedule interfaces to remote entities, including a user-operated processing device or a remote automated control system. InFigure 4 , the intelligent controller provides a graphical-display component 410 that displays acontrol schedule 416 and includes a number of input components 411-413 that provide a user interface for input of immediate-control directives to the intelligent controller for controlling the controlled entity or entities and input of scheduling-interface commands that control display of one or more control schedules, creation of control schedules, and modification of control schedules. - To summarize, the general class of intelligent controllers to which the current is directed receive sensor input, output control signals to one or more controlled entities, and provide a user interface that allows users to input immediate-control command inputs to the intelligent controller for translation by the intelligent controller into output control signals as well as to create and modify one or more control schedules that specify desired controlled-entity operational behavior over one or more time periods. The user interface may be included within the intelligent controller as input and display devices, may be provided through remote devices, including mobile phones, or may be provided both through controller-resident components as well as through remote devices. These basic functionalities and features of the general class of intelligent controllers provide a basis upon which automated control-schedule learning, to which the current application is directed, can be implemented.
-
Figure 5 illustrates additional internal features of an intelligent controller. An intelligent controller is generally implemented using one ormore processors 502, electronic memory 504-507, and various types of microcontrollers 510-512, including amicrocontroller 512 andtransceiver 514 that together implement a communications port that allows the intelligent controller to exchange data and commands with one or more entities controlled by the intelligent controller, with other intelligent controllers, and with various remote computing facilities, including cloud-computing facilities through cloud-computing servers. Often, an intelligent controller includes multiple different communications ports and interfaces for communicating by various different protocols through different types of communications media. It is common for intelligent controllers, for example, to use wireless communications to communicate with other wireless-enabled intelligent controllers within an environment and with mobile-communications carriers as well as any of various wired communications protocols and media. In certain cases, an intelligent controller may use only a single type of communications protocol, particularly when packaged together with the controlled entities as a single system. Electronic memories within an intelligent controller may include both volatile and non-volatile memories, with low-latency, high-speed volatile memories facilitating execution of control routines by the one or more processors and slower, non-volatile memories storing control routines and data that need to survive power-on/power-off cycles. Certain types of intelligent controllers may additionally include mass-storage devices. -
Figure 6 illustrates a generalized computer architecture that represents an example of the type of computing machinery that may be included in an intelligent controller, server computer, and other processor-based intelligent devices and systems. The computing machinery includes one or multiple central processing units ("CPUs") 602-605, one or moreelectronic memories 608 interconnected with the CPUs by a CPU/memory-subsystem bus 610 or multiple busses, afirst bridge 612 that interconnects the CPU/memory-subsystem bus 610 withadditional busses graphics processor 618, and with one or moreadditional bridges 620, which are interconnected with high-speed serial links or with multiple controllers 622-627, such ascontroller 627, that provide access to various different types of mass-storage devices 628, electronic displays, input devices, and other such components, subcomponents, and computational resources. -
Figure 7 illustrates features and characteristics of an intelligent controller of the general class of intelligent controllers to which the current application is directed. An intelligent controller includescontroller logic 702 generally implemented as electronic circuitry and processor-based computational components controlled by computer instructions stored in physical data-storage components, including various types of electronic memory and/or mass-storage devices. It should be noted, at the onset, that computer instructions stored in physical data-storage devices and executed within processors comprise the control components of a wide variety of modern devices, machines, and systems, and are as tangible, physical, and real as any other component of a device, machine, or system. Occasionally, statements are encountered that suggest that computer-instruction-implemented control logic is "merely software" or something abstract and less tangible than physical machine components. Those familiar with modern science and technology understand that this is not the case. Computer instructions executed by processors must be physical entities stored in physical devices. Otherwise, the processors would not be able to access and execute the instructions. The term "software" can be applied to a symbolic representation of a program or routine, such as a printout or displayed list of programming-language statements, but such symbolic representations of computer programs are not executed by processors. Instead, processors fetch and execute computer instructions stored in physical states within physical data-storage devices. Similarly, computer-readable media are physical data-storage media, such as disks, memories, and mass-storage devices that store data in a tangible, physical form that can be subsequently retrieved from the physical data-storage media. - The controller logic accesses and uses a variety of different types of stored information and inputs in order to generate output control signals 704 that control the operational behavior of one or more controlled entities. The information used by the controller logic may include one or more stored
control schedules 706, received output from one or more sensors 708-710, immediate control inputs received through an immediate-control interface 712, and data, commands, and other information received from remote data-processing systems, including cloud-based data-processingsystems 713. In addition to generatingcontrol output 704, the controller logic provides aninterface 714 that allows users to create and modify control schedules and may also output data and information to remote entities, other intelligent controllers, and to users through an information-output interface. -
Figure 8 illustrates a typical control environment within which an intelligent controller operates. As discussed above, anintelligent controller 802 receives control inputs from users orother entities 804 and uses the control inputs, along with stored control schedules and other information, to generate output control signals 805 that control operation of one or morecontrolled entities 808. Operation of the controlled entities may alter an environment within which sensors 810-812 are embedded. The sensors return sensor output, or feedback, to theintelligent controller 802. Based on this feedback, the intelligent controller modifies the output control signals in order to achieve a specified goal or goals for controlled-system operation. In essence, an intelligent controller modifies the output control signals according to two different feedback loops. The first, most direct feedback loop includes output from sensors that the controller can use to determine subsequent output control signals or control-output modification in order to achieve the desired goal for controlled-system operation. In many cases, a second feedback loop involves environmental orother feedback 816 to users which, in turn, elicits subsequent user control and scheduling inputs to theintelligent controller 802. In other words, users can either be viewed as another type of sensor that outputs immediate-control directives and control-schedule changes, rather than raw sensor output, or can be viewed as a component of a higher-level feedback loop. - There are many different types of sensors and sensor output. In general, sensor output is directly or indirectly related to some type of parameter, machine state, organization state, computational state, or physical environmental parameter.
Figure 9 illustrates the general characteristics of sensor output. As shown in afirst plot 902 inFigure 9 , a sensor may output a signal, represented bycurve 904, over time, with the signal directly or indirectly related to a parameter P, plotted with respect to thevertical axis 906. The sensor may output a signal continuously or at intervals, with the time of output plotted with respect to thehorizontal axis 908. In certain cases, sensor output may be related to two or more parameters. For example, inplot 910, a sensor outputs values directly or indirectly related to two different parameters P 1 and P 2, plotted with respect toaxes vertical axis 916. In the following discussion, for simplicity of illustration and discussion, it is assumed that sensors produce output directly or indirectly related to a single parameter, as inplot 902 inFigure 9 . In the following discussion, the sensor output is assumed to be a set of parameter values for a parameter P. The parameter may be related to environmental conditions, such as temperature, ambient light level, sound level, and other such characteristics. However, the parameter may also be the position or positions of machine components, the data states of memory-storage address in data-storage devices, the current drawn from a power supply, the flow rate of a gas or fluid, the pressure of a gas or fluid, and many other types of parameters that comprise useful information for control purposes. -
Figures 10A-D illustrate information processed and generated by an intelligent controller during control operations. All the figures show plots, similar toplot 902 inFigure 9 , in which values of a parameter or another set of control-related values are plotted with respect to a vertical axis and time is plotted with respect to a horizontal axis.Figure 10A shows an idealized specification for the results of controlled-entity operation. Thevertical axis 1002 inFigure 10A represents a specified parameter value, P S. For example, in the case of an intelligent thermostat, the specified parameter value may be temperature. For an irrigation system, by contrast, the specified parameter value may be flow rate.Figure 10A is the plot of acontinuous curve 1004 that represents desired parameter values, over time, that an intelligent controller is directed to achieve through control of one or more devices, machines, or systems. The specification indicates that the parameter value is desired to be initially low 1006, then rise to a relativelyhigh value 1008, then subside to anintermediate value 1010, and then again rise to ahigher value 1012. A control specification can be visually displayed to a user, as one example, as a control schedule. -
Figure 10B shows an alternate view, or an encoded-data view, of a control schedule corresponding to the control specification illustrated inFigure 10A . The control schedule includes indications of a parameter-value increase 1016 corresponding to edge 1018 inFigure 10A , a parameter-value decrease 1020 corresponding to edge 1022 inFigure 10A , and a parameter-value increase 1024 corresponding to edge 1016 inFigure 10A . The directional arrows plotted inFigure 10B can be considered to be setpoints, or indications of desired parameter changes at particular points in time within some period of time. - A setpoint change may be stored as a record with multiple fields, including fields that indicate whether the setpoint change is a system-generated setpoint or a user-generated setpoint, whether the setpoint change is an immediate-control-input setpoint change or a scheduled setpoint change, the time and date of creation of the setpoint change, the time and date of the last edit of the setpoint change, and other such fields. In addition, a setpoint may be associated with two or more parameter values. As one example, a range setpoint may indicate a range of parameter values within which the intelligent controller should maintain a controlled environment. Setpoint changes are often referred to as "setpoints."
-
Figure 10C illustrates the control output by an intelligent controller that might result from the control schedule illustrated inFigure 10B . In this figure, the magnitude of an output control signal is plotted with respect to thevertical axis 1026. For example, the control output may be a voltage signal output by an intelligent thermostat to a heating unit, with a high-voltage signal indicating that the heating unit should be currently operating and a low-voltage output indicating that the heating system should not be operating.Edge 1028 inFigure 10C corresponds tosetpoint 1016 inFigure 10B . The width of thepositive control output 1030 may be related to the length, or magnitude, of the desired parameter-value change, indicated by the length ofsetpoint arrow 1016. When the desired parameter value is obtained, the intelligent controller discontinues output of a high-voltage signal, as represented byedge 1032. Similar positiveoutput control signals setpoints Figure 10B . - Finally,
Figure 10D illustrates the observed parameter changes, as indicated by sensor output, resulting from control, by the intelligent controller, of one or more controlled entities. InFigure 10D , the sensor output, directly or indirectly related to the parameter P, is plotted with respect to thevertical axis 1040. The observed parameter value is represented by a smooth,continuous curve 1042. Although this continuous curve can be seen to be related to the initial specification curve, plotted inFigure 10A , the observed curve does not exactly match that specification curve. First, it may take a finite period oftime 1044 for the controlled entity to achieve the parameter-valued change represented bysetpoint 1016 in the control schedule plotted inFigure 10B . Also, once the parameter value is obtained, and the controlled entity directed to discontinue operation, the parameter value may begin to fall 1046, resulting in a feedback-initiated control output to resume operation of the controlled entity in order to maintain the desired parameter value. Thus, the desired high-levelconstant parameter value 1008 inFigure 10A may, in actuality, end up as a time-varyingcurve 1048 that does not exactly correspond to thecontrol specification 1004. The first level of feedback, discussed above with reference toFigure 8 , is used by the intelligent controller to control one or more control entities so that the observed parameter value, over time, as illustrated inFigure 10D , matches the specified time behavior of the parameter inFigure 10A as closely as possible. The second level feedback control loop, discussed above with reference toFigure 8 , may involve alteration of the specification, illustrated inFigure 10A , by a user, over time, either by changes to stored control schedules or by input of immediate-control directives, in order to generate a modified specification that produces a parameter-value/time curve reflective of a user's desired operational results. -
Figures 11A-C show three different types of control schedules. InFigure 11A , the control schedule is acontinuous curve 1102 representing a parameter value, plotted with respect to thevertical axis 1104, as a function of time, plotted with respect to thehorizontal axis 1106. The continuous curve comprises only horizontal and vertical sections. Horizontal sections represent periods of time at which the parameter is desired to remain constant and vertical sections represent desired changes in the parameter value at particular points in time. This is a simple type of control schedule and is used, below, in various examples of automated control-schedule learning. However, automated control-schedule-learning methods can also learn more complex types of schedules. For example,Figure 11B shows a control schedule that includes not only horizontal and vertical segments, but arbitrarily angled straight-line segments. Thus, a change in the parameter value may be specified, by such a control schedule, to occur at a given rate, rather than specified to occur instantaneously, as in the simple control schedule shown inFigure 11A . Automated-control-schedule-learning methods may also accommodate smooth-continuous-curve-based control schedules, such as that shown inFigure 11C . In general, the characterization and data encoding of smooth, continuous-curve-based control schedules, such as that shown inFigure 11C , is more complex and includes a greater amount of stored data than the simpler control schedules shown inFigures 11B and 11A . - In the following discussion, it is generally assumed that a parameter value tends to relax towards lower values in the absence of system operation, such as when the parameter value is temperature and the controlled system is a heating unit. However, in other cases, the parameter value may relax toward higher values in the absence of system operation, such as when the parameter value is temperature and the controlled system is an air conditioner. The direction of relaxation often corresponds to the direction of lower resource or expenditure by the system. In still other cases, the direction of relaxation may depend on the environment or other external conditions, such as when the parameter value is temperature and the controlled system is an HVAC system including both heating and cooling functionality.
- Turning to the control schedule shown in
Figure 11A , the continuous-curve-representedcontrol schedule 1102 may be alternatively encoded as discrete setpoints corresponding to vertical segments, or edges, in the continuous curve. A continuous-curve control schedule is generally used, in the following discussion, to represent a stored control schedule either created by a user or remote entity via a schedule-creation interface provided by the intelligent controller or created by the intelligent controller based on already-existing control schedules, recorded immediate-control inputs, and/or recorded sensor data, or a combination of these types of information. - Immediate-control inputs are also graphically represented in parameter-value versus time plots.
Figures 12A-G show representations of immediate-control inputs that may be received and executed by an intelligent controller, and then recorded and overlaid onto control schedules, such as those discussed above with reference to Figures 11A-C , as part of automated control-schedule learning. An immediate-control input is represented graphically by a vertical line segment that ends in a small filled or shaded disk.Figure 12A shows representations of two immediate-control inputs Figure 11A , that is input to an intelligent controller by a user or remote entity with the expectation that the input control will be immediately carried out by the intelligent controller, overriding any current control schedule specifying intelligent-controller operation. An immediate-control input is therefore a real-time setpoint input through a control-input interface to the intelligent controller. - Because an immediate-control input alters the current control schedule, an immediate-control input is generally associated with a subsequent, temporary control schedule, shown in
Figure 12A as dashed horizontal and vertical lines that form a temporary-control-schedule parameter vs. time curve extending forward in time from the immediate-control input.Temporary control schedules control inputs Figure 12A . -
Figure 12B illustrates an example of immediate-control input and associated temporary control schedule. The immediate-control input 1210 is essentially an input setpoint that overrides the current control schedule and directs the intelligent controller to control one or more controlled entities in order to achieve a parameter value equal to the vertical coordinate of the filleddisk 1212 in the representation of the immediate-control input. Following the immediate-control input, a temporary constant-temperature control-schedule interval 1214 extends for a period of time following the immediate-control input, and the immediate-control input is then relaxed by a subsequent immediate-control-input endpoint, orsubsequent setpoint 1216. The length of time for which the immediate-control input is maintained, ininterval 1214, is a parameter of automated control-schedule learning. The direction and magnitude of the subsequent immediate-control-input endpoint setpoint 1216 represents one or more additional automated-control-schedule-learning parameters. Please note that an automated-control-schedule-learning parameter is an adjustable parameter that controls operation of automated control-schedule learning, and is different from the one or more parameter values plotted with respect to time that comprise control schedules. The parameter values plotted with respect to the vertical axis in the example control schedules to which the current discussion refers are related directly or indirectly to observables, including environmental conditions, machines states, and the like. -
Figure 12C shows an existing control schedule on which an immediate-control input is superimposed. The existing control schedule called for an increase in the parameter value P, represented byedge 1220, at 7:00 a.m. (1222 inFigure 12C ). The immediate-control input 1224 specifies an earlier parameter-value change of somewhat less magnitude.Figures 12D-G illustrate various subsequent temporary control schedules that may obtain, depending on various different implementations of intelligent-controller logic and/or current values of automated-control-schedule-learning parameter values. InFigures 12D-G , the temporary control schedule associated with an immediate-control input is shown with dashed line segments and that portion of the existing control schedule overridden by the immediate-control input is shown by dotted line segments. In one approach, shown inFigure 12D , the desired parameter value indicated by the immediate-control input 1224 is maintained for a fixed period oftime 1226 after which the temporary control schedule relaxes, as represented byedge 1228, to the parameter value that was specified by the control schedule at the point in time that the immediate-control input is carried out. This parameter value is maintained 1230 until the next scheduled setpoint, which corresponds to edge 1232 inFigure 12C , at which point the intelligent controller resumes control according to the control schedule. - In an alternative approach shown in
Figure 12E , the parameter value specified by the immediate-control input 1224 is maintained 1232 until a next scheduled setpoint is reached, in this case the setpoint corresponding to edge 1220 in the control schedule shown inFigure 12C . At the next setpoint, the intelligent controller resumes control according to the existing control schedule. This approach is desired by certain users, who expect manually enetered setpoint to remain in force until a next scheduled setpoint change. - In a different approach, shown in
Figure 12F , the parameter value specified by the immediate-control input 1224 is maintained by the intelligent controller for a fixed period oftime 1234, following which the parameter value that would have been specified by the existing control schedule at that point in time is resumed 1236. - In the approach shown in
Figure 12G , the parameter value specified by the immediate-control input 1224 is maintained 1238 until a setpoint with opposite direction from the immediate-control input is reached, at which the existing control schedule is resumed 1240. In still alternative approaches, the immediate-control input may be relaxed further, to a lowest-reasonable level, in order to attempt to optimize system operation with respect to resource and/or energy expenditure. In these approaches, generally used during aggressive learning, a user is compelled to positively select parameter values greater than, or less than, a parameter value associated with a minimal or low rate of energy or resource usage. - In one example implementation of automated control-schedule learning, an intelligent controller monitors immediate-control inputs and schedule changes over the course of a monitoring period, generally coinciding with the time span of a control schedule or subschedule, while controlling one or more entities according to an existing control schedule except as overridden by immediate-control inputs and input schedule changes. At the end of the monitoring period, the recorded data is superimposed over the existing control schedule and a new provisional schedule is generated by combining features of the existing control schedule and schedule changes and immediate-control inputs. Following various types of resolution, the new provisional schedule is promoted to the existing control schedule for future time intervals for which the existing control schedule is intended to control system operation.
-
Figures 13A-D illustrate the general context in which intelligent controllers, to which the current application is directed, operate. As shown inFigure 13A , this context comprises a region orvolume 1302, one or moreintelligent controllers volume 1302. In many cases, the intelligent controllers are described as controlling the region orvolume 1302 although, in fact, they directly control the one or more devices, systems, or other entities 1306-1308. The region orvolume 1302 may be a complex region or volume that includes multiple connected or separate subregions or subvolumes. The region, regions, volume, or volumes controlled by an intelligent controller is referred to, below, as the "controlled environment." The intelligent controllers may reside within the environment, asintelligent controller 1304 shown inFigure 13A , or may reside externally, as, for example,intelligent controller 1306 inFigure 13A . Similarly, the devices, systems, or other entities that operate on the environment 1306-1308 may reside within the environment, as, for example,system 1306 inFigure 13A , or may be located outside of the environment, as, for example, systems 1307-1308 inFigure 13A . In a specific example discussed in a following subsection, the systems are HVAC systems and/or additional air conditioners and heaters and the intelligent controllers are intelligent thermostats, with the environment a residence, multi-family dwelling, commercial building, or industrial building that is heated, cooled, and/or ventilated by the systems controlled by the intelligent thermostats. - As shown in
Figure 13B , theintelligent controllers remote computing system 1310 to which certain of control tasks and intelligent-control-related computations are distributed. In addition, the intelligent controllers generally output control signals to, and receive data signals from, the systems 1306-1308 controlled by the intelligent controllers. As shown inFigure 13C , the systems 1306-1308 are controlled by the intelligent controllers to operate on theenvironment 1302. This operation may involve exchange of various types of substances, operations that result in heat exchange with the environment, exchange of electrical current with the environment, and many other types of operations. These operations generally affect one or more characteristics or parameters of the environment which are directly or indirectly monitored by the intelligent controllers. The intelligent controllers, to which the current application is directed, generally control the environment based on control schedules and immediate-control inputs that can be thought of as overlaid on or added to the control schedules. The context within which the general class of intelligent controllers operates is illustrated, inFigure 13C , with twoplots first plot 1312 is a portion of a control schedule to which an immediate-control input 1316 has been added. Alternatively, the portion of the control schedule may feature a scheduled setpoint rather than the immediate-control input 1316. The vertical axis is labeled "P" 1318 to represent the value of a particular parameter or characteristic of the environment, referred to as an "environmental parameter," and the horizontal axis representstime 1320. The immediate-control input 1316 or, alternatively, a scheduled setpoint, generally represent a desired change in the parameter or characteristic 1322, designated ΔP. At the time of the immediate-control input, or before or at the time of a scheduled input, the intelligent controller generally outputs control signals to the systems in order to change the parameter or characteristic P by ΔP. It should be noted that, although in the current example ΔP is positive, with the desired parameter P greater than the current value of the parameter P, the ΔP may also be negative, with the desired value of P less than the current P. It may also be the case that intelligent controllers control the systems with respect to multiple parameters, in which case there may be separate control schedules for each parameter, and multiple parameters may be combined together to form a composite parameter for a single control schedule. Alternatively, setpoints may be associated with multiple P values for each of one or more environmental parameters. In the following discussion, for simplicity of illustration and discussion, it is assumed that a single parameter P is monitored by the one or more intelligent controllers, each setpoint specifies a single parameter value, and that intelligent controllers output control signals to one or more systems in order to control the value of the parameter P within the controlledenvironment 1302. - As shown in
plot 1314, once intelligent controllers initiate system operation in order to change the value of the parameter P by ΔP, the parameter P changes, over time, in a continuous manner from theinitial P value 1324 to the desiredP value 1326. In other words, the P values cannot be instantaneously altered at times corresponding to immediate-control inputs or scheduled setpoints. As a result, there is atime interval Δt 1328, referred to as the "response time," that separates the time of an immediate-control input or scheduled setpoint change in the time which the parameter value specified by the setpoint change or immediate-control input is achieved. Intelligent controllers to which the current application is directed model the P versus t behavior within this response-time Δt interval 1328 so that, at any point in time during the response time, the time remaining to a point in time the desired t value is obtained, or, in other words, the remaining response time, can be displayed or reported. Thus, for example, attime t 1 1330, the intelligent controller calculates the length oftime interval Δt 1 1332, the remaining response time, and reports the length of this time interval in a textural, graphical, or numeric display output on an intelligent-controller display device, such asdisplay device 410 inFigure 4 , or outputs the information through a remote-display interface for display on a remote display device, such as a smart phone. The information may include a remaining-response-time indication, an indication of the remaining response time relative to the entire response time, information including the response time so far elapsed, and other response-time related information. It should be noted that calculation of the time remaining before a desired P value is achieved may be used independently, for various different intelligent-controller operations, from the display of the remaining response time. For example, intelligent controllers may alter control strategies depending on the remaining response time computed for various different control strategies. - At first impression, the task of computing the remaining response time may appear relatively simple. However, as shown in
Figure 13D , the task is often far from simple.Figure 13D shows various different conditions and effects that may alter the P versus t behavior of a controlled environment. In many cases, the time of day, weather, and time of year 1340 may alter the P versus t behavior of the environment, referred to below as the environment's P response. The P response may also be altered by different types of inputs 1342-1344 to the systems or internal states of the systems. For example, a system that requires electricity for operation may be inoperable during power failures, as a result of which the P response during power failures may be substantially different than the P response when power is available. The P response may also be affected by external entities other than thesystems 1346 which operate on the environment or by internal systems and devices other than systems 1306-1308 that operate on theenvironment 1348. In addition, changes to buildings or structures, such as openedwindows 1350 may significantly alter the P response to the environment due to a thermal ormaterial exchange 1352. These are but a few of the many different possible factors that may change the P response of the environment, and thus complicate and frustrate remaining-response-time calculations and displays carried out by intelligent controllers. - In many implementations of the intelligent controllers to which the current application is directed, as a result of the many factors that may impact a particular P response for a controlled environment, the intelligent controller or controllers uses at least two different models for the P response during the response time in order to compute and display remaining response times.
Figures 14A-E illustrate construction of one or more of a first type of P-response model based on observed P-response data.Figure 14A shows a collection of data by an intelligent controller and construction of a parameterized P-response curve from the data. InFigure 14A , thehorizontal axis 1402 is a time axis with respect to which various data states are shown. During the response time after an immediate-control input or scheduled setpoint, such asinterval Δt 1328 inFigure 13C , the intelligent controller monitors the change in P value in time and plots points to represent an observed P-response curve. InFigure 14A , the firstsuch plot 1404 represents the points plotted with respect to a first observed P-response curve of the intelligent controller. In general, the points are stored in a file or database, often as encoded coordinate pairs, rather than plotted in a graphical plot. However, for ease of description and illustration, the stored data is referred to as a "plot" in the following discussion. Observation of a first P response generally produces a set of points, such as those shown plotted inplot 1404, that describe a general trend in P versus t behavior. The intelligent controller continues to make observations of P responses, over time, adding observed P versus t points to the plot, as shown by plots 1406-1409 inFigure 14A . After some time, were the recorded P versus t points plotted visually in a graph, they would form a relatively dense cloud of points that suggest a P versus t curve that describes the P response for the control environment. When sufficient points have been stored, the intelligent controller can generate a parameterized model, or function, that statistically best fits the collected points, as represented inFigure 14A by parameterizedplot 1410. A parameterized plot is a plot that is associated with a model that represents the observed P versus t data over the course of many P-response observations. In certain cases, the P-response data may be discarded following plot parameterization, or after passage of significant periods of time. - There are many possible models for P-response curves.
Figure 14B illustrates one P-response-curve model. InFigure 14B , theexpression 1416graph 1418 withhorizontal axis 1420 representing time andvertical axis 1422 representing a change in P value, ΔP, starting from an initial time represented by the origin 1424. The model is non-linear between zero and about 15 minutes, is approximately linear for ten minutes, is again non-linear until about 35 minutes, and then flattens considerably thereafter. It should be noted that his model can be appropriate for certain ΔP changes and certain types of characteristics and parameters in certain environments acted on by certain types of devices and systems, but is certainly not appropriate for a large number or even a large fraction of possible controlled environments, ΔP changes, and characteristics and parameters. The expression is parameterized by two constants a and b. Thus, in general, the model computes ΔP as a function of time, the function parameterized by and one or more constant-valued parameters that are determined for a given P and a given controlled environment. In the case of the model shown inFigure 14D , the slope of the straight-line portion of the P-response curve generated from the model can be varied by varying the value of parameter b, while the range in ΔP values can be altered by changing the value of parameter a. Many other types of models can be used for P-response curves. - The parameterized model generated for a collection of observed P responses is generally only an estimate and, because of all the different factors that may affect P responses, the parameterized model is generally an estimate for the average P response of the controlled environment. Were the model curve to be plotted within the dense clouds of points representing the observed data, generally only a very few of the observed points would actually fall on the P-response curve generated by the model. Models are selected and evaluated by evaluating how well the data fits the model. There are many statistical methods that may be employed to compute the fit of a model to experimental data.
Figures 14C-D illustrate one such method.Figure 14C shows the model P response curve in agraphical plot 1430 similar to that shown inFigure 14B along with one of the observed P versus t points 1432. Avertical line segment 1434, passing through the observed P versust point 1432, also passes through the model curve atpoint 1436 and through the time axis atpoint 1438, the time coordinate of which is referred to as t 1. The ΔP coordinate 1438 of the observed P versus t point is labeled Δpo and the ΔP coordinate 1440 of the point on the model curve corresponding totime t 1 1410 is labeled Δpc . A discrepancy Δ o/ci between the observed data point i 1432 andcorresponding model point 1436 can be computed as: - As shown in
Figure 14D , it is often the case that fit values calculated from various different data sets fall into a particular type of probability distribution. One such probability distribution is shown inFigure 14D . Thevertical axis 1460 represents the probability of observing a particular fit value and thehorizontal axis 1462 represents the different possible fit values. For a particular fit value, such asfit value 1464, the area under the probability-distribution curve to the right of thefit value 1466, shown cross-hatched inFigure 14D , represents the probability of observing thefit value 1464 or a fit value greater than that fit value. This probability can also be used to evaluate the reasonableness of the model with respect to observed data. When the probability of a fit value equal to or greater than the observed fit value falls below a threshold probability, the model may be rejected. - Returning to
Figure 14A , the intelligent controller may, after observing each response and adding the data points for the observed P response to a plot, compute the fit value of various different models with respect to the data and, when one or more models is associated with a fit value less than a first threshold value or with a corresponding probability value greater than a second threshold value, the intelligent controller may select the best fitting model from the one or more models and generate a parameterized plot by associating the selected model, including selected constant values for the model parameters, with the plot. This constitutes what is referred to as "parameterizing the plot" in the following discussion. Once a plot is parameterized, the plot becomes a global model that can be used, by the intelligent controller, to predict remaining response time, or time-to, values for display and for other purposes. The parameterized plot may be continued to be refined, over time, following addition of new P-response data, including changing the global model associated with the parameterized plot and altering constant-parameter values. This refinement may continue indefinitely, or may be discontinued after a highly reliable model is constructed. Alternatively, the parameterized plot may represent a sliding data window, with only recent data used to select a current associated model and parameter values. - An intelligent controller may generate various different parameterized models, also referred to as "global models," for various different conditions.
Figure 14E illustrates generation of multiple global models as a continuation of the timeline shown inFigure 14A . Once a first parameterizedplot 1410 has been generated, the intelligent controller may elect to divide the collected data points among multiple plots 1412-1415 each collecting observed P responses under different conditions. For example, when it is determined that weather and outside-temperature are important influences on P responses, the intelligent controller may collect separate P-response data for sunny days, cloudy days, nighttime, days with high wind, and other such different weather conditions.Figure 14E illustrates division of theinitial plot 1410 into four plots 1412-1415 arranged along a vertical parameter or condition dimension, such as a weather-and-temperature dimension. Then, as shown inFigure 14E , the intelligent controller may continue to collect data for each of these individual plots until they can be parameterized, with the parameterized plots shown incolumn 1420. At this point, the intelligent controller may then generate new plots, essentially extending the data collection along a new dimension, as represented by the column of sets ofplots 1422 shown inFigure 14E . The intermediate global models, such asglobal model 1410, maybe retained in addition to the subsequently generated global models for particular conditions. Of course, the amount of data that may need to be collected in order to parameterize multi-dimensional plots expands exponentially, and this combinatorial effect severely constrains the number of different dimensions that an intelligent controller may consider. Nonetheless, an intelligent controller need not be constrained to generating only a single global model, but may generate multiple global models, each for a different condition or set of conditions, in order to better approximate P response curves that obtain under those conditions. In certain cases, the response model may depend on the magnitude of the ΔP represented by a scheduled setpoint change or immediate-input control. - A second type of P-response model that may be employed by intelligent controllers is referred to as a "local model." Generally, regardless of how much data is collected and used to generate one or more global models, it is difficult for an intelligent controller to generate global models that are sufficiently accurate for highly accurate remaining-response-time calculations. Although this is not always the case, it is not unexpected, due to all the various different types of factors that may affect a P response, discussed above with reference to
Figure 13D . However, it is frequently possible to generate a simpler local model, during a particular response time.Figures 15A-B illustrate several types of local modeling techniques. -
Figure 15A illustrates one type of local model. In many cases, following output of control signals to one or more systems by an intelligent controller, there is a period of time referred to asΔt unstable 1502 during which the P value may fail to change or actually change in the direction opposite from the desired direction. After theunstable time interval 1502, the ΔP versus t response may be nearly linear 1504. This type of local model may be expressed as:Figure 15B , even when the response following the unstable period is not linear, but is instead a curve, the response may be approximated by a series of local linear models. InFigure 15B , the portion of the P response within the dashedcircle 1502 about thepoint 1504 with time coordinatet l 1506, considered as a local origin, is nearly linear, and can be approximated by alinear model 1508, expressed as:circle 1510 can be approximated by a different linear model with a different slope. Thus, by selecting a set of successive linear models over the interval between an immediate-control input or scheduled setpoint and the time when the desired P value is obtained, the intelligent controller can incrementally calculate accurate remaining response times. - Thus, global models and local models provide models of P responses. The global models are generally used during the initial portion of a response time following an immediate-control input or scheduled setpoint because, during this initial period of time, there is generally insufficient observed data to compute parameters for a local model and/or to select a particular local model. However, often it is the case that, following an initial period of time, when sufficient P versus t data points are available for the current P response, a local model can be selected and parameterized to provide more accurate remaining-response-time predictions up until the time that the desired P value is obtained. This is, however, not always the case. It may be the case that the global model is more predictive throughout the entire response time or that, after a local model is selected and used, the global model again, after another period of time, is again better able to predict the remaining-response-time value from a local model. In certain cases, neither global nor local models provide adequate predictive power. For this reason, many intelligent controllers of the class of intelligent controllers to which the current application is directed continuously reevaluate P-response models and attempt to select the best model for each point in time over an entire interval during which the remaining-response-time values are continuously, periodically, or intermittently calculated and displayed.
-
Figure 16 illustrates a control-flow diagram for intelligent-controller operation. In general, an intelligent controller, at a high level, continuously operates within the context of an event handler or event loop. Instep 1602, the intelligent controller waits for a next control event. When the next control event occurs, then, in a series of conditional statements, the intelligent controller determines the type of event and invokes a corresponding control routine. In the case of an immediate-control event, as determined instep 1604, the intelligent controller calls an immediate-control routine, instep 1606, to carry out the intelligent controller's portion of a user interaction to receive one or more immediate-control inputs that direct the intelligent controller to issue control signals, adjust a control schedule, and/or carry out other activities specified by a user through an intermediate-control interface. In the case that the control event is a scheduled control event, such as when the current time corresponds to a time at which a control schedule specifies a control activity to be undertaken, as determined instep 1608, a schedule-control routine is called, instep 1610, to carry out the scheduled control event. When the control event is a schedule-interface event, as determined instep 1612, the intelligent controller invokes a schedule-interaction routine, instep 1614, to carry out the intelligent controller's portion of a schedule-input or schedule-change dialog with the user through a schedule interface. In the case that the control event is a sensor event, as determined in step 1616 a sensor routine is called by the intelligent controller instep 1618 to process the sensor event. Sensor events may include interrupts generated by a sensor as a result of a change in sensor output, expiration of timers set to awaken the intelligent controller to process sensor data of a next-scheduled sensor-data-processing interval, and other such types of events. - As discussed below, there are two special types of events involved in one implementation of a remaining-response-time calculation-and-display functionality. A
timeTo event 1620 may occur during P-response data selection and is handled by a call to a timeTo event-handling routine 1622. A timeTo display event may occur during remaining-response-time display, as determined instep 1624, and is handled by a timeTo display event-handling routine called instep 1626. As illustrated inFigure 16 by theellipses 1628, many other different types of events may occur and may be handled by the intelligent-controller event handler or event loop illustrated inFigure 16 , including various different error events, power-on and power-off events, controller-reset events, and other events related to controller operation.Figure 16 also shows adefault event handler 1630 that may be invoked to handle unusual or unexpected events. -
Figures 17-19D illustrate, using control-flow diagrams, functionality that allows an intelligent controller, in one implementation, to calculate and display remaining-response-time values, as discussed above with reference toFigures 13A-15B .Figure 17 illustrates functionality added to the immediate-control routine, called instep 1606 ofFigure 16 , following an immediate-control event. This immediate-control routine, shown inFigure 17 , assumes than an immediate-control event generates an immediate-control input. Instep 1702, the immediate-control routine determines ΔPT , or the P-value difference between a currently observed P value and the P value specified by the immediate-control input. When this computed ΔPT value is greater than a threshold value, as determined instep 1704, the "begin timeTo" routine is called, in step 170,6 to begin data collection for a next observed P response, and the routine "begin timeTo display" is called instep 1708 to begin continuous, periodic, or intermittent display of a remaining-response-time value. Otherwise, a global variable displayMode is set to the triple ø/none/ø instep 1710 to ensure that display of remaining-response-time values is not initiated. The values stored in the triple are discussed, below. The remaining steps in the immediate-control routine, includingsteps ellipses 1716, are not further described, as they are related to receiving and implementing an immediate-control input. Steps similar tosteps step 1610 ofFigure 16 . - It should be noted that there may be cases in which multiple immediate-control inputs and scheduled setpoint changes may occur so close together, in time, that additional logic may be needed to ensure that only one P-response data set is collected, generally for the last-occurring immediate-control input or scheduled setpoint change. For simplicity of illustration and clarity of description, it is assumed in the control-flow diagrams and following discussion that no two immediate-control inputs and/or scheduled setpoint changes occur sufficiently close together, in time, for there to be a problem in P-response data overlap and conflicting remaining-response-time displays.
-
Figures 18A-E illustrate, using control-flow diagrams, the P-response data-collection machinery of one implementation of an intelligent controller.Figure 18A provides a control-flow diagram for the routine "begin timeTo," called instep 1706 ofFigure 17 . Instep 1804, the routine enters a current P versus t data point into the P-response record. Then, instep 1806, the routine arranges for a subsequent timeTo event, such as setting a timeTo timer or arranging for subsequent interrupt. Thus, the routine "begin timeTo" sets up a P-response record for collecting data during a current response time, enters a first data point into the record, and schedules a next timeTo event for collection of a next data point. -
Figures 18B-C provide a control-flow diagram for the routine "timeTo" that is called to handle timeTo events instep 1622 inFigure 16 . Instep 1808, the routine "timeTo" determines a value ΔPc with the magnitude of the P-value difference between the desired setpoint P value and the current P value. Then, instep 1810, the routine "timeTo" enters a next P versus t data point into the P-response record. When ΔPc is not less than a threshold value, indicating that there is still substantial time remaining until the desired setpoint P value is obtained, the routine "timeTo" arranges for a subsequent timeTo event, instep 1812, and returns. Otherwise, data collection is finished for the current P-response so, instep 1814, the routine "timeTo" selects a cumulative plot to which to add the data points stored in the P-response record. The selection may involve selecting a plot associated with conditions closest to current conditions, when multiple plots are maintained by the intelligent controller. Instep 1816, the routine "timeTo" adds the data points collected for the current P response to the selected cumulative plot. When the selected cumulative plot has been parameterized, as determined instep 1818, then a new fit is computed for the parameterized plot, instep 1820, and associated with the plot. Otherwise, the routine "parameterize selected plot" is called, instep 1822, to attempt to parameterize the cumulative plot to which the data points have been added instep 1816. The routine continues inFigure 18C . When the fit computed in either ofsteps step 1824, and all cumulative plots at the plot level or within the dimension to which the currently considered cumulative plot belongs have similarly low fit values indicating good statistical bases for the parameterized plots, as determined instep 1826, then the routine "new dimension" is called in step 1828 to consider adding a new dimension of global models, as discussed above with reference toFigure 14E . Note that the thresholds ofsteps Figures 17-19D , each occurrence of the term "threshold" represents a potentially different numeric value. The threshold ofstep 1824 is, in addition, a value less than or equal to a threshold included inFigure 18D , discussed below. -
Figure 18D provides a control-flow diagram for the routine "parameterize selected plot" called instep 1822 ofFigure 18B . Instep 1830, the routine initiates a number of local variables, including the variables "model," "fit," and "parameters." Next, in the for-loop of steps 1832-1838, each of a set of possible global models is considered. In the inner, nested for-loop of steps 1833-1837, each of a set of possible parameter combinations for the currently considered model is considered. For example, in the case of the model discussed above with reference toFigure 14B , various different combinations of the a and b constant parameters for the model would be considered, one at a time, in the for-loop of steps 1833-1837. Instep 1834, a fit is computed for the currently considered model and currently considered parameter combination. When the computed fit is less than the fit value stored in the local variable "fit," as determined instep 1835, then the local variable "model" is set to an indication of the currently considered model, the local variable "fit" is set to the computed fit value instep 1834, and the local variable "parameters" is set to the currently considered parameter combination. Following determination of the nested loops of steps 1832-1838, when the value stored in the local variable "fit" is less than a threshold value, as determined instep 1840, then, instep 1842, the cumulative plot selected by the routine "parameterize selected plot" is deemed parameterized and associated with the computed fit value and the parameter combination stored in the local variable "parameters." -
Figure 18E provides a control-flow diagram for the routine "compute fit" called instep 1834 and in other steps in other of the control-flow diagrams ofFigures 17-19D . The routine "compute fit" computes a fit value as well as a probability value, as discussed above with reference toFigures 14C-D , for a data set with respect to a particular P-response model. The model and data set is received, instep 1850, and the local variable "fit" is set to zero. Then, in the for-loop of steps 1852-1855, the routine "compute fit" considers each data point in a plot, computing the Δ o/ci value, as discussed above with reference toFigure 14C , and adding that value to the local variable "fit." Finally, after termination of the for-loop of steps 1852-1855, a probability value for the computed fit is computed, instep 1858, and the computed fit and probability value are associated with a plot. -
Figures 19A-D provide control-flow diagrams for the routines involved in the display of remaining-response-time values by an intelligent controller, in one implementation.Figure 19A provides a control-flow diagram for the routine "begin timeTo display," called instep 1708 ofFigure 17 . This routine initiates the display of remaining-response-time values during a response time following an immediate-control input or scheduled setpoint change. Instep 1902, the routine "begin timeTo display" selects an appropriate parameterized plot, or global model, for initial computation of remaining-response-time values. The appropriate parameterized plot may be a single global model, in certain cases, when there is only one statistically meaningful global model, or, when multiple global models have been prepared, is the global model associated with parameters and characteristics closest to those at the current time. When the fit associated with the parameterized plot is less than a threshold value, as determined instep 1904, the parameterized plot has been statistically validated and can be used for remaining-response-time calculations. Otherwise, instep 1906, the routine attempts to find a different parameterized plot with an associated fit value less than the threshold value. When a statistically meaningful parameterized plot has been found in either ofsteps step 1908, then, instep 1910, a targetT value is computed as the current time plus the time at which ΔP reaches the setpoint P value in the selected parameterized plot. Then, instep 1912, the global variable "displayMode" is set to a triplet that includes an indication of the selected parameterized plot, the mode value "plot," and the computed targetT. Instep 1914, the routine "begin timeTo display" arranges for a subsequent timeTo-display event and then, instep 1916, sets the local variable "previousMode" to the null triplet and sets the global variable "transition" to FALSE. When a statistically meaningful parameterized plot is not found, as determined instep 1908, the display mode is set to a triplet including no values for the selected parameterized plot and targetT and a mode of "generic," instep 1918. -
Figure 19B provides a control-flow diagram for the routine "timeTo display" called to handle a timeTo-display event, instep 1626 ofFigure 16 . Instep 1920, the routine "timeTo display" determines whether the global variable "transition" is TRUE. When the global variable "transition" is TRUE, then the global variable "w" is decremented, instep 1922 and, when the value stored in the variable "w" after decrementing the variable "w" is less than 0, the global variable "transition" is set to FALSE and the global variable "w" is set to 0. The global variable "w" is used, during a transition period, to weight contributions to a computed remaining-response-time value from a current model and a previous model, when a previous model exists. This is further discussed, below, with reference toFigure 19B . Next, instep 1924, the routine "timeTo display" determines whether or not the displayMode global variable includes a mode value "local." When the displayMode global variable includes the mode value "local," as determined instep 1924, a local model, as discussed above with reference toFigures 15A-B , is currently being used for remaining-response-time calculations. In that case, the routine "local" is called, instep 1926. Otherwise, either no model or a global model is currently being used to compute remaining-response-time values. In that case, the routine "timeTo display" attempts to determine a local model to which to transition for subsequent remaining-response-time calculations. Instep 1928, a local model is selected and the P-response record currently collecting data points of the current P response is accessed. Instep 1930, the routine "compute fit" is called to compute a fit for the local model with respect to currently collected data points for the current P response. When the fit is less than a threshold value, as determined instep 1932, then, instep 1933, the routine "timeTo display" computes a new targetT value for the local model selected instep 1928 and, instep 1934, the previousMode global variable is set to the value of the displayMode global variable and the displayMode global variable is updated to have the value of a triplet that includes an indication of the local model selected instep 1928, the mode "local," and a new targetT value computed for the local model instep 1933. The routine "local," called instep 1926, and described below with reference toFigure 19C , either maintains continued use of the current local model or transitions back to a global model, new local model, or no model. Instep 1936, the routine "display" is called in order to update the display of the remaining-response-time value by the intelligent controller. When the ΔPc value, computed instep 1808 ofFigure 18B , is less than a threshold value, then the mode field of the displayMode global variable is set to "none," instep 1938, to discontinue display of remaining-response-time values. Otherwise, instep 1940, the routine "timeTo display" arranges for a subsequent timeTo-display event. -
Figure 19C provides a control-flow diagram for the routine "local" called instep 1926 ofFigure 19B . Insteps step 1946, the local model remains statistically valid, and the routine "local" returns. Otherwise, instep 1948, the routine "local" selects a new local model and computes a fit for the new local model with respect to the current data points in the P-response record, instep 1950. When the fit is less than a threshold value, as determined instep 1952, then, instep 1954, a new targetT value is computed for the new local model and, instep 1956, the global variable "previousMode" is set to the current value of the global variable "displayMode," the global variable "displayMode" is set to a triple that includes an indication of the new local model, the mode "local," and the new targetT value computed instep 1954, global variable "w" is set to 1.0, and the global variable "transition" is set to TRUE. When the new local model is not less than the threshold value, as determined instep 1952, then when a parameterized plot is available with an associated fit value less than the threshold value, as determined instep 1960, then, instep 1962, a new targetT value is computed and, instep 1964, the global variables "previousMode," "transition," "displayMode," and "w" are updated to select the parameterized plot as the current model in similar fashion to the update of these local variables instep 1956. Otherwise, instep 1966, the current display mode is set to the mode "generic." -
Figure 19D provides a control-flow diagram for the routine "display," called instep 1936 ofFigure 19B . When the current display mode, stored in the global variable "displayMode," is "none," as determined instep 1970, then the routine "display" returns, since no remaining-response-time value is currently being displayed. Otherwise, when the display mode is "generic," as determined instep 1972, then a routine "generic display" is called instep 1974 to display a directional indication or other generic display, rather than a remaining-response-time value. For example, in the case of an intelligent controller controlling a furnace, the intelligent controller may display the word "heating" rather than a remaining-response-time value when the intelligent controller is unable to accurately calculate a remaining-response-time value for lack of a reasonable model. Otherwise, when the display mode is either "local" or "global," the routine "display" computes avalue Δt 1 1976 as the different between the target T time stored in the display mode local variable and the current time. When the global variable "transition" is true, as determined instep 1978, and when there is a previous model, values for which are stored in the global variable "previousMode" as determined instep 1980, then the routine "display" computes a second value Δt 2 as the difference between the previous-model targetT and the current time, instep 1982. Otherwise, the value Δt 2 is set to zero, instep 1984. Instep 1986, the routine "display" computes a Δt value as the remaining-response-time value. The remaining-response-time value is computed as a weighted combination of Δt 2 based on the previous model and Δt 1 based on the current model. Initially, this calculation is weighted towards the previous model but, as time passes, the global variable "w" is continuously decremented instep 1922 ofFigure 19D , to increasingly provide greater weight to the remaining-response-time value computed from the current model. Ultimately, the remaining-response-time value is computed only from the current model. Finally, instep 1988, the routine "display" calls a display Δt routine that displays the computed remaining-response-time value on a display component of the intelligent controller or to a remote device by the intelligent controller. - It should be noted that the intelligent controller computes remaining-response-time values and stores the computed remaining-response-time values in at least one memory prior to transferring the computed remaining-response-time values to local or remote display devices. Remaining-response-time values are generally transferred through cables, wires, optical fibers, and air.
-
FIG. 20A illustrates steps for time to temperature computation in one intelligent-thermostat implementation. The phrase "time to temperature" ("T2T") refers to an estimate of the time remaining from the current point in time until a target temperature is reached. In view of the variety of factors that can affect the course of a temperature trajectory over a particular real-world heating, ventilation, and air-conditioning ("HVAC") cycle, the methods, described below, have been found to yield good T2T estimations. Moreover, in the face of the many real-world variations that can occur, some predictable and others not so predictable, the currently described methods for selective display of the T2T information have been found to provide a valuable information-display feature to intelligent-thermostat users. The T2T estimates are displayed, when accurate estimates can be obtained, on a display interface, such asdisplay interface 410 shown inFigure 4 . When accurate estimates cannot be obtained, a generic display of temperature-change direction, such as "heating" or "cooling," may instead be displayed, or, alternatively, no T2T or generic display may be provided. - According to one implementation, the intelligent thermostat's T2T algorithm is invoked during a learning phase that occurs soon after first installation or factory reset. The intelligent thermostat begins to build and maintain its own database of T2T-related information, which is customized for a particular controlled environment and particular HVAC system that heats and cools the controlled environment, during a normal course of operation. In general, the intelligent thermostat controls the HVAC system according to a control schedule and immediate-control inputs, with significant ΔT changes and corresponding response times occurring at or before scheduled setpoint changes and after immediate-control inputs, and generally insignificant ΔT changes occurring during periods of time between setpoints and immediate-control inputs, when the intelligent thermostat seeks to maintain a specified temperature or temperature range. In one implementation, the intelligent thermostat, for each learning cycle comprising a predetermined number of heating or cooling cycles, such as 10 heating or cooling cycles, automatically tracks the temperature change ΔH(t) versus time t, where t = 0 represents the beginning of the heating cycle.
- After a suitable number of learning cycles, a sufficient amount of data is available to automatically generate a global model for the controlled environment. The global model can subsequently be continuously improved using more data points, as time goes forward, since each heating cycle represents yet another experiment. For one implementation, the time span of the global model can be limited to only a recent period, such as the most recent 30 to 60 days, so that it will be more likely to reflect the effects of the current season of the year.
-
Figure 20B provides a diagram that includes a plot of the global model. The global model may be a single-parameter straight line between ΔH = 0 and ΔH = 0.5 degrees C followed by a two-parameter curve beyond that point. - Referring again to
FIG. 20A , atstep 2008 the T2T algorithm is put into use when the current operating setpoint temperature is changed from an initial value H0 to a desired final value HF. This setpoint change can be invoked by a user by using either a walk-up dial or a remote network access facility, or alternatively can be invoked by a scheduled setpoint change that changes the current operating setpoint temperature. Atstep 2012, an initial estimate T2T(0) is computed using only the global model, by mapping the value HF - H0 = ΔH(0) into T2T(0) using the global model shown inFIG. 20B . This initial estimate, which can be called a global-model initial estimate, can be shown immediately on the intelligent thermostat display, even in real time as the user turns the dial for the case of a manual walk-up setpoint change. - At
step 2010, in what will usually last over the next several minutes of the heating cycle, a global-model estimate continues to be used to provide the current time to temperature estimate TT(t) by mapping the current measured room temperature H(t) into TT(t) using the global model. The global model T2T estimate is denoted "TTG(t)." The actual room temperature values H(t) can be provided at regular periodic intervals, such as every 30 seconds, by the intelligent thermostat sensing circuitry. In one implementation, during the time period in which the global estimate is being used for display purposes, a real-time model R is built up by tracking the current value of ΔH(t) = H(t) - H0 versus time. The real-time model R, which can alternatively be called a "local model," does not become useful for purposes of T2T estimation until a statistically meaningful linear function fitting the real-time data can be constructed, often not until there has been a certain predetermined empirically-established rise in temperature, such as 0.2 degrees C, at apoint 2054 following alowest point 2052 in trajectory of H(t). One empirically-established guideline that has been found useful is to wait until 10 temperature samples spaced 30 seconds apart subsequent to the 0.2 degree Cpost-nadir rise point 2054 have been collected. In one implementation, the real-time model R can be used to establish a real-time model estimate by using a straight-line projection onto the target temperature line, as shown inFIG. 20B . The real-time model T2T estimate is denoted " TTR(t)." For one implementation, only the latest 10 temperature samples are used to project the straight line that computes the real-time estimate TTR(t). In other implementations, all of the data points subsequent to thepoint 2054 can be used to compute the TTR(t). - When, in
step 2012, it is determined that the real-time model estimate TTR(t) is not sufficiently reliable, then step 2010 repeats until such time as TTR(t) is sufficiently reliable, whereuponstep 2014 is carried out. A smooth transition between the global-model estimate TTG(t) real-time model estimate TTR(t) occurs instep 2014, so that there is no jump in the actual value of TT(t), which can be disconcerting to a user who is viewing the display, the transition being summarized as TT(t) = TRANS[TTG(t) → TTR(t)]. The transition can be achieved in a variety of ways. In one implementation, the transition is performed as a straight-line transition from one curve to the other, where the transition occurs at a rate of not more than 10 seconds per second. Once the transition is complete, the real-time estimate alone can be used, instep 2016, until the end of the cycle. - As indicated in
FIG. 20A , following the end of the cycle atstep 2016, the global model may be recomputed, atstep 2006, so that the most recent historical data can be leveraged prior to instantiation of the next heating cycle. Alternatively, the global model can be recomputed once every several cycles, once per day, or on some other periodic basis. - Preferably, there are plural safeguards incorporated along with the steps 2014-2016 to ensure that the displayed T2T estimate makes sense. When the safeguards indicate a state of unreliability or other such problem for the real-time model estimate, the T2T display may be turned off, and instead of a time reading, a generic display, such as the term "heating," may be undertaken. For example, when the statistical deviation of the data samples from a straight line subsequent to
point 2054 is greater than a certain threshold, the T2T display may be turned off. Likewise, when the real-time model estimate of T2T starts growing for an extended period of time, or indicates an unreasonably large number, the T2T display is turned off. - Although the present invention has been described in terms of particular examples, it is not intended that the invention be limited to these examples. Modifications within the spirit of the invention will be apparent to those skilled in the art. For example, intelligent-controller logic may include logic-circuit implementations, firmware, and computer-instruction-based routines and program implementations, all of which may vary depending on the selected values of a wide variety of different implementation and design parameters, including programming language, modular organization, hardware platform, data structures, control structures, and many other such design and implementation parameters. The remaining-response-time determinations and displays may be directed to many different types of control scenarios and environmental parameters, as discussed above, including multiple different parameters. These determinations and displays may include graphical, textural, and numeric representations of the remaining response time as well as the remaining response time relative to a total response time, the remaining response time as well as the already transpired response time, estimated changes in value of other parameters during the response time, and many other types of information. The remaining response times determined by an intelligent controller can be used for a variety of additional purposes and determinations made by an intelligent controller.
- It is appreciated that the previous description of the disclosed examples is provided to enable any person skilled in the art to make or use the present disclosure. Various modifications to these examples will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other examples without departing from the scope of the invention as defined by the appended claims.
Claims (5)
- A method of calculating a time-to-temperature estimate for a thermostat controlling an HVAC system, the method comprising:receiving a first temperature representing a current temperature of an enclosure;receiving (2008) a second temperature representing a target temperature of the enclosure to initiate an HVAC cycle;computing (2009) a global-model estimate of an estimated time representing an estimated time to transition the temperature in the enclosure from the first temperature to the second temperature by the HVAC system, wherein the global-model estimate is computed based on a global model selected from a plurality of global models associated with historical time and temperature values recorded from one or more previous temperature change cycles of the enclosure, the selected global model being associated with conditions closest to current conditions;computing (2010) a local model estimate of the estimated time based on tracking current temperature values of the enclosure versus time as the enclosure transitions from the first temperature towards the second temperature, wherein computing the local model estimate comprises building a local model based on the tracked current temperature values of the enclosure versus time by constructing a linear function fitting the tracked current temperature values, and projecting the linear function onto the target temperature;computing (2010, 2014, 2016) the estimated time as a weighted combination of the global-model estimate and the local model estimate, wherein a weighting of the global-model estimate and the local model estimate is incrementally modified for providing smooth transition between (i), at the beginning of the HVAC cycle, the weighted combination being equal to the global-model estimate, and (ii), at the end of the HVAC cycle, the weighted combination being equal to the local-model estimate; andcausing (2010, 2016) the computed estimated time to be displayed on a display device as the estimated time,wherein computing the local model estimate based on tracking current temperature values comprises building up a local model for the local model estimate based on the tracked current temperature values while the global-model estimate is being used, andwherein incrementally modifying the weighting of the global-model estimate and the local model estimate is performed for providing smooth transition from the global model estimate to the local model estimate, when a statistically meaningful linear function fitting the tracked current temperature values has been constructed based on a sufficient amount of tracked current temperature values.
- The method of claim 1, wherein the second temperature is received from a control schedule stored in memory that includes one or more setpoint temperature values.
- A thermostat for calculating a time-to-temperature estimate for controlling an HVAC system, the thermostat comprising:a display device;sensing circuity (708-710, 810-812) for measuring a first temperature representing a current temperature of an enclosure;an input interface for receiving a second temperature representing a target temperature of the enclosure to initiate an HVAC cycle; andone or more processors (502) programmed to perform operations comprising:computing a global-model estimate of an estimated time representing an estimated time to transition the temperature in the enclosure from the first temperature to the second temperature by the HVAC system, wherein the global model estimate is computed based on a global model selected from a plurality of global models associated with historical time and temperature values recorded from one or more previous temperature change cycles of the enclosure, the selected global model being associated with conditions closest to current conditions;computing a local model estimate of the estimated time based on tracking current temperature values of the enclosure versus time as the enclosure transitions from the first temperature towards the second temperature, wherein computing the local model estimate comprises building a local model based on the tracked current temperature values of the enclosure versus time by constructing a linear function fitting the tracked current temperature values, and projecting the linear function onto the target temperature;computing the estimated time as a weighted combination of the global-model estimate and the local model estimate, wherein a weighting of the global-model estimate and the local model estimate is incrementally modified for providing smooth transition between (i), at the beginning of the HVAC cycle, the weighted combination being equal to the global-model estimate, and (ii), at the end of the HVAC cycle, the weighted combination being equal to the local-model estimate; andcausing the computed estimated time to be displayed on a display device as the estimated time,wherein computing the local model estimate based on tracking current temperature values comprises building up a local model for the local model estimate based on the tracked current temperature values while the global-model estimate is being used, andwherein incrementally modifying the weighting of the global-model estimate and the local model estimate is performed for providing smooth transition from the global model estimate to the local model estimate, when a statistically meaningful linear function fitting the tracked current temperature values has been constructed based on a sufficient amount of tracked current temperature values.
- The thermostat of claim 3, wherein computing the global-model estimate comprises selecting a model from among two or more preexisting models.
- The thermostat of claim 3, wherein the second temperature is received from a control schedule stored in memory that includes one or more setpoint temperature values.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161550343P | 2011-10-21 | 2011-10-21 | |
EP12842225.0A EP2769281B1 (en) | 2011-10-21 | 2012-09-30 | Intelligent controller providing time to target state |
PCT/US2012/058183 WO2013058966A1 (en) | 2011-10-21 | 2012-09-30 | Intelligent controller providing time to target state |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12842225.0A Division-Into EP2769281B1 (en) | 2011-10-21 | 2012-09-30 | Intelligent controller providing time to target state |
EP12842225.0A Division EP2769281B1 (en) | 2011-10-21 | 2012-09-30 | Intelligent controller providing time to target state |
Publications (3)
Publication Number | Publication Date |
---|---|
EP3051377A2 EP3051377A2 (en) | 2016-08-03 |
EP3051377A3 EP3051377A3 (en) | 2016-11-09 |
EP3051377B1 true EP3051377B1 (en) | 2021-09-08 |
Family
ID=48136814
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12842225.0A Active EP2769281B1 (en) | 2011-10-21 | 2012-09-30 | Intelligent controller providing time to target state |
EP16156765.6A Active EP3051377B1 (en) | 2011-10-21 | 2012-09-30 | Intelligent controller providing time to target state |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12842225.0A Active EP2769281B1 (en) | 2011-10-21 | 2012-09-30 | Intelligent controller providing time to target state |
Country Status (5)
Country | Link |
---|---|
US (4) | US8452457B2 (en) |
EP (2) | EP2769281B1 (en) |
CN (2) | CN103907071B (en) |
CA (1) | CA2853044C (en) |
WO (1) | WO2013058966A1 (en) |
Families Citing this family (40)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7784704B2 (en) | 2007-02-09 | 2010-08-31 | Harter Robert J | Self-programmable thermostat |
CA2853044C (en) | 2011-10-21 | 2021-02-16 | Nest Labs, Inc. | Intelligent controller providing time to target state |
US20130223302A1 (en) * | 2012-02-23 | 2013-08-29 | Chien-Chih Kuo | Multi-protocol switching control system suitable for controlling different electronic devices of different protocols |
US9468162B2 (en) | 2012-08-01 | 2016-10-18 | Rain Bird Corporation | Irrigation controller wireless network adapter and networked remote service |
US8554376B1 (en) | 2012-09-30 | 2013-10-08 | Nest Labs, Inc | Intelligent controller for an environmental control system |
EP2730159B1 (en) | 2012-11-07 | 2019-03-20 | Rain Bird Corporation | Irrigation control system |
DE102012113116B4 (en) * | 2012-12-27 | 2014-09-18 | Georg Bernitz | Input / output device and communication system |
US20140216704A1 (en) * | 2013-02-07 | 2014-08-07 | General Electric Company | Method for operating an hvac system |
US9810442B2 (en) | 2013-03-15 | 2017-11-07 | Google Inc. | Controlling an HVAC system in association with a demand-response event with an intelligent network-connected thermostat |
US9595070B2 (en) | 2013-03-15 | 2017-03-14 | Google Inc. | Systems, apparatus and methods for managing demand-response programs and events |
US9807099B2 (en) | 2013-03-15 | 2017-10-31 | Google Inc. | Utility portals for managing demand-response events |
WO2014155951A1 (en) * | 2013-03-29 | 2014-10-02 | 三菱電機株式会社 | Air conditioning control device, air conditioning control system, and air conditioning control method |
US9298197B2 (en) | 2013-04-19 | 2016-03-29 | Google Inc. | Automated adjustment of an HVAC schedule for resource conservation |
US9910449B2 (en) | 2013-04-19 | 2018-03-06 | Google Llc | Generating and implementing thermodynamic models of a structure |
DE202013005790U1 (en) * | 2013-06-27 | 2013-07-11 | E-Quadrat Elektroanlagen Gmbh | Device for controlling electronically controllable devices and systems in public and private buildings |
DK3014366T3 (en) * | 2013-06-27 | 2017-09-04 | iHaus AG | Device and method for controlling electronically controllable appliances and systems in public and private buildings |
US10139123B2 (en) | 2013-11-04 | 2018-11-27 | Honeywell International Inc. | Remote contractor system with summary display screen |
US9483735B2 (en) * | 2013-11-13 | 2016-11-01 | International Business Machines Corporation | Computer-based extraction of complex building operation rules for products and services |
US10002184B2 (en) | 2013-12-08 | 2018-06-19 | Google Llc | Methods and systems for identification and correction of controlled system data |
DE102014006827A1 (en) * | 2014-05-13 | 2015-11-19 | Ista International Gmbh | Method for determining the switching times and / or the heating curve characteristic of a heating system |
WO2015200342A1 (en) | 2014-06-23 | 2015-12-30 | Google, Inc. | Methods and apparatus for using smart environment devices via application program interfaces |
FR3023605B1 (en) | 2014-07-09 | 2016-08-05 | Nathanael Munier | THERMOSTAT CONNECTED REAL TIME WITH FLOATING |
US11489690B2 (en) | 2014-12-19 | 2022-11-01 | Smartlabs, Inc. | System communication utilizing path between neighboring networks |
US9985796B2 (en) * | 2014-12-19 | 2018-05-29 | Smartlabs, Inc. | Smart sensor adaptive configuration systems and methods using cloud data |
KR102390365B1 (en) | 2015-09-25 | 2022-04-26 | 삼성전자주식회사 | Portable terminal apparatus and control method thereof |
CN105467848B (en) * | 2015-12-11 | 2019-01-04 | 小米科技有限责任公司 | Smart machine control method and device |
WO2017176356A2 (en) * | 2016-02-11 | 2017-10-12 | William Marsh Rice University | Partitioned machine learning architecture |
WO2018013964A1 (en) | 2016-07-15 | 2018-01-18 | Rain Bird Corporation | Wireless remote irrigation control |
US10484201B2 (en) | 2016-09-28 | 2019-11-19 | Samsung Electronics Co., Ltd. | Distributed platform for robust execution of smart home applications |
DE102017211209A1 (en) * | 2017-06-30 | 2019-01-03 | Robert Bosch Gmbh | Method and device for adjusting at least one parameter of an actuator control system, actuator control system and data set |
US10551081B1 (en) * | 2017-07-17 | 2020-02-04 | John Miller-Russell | Air conditioner with safety device |
DE102017220097A1 (en) | 2017-11-10 | 2019-05-16 | Viessmann Werke Gmbh & Co Kg | Method for operating a heating system |
US10989427B2 (en) | 2017-12-20 | 2021-04-27 | Trane International Inc. | HVAC system including smart diagnostic capabilites |
US10900687B2 (en) | 2018-10-31 | 2021-01-26 | Trane International Inc. | Flexible scheduling HVAC graphical user interface and methods of use thereof |
US10990261B2 (en) | 2018-10-31 | 2021-04-27 | Trane International Inc. | HVAC graphical user interface with visual obscurity and methods of use thereof |
CN109870904B (en) * | 2018-12-27 | 2022-05-31 | 深圳市中电数通智慧安全科技股份有限公司 | Remote reverse control system and control method thereof |
CN112997038A (en) * | 2019-10-17 | 2021-06-18 | 日立江森自控空调有限公司 | Air conditioner, program, and method |
US11365898B1 (en) | 2020-06-12 | 2022-06-21 | Trane International, Inc. | Systems and methods for detecting a fault in a climate control system |
CN112023846A (en) * | 2020-08-21 | 2020-12-04 | 北京泊菲莱科技有限公司 | Electric heating fine control method for reaction kettle |
CN115235057B (en) * | 2021-04-25 | 2023-11-28 | 芜湖美智空调设备有限公司 | Air conditioner, control method thereof and computer readable storage medium |
Family Cites Families (83)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4223831A (en) | 1979-02-21 | 1980-09-23 | Szarka Jay R | Sound activated temperature control system |
US4274475A (en) * | 1979-06-04 | 1981-06-23 | Dieter Rall | Control apparatus for regulating building perimeter temperature change system |
US4335847A (en) | 1980-05-27 | 1982-06-22 | Levine Michael R | Electronic thermostat with repetitive operation cycle |
US4685614A (en) | 1980-05-27 | 1987-08-11 | Honeywell, Inc. | Analog to digital conversion employing the system clock of a microprocessor, the clock frequency varying with analog input |
JPS59106311A (en) | 1982-12-09 | 1984-06-20 | Nippon Denso Co Ltd | Control device for automatic air conditioner |
JPS60221654A (en) * | 1984-04-18 | 1985-11-06 | Omron Tateisi Electronics Co | Heating time detecting device |
US4632177A (en) | 1985-03-29 | 1986-12-30 | Honeywell Inc. | Clock operated thermostat having automatic changeover and optimum start |
US4751961A (en) | 1986-02-18 | 1988-06-21 | Honeywell Inc. | Electronic programmable thermostat |
JPH01252850A (en) | 1987-12-24 | 1989-10-09 | Mitsubishi Electric Corp | Display device for airconditioner |
JPH01310250A (en) * | 1988-06-09 | 1989-12-14 | Sanyo Electric Co Ltd | Display system |
US5088645A (en) | 1991-06-24 | 1992-02-18 | Ian Bell | Self-programmable temperature control system for a heating and cooling system |
US5240178A (en) | 1991-09-05 | 1993-08-31 | Dewolf Thomas L | Active anticipatory control |
US5211332A (en) | 1991-09-30 | 1993-05-18 | Honeywell Inc. | Thermostat control |
US5566879A (en) * | 1993-12-06 | 1996-10-22 | Comptel Domotique Inc. | System for centralized controlling of a plurality of temperature regulating devices |
US5611484A (en) | 1993-12-17 | 1997-03-18 | Honeywell Inc. | Thermostat with selectable temperature sensor inputs |
US5476221A (en) | 1994-01-28 | 1995-12-19 | Seymour; Richard L. | Easy-to-install thermostatic control system based on room occupancy |
US5395042A (en) | 1994-02-17 | 1995-03-07 | Smart Systems International | Apparatus and method for automatic climate control |
US5555927A (en) | 1995-06-07 | 1996-09-17 | Honeywell Inc. | Thermostat system having an optimized temperature recovery ramp rate |
CA2181842C (en) * | 1995-08-07 | 2007-03-06 | James R. Barger | Oven preheat countdown timer |
PT932398E (en) | 1996-06-28 | 2006-09-29 | Ortho Mcneil Pharm Inc | USE OF THE SURFACE OR ITS DERIVATIVES FOR THE PRODUCTION OF A MEDICINAL PRODUCT FOR THE TREATMENT OF MANIAC-DEPRESSIVE BIPOLAR DISTURBLES |
US5902183A (en) | 1996-11-15 | 1999-05-11 | D'souza; Melanius | Process and apparatus for energy conservation in buildings using a computer controlled ventilation system |
CA2202008C (en) | 1997-04-07 | 2000-02-08 | Hugues Demilleville | Energy management system |
US5909378A (en) | 1997-04-09 | 1999-06-01 | De Milleville; Hugues | Control apparatus and method for maximizing energy saving in operation of HVAC equipment and the like |
US6062482A (en) | 1997-09-19 | 2000-05-16 | Pentech Energy Solutions, Inc. | Method and apparatus for energy recovery in an environmental control system |
US5924486A (en) | 1997-10-29 | 1999-07-20 | Tecom, Inc. | Environmental condition control and energy management system and method |
US6098893A (en) | 1998-10-22 | 2000-08-08 | Honeywell Inc. | Comfort control system incorporating weather forecast data and a method for operating such a system |
US6179213B1 (en) | 1999-02-09 | 2001-01-30 | Energy Rest, Inc. | Universal accessory for timing and cycling heat, ventilation and air conditioning energy consumption and distribution systems |
US6209794B1 (en) * | 1999-08-17 | 2001-04-03 | Visteon Global Technologies, Inc. | Method for designing a vehicle thermal management system |
US6431457B1 (en) * | 1999-09-28 | 2002-08-13 | Rapid Engineering, Inc. | Air heater control |
JP4254056B2 (en) * | 2000-12-22 | 2009-04-15 | 株式会社ノーリツ | Hot water heating system and control method thereof |
US6769482B2 (en) | 2001-05-10 | 2004-08-03 | Ranco Incorporated Of Delaware | System and method for switching-over between heating and cooling modes |
US6645066B2 (en) | 2001-11-19 | 2003-11-11 | Koninklijke Philips Electronics N.V. | Space-conditioning control employing image-based detection of occupancy and use |
US7113086B2 (en) | 2003-04-07 | 2006-09-26 | Altec Energy Systems | Systems and methods for monitoring room conditions to improve occupant performance |
GB2408592B (en) * | 2003-11-27 | 2005-11-16 | James Ian Oswald | Household energy management system |
US20050128067A1 (en) | 2003-12-11 | 2005-06-16 | Honeywell International, Inc. | Automatic sensitivity adjustment on motion detectors in security system |
US7469550B2 (en) | 2004-01-08 | 2008-12-30 | Robertshaw Controls Company | System and method for controlling appliances and thermostat for use therewith |
US20050189429A1 (en) | 2004-02-28 | 2005-09-01 | Breeden Robert L. | Thermostat and method for adaptively providing a changeover between heat and cool |
US7024336B2 (en) | 2004-05-13 | 2006-04-04 | Johnson Controls Technology Company | Method of and apparatus for evaluating the performance of a control system |
US20060079983A1 (en) * | 2004-10-13 | 2006-04-13 | Tokyo Electron Limited | R2R controller to automate the data collection during a DOE |
US7058477B1 (en) | 2004-11-23 | 2006-06-06 | Howard Rosen | Thermostat system with remote data averaging |
US7802618B2 (en) | 2005-01-19 | 2010-09-28 | Tim Simon, Inc. | Thermostat operation method and apparatus |
US20060196953A1 (en) | 2005-01-19 | 2006-09-07 | Tim Simon, Inc. | Multiple thermostat installation |
US7117129B1 (en) * | 2005-03-11 | 2006-10-03 | Hewlett-Packard Development Company, L.P. | Commissioning of sensors |
WO2006112819A1 (en) * | 2005-04-14 | 2006-10-26 | Carrier Corporation | Adaptive algorithm for setting the proportional integral (pi) gains in lag-dominated hvacr systems |
WO2007027632A2 (en) | 2005-08-30 | 2007-03-08 | Siemens Building Technologies, Inc. | Application of microsystems for comfort control |
US8036760B2 (en) | 2005-10-04 | 2011-10-11 | Fisher-Rosemount Systems, Inc. | Method and apparatus for intelligent control and monitoring in a process control system |
US7644869B2 (en) | 2005-12-28 | 2010-01-12 | Honeywell International Inc. | Auxiliary stage control of multistage thermostats |
US20070228183A1 (en) | 2006-03-28 | 2007-10-04 | Kennedy Kimberly A | Thermostat |
US7580775B2 (en) | 2006-07-11 | 2009-08-25 | Regen Energy Inc. | Method and apparatus for implementing enablement state decision for energy consuming load based on demand and duty cycle of load |
US7496414B2 (en) * | 2006-09-13 | 2009-02-24 | Rockwell Automation Technologies, Inc. | Dynamic controller utilizing a hybrid model |
US8571689B2 (en) * | 2006-10-31 | 2013-10-29 | Rockwell Automation Technologies, Inc. | Model predictive control of fermentation in biofuel production |
US7596431B1 (en) * | 2006-10-31 | 2009-09-29 | Hewlett-Packard Development Company, L.P. | Method for assessing electronic devices |
US7784704B2 (en) | 2007-02-09 | 2010-08-31 | Harter Robert J | Self-programmable thermostat |
US8027518B2 (en) | 2007-06-25 | 2011-09-27 | Microsoft Corporation | Automatic configuration of devices based on biometric data |
US8019567B2 (en) | 2007-09-17 | 2011-09-13 | Ecofactor, Inc. | System and method for evaluating changes in the efficiency of an HVAC system |
US7848900B2 (en) | 2008-09-16 | 2010-12-07 | Ecofactor, Inc. | System and method for calculating the thermal mass of a building |
US20090171862A1 (en) | 2007-12-28 | 2009-07-02 | Johnson Controls Technology Company | Energy control system |
US8255090B2 (en) * | 2008-02-01 | 2012-08-28 | Energyhub | System and method for home energy monitor and control |
US7822578B2 (en) * | 2008-06-17 | 2010-10-26 | General Electric Company | Systems and methods for predicting maintenance of intelligent electronic devices |
WO2010000077A1 (en) * | 2008-07-03 | 2010-01-07 | Belimo Holding Ag | Actuator for hvac systems and method for operating the actuator |
US8180492B2 (en) | 2008-07-14 | 2012-05-15 | Ecofactor, Inc. | System and method for using a networked electronic device as an occupancy sensor for an energy management system |
US7918406B2 (en) | 2008-07-22 | 2011-04-05 | Howard Rosen | Override of nonoccupancy status in a thermostat device based upon analysis of recent patterns of occupancy |
US20100025483A1 (en) | 2008-07-31 | 2010-02-04 | Michael Hoeynck | Sensor-Based Occupancy and Behavior Prediction Method for Intelligently Controlling Energy Consumption Within a Building |
CA2678827C (en) | 2008-09-15 | 2017-12-05 | Johnson Controls Technology Company | Transition temperature adjustment user interfaces |
US8543244B2 (en) | 2008-12-19 | 2013-09-24 | Oliver Joe Keeling | Heating and cooling control methods and systems |
US9020647B2 (en) | 2009-03-27 | 2015-04-28 | Siemens Industry, Inc. | System and method for climate control set-point optimization based on individual comfort |
JP5438350B2 (en) * | 2009-03-30 | 2014-03-12 | 大阪瓦斯株式会社 | Mist sauna equipment |
US8498753B2 (en) | 2009-05-08 | 2013-07-30 | Ecofactor, Inc. | System, method and apparatus for just-in-time conditioning using a thermostat |
US8596550B2 (en) | 2009-05-12 | 2013-12-03 | Ecofactor, Inc. | System, method and apparatus for identifying manual inputs to and adaptive programming of a thermostat |
US8350697B2 (en) | 2009-05-18 | 2013-01-08 | Alarm.Com Incorporated | Remote device control and energy monitoring by analyzing data and applying rules |
US8626344B2 (en) | 2009-08-21 | 2014-01-07 | Allure Energy, Inc. | Energy management system and method |
US20110046805A1 (en) | 2009-08-18 | 2011-02-24 | Honeywell International Inc. | Context-aware smart home energy manager |
JP5373532B2 (en) * | 2009-10-06 | 2013-12-18 | アズビル株式会社 | Air conditioning operation device and air conditioning operation method |
US8352082B2 (en) * | 2009-12-31 | 2013-01-08 | Schneider Electric USA, Inc. | Methods and apparatuses for displaying energy savings from an HVAC system |
US20110185895A1 (en) | 2010-02-03 | 2011-08-04 | Paul Freen | Filter apparatus and method of monitoring filter apparatus |
US20110196539A1 (en) * | 2010-02-10 | 2011-08-11 | Honeywell International Inc. | Multi-site controller batch update system |
US8412381B2 (en) * | 2010-03-24 | 2013-04-02 | Mitsubishi Electric Research Laboratories, Inc. | HVAC control system |
EP2556416B1 (en) * | 2010-04-08 | 2017-01-11 | Energyresource Management Corp. | Energy-saving measurement, adjustment and monetization system and method |
US20120016524A1 (en) * | 2010-07-16 | 2012-01-19 | General Electric Company | Thermal time constraints for demand response applications |
US8090477B1 (en) | 2010-08-20 | 2012-01-03 | Ecofactor, Inc. | System and method for optimizing use of plug-in air conditioners and portable heaters |
US9104211B2 (en) * | 2010-11-19 | 2015-08-11 | Google Inc. | Temperature controller with model-based time to target calculation and display |
US20120085831A1 (en) | 2010-10-07 | 2012-04-12 | Energy Eye, Inc. | Systems and methods for controlling the temperature of a room based on occupancy |
CA2853044C (en) * | 2011-10-21 | 2021-02-16 | Nest Labs, Inc. | Intelligent controller providing time to target state |
-
2012
- 2012-09-30 CA CA2853044A patent/CA2853044C/en active Active
- 2012-09-30 WO PCT/US2012/058183 patent/WO2013058966A1/en active Application Filing
- 2012-09-30 EP EP12842225.0A patent/EP2769281B1/en active Active
- 2012-09-30 EP EP16156765.6A patent/EP3051377B1/en active Active
- 2012-09-30 US US13/632,028 patent/US8452457B2/en active Active
- 2012-09-30 CN CN201280051626.4A patent/CN103907071B/en active Active
- 2012-09-30 CN CN201510867899.1A patent/CN105487395B/en active Active
-
2013
- 2013-05-02 US US13/875,920 patent/US8761946B2/en active Active
-
2014
- 2014-06-17 US US14/307,359 patent/US9448568B2/en active Active
-
2016
- 2016-09-09 US US15/261,203 patent/US10241484B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
CN105487395A (en) | 2016-04-13 |
EP2769281B1 (en) | 2016-04-13 |
EP2769281A4 (en) | 2014-12-17 |
US8452457B2 (en) | 2013-05-28 |
EP3051377A3 (en) | 2016-11-09 |
US20140094972A1 (en) | 2014-04-03 |
CN103907071B (en) | 2016-01-20 |
US20140364966A1 (en) | 2014-12-11 |
CN105487395B (en) | 2018-10-26 |
US9448568B2 (en) | 2016-09-20 |
US8761946B2 (en) | 2014-06-24 |
CA2853044C (en) | 2021-02-16 |
CA2853044A1 (en) | 2013-04-25 |
EP2769281A1 (en) | 2014-08-27 |
US20130103621A1 (en) | 2013-04-25 |
US10241484B2 (en) | 2019-03-26 |
US20160377308A1 (en) | 2016-12-29 |
EP3051377A2 (en) | 2016-08-03 |
WO2013058966A1 (en) | 2013-04-25 |
CN103907071A (en) | 2014-07-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10241484B2 (en) | Intelligent controller providing time to target state | |
US10416627B2 (en) | HVAC control system providing user efficiency-versus-comfort settings that is adaptable for both data-connected and data-unconnected scenarios | |
US10775814B2 (en) | Selective carrying out of scheduled control operations by an intelligent controller | |
US9417637B2 (en) | Background schedule simulations in an intelligent, network-connected thermostat | |
US10684038B2 (en) | Automated control-schedule acquisition within an intelligent controller | |
CA2885374C (en) | Automated presence detection and presence-related control within an intelligent controller | |
US20150167989A1 (en) | Intelligent environment control including use of smart meter and energy cost information in heat pump and auxiliary heating control | |
US20090077397A1 (en) | User interface for demand side energy management | |
EP2901232B1 (en) | Intelligent controller for an environmental control system | |
Gruber et al. | Predictive control for heating applications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
AC | Divisional application: reference to earlier application |
Ref document number: 2769281Country of ref document: EPKind code of ref document: P |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
PUAL | Search report despatched |
Free format text: ORIGINAL CODE: 0009013 |
|
AK | Designated contracting states |
Kind code of ref document: A3Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE INC. |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: F24F 11/00 20060101ALI20161006BHEPIpc: G05D 23/24 20060101ALI20161006BHEPIpc: G05D 23/30 20060101AFI20161006BHEP |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20170508 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20190618 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
INTG | Intention to grant announced |
Effective date: 20210322 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AC | Divisional application: reference to earlier application |
Ref document number: 2769281Country of ref document: EPKind code of ref document: P |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EPRef country code: ATRef legal event code: REFRef document number: 1429147Country of ref document: ATKind code of ref document: TEffective date: 20210915 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602012076667Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG9D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: FP |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20211208Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20211208Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1429147Country of ref document: ATKind code of ref document: TEffective date: 20210908 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20211209 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20210930 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220108Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220110Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602012076667Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210930Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210930Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210930 |
|
26N | No opposition filed |
Effective date: 20220609 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210930Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210930 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20120930Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: NLPayment date: 20230926Year of fee payment: 12Ref country code: GBPayment date: 20230927Year of fee payment: 12 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230925Year of fee payment: 12Ref country code: DEPayment date: 20230927Year of fee payment: 12 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210908 |
CN114846463A - Identification and publication of repeatable queries - Google Patents
Identification and publication of repeatable queries Download PDFInfo
- Publication number
- CN114846463A CN114846463A CN201980103230.1A CN201980103230A CN114846463A CN 114846463 A CN114846463 A CN 114846463A CN 201980103230 A CN201980103230 A CN 201980103230A CN 114846463 A CN114846463 A CN 114846463A
- Authority
- CN
- China
- Prior art keywords
- query
- search
- search results
- user device
- queries
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9536—Search customisation based on social or collaborative filtering
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
Abstract
Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for identifying and publishing search queries that are predicted to be published in the future. A set of search queries issued by a plurality of user devices may be obtained. For each query instance, context data may be obtained. The first query and its context data may be input into a model that outputs a likelihood that the query will be issued in the future. The model may be trained using context data for the training query and corresponding labels for the training query. The learning model outputs a likelihood of a first query being issued in the future, and if the likelihood meets a repeatability threshold, the query is stored as a repeatable query. Subsequently, the stored repeatable query is issued upon selection of the user-selectable interface component, and the search engine provides search results for the query.
Description
Background
This description relates to the identification and publication of repeatable search queries (also referred to herein as "repeatable queries") (i.e., search queries that have been previously published and are expected to be published in the future by one or more user devices).
A user of a user device submits a search query to a search engine (or another search application) for information on different topics, and in response, the search engine (or the other search application) provides search results that are responsive to those topics. In some cases, a user may periodically submit the same search query that was previously submitted by the user or other users. For example, a user may periodically issue a search query, such as a "celebrity". In this example, each time the search query is received by the search engine, the search engine searches for and identifies a set of search results that are responsive to the query. In some cases, for such repeated queries, the processing of the search engine results in the identification and provision of the same set of search results.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that can include the actions of: obtaining a set of search queries that have been issued by a plurality of user devices; determining, for each instance of each query in the set of search queries, context data representing a context in which the query was issued and user interactions with a search results page provided in response to the query; inputting, to a learning model and for a first query of a set of search queries, context data determined for each instance of issuance of the first query, wherein the learning model (1) outputs a likelihood that the search query will be issued in the future and (2) is trained using the context data determined for a set of training queries and a corresponding set of labels of the set of training queries, wherein each label indicates whether the training query has been issued a threshold number of times; obtaining, from the learning model and based on the input context data, a likelihood that the first query will be issued in the future; identifying the first query as a repeatable query based on a likelihood that the first query will be issued in the future meeting a threshold of repeatability; storing the first query with other search queries that have been identified as repeatable queries; providing a user-selectable interface component on the user device that, upon selection by the user device and without receiving user input for the component of the query, causes the query to be issued from the repeatable query; receiving a first selection of a user-selectable interface component from a user device, the first selection requesting that a particular query be issued from a repeatable query; and providing, by the search engine and in response to receiving the first selection from the user device, a first search results page including search results for the particular query. Further embodiments of this aspect include corresponding systems, apparatus, devices and computer programs configured to perform the actions of the methods. The computer program (e.g., instructions) may be encoded on a computer storage device. These and other embodiments can each optionally include one or more of the following features.
In some implementations, storing the first query with other search queries that have been identified as repeatable queries may include storing, by a search engine, the first query with search results responsive to the first query.
In some implementations, the search engine can include one or more of the stored search results in a first search results page.
In some implementations, the context data for each instance of each query in the set of search queries can include one or more of: the language in which the query is written; the geographic location from which the query was issued; a geographic location of interest to the user device issuing the query; the number of times a particular user device has issued the query; the number of unique user devices issuing the query for a threshold number of times; embedding of the query, which represents semantic relationships between the query and other queries; a determination as to whether the query is for a particular network location or website; a selection by the user device of one or more search results provided for the query on a search results page; a time at which the user device viewed one or more search results provided for the query on the search results page; and selection of a navigation interface element on a search results page provided for the query.
In some implementations, the user-selectable interface component can be a selectable shortcut link included at a particular location on the user device, where selection of the selectable shortcut link by the user device causes a particular query associated with the shortcut link to be published to the search engine.
In some implementations, the user-selectable interface component can be a drop-down menu that lists a subset of the repeatable queries and from which the user can select a particular query, wherein selection of the particular query causes publication of the particular query to be published to the search engine.
In some implementations, the subset of repeatable queries can include queries expected to be repeated by the user device based on a search history that includes queries previously issued by the user device.
In some embodiments, a method may include the operations of: in response to identifying the first query as a repeatable query, determining that the user device is expected to issue the first query in the future based on a search history of the user device; and in response to determining that the user device is expected to issue the first query in the future, providing a set of search results for the first query in a notification to the user device and without receiving any request from the user device to execute the first query.
In some embodiments, a method may include the operations of: receiving a second selection of the user-selectable interface component from the user device, the second selection requesting issuance of the particular query; and providing, by the search engine and in response to receiving the second selection from the user device, a second search results page including search results for the particular query, wherein the search results page is different from the first search results page.
In some implementations, the second search results page can be different from the first search results page if: the search results of the second results page are ordered differently than the search results of the first search results page; the search results of the second results page are different from the search results of the first search results page; or the second results page includes dynamic content that is not included on the first results page.
Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. For example, the innovations described in this specification may conserve computing resources for providing search results in response to issued search queries. Traditionally, when a user composes and submits a search query to a search engine, the search engine searches for and identifies search results that are responsive to the search query. In contrast, the innovations described in this specification may reduce the computational resources required to search and identify identified search results for certain search queries. For example, the innovations described in this specification can identify a set of search queries as repeatable queries and store responsive search results for those queries. Subsequently, when the user device issues one of the repeatable queries, the search engine may bypass processing of the search engine and provide previously stored responsive search results for the repeatable query.
The innovations described in this specification can also save time and resources typically required for manually issuing search queries. Traditionally, users manually type each search query into an interface provided by a search engine (e.g., a text box provided on a search engine website), and then select an interface component (e.g., a "go to" or "search" button) that causes the search query to be posted to the search engine. In contrast, the innovations described in this specification provide user-selectable interface components (e.g., a drop-down menu including repeatable queries, a device home screen quick launch icon that directly issues a particular repeatable query to a search engine) that allow selection of an already-formed search query, which results in the issuance of the selected user query to the search engine. In some implementations, no user selection is even required, and search results for search queries that are expected to be issued by the user in the future are provided to the user device in the notification. As a result, user resources and processing of interface features on a search engine website (or other application) required to enter and process a search query entered by a user may be saved.
The innovations described in this specification may also conserve network resources by obtaining search results for frequently repeated queries in the background while the user's device is on a local (e.g., home or work) wireless network. Relatedly, when the user device is determined to be in an unreliable network (e.g., a remote location with poor cellular LTE service, when the user device is not connected to the network for a threshold amount of time within a particular time interval), the search results of the repeated queries may be stored on the user device for a longer time, and thus, may be available to the user when the user's device is offline or only intermittently connected to the network.
The innovations described in this specification may also improve the ease of use of search engines by enabling users to publish certain repeatable queries without entering any portion of such queries (i.e., any text that is part of the query). Relatedly, the innovations described in this specification may improve and/or enhance user engagement by providing updated or different search results (or other dynamic content) in response to search queries that are regularly issued by (or expected to be issued by) users.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 is a block diagram of an example environment in which a search engine provides search results in response to a search query issued by a user device.
FIG. 2 is a block diagram illustrating the structure and operation of the search engine of FIG. 1 in identifying and enabling the publication of repeatable queries.
FIG. 3 is a flow diagram of an example process for identifying and issuing repeatable queries.
FIG. 4 is a block diagram of an example computer system.
Like numbers and designations in the various drawings indicate like elements.
Detailed Description
This description relates to the identification and publication of repeatable search queries. As summarized below and described in more detail throughout this specification, a search engine may include a repeatable query manager that identifies a set of repeatable queries and enables a user device to quickly select and publish one or more of the queries.
To accomplish this, the repeatable query manager of the search engine first obtains a set of search queries that have been issued by different user devices, for example, from a query log of the search engine. For each instance of each query in the set of search queries, the repeatable query manager determines context data representing a context in which the query was issued and user interactions with search result pages provided in response to the query. Examples of such contextual data may include the language in which the query was composed, the geographic location in which the query was issued, the geographic location in which the user device issuing the query is interested, the number of times the query has been issued, generally or by a particular user device, the number of unique user devices that have issued the query a threshold number of times, query embedding representing semantic relationships between the query and other queries, a determination as to whether the query points to a particular network location or website, a selection by the user device of one or more results provided for the query on a search results page, a time at which the user device viewed one or more results provided for the query on the search results page, and a selection of a navigation interface element (e.g., back button, next button, etc.) on the search results page provided for the query.
To determine whether a first query from a set of queries is a repeatable query, the repeatable query manager first inputs the query and corresponding context data for each instance of the query into a learning model. The learning model outputs the likelihood that a query will be issued in the future. The learning model is trained using the context data determined for the set of training queries and a corresponding set of labels for the set of training queries, each label in the corresponding set of labels indicating whether the training query has been issued a threshold number of times. Each label indicates whether the query is observed to repeat or is otherwise repeatable. Based on the data input into the learning model, the learning model outputs a likelihood that the first query will be issued in the future.
The repeatable query manager then compares the likelihood of learning model output to a repeatability threshold. If the likelihood meets (e.g., meets or exceeds) a repeatability threshold, the repeatable query manager identifies the query as repeatable; otherwise, it identifies the query as non-repeatable. If the first query is identified as repeatable, the repeatable query manager stores the first query with other search queries that have been identified as repeatable queries.
When a user accesses an interface provided by a search engine (e.g., a landing web page of a search engine website), the repeatable query manager provides a user-selectable interface component that, upon selection by the user device and without receiving user input for the component of the query, results in publication of a query from the repeatable query. As used in this specification, a component of a query is text entered, for example using a keyboard, by a user of a user device when formulating a search query. For example, for the query "John Doe Sight," the components of the query may be the letter "J," the word "John Doe," or the entire query.
In some implementations, the user-selectable interface component can be a drop-down menu listing a subset of previously identified repeatable queries. Selection of any repeatable queries listed in such drop-down menus by the user device causes the user device to issue the query to a search engine. In some implementations, the user-selectable interface component can also be a shortcut link included at a particular user device location (e.g., a home screen of the user device). Selection of the shortcut link by the user device causes an application (e.g., a web browser) to be launched and a repeatable search query associated with the shortcut link to be issued to a search engine.
The search engine receives a selection of a user-selectable interface component from the user device, the selection requesting that a particular query be issued from the repeatable queries. In response to receiving a selection of the user device, the search engine provides a search results page that includes search results for the issued query.
These and additional features are described in more detail below with reference to fig. 1-4.
In addition to the description throughout this specification, a user may be provided with controls that allow the user to make selections as to whether and when the systems, programs, or features described herein may enable the collection of user information (e.g., information about the user's social network, social behavior or activity, profession, the user's preferences, or the user's current location) and whether to send content or communications to the user from a server. Further, certain data may be processed in one or more ways before it is stored or used, so that the personal identity information is deleted. For example, the identity of the user may be processed such that no personal identity information can be determined for the user, or the geographic location of the user may be summarized where location information is obtained (such as to a city, zip code, or state level) such that no particular location of the user can be determined. Thus, the user can control what information is collected about the user, how the information is used, and what information is provided to the user.
FIG. 1 is a block diagram of an example environment 100 in which a search engine provides search results in response to a search query issued by a user device.
A computer network 102, such as a Local Area Network (LAN), Wide Area Network (WAN), the internet, or a combination thereof, connects a publisher website 104, a user device 106, and a search engine 108. The environment 100 may include a number of publisher websites 104 and user devices 106.
A resource is any data that may be provided by a publisher 104 over the network 102 and associated with a resource address. Resources include HTML pages, word processing documents, and Portable Document Format (PDF) documents, images, videos, and feed sources, to name a few. The resources may include content, such as words, phrases, pictures, etc., and may include embedded information (such as meta information and hyperlinks) and/or embedded instructions (such as scripts).
The user device 106 is an electronic device capable of requesting and receiving resources over the network 102. Example user devices 106 include personal computers, mobile communication devices, and other devices that can send and receive data over the network 102. The user device 106 typically includes a user application (such as a web browser) to facilitate sending and receiving data over the network 102. A web browser may enable a user to display and interact with text, images, video, music, and other information on web pages of a web site, typically located on the world wide web or a local area network.
To facilitate a search for these resources, the search engine 108 generally identifies the resources by crawling the publisher web sites 104 and indexing the resources provided by the publisher web sites 104. The index and optionally cached copies of the resources are stored in index 110.
The user device 106 submits a search query to the search engine 108. The search query is submitted in the form of a search request that includes the search request and optionally a unique identifier that identifies the user device 106 that submitted the request. The unique identifier may be data from a cookie stored at the user device, or if the user maintains an account on the search engine 108, the unique identifier may be a user account identifier, or the unique identifier may be another identifier that identifies the user device 106 or the user using the user device 106.
In response to a search request, the search engine 108 may use the index 110 to identify resources relevant to the query. The search engine 108 identifies resources in the form of search results and returns the search results to the user device 106 in a search results page resource. Search results are data generated by the search engine 110 that identifies resources that satisfy a particular search query and includes resource locators for the resources. Example search results may include a web page title, a text snippet extracted from the web page, and a URL of the web page.
The search results may be ranked based on a score related to the resource identified by the search results, such as an information retrieval ("IR") score, and optionally a separate ranking of each resource relative to other resources (e.g., authority scores). The search results may be ranked according to these scores and provided to the user device 106 according to an order.
The user device 106 receives the search results page and presents the page for presentation to the user. In response to a user selecting a search result at the user device 106, the user device 106 requests a resource identified by a resource locator included in the selected search result. A publisher of the website 104 hosting the resource receives a request for the resource from a user device 106 and provides the resource to the requesting user device 106.
In some implementations, queries submitted from the user devices 106 are stored in the query log 112. Click data for the query, web pages referenced by the search results, and/or other interactions with the query by the user (e.g., time to view the search results, selection of a particular search result, selection of a different navigation element on the search results page (such as a back button or a next button)) are stored in click log 114. Query log 112 and click log 114 define search history data 116, which search history data 116 includes data from and related to previous search requests associated with the unique identifier of user device 106. The click log defines actions to be taken in response to search results provided by the search engine 108. Query log 112 and click log 114 may be used to map queries submitted by user devices to web pages identified in search results and actions taken by the user (i.e., this data is associated with identifiers from search requests so that the search history for each identifier may be accessed). Thus, the click log 114 and the query log 112 may be used by a search engine to determine the sequence of queries submitted by a user device, the actions taken in response to the queries, and the frequency with which the queries were submitted.
The search engine 108 also includes a repeatable query manager 118, the repeatable query manager 118 identifying repeatable queries, i.e., search queries that have been previously issued and are expected to be repeated in the future by one or more users. The structure and operation of the repeatable query manager 118 in identifying repeatable queries and making those queries available for publication by users of the search engine is further described with reference to fig. 2 and 3.
FIG. 2 is a block diagram 200 illustrating the structure and operation of the search engine of FIG. 1 in identifying and enabling the publication of repeatable queries.
The repeatable query manager 118 of the search engine 108 identifies repeatable queries using search queries that have been previously issued to the search engine 108. The repeatable query manager 118 of the search engine 108 includes a context analyzer 202, a learning model 204, and a repeatable query cache 206. The operation of each of these components is summarized below, but described in more detail with reference to fig. 3. Although the repeatable query manager 118 is shown in FIG. 2 as part of the search engine 108, in some implementations, the repeatable query manager 118 can be, for example, a network component separate from the search engine 108 (which runs instructions on a separate process). In such an embodiment, the repeat query manager 118 communicates with the search engine 108 over a network. Similarly, in some implementations, the components of the repeatable query manager 118 can be separate network components that communicate with each other and/or with the search engine 108, e.g., over a network.
The context analyzer 202 determines context data for previously issued search queries, for example, from the query log 112 and the click log 114. The learning model 204 determines the likelihood that a particular query will be issued by the user device 106 in the future. The learning model 204 receives as input a particular query and context data for the query, and outputs a likelihood that the query will be published by the user device 106 in the future. The learning model 204 may be a supervised machine learning model, a rules engine, or other suitable statistical model. In embodiments where the learning model 204 is implemented as a supervised machine learning model, it is trained using a set of training search queries and their context data, as well as a corresponding set of labels that identify whether the training queries are repeated in the future. In particular, each tag indicates whether the query is observed to repeat or is otherwise repeatable.
Depending on the output of the learning model 204 that indicates a likelihood that the query will be repeated in the future, the repeatable query manager 118 may identify the input query as a repeatable query by comparing the likelihood to a repeatability threshold (as further described with reference to fig. 3). If the repeatable query manager 118 identifies the query as a repeatable query, the repeatable query manager 118 stores the query in the repeatable query cache 206 along with other queries identified as repeatable queries.
In some implementations, the repeatable query manager 118 makes available a subset of the repeatable queries stored in the repeatable query cache 206 on a user interface provided by the search engine 108. This is illustrated in the user device 106-B shown in FIG. 2 that includes the repeatable query selector 216. The repeatable query selector 216 may be a drop-down menu that lists a subset of the repeatable queries (or another suitable user interface element that may display a selectable list of items). The user selecting any query from the drop down list, followed by selection of the search button 212, causes the query to be issued to the search engine 108. In some implementations, selection of any query from the repeatable query selector 216 results in automatic publication of a search query to a search engine. In other words, in such implementations, the user of the user device 106-B does not have to separately select the search button 212 to issue the search query. When a repeatable query is so issued, the user device need not enter any query text in the search box 214.
In some implementations, the repeatable query manager 118 can provide an option (such as a "save as shortcut" button 216) on a user interface provided by the search engine 108 to save one or more repeatable queries as shortcut links on a home screen of the user device. In such an implementation, the user device 106-B may select a particular query from the repeatable query selector 216 and then select the "save as shortcut" 218 button. This results in the query being saved on the home screen of the user device (or another device location configured by the user of the user device), for example as an icon (repeat query icon 210), as shown on user device 106-a. Alternatively or additionally, the repeatable query manager 118 can provide a "save as shortcut" 216 button on the search results page, the selection of which similarly results in the generation of a repeat query icon on the home screen of the user device (or other user-selected device location). Subsequent selection of the repeat query icon 210 by the user results in launching an application (e.g., a web browser) that launches the search engine 108 and issues a repeatable query.
In some implementations, the repeatable query manager 118 stores the repeatable queries and the search results corresponding to the queries in the repeatable query cache 206. In further embodiments, search results corresponding to the repeatable query are stored in a cache of the index 110. In either implementation, the search engine 108 retrieves and provides stored search results in response to the repeatable query being issued by the user of the user device 106.
The above-described operations of the repeatable query manager 118, and additional operations thereof, are further described with reference to FIG. 3.
FIG. 3 is a flow diagram of an example process 300 for identifying and issuing repeatable queries. The operations of process 300 are described below as being performed by components of the systems described and depicted in fig. 1 and 2. The operation of process 300 is described below for illustrative purposes only. The operations of process 300 may be performed by any suitable device or system (e.g., any suitable data processing apparatus). The operations of process 300 may also be implemented as instructions stored on a (transitory or non-transitory) computer-readable medium. Execution of the instructions causes the one or more data processing apparatus to perform the operations of process 300. As described above with reference to FIG. 2, the repeatable query manager 118 (or any component thereof) may be, but need not be, part of the search engine 108.
The repeatable query manager 118 obtains a set of search queries (at 302). In some implementations, the repeatable query manager 118 obtains from the query log 112 a set of search queries that have been previously issued by one or more user devices.
The repeatable query manager 118 determines context data for each instance of each query in the set of search queries (at 304). In some implementations, for each instance of each query in the obtained set of search queries, the context analyzer 202 determines context data that represents the context in which the query was issued and/or the user interaction with the search results page provided in response to the query. The context data may be stored in and obtained directly from the query log 112 and/or the click log 114. Context data may also be obtained by processing data stored in query log 112 and/or click log 114.
The following paragraphs provide examples of the types of contextual data that the context analyzer 202 may obtain for each query instance. The following examples are illustrative, and not an exclusive list of the types of context data that may be determined.
One example of contextual data includes the language in which the query was composed/entered. If query log 112 includes a "query language" field (or other similar field), context analyzer 202 may obtain a language value or identifier stored in the field. Optionally, the context analyzer 202 may enter the text of the query into a language identifier that identifies the language of the entered query text.
Another example of contextual data includes the geographic location where the query was issued. For example, the geographic location may include a country, city, state, or other suitable location identifier of the query origin. The query log 112 generally includes such geographic locations of queries, which in turn may be obtained by the context analyzer 202.
Another example of contextual data includes a geographic location (e.g., country, city, state, or other suitable location identifier) of interest to the user device 106 that issued the query. In some implementations, the geographic location may be determined using a search history or content viewing history of the user device, which may be obtained from, for example, query logs 112, click logs 114, or from other sources, such as a profile of the user device for the search engine 108.
Another example of contextual data includes the number of times a query has been issued generally and/or by one or more user devices. The content analyzer 202 may obtain this information by parsing the query log 112 to count the number of times a particular query has been issued, as well as the number of times a particular query has been issued by a unique (i.e., unique) user device.
Another example of context data includes a plurality of unique user devices that issued a query a threshold number of times. In some implementations, the context analyzer 202 parses the query log 112 to count the number of times a particular query has been issued by a unique (i.e., unique) user device. The context analyzer 202 then compares the count to a threshold (e.g., two, three, or another value) to determine whether the number of user devices that issued the query did so a threshold number of times.
Another example of contextual data includes determining an embedding of a query, the embedding representing a semantic relationship between the query and other queries. Such embedding may be accomplished, for example, using neural network-based techniques for Natural Language Processing (NLP), which may include bi-directional encoder representations from transformers.
Another example of contextual data includes determining whether a query is directed to a particular network location or website. In some implementations, the context analyzer 202 may compare the text of the query to, for example, a list of known websites/network locations, and if a match is found, the context analyzer 202 determines that the particular query is directed to the identified network location or website. In some implementations, determining whether the query is for a particular network location includes (1) determining whether a site link appears on search results of the query, and (2) determining, for example, a percentage of user interaction to obtain a highest returned result in the set of search results that indicates a likelihood that the user is most interested in the particular result.
Another example of contextual data includes user device interactions on a search results page. Such interactions are stored in click log 114, which may include, for example, a selection by user device 106 of one or more search results provided for the query on a search results page, a time of viewing by the user device of one or more results provided for the query on a search results page, a selection of or interaction with one or more navigation interface elements (e.g., a next button to navigate to a next result set, a back button to return to the original search page, entering text into a search box to modify the query, and/or pressing a search button (or similar interface component) to publish another search), among others.
The repeatable query manager 118 inputs the context data of the first query into the learning model 204 (at 306). In some implementations, the context analyzer 202 inserts the first query and one or more context data items for each instance of the query into the learning model. As described with reference to fig. 2, the learning model may be a supervised machine learning model that (1) outputs a likelihood of future issuance of a query, and (2) is trained using context data determined for a set of training queries and a corresponding set of labels for the set of training queries, in which case each label indicates whether a training query has been issued a threshold number of times (two, three, or any other selected value). In particular, each tag indicates whether the query is observed to repeat or is otherwise repeatable. In some implementations, the training queries include only queries that are repeated within a certain time period (e.g., 28 days, one month, etc.). Such techniques avoid training the model using queries that repeat only after a longer time interval, and thus are not queries that the user is likely to repeat in a shorter interval. Further, in some implementations, additional models (e.g., a supervised machine learning model, a rules engine, or another statistical model) may be used in conjunction with the learning model to determine a particular time at which repeated queries are expected. For example, the additional model may be trained using known repeated queries and times at which such queries are issued. Thus, queries identified by the learning model as duplicate queries may be input to the additional model, which in turn identifies the times at which the query is expected to be repeated. For example, if the additional model is trained using search queries issued 70% of the time in the morning (e.g., search queries for "weather"), the additional model may predict that the query is expected to repeat in the morning.
The repeatable query manager 118 obtains (at 308) a likelihood that a first query will be issued by the user device in the future from the learning model 204. In some implementations, based on the input first query and corresponding context data, the learning model 204 outputs a likelihood that the first query will be issued by the user device in the future.
The repeatable query manager obtains the output and uses it to determine whether the first query is a repeatable query (at 310). In some implementations, the repeatable query manager 118 determines whether the first query is repeatable by comparing the likelihood that the first query will be issued in the future to a repeatability threshold. The repeatability threshold may be a value specified by the search engine 108 operator that is intended to indicate a high likelihood of query repeatability. If the likelihood meets (e.g., meets or exceeds) a repeatability threshold, the repeatable query manager 118 identifies the first query as a repeatable query. On the other hand, if the likelihood does not meet the repeatability threshold, the repeatable query manager 118 does not identify the first query as a repeatable query.
If the first query is identified as a repeatable query, the repeatable query manager 118 stores (at 312) the first query with other search queries that have been identified as repeatable queries. In some implementations, the repeatable query manager 118 stores the repeatable queries in the repeatable query cache 206. In such an embodiment, the repeatable query manager 118 stores the first query in the repeatable query cache 206 along with other repeatable queries.
The repeatable query manager 118 provides or causes user-selectable interface components to be provided on the user device that, upon selection by the user device and without receiving user input for the components of the query, result in publication of the query from the repeatable query (at 314). In some implementations, when a user navigates to an interface provided by a search engine (e.g., a website of the search engine), the repeatable query manager 118 provides a user-selectable interface component on the interface. The user-selectable interface component may be a drop-down menu or another selectable interface component that may list a set of repeatable search queries (which are stored in the repeatable query cache 206) and enable a user to select one (or more) of the listed search queries.
The repeatable query manager 118 can provide or cause a subset of the repeatable queries to be provided for viewing on a selectable user interface, which can be listed and made available in a user selectable interface component. The list of repeatable search queries included in the user-selectable interface component is provided by the repeatable query manager 118 without the component that receives the query (also referred to herein simply as the "component of the search query" or the "query component"). In other words, the list of repeatable search queries provided by the repeatable query manager 118 is independent of the query (or any portion thereof) entered by the user.
The repeatable query manager 118 can select a subset of the repeatable queries in different ways (and provide the repeatable queries for display in the user-selectable interface component). For example, the repeatable query manager 118 may select a random set of N queries listed in the repeatable query cache 206. As another example, the repeatable query manager 118 may select a set of N queries from the repeatable query cache 206 that are most frequently published by different user devices. As another example, the repeatable query manager 118 can select a set of N queries from the repeatable query cache 206 that are most frequently published by a particular user device currently accessing an interface provided by a search engine. As another example, the repeatable query manager 118 can select a set of N repeatable queries from the repeatable query cache 206 based on the search history of the user device and/or the type of content accessed by the user device. This may include the relevance between the content of the search query issued by the user device, the search results selected by the user device, and/or the type of content accessed by the user device and the repeatable queries stored in the repeatable query cache 206 (e.g., using a rule-based engine, statistical modeling techniques such as machine learning algorithms, decision trees, etc.). The top N search queries identified by such relevance may then be provided by the repeatable query manager 118 for presentation in the user-selectable interface component.
Additionally or alternatively, the user-selectable interface component may also be a selectable shortcut link included at a particular location on the user device (e.g., a home screen of the user device). As described in FIG. 1, the selectable shortcut links may be generated by the repeatable query manager 118 from an initial interface provided by the search engine (e.g., a landing web page that is reached when navigating to the search engine's website for the first time) or from a search results page. User selection of a selectable shortcut link causes the particular repeatable query associated with the shortcut link to be published to the search engine 108.
The repeatable query manager 118 receives (at 316) from the user device a selection of a user-selectable interface component requesting publication of a particular query from the repeatable queries. In some implementations, the user of the user device 106 selects one of the repeatable queries listed in the user-selectable interface component (e.g., a drop-down menu). The user device's selection of a particular repeatable query is sent to the search engine 108. In some implementations, the user of the user device 106 selects the shortcut link associated with a particular repeatable query.
In response to receiving the selection from the user device 106, the search engine 108 provides a search results page that includes search results for the particular query (at 318). Upon selection of a user device, the search engine 108 executes the query and provides a search results page that includes search results responsive to the selected query.
In some implementations, the repeatable query manager 118 can provide the same set of search results each time a particular repeatable query is issued by a user device. In such an implementation, the repeatable query manager 118 can store the set of search results with the repeatable queries in the repeatable query cache 206 (or, alternatively, in the index 110).
In some implementations, the repeatable query manager 118 can provide a different search results page each time a particular repeatable query is issued by a user device. In such embodiments, the repeatable query manager 118 maintains a record (including, for example, the order in which the search results are provided) of each time the user device issues a particular repeatable query and corresponding search results page, and the set of search results provided on that results page. If the user device issues a particular repeatable query for the first time, the search engine 108 provides a first search results page that includes a first set of search results. In this example, if the user device issues a particular repeatable query a second time, the repeatable query manager 118 determines that the user device is issuing the query a second time and, thus, causes the search engine to provide a second search results page that is different from the first search results page, the second search results page including a second set of search results. For example, the second search results page may be different from the first search results page in that the search results on the second search results page are ordered differently than the search results on the first search results page. In other words, the first and second sets of search results may include the same search results, but the rankings may be different. As another example, one or more of the search results in the second set of search results may be different than the search results in the first set of search results. As another example, the second search results page may be different from the first search results page in that the second search results page may include dynamic content that is either not included on the first search results page or is different from the dynamic content included on the first search results page. In such implementations, the search engine 108 may prioritize the index of sites connected to repeatable queries in anticipation that the user will want dynamic (e.g., different or updated) content for the queries each time they are published. By prioritizing the content of the index, the techniques described herein have the advantage of conserving the search engine 108 resources required for the index.
As described above, the repeatable query manager 118 can identify the first query as a repeatable query based on a search history or content access history of the user device. In some implementations, the search engine 108 can send a notification to the user device including search results for a particular query to issue the particular query without receiving any selection of user-selectable interface components or other requests by the user device. For example, the search engine 108 may send a notification (e.g., as a device notification or email) to the user device 106 that identifies a particular query (e.g., in a message stating that the user of the device may be interested in the results of a particular repeatable query) and includes a set of search results for the query. In some implementations, the notification including the search results is sent to the user device 106 in anticipation of the user issuing the query. This may be determined based in part on the content of the query itself, which may include some time element that may be used to determine when to deliver the results. For example, if the user is expected to repeatedly query for "concerts on weekends," the presence of "weekends" may be used to infer that the search results of the query should be delivered in notifications within a week and before each weekend. Additional factors that may be used to determine when a user is expected to issue a query may also include data regarding user interaction with the search results in the notification (e.g., access time, access date, which results were selected, etc.).
FIG. 4 is a block diagram of an example computer system 400 that may be used to perform the operations described above. System 400 includes processor 410, memory 420, storage 430, and input/output device 440. Each of the components 410, 420, 430, and 440 may be interconnected, for example, using a system bus 450. The processor 410 is capable of processing instructions for execution within the system 400. In some implementations, the processor 410 is a single-threaded processor. In another implementation, the processor 410 is a multi-threaded processor. The processor 410 is capable of processing instructions stored on the memory 420 or on the storage device 430.
The storage device 430 is capable of providing mass storage for the system 400. In some implementations, the storage device 430 is a computer-readable medium. In various different embodiments, storage device 430 may include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices over a network (e.g., a cloud storage device), or other mass storage device.
The input/output device 440 provides input/output operations for the system 400. In some implementations, the input/output devices 440 can include one or more of a network interface device, such as an ethernet card, a serial communication device (e.g., an RS-232 port), and/or a wireless interface device (e.g., an 802.11 card). In another embodiment, the input/output devices may include driver devices configured to receive input data and transmit output data to other input/output devices (e.g., keyboard, printer, and display device 460). However, other implementations may also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 5, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs (i.e., one or more modules of computer program instructions) encoded on a computer storage medium (or media) for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, program instructions may be encoded on an artificially generated propagated signal (e.g., a machine-generated electrical, optical, or electromagnetic signal) that is generated to encode information for transmission to suitable receiver apparatus for execution by data execution processing apparatus. The computer storage medium may be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification can be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality or combination of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates a runtime environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and operating environment may implement a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that contains other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data (e.g., magnetic, magneto-optical disks, or optical disks). However, a computer need not have such devices. Moreover, a computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with the user; for example, feedback provided to the user can be any form of sensor feedback, such as visual feedback, auditory feedback, or tactile feedback; input from the user can be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification), or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server transmits data (e.g., HTML pages) to the client device (e.g., for displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Moreover, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
Claims (30)
1. A computer-implemented method, comprising:
obtaining a set of search queries that have been issued by a plurality of user devices;
determining, for each instance of each query in the set of search queries, context data representing a context in which the query was issued and user interactions with a search results page provided in response to the query;
inputting, to a learning model and for a first query of a set of search queries, context data determined for each instance of issuance of the first query, wherein the learning model (1) outputs a likelihood that the search query will be issued in the future and (2) is trained using the context data determined for a set of training queries and a corresponding set of labels of the set of training queries, wherein each label indicates whether the training query has been issued a threshold number of times;
obtaining, from the learning model and based on the input context data, a likelihood that the first query will be issued in the future;
identifying the first query as a repeatable query based on a likelihood that the first query will be issued in the future meeting a threshold of repeatability;
storing the first query with other search queries that have been identified as repeatable queries;
providing a user-selectable interface component on the user device that, upon selection by the user device and without receiving user input for the component of the query, causes the query to be issued from the repeatable query;
receiving a first selection of a user-selectable interface component from a user device, the first selection requesting that a particular query be issued from a repeatable query; and
providing, by the search engine and in response to receiving the first selection from the user device, a first search results page that includes search results for the particular query.
2. The method of claim 1, wherein storing the first query with other search queries that have been identified as repeatable queries comprises storing, by a search engine, the first query with search results responsive to the first query.
3. The method of claim 2, wherein the search engine includes one or more of the stored search results in a first search results page.
4. The method of claim 1, 2 or 3, wherein the context data for each instance of each query in the set of search queries comprises one or more of:
the language in which the query is written;
the geographic location from which the query was issued;
a geographic location of interest to the user device issuing the query;
the number of times a particular user device has issued the query;
the number of unique user devices issuing the query for a threshold number of times;
embedding of the query, which represents semantic relationships between the query and other queries;
a determination as to whether the query is for a particular network location or website;
a selection by the user device of one or more search results provided for the query on a search results page;
a time at which the user device viewed one or more search results provided for the query on the search results page; and
selection of a navigation interface element on a search results page provided for the query.
5. The method of claim 1, 2, 3, or 4, wherein the user-selectable interface component is a selectable shortcut link included at a particular location on the user device, wherein selection of the selectable shortcut link by the user device causes the particular query associated with the shortcut link to be published to a search engine.
6. The method of claim 1, 2, 3, or 4, wherein the user-selectable interface component is a drop-down menu that lists a subset of repeatable queries and from which the user can select the particular query, wherein selection of the particular query causes publication of the particular query to be published to a search engine.
7. The method of claim 6, wherein the subset of repeatable queries comprises queries expected to be repeated by the user device based on a search history comprising queries previously issued by the user device.
8. The method of any preceding claim, further comprising:
in response to identifying the first query as a repeatable query, determining that the user device is expected to issue the first query in the future based on a search history of the user device; and
in response to determining that the user device is expected to issue the first query in the future, a set of search results for the first query is provided in a notification to the user device and without receiving any request from the user device to execute the first query.
9. The method of any preceding claim, further comprising:
receiving a second selection of a user-selectable interface component from the user device, the second selection requesting issuance of the particular query; and
providing, by the search engine and in response to receiving the second selection from the user device, a second search results page including search results for the particular query, wherein the search results page is different from the first search results page.
10. The method of claim 9, wherein the second search results page is different from the first search results page when:
the search results of the second results page are ordered differently than the search results of the first search results page;
the search results of the second results page are different from the search results of the first search results page; or
The second results page includes dynamic content that is not included on the first results page.
11. A system, comprising:
one or more memory devices storing instructions; and
one or more data processing apparatus configured to interact with the one or more memory devices and, upon execution of the instructions, perform operations comprising:
obtaining a set of search queries that have been issued by a plurality of user devices;
determining, for each instance of each query in the set of search queries, context data representing a context in which the query was issued and user interactions with a search results page provided in response to the query;
inputting, to a learning model and for a first query of a set of search queries, context data determined for each instance of issuance of the first query, wherein the learning model (1) outputs a likelihood that the search query will be issued in the future and (2) is trained using the context data determined for a set of training queries and a corresponding set of labels of the set of training queries, wherein each label indicates whether the training query has been issued a threshold number of times;
obtaining, from the learning model and based on the input context data, a likelihood that the first query will be issued in the future;
identifying the first query as a repeatable query based on a likelihood that the first query will be issued in the future meeting a threshold of repeatability;
storing the first query with other search queries that have been identified as repeatable queries;
providing a user-selectable interface component on the user device that, upon selection by the user device and without receiving user input for the queried component, causes the query to be issued from the repeatable query;
receiving a first selection of a user-selectable interface component from a user device, the first selection requesting that a particular query be issued from a repeatable query; and
providing, by the search engine and in response to receiving the first selection from the user device, a first search results page that includes search results for the particular query.
12. The system of claim 11, wherein storing the first query with other search queries that have been identified as repeatable queries comprises storing, by a search engine, the first query with search results responsive to the first query.
13. The system of claim 12, wherein the search engine includes one or more of the stored search results in a first search results page.
14. The system of claim 11, 12 or 13, wherein the context data for each instance of each query in the set of search queries comprises one or more of:
the language in which the query is written;
the geographic location from which the query was issued;
a geographic location of interest to the user device issuing the query;
the number of times a particular user device has issued the query;
the number of unique user devices issuing the query for a threshold number of times;
embedding of the query, which represents semantic relationships between the query and other queries;
a determination as to whether the query is for a particular network location or website;
a selection by the user device of one or more search results provided for the query on a search results page;
a time at which the user device viewed one or more search results provided for the query on the search results page; and
selection of a navigation interface element on a search results page provided for the query.
15. The system of claim 11, 12, 13 or 14, wherein the user-selectable interface component is a selectable shortcut link included at a particular location on the user device, wherein selection of the selectable shortcut link by the user device causes the particular query associated with the shortcut link to be published to a search engine.
16. The system of claim 11, 12, 13 or 14, wherein the user selectable interface component is a drop down menu that lists a subset of the repeatable queries and from which the user can select the particular query, wherein selection of the particular query causes publication of the particular query to be published to a search engine.
17. The system of claim 16, wherein the subset of repeatable queries comprises queries expected to be repeated by the user device based on a search history comprising queries previously issued by the user device.
18. The system of any preceding claim, wherein the one or more data processing apparatus are configured to perform operations further comprising:
in response to identifying the first query as a repeatable query, determining that the user device is expected to issue the first query in the future based on a search history of the user device; and
in response to determining that the user device is expected to issue the first query in the future, a set of search results for the first query is provided in a notification to the user device and without receiving any request from the user device to execute the first query.
19. The system of any preceding claim, wherein the one or more data processing apparatus are configured to perform operations further comprising:
receiving a second selection of a user-selectable interface component from the user device, the second selection requesting issuance of the particular query; and
providing, by the search engine and in response to receiving the second selection from the user device, a second search results page including search results for the particular query, wherein the search results page is different from the first search results page.
20. The system of claim 19, wherein the second search results page is different from the first search results page when:
the search results of the second results page are ordered differently than the search results of the first search results page;
the search results of the second results page are different from the search results of the first search results page; or
The second results page includes dynamic content that is not included on the first results page.
21. A non-transitory computer-readable medium storing instructions that, when executed by one or more data processing apparatus, cause the one or more data processing apparatus to perform operations comprising:
obtaining a set of search queries that have been issued by a plurality of user devices;
determining, for each instance of each query in the set of search queries, context data representing a context in which the query was issued and user interactions with a search results page provided in response to the query;
inputting, to a learning model and for a first query of a set of search queries, context data determined for each instance of issuance of the first query, wherein the learning model (1) outputs a likelihood that the search query will be issued in the future and (2) is trained using the context data determined for a set of training queries and a corresponding set of labels of the set of training queries, wherein each label indicates whether the training query has been issued a threshold number of times;
obtaining, from the learning model and based on the input context data, a likelihood that the first query will be issued in the future;
identifying the first query as a repeatable query based on a likelihood that the first query will be issued in the future meeting a threshold of repeatability;
storing the first query with other search queries that have been identified as repeatable queries;
providing a user-selectable interface component on the user device that, upon selection by the user device and without receiving user input for the component of the query, causes the query to be issued from the repeatable query;
receiving a first selection of a user-selectable interface component from a user device, the first selection requesting that a particular query be issued from a repeatable query; and
providing, by the search engine and in response to receiving the first selection from the user device, a first search results page that includes search results for the particular query.
22. The non-transitory computer-readable medium of claim 21, wherein storing the first query with other search queries that have been identified as repeatable queries comprises storing, by a search engine, the first query with search results responsive to the first query.
23. The non-transitory computer-readable medium of claim 22, wherein the search engine includes one or more of the stored search results in a first search results page.
24. The non-transitory computer-readable medium of claim 21, 22, or 23, wherein the context data for each instance of each query in the set of search queries includes one or more of:
the language in which the query is written;
the geographic location from which the query was issued;
a geographic location of interest to the user device issuing the query;
the number of times a particular user device has issued the query;
the number of unique user devices issuing the query for a threshold number of times;
embedding of the query, which represents semantic relationships between the query and other queries;
a determination as to whether the query is for a particular network location or website;
a selection by the user device of one or more search results provided for the query on a search results page;
a time at which the user device viewed one or more search results provided for the query on the search results page; and
selection of a navigation interface element on a search results page provided for the query.
25. The non-transitory computer-readable medium of claim 21, 22, 23 or 24, wherein the user-selectable interface component is a selectable shortcut link included at a particular location on the user device, wherein selection of the selectable shortcut link by the user device causes the particular query associated with the shortcut link to be published to a search engine.
26. The non-transitory computer readable medium of claim 21, 22, 23 or 24, wherein the user selectable interface component is a drop down menu that lists a subset of repeatable queries and from which the user can select the particular query, wherein selection of the particular query causes publication of the particular query to be published to a search engine.
27. The non-transitory computer-readable medium of claim 16, wherein the subset of repeatable queries includes queries expected to be repeated by the user device based on a search history, the search history including queries previously issued by the user device.
28. The non-transitory computer-readable medium of any preceding claim, wherein the instructions cause the one or more data processing apparatus to perform operations comprising:
in response to identifying the first query as a repeatable query, determining that the user device is expected to issue the first query in the future based on a search history of the user device; and
in response to determining that the user device is expected to issue the first query in the future, a set of search results for the first query is provided in a notification to the user device and without receiving any request from the user device to execute the first query.
29. The non-transitory computer-readable medium of any preceding claim, wherein the instructions cause the one or more data processing apparatus to perform operations comprising:
receiving a second selection of a user-selectable interface component from the user device, the second selection requesting issuance of the particular query; and
providing, by the search engine and in response to receiving the second selection from the user device, a second search results page including search results for the particular query, wherein the search results page is different from the first search results page.
30. The non-transitory computer-readable medium of claim 29, wherein the second search results page is different from the first search results page when:
the search results of the second results page are ordered differently than the search results of the first search results page;
the search results of the second results page are different from the search results of the first search results page; or
The second results page includes dynamic content that is not included on the first results page.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2019/059976 WO2021091546A1 (en) | 2019-11-06 | 2019-11-06 | Identification and issuance of repeatable queries |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114846463A true CN114846463A (en) | 2022-08-02 |
Family
ID=68808508
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980103230.1A Pending CN114846463A (en) | 2019-11-06 | 2019-11-06 | Identification and publication of repeatable queries |
Country Status (6)
Country | Link |
---|---|
US (2) | US11868417B2 (en) |
EP (1) | EP3844643A1 (en) |
JP (2) | JP7436654B2 (en) |
KR (1) | KR20220083822A (en) |
CN (1) | CN114846463A (en) |
WO (1) | WO2021091546A1 (en) |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11948562B1 (en) * | 2019-12-11 | 2024-04-02 | Amazon Technologies, Inc. | Predictive feature analysis |
US11962455B2 (en) | 2021-11-29 | 2024-04-16 | T-Mobile Usa, Inc. | Prioritizing multiple issues associated with a wireless telecommunication network |
KR102576226B1 (en) * | 2023-02-28 | 2023-09-06 | 오병율 | Caching system that can predict and resolve server overload through artificial intelligence algorithms |
Family Cites Families (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8775396B2 (en) | 1999-04-15 | 2014-07-08 | Intellectual Ventures I Llc | Method and system for searching a wide area network |
JP2003006225A (en) | 2001-06-27 | 2003-01-10 | Nec Corp | Information providing method, information providing device, and terminal therefor |
WO2006011819A1 (en) | 2004-07-30 | 2006-02-02 | Eurekster, Inc. | Adaptive search engine |
US9015148B2 (en) | 2009-09-21 | 2015-04-21 | Microsoft Corporation | Suggesting related search queries during web browsing |
US20120233140A1 (en) * | 2011-03-09 | 2012-09-13 | Microsoft Corporation | Context-aware query alteration |
US9460215B2 (en) | 2013-12-19 | 2016-10-04 | Facebook, Inc. | Ranking recommended search queries on online social networks |
US10290125B2 (en) * | 2014-07-02 | 2019-05-14 | Microsoft Technology Licensing, Llc | Constructing a graph that facilitates provision of exploratory suggestions |
US9626453B2 (en) | 2014-12-23 | 2017-04-18 | Sap Se | Analytic solution with a self-learning and context-sensitive semantic layer |
US10706450B1 (en) * | 2018-02-14 | 2020-07-07 | Amazon Technologies, Inc. | Artificial intelligence system for generating intent-aware recommendations |
US11397770B2 (en) * | 2018-11-26 | 2022-07-26 | Sap Se | Query discovery and interpretation |
US11182432B2 (en) * | 2019-06-28 | 2021-11-23 | Microsoft Technology Licensing, Llc | Vertical processing of natural language searches |
US20210097374A1 (en) * | 2019-09-30 | 2021-04-01 | Microsoft Technology Licensing, Llc | Predicting search intent |
-
2019
- 2019-11-06 CN CN201980103230.1A patent/CN114846463A/en active Pending
- 2019-11-06 WO PCT/US2019/059976 patent/WO2021091546A1/en unknown
- 2019-11-06 EP EP19816973.2A patent/EP3844643A1/en not_active Withdrawn
- 2019-11-06 KR KR1020227017463A patent/KR20220083822A/en unknown
- 2019-11-06 US US17/774,894 patent/US11868417B2/en active Active
- 2019-11-06 JP JP2022525872A patent/JP7436654B2/en active Active
-
2023
- 2023-11-22 US US18/517,509 patent/US20240086479A1/en active Pending
-
2024
- 2024-02-07 JP JP2024017450A patent/JP2024050849A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US11868417B2 (en) | 2024-01-09 |
US20220391459A1 (en) | 2022-12-08 |
JP2024050849A (en) | 2024-04-10 |
EP3844643A1 (en) | 2021-07-07 |
JP7436654B2 (en) | 2024-02-21 |
WO2021091546A1 (en) | 2021-05-14 |
JP2023500523A (en) | 2023-01-06 |
US20240086479A1 (en) | 2024-03-14 |
KR20220083822A (en) | 2022-06-20 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
RU2720899C2 (en) | Method and system for determining user-specific content proportions for recommendation | |
US9767200B1 (en) | Search dialogue user interface | |
KR101708448B1 (en) | Predictive query suggestion caching | |
US9390144B2 (en) | Objective and subjective ranking of comments | |
US9594826B2 (en) | Co-selected image classification | |
US8386495B1 (en) | Augmented resource graph for scoring resources | |
US10216851B1 (en) | Selecting content using entity properties | |
CN106095766B (en) | Correcting speech recognition using selective re-speaking | |
US20240086479A1 (en) | Identification and Issuance of Repeatable Queries | |
US20170039483A1 (en) | Factorized models | |
JP2013519150A (en) | Information retrieval system with real-time feedback | |
US11055312B1 (en) | Selecting content using entity properties | |
JP2017525026A (en) | Generating a contextual search presentation | |
US10990620B2 (en) | Aiding composition of themed articles about popular and novel topics and offering users a navigable experience of associated content | |
CN109952571B (en) | Context-based image search results | |
US10698888B1 (en) | Answer facts from structured content | |
US20140156623A1 (en) | Generating and displaying tasks | |
US9754036B1 (en) | Adapting third party applications | |
US8838621B1 (en) | Location query processing | |
US11537674B2 (en) | Method of and system for generating search query completion suggestion on search engine | |
US11055332B1 (en) | Adaptive sorting of results | |
WO2021050082A1 (en) | Text entry recommendations based on stored search results | |
US8869055B1 (en) | Universal item locator and acquisition tool |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
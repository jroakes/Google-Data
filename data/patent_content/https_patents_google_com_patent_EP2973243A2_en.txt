EP2973243A2 - Questions answering to populate knowledge base - Google Patents
Questions answering to populate knowledge baseInfo
- Publication number
- EP2973243A2 EP2973243A2 EP14722810.0A EP14722810A EP2973243A2 EP 2973243 A2 EP2973243 A2 EP 2973243A2 EP 14722810 A EP14722810 A EP 14722810A EP 2973243 A2 EP2973243 A2 EP 2973243A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- query
- knowledge graph
- entity
- implementations
- generating
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Withdrawn
Links
- 238000000034 method Methods 0.000 claims abstract description 90
- 230000004044 response Effects 0.000 claims abstract description 30
- 230000000630 rising effect Effects 0.000 claims 1
- 230000005540 biological transmission Effects 0.000 description 36
- 238000004891 communication Methods 0.000 description 12
- 238000010586 diagram Methods 0.000 description 9
- 230000004069 differentiation Effects 0.000 description 8
- 230000006870 function Effects 0.000 description 6
- 230000007246 mechanism Effects 0.000 description 6
- 230000008569 process Effects 0.000 description 6
- 230000001413 cellular effect Effects 0.000 description 4
- 230000008859 change Effects 0.000 description 4
- 239000000835 fiber Substances 0.000 description 4
- 150000002500 ions Chemical class 0.000 description 4
- 230000003993 interaction Effects 0.000 description 3
- 230000033001 locomotion Effects 0.000 description 3
- 238000010295 mobile communication Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- HBBGRARXTFLTSG-UHFFFAOYSA-N Lithium ion Chemical compound [Li+] HBBGRARXTFLTSG-UHFFFAOYSA-N 0.000 description 2
- 230000001133 acceleration Effects 0.000 description 2
- 230000004913 activation Effects 0.000 description 2
- 230000002457 bidirectional effect Effects 0.000 description 2
- 239000003990 capacitor Substances 0.000 description 2
- 238000004590 computer program Methods 0.000 description 2
- 230000008878 coupling Effects 0.000 description 2
- 238000010168 coupling process Methods 0.000 description 2
- 238000005859 coupling reaction Methods 0.000 description 2
- 230000009193 crawling Effects 0.000 description 2
- 229910001416 lithium ion Inorganic materials 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- OKTJSMMVPCPJKN-UHFFFAOYSA-N Carbon Chemical compound [C] OKTJSMMVPCPJKN-UHFFFAOYSA-N 0.000 description 1
- 235000019687 Lamb Nutrition 0.000 description 1
- 229910005813 NiMH Inorganic materials 0.000 description 1
- 239000002253 acid Substances 0.000 description 1
- 235000013351 cheese Nutrition 0.000 description 1
- 230000000295 complement effect Effects 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 239000006071 cream Substances 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 239000000446 fuel Substances 0.000 description 1
- 229910002804 graphite Inorganic materials 0.000 description 1
- 239000010439 graphite Substances 0.000 description 1
- 238000012804 iterative process Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 229910021450 lithium metal oxide Inorganic materials 0.000 description 1
- 229910044991 metal oxide Inorganic materials 0.000 description 1
- 150000004706 metal oxides Chemical class 0.000 description 1
- XBGNERSKEKDZDS-UHFFFAOYSA-N n-[2-(dimethylamino)ethyl]acridine-4-carboxamide Chemical compound C1=CC=C2N=C3C(C(=O)NCCN(C)C)=CC=CC3=CC2=C1 XBGNERSKEKDZDS-UHFFFAOYSA-N 0.000 description 1
- 238000003058 natural language processing Methods 0.000 description 1
- 229920000642 polymer Polymers 0.000 description 1
- 238000007781 pre-processing Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
- G06N5/022—Knowledge engineering; Knowledge acquisition
- G06N5/025—Extracting rules from data
Definitions
- This disclosure generally relates to updating information in a database. Data has previously been updated by, for example, user input.
- a system identifies information that is missing from a collection of data.
- the system generates a question to provide to a cmestion answering service based on the missing information, and uses the response from the question answering service, to update the collection of data,
- a computer-implemented method includes identifying an entity reference in a knowledge graph, wherein the entity reference corresponds to an entity type.
- the method further includes identifying a missing data element associated with the entity reference.
- the method further includes generating a query based at least in part on the missing data element and the type of the entity reference.
- the method further includes providing the quer to a query processing engine.
- the method further includes receiving information from the query
- the method further includes updating the knowledge graph based at least in part on the received information.
- a system comprising one or more computers configured to perform operations. Operations include identifying an entity
- Operations further include
- Operations further include generating a query based at least in part on the missing data element and the type of the entity reference. Operations further include providing the query to a qiery processing engine . Operations further include receiving information from the query processing engine in response to the query. Operations further include updating the knowledge graph based at least in part on the received information,
- identifying a missing data element comprises comparing properties associated with the entity reference to a schema table associated with the entity type.
- generating the query comprises generating a natural language query. In some implementations , generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity
- generating the query comprises selecting, from the knowledge graph, disambiguation query terms
- updating the knowledge graph comprises updating the data graph to include information in place of the missing data element.
- a computer- implemented method includes identifying an element in a knowledge graph to be updcited based at least in part on a query record.
- the method further includes
- the method further includes providing the query to a query processing engine.
- the method further includes receiving information from the query processing engine in response to the query.
- the method further includes updating the knowledge graph based at least in part on the received information.
- a system comprising one or more computers configured to perform operations, Operations include identifying an element in a knowledge graph to be updated based at least in part on a query record. Operations further include generating a query based at least in part on the identified element. Operations further include providing the query to a query processing engine, Operations further include receiving information from the query processing engine in response to the query.
- Operations further include updating the knowledge graph based at least in part on the received information
- the query record comprises data associated with one or more previously performed searches.
- generating the query comprises generating a natural language query.
- generating the query comprises generating the query
- generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise property values associated with the entity reference.
- generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise properties associated with the entity
- updating the knowledge graph comprises updating the data graph to include information in place of the missing data, element.
- FIG, 1 is a high level block diagram of a system for updating data in a data structure in accordance with some implementations of the present disclosure
- FIG, 2 shows an illustrative data graph portion containing nodes and edges in accordance with some
- FIG, 3 shows an illustrative knowledge graph portion in accordance with some implementations of the present disci osure
- FIG. 4 shows another illustrative knowledge graph portion in accordance with some implementations of the present disclosure .
- FIG. 5 shows an illustrative knowledge graph portion with missing information in accordance with some
- FIG, ⁇ shows an exemplary sequence for updating data using a query processing engine in accordance with some imp ementations of the present disclosure
- FIG. 7 shows a flow diagram, of illustrative steps for updating a data graph based on missing information in accordance with some implementations of the present
- FIG. 8 shows a flow diagram of illustrative steps for updating a data graph based on a query record in
- FIG. 9 shows an illustrative computer system in accordance with some implementations of the present
- FIG, 10 is a block diagram of an illustrative computer device in accordance with some implementations of the present disclosure. Detailed Description
- FIG. 1 is a high level block diagram of system 100 for updating data in a data structure in accordance with some implementations of the present disclosure.
- System 100 is a high level block diagram of system 100 for updating data in a data structure in accordance with some implementations of the present disclosure.
- System 100 includes processing block 102, data structure block 104, content block 106,, query processing block 108 , and output block 110
- System 100 may include any suitable hardware, software, or both for implementing the features described in the present disclosure and will generally be referred to, herein, as -'the system. "
- a particular piece of in ormation in data structure block 104 may be missing, outdated, incorrect, incomplete, or otherwise not as desired.
- the system may identify the particular information based on, for example, query records or structural information about the data structure.
- the system uses information from data structure block 104, content block 106, other sources not shown, and any combination thereof, to generate a query that is provided to query processing block 108.
- Processing block 102 generates the content of output block 108 based on the response from query processing block 108,
- the system uses output 110 to update data structure block 104.
- Data structure block 104 includes a data structure containing structured or otherwise organized information.
- data structure block 104 contains a data structure, a data graph, a database, an index, any other suitable collection of content, or any combinabion thereof.
- data structure block 104 includes a data graph
- a data graph- includes data organized in a graph containing nodes and edges.
- the data of a data graph may include statements about
- Each nodes of a daca graph contains one or more pieces of data, and the edges represent relationships between the data.
- ⁇ knowledge graph which is a particular implementation of a data graph, is described below in FIGS, 2-nd
- Content block 106 includes information related to web sites and other suitable content.
- content block 106 includes an index of webpages on the internet containing text, images, videos, links, other suitable content, and any combination thereof.
- content block 106 includes information from a database, private intranet, public network, private network, any other suitable collection of information, or any
- content block 106 includes content used by a sea.rch engine such as a query processing engine to determine search results.
- content block 106 includes query records.
- query records include data related to previous queries.
- query records include query logs, processed query logs, other suitable processed data related to searches and search history, any other suitable information, or any combination thereof .
- Query processing block 108 includes a query
- Query processing may include, for example, a search engine, a question answering service, any other suitable query
- query processing block IGS may receive a natural language question as an input and provide a natural language answer as the response, based on information in content 106, For example, in response to the question [What is 1+1?] query processing block 108 may provide the answer [2], In some
- query processing block 108 processes natural language questions, formal language questions, queries
- processing block 102 may perform any combination thereof.
- processing block 102 includes disambiguation information from data structure 104 in the query.
- the query processing is performed based on Internet search engine results, automated question answering techniques, responses from human question answerers, indexes of previously answered questions, natural language search parsing, any other suitable query processing technique, or any combination thereof,
- the answers from query processing block 108 are based on content block 106, data structure block 104, any other suitable content, or any combination thereof,
- natural language refers to words, syntax, and other language such as it could be. used in conversation or prose,
- natural language may include complete sentences, questions, idiom, punctuation, any other suitable language elements or structures, or any combination thereof.
- the question [Who was the first person to fly an airplane?] is a natural language question.
- formal language follows relatively more constrained rules of grammar and syntax.
- An example of formal language is a computer
- queries including natural language queries
- the system need not receive a natural language query and may receive a query in any suitable form.
- the system may receive questions, provide questions for answering, receive responses, provide answers, and perform, any other suitable steps using natural language, formal language, keywords, voice, video, images , any other suitable coromunication technique, or any combination thereof,
- Output block 110 corresponds to the answer provided by query processing block 108
- processing block 102 generates the content of output block 110 based on the query provided to query processing block 108, the response from query processing block 108, content block 106, data structure block 104, any other suitable content, or any combination thereof.
- output block 110 may include the missing information.
- the system uses the information from output 110 to update data structure block 104.
- FIG, 2 shows an illustrative data graph containing nodes and edges in accordance with some implementations of the present disclosure.
- data in data structure 104 of FIG, 1 is stored as a data graph.
- illustrative data graph 200 is a portion of a knowledge graph. The knowledge graph is a particular
- FIGS . 3 and 4 implemen ation of a data graph and will be described in further detail in relation to FIGS . 3 and 4 below.
- the data graph implement tion of FIG, 2, and the knowledge graph are merely examples of a data structure that may be used by the system to store entity references and other data, and that any suitable data format may be used.
- data in data, structure 104 of IG, 1 may be stored as a list of entities and associated entity types.
- Data stored by the data structure may include any suitable data such as references to data, text, images, characters, computer files, databases, any other suitable data, or any combination thereof.
- the node and edge description is merely illustrative and that the construction of the data structure may include any suitable technique for describing information and relationships.
- nodes may be assigned a unique identification number, and an edge may be described using the identification numbers that a particular edge connects.
- the representation of data as a graph is merely exemplary and that data may be stoz'ed, for example, as a computer file including pieces of data and links and/or references to other pieces of data.
- data may be organized in a database using any one or more data structuring techniques.
- data may be organised in a graph containing nodes connected by edges.
- the data may include statements about relationships between things and concepts, and those statements may be represented as nodes and edges of a graph.
- the nodes each contain a piece or pieces of data and the edges represent relationships between the data contained in the nodes that the edges connect ,
- the edges represent relationships between the data contained in the nodes that the edges connect .
- the graph includes one or more pairs of nodes connected by an edge.
- the edge and thus the graph, may be directed, i.e. unidirectional, undirected, i.e. bidirectional, or both, i.e. one or more edges may be undirected and one or more edges may be directional in the same graph.
- Nodes may include any suitable data or data representation. Edges may describe any suitable relationships between the data. In some implementations., an edge is labeled or annotated, such that it includes both the connection between the nodes, and
- a particular node may be connected by distinct edges to one. or more other nodes, or to itself, such that an extended graph is formed.
- a graph based on the structure described immediately above is referred to herein as a
- the knowledge graph may be a useful for representing information and in providing information in search,
- FIG, 2 shows illustrative knowledge graph 200
- Illustrative knowledge graph 200 includes nodes 202, 204, 206, and 208.
- Knowledge graph 200 includes edge 210 connecting node 202 and node 204.
- Knowledge graph 200 includes edge 212 connecting node 202 and node 206.
- Knowledge graph 200 includes edge 214 connecting node 204 and node 208,
- Knowledge graph 200 includes edge 21S and edge 2 ⁇ 8 connecting node 202 and node 208.
- edge 220 connecting node 208 to itself.
- Each aforementioned group of an edge and one or two distinct nodes may be referred to as a triple or 3 -tuple.
- node 202 is directly connected by edges to three other nodes, while nodes 204 and 208 are directly connected by edges to two other nodes.
- Node 206 is connected by an edge to only one other node, and in some implementa ions, node 20S is referred to as a terminal node.
- nodes 202 and 208 are connected by two edges, indicating that the relationship between the nodes is defined by more than one property.
- node 208 is connected by edge 220 to itself, indicating that a node may relate to itself. While
- illustrative knowledge graph 200 contains edges that are not labeled as directional, it will be understood that each edge may be unidirectional or bidirectional. It will be understood that this example of a graph is merely an example and that any suitable size or arrangement, of nodes and edges may be employed .
- nodes in a knowledge graph can be grouped into several categories .
- Nodes may represent entities, organizational data such as entity types and properties, literal values, and models of relationships between other nodes.
- a node of a knowledge graph may represent an entity, as defined above.
- any suitable technique, :or example, content may be generated by manual user input, by automatic responses to user interactions, by importation of data from external sources, by any other suitable technique, or any combination thereof, For example, if a commonly searched for term is not represented in the knowledge graph, one or more, nodes representing that node may be added. In another example, a user may manually add information and organizational structures ,
- a node representing organizational data may be included in a knowledge graph. These may be referred to herein as entity type nodes.
- entity type nodes may refer to a node in a knowledge graph, while an entity type may refer to the concept, represented by an entity type node.
- An entity type may be a defining characteristic of an entity.
- entity type node Y may be. connected to an entity node X by an [Is A] edge, or link, discussed further below, such that the graph represents the information "The Entity X Is Type Y. " For example, the entity node [George Washington] may be connected to the entity type node
- An entity node may be connected to multiple entity type nodes, for example, [George Washington] may also be connected to entity type node [Person] and to entity type node [Military Commander] .
- the entity type node [City] may be. connected to entity nodes [New York City] and [San Francisco] .
- the concept [Tall People] although incompletely defined, i.e., it does not necessarily include a definition of the property [tall] , may exist as an entity type node.
- the presence of the entity type nocie [Tall People] , and other entity type nodes may be based on user interaction.
- an entity type node may include or be connected to data about: a list of properties associated with that entity type node, the domain to which that entity type node belongs, descriptions, values, any other suitable information, or any combination thereof.
- a domain refers to a collection of related entity types.
- the domain [Film] may include, for example, the entity types [Actor] . [Director] , [Filming Location] . [Movie] , any other suitable entity type, or any combination thereof.
- entities are associated with types in more than one domain.
- the entity node [Benjamin Franklin] may be connected with the entity type node
- properties associated with entity nodes or entity type nodes may also be represented as nodes.
- [Population] or [Location] may be connected to the entity type node [City] .
- schemas are stored in tables or other suitable data structures associated with an entity type node.
- the knowledge graph may be self- defining or bootstrapping, such that it includes particular nodes and edges that define the concept of nodes, edges, and the graph itself.
- the knowledge graph may contain an entity node [Knowledge Grap ] that is connected to property nodes that describe a knowledge graph's properties such as [Has Nodes] and [Has Edges] .
- literals may be associated with a particular entity in a terminal node by an edge defining the relationship.
- literalals may refer to values and/or strings of information.
- literals may include dates, names, and/or numbers.
- the entity node [San Francisco] may be
- terminal nodes may contain a reference or link to long text strings and other information stored in one or more documents externa,! to the knowledge graph.
- literals are stored as nodes in the knowledge graph.
- literals are stored in the knowledge graph but are not assigned a unique
- literal type nodes may define a type of literal, for example [Date/Time], [Number], or [GPS
- the grouping of an edge and two nodes is referred to as a triple.
- the triple represents the relationship between the nodes, or in some implementations
- a mediator node which may be referred to as a mediator node.
- the information "Person X Donates Artifact Y To Museum Z" is stored in a mediator node connected entity nodes to X, Y, and Z, where each edge identifies the role of each respective connected entity node.
- the knowledge graph may include information for di ferentiation and disambiguation of terms and/or entities.
- differentiation refers to the many-to-one situation where, multiple names are
- nodes may be assigned a unique identification reference.
- the unique identification reference may be an alphanumeric string, a name, a. number, a binary code, any other suitable identifier, or any combination thereof.
- the unique identification reference may allow the system to assign unique references to nodes with the same or similar textual identifiers.
- the unique identifiers and other techniques are used in
- a node may be associated with multiple terms or differentiation aliases in which the terras are associated with the same entity.
- the terms [George Washington], [Geo, Washington] , [President Washington] , and [President George Washington] may all be associated with a single entity, i.e., node, in the knowledge graph. This may provide
- multiple nodes with the same or similar names are defined by their unique identification references, by associated nodes in the knowledge graph, by any other suitable information, or any combination thereof.
- there may be an entity node related to the city [Philadelphia] an entity node related to the movie [Philadelphia] , and an entity node related to the cream cheese brand. [Philadelphia] .
- Each of these nodes may have a unique identification reference, stored for example as a number, for disambiguation within the knowledge graph.
- disambiguation in the knowledge graph is provided by the. connections and relationships between multiple nodes. For example, the city [New York] may be disambiguated from the.
- a node may be defined by associated types, by other entities connected to it by particular properties, by its name, by any other suitable information, or any combination thereof. These connections may be useful in disambiguation .
- the graph may include two [Georgia] nodes, corresponding respectively to the U.S. State and the Eastern European country.
- the node [Georgia] that is connected to the node [United sStat.es] may be understood represent the U.S.
- node [Georgia] connected to the nodes [Asia] and [Eastern Europe] may be understood to represent, the country in eastern Europe.
- a node may include or connect to data defining one or more attributes.
- attributes may define a particular characteristic of the node. The particular attributes of a node may depend on what the node represents.
- an entity node may include or connect to: a unique identification reference, a list of entity types associated with the node, a list of differentiation aliases for the node, data associated with the entity, a textual description of the entity, links to a textual description of the entity, other suitable information, or any combination thereof.
- nodes may contain a reference or link to long text strings and other information stored in one or more documents external to the knowledge graph.
- the storage technique may depend on the particular information. For example, a unique identification reference may be stored within the node, a short information string may be. stored in a terminal node as a literal, and a long description of an entity may be stored in an external document linked to by a. reference, in the knowledge graph.
- An edge in a knowledge graph may represent a semantic connection defining a relationship between two nodes ,
- the edge may represent a prepositional statement such as [Is A] , [Has A] , [Is Of A Type] , [Has Property] , [Has Value] , any other suitable statement, or any combination thereof.
- the entity node of a particular person may be connected by a [Date Of birth] edge to a terminal node containing a literal of his or her specific date of birth.
- the properties defined by edge may be connected by a [Date Of birth] edge to a terminal node containing a literal of his or her specific date of birth.
- connections of an entity may relate to nodes connected to the type of that, entity.
- entity type node For example, the entity type node
- nodes and edges define the relationship between an entity type node and its properties, thus defining a schema.
- an, edge may connect an entity type node to a node associated with a property, which may be referred to as a property node.
- Entities of the type may be connected to nodes defining particular values of those properties.
- the entity type node [Person] may be connected to property node [Date of birth] and a node
- the node [Date of Birth] may be connected to the literal type node [Date/Time] ,. indicating that literals associated with [Date of Birth] include date/time information.
- the entity node [George Washington] which is connected to entity type node [Person] by an [Is A] edge, may also be connected to a literal [Feb 22. 1732] by the edge [Has Date Of birth] ,
- the entity node [George Washington] is connected, to a [Date Of Birth] property node. It. will be understood that in some implementations, both schema and data are modeled and stored in a knowledge graph using the same technique. In this way, both schema and data can be accessed by the same search techniques , In some
- schemas are stored in a separate table, graph, list, other data structure, or any combination thereof. It will also be understood that properties may be. modeled by nodes, edges, literals, any other suitable data, or any combination thereof.
- the entity node [George Washington] may ⁇ be connected, by an [Is A] edge to the entity type node
- [Person] thus indicating an entity type of the entity
- [Feb 22, 1732] may be a node, such that it is connected to other events occurring on that date.
- the date may be further connected to a year node, a month node, and a day of node. It will be. understood that this information may be stored in any suitable combination of literals, nodes, terminal nodes, interconnected entities, any other suitable arrangement, or any combination thereof,
- FIG. 3 shows illustrative knowledge graph portion 300 in accordance with some implementations of the present disclosure.
- Knowledge graph portion 300 includes information related to the entity [George Washington] , represented by
- 3 -tuple defined by nodes 302 and 304 and the edge 314 contains the information "George Washington is a U.S. President.”
- Knowledge graph portion 300 includes entity type nodes [Person] 324, and [U.S. President] node 304.
- the person type is defined in part by the connections from [Person] node 324.
- the type ⁇ Person] is defined as having the property [Date Of birth] by node 330 and edge 332, and is defined as having t e property [Gender] by node 334 and edge 336.
- [George Washington] node 302 is shown in knowledge graph portion 300 to be of the entity types [Person] and [U.S. President] , and thus is connected to nodes containing values associated with those types. For example, [George Washington] node 302 is connected by [Has Gender] edge 318 to [Male] node 30 ⁇ , thus indicating that "George Washington has gender Male.” Further, [Male] node 306 may be connected to the [Gender] node 334 indicating that "Male Is A Type Of Gender.” Similarly, [George Washington] node 302 is connected by [Has Date of birth] edge. 316 to [Feb 22, 1732] node 308, thus ind.ica.ting that "George Washington Has Date Of birth Feb 22, 1732,"
- node 302 may also be connected to [1789] node 328 by [Has Assumed Office Date] edge 338.
- Knowledge graph portion 300 also includes [Thomas Jefferson] node 310, connected by [Is A] edge 320 to entity type [U.S. President] node 304 and by [Is A] edge 322 to
- node 310 is connected to nodes not shown in FIG, 3 referencing his date of birth, gender, and assumed office date,
- knowledge graph portion 300 is merely an example and that it may include nodes and edges not shown.
- [U.S. President] node 304 may be connected to all of the U.S. Presidents.
- [U.S. President] node 304 may also be connected to properties related to the entity type such as a duration of term, for example [4 Years], a term limit, for example [2 Terms] , a location o office, for example [Washington D.C.3 , any other suitable data, or any combination thereof.
- a duration of term for example [4 Years]
- a term limit for example [2 Terms]
- location o office for example [Washington D.C.3
- any other suitable data or any combination thereof.
- node 304 is connected to [Assumed Office Date] node 342 by [Has Property] edge 340, defining in part a schema, for the type [U.S. President] .
- [Thomas Jefferson] node 310 may be connected to any suitable number of nodes containing further information related to his illustrated entity type nodes [U.S. President], and [Person], and to other entity type nodes not shown such as [Inventor] , [Vice President] , and
- [Person] node 324 may be connected to all entities in the knowledge graph wit the type [Person] .
- [1789] node 328 may be connected to all events in the knowledge graph with the property of year [1789] .
- node 328 is unique to the year 1789, and disambigiiated from, for example, a book entitled [1789], not shown in FIG, 3, by its unique
- [1789] node 328 is connected to the entity type node [Year] .
- FIG. 4 shows illustrative knowledge graph portion 400 i accordance with some implementations of the present disclosure.
- Knowledge graph portion 400 includes [California] node 402, which may also be associated wi h differentiation aliases such as, for example, [CA] , [Calif.], [Golden State], any other suitable differentiation aliases, or any combination thereof.
- these differentiations are stored in [California] node 402. California is connected, by [Is A] edge 404 to the [U.S. State] entity type node 406,
- [New 'fork] node 410 and [Texas] node 414 are also connected to [U.S. State] node 406 by [Is A] edges 408 and 412,
- [California] node 402 is connected by [Has Capital City] edge 420 to [Sacramento] node 422, indicating the information that "California Has Capital City Sacramento.”
- Sacramento node 422 is further connected by [Is A] edge 424 to the [City] entity type node 426.
- [Texas] node 414 is connected by [Has City] edge 430 to [Houston] node 428, which is further connected to the [City] entity type node 426 by [Is A] edge 340, [Cali ornia] node 402 is connected by [Has Population] edge 416 to node 418 containing the literal value [37,691,912] , In an example, the particular value
- [37,691,912] may be periodically automatically updated by the ' knowledge graph based on an external website or other source of data.
- Knowledge graph portion 400 may include other nodes not shown.
- [U.S. State] entity type node 406 may be connected to nodes defining properties of that type such as [Population] and [Capital City] , These type—property
- relationships ma be used to define other rela ionships in knowledge graph portion 400 such as [Has Population] edge 416 connecting entity node [California] 402 with terminal node 418 containing the literal defining the population of California.
- knowledge graph portion 300 of FIG. 3 and knowledge graph portion 400 of FIG, 4 below show portions of a knowledge graph
- all pieces of information may be contained within a single graph and that these selections illustrated herein are merely an example.
- separate knowledge graphs are maintained for different respective domains, for different respective entit types, or according to any other suitable delimiting characteristic.
- separate knowledge graphs are maintained according to size constraints.
- a single knowledge graph is maintained for ail entities and entity types.
- a knowledge graph may be implemented using any suitable software constructs .
- a knowledge graph is implemented using object oriented constructs in which each node is an object with associated functions and
- Edges in this context , may be objects having associated functions and variables.
- data contained in a knowledge graph, pointed to by nodes of a knowledge graph, or both is stored in any suitable one or more data repositories across one or more servers located in one or more geographic locations coupled by any suitable network architecture .
- FIG. 5 shows illustrative knowledge graph portion 500 with missing information in accordance with some
- Illustrative knowledge graph portion 500 includes missing information in [???] node 512 that the system may update.
- Knowledge graph portion 500 includes [California] node 502, [California] node 502 is connected by [Is A] edge 518 to [U.S. State] node 516, In some implementations, this indicates that [U.S. State] is an entity type associated with the. entity reference [California] , Entity type [U.S. State] may be associated with a schema including properties such as [Population] , [Capital City] , [Governor] , and other propertie that are used to describe entity references of that entity type.
- [California] node 502 is connected by [has population] edge 506 to [37,691,912] node 504, indicating tha California has the population 37, 691, 912.
- [California] node 502 is connected by [Has Capital City] edge 510 to
- [Has Governor] edge. 514 is connected to ['??'?] node 512 , indicating that this information is not known, It will be understood that [???] is a placeholder and that the node may be missing, may be blank, may contain a nui value, may be marked in some way indicating that the
- the system identifies [??? node 512 as a missing data element in the knowledge graph, I some implementations, the system identifies the missing element based on a schema associated with the entity type U.S State. For example, the system may expect, to find population capital city, and governor information for the entity reference California, while only the population and capital city information are present in the knowledge graph.
- the missing element may be identified by a crawling operation or other traversal of the knowledge graph, wherein expected properties of a particular entity reference are compared to the. properties found in the knowledge graph,
- a query record is a history of searches performed by users.
- a query record may include aggregated Internet search history information.
- a query record may include searches that were not answered by data in the knowledge graph.
- the occurrence of queries for which answers are not present in the knowledge graph may indicate that the information is missing.
- the presence of a query that does have a corresponding entry in the knowledge graph may indicate that, the entry should be updated.
- not shov.ni not shov.ni
- node 512 includes information that is determined to be outdated based on query records.
- FIG, ⁇ shows exemplary sequence 600 for updating data using a query processing engine in accordance with some implementations of the present disclosure.
- Box 602 includes entity reference [Empire State
- the entity reference is an entity reference in a knowledge graph. For example,
- [California] node 502 of FIG. 5 may be an entity reference.
- Box 604 shows informatio stored in a data structure associated with the entity reference of box 604.
- the entity reference [Empire State Building] has the type [Skyscraper] .
- the entity type [Skyscraper] is in the domain [Architecture] and has the properties [Height] ,
- the missing information may be represented in any suitable manner.
- the system generates a query to which the expected answer will complete the missing [Architect] information of box 604.
- Box SQS includes natural language search query [Who is the architect of the Empire State Building in New York City that opened in the year
- the query need not be a natural language search query.
- the query includes the entity reference [Empire State Building] , the propert of the missing inf rmation [Architect] , and other information that is known such as [New York City] and [year 1931] .
- the additional information serves as disambiguation information in the search query. For example, it may help to distinguish between the particular Empire State Building in Manhattan, other buildings in the Empire State, a book titled "Empire State Building, " and a documentary movie titled "Empire State Building,"
- the system ma translate knowledge graph information front box 604 to natural language in order to generate the search query. For example, the information from box 604 [Location: New York City] is converted to the query terms [in New York City] in box 606.
- the name of a property, for exam le [Location] is included in the query.
- a property value for example [New York City] is included in a query.
- both properties and propert values are included in a query.
- the system may determine to include a property or property value for a particular query based on information stored in a schema, based on an entity type associated with the entity reference, based on a domain associated with the entity reference, based on any other suitable information, or any combination thereof,
- the system selects the information based on an iterative process -where pieces of information are successively added to, replaced in and/or removed from the query until subsequent steps of the process produce a suitable result. For example, if the query [Who is the architect of the Empire State Building] returns ambiguous results, the system may add [in New York City] to the query in order to use a more specific search. This process is repeated until an acceptable result is determined based on the query. In an example, the system selects properties to add or remove based on their uniqueness, that is, how often the same information appears associated with that property for other entity references.
- [New York City] may be relatively common while [Art Deco] is less common, based on the amount a particular property appears in search records, based on any other suitable data, or any combination thereof.
- the system may include more common information, less common information, or any combination thereof.
- Box 60 S includes query processing. he query in box S06 is received by box 608 and processed, for example, as described above for query processing 108 of FIG, 1, The query processing of box 608 generates an output, for example as described for output 110 of FIG, 1.
- the output [William F. Lamb] is shown in box 610, Thus in the illustrated exam le , the system has determined the [William F, Lamb] is the answer to the question [Who is the architect of the Empire State Building in New York City that opened in the year 1.931?] .
- Box €12 includes updated information associated with the entity reference in box. 602.
- box 612 represents the information of box 604 after it has been updated based on the output of query processing as shown in box 610.
- the [???] for Architect shown in box 604 has been replaced with the information [William F. Lamb] , indicating that the architect of the Empire State Building is William F. Lamb.
- FIG, 7 shows flow diagram 700 including illustrative steps for -updating a data graph based on missing information in a knowledge graph in accordance with some implementations of the present disclosure.
- the steps of flow diagram 700 correspond in part to sequence 600 of FIG. 6.
- step 702 the system identifies an entity reference corresponding to an entity type.
- the system identifies an entity reference as described for the entity reference of box 602 of FIG, 6, as described for node 512 of FIG, 5, by any other suitable technique, or any combination thereof.
- the system identifies entity references by traversing and/or crawling a graph, that is, following successively linked nodes.
- the system identifies entity references based on a statistical process that depends on user interactions, such as where more commonly accessed entity references are identified as the entity reference of step 702.
- the system identifies entity references based on a random selection process. It will be understood that the aforementioned techniques are merely exemplary and that the system may identify entity references using any suitable, technique or any combination of techniques.
- the system identifies a missing data element associated with the entity reference. In some embodiment, the system identifies a missing data element associated with the entity reference.
- missing data elements include incomplete data elements, outdated data elements, elements that are expected to be in the knowledge graph based on a schema associated with an entity type, any other suitable elements, or any
- node 512 is a missing data element.
- the [???] data for [Architect] is a missing- data element.
- the system identifies missing data elements based on a schema for a type associated with the entity reference identified in step 702. In an example, a particular entity reference is associated with a schema that includes 5 properties, for which there is data in the knowledge graph for 4 of those 5 properties. The system may then identify the fifth property for which data is not included as a missing data element,
- step 706 the system generates a query based at. least in part on the missing data element and the type of entity reference.
- the system generates a query based at. least in part on the missing data element and the type of entity reference.
- the system generates a query based at. least in part on the missing data element and the type of entity reference.
- the system generates a query as described in relation to box 606 of FIG. 6.
- the system generates a natural language search query based on the entity reference of step 702 and the missing data element of step 704. In some embodiments, the system generates more than one query. In some
- the system uses
- disambiguation information to distinguish between entity references in a search with the same or similar search terms.
- the system may use disambiguation information for the entity reference [Portland] to distinguish in a. query between the city of Portland, Oregon, the city of Portland, Maine, and the isle of Portland, England.
- Disambiguation information may include properties such as [Height] and [Style] as illustrated in FIG, S , properties values such as [443m] ana [Art Deco] , both properties and the property values, any other suitable information, and any combination thereo ,
- step 708 the system provides the query to a query processing engine.
- query processing includes processing as described for box 108 of FIG, 1 and/or box 808 of FIG. 6 .
- a query processing engine receives the query generated in step 706. In some embodiments, where more than one query is generated in step 706, some or all of the queries may be provided to a query processing engine. In some
- a query processing engine includes a natural language question answering service, a search engine, any other suitable query processing engine, or any combination thereof.
- a query processing engine receives a natural language query such as the query shown in box ⁇ 08 of FIG. 6 and processes the query to determine an answer.
- the answer may include a single answer, multiple answers,
- query processing includes parsing of a query, searching of an index, any other suitable search techniques, and any combination thereof.
- step 710 the system receives information from the query processing engine in response to the query.
- the response corresponds to the answer or answers generated by the query processing engine in step 708.
- box. 610 of FIG, 6 illustrates a response received from a, query processing engine.
- the response received represents an answer to the query generated in step 706 , where that query is a.
- the system receives more tha.n one response to the query from the query processing engine, and selects an answer from the more than one response. For example, the system may select a response that is the highest rated based on a confidence measure.
- the answers may include the. two previous governors, [Arnold Schwarzenegger] and [Jerry Brown] , A confidence measure based on the recency of results may be used to select the most current result, [Jerry Brown] .
- the system may determine a confidence measure based on information associated with the entity type. For example, the system may use a confidence measure that depends more heavily on recency for the property [Governor] , and use a confidence measure that depends more heavily on search result popularity for the property [Capital], because governor is a property that changes over time and Capital does not change. It will be understood that the aforementioned confidence measures are merely exemplary and that that the system may use any suitable measure or combination of measures including weighted
- the system need not use the information received.
- the system may alter, refine, narrow, broaden, or otherwise change the query provided to the query processing engine and repeat step 708, flag the entry for user intervention, perform any other suitable processing steps, or any combination thereof.
- step 712 the system updates the knowledge graph based at least in part on the received information.
- the system updates information based on the information received from the query processing engine in step 710.
- the system updates information as illustrated for box 612 of FIG. ⁇ .
- the system updates a missing data, element identified in step 704 based on the information from step 710, In some implementations, the system replaces outdated
- updating the knowledge graph includes updating existing information, adding new
- the system identifies that a population value such as node 504 of FIG. 5 should be updated.
- the system may identify that a missing data element such as node 512 of FIG. 5 is incomplete,
- FIG. 8 shows flow diagram 800 including illustrative steps for updating a data graph based on a query record in accordance with some implementations of the present
- the system identifies a data, element to be updated based at least in part a query record.
- a data element to be updated may include, incomplete data, outdated data., missing data, any other suitable data, or any combination thereof.
- a query record includes one or more query logs, processed query logs, other suitable processed data related to searches and search history, any other suitable information, or any combination thereof.
- the system uses query records to identify data in a knowledge graph that is outdated, incorrect, incomplete, or otherwise not satisfactory to a user. For example, a user using a search engine may receive informat on from a knowledge graph before receiving additional search results based on an index of data on a network such as the. Internet.
- Query records that reflect the user searching for further information after receiving information from the knowledge graph may be indicative of the knowledge graph information being incomplete or incorrect.
- the system uses that information to identify that the entity reference should be updated.
- the system uses query records that include searches for a piece of information that is not included i the knowledge graph to determine that the piece of information is missing.
- the system determines an interval at which to perform regular updates based on query records. In an example, the system determines based on query records that a particular records needs to be updated daily based on how frequently query records do not match information in the knowledge graph. It. will be understood that update intervals may be determined based on any suitable information, for example, user input, update intervals associated with a schema, any other suitable information, or any combination thereof. In an example, the system determines that
- information regarding the population of a particular country should be updated monthly based on query records. That information may be stored in a [Country] schema, such that the system updates the population for all countries at monthly intervals .
- step 804 the system generates a query based at least in part on the identified element.
- the system performs step 804 for the
- step 806 the system, provides the query to a query processing engine.
- the system performs step 806 as described for step 708 of FIG. 7.
- step 808 the system receives information from the query processing engine in response to the query. I some implementations, the system performs step 80S as described for step 710 of FIG . 7. [00793 In step 810, the system updates the knowledge graph based at least in part on the received information. In some implementations, the system performs step 810 as described for step 712 of FIG, 7.
- steps may be added, removed, omitted, repeated, reordered, modified in any other suitable way, or any combination thereof.
- FIGS. 3 and 10 describe illustrative computer systems that may be used in some implementations of the present disclosure. It will be understood that elements of FIGS, 9 and 10 are merely
- any suitable elements may be added, removed, duplicated, replaced, or otherwise mociified.
- system may be implemented on any suitable computer or combination of computers.
- system is implemented in a distributed computer system including two or more computers.
- system may use a cluster of computers located in one. or more locations to perform
- distributed computing may include any suitable parallel computing, distributed computing, network hardware, network software, centralized control, decentralised control, any other suitable implementations, or any combination thereof .
- FIG, 9 shows illustrative computer system 900 in accordance with some implementations of the present
- System ⁇ 00 may include one or more computing device 902.
- computing device 902 and any other device of system S0Q includes one or more, computers and/or one or more processors.
- processors included in system S0Q.
- a processor includes one or more hardware processors, for example, integrated circuits, one or more software modules, computer-readable media such, as memory, firmware, or any combination thereof.
- hardware processors for example, integrated circuits, one or more software modules, computer-readable media such, as memory, firmware, or any combination thereof.
- computing device 902 includes one. or more computer-readable medium storing software, include
- computing device 902 iriclades a
- smartphone tablet computer, desktop computer, laptop
- PDA personal digital assistant
- Compu ing device 902 may be coupled to network 904 directly through connection 90S, through wireless repeater 910, by any other" suitable way of coupling to network 904, or by any combination thereof.
- Network 904 may include the Internet, a dispersed network of computers and servers, a local network, a public intranet, a private intranet , other coupled computing systems, or any combination thereof.
- Computing device 902 may be coupled to network 904 by wired connection 906 .
- Connection 906 may include Ethernet hardware, coaxial cable hardware, DSL hardware, T-l hardware , fiber optic hardware, analog phone line hardware, any other suitable wired hardware capable of communicating, or any combination thereof.
- Connection 90S may include transmission techniques including TCP/IP transmission techniques, IEEE 1002 transmission techniques, Ethernet transmission techniques, DSL transmission techniques, fiber optic transmission techniques, ITU-T transmission techniques, any other suitable transmission techniques, or any combination thereof.
- Computing device 902 may be wireiessly coupled to network 904 by wireless connection 908.
- wireless repeater 910 receives transmitted information from computing device 902 by wireless connection 908 and communicates it. with network ⁇ 04 by connection ⁇ 12.
- Wireless repeater ⁇ 10 receives information from network 904 by connection ⁇ 12 and communicates it with computing device ⁇ 02 by wireless connection ⁇ 08.
- wireless connection ⁇ 08 may include cellular phone transmission techniques, code division multiple access (CDMA) transmission techniques, global system for mobile communications (GSM) transmission techniques , general packet radio service (GPRS) transmission techniques, , satellite transmission techniques, infrared transmission techniques, Bluetooth transmission techniques, Wi-Fi transmission techniques, WiMax transmission techniques, any other suitable transmission techniques, or any combination thereof.
- CDMA code division multiple access
- GSM global system for mobile communications
- GPRS general packet radio service
- Connection 912 may include Ethernet hardware
- Connection 912 may include wired transmission techniques including TCP/IP transmission
- Connection 912 may include may include wireless transmission techniques including cellular phone transmission techniques, code division multiple access (CDMA) transmission techniques, global system for mobile communications (GSM) transmission techniques, general packet radio service (GPRS) transmission techniques, satellite transmissio techniques, infrared transmission techniques, Bluetooth transmission techniques, Wi-Fi transmission techniques, WiMax transmission techniques, any other suitable transmission techniques, or any combination thereof .
- CDMA code division multiple access
- GSM global system for mobile communications
- GPRS general packet radio service
- Wireless repeater 910 may include any number of cellular phone transceivers, network routers, network
- connection 906 wireless connection 908 and connection 912
- system 900 may include any suitable number of any suitable devices coupling computing device 902 to network ⁇ 04. it will also be
- any suitable number of remote servers 914, 91$, 918, 920 may be coupled to network 904, Remote servers may be general purpose, specific, or any combination thereof.
- One or more search engine servers 922 may be coupled to the network 904, In some implementations, search engine server 922 may include the knowledge graph, may include processing equipment configured to access the
- knowledge graph may include processing equipment configured to receive search queries related to the knowledge graph, may include any other suitable information or equipment, or any combination thereof.
- One or more database servers 924 may be coupled to network 904. In some implementations, database server 924 may store the knowledge graph, In some implementations,
- database server 924 may be distributed across any suitable number of database, servers and general purpose servers by any suitable technique, or any combination thereof. It will also be understood that, the sys em may use any suitable number of general purpose, specific purpose, storage, processing, search, any other- suitable server, or any combination.
- FIG. 10 is includes a block diagram of illustrative computing device 1000 in accordance with some implementations of the present disclosure.
- FIG , 10 includes computing device 1000.
- computing device 1000 In some implementations, computing device 1000
- computing device 1000 is an illustrative local and/or remote computer that is part of a distributed computing system.
- Computing device 1000 may include
- Inpu /output equipment 1002 may include display 1006,
- the equipment of computing device 1000 may be representative of equipment included in a. smartphone user device. It will be understood that the specific equipment included in the illustrative computer system may depend on the type of user device.
- the input /output equipment 1002 of a desktop computer may include a keyboard 1040 and mouse 1042 and may omit acceleroraeter 1012 and GPS receiver 1036.
- computing device 1000 may omit any suitable illustrated elements, and may include equipment not shown such as media drives, data storage, communication devices, display devices, processing equipment, any other suitable equipment, or any combination thereof.
- display 100S may include a liquid crystal display, light emitting diode display, organic light emitting- diode display, amorphous organic light emitting diode display, plasma display, cathode ray tube display, projector display, any other suitable type of display capable of displaying content, or any combination thereof.
- Display 1006 may be controlled by display controller 1018 or by processor 1024 in processing equipment 1004, by processing equipment internal to display 1006 , by other controlling equipment, or by any combination thereof. In some
- display 1006 may display data from a.
- Touchscreen 1008 may include a sensor capable of sensing pressure input, capacitance input, resistance input, piezoelectric input, optical input, acoustic input, any other suitable input, or any combination thereof. Touchscreen 1008 may be capable of receiving touch-based gestures. Received gestures may include information relating to one or more locations on the surface of touchscreen 1008, pressure of the gesture, speed of the gesture, duration of the gesture, direction of paths traced on its surface, by the gesture, motion of the device in relation to the gesture, other- suitable information regarding a gesture, or any combination thereof. In some implementations, touchscreen 1008 may be optically transparent and located above or below display 1006.
- Touchscreen 1008 may be coupled to and controlled by display controller 1018, sensor controller 1020, processor 1024, any other suitable controller, or any combination thereof.
- touchscreen 1008 may include a virtual keyboard capable of receiving, for example, a search query used to identify data in a knowledge graph.
- a gesture received by touchscreen 1008 may cause a corresponding display element to be displayed substantially concurrently ⁇ i.e., immediately following or with a short delay) by display 1006, For example, when the gesture is a movement of a finger or stylus
- the search system may cause a visible line of any suitible thickness, color, or pattern indicating the path of the gesture to be displayed on display 1006.
- the functions of the touchscreen may be fully or partially replaced using a mouse pointer displayed on the display screen.
- Button 1010 may be one or more electromechanical push-button mechanism, slide mechanism, switch mechanism, rocker mechanism, toggle mechanism, other suitable mechanism, or any combination thereof.
- Button 1010 may be included in touchscreen 1008 as a predefined region of the touchscreen (e.g. , soft keys) .
- Button 1010 may be included in touchscreen 1008 as a region of the touchscreen defined by the search system and indicated by display 1006.
- Activation of button 1010 may send a signal to sensor controller 1020, processor 1024, display controller 1020, any other suitable processing equipment , or any combination thereof .
- Activation of button 1010 may include receiving from the user a pushing gesture, sliding gesture, touching gesture, pressing gesture, time- based gesture (e.g., based on the duration of a push), any other suitable gesture, or any combination thereof.
- Accelerometer 1012 may be capable of receiving information about the motion characteristics, acceleration characteristics , orientation characteristics ., inclination characteristics and other suitable cha.ract.erisite . or any combination thereof, of computing device 1000.
- Accelerometer 1012 may be a mechanical device, microelectromechanical ⁇ MEMS5 device , nanoelectromechanical (MEMS) device, solid state device, any other suitable sensing device, or any combination thereof.
- MEMS microelectromechanical ⁇ MEMS5 device
- MEMS nanoelectromechanical
- accelerometer 1012 may be a 3 -axis piezoelectric microelectromechanical integrated circuit which is configured to sense acceleration, orientation, or other suitable characteristics by sensing a change in the capacitance of an internal structure, Accelerometer 1012 may be coupled to touchscreen 1008 such that information received by accelerometer 1012 with respect to a gesture is used at least in part by processing equipment. 1004 to interpret the gesture .
- Global positioning system (GPS) receiver 1036 may be capable of receiving signals from global positioning
- GPS receiver 1036 may receive information from one or more satellites orbiting the earth, the information including time, orbit, and other in ormation related to the satellite. This information may be used to calculate the location of computing device 1000 on the surface of the earth, GPS receiver 1036 may include a barometer (not shown) to improve the accuracy of the location, GPS receiver 1036 may receive information from other wired and wireless communication sources regarding the location of computing device 1000, For example, the identity and location of nearby cellular phone towers may be used in place of, or in addition to, GPS data to determine the location of computing device 1000.
- Camera 1038 may include one or more sensors to detect light. In some implementations , camera 1038 may receive video images, still images, or both. Camera 1038 may include a charged coupled device (CCD) sensor, a complementary metal oxide semiconductor (CMOS) sensor, a photocell sensor, an IR sensor, any other suitable sensor, or any combination thereof. In some implementations , camera 1038 may include a device capable of generating light to illuminate a subject, for example, an LED light. Camera 1038 may communicate information captured by the one or more sensor to sensor controller 1020, to processor 1024, to any other suitable equipment, or any combination thereof. Camera 1038 may include lenses, filters, and other suitable optical equipment. It will be understood that computing device 1000 may include, any saitabie number of camera 1038.
- Audio equipment 1034 may include sensors and processing equipment for receiving and transmitting
- Speaker 1014 may include equipment to produce acoustic waves in response to a signa.l.
- speaker 1014 may include an electroacoustic transducer wherein an electromagnet is coupled to a. diaphragm to produce acoustic waves in response to an electrical signal.
- Microphone 1016 may include
- a condenser-type microphone may use a diaphragm as a portion of a capacitor such that acoustic waves induce a capacitance change in the device, which may be used as an input signal by computing device 1000.
- Speaker 1014 and microphone 1016 may be contained within computing device 1000,. may be remote devices coupled to computing device 1000 by any suitable wired or wireless connection, or any combination thereof.
- Speaker 1014 and microphone 1016 of audio equipment 1034 may be coupled to audio controller 1022 in processing equipment 1004. This controller may send and receive signals from audio equipment 1034 and perform pre-processing and filtering steps before transmitting signals related to the input signals to processor 1024. Speaker 1014 and microphone 1016 may be. coupled directly to processor 1024. Connections from audio equipment 1034 to processing equipment 1004 may be wired, wireless, other suitable arrangements for communicating information, or any combination thereof.
- Processing equipment 1004 of computing device 1000 may include display controller 1018, sensor controller 1020, audio controller 1022, processor 1024, memory 1026,
- Processor 1024 may include circuitry to interpret signals input to computing device 1000 from, for example, touchscreen 1008 and microphone 1016. Processor 1024 may- include circuitry to control the output to display 1006 and speaker 1014. Processor 1024 may include circuitry to carry out instructions of a computer program. In some
- processor 1024 may be an integrated circuit
- instructions of a computer program include a plurality of inputs and outputs .
- Processor 1024 may be coupled to memory 102S.
- Memory 1026 may include random access memory ⁇ RAM) , flash memory, programmable read only memory (PROM), erasable programmable read only memory (SPROM) , magnetic hard disk drives, magnetic tape cassettes, magnetic floppy disks optical CD-ROM discs, CD-R discs, CD-RW discs, DVD discs, DVD-i-R discs, DVD-R discs, any other suitable storage medium, or any combination thereof .
- RAM random access memory
- PROM programmable read only memory
- SPROM erasable programmable read only memory
- magnetic hard disk drives magnetic tape cassettes
- magnetic floppy disks optical CD-ROM discs, CD-R discs, CD-RW discs, DVD discs, DVD-i-R discs, DVD-R discs, any other suitable storage medium, or any combination thereof .
- display controller 1018 may be fully or partially implemented as discrete components in computing device 1000, fully or partially integrated into processor 1024, combined in part or in full into combined control units, or any combination thereof .
- Communication controller 1028 may be coupled to processor 1024 of computing device 1000. In some embodiments,
- communication controller 1028 may communicate radio frequency signals using antenna. 1030. In some implementations, communication controller 1028 may communicate radio frequency signals using antenna. 1030.
- communication controller 1028 may communicate signals using a wired connection, not shown. Wired and wireless communications communicated by communication
- controller 1028 may use. Ethernet, amplitude modulation, frequency modulation, bitstream, code division multiple access (CDMA) , global system for mobile communications (GSM) , general packet radio service (GPRS) ., satellite., infrared, Bluetooth, Wi-Fi, WiMax, any other suitable communication configuration, or any comb.ina.tion thereof,
- the functions of communication controller 1028 may be fully or partially implemented as a discrete component in computing device 1000, may be fully or partially included in processor 1024, or any combination thereof.
- communication controller 1028 may communicate with a network such as network 904 of PIG. 9 and may receive information from a knowledge graph stored, for example, in database 924 of FIG. 9.
- Power supply 1032 may be coupled to processor 1024 and to other components of computing device 1000.
- Power supply 1032 may include a lithium-polymer battery, lithium-ion battery. NiMH battery, alkaline battery, lead-acid battery, fuel cell, solar panel, thermoelectric generator, any other suitable power source, or any combination thereof.
- Power supply 1032 may include a hard wired connection to an
- electrical power source may include electrical equipment to convert the voltage, frequency, and phase of the electrical power source input to sui able power for computing device 1000.
- a wall outlet may provide 920 volts, 60Hz AC.
- trans ormers, resistors, inductors, capacitors, transis ors, and other suitable electronic components included in power supply 1032 may convert the 920V AC from a. wall outlet power to 5 volts DC,
- a lithium-ion battery including a lithium metal oxide-based cathode and graphite-based anode may supply 3.7V to the components of computing device 1000.
- Power supply 1032 may be fully or partially integrated into computing device 1000, or may function as a tand-alone device. Power supply 1032 may power computing device 1000 directly, may power computing device 1000 by charging a battery, may provide power by any other suitable way, or any combination thereof,
Abstract
Methods and systems are provided for a question answering. In some implementations, a data element to be updated is identified in a knowledge graph and a query is generated based at least in part on the data element. The query is provided to a query processing engine. Information is received from the query processing engine in response to the query. The knowledge graph is updated based at least in part on the received information.
Description
QUESTIO ANS ERING TO POPULATE & 3 LEDSE B&SE
Background.
[0Q013 This disclosure generally relates to updating information in a database. Data has previously been updated by, for example, user input.
Surtsrtary
[0002] In some implementations, a system identifies information that is missing from a collection of data. The system generates a question to provide to a cmestion answering service based on the missing information, and uses the response from the question answering service, to update the collection of data,
[0003] In some implementations, a computer-implemented method is provided. The method includes identifying an entity reference in a knowledge graph, wherein the entity reference corresponds to an entity type. The method further includes identifying a missing data element associated with the entity reference. The method further includes generating a query based at least in part on the missing data element and the type of the entity reference. The method, further includes providing the quer to a query processing engine. The method further includes receiving information from the query
processing engine in response to the query. The method further includes updating the knowledge graph based at least in part on the received information.
[0004] In some implementations, a system is provided comprising one or more computers configured to perform operations. Operations include identifying an entity
reference in a knowledge graph, wherein the entity reference corresponds to an entity type. Operations further include
- I -
identifying a. missing data element, wherein the data element is associated with the entity reference. Operations further include generating a query based at least in part on the missing data element and the type of the entity reference. Operations further include providing the query to a qiery processing engine . Operations further include receiving information from the query processing engine in response to the query. Operations further include updating the knowledge graph based at least in part on the received information,
[0005] These and other implementations can each include one or more of the following features. In some implementations , identifying a missing data element comprises comparing properties associated with the entity reference to a schema table associated with the entity type. In some
implementations, generating the query comprises generating a natural language query. In some implementations , generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity
reference, wherein the terms comprise property values
associated with the entity reference. In some
implementations, generating the query comprises selecting, from the knowledge graph, disambiguation query terms
associated with the entity reference, wherein the terms comprise properties associated with the entity reference. In some implementations, updating the knowledge graph comprises updating the data graph to include information in place of the missing data element.
[ΟΟΟβ] In some im lementations, a computer- implemented method is provided. The method includes identifying an element in a knowledge graph to be updcited based at least in part on a query record. The method further includes
generating a query based at least in part on the identified element. The method further includes providing the query to a query processing engine. The method further includes
receiving information from the query processing engine in response to the query. The method further includes updating the knowledge graph based at least in part on the received information.
100073 In some implementations, a system is provided comprising one or more computers configured to perform operations, Operations include identifying an element in a knowledge graph to be updated based at least in part on a query record. Operations further include generating a query based at least in part on the identified element. Operations further include providing the query to a query processing engine, Operations further include receiving information from the query processing engine in response to the query.
Operations further include updating the knowledge graph based at least in part on the received information,
[0008] These and other implementations can each include one or more of the following features. In some implementations, the query record comprises data associated with one or more previously performed searches. In some implementations , generating the query comprises generating a natural language query. In some implementations, generating the query
comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise property values associated with the entity reference. In some implementations, generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise properties associated with the entity
reference. In some implementations,
updating the knowledge graph comprises updating the data graph to include information in place of the missing data, element.
Brief Description of the Figures
E000S] FIG, 1 is a high level block diagram of a system for updating data in a data structure in accordance with some implementations of the present disclosure;
[00103 FIG, 2 shows an illustrative data graph portion containing nodes and edges in accordance with some
implementations of the present disclosure;
[0011] FIG, 3 shows an illustrative knowledge graph portion in accordance with some implementations of the present disci osure;
[0012] FIG. 4 shows another illustrative knowledge graph portion in accordance with some implementations of the present disclosure ;
[0013] FIG. 5 shows an illustrative knowledge graph portion with missing information in accordance with some
implementations of the present disclosure; and
[0014] FIG, β shows an exemplary sequence for updating data using a query processing engine in accordance with some imp ementations of the present disclosure;
[001S3 FIG. 7 shows a flow diagram, of illustrative steps for updating a data graph based on missing information in accordance with some implementations of the present
disclosure;
[0016] FIG. 8 shows a flow diagram of illustrative steps for updating a data graph based on a query record in
accordance with some implementations of the present
disclosure;
[0017] FIG. 9 shows an illustrative computer system in accordance with some implementations of the present
disclosure; and
[0018] FIG, 10 is a block diagram of an illustrative computer device in accordance with some implementations of the present disclosure.
Detailed Description
[0019] FIG. 1 is a high level block diagram of system 100 for updating data in a data structure in accordance with some implementations of the present disclosure. System 100
includes processing block 102, data structure block 104, content block 106,, query processing block 108 , and output block 110, System 100 may include any suitable hardware, software, or both for implementing the features described in the present disclosure and will generally be referred to, herein, as -'the system. "
Ϊ 00203 In some implementations , a particular piece of in ormation in data structure block 104 may be missing, outdated, incorrect, incomplete, or otherwise not as desired. The system may identify the particular information based on, for example, query records or structural information about the data structure. In some implementations,, the system uses information from data structure block 104, content block 106, other sources not shown, and any combination thereof, to generate a query that is provided to query processing block 108. Processing block 102 generates the content of output block 108 based on the response from query processing block 108, In some implementations, the system uses output 110 to update data structure block 104.
[00211 Data structure block 104 includes a data structure containing structured or otherwise organized information. In some implementations, data structure block 104 contains a data structure, a data graph, a database, an index, any other suitable collection of content, or any combinabion thereof.
[0022] In some implementations, data structure block 104 includes a data graph, In some implementations, a data graph- includes data organized in a graph containing nodes and edges. The data of a data graph may include statements about
relationships between things and concepts, and those
statements may be represented as nodes and edges of a graph.
Each nodes of a daca graph contains one or more pieces of data, and the edges represent relationships between the data. Ά knowledge graph, which is a particular implementation of a data graph, is described below in FIGS, 2- „
[00233 Content block 106 includes information related to web sites and other suitable content. In an example, content block 106 includes an index of webpages on the internet containing text, images, videos, links, other suitable content, and any combination thereof. In some
implementations, content block 106 includes information from a database, private intranet, public network, private network, any other suitable collection of information, or any
combination thereof. In some implementations, content block 106 includes content used by a sea.rch engine such as a query processing engine to determine search results.
[0024] In some embodiments, content block 106 includes query records. In some embodiments, query records include data related to previous queries. In some im lementations, query records include query logs, processed query logs, other suitable processed data related to searches and search history, any other suitable information, or any combination thereof .
[0025] Query processing block 108 includes a query
processing engine that provides answers to Queries . Query processing may include, for example, a search engine, a question answering service, any other suitable query
processing, or any combination thereof. For example, query processing block IGS may receive a natural language question as an input and provide a natural language answer as the response, based on information in content 106, For example, in response to the question [What is 1+1?] query processing block 108 may provide the answer [2], In some
implementations, query processing block 108 processes natural language questions, formal language questions, queries
•5 -
formatted in any other suitable manner, or any combination thereof. In some implementations, processing block 102
formats a question such that it can be processed by query processing block 108. In some implementations, processing block 102 includes disambiguation information from data structure 104 in the query. The query processing is performed based on Internet search engine results, automated question answering techniques, responses from human question answerers, indexes of previously answered questions, natural language search parsing, any other suitable query processing technique, or any combination thereof, In some implementations , the answers from query processing block 108 are based on content block 106, data structure block 104, any other suitable content, or any combination thereof,
[0026] In some implementations, the system described herein uses natural language processing. As used herein, natural language refers to words, syntax, and other language such as it could be. used in conversation or prose, For example, natural language may include complete sentences, questions, idiom, punctuation, any other suitable language elements or structures, or any combination thereof. For example, the question [Who was the first person to fly an airplane?] is a natural language question. In contrast, formal language follows relatively more constrained rules of grammar and syntax. An example of formal language is a computer
programming language such as C or BASIC, It will be
understood that queries, including natural language queries, may be in any suitable language such as English, French, Chinese, and so on. It will be understood that in some implementations, the system need not receive a natural language query and may receive a query in any suitable form. It will also be understood that the system may receive questions, provide questions for answering, receive responses, provide answers, and perform, any other suitable steps using
natural language, formal language, keywords, voice, video, images , any other suitable coromunication technique, or any combination thereof,
[Ο027Ϊ Output block 110 corresponds to the answer provided by query processing block 108 , In some implementations, processing block 102 generates the content of output block 110 based on the query provided to query processing block 108, the response from query processing block 108, content block 106, data structure block 104, any other suitable content, or any combination thereof. In an example where the query provided to query processing block 108 corresponds to information that the system identifies as missing from data structure block 104, output block 110 may include the missing information. In the example, the system uses the information from output 110 to update data structure block 104.
[0028] FIG, 2 shows an illustrative data graph containing nodes and edges in accordance with some implementations of the present disclosure. In some implementations, data in data structure 104 of FIG, 1 is stored as a data graph. In some implementations, illustrative data graph 200 is a portion of a knowledge graph. The knowledge graph is a particular
implemen ation of a data graph and will be described in further detail in relation to FIGS . 3 and 4 below. It will be understood that the data graph implement tion of FIG, 2, and the knowledge graph, are merely examples of a data structure that may be used by the system to store entity references and other data, and that any suitable data format may be used. For example, data in data, structure 104 of IG, 1 may be stored as a list of entities and associated entity types.
Data stored by the data structure may include any suitable data such as references to data, text, images, characters, computer files, databases, any other suitable data, or any combination thereof. It will be understood that in some implementations, the node and edge description is merely
illustrative and that the construction of the data structure may include any suitable technique for describing information and relationships. In an example, nodes may be assigned a unique identification number, and an edge may be described using the identification numbers that a particular edge connects. It will be understood that the representation of data as a graph is merely exemplary and that data may be stoz'ed, for example, as a computer file including pieces of data and links and/or references to other pieces of data.
[0029] In some implementations, data may be organized in a database using any one or more data structuring techniques. For example, data may be organised in a graph containing nodes connected by edges. In some implement tions, the data may include statements about relationships between things and concepts, and those statements may be represented as nodes and edges of a graph. The nodes each contain a piece or pieces of data and the edges represent relationships between the data contained in the nodes that the edges connect , In some
impleitientat ions , the graph includes one or more pairs of nodes connected by an edge. The edge, and thus the graph, may be directed, i.e. unidirectional, undirected, i.e. bidirectional, or both, i.e. one or more edges may be undirected and one or more edges may be directional in the same graph. Nodes may include any suitable data or data representation. Edges may describe any suitable relationships between the data. In some implementations., an edge is labeled or annotated, such that it includes both the connection between the nodes, and
descriptive information about that connection. A particular node may be connected by distinct edges to one. or more other nodes, or to itself, such that an extended graph is formed. For purposes of clarity, a graph based on the structure described immediately above is referred to herein as a
knowledge graph . In some implementations , the knowledge graph
may be a useful for representing information and in providing information in search,
[0030] FIG, 2 shows illustrative knowledge graph 200
containing nodes and edges. Illustrative knowledge graph 200 includes nodes 202, 204, 206, and 208. Knowledge graph 200 includes edge 210 connecting node 202 and node 204. Knowledge graph 200 includes edge 212 connecting node 202 and node 206. Knowledge graph 200 includes edge 214 connecting node 204 and node 208, Knowledge graph 200 includes edge 21S and edge 2Ϊ8 connecting node 202 and node 208. Knowledge graph 200
includes edge 220 connecting node 208 to itself. Each aforementioned group of an edge and one or two distinct nodes may be referred to as a triple or 3 -tuple. As illustrated, node 202 is directly connected by edges to three other nodes, while nodes 204 and 208 are directly connected by edges to two other nodes. Node 206 is connected by an edge to only one other node, and in some implementa ions, node 20S is referred to as a terminal node. As illustrated, nodes 202 and 208 are connected by two edges, indicating that the relationship between the nodes is defined by more than one property. As illustrated, node 208 is connected by edge 220 to itself, indicating that a node may relate to itself. While
illustrative knowledge graph 200 contains edges that are not labeled as directional, it will be understood that each edge may be unidirectional or bidirectional. It will be understood that this example of a graph is merely an example and that any suitable size or arrangement, of nodes and edges may be employed .
[0031] Generally, nodes in a knowledge graph can be grouped into several categories . Nodes may represent entities, organizational data such as entity types and properties, literal values, and models of relationships between other nodes. A node of a knowledge graph may represent an entity, as defined above.
[0032] In some implementa ions, entity types, properties, and other suitable content is created, defined, redefined, altered, or otherwise generated b any suitable technique, :or example, content may be generated by manual user input, by automatic responses to user interactions, by importation of data from external sources, by any other suitable technique, or any combination thereof, For example, if a commonly searched for term is not represented in the knowledge graph, one or more, nodes representing that node may be added. In another example, a user may manually add information and organizational structures ,
[0033] A node representing organizational data, may be included in a knowledge graph. These may be referred to herein as entity type nodes. As used herein, an entity type node may refer to a node in a knowledge graph, while an entity type may refer to the concept, represented by an entity type node. An entity type may be a defining characteristic of an entity. For example, entity type node Y may be. connected to an entity node X by an [Is A] edge, or link, discussed further below, such that the graph represents the information "The Entity X Is Type Y. " For example, the entity node [George Washington] may be connected to the entity type node
[President] . An entity node may be connected to multiple entity type nodes, for example, [George Washington] may also be connected to entity type node [Person] and to entity type node [Military Commander] . In another example, the entity type node [City] may be. connected to entity nodes [New York City] and [San Francisco] , In another example, the concept [Tall People], although incompletely defined, i.e., it does not necessarily include a definition of the property [tall] , may exist as an entity type node. In some implementations, the presence of the entity type nocie [Tall People] , and other entity type nodes, may be based on user interaction.
[0034] In some implementations, an entity type node may include or be connected to data about: a list of properties associated with that entity type node, the domain to which that entity type node belongs, descriptions, values, any other suitable information, or any combination thereof. A domain refers to a collection of related entity types. For example, the domain [Film] may include, for example, the entity types [Actor] . [Director] , [Filming Location] . [Movie] , any other suitable entity type, or any combination thereof. In some implementations, entities are associated with types in more than one domain. For example, the entity node [Benjamin Franklin] may be connected with the entity type node
[Politician] in the domain [Government] as well as the entity type node [Inventor] in the domain [Business] ,
[0035] In some implementations, properties associated with entity nodes or entity type nodes may also be represented as nodes. For example, nodes representing the property
[Population] or [Location] may be connected to the entity type node [City] , The combination and/or arrangement of an entity type and its properties is referred to as a schema , In some implementations, schemas are stored in tables or other suitable data structures associated with an entity type node. In some implementations, the knowledge graph may be self- defining or bootstrapping, such that it includes particular nodes and edges that define the concept of nodes, edges, and the graph itself. For example,, the knowledge graph may contain an entity node [Knowledge Grap ] that is connected to property nodes that describe a knowledge graph's properties such as [Has Nodes] and [Has Edges] .
[003S] Specific values, in some implementations referred to as literals, may be associated with a particular entity in a terminal node by an edge defining the relationship. Literals ma refer to values and/or strings of information. For example, literals may include dates, names, and/or numbers.
In an example, the entity node [San Francisco] may be
connected to a terminal node containing the literal [813000] by an edge annotated with the property [Has Population] , In some implementations, terminal nodes may contain a reference or link to long text strings and other information stored in one or more documents externa,! to the knowledge graph. In some implementations, literals are stored as nodes in the knowledge graph. In some implementations, literals are stored in the knowledge graph but are not assigned a unique
identification reference as described below, and are not capable of being associated with multiple entities. In some implementations, literal type nodes may define a type of literal, for example [Date/Time], [Number], or [GPS
Coordinates ] .
[0037] In some implementations, the grouping of an edge and two nodes is referred to as a triple. The triple represents the relationship between the nodes, or in some
implementations , between the node and itself. In some implementations, higher order relationships are modeled, such as quaternary and n-ary relationships, where n is an integer greater than 2, In some implementations, information modeling the relationship is stored in a node, -which may be referred to as a mediator node. In an example, the information "Person X Donates Artifact Y To Museum Z" is stored in a mediator node connected entity nodes to X, Y, and Z, where each edge identifies the role of each respective connected entity node.
[00383 In some implementations, the knowledge graph may include information for di ferentiation and disambiguation of terms and/or entities. As used herein, differentiation refers to the many-to-one situation where, multiple names are
associated with a single entity. As used herein,
disambiguation refers to the one-to-many situation where, the same name is associated with multiple entities. In some implementations, nodes may be assigned a unique identification
reference. In some implementations , the unique identification reference may be an alphanumeric string, a name, a. number, a binary code, any other suitable identifier, or any combination thereof. The unique identification reference may allow the system to assign unique references to nodes with the same or similar textual identifiers. In some implementations, the unique identifiers and other techniques are used in
differentiation, disambiguation, or both.
[0039] In some implementations of differentiation, a node may be associated with multiple terms or differentiation aliases in which the terras are associated with the same entity. For example, the terms [George Washington], [Geo, Washington] , [President Washington] , and [President George Washington] may all be associated with a single entity, i.e., node, in the knowledge graph. This may provide
dif erentiation and simplification in the knowledge graph.
[00401 In some implementations of disambiguation, multiple nodes with the same or similar names are defined by their unique identification references, by associated nodes in the knowledge graph, by any other suitable information, or any combination thereof. For example, there may be an entity node related to the city [Philadelphia] , an entity node related to the movie [Philadelphia] , and an entity node related to the cream cheese brand. [Philadelphia] . Each of these nodes may have a unique identification reference, stored for example as a number, for disambiguation within the knowledge graph. In some implementations, disambiguation in the knowledge graph is provided by the. connections and relationships between multiple nodes. For example, the city [New York] may be disambiguated from the. state [New York] because the city is connected to an entity type [City] and the state is connected to an entity type [State] . It will be understood that more complex relationships may also define and disambiguate nodes. For example, a node may be defined by associated types, by other
entities connected to it by particular properties, by its name, by any other suitable information, or any combination thereof. These connections may be useful in disambiguation . For example, the graph may include two [Georgia] nodes, corresponding respectively to the U.S. State and the Eastern European country. The node [Georgia] that is connected to the node [United sStat.es] may be understood represent the U.S.
State, while the node [Georgia] connected to the nodes [Asia] and [Eastern Europe] may be understood to represent, the country in eastern Europe.
[0G41] In some implementations, a node may include or connect to data defining one or more attributes. The
attributes may define a particular characteristic of the node. The particular attributes of a node may depend on what the node represents. In some implementations, an entity node may include or connect to: a unique identification reference, a list of entity types associated with the node, a list of differentiation aliases for the node, data associated with the entity, a textual description of the entity, links to a textual description of the entity, other suitable information, or any combination thereof. As described above, nodes may contain a reference or link to long text strings and other information stored in one or more documents external to the knowledge graph. In some implementations, the storage technique may depend on the particular information. For example, a unique identification reference may be stored within the node, a short information string may be. stored in a terminal node as a literal, and a long description of an entity may be stored in an external document linked to by a. reference, in the knowledge graph.
[0042] An edge in a knowledge graph may represent a semantic connection defining a relationship between two nodes , The edge may represent a prepositional statement such as [Is A] , [Has A] , [Is Of A Type] , [Has Property] , [Has Value] , any
other suitable statement, or any combination thereof. For example, the entity node of a particular person may be connected by a [Date Of Birth] edge to a terminal node containing a literal of his or her specific date of birth. In some implementati ons , the properties defined by edge
connections of an entity may relate to nodes connected to the type of that, entity. For example, the entity type node
[Movie] may be connected to entity nodes [Actor] and
[Director] , and a particular movie raay be connected, by an edge property [Has Actor] to an entity node representing a.
particular actor,
[0043] In some implementations, nodes and edges define the relationship between an entity type node and its properties, thus defining a schema. For example, an, edge may connect an entity type node to a node associated with a property, which may be referred to as a property node. Entities of the type may be connected to nodes defining particular values of those properties. For example, the entity type node [Person] may be connected to property node [Date of Birth] and a node
[Height]. Further, the node [Date of Birth] may be connected to the literal type node [Date/Time] ,. indicating that literals associated with [Date of Birth] include date/time information. The entity node [George Washington] , which is connected to entity type node [Person] by an [Is A] edge, may also be connected to a literal [Feb 22. 1732] by the edge [Has Date Of Birth] , In some implementations, the entity node [George Washington] is connected, to a [Date Of Birth] property node. It. will be understood that in some implementations, both schema and data are modeled and stored in a knowledge graph using the same technique. In this way, both schema and data can be accessed by the same search techniques , In some
implementations , schemas are stored in a separate table, graph, list, other data structure, or any combination thereof. It will also be understood that properties may be. modeled by
nodes, edges, literals, any other suitable data, or any combination thereof.
[0044] For example, the entity node [George Washington] may¬ be connected, by an [Is A] edge to the entity type node
representing [Person] , thus indicating an entity type of the entity, and may also be connected to a literal [Feb 22, 1732] by the edge [Has Date Of Birth] , thus de ining a property of the entity. In this way, the knowledge graph defines both entity types and properties associated with a particular entity by connecting to other nodes. In some implementations , [Feb 22, 1732] may be a node, such that it is connected to other events occurring on that date. In some implementations , the date ma be further connected to a year node, a month node, and a day of node. It will be. understood that this information may be stored in any suitable combination of literals, nodes, terminal nodes, interconnected entities, any other suitable arrangement, or any combination thereof,
[0045] FIG. 3 shows illustrative knowledge graph portion 300 in accordance with some implementations of the present disclosure. Knowledge graph portion 300 includes information related to the entity [George Washington] , represented by
[George Washington] node 302. [George Washington] node 302 is connected to [U.S. President] entity type node 304 by [Is A] edge 314 with the semantic content [Is A] , such that the
3 -tuple defined by nodes 302 and 304 and the edge 314 contains the information "George Washington is a U.S. President."
Similarly. "Thomas Jefferson Is A U.S. President" is
represented by the tuple of [Thomas Jefferson] node 310, [Is A] edge 320, and [U.S. President] node 304. Knowledge graph portion 300 includes entity type nodes [Person] 324, and [U.S. President] node 304. The person type is defined in part by the connections from [Person] node 324. For example, the type ί Person] is defined as having the property [Date Of Birth] by node 330 and edge 332, and is defined as having t e property
[Gender] by node 334 and edge 336. These, relationships define in part a schema associated with the entity type [Person] ,
[004S] [George Washington] node 302 is shown in knowledge graph portion 300 to be of the entity types [Person] and [U.S. President] , and thus is connected to nodes containing values associated with those types. For example, [George Washington] node 302 is connected by [Has Gender] edge 318 to [Male] node 30β, thus indicating that "George Washington has gender Male." Further, [Male] node 306 may be connected to the [Gender] node 334 indicating that "Male Is A Type Of Gender." Similarly, [George Washington] node 302 is connected by [Has Date of Birth] edge. 316 to [Feb 22, 1732] node 308, thus ind.ica.ting that "George Washington Has Date Of Birth Feb 22, 1732,"
[George Washington] node 302 may also be connected to [1789] node 328 by [Has Assumed Office Date] edge 338.
[0047] Knowledge graph portion 300 also includes [Thomas Jefferson] node 310, connected by [Is A] edge 320 to entity type [U.S. President] node 304 and by [Is A] edge 322 to
[Person] entity type node 324. Thus, knowledge graph portion 300 indicates that "Thomas Jefferson" has the entity types "U.S. President" and "Person." In some implementations,
[Thomas Jefferson] node 310 is connected to nodes not shown in FIG, 3 referencing his date of birth, gender, and assumed office date,
[0048] It will be understood that knowledge graph portion 300 is merely an example and that it may include nodes and edges not shown. For example, [U.S. President] node 304 may be connected to all of the U.S. Presidents. [U.S. President] node 304 may also be connected to properties related to the entity type such as a duration of term, for example [4 Years], a term limit, for example [2 Terms] , a location o office, for example [Washington D.C.3 , any other suitable data, or any combination thereof. For example, [U.S. President] node 304 is connected to [Assumed Office Date] node 342 by [Has
Property] edge 340, defining in part a schema, for the type [U.S. President] . Similarly, [Thomas Jefferson] node 310 may be connected to any suitable number of nodes containing further information related to his illustrated entity type nodes [U.S. President], and [Person], and to other entity type nodes not shown such as [Inventor] , [Vice President] , and
[Author] . In a further example, [Person] node 324 may be connected to all entities in the knowledge graph wit the type [Person] . In a. further example, [1789] node 328 may be connected to all events in the knowledge graph with the property of year [1789] . [1789] node 328 is unique to the year 1789, and disambigiiated from, for example, a book entitled [1789], not shown in FIG, 3, by its unique
identification reference. In some implementations, [1789] node 328 is connected to the entity type node [Year] .
[00493 FIG. 4 shows illustrative knowledge graph portion 400 i accordance with some implementations of the present disclosure. Knowledge graph portion 400 includes [California] node 402, which may also be associated wi h differentiation aliases such as, for example, [CA] , [Calif.], [Golden State], any other suitable differentiation aliases, or any combination thereof. In some implementations, these differentiations are stored in [California] node 402. California is connected, by [Is A] edge 404 to the [U.S. State] entity type node 406,
[New 'fork] node 410 and [Texas] node 414 are also connected to [U.S. State] node 406 by [Is A] edges 408 and 412,
respectively. [California] node 402 is connected by [Has Capital City] edge 420 to [Sacramento] node 422, indicating the information that "California Has Capital City Sacramento." Sacramento node 422 is further connected by [Is A] edge 424 to the [City] entity type node 426. Similarly, [Texas] node 414 is connected by [Has City] edge 430 to [Houston] node 428, which is further connected to the [City] entity type node 426 by [Is A] edge 340, [Cali ornia] node 402 is connected by
[Has Population] edge 416 to node 418 containing the literal value [37,691,912] , In an example, the particular value
[37,691,912] may be periodically automatically updated by the 'knowledge graph based on an external website or other source of data. Knowledge graph portion 400 may include other nodes not shown. For example, [U.S. State] entity type node 406 may be connected to nodes defining properties of that type such as [Population] and [Capital City] , These type—property
relationships ma be used to define other rela ionships in knowledge graph portion 400 such as [Has Population] edge 416 connecting entity node [California] 402 with terminal node 418 containing the literal defining the population of California.
[0050] It will be understood that while knowledge graph portion 300 of FIG. 3 and knowledge graph portion 400 of FIG, 4 below show portions of a knowledge graph, all pieces of information may be contained within a single graph and that these selections illustrated herein are merely an example. In some implementations, separate knowledge graphs are maintained for different respective domains, for different respective entit types, or according to any other suitable delimiting characteristic. In some implementations, separate knowledge graphs are maintained according to size constraints. In some implementations, a single knowledge graph is maintained for ail entities and entity types.
[0051] A knowledge graph may be implemented using any suitable software constructs . In an example, a knowledge graph is implemented using object oriented constructs in which each node is an object with associated functions and
variables . Edges, in this context , may be objects having associated functions and variables. In some implementations, data contained in a knowledge graph, pointed to by nodes of a knowledge graph, or both, is stored in any suitable one or more data repositories across one or more servers located in
one or more geographic locations coupled by any suitable network architecture .
[0052] FIG. 5 shows illustrative knowledge graph portion 500 with missing information in accordance with some
implementations of the present disclosure, Illustrative knowledge graph portion 500 includes missing information in [???] node 512 that the system may update.
[0053] Knowledge graph portion 500 includes [California] node 502, [California] node 502 is connected by [Is A] edge 518 to [U.S. State] node 516, In some implementations, this indicates that [U.S. State] is an entity type associated with the. entity reference [California] , Entity type [U.S. State] may be associated with a schema including properties such as [Population] , [Capital City] , [Governor] , and other propertie that are used to describe entity references of that entity type. As shown, [California] node 502 is connected by [has population] edge 506 to [37,691,912] node 504, indicating tha California has the population 37, 691, 912. [California] node 502 is connected by [Has Capital City] edge 510 to
[Sacramento] node 508. [Has Governor] edge. 514 is connected to ['??'?] node 512 , indicating that this information is not known, It will be understood that [???] is a placeholder and that the node may be missing, may be blank, may contain a nui value, may be marked in some way indicating that the
information is missing, incomplete, or of questionable quality, may contain any other suitable content, or any combination thereof,
[0054] In some implementations, the system identifies [??? node 512 as a missing data element in the knowledge graph, I some implementations, the system identifies the missing element based on a schema associated with the entity type U.S State. For example, the system may expect, to find population capital city, and governor information for the entity reference California, while only the population and capital
city information are present in the knowledge graph. The missing element may be identified by a crawling operation or other traversal of the knowledge graph, wherein expected properties of a particular entity reference are compared to the. properties found in the knowledge graph,
[0055] In some implementations, the system identifies the missing element based on one or more query records, A query record is a history of searches performed by users. For example, a query record may include aggregated Internet search history information. In some implementations, a query record may include searches that were not answered by data in the knowledge graph. In some implementations, the occurrence of queries for which answers are not present in the knowledge graph may indicate that the information is missing. In another example, the presence of a query that does have a corresponding entry in the knowledge graph may indicate that, the entry should be updated. In another example, not shov.ni,
[???] node 512 includes information that is determined to be outdated based on query records.
[0056] FIG, β shows exemplary sequence 600 for updating data using a query processing engine in accordance with some implementations of the present disclosure.
[0057] Box 602 includes entity reference [Empire State
Building] . In some implementations, the entity reference is an entity reference in a knowledge graph. For example,
[California] node 502 of FIG. 5 may be an entity reference.
[00583 Box 604 shows informatio stored in a data structure associated with the entity reference of box 604. As
illustrated, the entity reference [Empire State Building] has the type [Skyscraper] . The entity type [Skyscraper] is in the domain [Architecture] and has the properties [Height] ,
[Style], [Location], [Year Opened], and [Architect] .
Properties are associated with property values, which in some implementations are literals as described above. As
illustrated, [Empire State Building] has height property value [443m] , has style property value [Art Deco] , has location property value [New York City] , and has year opened date property value [1931] . Also as shown, the architect property value associated with [Empire State Building] is unknown.
This is indicated by the entry [??'?] in box 604 . As described above for [???] node 512, the missing information may be represented in any suitable manner.
[00593 In some implementati ns, the system generates a query to which the expected answer will complete the missing [Architect] information of box 604. Box SQS includes natural language search query [Who is the architect of the Empire State Building in New York City that opened in the year
1.931?] . It will be understood that the query need not be a natural language search query. As illustrated, the query includes the entity reference [Empire State Building] , the propert of the missing inf rmation [Architect] , and other information that is known such as [New York City] and [year 1931] . In some implementations, the additional information serves as disambiguation information in the search query. For example, it may help to distinguish between the particular Empire State Building in Manhattan, other buildings in the Empire State, a book titled "Empire State Building, " and a documentary movie titled "Empire State Building," In some implementations, the system ma translate knowledge graph information front box 604 to natural language in order to generate the search query. For example, the information from box 604 [Location: New York City] is converted to the query terms [in New York City] in box 606.
[0060] In some implementations, the name of a property, for exam le [Location] is included in the query. In some
implementations , a property value, for example [New York City], is included in a query. In some implementations , both properties and propert values are included in a query. In
some implementations , the system may determine to include a property or property value for a particular query based on information stored in a schema, based on an entity type associated with the entity reference, based on a domain associated with the entity reference, based on any other suitable information, or any combination thereof,
[ 00613 The particular pieces of information from box 604 included in the query of box 606 are selected using any
suitable technique, In some implementations, the system selects the information based on an iterative process -where pieces of information are successively added to, replaced in and/or removed from the query until subsequent steps of the process produce a suitable result. For example, if the query [Who is the architect of the Empire State Building] returns ambiguous results, the system may add [in New York City] to the query in order to use a more specific search. This process is repeated until an acceptable result is determined based on the query. In an example, the system selects properties to add or remove based on their uniqueness, that is, how often the same information appears associated with that property for other entity references. For example, [New York City] may be relatively common while [Art Deco] is less common, based on the amount a particular property appears in search records, based on any other suitable data, or any combination thereof. In some implementations, the system may include more common information, less common information, or any combination thereof.
[ 0062 ] Box 60 S includes query processing. he query in box S06 is received by box 608 and processed, for example, as described above for query processing 108 of FIG, 1, The query processing of box 608 generates an output, for example as described for output 110 of FIG, 1. The output [William F. Lamb] is shown in box 610, Thus in the illustrated exam le , the system has determined the [William F, Lamb] is the answer
to the question [Who is the architect of the Empire State Building in New York City that opened in the year 1.931?] .
[00631 Box €12 includes updated information associated with the entity reference in box. 602. In some implementations , box 612 represents the information of box 604 after it has been updated based on the output of query processing as shown in box 610. As illustrated, the [???] for Architect shown in box 604 has been replaced with the information [William F. Lamb] , indicating that the architect of the Empire State Building is William F. Lamb.
[00643 FIG, 7 shows flow diagram 700 including illustrative steps for -updating a data graph based on missing information in a knowledge graph in accordance with some implementations of the present disclosure. In some implementations, the steps of flow diagram 700 correspond in part to sequence 600 of FIG. 6.
[0065] In step 702, the system identifies an entity reference corresponding to an entity type. In some
implementations, the system identifies an entity reference as described for the entity reference of box 602 of FIG, 6, as described for node 512 of FIG, 5, by any other suitable technique, or any combination thereof. In an example, the system identifies entity references by traversing and/or crawling a graph, that is, following successively linked nodes. In another example, the system identifies entity references based on a statistical process that depends on user interactions, such as where more commonly accessed entity references are identified as the entity reference of step 702. In another example, the system identifies entity references based on a random selection process. It will be understood that the aforementioned techniques are merely exemplary and that the system may identify entity references using any suitable, technique or any combination of techniques.
ΕΟΟββ] In step 704, the system identifies a missing data element associated with the entity reference. In some
im lementations, missing data elements include incomplete data elements, outdated data elements, elements that are expected to be in the knowledge graph based on a schema associated with an entity type, any other suitable elements, or any
combination thereof. In the illustrated example of FIG, 5, node 512 is a missing data element. In the illustrated example of FIG. 6, the [???] data for [Architect] is a missing- data element. In some implemen ations, the system identifies missing data elements based on a schema for a type associated with the entity reference identified in step 702. In an example, a particular entity reference is associated with a schema that includes 5 properties, for which there is data in the knowledge graph for 4 of those 5 properties. The system may then identify the fifth property for which data is not included as a missing data element,
[ 0067 ] In step 706, the system generates a query based at. least in part on the missing data element and the type of entity reference. In some implementations , the system
generates a query as described in relation to box 606 of FIG. 6. In an example, the system generates a natural language search query based on the entity reference of step 702 and the missing data element of step 704. In some embodiments, the system generates more than one query. In some
implementations, the system inclad.es disambiguation
information in the search query. The system uses
disambiguation information to distinguish between entity references in a search with the same or similar search terms. For example, the system may use disambiguation information for the entity reference [Portland] to distinguish in a. query between the city of Portland, Oregon, the city of Portland, Maine, and the isle of Portland, England. Disambiguation information may include properties such as [Height] and
[Style] as illustrated in FIG, S , properties values such as [443m] ana [Art Deco] , both properties and the property values, any other suitable information, and any combination thereo ,
[00683 In step 708, the system provides the query to a query processing engine. In some implementations, query processing includes processing as described for box 108 of FIG, 1 and/or box 808 of FIG. 6 . In some implementations, a query processing engine receives the query generated in step 706. In some embodiments, where more than one query is generated in step 706, some or all of the queries may be provided to a query processing engine. In some
implementations, a query processing engine includes a natural language question answering service, a search engine, any other suitable query processing engine, or any combination thereof. In an example, a query processing engine receives a natural language query such as the query shown in box β08 of FIG. 6 and processes the query to determine an answer. The answer may include a single answer, multiple answers,
confidence levels associated with one or more answers, links to other information or documents, any other suitable
information, and an combination thereof. In some
implementations , query processing includes parsing of a query, searching of an index, any other suitable search techniques, and any combination thereof.
[0069] In step 710, the system receives information from the query processing engine in response to the query. In some implementations, the response corresponds to the answer or answers generated by the query processing engine in step 708. In an example, box. 610 of FIG, 6 illustrates a response received from a, query processing engine. In some
implementations , the response received represents an answer to the query generated in step 706 , where that query is a.
question. In some implementations, the system receives more
tha.n one response to the query from the query processing engine, and selects an answer from the more than one response. For example, the system may select a response that is the highest rated based on a confidence measure.
[0070] In an example, for the missing" information
associated with the property [Governor] identified in FIG, 5, the answers may include the. two previous governors, [Arnold Schwarzenegger] and [Jerry Brown] , A confidence measure based on the recency of results may be used to select the most current result, [Jerry Brown] . In some implementations, the system may determine a confidence measure based on information associated with the entity type. For example, the system may use a confidence measure that depends more heavily on recency for the property [Governor] , and use a confidence measure that depends more heavily on search result popularity for the property [Capital], because Governor is a property that changes over time and Capital does not change. It will be understood that the aforementioned confidence measures are merely exemplary and that that the system may use any suitable measure or combination of measures including weighted
comb.ina.tions .
[0071] In another example, if a response is not received with a confidence measure above a particular confidence threshold, the system need not use the information received. In some implementations, based on the received response, the system may alter, refine, narrow, broaden, or otherwise change the query provided to the query processing engine and repeat step 708, flag the entry for user intervention, perform any other suitable processing steps, or any combination thereof.
[0072] In step 712, the system updates the knowledge graph based at least in part on the received information. In some implementations., the system updates information based on the information received from the query processing engine in step 710. In some implementations, the system updates information
as illustrated for box 612 of FIG. β. In some
implementations , the system updates a missing data, element identified in step 704 based on the information from step 710, In some implementations, the system replaces outdated
information identified in step 704 based on the response from 710, In some implementations, updating the knowledge graph includes updating existing information, adding new
information, or any combination thereof, In an example, the system identifies that a population value such as node 504 of FIG. 5 should be updated. In another example, the system may identify that a missing data element such as node 512 of FIG. 5 is incomplete,
[0073] FIG. 8 shows flow diagram 800 including illustrative steps for updating a data graph based on a query record in accordance with some implementations of the present
disclosure ,
[0074] In step 802, the system identifies a data, element to be updated based at least in part a query record. In some implementations, a data element to be updated may include, incomplete data, outdated data., missing data, any other suitable data, or any combination thereof. A query record, as described above, includes one or more query logs, processed query logs, other suitable processed data related to searches and search history, any other suitable information, or any combination thereof. In some implementations, the system uses query records to identify data in a knowledge graph that is outdated, incorrect, incomplete, or otherwise not satisfactory to a user. For example, a user using a search engine may receive informat on from a knowledge graph before receiving additional search results based on an index of data on a network such as the. Internet. Query records that reflect the user searching for further information after receiving information from the knowledge graph may be indicative of the knowledge graph information being incomplete or incorrect. In
some implementations, the system uses that information to identify that the entity reference should be updated. In another example, the system uses query records that include searches for a piece of information that is not included i the knowledge graph to determine that the piece of information is missing.
[0075] In some implementations,, the system determines an interval at which to perform regular updates based on query records. In an example, the system determines based on query records that a particular records needs to be updated daily based on how frequently query records do not match information in the knowledge graph. It. will be understood that update intervals may be determined based on any suitable information, for example, user input, update intervals associated with a schema, any other suitable information, or any combination thereof. In an example, the system determines that
information regarding the population of a particular country should be updated monthly based on query records. That information may be stored in a [Country] schema, such that the system updates the population for all countries at monthly intervals .
[0O76J In step 804, the system generates a query based at least in part on the identified element. In some
implementations, the system performs step 804 for the
identified data element of step 802 as described for the missing data element of step 70S of FIG. 7,
[0077] In step 806, the system, provides the query to a query processing engine. In some implementations, the system performs step 806 as described for step 708 of FIG. 7.
[00783 In step 808, the system receives information from the query processing engine in response to the query. I some implementations, the system performs step 80S as described for step 710 of FIG . 7.
[00793 In step 810, the system updates the knowledge graph based at least in part on the received information. In some implementations,, the system performs step 810 as described for step 712 of FIG, 7.
[0080] It will be understood that the aforementioned steps of FIGS. 7 and 8 are exemplary and that in some
implementations, steps may be added, removed, omitted, repeated, reordered, modified in any other suitable way, or any combination thereof.
[0081] The following description and accompanying FIGS. 3 and 10 describe illustrative computer systems that may be used in some implementations of the present disclosure. It will be understood that elements of FIGS, 9 and 10 are merely
exemplary and. that any suitable elements may be added, removed, duplicated, replaced, or otherwise mociified.
[0082] It will be understood that the system may be implemented on any suitable computer or combination of computers. In some implementations, the system is implemented in a distributed computer system including two or more computers. In an example, the system may use a cluster of computers located in one. or more locations to perform
processing and storage associated with the system. It will be understood that distributed computing may include any suitable parallel computing, distributed computing, network hardware, network software, centralized control, decentralised control, any other suitable implementations, or any combination thereof .
[0083] FIG, 9 shows illustrative computer system 900 in accordance with some implementations of the present
disclosure. System §00 may include one or more computing device 902. In some implementations, computing device 902, and any other device of system S0Q, includes one or more, computers and/or one or more processors. In some
im lementa ions, a processor includes one or more hardware
processors, for example, integrated circuits, one or more software modules, computer-readable media such, as memory, firmware, or any combination thereof. In some
implementations, computing device 902 includes one. or more computer-readable medium storing software, include
instructions for execution by the one or more processors for performing the techniques discussed above with respect to
FIGS, 7 and S, or any other techniques disclosed herein. In some implementations, computing device 902 iriclades a
smartphone , tablet computer, desktop computer, laptop
computer, server, personal digital assistant (PDA) , portable audio player, pea:table video player, mobile gaming device, other suitable, user device capable of providing content, or any combination thereof.
[0084] Compu ing device 902 may be coupled to network 904 directly through connection 90S, through wireless repeater 910, by any other" suitable way of coupling to network 904, or by any combination thereof. Network 904 may include the Internet, a dispersed network of computers and servers, a local network, a public intranet, a private intranet , other coupled computing systems, or any combination thereof.
[0085] Computing device 902 may be coupled to network 904 by wired connection 906 . Connection 906 may include Ethernet hardware, coaxial cable hardware, DSL hardware, T-l hardware , fiber optic hardware, analog phone line hardware, any other suitable wired hardware capable of communicating, or any combination thereof. Connection 90S may include transmission techniques including TCP/IP transmission techniques, IEEE 1002 transmission techniques, Ethernet transmission techniques, DSL transmission techniques, fiber optic transmission techniques, ITU-T transmission techniques, any other suitable transmission techniques, or any combination thereof.
[00861 Computing device 902 may be wireiessly coupled to network 904 by wireless connection 908. In some
implementations , wireless repeater 910 receives transmitted information from computing device 902 by wireless connection 908 and communicates it. with network §04 by connection §12. Wireless repeater §10 receives information from network 904 by connection §12 and communicates it with computing device §02 by wireless connection §08. In some implementations, wireless connection §08 may include cellular phone transmission techniques, code division multiple access (CDMA) transmission techniques, global system for mobile communications (GSM) transmission techniques , general packet radio service (GPRS) transmission techniques, , satellite transmission techniques, infrared transmission techniques, Bluetooth transmission techniques, Wi-Fi transmission techniques, WiMax transmission techniques, any other suitable transmission techniques, or any combination thereof.
[0087] Connection 912 may include Ethernet hardware,
coaxial cable hardware , DSL hardware, -l hardware , fiber optic hardware, analog phone line hardware, wireless hardware , any other suitable hardware capable of communicating, or any combination thereof , Connection 912 may include wired transmission techniques including TCP/IP transmission
techniques, IEEE 1002 transmission techniques, Ethernet transmission techniques, DSL transmission techniques, fiber optic transmission techniques, ITU-T transmission techniques, any other suitable transmission techniques, or any combination thereof. Connection 912 may include may include wireless transmission techniques including cellular phone transmission techniques, code division multiple access (CDMA) transmission techniques, global system for mobile communications (GSM) transmission techniques, general packet radio service (GPRS) transmission techniques, satellite transmissio techniques, infrared transmission techniques, Bluetooth transmission techniques, Wi-Fi transmission techniques, WiMax transmission
techniques, any other suitable transmission techniques, or any combination thereof .
£0088] Wireless repeater 910 may include any number of cellular phone transceivers, network routers, network
switches, communication satellites, other devices for
communicating information from computing device 902 to network 904, or any combination thereof, It will be understood that the arrangement of connection 906, wireless connection 908 and connection 912 is merely illustrative and that, system 900 may include any suitable number of any suitable devices coupling computing device 902 to network §04. it will also be
understood that any computing device 902, may be
communicatively coupled with any user device, remote server, local server, any other suitable processing equipment , or any combination thereof, and ay be coupled using any suitable technique as described above.
[0089] In some implementations, any suitable number of remote servers 914, 91$, 918, 920, may be coupled to network 904, Remote servers may be general purpose, specific, or any combination thereof. One or more search engine servers 922 may be coupled to the network 904, In some implementations, search engine server 922 may include the knowledge graph, may include processing equipment configured to access the
knowledge graph, may include processing equipment configured to receive search queries related to the knowledge graph, may include any other suitable information or equipment, or any combination thereof. One or more database servers 924 may be coupled to network 904. In some implementations, database server 924 may store the knowledge graph, In some
implementations, where there is more than one knowledge graph, the more than one may be included in database server 924, may be distributed across any suitable number of database, servers and general purpose servers by any suitable technique, or any combination thereof. It will also be understood that, the
sys em may use any suitable number of general purpose, specific purpose, storage, processing, search, any other- suitable server, or any combination.
[0090] FIG. 10 is includes a block diagram of illustrative computing device 1000 in accordance with some implementations of the present disclosure. FIG , 10 includes computing device 1000. In some implementations, computing device 1000
corresponds to computing device 902 of FIG. 9, a remote computer illustrated in system §00 of FIG. S, any other suitable computer corresponding to system 900 of FIG, 9, any other suitable device, or any combination thereof. In some implementations, computing device 1000 is an illustrative local and/or remote computer that is part of a distributed computing system.. Computing device 1000 may include
input/output equipment 1002 and processing equipment 1004. Inpu /output equipment 1002 may include display 1006,
touchscreen 1008, button 1010, accelerometer 1012, global positions system (GPS) receiver 1036, camera. 1038, keyboard 1040, mouse 1042, and audio equipment 1034 including speaker 1014 and microphone 101S. In some implementations, the equipment of computing device 1000 may be representative of equipment included in a. smartphone user device. It will be understood that the specific equipment included in the illustrative computer system may depend on the type of user device. For example, the input /output equipment 1002 of a desktop computer may include a keyboard 1040 and mouse 1042 and may omit acceleroraeter 1012 and GPS receiver 1036. It illi be understood that computing device 1000 may omit any suitable illustrated elements, and may include equipment not shown such as media drives, data storage, communication devices, display devices, processing equipment, any other suitable equipment, or any combination thereof.
[00S13 In some im lementations, display 100S may include a liquid crystal display, light emitting diode display, organic
light emitting- diode display, amorphous organic light emitting diode display, plasma display, cathode ray tube display, projector display, any other suitable type of display capable of displaying content, or any combination thereof. Display 1006 may be controlled by display controller 1018 or by processor 1024 in processing equipment 1004, by processing equipment internal to display 1006 , by other controlling equipment, or by any combination thereof. In some
implementations, display 1006 may display data from a.
knowledge graph.
[0092] Touchscreen 1008 may include a sensor capable of sensing pressure input, capacitance input, resistance input, piezoelectric input, optical input, acoustic input, any other suitable input, or any combination thereof. Touchscreen 1008 may be capable of receiving touch-based gestures. Received gestures may include information relating to one or more locations on the surface of touchscreen 1008, pressure of the gesture, speed of the gesture, duration of the gesture, direction of paths traced on its surface, by the gesture, motion of the device in relation to the gesture, other- suitable information regarding a gesture, or any combination thereof. In some implementations, touchscreen 1008 may be optically transparent and located above or below display 1006. Touchscreen 1008 may be coupled to and controlled by display controller 1018, sensor controller 1020, processor 1024, any other suitable controller, or any combination thereof. In some implementations , touchscreen 1008 may include a virtual keyboard capable of receiving, for example, a search query used to identify data in a knowledge graph.
[0093] In some implementations, a gesture received by touchscreen 1008 may cause a corresponding display element to be displayed substantially concurrently {i.e., immediately following or with a short delay) by display 1006, For example, when the gesture is a movement of a finger or stylus
• 35 -
along the surface of touchscreen 1008, the search system may cause a visible line of any suitible thickness, color, or pattern indicating the path of the gesture to be displayed on display 1006. In some implementations, for example, a desktop computer using a mouse, the functions of the touchscreen may be fully or partially replaced using a mouse pointer displayed on the display screen.
[0094] Button 1010 ma be one or more electromechanical push-button mechanism, slide mechanism, switch mechanism, rocker mechanism, toggle mechanism, other suitable mechanism, or any combination thereof. Button 1010 may be included in touchscreen 1008 as a predefined region of the touchscreen (e.g. , soft keys) . Button 1010 may be included in touchscreen 1008 as a region of the touchscreen defined by the search system and indicated by display 1006. Activation of button 1010 may send a signal to sensor controller 1020, processor 1024, display controller 1020, any other suitable processing equipment , or any combination thereof . Activation of button 1010 may include receiving from the user a pushing gesture, sliding gesture, touching gesture, pressing gesture, time- based gesture (e.g., based on the duration of a push), any other suitable gesture, or any combination thereof.
[0095] Accelerometer 1012 may be capable of receiving information about the motion characteristics, acceleration characteristics , orientation characteristics ., inclination characteristics and other suitable cha.ract.eri stie . or any combination thereof, of computing device 1000. Accelerometer 1012 may be a mechanical device, microelectromechanical { MEMS5 device , nanoelectromechanical (MEMS) device, solid state device, any other suitable sensing device, or any combination thereof. In some implementat ons, accelerometer 1012 may be a 3 -axis piezoelectric microelectromechanical integrated circuit which is configured to sense acceleration, orientation, or other suitable characteristics by sensing a change in the
capacitance of an internal structure, Accelerometer 1012 may be coupled to touchscreen 1008 such that information received by accelerometer 1012 with respect to a gesture is used at least in part by processing equipment. 1004 to interpret the gesture .
[0096] Global positioning system (GPS) receiver 1036 may be capable of receiving signals from global positioning
satellites. In some implementations, GPS receiver 1036 may receive information from one or more satellites orbiting the earth, the information including time, orbit, and other in ormation related to the satellite. This information may be used to calculate the location of computing device 1000 on the surface of the earth, GPS receiver 1036 may include a barometer (not shown) to improve the accuracy of the location, GPS receiver 1036 may receive information from other wired and wireless communication sources regarding the location of computing device 1000, For example, the identity and location of nearby cellular phone towers may be used in place of, or in addition to, GPS data to determine the location of computing device 1000.
[0097] Camera 1038 may include one or more sensors to detect light. In some implementations , camera 1038 may receive video images, still images, or both. Camera 1038 may include a charged coupled device (CCD) sensor, a complementary metal oxide semiconductor (CMOS) sensor, a photocell sensor, an IR sensor, any other suitable sensor, or any combination thereof. In some implementations , camera 1038 may include a device capable of generating light to illuminate a subject, for example, an LED light. Camera 1038 may communicate information captured by the one or more sensor to sensor controller 1020, to processor 1024, to any other suitable equipment, or any combination thereof. Camera 1038 may include lenses, filters, and other suitable optical equipment.
It will be understood that computing device 1000 may include, any saitabie number of camera 1038.
[00983 Audio equipment 1034 may include sensors and processing equipment for receiving and transmitting
information using acoustic or pressure waves. Speaker 1014 may include equipment to produce acoustic waves in response to a signa.l. In ome implementations, speaker 1014 may include an electroacoustic transducer wherein an electromagnet is coupled to a. diaphragm to produce acoustic waves in response to an electrical signal. Microphone 1016 may include
electroacoustic equipment to convert acoustic signals into electrical signals. In some implementations, a condenser-type microphone may use a diaphragm as a portion of a capacitor such that acoustic waves induce a capacitance change in the device, which may be used as an input signal by computing device 1000.
[0099] Speaker 1014 and microphone 1016 may be contained within computing device 1000,. may be remote devices coupled to computing device 1000 by any suitable wired or wireless connection, or any combination thereof.
[0100] Speaker 1014 and microphone 1016 of audio equipment 1034 may be coupled to audio controller 1022 in processing equipment 1004. This controller may send and receive signals from audio equipment 1034 and perform pre-processing and filtering steps before transmitting signals related to the input signals to processor 1024. Speaker 1014 and microphone 1016 may be. coupled directly to processor 1024. Connections from audio equipment 1034 to processing equipment 1004 may be wired, wireless, other suitable arrangements for communicating information, or any combination thereof.
[0101] Processing equipment 1004 of computing device 1000 may include display controller 1018, sensor controller 1020, audio controller 1022, processor 1024, memory 1026,
communication controller 1028, and power supply 1032,
[0102] Processor 1024 may include circuitry to interpret signals input to computing device 1000 from, for example, touchscreen 1008 and microphone 1016. Processor 1024 may- include circuitry to control the output to display 1006 and speaker 1014. Processor 1024 may include circuitry to carry out instructions of a computer program. In some
implementations, processor 1024 may be an integrated
electronic circuit, based, capable of carrying out the
instructions of a computer program and include a plurality of inputs and outputs .
[0103] Processor 1024 may be coupled to memory 102S.
Memory 1026 may include random access memory { RAM) , flash memory, programmable read only memory (PROM), erasable programmable read only memory (SPROM) , magnetic hard disk drives, magnetic tape cassettes, magnetic floppy disks optical CD-ROM discs, CD-R discs, CD-RW discs, DVD discs, DVD-i-R discs, DVD-R discs, any other suitable storage medium, or any combination thereof .
[0104] The functions of display controller 1018, sensor controller 1020, and audio controller 1022, as have been described above, may be fully or partially implemented as discrete components in computing device 1000, fully or partially integrated into processor 1024, combined in part or in full into combined control units, or any combination thereof .
[0105] Communication controller 1028 may be coupled to processor 1024 of computing device 1000. In some
implementations,, communication controller 1028 may communicate radio frequency signals using antenna. 1030. In some
implementations,, communication controller 1028 may communicate signals using a wired connection, not shown. Wired and wireless communications communicated by communication
controller 1028 may use. Ethernet, amplitude modulation, frequency modulation, bitstream, code division multiple access
(CDMA) , global system for mobile communications (GSM) , general packet radio service (GPRS) ., satellite., infrared, Bluetooth, Wi-Fi, WiMax, any other suitable communication configuration, or any comb.ina.tion thereof, The functions of communication controller 1028 may be fully or partially implemented as a discrete component in computing device 1000, may be fully or partially included in processor 1024, or any combination thereof. In some implementations, communication controller 1028 may communicate with a network such as network 904 of PIG. 9 and may receive information from a knowledge graph stored, for example, in database 924 of FIG. 9.
[0106] Power supply 1032 may be coupled to processor 1024 and to other components of computing device 1000. Power supply 1032 may include a lithium-polymer battery, lithium-ion battery. NiMH battery, alkaline battery, lead-acid battery, fuel cell, solar panel, thermoelectric generator, any other suitable power source, or any combination thereof. Power supply 1032 may include a hard wired connection to an
electrical power source, and may include electrical equipment to convert the voltage, frequency, and phase of the electrical power source input to sui able power for computing device 1000. In some implementations of power supply 1032, a wall outlet may provide 920 volts, 60Hz AC. A circuit of
trans ormers, resistors, inductors, capacitors, transis ors, and other suitable electronic components included in power supply 1032 may convert the 920V AC from a. wall outlet power to 5 volts DC, In some implementations of power supply 1032, a lithium-ion battery including a lithium metal oxide-based cathode and graphite-based anode may supply 3.7V to the components of computing device 1000. Power supply 1032 may be fully or partially integrated into computing device 1000, or may function as a tand-alone device. Power supply 1032 may power computing device 1000 directly, may power computing
device 1000 by charging a battery, may provide power by any other suitable way, or any combination thereof,
[0107] The foregoing is merely illustrative of the
principles of this disclosure and various modifications may be made by those skilled in the art without departing from the scope of this disclosure. The above described implementations are presented for purposes of illustration and not of
limitation. The present disclosure also may take many forms other than those explicitly described herein. Accordingly, it is emphasized that this disclosure is not limited to the explicitly disclosed methods., systems., and apparatuses, but is intended to include variations to and modifications thereof, which are within the spirit of the following claims.
Claims
1. A computer .implemented method comprising:
identifying an entity reference in a knowledge graph, wherein the entity reference corresponds to an entity type; identifying a missing data, element, wherein the data element is associated with the entity reference ;
generating a query based at least in part, on the missing data element and the entity type;
providing the query to a. query processing engine
receiving information from the query processing engine in response to the query; and
updating the knowledge graph based at least in part on the received information.
2. The method of claim 1, wherein identifying a missing data element comprises comparing properties associated with the entity reference to a schema table associated with the entity typ ,
3. The method of claim 1, wherein generating the query comprises generating a natural language query.
4. The method of claim 1, wherein generating the query comprises selecting', from the knowledge graph, disambiguatio query terms associated with the entity reference, wherein the terms comprise property values associated with the. entity reference .
5. The method of claim 1, wherein generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise properties associated with the entity- reference .
6. The method of claim 1, wherein updating the knowledge graph comprises updating the data graph to include information in place of the missing data element.
7. A system comprising:
one or more computers configured to perform operations comprising :
identifying an entity reference in a knowledge graph, wherein the entity reference corresponds to an entity type;
identifying a missing data, element, wherein the data element is associated with the entity reference;
generating a query based at least in part on the missing data element and the entity type;
providing the query to a query processing engine; receiving information from the query processing- engine in response to the query; and
updating the knowledge graph based at least in part on the .received information.
8. The system of claim 7, wherein identifying a missing data element comprises comparing properties associated with the entity reference to a schema table associated with the entity type ,
9. The system of claim 7, wherein generating the query comprises generating a natural language query.
10. The system of claim 7, wherein generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the. terms comprise property values associated with the entity reference .
11. The system of claim 7. wherein generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise properties associated with t e entity
reference .
12. The system of claim 7, wherein updating the knowledge graph comprises updating the data graph to include information in place of the missing data element.
13. A computer-implemented me.thod comprising;
identifying a data element in a knowledge graph to be pda,ted based at least in part on a query record;
generating a query based at least in part on t e
1■¾¾SA1t J- £ i.5 c 63 -LSA3ζ"- providing the query to a query processing engine;
receiving information from the query processing engine in response to the query,- and
updating the knowledge graph based at least in part on the received, information.
14. The method of claim 13, wherein the query record comprises data associated with one or more previously performed
searches ,
15. The method of claim 13, wherein generating the query comprises generating a natural language query.
16. The method of claim 13, wherein generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise property values associated with the entity reference .
17. The method of claim 13, wherein generating the query comprises selecting, from the knovjledge graph, disambiguation query terras associated with the entity reference, wherein the terms comprise properties associated with the entity
reference .
18. The method of claim 13, wherein updating the knowledge graph comprises updating the data graph to include information in place of the missing data element.
19. A sy tem com rising :
one or more computers configured to perform operations comprising :
identifying an element in a knowledge graph to be updated based at least in part on a query record;
generating a query based at least in part on the identified, element;
providing the query to a query processing engine; receiving information from the query processing engine in response to the query; and
updating the knowledge graph based at least in part on the received information.
20. The system of claim 19, wherein the query record comprises data associated with one or more previously performed
searches .
21. The system of claim 19, wherein generating the query comprises generating a natural language query,
22. The system of claim 19, wherein generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the
terms comprise property values associated with the entity reference ,
23, The system of claim 19, wherein generating the query comprises selecting, from the knowledge graph, disambiguation query terms associated with the entity reference, wherein the terms comprise properties associated with the entity
reference .
24. The system of claim 19, wherein updating the knowledge graph comprises updating the data graph to include information in place of the missing' data element.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/842,606 US10108700B2 (en) | 2013-03-15 | 2013-03-15 | Question answering to populate knowledge base |
PCT/US2014/022598 WO2014150214A2 (en) | 2013-03-15 | 2014-03-10 | Questions answering to populate knowledge base |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2973243A2 true EP2973243A2 (en) | 2016-01-20 |
Family
ID=50686101
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP14722810.0A Withdrawn EP2973243A2 (en) | 2013-03-15 | 2014-03-10 | Questions answering to populate knowledge base |
Country Status (4)
Country | Link |
---|---|
US (1) | US10108700B2 (en) |
EP (1) | EP2973243A2 (en) |
CN (1) | CN105051761A (en) |
WO (1) | WO2014150214A2 (en) |
Families Citing this family (68)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11048765B1 (en) | 2008-06-25 | 2021-06-29 | Richard Paiz | Search engine optimizer |
US11809506B1 (en) | 2013-02-26 | 2023-11-07 | Richard Paiz | Multivariant analyzing replicating intelligent ambience evolving system |
US11741090B1 (en) | 2013-02-26 | 2023-08-29 | Richard Paiz | Site rank codex search patterns |
US10740396B2 (en) * | 2013-05-24 | 2020-08-11 | Sap Se | Representing enterprise data in a knowledge graph |
US9405855B2 (en) * | 2014-03-27 | 2016-08-02 | Sap Ag | Processing diff-queries on property graphs |
US10078651B2 (en) | 2015-04-27 | 2018-09-18 | Rovi Guides, Inc. | Systems and methods for updating a knowledge graph through user input |
US10503786B2 (en) | 2015-06-16 | 2019-12-10 | International Business Machines Corporation | Defining dynamic topic structures for topic oriented question answer systems |
US10586156B2 (en) * | 2015-06-25 | 2020-03-10 | International Business Machines Corporation | Knowledge canvassing using a knowledge graph and a question and answer system |
US11113614B2 (en) * | 2015-07-29 | 2021-09-07 | Parsons Corporation | Enterprise hypothesis orchestration |
US10049152B2 (en) | 2015-09-24 | 2018-08-14 | International Business Machines Corporation | Generating natural language dialog using a questions corpus |
US10216802B2 (en) * | 2015-09-28 | 2019-02-26 | International Business Machines Corporation | Presenting answers from concept-based representation of a topic oriented pipeline |
US10380257B2 (en) | 2015-09-28 | 2019-08-13 | International Business Machines Corporation | Generating answers from concept-based representation of a topic oriented pipeline |
US10832145B2 (en) * | 2015-10-05 | 2020-11-10 | International Business Machines Corporation | Techniques for resolving entities in received questions |
US10248689B2 (en) * | 2015-10-13 | 2019-04-02 | International Business Machines Corporation | Supplementing candidate answers |
US11810001B1 (en) * | 2016-05-12 | 2023-11-07 | Federal Home Loan Mortgage Corporation (Freddie Mac) | Systems and methods for generating and implementing knowledge graphs for knowledge representation and analysis |
US10769537B2 (en) | 2016-06-21 | 2020-09-08 | International Business Machines Corporation | Cognitive question answering pipeline blending |
US10902330B2 (en) | 2016-06-21 | 2021-01-26 | International Business Machines Corporation | Cognitive question answering pipeline calibrating |
US10423652B2 (en) * | 2016-08-08 | 2019-09-24 | Baidu Usa Llc | Knowledge graph entity reconciler |
US11157540B2 (en) * | 2016-09-12 | 2021-10-26 | International Business Machines Corporation | Search space reduction for knowledge graph querying and interactions |
US10970634B2 (en) | 2016-11-10 | 2021-04-06 | General Electric Company | Methods and systems for capturing analytic model authoring knowledge |
US10540345B2 (en) * | 2016-12-09 | 2020-01-21 | Microsoft Technology Licensing, Llc | Reducing churn in knowledge graphs |
US10311050B2 (en) | 2017-01-23 | 2019-06-04 | International Business Machines Corporation | Crowdsourced discovery of paths in a knowledge graph |
US10909441B2 (en) | 2017-06-02 | 2021-02-02 | Microsoft Technology Licensing, Llc | Modeling an action completion conversation using a knowledge graph |
US10789425B2 (en) * | 2017-06-05 | 2020-09-29 | Lenovo (Singapore) Pte. Ltd. | Generating a response to a natural language command based on a concatenated graph |
US11361229B2 (en) | 2017-07-24 | 2022-06-14 | International Business Machines Corporation | Post-processor for factoid answer conversions into structured relations in a knowledge base |
US10803014B2 (en) * | 2017-07-28 | 2020-10-13 | Adp, Llc | Dynamic data relationships in a graph database |
US11436469B2 (en) | 2017-07-31 | 2022-09-06 | Microsoft Technology Licensing, Llc | Knowledge graph for conversational semantic search |
US11645314B2 (en) | 2017-08-17 | 2023-05-09 | International Business Machines Corporation | Interactive information retrieval using knowledge graphs |
CN110019836A (en) * | 2017-08-23 | 2019-07-16 | 中兴通讯股份有限公司 | A kind of intelligent answer method and device |
CN107656996B (en) * | 2017-09-19 | 2021-05-07 | 北京百度网讯科技有限公司 | Man-machine interaction method and device based on artificial intelligence |
WO2019103778A1 (en) * | 2017-11-27 | 2019-05-31 | Siemens Aktiengesellschaft | Missing label classification and anomaly detection for sparsely populated manufacturing knowledge graphs |
CN108052547B (en) * | 2017-11-27 | 2019-09-27 | 华中科技大学 | Natural language question-answering method and system based on question sentence and knowledge graph structural analysis |
US10810897B2 (en) | 2017-12-13 | 2020-10-20 | International Business Machines Corporation | Question generation for learning session |
CN108090167B (en) * | 2017-12-14 | 2020-11-10 | 畅捷通信息技术股份有限公司 | Data retrieval method, system, computing device and storage medium |
US11341422B2 (en) | 2017-12-15 | 2022-05-24 | SHANGHAI XIAOl ROBOT TECHNOLOGY CO., LTD. | Multi-round questioning and answering methods, methods for generating a multi-round questioning and answering system, and methods for modifying the system |
CN110019718B (en) * | 2017-12-15 | 2021-04-09 | 上海智臻智能网络科技股份有限公司 | Method for modifying multi-turn question-answering system, terminal equipment and storage medium |
US11132408B2 (en) | 2018-01-08 | 2021-09-28 | International Business Machines Corporation | Knowledge-graph based question correction |
US11068512B2 (en) * | 2018-07-27 | 2021-07-20 | Accenture Global Solutions Limited | Data virtualization using leveraged semantic knowledge in a knowledge graph |
CN109065100A (en) * | 2018-08-20 | 2018-12-21 | 广州小云软件科技有限公司 | A kind of personalized questionnaire intelligence of Chinese medicine health based on block chain generates and encryption system |
WO2020039342A2 (en) * | 2018-08-20 | 2020-02-27 | Tata Consultancy Services Limited | System and method for learning knowledge graph schema via dialog |
US11500867B2 (en) * | 2018-11-07 | 2022-11-15 | International Business Machines Corporation | Identification of multiple foci for topic summaries in a question answering system |
WO2020197074A1 (en) * | 2019-03-27 | 2020-10-01 | 한국과학기술원 | Dialog agent dialog leading method and apparatus for knowledge learning |
KR102192796B1 (en) * | 2019-03-27 | 2020-12-18 | 한국과학기술원 | Conversation leading method and apparatus for knowledge learning dialog agent |
US10902203B2 (en) * | 2019-04-23 | 2021-01-26 | Oracle International Corporation | Named entity disambiguation using entity distance in a knowledge graph |
US11698918B2 (en) | 2019-05-21 | 2023-07-11 | Sisense Ltd. | System and method for content-based data visualization using a universal knowledge graph |
US11687553B2 (en) | 2019-05-21 | 2023-06-27 | Sisense Ltd. | System and method for generating analytical insights utilizing a semantic knowledge graph |
US11663498B2 (en) * | 2019-05-21 | 2023-05-30 | Sisense Ltd. | System and method for generating organizational memory using semantic knowledge graphs |
US20210012218A1 (en) * | 2019-07-10 | 2021-01-14 | International Business Machines Corporation | Expanding knowledge graphs using external data source |
US11521078B2 (en) | 2019-07-10 | 2022-12-06 | International Business Machines Corporation | Leveraging entity relations to discover answers using a knowledge graph |
CN110555153A (en) * | 2019-08-20 | 2019-12-10 | 暨南大学 | Question-answering system based on domain knowledge graph and construction method thereof |
US11269867B2 (en) * | 2019-08-30 | 2022-03-08 | Microsoft Technology Licensing, Llc | Generating data retrieval queries using a knowledge graph |
US11188580B2 (en) * | 2019-09-30 | 2021-11-30 | Intuit, Inc. | Mapping natural language utterances to nodes in a knowledge graph |
US11709878B2 (en) | 2019-10-14 | 2023-07-25 | Microsoft Technology Licensing, Llc | Enterprise knowledge graph |
US11194840B2 (en) | 2019-10-14 | 2021-12-07 | Microsoft Technology Licensing, Llc | Incremental clustering for enterprise knowledge graph |
CN110795573B (en) * | 2019-10-31 | 2021-09-28 | 北京邮电大学 | Method and device for predicting geographic position of webpage content |
US11216492B2 (en) | 2019-10-31 | 2022-01-04 | Microsoft Technology Licensing, Llc | Document annotation based on enterprise knowledge graph |
CN112860714A (en) * | 2019-11-12 | 2021-05-28 | 斑马智行网络(香港)有限公司 | Knowledge base, database, information updating method and device |
CN111353049A (en) * | 2020-02-24 | 2020-06-30 | 京东方科技集团股份有限公司 | Data updating method and device, electronic equipment and computer readable storage medium |
US11501211B2 (en) * | 2020-03-13 | 2022-11-15 | Hong Kong Applied Science And Technology Research Institute Co., Ltd | Chatbot system with model lifecycle management |
CN111143540B (en) * | 2020-04-03 | 2020-07-21 | 腾讯科技（深圳）有限公司 | Intelligent question and answer method, device, equipment and storage medium |
CN111241252B (en) * | 2020-04-17 | 2020-08-14 | 成都数联铭品科技有限公司 | Question answering method and device, electronic equipment and storage medium |
US11308104B2 (en) | 2020-06-25 | 2022-04-19 | Microsoft Technology Licensing, Llc | Knowledge graph-based lineage tracking |
US11615150B2 (en) * | 2020-10-09 | 2023-03-28 | Cherre, Inc. | Neighborhood-based entity disambiguation system and method |
CN112612866B (en) * | 2020-12-29 | 2023-07-21 | 北京奇艺世纪科技有限公司 | Knowledge base text synchronization method and device, electronic equipment and storage medium |
CN112860865A (en) * | 2021-02-10 | 2021-05-28 | 达而观信息科技（上海）有限公司 | Method, device, equipment and storage medium for realizing intelligent question answering |
US11803359B2 (en) * | 2021-03-23 | 2023-10-31 | Sap Se | Defining high-level programming languages based on knowledge graphs |
US20220398271A1 (en) * | 2021-06-15 | 2022-12-15 | Microsoft Technology Licensing, Llc | Computing system for extracting facts for a knowledge graph |
US11869484B2 (en) | 2021-08-27 | 2024-01-09 | Hong Kong Applied Science and Technology Research Institute Company Limited | Apparatus and method for automatic generation and update of knowledge graph from multi-modal sources |
Family Cites Families (51)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6339767B1 (en) | 1997-06-02 | 2002-01-15 | Aurigin Systems, Inc. | Using hyperbolic trees to visualize data generated by patent-centric and group-oriented data processing |
US5819264A (en) | 1995-04-03 | 1998-10-06 | Dtl Data Technologies Ltd. | Associative search method with navigation for heterogeneous databases including an integration mechanism configured to combine schema-free data models such as a hyperbase |
US5666502A (en) | 1995-08-07 | 1997-09-09 | Apple Computer, Inc. | Graphical user interface using historical lists with field classes |
US5946647A (en) | 1996-02-01 | 1999-08-31 | Apple Computer, Inc. | System and method for performing an action on a structure in computer-generated data |
US6513036B2 (en) | 1999-08-13 | 2003-01-28 | Mindpass A/S | Method and apparatus for searching and presenting search result from one or more information sources based on context representations selected from the group of other users |
US8051104B2 (en) | 1999-09-22 | 2011-11-01 | Google Inc. | Editing a network of interconnected concepts |
AU1051101A (en) | 1999-10-27 | 2001-05-08 | Zapper Technologies Inc. | Context-driven information retrieval |
US6847959B1 (en) | 2000-01-05 | 2005-01-25 | Apple Computer, Inc. | Universal interface for retrieval of information in a computer system |
US7062483B2 (en) | 2000-05-18 | 2006-06-13 | Endeca Technologies, Inc. | Hierarchical data-driven search and navigation system and method for information retrieval |
US6832218B1 (en) | 2000-09-22 | 2004-12-14 | International Business Machines Corporation | System and method for associating search results |
US20090132316A1 (en) * | 2000-10-23 | 2009-05-21 | Costar Group, Inc. | System and method for associating aerial images, map features, and information |
DE10059103B4 (en) | 2000-11-28 | 2005-04-21 | Siemens Ag | Unit for managing data stored in a data processing device |
US6957230B2 (en) | 2000-11-30 | 2005-10-18 | Microsoft Corporation | Dynamically generating multiple hierarchies of inter-object relationships based on object attribute values |
WO2002084590A1 (en) | 2001-04-11 | 2002-10-24 | Applied Minds, Inc. | Knowledge web |
US20130110833A1 (en) | 2001-10-16 | 2013-05-02 | Concur Technologies, Inc. | Method and system for identifying candidate users |
US8712811B2 (en) | 2001-10-16 | 2014-04-29 | Concur Technologies, Inc. | Method and systems for detecting duplicate travel path |
CA2463889A1 (en) | 2001-10-16 | 2003-04-24 | Outtask, Inc. | System and method for managing booking and expensing of travel products and services |
US7720702B2 (en) | 2003-02-26 | 2010-05-18 | Concur Technologies, Inc. | System and method for integrated travel and expense management |
US10115128B2 (en) | 2010-10-21 | 2018-10-30 | Concur Technologies, Inc. | Method and system for targeting messages to travelers |
US9400959B2 (en) | 2011-08-31 | 2016-07-26 | Concur Technologies, Inc. | Method and system for detecting duplicate travel path information |
WO2003060771A1 (en) | 2002-01-14 | 2003-07-24 | Jerzy Lewak | Identifier vocabulary data access method and system |
US6907417B2 (en) | 2002-03-28 | 2005-06-14 | International Business Machines Corporation | System and method for converting node-and-link knowledge representations to outline format |
US8069175B2 (en) | 2002-04-10 | 2011-11-29 | Google Inc. | Delegating authority to evaluate content |
US6946715B2 (en) | 2003-02-19 | 2005-09-20 | Micron Technology, Inc. | CMOS image sensor and method of fabrication |
US6944612B2 (en) | 2002-11-13 | 2005-09-13 | Xerox Corporation | Structured contextual clustering method and system in a federated search engine |
WO2004055647A2 (en) | 2002-12-13 | 2004-07-01 | Applied Minds, Inc. | Meta-web |
US7346839B2 (en) | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US7240049B2 (en) | 2003-11-12 | 2007-07-03 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US7707039B2 (en) | 2004-02-15 | 2010-04-27 | Exbiblio B.V. | Automatic modification of web pages |
US7565139B2 (en) | 2004-02-20 | 2009-07-21 | Google Inc. | Image-based search engine for mobile phones with camera |
US7895196B2 (en) | 2004-04-30 | 2011-02-22 | International Business Machines Corporation | Computer system for identifying storylines that emerge from highly ranked web search results |
WO2006011819A1 (en) | 2004-07-30 | 2006-02-02 | Eurekster, Inc. | Adaptive search engine |
US8412698B1 (en) | 2005-04-07 | 2013-04-02 | Yahoo! Inc. | Customizable filters for personalized search |
US7933900B2 (en) | 2005-10-23 | 2011-04-26 | Google Inc. | Search over structured data |
US7748634B1 (en) | 2006-03-29 | 2010-07-06 | Amazon Technologies, Inc. | Handheld electronic book reader device having dual displays |
WO2007146298A2 (en) | 2006-06-12 | 2007-12-21 | Metacarta, Inc. | Systems and methods for hierarchical organization and presentation of geographic search results |
US7761414B2 (en) | 2007-01-07 | 2010-07-20 | Apple Inc. | Asynchronous data synchronization amongst devices |
US7912847B2 (en) | 2007-02-20 | 2011-03-22 | Wright State University | Comparative web search system and method |
US8204856B2 (en) | 2007-03-15 | 2012-06-19 | Google Inc. | Database replication |
US7818324B1 (en) | 2007-11-14 | 2010-10-19 | Google Inc. | Searching indexed and non-indexed resources for content |
US8587402B2 (en) | 2008-03-07 | 2013-11-19 | Palm, Inc. | Context aware data processing in mobile computing device |
US8862579B2 (en) | 2009-04-15 | 2014-10-14 | Vcvc Iii Llc | Search and search optimization using a pattern of a location identifier |
AU2010256777A1 (en) | 2009-06-01 | 2011-12-22 | Google Inc. | Searching methods and devices |
US8583673B2 (en) * | 2009-08-17 | 2013-11-12 | Microsoft Corporation | Progressive filtering of search results |
US20110184981A1 (en) | 2010-01-27 | 2011-07-28 | Yahoo! Inc. | Personalize Search Results for Search Queries with General Implicit Local Intent |
US8463731B2 (en) | 2010-02-17 | 2013-06-11 | Google Inc. | Translating user interaction with a touch screen into text |
US8341185B2 (en) | 2010-04-02 | 2012-12-25 | Nokia Corporation | Method and apparatus for context-indexed network resources |
US9824138B2 (en) | 2011-03-25 | 2017-11-21 | Orbis Technologies, Inc. | Systems and methods for three-term semantic search |
US8832067B2 (en) * | 2012-05-22 | 2014-09-09 | Eye Street Research Llc | Indirect data searching on the internet |
US8429103B1 (en) | 2012-06-22 | 2013-04-23 | Google Inc. | Native machine learning service for user adaptation on a mobile platform |
US9390174B2 (en) * | 2012-08-08 | 2016-07-12 | Google Inc. | Search result ranking and presentation |
-
2013
- 2013-03-15 US US13/842,606 patent/US10108700B2/en active Active
-
2014
- 2014-03-10 CN CN201480014612.4A patent/CN105051761A/en active Pending
- 2014-03-10 WO PCT/US2014/022598 patent/WO2014150214A2/en active Application Filing
- 2014-03-10 EP EP14722810.0A patent/EP2973243A2/en not_active Withdrawn
Non-Patent Citations (1)
Title |
---|
See references of WO2014150214A3 * |
Also Published As
Publication number | Publication date |
---|---|
US20140280307A1 (en) | 2014-09-18 |
US10108700B2 (en) | 2018-10-23 |
WO2014150214A3 (en) | 2015-01-15 |
WO2014150214A2 (en) | 2014-09-25 |
CN105051761A (en) | 2015-11-11 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10108700B2 (en) | Question answering to populate knowledge base | |
US11176212B2 (en) | Question answering using entity references in unstructured data | |
US11868357B2 (en) | Search result ranking and presentation | |
US11762933B2 (en) | Providing search results based on a compositional query | |
US10235423B2 (en) | Ranking search results based on entity metrics | |
US20160063106A1 (en) | Related Entity Search | |
CN105900081B (en) | Search based on natural language processing | |
US9875320B1 (en) | Providing search results based on sorted properties | |
US10055462B2 (en) | Providing search results using augmented search queries | |
US20150269231A1 (en) | Clustered search results | |
US20160117349A1 (en) | Collective reconciliation |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20150727 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION IS DEEMED TO BE WITHDRAWN |
|
18D | Application deemed to be withdrawn |
Effective date: 20160503 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
US6345307B1 - Method and apparatus for compressing hypertext transfer protocol (HTTP) messages - Google Patents
Method and apparatus for compressing hypertext transfer protocol (HTTP) messages Download PDFInfo
- Publication number
- US6345307B1 US6345307B1 US09/439,026 US43902699A US6345307B1 US 6345307 B1 US6345307 B1 US 6345307B1 US 43902699 A US43902699 A US 43902699A US 6345307 B1 US6345307 B1 US 6345307B1
- Authority
- US
- United States
- Prior art keywords
- message
- codewords
- data
- protocol
- data elements
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M7/00—Conversion of a code where information is represented by a given sequence or number of digits to a code where the same, similar or subset of information is represented by a different sequence or number of digits
- H03M7/30—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/04—Protocols for data compression, e.g. ROHC
Definitions
- the present invention relates to a method and apparatus for compressing Internet protocol messages, such as Hypertext Transfer Protocol (HTTP) messages.
- HTTP Hypertext Transfer Protocol
- HTTP is a communication protocol used to make Hypertext Markup Language (HTML) and other applications available to users on the Web.
- HTML file is stored in a directory that is accessible to a server.
- a server is typically a Web server which conforms to a Web browser-supported protocol such as Hypertext Transfer Protocol (HTTP).
- HTTP Hypertext Transfer Protocol
- HTML content may be stored at the headend of a subscriber communication network, such as a cable/satellite television network.
- a subscriber communication network such as a cable/satellite television network.
- HTML content may be selected and provided directly by the headend, or the headend may merely act as a conduit in a high speed link between the subscriber and remote Web servers.
- a proxy server is a type of gateway that allows a browser using HTTP to communicate with a server that does not understand HTTP, but which uses, e.g., FTP, Gopher or other protocols.
- the proxy server accepts HTTP requests from the browser and translates them into a format that is suitable for the origin server, such as an FTP request. Similarly, the proxy server translates FTP replies from the server into HTTP replies so that the browser can understand them.
- FTP is a high level protocol for transferring files (as is HTTP).
- the translation occurs at the protocol level. For example, a client browser may send the HTTP request “GET ftp://www.myserver.com/somefile.txt HTTP/1.1”. This would be translated at a proxy into an FTP “GET” request to be forwarded to the FTP origin server.
- the FTP response from the origin server back to the proxy is then translated at the proxy into an HTTP response that includes the attached file (e.g., as an object).
- the file being transferred is not translated or modified. However, in some cases, the browser may indicate that it can decode certain encoding or compression formats.
- the proxy may translate (encode or compress) the attached file before the file is transmitted to the client.
- the proxy server can be a program running on the same machine as the browser, or a free-standing machine somewhere in a network that serves many browsers.
- the headend of a subscriber communication network may provide a proxy server function.
- HTTP defines a set of rules that servers and browsers follow when communicating with each other.
- the process begins when a user clicks on an icon in an HTML page that is the anchor of a hyperlink, or the user types in a Uniform Resource Locator (URL).
- the URL contains a host name that is typically resolved into an IP address via a domain name system (DNS) lookup.
- DNS domain name system
- a connection is then made to the host server using the IP address (and possibly a port number) returned by the DNS lookup.
- the browser sends a request to retrieve an object from the server, or to post data to an object on the server.
- the server sends a response to the browser including a status code and the response data.
- the connection between the browser and server is then closed.
- HTTP is implemented in a client program and a server program, which execute on different end systems and communicate with each other by exchanging HTTP messages.
- HTTP defines the structure of these messages and how the client and server exchange the messages.
- the HTTP messages data may be transmitted via a Public Switched Telephone Network (PSTN), via a cable or satellite television network, via a local wireless network, or via a combination of the above, for example.
- PSTN Public Switched Telephone Network
- cable or satellite television network via a local wireless network, or via a combination of the above, for example.
- HTTP messages typically include strings of ASCII characters. However, with eight bits (one byte) of data required for each character (including a letter, number, punctuation symbol, blank space, and carriage return), the amount of data in an HTTP message can be significant.
- the system should reduce the amount of bandwidth required to communicate HTTP data to a browser, server or other processor.
- the system should be suitable for use with existing networks over which Web data (e.g., HTML) is communicated.
- Web data e.g., HTML
- the system should allow a browser that is implemented in a terminal (e.g., set-top box/decoder), in a subscriber television network, to directly process the compressed HTTP data without decompressing it.
- a terminal e.g., set-top box/decoder
- the system should reduce the required processing power of a browser in a user terminal in a subscriber television network.
- the system should provide a consistent and deterministic processing time for all compressed HTTP elements within a given message.
- the system should be usable on a client/browser side or server side of a network.
- the system should be usable on a proxy server that interfaces between a client/browser and a server, or other proxy servers.
- the system should be compatible with networks that communicate Web data using a digital video communication protocol, such as MPEG-2.
- the system should be compatible with networks that communicate Web data using the Transmission Control Protocol/Internet Protocol (TCP/IP).
- TCP/IP Transmission Control Protocol/Internet Protocol
- the system should provide compression for current versions of HTTP, as well as derivations thereof and other analogous protocols, such as Gopher, FTP or Telnet.
- the system should be compatible with other bit level compression techniques.
- the present invention provides a system having the above and other advantages.
- the present invention relates to a method and apparatus for compressing Internet, or any digital protocol messages, such as HTTP messages.
- Codewords are provided for HTTP data elements (e.g., character strings) to reduce the amount of data, such as in an HTTP request or response message.
- the codewords may have reserved bits to distinguish specific data elements or to provide other information about the message to aid in processing.
- the technique is compatible with other compression techniques to provide even greater compression.
- the invention provides a significant reduction in the amount of data that must be communicated, e.g., during a Web browsing session at a subscriber terminal. Additionally, the invention allows the use of a network processor or browser, e.g., in a subscriber terminal, to process the compressed HTTP codewords directly without decompressing them. This can provide significant savings in processing time and complexity.
- each codeword can have the same length and therefore generally takes the same amount of time to process, so the processing time becomes more deterministic.
- variable length codewords can be provided, such as with an entropy coding scheme.
- a particular encoding method for processing an Internet protocol message includes the step of providing a plurality of codewords for coding a corresponding plurality of recognizable data elements of the protocol.
- Each of the recognizable data elements comprises a string having a plurality of characters (e.g., letters, numbers, and/or other symbols).
- the digital protocol message is parsed to locate data elements thereof corresponding to the recognizable data elements.
- a corresponding one of the codewords is output for each of the recognizable data elements located in the digital protocol message to provide the message in a compressed format.
- a corresponding decoding method includes the step of providing a plurality of data elements of the protocol for decoding a corresponding plurality of the codewords.
- the compressed message is parsed to locate the codewords thereof.
- the respective data elements are provided for each corresponding codeword located to provide the digital protocol message in an uncompressed format.
- the uncompressed data can then be processed by a conventional HTTP message handler.
- the compressed HTTP messages can be decoded directly, without decompression.
- a method includes the step of parsing the compressed message to locate the codewords thereof.
- the located codewords are provided to a compressed protocol data message handler for processing thereat in accordance with the protocol without recovering the corresponding data elements.
- a message handler can be designed using known hardware and/or software techniques to directly recognize and process the compressed HTTP data (e.g., codewords).
- an optimal solution provides the capability to cache (e.g., temporarily store) the compressed data in a proxy server for content that is accessed frequently by subscriber terminals.
- FIG. 1 illustrates a subscriber television network that uses HTTP compression in accordance with the present invention.
- FIG. 2 illustrates HTTP compression in accordance with the present invention.
- FIG. 3 illustrates HTTP decompression in accordance with the present invention.
- FIG. 4 illustrates processing of compressed HTTP data without decompression in accordance with the present invention.
- the present invention relates to a method and apparatus for compressing Internet, or any digital protocol messages, such as HTTP messages.
- a Web page or document consists of objects or files, such as a HTML file, a JPEG image, a GIF image, a Java applet, an audio clip, etc.—that are each addressable by a single URL.
- a Web server houses Web objects which are addressable by a URL. Web servers also implement the server side of HTTP.
- HTTP defines how Web clients (e.g., browsers) request Web pages from servers (e.g., Web servers) and how servers transfer Web pages to clients. Specifically, when a user requests a Web page (e.g., clicks on a hyperlink), the browser sends HTTP request messages for the objects in the page to the server. The server receives the requests and responds with HTTP response messages, which include the objects. Most browsers and Web servers implement version HTTP/1.0 (defined in RFC 1945) or the more recent version HTTP/1.1 (RFC 2068).
- Both HTTP versions run on top of the Transmission Control Protocol (TCP) layer.
- TCP Transmission Control Protocol
- the HTTP client first initiates a TCP connection with the server. Once the connection is established, the browser and the server access TCP through their socket interfaces. On the client side, the socket interface is the “door” between the client process and the TCP connection; on the server side, it is the “door” between the server process and the TCP connection.
- the client sends HTTP request messages into its socket interface and receives HTTP response messages from its socket interface.
- the HTTP server receives request messages from its socket interface and sends response messages into the socket interface.
- HTTP messages are not typically displayed to the end user, unlike HTML data.
- the HTTP specifications RFC 1945 and RFC 2068 define the HTTP message formats. There are two types of HTTP messages, namely request messages and response messages.
- a typical HTTP request message is as follows:
- a name/value pair designates information such as HTTP/1.1 or Mozilla/4.0.
- Each line or portion of a message line is considered to be a data element or string of characters.
- GET and “HTTP/1.1” can be considered to be data elements or strings of characters.
- a character is any number, letter or symbol, such as an ASCII or Unicode character.
- the request message has five lines, a request message can have many more lines, or as little as one line.
- the first line is the request line, while the subsequent lines are header lines.
- the request line has three fields, namely a method field, a URL field, and an HTTP version field.
- the method field can have different values, e.g., GET, POST, and HEAD.
- the GET method is most common, and is used when the browser requests an object, with the object identified in the URL field. In this example, the browser is requesting the object “/somedir/page.html”.
- the browser doesn't have to specify the host name in the URL field since the TCP connection is already connected to the server.
- the HTTP version in this example is HTTP/1.
- the “User-agent:” header line informs the server of the user agent, i.e., the browser type that is making the request.
- the user agent is “Mozilla/4.0”, a Netscape(tm) browser.
- the “Accept:” header line tells the server the type of objects the browser is prepared to accept.
- the client is prepared to accept HTML text, GIF images or JPEG images.
- the “Accept-language:” header indicates that the user prefers to receive an English (“en”) version of the object.
- an HTTP request message may include an “Entity Body” when the POST method is used.
- the HTTP client uses the POST method when the user fills out a form—for example, when a user gives search words to a search engine.
- the HEAD method is similar to the POST method. When a server receives a request with the HEAD method, it responds with an HTTP message but it leaves out the requested object.
- the HEAD method is often used by HTTP server developers for debugging.
- the above request message includes 122 characters, including spaces, and a carriage return and line feed after each line, and therefore requires 122 bytes to be coded as ASCII characters.
- Table 1 An example scheme for assigning codewords to the different data elements of the request message is shown in Table 1.
- the codewords are given in hexadecimal (base 16 ), unless indicated otherwise.
- the binary (base 2 ) equivalent is given where specific bit positions within the codeword have specific meanings.
- the equivalent decimal value (base 10 ) is given when meaningful.
- Table provides an example only, and many variations are possible.
- a typical HTTP response message is as follows:
- the response message has three parts, namely an initial status line, six header lines, and the entity body, which contains the requested object itself.
- the status line has three fields, namely a protocol version field (“HTTP/1.1“), a status code (“200”), and a corresponding status message (“OK”—e.g., the server has found and is sending the requested object).
- the server uses the “Connection: close” header line to tell the client that it is going to close the connection after sending the message.
- the “Date:” header line indicates the time and date when the HTTP response was created and sent by the server.
- the “Server:” header line indicates that the message was generated by an Apache Web server.
- the “Last-Modified:” header line indicates the time and date when the object was created or last modified.
- the “Content-Length:” header line indicates the number of bytes in the object being sent.
- the “Content-Type:” header line indicates that the object in the entity body is HTML text.
- the HTTP specification defines many other header lines that can be inserted by browsers, Web servers and network cache servers.
- Table 2 An example scheme for assigning codewords to the different data elements of the response message is shown in Table 2, whose format is analogous to that of Table 1.
- Table 2 provides an example only, and many variations are possible.
- 1A 16 00010010 2
- first 5 bits indicates a reason length (i.e., 2)
- the first 3 bits indicate the text day (i.e., “Th
- the first 4 bits indicate the hour with valid values 0001111 2 ranging between 0 and 11 and zero representing 12 if P.M.
- FIG. 1 illustrates a subscriber television network that uses HTTP compression in accordance with the present invention.
- the invention may be implemented in a variety of networks, it is particularly suitable for use in subscriber television networks that allow users (subscribers) to access HTML data, such as on the Internet.
- the user can access HTML content, such as Web pages, that is delivered via a downstream channel on the network.
- HTML content such as Web pages
- a variety of techniques can be used to deliver HTML data via cable and satellite television networks.
- the user is typically provided with an upstream link via a conventional telephone network to enter commands, such as a URL address to request to view a particular Web page.
- Some cable television networks have an upstream user data channel that can be used for this purpose.
- the HTTP request message is received at a headend or other central location, and forwarded to a proxy server or the content server that is designated by the URL.
- the content returned by the proxy or content server to the headend is then prepared for transport to the user with an HTTP response message.
- the HTTP message and accompanying HTML data may be encapsulated in digital MPEG-2 packets that are in-band or out-of-band with programming service data (e.g., television programs, audio, etc.).
- the HTTP message and accompanying HTML data may be carried in the vertical blanking interval (VBI) of a digital or analog television signal.
- VBI vertical blanking interval
- the invention is compatible with essentially any communication technique for providing HTTP messages in upstream and/or downstream paths.
- the HTTP messages and the content are subsequently recovered at the user's terminal and the content is rendered by a browser application or graphics processing engine for viewing on a video monitor, such as a television or computer monitor.
- the headend may act as a proxy server when interacting with other proxy servers or the content server, e.g., when the URL request from the user is in a format that is not compatible with the content server.
- the headend proxy server converts the HTTP request into the necessary format, and converts the message and content returned by the content server into a format that the user's terminal can understand.
- FIG. 1 shows an example embodiment wherein a network 100 includes a content server 110 , a headend 130 , and a user terminal 150 .
- the content server 110 is representative of any number of available origin or proxy servers that store HTML data in a computer network such as the Internet.
- the user terminal 150 is representative of a population of terminals that can receive broadcast signals from a common service provider, such as the headend 130 in a cable/optical fiber or satellite television network.
- An optional upstream channel 160 such as a conventional telephone link and modems, allows the terminal 150 to communicate directly with content servers.
- a channel 162 is used by the headend 130 , e.g., to broadcast programming services from function 136 (such as television programs, weather and stock data, shop at home data and the like) to a subscriber terminal population, including the example terminal 150 .
- HTTP messages and HTML content are also communicated to the terminal 150 via the one-way or bi-directional channel 162 .
- HTTP messages are communicated from the terminal 150 to the Headend 130 via a bi-directional implementation of channel 162 .
- the channel 162 may physically be implemented as coaxial cable, a satellite link, optical fiber, local wireless channel (such as multi-point microwave distribution—MMDS), or a telephone link for example, or a combination thereof.
- MMDS multi-point microwave distribution
- a channel 164 allows the headend 130 and the example content server 110 to communicate with each other.
- This channel typically is implemented as a telephone link or Ethernet network.
- the server 110 is generally remote from the headend 130 , although it is possible for the headend to store HTML content on a local storage media, such as digital video disc or magnetic tape, or on a hard drive of a file server.
- Known networking architectures are used to provide the channel 164 .
- the headend 130 may act also as a proxy server and cache the content locally.
- the content may also be selected to correspond to the programming services.
- a graphic may be overlaid with a television program to inform the user that related HTML content is available. For example, during a televised baseball game, the user can be directed to a Web site for baseball scores.
- the entire local content may be continually or periodically broadcast, e.g., on the same channel (or multiplex) as the programming service, or on a separate channel (or multiplex). This may occur on one-way only networks where the user has no upstream link to the headend. In this case, the selection of the desired HTML content with the accompanying HTTP messages then occurs at the user terminal 150 .
- conditional access techniques may be used to provide access to the HTML content on a fee basis.
- the present invention is suitable with any of the above scenarios.
- the user has some upstream channel (either 160 or 162 ) to cause selected HTML content to be recovered from the content server 110 and provided to the terminal 150 via the headend 130 or directly via channel 160 .
- the content would typically be sent directly back to the terminal via channel 160 .
- the content server 110 , headend 130 , and terminal 150 are shown with HTTP compression functions 112 , 132 and 152 , respectively, and HTTP decompression functions 114 , 134 and 154 , respectively. Not all of these functions are required, however.
- the compression function 152 is used to compress HTTP data (such as a request message) transmitted from the terminal 150 to the headend 130 or the content server 110 .
- the decompression function 154 is used to decompress compressed HTTP data (such as a response message) received from the headend 130 or content server 110 .
- the compression function 132 is used to compress HTTP data transmitted from the headend 130 to the content server 110 or the terminal 150 .
- the decompression function 134 is used to decompress compressed HTTP data received from the content server 110 or the terminal 150 .
- the compression function 112 is used to compress HTTP data transmitted from the content server 110 to the headend 130 or the terminal 160 .
- the decompression function 114 is used to decompress compressed HTTP data received from the headend 130 or the terminal 150 .
- the terminal 150 When the terminal 150 is requesting data from the content server 110 via the headend 130 , the terminal 150 may be considered to be a client, while the headend 130 is a proxy server, and the content server 110 is an origin server.
- a browser 159 may be a full-featured browser application such as used on a personal computer, or a minimal browser that has only some basic functionality, such as text rendering or limited graphics rendering capabilities.
- the browser 159 is used in conjunction with the graphics engine 156 for rendering text and images for the display 170 from the HTML content received at the terminal 150 .
- a video decoder 157 may be used for rendering video, associated with compressed (or uncompressed) scripting language content, for the display 170 .
- the display 170 may be a television screen or a video monitor for a PC, for example.
- the processing power of the terminal 150 including, but not limited to, the central processor type, graphics engine type, and video decoder type, within said terminal will dictate the level of features that can be supported by the browser 159 .
- the compression functions 112 , 132 and 152 can implement a compression scheme as shown in FIG. 2, while the decompression functions 114 , 134 and 154 can implement a decompression scheme as shown in FIG. 3 .
- the mentioned compression and decompression functions can optionally provide compression and decompression, respectively of HTML data, as disclosed in commonly-assigned U.S. patent application Ser. No. 09/393,835, filed Sep. 10, 1999, still pending and entitled “Method and Apparatus for Compressing Scripting Language Content”.
- FIG. 2 illustrates HTTP compression in accordance with the present invention.
- the compression function 200 corresponds to the compression functions 112 , 132 , 152 of FIG. 1.
- a buffer/parser 210 receives uncompressed HTTP messages and, optionally, other data.
- an HTTP request message such as a GET method
- a POST method message does have additional data
- an HTTP response message does have additional data in the entity body, such as an object that was requested by the user.
- This additional data may comprise text and graphics data, for example, such as from a Web page.
- the other data if present, is parsed and provided to a conventional data coding function 215 to provide coded data, e.g., such as coded text in the form of the original ASCII text data prefixed with a set of fields.
- coded data e.g., such as coded text in the form of the original ASCII text data prefixed with a set of fields.
- the said set of fields may contain an identifier and length fields indicating to the combiner 230 that the following amount of original ASCII text data, does not contain compressed data elements.
- the HTTP data elements which can comprise a line of the HTTP message, or a field (such as a method field, URL field, or version field) or other code or message (such as a status code or status message) within a line, and so forth, are parsed and provided to a compression function 220 , which optionally has a look-up table 225 that can be implemented using known techniques.
- the look-up table 225 associates a codeword with each HTTP data element. For example, refer to Tables 1 and 2, discussed previously.
- the length of the codeword should be selected based on the number of different elements that are to be coded. An eight- or sixteen-bit codeword (two bytes) is believed to be appropriate to handle the existing messages while also allowing for future growth.
- the first three bits of the codeword can designate the method field (e.g., 000 for GET, 001 for POST, 010 for HEAD, etc.).
- the next two bits can designate the version field (e.g., 00 for HTTP/1.0, and 01 for HTTP/1.1).
- codeword length there are a limited number of different codewords to represent different data elements.
- the codeword length and the number of reserved bits in each codeword should be selected accordingly.
- Specific bits may designate that a codeword is the first or last codeword of an HTTP message, or that the message is a request or response message.
- bits may designate the length of subsequent elements or sub-elements that follow in a given message.
- the URL can vary among numerous possible strings, so the codeword would have to be very large to designate each URL. In this case, the URL therefore would simply be transmitted using ASCII codewords for each character.
- the assigning of codewords in accordance with the present invention may be appropriate.
- Codewords, or an index number, specified by a proxy server may also be used when it is desired to code one, or small number of URLs, such as a “home” URL, and a number of popular URLs, from among a very large number of possible URLs.
- a codeword is output from the compression function 220 and provided to a combiner 230 to be combined with the other coded data, if any, in the appropriate sequence to provide compressed HTTP data in accordance with the present invention.
- This data comprises the HTTP codewords from the compression function 220 .
- known compression techniques such as the Lempel-Ziv algorithm and Huffman coding, can be used with the compressed HTTP data output from the combiner 230 , or for the coded data alone or the HTTP codewords alone.
- associated video/audio data may be compressed using known techniques.
- FIG. 3 illustrates HTTP decompression in accordance with the present invention.
- the decompression function 300 corresponds to the decompression functions 114 , 134 , 154 of FIG. 1 .
- the compressed HTTP and other coded data are received at a buffer/parser 310 .
- the coded data is provided to a decoding function 315 to recover the other data (e.g., text or graphics), which is then provided to a combiner 330 .
- the HTTP codewords are provided to a decompression function 320 .
- a look-up table 325 at the decompression function 320 associates an HTTP data element with each received codeword.
- the look-up table 325 may be the inverse of the look-up table 225 .
- the corresponding elements are output to the combiner 330 to form the uncompressed HTTP data and other data.
- the output of the combiner 330 is routed for appropriate processing, e.g., to the browser 159 in the terminal 150 , or to the appropriate processor at the headend 130 or content server 110 .
- FIG. 4 illustrates processing of compressed HTTP data without decompression in accordance with the present invention.
- a decoder 400 includes a compressed HTTP message handler 410 with an HTTP codeword handler 430 for directly processing the codewords.
- a function 420 is also provided for processing other data, which may include entity data, HTTP strings for which no codeword is provided, and so forth.
- the present invention provides a method and apparatus for compressing HTTP messages.
- Codewords are provided for HTTP data elements to reduce the amount of data in an HTTP request or response message.
- the codeword may have reserved bits to distinguish specific data elements or to provide other information about the message to aid in processing.
- the technique is compatible with other compression techniques to provide even greater compression.
- the invention provides a significant reduction in the amount of data that must be communicated, e.g., during an Internet session at a subscriber terminal. Additionally, the invention allows the use of a network processor 168 or browser, e.g. in a subscriber terminal to process the compressed HTTP data (e.g., codewords) directly without decompressing them. This can provide significant savings in processing time and complexity.
- a network processor 168 or browser e.g. in a subscriber terminal to process the compressed HTTP data (e.g., codewords) directly without decompressing them. This can provide significant savings in processing time and complexity.
- each codeword may have the same length and therefore generally takes the same amount of time to process, so the processing time becomes more deterministic.
- the techniques of the present invention may be implemented using any known hardware, software and/or firmware techniques.
- LANs local area networks
- MANs metropolitan area networks
- WANs wide area networks
- internets intranets
- intranets and the Internet, or combinations thereof, may be used.
- the invention is suitable for use in compressing messages in other Internet protocols besides HTTP.
Abstract
Description
TABLE 1 | |
Codeword: | Data element/explanation: |
(line 1) | MSB of binary codeword designates a request |
0216 = 000000102 | message if = 0 or a response message if = 1 (here |
the MSB is 0); next 7 bits indicate “GET” method | |
03 | indicates that an absolute path or text URL follows |
1216 = 1810 | indicates the length in bytes of the absolute path or |
text URL | |
2F, 73, 6F, 6D, 65, | ASCII character codes for path |
64, 69, 72, 2F, 70, | “/somedir/page.html” |
61, 67, 65, 2E, 68, | |
74, 6D, 6C | |
000216 = 210 | HTTP/ |
03 | 1.1 |
0316 = 310 | total number of header lines that follow |
(line 2) | header type - 1st bit reserved, next 2 bits indicate |
5116 = 10100012 | header type (01 = general, 10 = request, 11 = |
entity), next 5 bits indicate header field | |
0316 = 310 | number of bytes that follow for that header type |
01 | header field (“User-agent:”) |
07 | (“Mozilla/”) |
04 | (“4.0”) |
(line 3) | header field (i.e., “Accept:”) |
4116 = 010000012 | |
07 | number of bytes that follow for that field (i.e., 7 |
bytes) | |
03 | number of entity type/subtype pairs that follow (i.e., |
3 pairs) | |
02 | text/ |
03 | html, |
06 | image/ |
02 | gif, |
06 | image/ |
03 | jpeg |
(line 4) 44 | header field (i.e., “Accept-language:”) |
0316 = 310 | number of bytes that follow for that header type |
0116 = 110 | number of language ranges that follow |
0116 = 000000012 | MSB of binary codeword designates if parameters |
are also present with the language range, if = 0 not | |
present if = 1 present (here the MSB is 0); next 7 | |
bits indicate the number of number of bytes that | |
follow, each corresponding byte specifying a | |
language range tag | |
05 | en (i.e., English language range tag) |
TABLE 2 | |
Codeword: | Data element/explanation: |
(line 1) | MSB of binary codeword designates a request |
0216 = 100000002 | message if = 0 or a response message if = 1 (here |
the MSB is 1); next 7 bits indicates the class code | |
(i.e., the “00” portion of “200”) of the response. | |
1A16 = 000100102 | first 5 bits indicates a reason length (i.e., 2), last 3 |
bits indicate class type (i.e., 0102 = success or | |
“2” of the “200” | |
000216 = 210 | HTTP/ |
03 | 1.1 |
4F4B16 | reason phrase “OK” |
06 | number of header lines that follow |
(line 2) | header type - 1st bit reserved, next 2 bits indicate |
2216 = 001000102 | header type (01 = general, 10 = response, 11 = |
entity), next 5 bits indicate header field (i.e., | |
00010 = “Connection:”) | |
01 | number of bytes that follow for the header field |
01 | header field “close” |
(line 3) | header type - 1st bit reserved, next 2 bits indicate |
2316 = 001000112 | header type (01 = general), next 5 bits indicate |
header field (i.e., 00011 = “Date:”) | |
06 | number of bytes that follow for the header field |
8616 = 100001102 | The first 3 bits indicate the text day (i.e., “Thu,” = |
100). The last 5 bits indicate the numeric day of | |
the month (i.e., “06” = 00110) | |
8816 = 100010002 | The MSB indicates if the time that follows is A.M. |
(0) or P.M. (1); next 3 bits are reserved; last 4 bits | |
indicate the month (i.e., “Aug” = 8) | |
07CE16 = 199810 | year |
000F16 = 000000000 | The first 4 bits indicate the hour with valid values |
00011112 | ranging between 0 and 11 and zero representing 12 |
if P.M. bit is set (i.e., “12:” = 0000); next 6 bits | |
indicate minutes (i.e., “00:” = 000000); last 6 bits | |
indicating seconds i.e., “15” = 001111 | |
(line 4) | header type - 1st bit reserved; next 2 bits indicate |
4616 = 010001102 | header type (01 = general); next 5 bits indicate |
header field (i.e., 00110 = “Server:”) | |
08 | number of bytes that follow for the header field |
02 | Number of products or comments that follow in the |
header | |
0216 = 000000102 | MSB indicates product if = 0 or comment if = 1 |
(here the MSB is 0), last 7 bits indicate the product | |
type (i.e., “Apache/” = 2) | |
23 | Indicates product version i.e., “1.3.0” |
8416 = 100001002 | MSB indicates product (0) or comment (1) (here the |
MSB is 1); last 7 bits indicate the comment length in | |
bytes (i.e., 1002 = 4 bytes). | |
55, 6E, 69, 78 | ASCII for “Unix” |
(line 5) | header type - 1st bit reserved; next 2 bits indicate |
6C16 = 011011002 | header type (11 = entity); next 5 bits indicate header |
field (i.e., 01100 = “Last-Modified:”) | |
06 | number of bytes that follow for the header field |
3616 = 001101102 | The first 3 bits indicate the text day (i.e., |
“Mon,” = 001) The last 5 bits indicate the numeric | |
day of the month (i.e., “22” = 10110) | |
0616 = 001000112 | The MSB indicates if the time that follows is A.M. |
or P.M. time A.M. if = 0 or P.M. if = 1 (here the | |
MSB is 1); next 3 bits are reserved, last 4 bits | |
indicates the month (i.e., “Aug” = 8) | |
07CE16 = 199810 | year |
95D816 = | The first 4 bits indicate the hour with valid values |
100101011 | ranging between 0 and 11 and zero representing 12 |
10110002 | if P.M. bit is set. (i.e., ”09:” = 1001), next 6 bits |
indicating minutes (i.e., “23:” = 010111), last 6 bits | |
indicating seconds (i.e.., “24” = 011000) | |
(line 6) 65 | header type - 1st bit reserved; next 2 bits indicate |
header type (11 = entity); next 5 bits indicate header | |
field (i.e., 001 01 = “Content-Length:”) | |
04 | number of bytes that follow for the header field |
00001AA516 = | “6821” |
682110 | |
(line 7) 69 | header type - 1st bit reserved; next 2 bits indicate |
header type (11 = entity); next 5 bits indicate header | |
field (i.e. 01001 = “Content-Type:”) | |
02 | number of bytes that follow for the header field |
02 | text/ |
03 | html |
Claims (31)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/439,026 US6345307B1 (en) | 1999-04-30 | 1999-11-12 | Method and apparatus for compressing hypertext transfer protocol (HTTP) messages |
PCT/US2000/009585 WO2000067382A2 (en) | 1999-04-30 | 2000-04-10 | Method and apparatus for data compression |
AU42268/00A AU4226800A (en) | 1999-04-30 | 2000-04-10 | Method and apparatus for compressing hypertext transfer protocol (http) messages |
CA002372899A CA2372899C (en) | 1999-04-30 | 2000-04-10 | Method and apparatus for data compression |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13180799P | 1999-04-30 | 1999-04-30 | |
US09/439,026 US6345307B1 (en) | 1999-04-30 | 1999-11-12 | Method and apparatus for compressing hypertext transfer protocol (HTTP) messages |
Publications (1)
Publication Number | Publication Date |
---|---|
US6345307B1 true US6345307B1 (en) | 2002-02-05 |
Family
ID=26829816
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/439,026 Expired - Lifetime US6345307B1 (en) | 1999-04-30 | 1999-11-12 | Method and apparatus for compressing hypertext transfer protocol (HTTP) messages |
Country Status (4)
Country | Link |
---|---|
US (1) | US6345307B1 (en) |
AU (1) | AU4226800A (en) |
CA (1) | CA2372899C (en) |
WO (1) | WO2000067382A2 (en) |
Cited By (93)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020059462A1 (en) * | 2000-11-16 | 2002-05-16 | Hans Hannu | Static information knowledge used with binary compression methods |
US20020057715A1 (en) * | 2000-11-16 | 2002-05-16 | Hans Hannu | Communication system and method utilizing request-reply communication patterns for data compression |
US20020059463A1 (en) * | 2000-11-10 | 2002-05-16 | Leonid Goldstein | Method and system for accelerating internet access through data compression |
US20020057716A1 (en) * | 2000-11-16 | 2002-05-16 | Krister Svanbro | Communication system and method for shared context compression |
US20020069354A1 (en) * | 2000-02-03 | 2002-06-06 | Fallon James J. | Systems and methods for accelerated loading of operating systems and application programs |
US20020080871A1 (en) * | 2000-10-03 | 2002-06-27 | Realtime Data, Llc | System and method for data feed acceleration and encryption |
US20020085696A1 (en) * | 2000-03-31 | 2002-07-04 | Robert Martin | Methods and apparatus for call service processing |
US20020099853A1 (en) * | 2000-12-06 | 2002-07-25 | Osamu Tsujii | Information processing apparatus, method of controlling the same, information processing system, and computer-readable memory |
US20020143521A1 (en) * | 2000-12-15 | 2002-10-03 | Call Charles G. | Methods and apparatus for storing and manipulating variable length and fixed length data elements as a sequence of fixed length integers |
US20020141371A1 (en) * | 2001-03-28 | 2002-10-03 | Hsu Raymond T. | Method and apparatus for transmission framing in a wireless communication system |
US20020141365A1 (en) * | 2001-03-28 | 2002-10-03 | Leung Nikolai K.N. | Method and apparatus for providing protocol options in a wireless communication system |
US20020142757A1 (en) * | 2001-03-28 | 2002-10-03 | Leung Nikolai K.N. | Method and apparatus for broadcast signaling in a wireless communication system |
US20020147812A1 (en) * | 2001-04-10 | 2002-10-10 | Sun Microsystems, Inc. | System and method for enabling applet execution in networks utilizing proxy servers |
US20020147833A1 (en) * | 2001-04-07 | 2002-10-10 | Richardson John William | Remote services control in an ATM/DSL service network |
US20020161853A1 (en) * | 2000-12-06 | 2002-10-31 | Alp Burak | Real-time financial charting system |
US20020165847A1 (en) * | 2001-05-02 | 2002-11-07 | Mccartney Jason | Logical semantic compression |
US20020191692A1 (en) * | 2001-02-13 | 2002-12-19 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US20030046317A1 (en) * | 2001-04-19 | 2003-03-06 | Istvan Cseri | Method and system for providing an XML binary format |
US20030046415A1 (en) * | 2001-08-30 | 2003-03-06 | Takahiro Kaijyu | File transmitting method and system |
US20030061337A1 (en) * | 2001-09-27 | 2003-03-27 | Kabushiki Kaisha Toshiba | Data transfer scheme using caching technique for reducing network load |
US20030063591A1 (en) * | 2001-10-03 | 2003-04-03 | Leung Nikolai K.N. | Method and apparatus for data packet transport in a wireless communication system using an internet protocol |
US20030120813A1 (en) * | 2001-12-21 | 2003-06-26 | Ishita Majumdar | Apparatus and method for optimizing message sizes of textual protocols used in multimedia communications |
US20030145115A1 (en) * | 2002-01-30 | 2003-07-31 | Worger William R. | Session initiation protocol compression |
US6615275B2 (en) * | 1995-11-30 | 2003-09-02 | Stampede Technologies, Inc. | System for increasing data access in network having compression device for determining and controlling data/object compression based on predetermined maximum percentage of CPU processing capacity |
US20030164020A1 (en) * | 2000-07-29 | 2003-09-04 | Haberkamm Klaus Dieter | Method and device for band-edge orientated displacement of intermediate cylinders in a 6 cylinder frame |
WO2003073719A1 (en) * | 2002-02-28 | 2003-09-04 | Nokia Corporation | Http message compression |
US20030191876A1 (en) * | 2000-02-03 | 2003-10-09 | Fallon James J. | Data storewidth accelerator |
US6707801B2 (en) * | 2001-03-28 | 2004-03-16 | Qualcomm Incorporated | Method and apparatus for data transport in a wireless communication system |
US20040056783A1 (en) * | 1998-12-11 | 2004-03-25 | Fallon James J. | Content independent data compression method and system |
US20040073746A1 (en) * | 1999-03-11 | 2004-04-15 | Fallon James J. | System and methods for accelerated data storage and retrieval |
US20040120527A1 (en) * | 2001-08-20 | 2004-06-24 | Hawkes Philip Michael | Method and apparatus for security in a data processing system |
US20040139480A1 (en) * | 2002-04-19 | 2004-07-15 | Alain Delpuch | Supporting common interactive television functionality through presentation engine syntax |
US20040205673A1 (en) * | 2001-09-22 | 2004-10-14 | Vladimir Patryshev | Method for detecting current client-side browser encoding |
US20040237100A1 (en) * | 2002-05-24 | 2004-11-25 | Pinder Howard G. | Validating client-receivers |
US20040248558A1 (en) * | 2003-06-04 | 2004-12-09 | Chandhok Ravinder Paul | Method and apparatus for translating resource names in a wireless environment |
WO2004110027A1 (en) * | 2003-06-06 | 2004-12-16 | Computer Associates Think, Inc. | System and method for compressing url request parameters |
US20050010774A1 (en) * | 2003-07-08 | 2005-01-13 | Rose Gregory Gordon | Apparatus and method for a secure broadcast system |
US20050008159A1 (en) * | 2003-07-07 | 2005-01-13 | Francesco Grilli | Secure registration for a multicast-broadcast-multimedia system (MBMS) |
US20050138379A1 (en) * | 2003-09-02 | 2005-06-23 | James Semple | Method and apparatus for providing authenticated challenges for broadcast-multicast communications in a communication system |
US20050169223A1 (en) * | 2004-01-16 | 2005-08-04 | Crocker Ronald T. | Method and apparatus for facilitating a PTT session initiation using an IP-based protocol |
US20060015615A1 (en) * | 2002-05-17 | 2006-01-19 | Gilles Merle | Method for data distribution with access control |
US20060015650A1 (en) * | 1999-03-11 | 2006-01-19 | Fallon James J | System and methods for accelerated data storage and retrieval |
US20060047838A1 (en) * | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US20060123031A1 (en) * | 2004-12-07 | 2006-06-08 | Shin Seung W | Prefiltering method and apparatus for prefiltering data stream for pattern matching |
EP1701502A1 (en) * | 2005-03-09 | 2006-09-13 | Research In Motion Limited | System, method and apparatus for compressed wireless signalling |
US20060205420A1 (en) * | 2005-03-09 | 2006-09-14 | Research In Motion Limited | System, method and apparatus for optimized wireless messaging |
US20060234681A1 (en) * | 2005-04-18 | 2006-10-19 | Research In Motion Limited | System and method for data and message optimization in wireless communications |
EP1715655A1 (en) * | 2005-04-18 | 2006-10-25 | Research In Motion Limited | System and method for data and message optimisation in wireless communications |
US20070130254A1 (en) * | 2002-05-24 | 2007-06-07 | Russ Samuel H | Apparatus for entitling and transmitting service instances to remote client devices |
US20070159366A1 (en) * | 2006-01-09 | 2007-07-12 | Taiwan Semiconductor Manufacturing Co., Ltd. | Character conversion methods and systems |
US20070174209A1 (en) * | 2000-10-03 | 2007-07-26 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US20070245024A1 (en) * | 2006-04-17 | 2007-10-18 | Prus Bohdan S | Systems and methods for prioritizing the storage location of media data |
US20070294178A1 (en) * | 2006-06-16 | 2007-12-20 | Scientific Atlanta, Inc. | Securing media content using interchangeable encryption key |
US20080002951A1 (en) * | 2006-06-30 | 2008-01-03 | Scientific-Atlanta, Inc. | Digital Media Device Having Media Content Transfer Capability |
US20080005204A1 (en) * | 2006-06-30 | 2008-01-03 | Scientific-Atlanta, Inc. | Systems and Methods for Applying Retention Rules |
US20080022304A1 (en) * | 2006-06-30 | 2008-01-24 | Scientific-Atlanta, Inc. | Digital Media Device Having Selectable Media Content Storage Locations |
US20080226073A1 (en) * | 2001-10-09 | 2008-09-18 | Qualcomm Incorporated | Method and apparatus for security in a data processing system |
US20080281900A1 (en) * | 2000-07-19 | 2008-11-13 | International Business Machines Corporation | Technique for Sending TCP Messages through HTTP Systems |
US7467211B1 (en) * | 1999-10-18 | 2008-12-16 | Cisco Technology Inc. | Remote computer system management through an FTP internet connection |
US20090031409A1 (en) * | 2007-07-23 | 2009-01-29 | Murray Mark R | Preventing Unauthorized Poaching of Set Top Box Assets |
US20090080648A1 (en) * | 2007-09-26 | 2009-03-26 | Pinder Howard G | Controlled cryptoperiod timing to reduce decoder processing load |
US20090183067A1 (en) * | 2008-01-14 | 2009-07-16 | Canon Kabushiki Kaisha | Processing method and device for the coding of a document of hierarchized data |
US7602914B2 (en) | 2004-08-18 | 2009-10-13 | Scientific-Atlanta, Inc. | Utilization of encrypted hard drive content by one DVR set-top box when recorded by another |
US7602913B2 (en) | 2004-08-18 | 2009-10-13 | Scientific - Atlanta, Inc. | Retrieval and transfer of encrypted hard drive content from DVR set-top box utilizing second DVR set-top box |
US7630499B2 (en) | 2004-08-18 | 2009-12-08 | Scientific-Atlanta, Inc. | Retrieval and transfer of encrypted hard drive content from DVR set-top boxes |
US20100048206A1 (en) * | 2003-01-02 | 2010-02-25 | Qualcomm Incorporated | Method and apparatus for broadcast services in a communication system |
US20100082813A1 (en) * | 2008-09-29 | 2010-04-01 | Microsoft Corporation | Multiple Parallel User Experiences Provided By a Single Set of Internet Hosting Machines |
US20100194607A1 (en) * | 2009-02-05 | 2010-08-05 | Lsi Corporation | Data compression method and apparatus |
US20100272124A1 (en) * | 2001-10-12 | 2010-10-28 | Qualcomm Incorporated | Method and system for reduction of decoding complexity in a communication system |
US20110045864A1 (en) * | 2001-03-28 | 2011-02-24 | Qualcomm Incorporated | Power control for point-to-multipoint services provided in communication systems |
US20110131412A1 (en) * | 2009-12-02 | 2011-06-02 | Garmin Ltd. | Http header compression |
US20110199243A1 (en) * | 2000-10-03 | 2011-08-18 | Realtime Data LLC DBA IXO | System and Method For Data Feed Acceleration and Encryption |
US20110307376A1 (en) * | 2009-02-20 | 2011-12-15 | Telefonaktiebolaget Lm Ericsson (Publ) | DLNA Data Distribution form a Remote Source |
US8121296B2 (en) | 2001-03-28 | 2012-02-21 | Qualcomm Incorporated | Method and apparatus for security in a data processing system |
JP2013512645A (en) * | 2009-11-30 | 2013-04-11 | クゥアルコム・インコーポレイテッド | Method and apparatus for improving header compression |
US8566922B2 (en) | 2011-05-25 | 2013-10-22 | Barry W. Hargis | System for isolating a secured data communication network |
US20130305141A1 (en) * | 2003-06-26 | 2013-11-14 | International Business Machines Corporation | Rich text handling for a web application |
US8630200B2 (en) | 2010-06-01 | 2014-01-14 | Meltwater News International Holdings, GmbH | Method and apparatus for embedding information in a short URL |
US8639753B1 (en) | 2012-09-18 | 2014-01-28 | Squash Compression, LLC | Methods and apparatus for increasing the efficiency of electronic data storage and transmission |
US20140075486A1 (en) * | 2012-09-12 | 2014-03-13 | The Directv Group, Inc. | Method and system for communicating between a host device and user device through an intermediate device using syntax translation |
US8683013B2 (en) | 2011-04-18 | 2014-03-25 | Cisco Technology, Inc. | System and method for data streaming in a computer network |
US8898717B1 (en) * | 2012-01-11 | 2014-11-25 | Cisco Technology, Inc. | System and method for obfuscating start-up delay in a linear media service environment |
CN104184574A (en) * | 2013-05-22 | 2014-12-03 | 中兴通讯股份有限公司 | Intelligent mobile terminal and data processing method thereof |
US9001886B2 (en) | 2010-11-22 | 2015-04-07 | Cisco Technology, Inc. | Dynamic time synchronization |
US9137480B2 (en) | 2006-06-30 | 2015-09-15 | Cisco Technology, Inc. | Secure escrow and recovery of media device content keys |
US9535722B2 (en) | 2012-09-12 | 2017-01-03 | The Directv Group, Inc. | Method and system for communicating between a host device and a user device through an intermediate device using a composite graphics signal |
US9591098B2 (en) | 2012-02-01 | 2017-03-07 | Cisco Technology, Inc. | System and method to reduce stream start-up delay for adaptive streaming |
US20170201601A1 (en) * | 2016-01-12 | 2017-07-13 | International Business Machines Corporation | Data transfer policies between source and target servers in a wide area network |
US9923945B2 (en) | 2013-10-10 | 2018-03-20 | Cisco Technology, Inc. | Virtual assets for on-demand content generation |
US10277658B2 (en) * | 2010-07-14 | 2019-04-30 | Google Llc | Reduction of web page load time using http header compression |
TWI665625B (en) * | 2014-08-05 | 2019-07-11 | 香港商阿里巴巴集團服務有限公司 | Method and device for message operation |
US10521250B2 (en) | 2012-09-12 | 2019-12-31 | The Directv Group, Inc. | Method and system for communicating between a host device and user device through an intermediate device using a composite video signal |
US11258870B1 (en) | 2006-04-01 | 2022-02-22 | Content Square Israel Ltd | Method and system for monitoring an activity of a user |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7439887B2 (en) | 2007-02-13 | 2008-10-21 | Seiko Epson Corporation | Method and apparatus for GIF decompression using fixed-size codeword table |
GB2503128B8 (en) * | 2008-10-09 | 2014-03-12 | Sonicwall Inc | Computer networks |
CN104811265B (en) * | 2014-01-29 | 2018-12-18 | 上海数字电视国家工程研究中心有限公司 | The packaging method and de-encapsulation method of base band frame |
Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5627829A (en) | 1993-10-07 | 1997-05-06 | Gleeson; Bryan J. | Method for reducing unnecessary traffic over a computer network |
US5751968A (en) * | 1995-09-12 | 1998-05-12 | Vocaltec Ltd. | System and method for distributing multi-media presentations in a computer network |
US5764910A (en) | 1996-04-02 | 1998-06-09 | National Semiconductor Corporation | Method and apparatus for encoding and using network resource locators |
US5771355A (en) * | 1995-12-21 | 1998-06-23 | Intel Corporation | Transmitting electronic mail by either reference or value at file-replication points to minimize costs |
US5838927A (en) | 1996-11-22 | 1998-11-17 | Webtv Networks | Method and apparatus for compressing a continuous, indistinct data stream |
US5895471A (en) * | 1997-07-11 | 1999-04-20 | Unwired Planet, Inc. | Providing a directory of frequently used hyperlinks on a remote server |
US5938737A (en) * | 1997-02-14 | 1999-08-17 | Stanford Telecommunications, Inc. | Internet upstream request compression |
US5953503A (en) * | 1997-10-29 | 1999-09-14 | Digital Equipment Corporation | Compression protocol with multiple preset dictionaries |
US5956490A (en) * | 1998-06-30 | 1999-09-21 | Motorola, Inc. | Method, client device, server and computer readable medium for specifying and negotiating compression of uniform resource identifiers |
US6029200A (en) * | 1998-03-09 | 2000-02-22 | Microsoft Corporation | Automatic protocol rollover in streaming multimedia data delivery system |
US6032197A (en) * | 1997-09-25 | 2000-02-29 | Microsoft Corporation | Data packet header compression for unidirectional transmission |
US6088803A (en) * | 1997-12-30 | 2000-07-11 | Intel Corporation | System for virus-checking network data during download to a client device |
US6094679A (en) * | 1998-01-16 | 2000-07-25 | Microsoft Corporation | Distribution of software in a computer network environment |
US6101328A (en) * | 1997-12-31 | 2000-08-08 | Intel Corporation | System for preventing multiple instances of the same dynamic executable module |
-
1999
- 1999-11-12 US US09/439,026 patent/US6345307B1/en not_active Expired - Lifetime
-
2000
- 2000-04-10 AU AU42268/00A patent/AU4226800A/en not_active Abandoned
- 2000-04-10 CA CA002372899A patent/CA2372899C/en not_active Expired - Fee Related
- 2000-04-10 WO PCT/US2000/009585 patent/WO2000067382A2/en active Application Filing
Patent Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5627829A (en) | 1993-10-07 | 1997-05-06 | Gleeson; Bryan J. | Method for reducing unnecessary traffic over a computer network |
US5751968A (en) * | 1995-09-12 | 1998-05-12 | Vocaltec Ltd. | System and method for distributing multi-media presentations in a computer network |
US5771355A (en) * | 1995-12-21 | 1998-06-23 | Intel Corporation | Transmitting electronic mail by either reference or value at file-replication points to minimize costs |
US5764910A (en) | 1996-04-02 | 1998-06-09 | National Semiconductor Corporation | Method and apparatus for encoding and using network resource locators |
US5838927A (en) | 1996-11-22 | 1998-11-17 | Webtv Networks | Method and apparatus for compressing a continuous, indistinct data stream |
US5938737A (en) * | 1997-02-14 | 1999-08-17 | Stanford Telecommunications, Inc. | Internet upstream request compression |
US5895471A (en) * | 1997-07-11 | 1999-04-20 | Unwired Planet, Inc. | Providing a directory of frequently used hyperlinks on a remote server |
US6032197A (en) * | 1997-09-25 | 2000-02-29 | Microsoft Corporation | Data packet header compression for unidirectional transmission |
US5953503A (en) * | 1997-10-29 | 1999-09-14 | Digital Equipment Corporation | Compression protocol with multiple preset dictionaries |
US6088803A (en) * | 1997-12-30 | 2000-07-11 | Intel Corporation | System for virus-checking network data during download to a client device |
US6101328A (en) * | 1997-12-31 | 2000-08-08 | Intel Corporation | System for preventing multiple instances of the same dynamic executable module |
US6094679A (en) * | 1998-01-16 | 2000-07-25 | Microsoft Corporation | Distribution of software in a computer network environment |
US6029200A (en) * | 1998-03-09 | 2000-02-22 | Microsoft Corporation | Automatic protocol rollover in streaming multimedia data delivery system |
US5956490A (en) * | 1998-06-30 | 1999-09-21 | Motorola, Inc. | Method, client device, server and computer readable medium for specifying and negotiating compression of uniform resource identifiers |
Non-Patent Citations (6)
Title |
---|
"Compressed HTML Protocol Released," InternetNews.com, http://www.internetnews.com/wd-news/print/0,1089,10_55601,00.html, Nov. 10, 1998. |
"Simple Test of Compressing HTML Using ZLib," http://www.w3.org/Protocols/HTTP/Performance/Compression/HTMLCanon.html, Aug. 9, 1997. |
A.S. Tanenbaum, "Computer Networks.", Prentice-Hall, US XP002153383. |
A.V. Aho et al., "Principles of Compiler Design," 1977, Addisson-Wesley, US XP002153382. |
R. Fielding et al., "Hypertext Transfer Protocol, HTTP 1.1," Internet Request For Comments., XP002153381. |
Sproull R.F. et al., "High-Level Protocols," Proceedings of the IEEE,US, IEEE. New York, vol. 66, No. 11, Nov. 1978, pp. 1371-1896, XP000813055. |
Cited By (231)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6615275B2 (en) * | 1995-11-30 | 2003-09-02 | Stampede Technologies, Inc. | System for increasing data access in network having compression device for determining and controlling data/object compression based on predetermined maximum percentage of CPU processing capacity |
US20110037626A1 (en) * | 1998-12-11 | 2011-02-17 | Fallon James J | Data Compression Systems and Methods |
US8717203B2 (en) | 1998-12-11 | 2014-05-06 | Realtime Data, Llc | Data compression systems and methods |
US20060181441A1 (en) * | 1998-12-11 | 2006-08-17 | Fallon James J | Content independent data compression method and system |
US8643513B2 (en) | 1998-12-11 | 2014-02-04 | Realtime Data Llc | Data compression systems and methods |
US7714747B2 (en) | 1998-12-11 | 2010-05-11 | Realtime Data Llc | Data compression systems and methods |
US20070109155A1 (en) * | 1998-12-11 | 2007-05-17 | Fallon James J | Data compression systems and methods |
US9054728B2 (en) | 1998-12-11 | 2015-06-09 | Realtime Data, Llc | Data compression systems and methods |
US8933825B2 (en) | 1998-12-11 | 2015-01-13 | Realtime Data Llc | Data compression systems and methods |
US10033405B2 (en) | 1998-12-11 | 2018-07-24 | Realtime Data Llc | Data compression systems and method |
US8502707B2 (en) | 1998-12-11 | 2013-08-06 | Realtime Data, Llc | Data compression systems and methods |
US20040056783A1 (en) * | 1998-12-11 | 2004-03-25 | Fallon James J. | Content independent data compression method and system |
US20070067483A1 (en) * | 1999-03-11 | 2007-03-22 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US20100318684A1 (en) * | 1999-03-11 | 2010-12-16 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US20060184696A1 (en) * | 1999-03-11 | 2006-08-17 | Fallon James J | System and methods for accelerated data storage and retrieval |
US20070050515A1 (en) * | 1999-03-11 | 2007-03-01 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8275897B2 (en) | 1999-03-11 | 2012-09-25 | Realtime Data, Llc | System and methods for accelerated data storage and retrieval |
US9116908B2 (en) | 1999-03-11 | 2015-08-25 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US20070050514A1 (en) * | 1999-03-11 | 2007-03-01 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8756332B2 (en) | 1999-03-11 | 2014-06-17 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US10019458B2 (en) | 1999-03-11 | 2018-07-10 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US20040073746A1 (en) * | 1999-03-11 | 2004-04-15 | Fallon James J. | System and methods for accelerated data storage and retrieval |
US20060015650A1 (en) * | 1999-03-11 | 2006-01-19 | Fallon James J | System and methods for accelerated data storage and retrieval |
US20060195601A1 (en) * | 1999-03-11 | 2006-08-31 | Fallon James J | System and methods for accelerated data storage and retrieval |
US20060184687A1 (en) * | 1999-03-11 | 2006-08-17 | Fallon James J | System and methods for accelerated data storage and retrieval |
US8719438B2 (en) | 1999-03-11 | 2014-05-06 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8504710B2 (en) | 1999-03-11 | 2013-08-06 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8230088B2 (en) | 1999-10-18 | 2012-07-24 | Cisco Technology, Inc. | Remote computer system management through an FTP internet connection |
US7467211B1 (en) * | 1999-10-18 | 2008-12-16 | Cisco Technology Inc. | Remote computer system management through an FTP internet connection |
US20100332700A1 (en) * | 2000-02-03 | 2010-12-30 | Realtime Data Llc | Data storewidth accelerator |
US8880862B2 (en) | 2000-02-03 | 2014-11-04 | Realtime Data, Llc | Systems and methods for accelerated loading of operating systems and application programs |
US20030191876A1 (en) * | 2000-02-03 | 2003-10-09 | Fallon James J. | Data storewidth accelerator |
US9792128B2 (en) | 2000-02-03 | 2017-10-17 | Realtime Data, Llc | System and method for electrical boot-device-reset signals |
US20020069354A1 (en) * | 2000-02-03 | 2002-06-06 | Fallon James J. | Systems and methods for accelerated loading of operating systems and application programs |
US20060190644A1 (en) * | 2000-02-03 | 2006-08-24 | Fallon James J | Data storewidth accelerator |
US8112619B2 (en) | 2000-02-03 | 2012-02-07 | Realtime Data Llc | Systems and methods for accelerated loading of operating systems and application programs |
US20110231642A1 (en) * | 2000-02-03 | 2011-09-22 | Realtime Data LLC DBA IXO | Systems and Methods for Accelerated Loading of Operating Systems and Application Programs |
US8090936B2 (en) | 2000-02-03 | 2012-01-03 | Realtime Data, Llc | Systems and methods for accelerated loading of operating systems and application programs |
US7216350B2 (en) * | 2000-03-31 | 2007-05-08 | Coppercom, Inc. | Methods and apparatus for call service processing by instantiating an object that executes a compiled representation of a mark-up language description of operations for performing a call feature or service |
US20020085696A1 (en) * | 2000-03-31 | 2002-07-04 | Robert Martin | Methods and apparatus for call service processing |
US7769871B2 (en) * | 2000-07-19 | 2010-08-03 | International Business Machines Corporation | Technique for sending bi-directional messages through uni-directional systems |
US20080281900A1 (en) * | 2000-07-19 | 2008-11-13 | International Business Machines Corporation | Technique for Sending TCP Messages through HTTP Systems |
US7461150B1 (en) * | 2000-07-19 | 2008-12-02 | International Business Machines Corporation | Technique for sending TCP messages through HTTP systems |
US20030164020A1 (en) * | 2000-07-29 | 2003-09-04 | Haberkamm Klaus Dieter | Method and device for band-edge orientated displacement of intermediate cylinders in a 6 cylinder frame |
US8717204B2 (en) | 2000-10-03 | 2014-05-06 | Realtime Data Llc | Methods for encoding and decoding data |
US20110199243A1 (en) * | 2000-10-03 | 2011-08-18 | Realtime Data LLC DBA IXO | System and Method For Data Feed Acceleration and Encryption |
US8692695B2 (en) | 2000-10-03 | 2014-04-08 | Realtime Data, Llc | Methods for encoding and decoding data |
US9667751B2 (en) | 2000-10-03 | 2017-05-30 | Realtime Data, Llc | Data feed acceleration |
US9859919B2 (en) | 2000-10-03 | 2018-01-02 | Realtime Data Llc | System and method for data compression |
US9967368B2 (en) | 2000-10-03 | 2018-05-08 | Realtime Data Llc | Systems and methods for data block decompression |
US9143546B2 (en) * | 2000-10-03 | 2015-09-22 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US10419021B2 (en) | 2000-10-03 | 2019-09-17 | Realtime Data, Llc | Systems and methods of data compression |
US20070174209A1 (en) * | 2000-10-03 | 2007-07-26 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US9141992B2 (en) | 2000-10-03 | 2015-09-22 | Realtime Data Llc | Data feed acceleration |
US8723701B2 (en) | 2000-10-03 | 2014-05-13 | Realtime Data Llc | Methods for encoding and decoding data |
US10284225B2 (en) | 2000-10-03 | 2019-05-07 | Realtime Data, Llc | Systems and methods for data compression |
US20090287839A1 (en) * | 2000-10-03 | 2009-11-19 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US8742958B2 (en) | 2000-10-03 | 2014-06-03 | Realtime Data Llc | Methods for encoding and decoding data |
US20020080871A1 (en) * | 2000-10-03 | 2002-06-27 | Realtime Data, Llc | System and method for data feed acceleration and encryption |
US7777651B2 (en) | 2000-10-03 | 2010-08-17 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US20020059463A1 (en) * | 2000-11-10 | 2002-05-16 | Leonid Goldstein | Method and system for accelerating internet access through data compression |
US6950445B2 (en) * | 2000-11-16 | 2005-09-27 | Telefonaktiebolaget Lm Ericsson (Publ) | Communication system and method for shared context compression |
US6985965B2 (en) * | 2000-11-16 | 2006-01-10 | Telefonaktiebolaget Lm Ericsson (Publ) | Static information knowledge used with binary compression methods |
US20020057716A1 (en) * | 2000-11-16 | 2002-05-16 | Krister Svanbro | Communication system and method for shared context compression |
US6963587B2 (en) * | 2000-11-16 | 2005-11-08 | Telefonaktiebolaget Lm Ericsson (Publ) | Communication system and method utilizing request-reply communication patterns for data compression |
US20020057715A1 (en) * | 2000-11-16 | 2002-05-16 | Hans Hannu | Communication system and method utilizing request-reply communication patterns for data compression |
US20020059462A1 (en) * | 2000-11-16 | 2002-05-16 | Hans Hannu | Static information knowledge used with binary compression methods |
US7624139B2 (en) * | 2000-12-06 | 2009-11-24 | Canon Kabushiki Kaisha | Information processing apparatus, method of controlling the same, information processing system, and computer-readable memory |
US20020161853A1 (en) * | 2000-12-06 | 2002-10-31 | Alp Burak | Real-time financial charting system |
US20020099853A1 (en) * | 2000-12-06 | 2002-07-25 | Osamu Tsujii | Information processing apparatus, method of controlling the same, information processing system, and computer-readable memory |
US7178100B2 (en) * | 2000-12-15 | 2007-02-13 | Call Charles G | Methods and apparatus for storing and manipulating variable length and fixed length data elements as a sequence of fixed length integers |
US20020143521A1 (en) * | 2000-12-15 | 2002-10-03 | Call Charles G. | Methods and apparatus for storing and manipulating variable length and fixed length data elements as a sequence of fixed length integers |
US20020191692A1 (en) * | 2001-02-13 | 2002-12-19 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US8929442B2 (en) | 2001-02-13 | 2015-01-06 | Realtime Data, Llc | System and methods for video and audio data distribution |
US8073047B2 (en) | 2001-02-13 | 2011-12-06 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US20080232457A1 (en) * | 2001-02-13 | 2008-09-25 | Realtime Data Llc | Bandwidth sensitive data compression and decompression |
US8934535B2 (en) | 2001-02-13 | 2015-01-13 | Realtime Data Llc | Systems and methods for video and audio data storage and distribution |
US8054879B2 (en) | 2001-02-13 | 2011-11-08 | Realtime Data Llc | Bandwidth sensitive data compression and decompression |
US20100316114A1 (en) * | 2001-02-13 | 2010-12-16 | Realtime Data Llc | Bandwidth sensitive data compression and decompression |
US20110235697A1 (en) * | 2001-02-13 | 2011-09-29 | Realtime Data, Llc | Bandwidth Sensitive Data Compression and Decompression |
US8553759B2 (en) | 2001-02-13 | 2013-10-08 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US8867610B2 (en) | 2001-02-13 | 2014-10-21 | Realtime Data Llc | System and methods for video and audio data distribution |
US9769477B2 (en) | 2001-02-13 | 2017-09-19 | Realtime Adaptive Streaming, LLC | Video data compression systems |
US9762907B2 (en) | 2001-02-13 | 2017-09-12 | Realtime Adaptive Streaming, LLC | System and methods for video and audio data distribution |
US20090154545A1 (en) * | 2001-02-13 | 2009-06-18 | Realtime Data Llc | Bandwidth sensitive data compression and decompression |
US10212417B2 (en) | 2001-02-13 | 2019-02-19 | Realtime Adaptive Streaming Llc | Asymmetric data decompression systems |
US20020141371A1 (en) * | 2001-03-28 | 2002-10-03 | Hsu Raymond T. | Method and apparatus for transmission framing in a wireless communication system |
US8077679B2 (en) | 2001-03-28 | 2011-12-13 | Qualcomm Incorporated | Method and apparatus for providing protocol options in a wireless communication system |
US6707801B2 (en) * | 2001-03-28 | 2004-03-16 | Qualcomm Incorporated | Method and apparatus for data transport in a wireless communication system |
US7693508B2 (en) | 2001-03-28 | 2010-04-06 | Qualcomm Incorporated | Method and apparatus for broadcast signaling in a wireless communication system |
US20110045864A1 (en) * | 2001-03-28 | 2011-02-24 | Qualcomm Incorporated | Power control for point-to-multipoint services provided in communication systems |
US9100457B2 (en) | 2001-03-28 | 2015-08-04 | Qualcomm Incorporated | Method and apparatus for transmission framing in a wireless communication system |
US20020142757A1 (en) * | 2001-03-28 | 2002-10-03 | Leung Nikolai K.N. | Method and apparatus for broadcast signaling in a wireless communication system |
US8121296B2 (en) | 2001-03-28 | 2012-02-21 | Qualcomm Incorporated | Method and apparatus for security in a data processing system |
US20020141365A1 (en) * | 2001-03-28 | 2002-10-03 | Leung Nikolai K.N. | Method and apparatus for providing protocol options in a wireless communication system |
US20020147833A1 (en) * | 2001-04-07 | 2002-10-10 | Richardson John William | Remote services control in an ATM/DSL service network |
US20020147812A1 (en) * | 2001-04-10 | 2002-10-10 | Sun Microsystems, Inc. | System and method for enabling applet execution in networks utilizing proxy servers |
US7500017B2 (en) * | 2001-04-19 | 2009-03-03 | Microsoft Corporation | Method and system for providing an XML binary format |
US20090132910A1 (en) * | 2001-04-19 | 2009-05-21 | Microsoft Corporation | Method and System for Providing an XML Binary Format |
US20030046317A1 (en) * | 2001-04-19 | 2003-03-06 | Istvan Cseri | Method and system for providing an XML binary format |
US20050149553A1 (en) * | 2001-05-02 | 2005-07-07 | Microsoft Corporation | Logical semantic compression |
US20050246364A1 (en) * | 2001-05-02 | 2005-11-03 | Microsoft Corporation | Logical semantic compression |
US20050253741A1 (en) * | 2001-05-02 | 2005-11-17 | Microsoft Corporation | Logical semantic compression |
US7257648B2 (en) | 2001-05-02 | 2007-08-14 | Microsoft Corporation | Logical semantic compression |
US7082478B2 (en) * | 2001-05-02 | 2006-07-25 | Microsoft Corporation | Logical semantic compression |
US7149812B2 (en) | 2001-05-02 | 2006-12-12 | Microsoft Corporation | Logical semantic compression |
US7152121B2 (en) * | 2001-05-02 | 2006-12-19 | Microsoft Corporation | Logical semantic compression |
US20020165847A1 (en) * | 2001-05-02 | 2002-11-07 | Mccartney Jason | Logical semantic compression |
US7054915B2 (en) * | 2001-06-28 | 2006-05-30 | Thomas Licensing | Remote services control in an ATM/DSL service network |
US20040120527A1 (en) * | 2001-08-20 | 2004-06-24 | Hawkes Philip Michael | Method and apparatus for security in a data processing system |
US20030046415A1 (en) * | 2001-08-30 | 2003-03-06 | Takahiro Kaijyu | File transmitting method and system |
US20040205673A1 (en) * | 2001-09-22 | 2004-10-14 | Vladimir Patryshev | Method for detecting current client-side browser encoding |
US20030061337A1 (en) * | 2001-09-27 | 2003-03-27 | Kabushiki Kaisha Toshiba | Data transfer scheme using caching technique for reducing network load |
US7441248B2 (en) * | 2001-09-27 | 2008-10-21 | Kabushiki Kaisha Toshiba | Data transfer scheme using caching technique for reducing network load |
US7697523B2 (en) | 2001-10-03 | 2010-04-13 | Qualcomm Incorporated | Method and apparatus for data packet transport in a wireless communication system using an internet protocol |
US20100142432A1 (en) * | 2001-10-03 | 2010-06-10 | Qualcomm Incorporated | Method and Apparatus For Data Packet Transport In a Wireless Communication System Using an Internet Protocol |
US20030063591A1 (en) * | 2001-10-03 | 2003-04-03 | Leung Nikolai K.N. | Method and apparatus for data packet transport in a wireless communication system using an internet protocol |
US20080226073A1 (en) * | 2001-10-09 | 2008-09-18 | Qualcomm Incorporated | Method and apparatus for security in a data processing system |
US8983065B2 (en) | 2001-10-09 | 2015-03-17 | Qualcomm Incorporated | Method and apparatus for security in a data processing system |
US8730999B2 (en) | 2001-10-12 | 2014-05-20 | Qualcomm Incorporated | Method and system for reduction of decoding complexity in a communication system |
US8713400B2 (en) | 2001-10-12 | 2014-04-29 | Qualcomm Incorporated | Method and system for reduction of decoding complexity in a communication system |
US20100272124A1 (en) * | 2001-10-12 | 2010-10-28 | Qualcomm Incorporated | Method and system for reduction of decoding complexity in a communication system |
US20030120813A1 (en) * | 2001-12-21 | 2003-06-26 | Ishita Majumdar | Apparatus and method for optimizing message sizes of textual protocols used in multimedia communications |
US20030145115A1 (en) * | 2002-01-30 | 2003-07-31 | Worger William R. | Session initiation protocol compression |
US6976081B2 (en) * | 2002-01-30 | 2005-12-13 | Motorola, Inc. | Session initiation protocol compression |
WO2003073719A1 (en) * | 2002-02-28 | 2003-09-04 | Nokia Corporation | Http message compression |
US20050188054A1 (en) * | 2002-02-28 | 2005-08-25 | Nokia Corporation | Http message compression |
US20040139480A1 (en) * | 2002-04-19 | 2004-07-15 | Alain Delpuch | Supporting common interactive television functionality through presentation engine syntax |
US7055169B2 (en) | 2002-04-19 | 2006-05-30 | Opentv, Inc. | Supporting common interactive television functionality through presentation engine syntax |
AU2003234144B2 (en) * | 2002-04-19 | 2008-12-04 | Opentv, Inc. | Supporting common interactive television functionality through presentation engine syntax |
US20060015615A1 (en) * | 2002-05-17 | 2006-01-19 | Gilles Merle | Method for data distribution with access control |
US7861082B2 (en) * | 2002-05-24 | 2010-12-28 | Pinder Howard G | Validating client-receivers |
US7860250B2 (en) | 2002-05-24 | 2010-12-28 | Russ Samuel H | Apparatus for entitling and transmitting service instances to remote client devices |
US20090089369A1 (en) * | 2002-05-24 | 2009-04-02 | Russ Samuel H | Apparatus for Entitling and Transmitting Service Instances to Remote Client Devices |
US7505592B2 (en) | 2002-05-24 | 2009-03-17 | Scientific-Atlanta, Inc. | Apparatus for entitling and transmitting service instances to remote client devices |
US20040237100A1 (en) * | 2002-05-24 | 2004-11-25 | Pinder Howard G. | Validating client-receivers |
US20070130254A1 (en) * | 2002-05-24 | 2007-06-07 | Russ Samuel H | Apparatus for entitling and transmitting service instances to remote client devices |
US20100048206A1 (en) * | 2003-01-02 | 2010-02-25 | Qualcomm Incorporated | Method and apparatus for broadcast services in a communication system |
US8971790B2 (en) | 2003-01-02 | 2015-03-03 | Qualcomm Incorporated | Method and apparatus for broadcast services in a communication system |
EP1629618A4 (en) * | 2003-06-04 | 2011-06-15 | Qualcomm Inc | Method and apparatus for translating resource names in a wireless environment |
WO2004109965A3 (en) * | 2003-06-04 | 2006-04-20 | Qualcomm Inc | Method and apparatus for translating resource names in a wireless environment |
US7333801B2 (en) | 2003-06-04 | 2008-02-19 | Qualcomm Incorporated | Method and apparatus for translating resource names in a wireless environment |
EP1629618A2 (en) * | 2003-06-04 | 2006-03-01 | Qualcomm, Incorporated | Method and apparatus for translating resource names in a wireless environment |
US20040248558A1 (en) * | 2003-06-04 | 2004-12-09 | Chandhok Ravinder Paul | Method and apparatus for translating resource names in a wireless environment |
CN1871824B (en) * | 2003-06-04 | 2010-04-28 | 高通股份有限公司 | Method and apparatus for translating resource names in a wireless environment |
US20070168560A1 (en) * | 2003-06-06 | 2007-07-19 | Alkire Robert J | System and method for compressing URL request parameters |
US8819287B2 (en) * | 2003-06-06 | 2014-08-26 | Ca, Inc. | System and method for compressing URL request parameters |
WO2004110027A1 (en) * | 2003-06-06 | 2004-12-16 | Computer Associates Think, Inc. | System and method for compressing url request parameters |
US9330078B2 (en) * | 2003-06-26 | 2016-05-03 | International Business Machines Corporation | Rich text handling for a web application |
US9256584B2 (en) | 2003-06-26 | 2016-02-09 | International Business Machines Corporation | Rich text handling for a web application |
US10169310B2 (en) | 2003-06-26 | 2019-01-01 | International Business Machines Corporation | Rich text handling for a web application |
US10042828B2 (en) | 2003-06-26 | 2018-08-07 | International Business Machines Corporation | Rich text handling for a web application |
US20130305141A1 (en) * | 2003-06-26 | 2013-11-14 | International Business Machines Corporation | Rich text handling for a web application |
US8098818B2 (en) | 2003-07-07 | 2012-01-17 | Qualcomm Incorporated | Secure registration for a multicast-broadcast-multimedia system (MBMS) |
US20050008159A1 (en) * | 2003-07-07 | 2005-01-13 | Francesco Grilli | Secure registration for a multicast-broadcast-multimedia system (MBMS) |
US8718279B2 (en) | 2003-07-08 | 2014-05-06 | Qualcomm Incorporated | Apparatus and method for a secure broadcast system |
US20050010774A1 (en) * | 2003-07-08 | 2005-01-13 | Rose Gregory Gordon | Apparatus and method for a secure broadcast system |
US8724803B2 (en) | 2003-09-02 | 2014-05-13 | Qualcomm Incorporated | Method and apparatus for providing authenticated challenges for broadcast-multicast communications in a communication system |
US20050138379A1 (en) * | 2003-09-02 | 2005-06-23 | James Semple | Method and apparatus for providing authenticated challenges for broadcast-multicast communications in a communication system |
US20050169223A1 (en) * | 2004-01-16 | 2005-08-04 | Crocker Ronald T. | Method and apparatus for facilitating a PTT session initiation using an IP-based protocol |
US8051207B2 (en) * | 2004-06-25 | 2011-11-01 | Citrix Systems, Inc. | Inferring server state in s stateless communication protocol |
US20060047838A1 (en) * | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US8521909B2 (en) | 2004-06-25 | 2013-08-27 | Citrix Systems, Inc. | Inferring server state in a stateless communication protocol |
US8208630B2 (en) | 2004-08-18 | 2012-06-26 | Cisco Technology, Inc. | Encryption and utilization of hard drive content |
US20090323946A1 (en) * | 2004-08-18 | 2009-12-31 | Wasilewski Anthony J | Encryption and utilization of hard drive content |
US7630499B2 (en) | 2004-08-18 | 2009-12-08 | Scientific-Atlanta, Inc. | Retrieval and transfer of encrypted hard drive content from DVR set-top boxes |
US7602913B2 (en) | 2004-08-18 | 2009-10-13 | Scientific - Atlanta, Inc. | Retrieval and transfer of encrypted hard drive content from DVR set-top box utilizing second DVR set-top box |
US7602914B2 (en) | 2004-08-18 | 2009-10-13 | Scientific-Atlanta, Inc. | Utilization of encrypted hard drive content by one DVR set-top box when recorded by another |
US8130965B2 (en) | 2004-08-18 | 2012-03-06 | Cisco Technology, Inc. | Retrieval and transfer of encrypted hard drive content from DVR set-top boxes to a content transcription device |
US20060123031A1 (en) * | 2004-12-07 | 2006-06-08 | Shin Seung W | Prefiltering method and apparatus for prefiltering data stream for pattern matching |
US20060205420A1 (en) * | 2005-03-09 | 2006-09-14 | Research In Motion Limited | System, method and apparatus for optimized wireless messaging |
US8433822B2 (en) * | 2005-03-09 | 2013-04-30 | Research In Motion Limited | System, method and apparatus for optimized wireless messaging |
EP1701502A1 (en) * | 2005-03-09 | 2006-09-13 | Research In Motion Limited | System, method and apparatus for compressed wireless signalling |
US20060234681A1 (en) * | 2005-04-18 | 2006-10-19 | Research In Motion Limited | System and method for data and message optimization in wireless communications |
EP1715655A1 (en) * | 2005-04-18 | 2006-10-25 | Research In Motion Limited | System and method for data and message optimisation in wireless communications |
US7642937B2 (en) | 2006-01-09 | 2010-01-05 | Taiwan Semiconductor Manufacturing Co., Ltd. | Character conversion methods and systems |
US20070159366A1 (en) * | 2006-01-09 | 2007-07-12 | Taiwan Semiconductor Manufacturing Co., Ltd. | Character conversion methods and systems |
US11258870B1 (en) | 2006-04-01 | 2022-02-22 | Content Square Israel Ltd | Method and system for monitoring an activity of a user |
US11343339B1 (en) | 2006-04-01 | 2022-05-24 | Content Square Israel Ltd | Method and system for monitoring an activity of a user |
US11516305B2 (en) | 2006-04-01 | 2022-11-29 | Content Square Israel Ltd | Method and system for monitoring an activity of a user |
US11863642B2 (en) | 2006-04-01 | 2024-01-02 | Content Square Israel Ltd | Method and system for monitoring an activity of a user |
US20070245024A1 (en) * | 2006-04-17 | 2007-10-18 | Prus Bohdan S | Systems and methods for prioritizing the storage location of media data |
US8208796B2 (en) | 2006-04-17 | 2012-06-26 | Prus Bohdan S | Systems and methods for prioritizing the storage location of media data |
US11212583B2 (en) | 2006-06-16 | 2021-12-28 | Synamedia Limited | Securing media content using interchangeable encryption key |
US9277295B2 (en) | 2006-06-16 | 2016-03-01 | Cisco Technology, Inc. | Securing media content using interchangeable encryption key |
US20070294178A1 (en) * | 2006-06-16 | 2007-12-20 | Scientific Atlanta, Inc. | Securing media content using interchangeable encryption key |
US7978720B2 (en) | 2006-06-30 | 2011-07-12 | Russ Samuel H | Digital media device having media content transfer capability |
US20080022304A1 (en) * | 2006-06-30 | 2008-01-24 | Scientific-Atlanta, Inc. | Digital Media Device Having Selectable Media Content Storage Locations |
US20080005204A1 (en) * | 2006-06-30 | 2008-01-03 | Scientific-Atlanta, Inc. | Systems and Methods for Applying Retention Rules |
US9137480B2 (en) | 2006-06-30 | 2015-09-15 | Cisco Technology, Inc. | Secure escrow and recovery of media device content keys |
US20080002951A1 (en) * | 2006-06-30 | 2008-01-03 | Scientific-Atlanta, Inc. | Digital Media Device Having Media Content Transfer Capability |
US8108680B2 (en) | 2007-07-23 | 2012-01-31 | Murray Mark R | Preventing unauthorized poaching of set top box assets |
US20090031409A1 (en) * | 2007-07-23 | 2009-01-29 | Murray Mark R | Preventing Unauthorized Poaching of Set Top Box Assets |
US20090080648A1 (en) * | 2007-09-26 | 2009-03-26 | Pinder Howard G | Controlled cryptoperiod timing to reduce decoder processing load |
US7949133B2 (en) | 2007-09-26 | 2011-05-24 | Pinder Howard G | Controlled cryptoperiod timing to reduce decoder processing load |
US8601368B2 (en) * | 2008-01-14 | 2013-12-03 | Canon Kabushiki Kaisha | Processing method and device for the coding of a document of hierarchized data |
US20090183067A1 (en) * | 2008-01-14 | 2009-07-16 | Canon Kabushiki Kaisha | Processing method and device for the coding of a document of hierarchized data |
US20100082813A1 (en) * | 2008-09-29 | 2010-04-01 | Microsoft Corporation | Multiple Parallel User Experiences Provided By a Single Set of Internet Hosting Machines |
CN102165430B (en) * | 2008-09-29 | 2014-03-26 | 微软公司 | Multiple parallel user experiences provided by a single set of internet hosting machines |
US7882174B2 (en) * | 2008-09-29 | 2011-02-01 | Microsoft Corporation | Multiple parallel user experiences provided by a single set of internet hosting machines |
CN102165430A (en) * | 2008-09-29 | 2011-08-24 | 微软公司 | Multiple parallel user experiences provided by a single set of internet hosting machines |
US20100194607A1 (en) * | 2009-02-05 | 2010-08-05 | Lsi Corporation | Data compression method and apparatus |
US7864085B2 (en) * | 2009-02-05 | 2011-01-04 | Lsi Corporation | Data compression method and apparatus |
US8924305B2 (en) * | 2009-02-20 | 2014-12-30 | Telefonaktiebolaget L M Ericsson (Publ) | DLNA data distribution from a remote source |
US20110307376A1 (en) * | 2009-02-20 | 2011-12-15 | Telefonaktiebolaget Lm Ericsson (Publ) | DLNA Data Distribution form a Remote Source |
US8874793B2 (en) | 2009-11-30 | 2014-10-28 | Qualcomm Innovation Center, Inc. | Methods and apparatus for improving header compression |
JP2013512645A (en) * | 2009-11-30 | 2013-04-11 | クゥアルコム・インコーポレイテッド | Method and apparatus for improving header compression |
US8601164B2 (en) | 2009-12-02 | 2013-12-03 | Garmin Switzerland Gmbh | HTTP header compression |
WO2011068731A3 (en) * | 2009-12-02 | 2011-11-24 | Garmin Switzerland Gmbh | Http header compression |
US20110131412A1 (en) * | 2009-12-02 | 2011-06-02 | Garmin Ltd. | Http header compression |
WO2011068731A2 (en) * | 2009-12-02 | 2011-06-09 | Garmin Switzerland Gmbh | Http header compression |
US8630200B2 (en) | 2010-06-01 | 2014-01-14 | Meltwater News International Holdings, GmbH | Method and apparatus for embedding information in a short URL |
US10277658B2 (en) * | 2010-07-14 | 2019-04-30 | Google Llc | Reduction of web page load time using http header compression |
US9001886B2 (en) | 2010-11-22 | 2015-04-07 | Cisco Technology, Inc. | Dynamic time synchronization |
US10154320B2 (en) | 2010-11-22 | 2018-12-11 | Cisco Technology, Inc. | Dynamic time synchronization |
US8683013B2 (en) | 2011-04-18 | 2014-03-25 | Cisco Technology, Inc. | System and method for data streaming in a computer network |
US8566922B2 (en) | 2011-05-25 | 2013-10-22 | Barry W. Hargis | System for isolating a secured data communication network |
US8898717B1 (en) * | 2012-01-11 | 2014-11-25 | Cisco Technology, Inc. | System and method for obfuscating start-up delay in a linear media service environment |
US9591098B2 (en) | 2012-02-01 | 2017-03-07 | Cisco Technology, Inc. | System and method to reduce stream start-up delay for adaptive streaming |
US10521250B2 (en) | 2012-09-12 | 2019-12-31 | The Directv Group, Inc. | Method and system for communicating between a host device and user device through an intermediate device using a composite video signal |
US20140075486A1 (en) * | 2012-09-12 | 2014-03-13 | The Directv Group, Inc. | Method and system for communicating between a host device and user device through an intermediate device using syntax translation |
US9535722B2 (en) | 2012-09-12 | 2017-01-03 | The Directv Group, Inc. | Method and system for communicating between a host device and a user device through an intermediate device using a composite graphics signal |
US9137501B2 (en) * | 2012-09-12 | 2015-09-15 | The Directv Group, Inc. | Method and system for communicating between a host device and user device through an intermediate device using syntax translation |
US9081790B2 (en) | 2012-09-18 | 2015-07-14 | Squash Compression, LLC | Methods and apparatus for increasing the efficiency of electronic data storage and transmission |
US8639753B1 (en) | 2012-09-18 | 2014-01-28 | Squash Compression, LLC | Methods and apparatus for increasing the efficiency of electronic data storage and transmission |
CN104184574B (en) * | 2013-05-22 | 2019-04-16 | 中兴通讯股份有限公司 | Intelligent mobile terminal and its data processing method |
CN104184574A (en) * | 2013-05-22 | 2014-12-03 | 中兴通讯股份有限公司 | Intelligent mobile terminal and data processing method thereof |
US9923945B2 (en) | 2013-10-10 | 2018-03-20 | Cisco Technology, Inc. | Virtual assets for on-demand content generation |
TWI665625B (en) * | 2014-08-05 | 2019-07-11 | 香港商阿里巴巴集團服務有限公司 | Method and device for message operation |
US20170201601A1 (en) * | 2016-01-12 | 2017-07-13 | International Business Machines Corporation | Data transfer policies between source and target servers in a wide area network |
US10205801B2 (en) * | 2016-01-12 | 2019-02-12 | International Business Machines Corporation | Data transfer policies between source and target servers in a wide area network |
Also Published As
Publication number | Publication date |
---|---|
WO2000067382A2 (en) | 2000-11-09 |
CA2372899A1 (en) | 2000-11-09 |
AU4226800A (en) | 2000-11-17 |
WO2000067382A3 (en) | 2001-03-01 |
CA2372899C (en) | 2009-06-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6345307B1 (en) | Method and apparatus for compressing hypertext transfer protocol (HTTP) messages | |
US10826748B2 (en) | Service gateway for interactive television | |
KR100540495B1 (en) | A method and apparatus for compressing a continuous, indistinct data stream | |
CN100349446C (en) | Improved apparatus and method for processing multi-media and general internetwork | |
US7490346B2 (en) | Digital television application protocol for interactive television | |
US6449658B1 (en) | Method and apparatus for accelerating data through communication networks | |
US6938270B2 (en) | Communicating scripts in a data service channel of a video signal | |
EP2083359B1 (en) | System and method for enhancing network-browsing speed by setting a proxy server on a handheld device | |
JP2001511984A (en) | Compression of Internet upstream requests | |
AU2002237989A1 (en) | A service gateway for interactive television | |
CA2223095A1 (en) | Mapping uniform resource locators to broadcast addresses in a television signal | |
AU2002240200A1 (en) | A digital television application protocol for interactive television | |
WO2001063485A2 (en) | Content distribution system | |
Werner et al. | WSDL-driven SOAP compression | |
EP1279267A2 (en) | Method and apparatus for compressing scripting language content | |
KR100417601B1 (en) | Apparatus for interfaceing between webbrowser and dsm-cc | |
STANDARD | Declarative Data Essence—Content Level |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BOOTH, ROBERT CHARLES;REEL/FRAME:010396/0604Effective date: 19991111 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034452/0001Effective date: 20141028 |
US20140114967A1 - Spreading comments to other documents - Google Patents
Spreading comments to other documents Download PDFInfo
- Publication number
- US20140114967A1 US20140114967A1 US14/144,811 US201314144811A US2014114967A1 US 20140114967 A1 US20140114967 A1 US 20140114967A1 US 201314144811 A US201314144811 A US 201314144811A US 2014114967 A1 US2014114967 A1 US 2014114967A1
- Authority
- US
- United States
- Prior art keywords
- comment
- document
- documents
- score
- author
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G06F17/30011—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
Definitions
- a user may enter a search query into a search box of a browser and the browser may submit the search query to a search engine.
- the search engine may identify documents that match the search query, rank the documents based on various factors, and return a ranked list of documents to the user.
- the user may select a document from the list and request the document.
- a browser may retrieve the requested document and display the document to the user in a browser window.
- the amount of information that is available to users on the web can be overwhelming. It is a difficult task to present users with information in which the users are interested.
- a method, performed by a server device may include receiving a comment associated with a first document, the comment corresponding to a portion of the first document; determining that a size of the portion of the first document is greater than a threshold size; identifying one or more second documents when the size of the portion of the first document is greater than the threshold size, where each of the one or more second documents may include a portion that matches the portion of the first document; storing, in a memory associated with the server device, the comment in association with the first document and the one or more second documents; and presenting the comment in connection with one of the one or more second documents when the one of the one or more second documents is accessed by a user.
- a system may include one or more devices.
- the one or more devices may receive a comment associated with a first document, the comment providing an opinion or remark regarding a portion of the first document; determine that a size of the portion of the first document is greater than a threshold size; identify a second document when the size of the portion of the first document is greater than the threshold size, where the second document may include a portion that matches the portion of the first document; store the comment in association with the first document and the second document; receive, from a client device, information that the client device is accessing the second document; and transmit the comment for presentation in connection with the second document on a display associated with the client device.
- a server device may include a memory and a processor.
- the processor may receive a comment associated with a first document, the comment corresponding to a first portion of the first document; identify a second document that includes a second portion that matches the first portion of the first document; store, in the memory, the comment in association with the first document and the second document; receive, from a client device, information that the client device is accessing the second document; and transmit the comment for presentation in connection with the second document on a display associated with the client device.
- FIG. 1 is a diagram illustrating an exemplary overview of an implementation described herein;
- FIG. 2 is a diagram of an exemplary environment in which systems and methods described herein may be implemented
- FIG. 3 is a diagram of exemplary components of a client or a server of FIG. 2 ;
- FIG. 4 is a diagram of functional components of a server of FIG. 2 ;
- FIG. 5 is a diagram of exemplary fields that may be provided within the comments database of FIG. 4 ;
- FIG. 6 is a flowchart of an exemplary process for creating a comment
- FIGS. 7 and 8 are diagrams of examples of creating a comment
- FIG. 9 is a flowchart of an exemplary process for spreading a comment to other documents.
- FIG. 10 is a flowchart of an exemplary process for presenting a comment in connection with a document.
- FIGS. 11 and 12 are diagrams of examples of presenting a comment.
- a “comment,” as used herein, may include text (e.g., styled or markup text, such as HyperText Markup Language (HTML)), audio data, video data, and/or image data that provides an opinion of, or otherwise remarks upon, the contents of a document or a portion of a document.
- text e.g., styled or markup text, such as HyperText Markup Language (HTML)
- audio data e.g., audio data, video data, and/or image data that provides an opinion of, or otherwise remarks upon, the contents of a document or a portion of a document.
- One example of a comment may include a document whose sole purpose is to contain the opinion/remark.
- Another example of a comment may include a blog post.
- Yet another example of a comment may include a web page or a news article that remarks upon an item (e.g., a product, a service, a company, a web site, a person, a geographic location, or something else that can be remarked upon).
- an item e.g., a product, a service, a company, a web site, a person, a geographic location, or something else that can be remarked upon.
- a “document,” as the term is used herein, is to be broadly interpreted to include any machine-readable and machine-storable work product.
- a document may include, for example, an e-mail, a web site, a file, a combination of files, one or more files with embedded links to other files, a news group posting, a news article, a blog, a business listing, an electronic version of printed text, a web advertisement, etc.
- a common document is a web page.
- Documents often include textual information and may include embedded information (such as meta information, images, hyperlinks, etc.) and/or embedded instructions (such as Javascript, etc.).
- a “link,” as the term is used herein, is to be broadly interpreted to include any reference to/from a document from/to another document or another part of the same document.
- FIG. 1 is a diagram illustrating an exemplary overview of an implementation described herein.
- a user requests access to a web page about a particular topic (shown as “web page 1” in FIG. 1 ).
- the user may decide to provide a comment regarding a portion of the web page.
- the user may select a portion of the web page to comment upon (shown as “portion” in FIG. 1 ).
- the user might activate the commenting function to provide the comment.
- the user may then provide an opinion or remark for the comment (shown as “comment” in FIG. 1 ).
- the comment may be stored in a database in association with the web page.
- Other web pages that contain the same, or similar, portion may be identified (shown as web pages 2, 3, 4, 5, . . . , N in FIG. 1 ).
- the comment may then be associated with these other web pages too.
- the comment (which was originally created for a portion of web page 1) can also be presented.
- FIG. 2 is a diagram of an exemplary environment 200 in which systems and methods described herein may be implemented.
- Environment 200 may include multiple clients 210 connected to multiple servers 220 - 240 via a network 250 .
- Two clients 210 and three servers 220 - 240 have been illustrated as connected to network 250 for simplicity. In practice, there may be more or fewer clients and servers.
- a client may perform a function of a server and a server may perform a function of a client.
- Clients 210 may include client entities.
- An entity may be defined as a device, such as a personal computer, a wireless telephone, a personal digital assistant (PDA), a lap top, or another type of computation or communication device, a thread or process running on one of these devices, and/or an object executed by one of these devices.
- a client 210 may include a browser application that permits documents to be searched and/or accessed.
- Client 210 may also include software, such as a plug-in, an applet, a dynamic link library (DLL), or another executable object or process, that may operate in conjunction with (or be integrated into) the browser to obtain and display comments.
- DLL dynamic link library
- Client 210 may obtain the software from server 220 or from a third party, such as a third party server, disk, tape, network, CD-ROM, etc. Alternatively, the software may be pre-installed on client 210 . For the description to follow, the software will be described as integrated into the browser.
- the browser may provide a commenting function.
- the commenting function may permit a user to generate a comment regarding a document, permit the user to view a comment that was previously generated by the user or by other users, and/or permit the user to remove a comment from presentation via the browser (e.g., hide the comment from view).
- Servers 220 - 240 may include server entities that gather, process, search, and/or maintain documents in a manner described herein.
- server 220 may gather, process, and/or maintain comments that are associated with particular documents.
- Servers 230 and 240 may store or maintain comments and/or documents.
- servers 220 - 240 are shown as separate entities, it may be possible for one or more of servers 220 - 240 to perform one or more of the functions of another one or more of servers 220 - 240 .
- servers 220 - 240 may be possible that two or more of servers 220 - 240 are implemented as a single server. It may also be possible for a single one of servers 220 - 240 to be implemented as two or more separate (and possibly distributed) devices.
- server system is intended to refer to a single server 220 - 240 (whether implemented as a single device or multiple devices) or a group of servers 220 - 240 .
- Network 250 may include any type of network, such as a local area network (LAN), a wide area network (WAN), a telephone network (e.g., the Public Switched Telephone Network (PSTN) or a cellular network), an intranet, the Internet, or a combination of networks.
- LAN local area network
- WAN wide area network
- PSTN Public Switched Telephone Network
- FIG. 3 is a diagram of exemplary components of a client or server entity (hereinafter called “client/server entity”), which may correspond to one or more of clients 210 and/or servers 220 - 240 .
- the client/server entity may include a bus 310 , a processor 320 , a main memory 330 , a read only memory (ROM) 340 , a storage device 350 , an input device 360 , an output device 370 , and a communication interface 380 .
- client/server entity may include additional, fewer, different, or differently arranged components than are illustrated in FIG. 3 .
- Bus 310 may include a path that permits communication among the components of the client/server entity.
- Processor 320 may include a processor, a microprocessor, or processing logic (e.g., an application specific integrated circuit (ASIC) or a field programmable gate array (FPGA)) that may interpret and execute instructions.
- Main memory 330 may include a random access memory (RAM) or another type of dynamic storage device that may store information and instructions for execution by processor 320 .
- ROM 340 may include a ROM device or another type of static storage device that may store static information and instructions for use by processor 320 .
- Storage device 350 may include a magnetic and/or optical recording medium and its corresponding drive, or a removable form of memory, such as a flash memory.
- the term “memory,” as used herein, is intended to be broadly interpreted to refer to any type of memory or storage device, such as main memory 330 , ROM 340 , and storage device 350 .
- Input device 360 may include a mechanism that permits an operator to input information to the client/server entity, such as a keyboard, a mouse, a button, a pen, a touch screen, voice recognition and/or biometric mechanisms, etc.
- Output device 370 may include a mechanism that outputs information to the operator, including a display, a light emitting diode (LED), a speaker, etc.
- Communication interface 380 may include any transceiver-like mechanism that enables the client/server entity to communicate with other devices and/or systems. For example, communication interface 380 may include mechanisms for communicating with another device or system via a network, such as network 250 .
- the client/server entity may perform certain operations relating to the generation and presentation of comments.
- the client/server entity may perform these operations in response to processor 320 executing software instructions contained in a computer-readable medium, such as memory 330 .
- a computer-readable medium may be defined as a logical or physical memory device.
- a logical memory device may include a space within a single physical memory device or spread across multiple physical memory devices.
- the software instructions may be read into memory 330 from another computer-readable medium, such as storage device 350 , or from another device via communication interface 380 .
- the software instructions contained in memory 330 may cause processor 320 to perform processes that will be described later.
- hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein.
- implementations described herein are not limited to any specific combination of hardware circuitry and software.
- FIG. 4 is a diagram of exemplary functional components of server 220 .
- server 220 may include a comments component 410 , a comments database 420 , a search engine component 430 , and an index database 440 .
- server 220 may include more or fewer functional components.
- one or more of the functional components shown in FIG. 4 may be located in a device separate from server 220 .
- Comments component 410 may interact with clients 210 to obtain and/or serve comments. For example, a user of a client 210 may access a particular document and generate a comment regarding a portion of the document.
- a “document portion,” as used herein, is intended to refer to less than the entire document. The document portion may include some amount of text (e.g., some number of words), an image, a video, or some audio.
- Client 210 may send the comment and information regarding the document portion to comments component 410 .
- Comments component 410 may receive the comment provided by a client 210 in connection with the particular document. Comments component 410 may gather certain information regarding the comment, such as information regarding the author of the comment, a timestamp that indicates a date and/or time at which the comment was created or modified, the content of the comment, the portion of the document with which the comment is associated (e.g., the actual portion or some identifier that indicates where the portion is located within the document), and/or an identifier, such as a uniform resource locator (URL), associated with the document. Comments component 410 may receive at least some of this information from client 210 . Comments component 410 may store the information regarding the comment in comments database 420 .
- information regarding the author of the comment such as information regarding the author of the comment, a timestamp that indicates a date and/or time at which the comment was created or modified, the content of the comment, the portion of the document with which the comment is associated (e.g., the actual portion or some identifier that indicates where the portion is located within the document), and
- Comments component 410 may also serve a comment in connection with a document accessed by a client 210 .
- comments component 410 may obtain a comment from comments database 420 and provide that comment to client 210 when client 210 accesses a document with which that comment is associated in comments database 420 .
- Comments database 420 may store information regarding comments.
- comments database 420 may include various fields that are separately searchable.
- Comments component 410 may search comments database 420 to identify comments associated with a particular author or a particular document.
- FIG. 5 is a diagram of exemplary fields that may be provided within comments database 420 .
- comments database 420 may include an author field 510 , a timestamp field 520 , a comment content field 530 , a document portion field 540 , an original document identifier (ID) field 550 , an other document identifiers (IDs) field 560 , and a rating(s) field 570 .
- comments database 420 may include more or fewer fields.
- Author field 510 may store information regarding the author of the comment.
- author field 510 may store the name of the author (e.g., actual name or online name), an image of the author, a graphic associated with the author, the name of a geographic location of the author, or other information regarding the author.
- Timestamp field 520 may store the date and/or time that the comment was created or modified. The date/time for timestamp field 520 may be generated by client 210 at which the comment was created or modified, or may be generated by server 220 based on a date/time at which the comment or modification is received from client 210 . For a comment that has multiple revisions, timestamp field 520 may store the date and/or time that one or more, or all, of the revisions occurred.
- Comment content field 530 may store the content of the comment.
- the content of a comment may include text, video data, image data, and/or audio data.
- comment content field 530 may store the actual content of the comment.
- comment content field 530 may store a pointer to a storage location where the actual content of the comment is stored.
- Document portion field 540 may store the content of the document portion with which the comment is associated.
- the content of the document portion may include text, video, image, and/or audio data.
- document portion field 540 may store the actual content of the document portion.
- document portion field 540 may store a pointer to a storage location where the actual content of the document portion is stored.
- document portion field 530 may store an identifier, such as an offset, that identifies where the document portion occurs within the document in which the document portion is located.
- Original document identifier field 550 may store an address (e.g., a URL), or another type of unique identifier, for the document for which the comment was originally created.
- Other document identifiers field 560 may store an address, or another type of unique identifier, for one or more other documents with which the comment has been associated.
- a comment created regarding a portion of one document may be associated with other documents that have the same, or similar, portion.
- Rating(s) field 570 may store a rating for the comment.
- a rating may be based on user feedback regarding the comment. For example, users may be permitted to rate a comment (favorably or unfavorably). These ratings may be used to determine whether and/or how to present the comment in connection with a particular document or any document.
- a single rating may be maintained for a comment. That single rating may be used to determine whether and/or how to present the comment in connection with any document with which the comment has been associated.
- a separate rating may be maintained for each document (or for a group of documents) with which the comment has been associated. In this case, the rating, associated with a particular document, may be used to determine whether to present the comment in connection with that particular document.
- search engine component 430 may receive the document portion from comments component 410 and locate other documents that include the same, or similar, document portion.
- search engine component 430 may locate other documents that include the same, or similar, text.
- search engine component 430 may locate other documents that include the same, or similar, image data.
- search engine component 430 may locate other documents that include the same, or similar, video data.
- search engine component 430 may locate other documents that include the same, or similar, audio data.
- Search engine component 430 may use one of these techniques to locate a document with a matching document portion.
- Techniques also exist for locating approximately matching text, image data, video data, and audio data. These techniques may determine a concept or topic associated with the document portion and locate another document portion relating to the same concept or topic. Alternatively, or additionally, these techniques may identify two document portions as matching if at least a threshold amount of the two document portions match. Alternatively, or additionally, these techniques may be based on synonyms.
- a document portion has to be greater than a particular size before search engine component 430 locates matching document portions in other documents.
- the document portion may need to include more than a threshold number of terms (e.g., words).
- a threshold number of terms e.g., words
- the document portion may need to be larger than a certain image size.
- the document portion may need to be larger than a certain length (or duration).
- Index database 440 may include one or more indexes. If index database 440 includes more than one index, index database 440 may store the indexes in the same data structure or in different data structures that may be searched independently of one another. Each of the one or more indexes may include multiple index entries, with each entry containing a term stored in association with an item, from a document, in which the term appears, and a location within the document where the term appears.
- FIG. 6 is a flowchart of an exemplary process for creating a comment.
- the process of FIG. 6 may be performed by one or more components within client 210 , server 220 , or a combination of client 210 and server 220 .
- the process may be performed by one or more components within another device or a group of devices separate from or including client 210 and/or server 220 .
- FIG. 6 shows blocks in a particular order, the actual order may differ. For example, some blocks may be performed in parallel or in a different order than shown in FIG. 6 .
- the process of FIG. 6 may include presenting a document to a user of client 210 (block 610 ).
- the user may access the document via a browser application operating on client 210 .
- the user might enter an address (e.g., a URL) into the address field of the browser, the user might select a document from a list of documents (e.g., a list of favorites or bookmarks), or the user might perform a search using a search engine and select a search result corresponding to the document.
- An option to provide a comment regarding the document may be presented (block 620 ).
- the browser may include a user interface item (e.g., a button, a menu item, etc.) that may permit the user to turn on and turn off the commenting function provided by the browser.
- the user may select this user interface item to create a comment, to view a comment, and/or to remove a presented comment from view (e.g., hide the comment from view).
- FIG. 7 is a diagram of an exemplary user interface that may be presented to a user to permit the user to activate the commenting function of the browser.
- a browser window 700 may include an add-on toolbar 710 that includes a search box and a number of software buttons.
- toolbar 710 may include a comments button 720 .
- Comments button 720 may optionally include information regarding the number of comments (shown as “(2)” in FIG. 7 ) that have been previously associated with the document that the user is currently accessing (shown as “www.javatalk.com/tostrings.htm” in FIG. 7 ).
- Comments button 720 may permit the user to turn on and off the commenting function.
- selection of comments button 720 may cause a menu 730 to be presented.
- Menu 730 may include a number of options including, for example, an option to create a comment 732 , an option to show previously created comments 734 , and an option to hide the comments 736 .
- the user may select option 732 to generate a comment regarding the document that the user is currently accessing.
- the user may select option 734 to view a comment that was previously associated with the document that the user is currently accessing (e.g., FIG. 7 shows that two comments have been previously associated with the document).
- the user may select option 736 to remove any presented comments from view (e.g., hide the comments from view).
- selection of a portion of the document may be received (block 630 ).
- the user may select a portion of the document upon which to comment (referred to hereinafter as “document portion”).
- the document portion may correspond to text, video data, image data, and/or audio data from the document.
- the document portion may include less than the entirety of the document.
- the user might select the document portion using any existing technique, such as a technique involving the user's mouse or keyboard.
- Selection of the option to provide a comment regarding the document may be received (block 640 ).
- the user might activate the commenting feature.
- the user might activate the commenting feature by selecting an item from a menu or by selecting a button on a toolbar. As shown in FIG. 7 , for example, the user may select comments button 720 on toolbar 710 within browser window 700 , and/or may select option 734 on menu 730 .
- a user interface may be presented to the user for creating the comment (block 650 ).
- the browser may present the user with a user interface via which the user may create a comment regarding the document portion.
- the content of the comment may be received (block 660 ).
- the user may, via the user interface, input the content of the comment and/or insert a file as the content of the comment.
- FIG. 8 is a diagram of an exemplary user interface that may be presented to a user to permit the user to create a comment.
- browser window 700 may present a user interface 800 via which the user may enter the contents of the comment.
- User interface 800 may include input section 810 , an option 820 to insert a file, a tags section 830 , and save/discard options 840 .
- Input section 810 may include an area into which the user may insert the contents of the comment (whether in the form of text, image data, video data, and/or audio data).
- Option 820 may permit the user to identify a file to be inserted into or attached to the comment.
- Tags section 830 may permit the user to identify keywords to associate with the comment.
- Save/discard options 840 may permit the user to select whether to save the comment or discard the comment without saving the comment.
- information associated with the comment may be stored (block 670 ).
- the browser of client 210 may send information associated with the comment to comments component 410 of server 220 .
- This information may include, for example, the name of the author of the comment (e.g., the user's name), a timestamp indicating the date and/or time that the comment was created or modified, the content of the comment, the document portion to which the comment corresponds, and/or the document identifier for the document containing the document portion (referred to herein as “originating document”).
- Comments component 410 may create or update an entry in comments database 420 using this information.
- FIG. 9 is a flowchart of an exemplary process for spreading a comment to other documents.
- the process of FIG. 9 may be performed by one or more components within server 220 , client 210 , or a combination of server 220 and client 210 .
- the process may be performed by one or more components within another device or a group of devices separate from or including server 220 and/or client 210 .
- FIG. 9 shows blocks in a particular order, the actual order may differ. For example, some blocks may be performed in parallel or in a different order than shown in FIG. 9 .
- the process of FIG. 9 may be periodically performed on comments stored in comments database 420 .
- the process of FIG. 9 may be performed, with regard to a particular comment, after information associated with that particular comment is stored in comments database 420 .
- the information associated with a comment, stored in comments database 420 may include, for example, the name of the author of the comment, a timestamp indicating the date and/or time that the comment was created or modified, the content of the comment, the document portion to which the comment corresponds, and/or the document identifier for the originating document.
- a comment may be selected (block 910 ).
- comments component 410 may select an entry, corresponding to a comment, in comments database 420 . It may be determined whether the size of the document portion, corresponding to the comment, is greater than a threshold (T/H) size (block 920 ).
- T/H threshold
- comments component 410 may determine whether the size of the document portion included in, or identified by, the entry (e.g., in the document portion field 540 of the entry) is greater than a threshold size.
- comments component 410 may determine whether the text includes a number of terms (e.g., words) greater than a threshold number of terms.
- comments component 410 may determine whether the image data has an image size greater than a threshold image size.
- comments component 410 may determine whether a length (or duration) of the video or audio data is greater than a threshold length (or duration).
- search engine component 430 may locate documents that contain a document portion that exactly matches the document portion of the originating document. In another implementation, search engine component 430 may locate documents that contain a document portion that is similar to the document portion of the originating document. In this case, search engine component 430 may determine a degree of match between the document portions and may generate a score that reflects this degree of match. Exemplary techniques for determining whether two document portions match, will be described below.
- the comment may be associated with the located documents (block 940 ).
- search engine component 430 may provide information regarding the located documents to comments component 410 .
- the information, provided to comments component 410 may include addresses (e.g., URLs) of the located documents.
- the information, provided to comments component 410 may additionally include the score reflecting the degree of match between the document portions.
- Comments component 410 may update the entry, corresponding to the comment, in comments database 420 with the information regarding the located documents.
- comments component 410 may store the addresses of the located documents (and perhaps the scores reflecting the degree of match between the document portions) in the other document identifiers field 560 in comments database 420 .
- a next comment may be selected (block 950 ).
- comments component 410 may select another comment to process and return to block 920 or block 930 .
- the process of FIG. 9 may end without selecting a next comment to process.
- a next comment may be selected (block 950 ).
- comments component 410 may select another comment to process and return to block 920 or block 930 .
- comments component 410 may mark an entry containing a comment associated with a document portion with a size that is not greater than the threshold size by, for example, setting a flag.
- comments component 410 may select a next comment to process as a comment that has a document portion with a size that is greater than the threshold size.
- the process of FIG. 9 may end without selecting a next comment to process.
- Document portions of small size may result in the identification of a large number of documents with matching document portions, where these documents do not contain content that is relevant to the subject of the comment.
- the document portion may have a certain size, before associating the comment with other documents (i.e., other than the originating document), may result in the comments being more meaningfully presented in connection with other documents.
- a feature other than (or in addition to) the size of the document portion for which the comment was originally created, may be used to determine whether to associate a comment with other documents.
- comments may be associated with other documents based on a score assigned to the comment. A score may be generated for a comment using one or more factors that will be described in detail below. A comment may be associated with the other documents when the score of the comment is greater than a certain threshold.
- other features, or a combination of features may be used to determine whether to associate a comment with other documents.
- search engine component 430 may locate documents that contain a document portion that matches the document portion of the originating document.
- the technique(s) used to identify a match may differ based on whether the document portion includes text, image data, video data, and/or audio data.
- search engine component 430 may determine, given the text of the document portion, whether the document portion text matches text in other documents included in index database 440 .
- Search engine component 430 may generate a confidence score for each document that indicates how near a match the document portion text is to text in the other documents.
- Search engine component 430 may identify other documents with confidence scores above a certain threshold as documents containing document portions matching the document portion of the originating document.
- search engine component 430 may use a chunking technique.
- the chunking technique takes sets of contiguous terms (where each set may share one or more terms with a next or preceding set, or each set may share no terms with the next or preceding set) (called “chunks”), performs a hash on the chunks, and compares the number of matching chunks. By comparing the chunks, search engine component 430 may determine a percentage of overlap between two sets of text in two different documents. Search engine component 430 may generate a confidence score based on the amount of overlap between the chunks of the two sets of text.
- search engine component 430 may use a similarity detection technique.
- the similarity detection technique may consider a set of text as a vector of terms. For example, a vector may be created for each group of terms (e.g., sentence) in the set of text. The vector may include an entry for each unique term in the group.
- the similarity detection technique may generate a confidence score based on the number of the vectors that match between the two sets of text.
- search engine component 430 may use a different technique, or a combination of techniques, to identify a match between two sets of text. For example, search engine component 430 may perform a search on index database 440 to identify documents that contain at least a threshold number of terms of the document portion text. Search engine component 430 may then perform a text-matching technique to determine a confidence score that indicates how near a match the document portion text is to text in the identified documents.
- search engine component 430 may use a machine learning technique to learn rules for a model that may be used to determine whether two sets of text match. This technique may identify synonyms of terms and/or identify text that relate to a same topic or concept even if the text does not contain terms in common.
- search engine component 430 may determine, given the image data of the document portion, whether the document portion image matches an image in a document within index database 440 .
- Search engine component 430 may generate a confidence score for each document in index database 440 that indicates how near a match the document portion image is to an image in the documents.
- Search engine component 430 may identify documents with confidence scores above a certain threshold as documents with document portions that match the document portion of the originating document.
- search engine component 430 may use a technique that compares features of images.
- a number of different possible image features may be used. Examples of image features that may be used include image features based on, for example, intensity, color, edges, texture, wavelet-based techniques, or other aspects of the image.
- each image may be divided into small patches (e.g., rectangles, circles, etc.) and an intensity histogram computed for each patch.
- Each intensity histogram may be considered to be a feature for the image.
- a color histogram may be computed for each patch (or for different patches) within each image.
- a color histogram can be similarly computed to obtain a possible color-based histogram.
- the color histogram may be calculated using any known color space, such as the RGB (red, green, blue) color space, YIQ (luma (Y) and chrominance (IQ)), or another color space.
- Histograms can also be used to represent edge and texture information. For example, histograms can be computed based on patches of edge information or texture information in an image. For wavelet based techniques, a wavelet transform may be computed for each patch and used as an image feature.
- features may be computed only for certain areas within images.
- “objects of interest” within an image may be determined and image features may only be computed for the objects of interest.
- image features may only be computed for the objects of interest.
- the image feature being used is a color histogram
- a histogram may be computed for each patch in the image that includes an object of interest.
- Objects of interest within an image can be determined in a number of ways. For example, for color, objects of interest may be defined as points where there is high variation in color (i.e., areas where color changes significantly). In general, objects of interest can be determined mathematically in a variety of ways and are frequently based on determining discontinuities or differences from surrounding points.
- SIFT Scale-Invariant Feature Transform
- the various features described above may be computed using different image scales. For example, an image can be examined and features computed in its original scale and then features may be successively examined at smaller scales. Additionally or alternatively, features may be selected as features that are scale invariant or invariant to affine transformations.
- the SIFT technique for example, can be used to extract distinctive invariant objects from images. The extracted objects are invariant to image scale and rotation.
- a comparison function For each feature that is to be used, a comparison function may be used.
- a comparison function may operate to generate a confidence score defining a similarity between a particular feature computed for two images.
- the comparison function may include a simple histogram comparer function.
- a different comparison function may be used.
- search engine component 430 may use another technique, or a combination of techniques, to determine whether two images match.
- search engine component 430 may use a hash-based technique, a byte-by-byte comparison technique, or a cyclic redundancy check (CRC) technique.
- search engine component 430 may compare tag information (e.g., labels or other meta-data assigned to the images) to determine whether two images match.
- search engine component 430 may determine, given the video of the document portion, whether the document portion video matches a video in a document of index database 440 .
- Search engine component 430 may generate a confidence score for each document in index database 440 that indicates how near a match the document portion video is to a video in the documents (e.g., a document may include a link for playing or downloading the video or provide a player via which the video can be played).
- Search engine component 430 may identify documents with confidence scores above a certain threshold as documents with document portions that match the document portion of the originating document.
- search engine component 430 may use to identify a match.
- search engine component 430 may divide videos into frames and use a technique, similar to a technique used by search engine component 430 in determining image matches, to identify matches in the frames of two videos.
- Search engine component 430 may generate a confidence score that is based on the number of frames that match between two videos.
- search engine component 430 may use a technique that compares text data, such as closed captioning text or a speech transcription, associated with two videos to determine whether the videos match. In this case, search engine component 430 may use a technique similar to a technique used by search engine component 430 in identifying a text match. In yet another implementation, search engine component 430 may divide the videos into short clips and produce spatio-temporal descriptors that are used to identify matching videos. This technique is described in further detail in D. DeMenthon, “Video Retrieval of Near-Duplicates Using K-Nearest Neighbor Retrieval of Spatio-Temporal Descriptors,” Language and Media Processing (LAMP), University of Maryland Institute for Advanced Computer Studies (UMIACS), 2006.
- search engine component 430 may use another technique, or a combination of techniques, to determine whether two videos match.
- search engine component 430 may use a hash-based technique, a byte-by-byte comparison technique, or a cyclic redundancy check (CRC) technique.
- search engine component 430 may compare tag information (e.g., labels or other meta-data assigned to the videos) to determine whether two videos match.
- search engine component 430 may determine, given the audio data of the document portion, whether the audio document portion matches audio associated with documents in index database 440 .
- Search engine component 430 may generate a confidence score for each document in index database 440 that indicates how near a match the document portion audio is to audio in the documents (e.g., a document may include a link for playing or downloading the audio or provide a player via which the audio can be played).
- Search engine component 430 may identify documents with confidence scores above a certain threshold as documents with document portions that match the document portion of the originating document.
- search engine component 430 may use an audio fingerprinting technique.
- the audio fingerprinting technique may generate a fingerprint for segments of the audio and compare these segments to audio associated with documents in index database 440 . By comparing the segments, search engine component 430 may determine a percentage of overlap between two sets of audio. Search engine component 430 may generate a confidence score based on the amount of overlap between the segments of the two sets of audio.
- search engine component 430 may use a technique that compares text data, such as a speech transcription, associated with two sets of audio to determine whether the two sets of audio match.
- search engine component 430 may use a technique similar to a technique used by search engine component 430 in identifying text matches.
- search engine component 430 may use another technique, or a combination of techniques, to determine whether two sets of audio match.
- search engine component 430 may use a hash-based technique, a byte-by-byte comparison technique, or a cyclic redundancy check (CRC) technique.
- search engine component 430 may use tag information (e.g., labels or other meta-data assigned to the audio data) to determine whether two sets of audio match.
- search engine component 430 may locate documents that contain document portions that match the document portion of the originating document. Additionally, or alternatively, search engine component 430 may determine a concept or topic associated with the originating document and a concept or topic associated with each of the located documents. Search engine component 430 may remove, from further consideration, any documents relating to a concept or topic that does not match the concept or topic of the originating document.
- FIG. 10 is a flowchart of an exemplary process for presenting a comment in connection with a document.
- the process of FIG. 10 may be performed by one or more components within client 210 , server 220 , or a combination of client 210 and server 220 .
- the process may be performed by one or more components within another device or a group of devices separate from or including client 210 and/or server 220 .
- FIG. 10 shows blocks in a particular order, the actual order may differ. For example, some blocks may be performed in parallel or in a different order than shown in FIG. 10 .
- the process of FIG. 10 may include presenting a document to a user of client 210 (block 1010 ).
- the user may access the document via a browser application operating on client 210 .
- the user might enter an address (e.g., a URL) into the address field of the browser, the user might select a document from a list of documents (e.g., a list of favorites or bookmarks), or the user might perform a search using a search engine and select a search result corresponding to the document.
- An option to show comments associated with the document may be presented (block 1020 ).
- the browser may include a user interface item (e.g., a button, a menu item, etc.) that may permit the user to turn on and turn off the commenting function provided by the browser.
- the user may select this user interface item to create a comment, to view a comment, and/or to remove a presented comment from view (e.g., hide the comment from view).
- the showing of comments regarding a document may occur automatically.
- a comment, associated with a document may be automatically shown when the comment has a score above a particular threshold. Exemplary techniques for scoring comments are described below. Thus, in this implementation, a comment that does not have a sufficient score may not be automatically shown.
- FIG. 11 is a diagram of an exemplary user interface that may be presented to a user to permit the user to activate the commenting function of the browser.
- a browser window 1100 may include an add-on toolbar 1110 that includes a search box and a number of software buttons.
- toolbar 1110 may include a comments button 1120 .
- Comments button 1120 may optionally include information regarding the number of comments (shown as “(2)” in FIG. 11 ) that have been previously associated with the document that the user is currently accessing (shown as “www.javatimes.com” in FIG. 11 ).
- Comments button 1120 may permit the user to turn on and off the commenting function.
- selection of comments button 1120 may cause a menu 1130 to be presented.
- Menu 1130 may include a number of options including, for example, an option to create a comment 1132 , an option to show previously created comments 1134 , and an option to hide the comments 1136 .
- the user may select option 1132 to generate a comment regarding the document that the user is currently accessing.
- the user may select option 1134 to view a comment that was previously associated with the document that the user is currently accessing (e.g., FIG. 11 shows that two comments have been previously associated with the document).
- the user may select option 1136 to remove any presented comments from view (e.g., hide the comments from view).
- selection of the option to provide a comment regarding the document may be received (block 1030 ).
- the user might activate the commenting feature.
- the user might activate the commenting feature by selecting an item from a menu or by selecting a button on a toolbar.
- the user may select comments button 1120 on toolbar 1110 within browser window 1100 , and/or may select option 1134 on menu 1130 .
- a comment(s) to show in connection with the document may be selected (block 1040 ).
- client 210 may send, to server 220 , a request for comments associated with the document.
- client 210 may send information regarding the document, such as a document identifier for the document, to comments component 410 .
- Comments component 410 may search comments database 420 using, for example, the document identifier for the document to retrieve the comments associated with the document.
- an index of comments database 420 may be constructed that lists the comments associated with each document. The index may be constructed using existing indexing techniques. The constructed index may be used to select one or more comments to provide in connection with the document.
- the index for comments database 420 may only include those comments having a score above a certain threshold. Exemplary techniques for scoring comments are described below.
- Comments component 410 may select which comments to present and/or a manner for presenting the comments.
- comments component 410 may rank the comments in some manner. For example, comments component 410 may generate a score for each of the comments based on one or more factors associated with the comments.
- One factor for scoring a comment may include a rating of the comment.
- User feedback in the form of a rating, may be obtained for various comments.
- a user may be permitted to provide a rating with regard to a comment presented in connection with a particular document.
- the rating may indicate whether the user found the comment useful (positive rating) or not useful (negative rating) in connection with the particular document.
- the rating may indicate a degree of usefulness, such as a rating from 1 to 5. Not all ratings need to be treated equally.
- ratings from users may be weighted in some manner based on profiles of the users and/or a history of how the users' rating behavior has been in the past (e.g., how a user's past ratings compared to other users' ratings with regard to a particular comment or a particular set of comments).
- Comments component 410 may obtain the rating of a comment from rating(s) field 570 in comments database 420 . Comments component 410 may use the rating factor to score a comment and use the score of a comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores). By using a rating to score a comment, comments in which users are interested (e.g., that users find useful) may be presented in connection with a document before or, instead of, comments in which users are not interested (e.g., that users did not find useful).
- Another factor for scoring a comment may include a rank of an author of the comment.
- the author of a comment may be ranked based on one or more factors, such as the quantity of comments created by the author, a user feedback rating associated with the author (e.g., users might provide feedback regarding comments created by a particular author and this information may be used to rate the author), or whether the author is the user (e.g., users are typically interested in being presented with their own comments).
- Comments component 410 may use the author ranking factor to score a comment and use the score of the comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores).
- the rank of an author may reflect the quality of the comment created by that author. Thus, by using an author ranking to score a comment, comments associated with higher ranked authors may be presented over comments associated with lower ranked authors.
- Comments component 410 may obtain the timestamp from timestamp field 520 in comments database 420 . Comments component 410 may use the timestamp factor to score a comment and use the score of the comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores). More recent timestamps may reflect fresh, more relevant comments, and less recent timestamps may reflect stale, less relevant comments. In the case of comments with revisions, timestamps reflecting comments with more modifications may infer more relevant comments than comments with fewer modifications. Thus, by using a timestamp to score a comment, comments that are more recent (or that have more modifications), and thus, potentially more relevant, may be presented over comments that are older (or that have fewer modifications), and potentially less relevant.
- a further factor for scoring a comment may include a degree of match between the document portion, associated with the originating document, and the document portion associated with the document that the user is currently accessing. As described above, when search engine component 430 determines whether two document portions match, search engine component 430 may determine a degree of match between the document portions and generate a score based on this degree of match. Comments component 410 may use the degree of match factor to score a comment and use the score of the comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores).
- a comment may be more relevant to a document with a higher degree of match of its document portion than to a document with a lower degree of match to its document portion.
- comments that are associated with a higher degree of matching document portions may be presented over comments that are associated with a lower degree of matching document portions (thus, potentially less relevant to the document for which the comment is to be presented).
- Comments component 420 may use one or more of the above-identified factors, and/or other factors, in scoring the comments associated with the document. Comments component 420 may select one or more of the comments based on the scores of the comments.
- the selected comment(s) may be presented (block 1050 ).
- comments component 420 may send the selected comment(s) to client 210 for presentation by the browser of client 210 .
- the browser may present one or more of the comments within the browser window in which the document is presented.
- the browser may present one or more of the comments within a window separate from the window in which the document is presented.
- the browser may create a frame (e.g., a regular frame or iframe) and insert information regarding one or more comments in the frame.
- the browser may use another mechanism for presenting one or more of the comments.
- FIG. 12 is a diagram of an exemplary user interface via which a comment may be presented.
- browser window 1100 may include a document section 1210 and a comments section 1220 .
- Document section 1210 may include the content of the document that the user is currently accessing.
- document section 1210 may be highlighted to identify the portion of the document (i.e., “document portion”) to which the comment relates.
- Comments section 1220 may include a header section 1222 , an author name 1224 , a timestamp 1226 , a comment content 1228 , tags 1230 , rating option 1232 , options 1234 , and originating information 1236 .
- Header section 1222 may include information regarding a quantity of comments that exist for this document, an option to see a next (or previous) comment, and/or an option to add a comment.
- Author name 1224 may include the name of the user that created the comment.
- Timestamp 1226 may include the date and/or time at which the comment was created or modified.
- Comment content 1228 may include the content of the comment.
- Tags 1230 may include keywords that may relate to a concept or topic of the comment or the document for which the comment was created.
- Rating option 1232 may present an option to the user to rate the comment (favorable or unfavorable rating). Rating option 1232 may also present information that indicates how many users found the comment useful (and/or not useful).
- Options 1234 may present options to the user to edit the comment, delete the comment, and/or obtain additional information regarding the comment. The additional information may include information regarding the other documents with which the comment is associated.
- Originating information 1236 may include information regarding the document for which the comment was originally created (i.e., the originating document). Originating information 1236 may also present a link to the originating document.
- any user feedback may be recorded (block 1060 ). For example, if the user provides user feedback via rating option 1232 , the browser may capture this feedback and provide the feedback to comments component 410 .
- Comments component 410 may store the feedback in comments database 420 . In one implementation, comments component 410 may combine the feedback with other feedback already received for the comment and this particular document, or for the comment and any document with which the comment has been associated.
- Implementations, described herein, may spread comments from a document for which the comment was originally created to other documents for which the comment may be relevant.
- exemplary graphical user interfaces have been described with respect to FIGS. 7 , 8 , 11 , and 12 .
- the graphical user interfaces may include more, fewer, or different pieces of information.
- logic or a “component” that performs one or more functions.
- the terms “logic” or “component” may include hardware, such as a processor, an ASIC, or a FPGA, or a combination of hardware and software (e.g., software running on a general purpose processor—creating a specific purpose processor).
- scores are generated for comments.
- the scoring scheme has been described where higher scores are better than lower scores. This need not be the case. In another implementation, the scoring scheme may be switched to one in which lower scores are better than higher scores.
- comments may be created for entire documents.
Abstract
A server device is configured to receive a comment associated with a first document, the comment corresponding to a first portion of the first document; identify a second document that includes a second portion that matches the first portion of the first document; and store the comment in association with the first document and the second document. The server device is further configured to receive, from a client device, information that the client device is accessing the second document, and transmit the comment for presentation in connection with the second document on a display associated with the client device.
Description
- Many techniques are available to users today to find information on the world wide web (“web”). For example, users often use web browsers and/or search engines to find information of interest.
- A user may enter a search query into a search box of a browser and the browser may submit the search query to a search engine. The search engine may identify documents that match the search query, rank the documents based on various factors, and return a ranked list of documents to the user. The user may select a document from the list and request the document. A browser may retrieve the requested document and display the document to the user in a browser window.
- The amount of information that is available to users on the web can be overwhelming. It is a difficult task to present users with information in which the users are interested.
- According to one implementation, a method, performed by a server device, may include receiving a comment associated with a first document, the comment corresponding to a portion of the first document; determining that a size of the portion of the first document is greater than a threshold size; identifying one or more second documents when the size of the portion of the first document is greater than the threshold size, where each of the one or more second documents may include a portion that matches the portion of the first document; storing, in a memory associated with the server device, the comment in association with the first document and the one or more second documents; and presenting the comment in connection with one of the one or more second documents when the one of the one or more second documents is accessed by a user.
- According to another implementation, a system may include one or more devices. The one or more devices may receive a comment associated with a first document, the comment providing an opinion or remark regarding a portion of the first document; determine that a size of the portion of the first document is greater than a threshold size; identify a second document when the size of the portion of the first document is greater than the threshold size, where the second document may include a portion that matches the portion of the first document; store the comment in association with the first document and the second document; receive, from a client device, information that the client device is accessing the second document; and transmit the comment for presentation in connection with the second document on a display associated with the client device.
- According to yet another implementation, a server device may include a memory and a processor. The processor may receive a comment associated with a first document, the comment corresponding to a first portion of the first document; identify a second document that includes a second portion that matches the first portion of the first document; store, in the memory, the comment in association with the first document and the second document; receive, from a client device, information that the client device is accessing the second document; and transmit the comment for presentation in connection with the second document on a display associated with the client device.
- The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate one or more embodiments described herein and, together with the description, explain these embodiments. In the drawings:
-
FIG. 1 is a diagram illustrating an exemplary overview of an implementation described herein; -
FIG. 2 is a diagram of an exemplary environment in which systems and methods described herein may be implemented; -
FIG. 3 is a diagram of exemplary components of a client or a server ofFIG. 2 ; -
FIG. 4 is a diagram of functional components of a server ofFIG. 2 ; -
FIG. 5 is a diagram of exemplary fields that may be provided within the comments database ofFIG. 4 ; -
FIG. 6 is a flowchart of an exemplary process for creating a comment; -
FIGS. 7 and 8 are diagrams of examples of creating a comment; -
FIG. 9 is a flowchart of an exemplary process for spreading a comment to other documents; -
FIG. 10 is a flowchart of an exemplary process for presenting a comment in connection with a document; and -
FIGS. 11 and 12 are diagrams of examples of presenting a comment. - The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.
- For some documents, users might like to see users' comments regarding these documents. A “comment,” as used herein, may include text (e.g., styled or markup text, such as HyperText Markup Language (HTML)), audio data, video data, and/or image data that provides an opinion of, or otherwise remarks upon, the contents of a document or a portion of a document. One example of a comment may include a document whose sole purpose is to contain the opinion/remark. Another example of a comment may include a blog post. Yet another example of a comment may include a web page or a news article that remarks upon an item (e.g., a product, a service, a company, a web site, a person, a geographic location, or something else that can be remarked upon).
- A “document,” as the term is used herein, is to be broadly interpreted to include any machine-readable and machine-storable work product. A document may include, for example, an e-mail, a web site, a file, a combination of files, one or more files with embedded links to other files, a news group posting, a news article, a blog, a business listing, an electronic version of printed text, a web advertisement, etc. In the context of the Internet, a common document is a web page. Documents often include textual information and may include embedded information (such as meta information, images, hyperlinks, etc.) and/or embedded instructions (such as Javascript, etc.). A “link,” as the term is used herein, is to be broadly interpreted to include any reference to/from a document from/to another document or another part of the same document.
-
FIG. 1 is a diagram illustrating an exemplary overview of an implementation described herein. As shown inFIG. 1 , assume that a user requests access to a web page about a particular topic (shown as “web page 1” inFIG. 1 ). The user may decide to provide a comment regarding a portion of the web page. In this case, the user may select a portion of the web page to comment upon (shown as “portion” inFIG. 1 ). The user might activate the commenting function to provide the comment. The user may then provide an opinion or remark for the comment (shown as “comment” inFIG. 1 ). - The comment may be stored in a database in association with the web page. Other web pages that contain the same, or similar, portion may be identified (shown as
web pages FIG. 1 ). The comment may then be associated with these other web pages too. Thus, when a user accesses one of these other web pages, the comment (which was originally created for a portion of web page 1) can also be presented. -
FIG. 2 is a diagram of anexemplary environment 200 in which systems and methods described herein may be implemented.Environment 200 may includemultiple clients 210 connected to multiple servers 220-240 via anetwork 250. Twoclients 210 and three servers 220-240 have been illustrated as connected tonetwork 250 for simplicity. In practice, there may be more or fewer clients and servers. Also, in some instances, a client may perform a function of a server and a server may perform a function of a client. -
Clients 210 may include client entities. An entity may be defined as a device, such as a personal computer, a wireless telephone, a personal digital assistant (PDA), a lap top, or another type of computation or communication device, a thread or process running on one of these devices, and/or an object executed by one of these devices. In one implementation, aclient 210 may include a browser application that permits documents to be searched and/or accessed.Client 210 may also include software, such as a plug-in, an applet, a dynamic link library (DLL), or another executable object or process, that may operate in conjunction with (or be integrated into) the browser to obtain and display comments.Client 210 may obtain the software fromserver 220 or from a third party, such as a third party server, disk, tape, network, CD-ROM, etc. Alternatively, the software may be pre-installed onclient 210. For the description to follow, the software will be described as integrated into the browser. - In one implementation, as described herein, the browser may provide a commenting function. The commenting function may permit a user to generate a comment regarding a document, permit the user to view a comment that was previously generated by the user or by other users, and/or permit the user to remove a comment from presentation via the browser (e.g., hide the comment from view).
- Servers 220-240 may include server entities that gather, process, search, and/or maintain documents in a manner described herein. In one implementation,
server 220 may gather, process, and/or maintain comments that are associated with particular documents.Servers - While servers 220-240 are shown as separate entities, it may be possible for one or more of servers 220-240 to perform one or more of the functions of another one or more of servers 220-240. For example, it may be possible that two or more of servers 220-240 are implemented as a single server. It may also be possible for a single one of servers 220-240 to be implemented as two or more separate (and possibly distributed) devices. The term “server system,” as used herein, is intended to refer to a single server 220-240 (whether implemented as a single device or multiple devices) or a group of servers 220-240.
-
Network 250 may include any type of network, such as a local area network (LAN), a wide area network (WAN), a telephone network (e.g., the Public Switched Telephone Network (PSTN) or a cellular network), an intranet, the Internet, or a combination of networks.Clients 210 and servers 220-240 may connect to network 250 via wired and/or wireless connections. -
FIG. 3 is a diagram of exemplary components of a client or server entity (hereinafter called “client/server entity”), which may correspond to one or more ofclients 210 and/or servers 220-240. As shown inFIG. 3 , the client/server entity may include abus 310, aprocessor 320, amain memory 330, a read only memory (ROM) 340, astorage device 350, aninput device 360, anoutput device 370, and acommunication interface 380. In another implementation, client/server entity may include additional, fewer, different, or differently arranged components than are illustrated inFIG. 3 . -
Bus 310 may include a path that permits communication among the components of the client/server entity.Processor 320 may include a processor, a microprocessor, or processing logic (e.g., an application specific integrated circuit (ASIC) or a field programmable gate array (FPGA)) that may interpret and execute instructions.Main memory 330 may include a random access memory (RAM) or another type of dynamic storage device that may store information and instructions for execution byprocessor 320.ROM 340 may include a ROM device or another type of static storage device that may store static information and instructions for use byprocessor 320.Storage device 350 may include a magnetic and/or optical recording medium and its corresponding drive, or a removable form of memory, such as a flash memory. The term “memory,” as used herein, is intended to be broadly interpreted to refer to any type of memory or storage device, such asmain memory 330,ROM 340, andstorage device 350. -
Input device 360 may include a mechanism that permits an operator to input information to the client/server entity, such as a keyboard, a mouse, a button, a pen, a touch screen, voice recognition and/or biometric mechanisms, etc.Output device 370 may include a mechanism that outputs information to the operator, including a display, a light emitting diode (LED), a speaker, etc.Communication interface 380 may include any transceiver-like mechanism that enables the client/server entity to communicate with other devices and/or systems. For example,communication interface 380 may include mechanisms for communicating with another device or system via a network, such asnetwork 250. - As will be described in detail below, the client/server entity may perform certain operations relating to the generation and presentation of comments. The client/server entity may perform these operations in response to
processor 320 executing software instructions contained in a computer-readable medium, such asmemory 330. A computer-readable medium may be defined as a logical or physical memory device. A logical memory device may include a space within a single physical memory device or spread across multiple physical memory devices. - The software instructions may be read into
memory 330 from another computer-readable medium, such asstorage device 350, or from another device viacommunication interface 380. The software instructions contained inmemory 330 may causeprocessor 320 to perform processes that will be described later. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus, implementations described herein are not limited to any specific combination of hardware circuitry and software. -
FIG. 4 is a diagram of exemplary functional components ofserver 220. As shown inFIG. 4 ,server 220 may include acomments component 410, acomments database 420, a search engine component 430, and anindex database 440. In another implementation,server 220 may include more or fewer functional components. For example, one or more of the functional components shown inFIG. 4 may be located in a device separate fromserver 220. -
Comments component 410 may interact withclients 210 to obtain and/or serve comments. For example, a user of aclient 210 may access a particular document and generate a comment regarding a portion of the document. A “document portion,” as used herein, is intended to refer to less than the entire document. The document portion may include some amount of text (e.g., some number of words), an image, a video, or some audio.Client 210 may send the comment and information regarding the document portion tocomments component 410. -
Comments component 410 may receive the comment provided by aclient 210 in connection with the particular document.Comments component 410 may gather certain information regarding the comment, such as information regarding the author of the comment, a timestamp that indicates a date and/or time at which the comment was created or modified, the content of the comment, the portion of the document with which the comment is associated (e.g., the actual portion or some identifier that indicates where the portion is located within the document), and/or an identifier, such as a uniform resource locator (URL), associated with the document.Comments component 410 may receive at least some of this information fromclient 210.Comments component 410 may store the information regarding the comment incomments database 420. -
Comments component 410 may also serve a comment in connection with a document accessed by aclient 210. In one implementation, commentscomponent 410 may obtain a comment fromcomments database 420 and provide that comment toclient 210 whenclient 210 accesses a document with which that comment is associated incomments database 420. -
Comments database 420 may store information regarding comments. In one implementation, commentsdatabase 420 may include various fields that are separately searchable.Comments component 410 may searchcomments database 420 to identify comments associated with a particular author or a particular document. -
FIG. 5 is a diagram of exemplary fields that may be provided withincomments database 420. As shown inFIG. 5 , commentsdatabase 420 may include anauthor field 510, atimestamp field 520, acomment content field 530, adocument portion field 540, an original document identifier (ID)field 550, an other document identifiers (IDs)field 560, and a rating(s)field 570. In other implementations, commentsdatabase 420 may include more or fewer fields. -
Author field 510 may store information regarding the author of the comment. For example,author field 510 may store the name of the author (e.g., actual name or online name), an image of the author, a graphic associated with the author, the name of a geographic location of the author, or other information regarding the author.Timestamp field 520 may store the date and/or time that the comment was created or modified. The date/time fortimestamp field 520 may be generated byclient 210 at which the comment was created or modified, or may be generated byserver 220 based on a date/time at which the comment or modification is received fromclient 210. For a comment that has multiple revisions,timestamp field 520 may store the date and/or time that one or more, or all, of the revisions occurred. -
Comment content field 530 may store the content of the comment. For example, the content of a comment may include text, video data, image data, and/or audio data. In one implementation,comment content field 530 may store the actual content of the comment. In another implementation,comment content field 530 may store a pointer to a storage location where the actual content of the comment is stored.Document portion field 540 may store the content of the document portion with which the comment is associated. For example, the content of the document portion may include text, video, image, and/or audio data. In one implementation,document portion field 540 may store the actual content of the document portion. In another implementation,document portion field 540 may store a pointer to a storage location where the actual content of the document portion is stored. In yet another implementation,document portion field 530 may store an identifier, such as an offset, that identifies where the document portion occurs within the document in which the document portion is located. - Original
document identifier field 550 may store an address (e.g., a URL), or another type of unique identifier, for the document for which the comment was originally created. Otherdocument identifiers field 560 may store an address, or another type of unique identifier, for one or more other documents with which the comment has been associated. As will be described in detail below, a comment created regarding a portion of one document may be associated with other documents that have the same, or similar, portion. - Rating(s)
field 570 may store a rating for the comment. A rating may be based on user feedback regarding the comment. For example, users may be permitted to rate a comment (favorably or unfavorably). These ratings may be used to determine whether and/or how to present the comment in connection with a particular document or any document. In one implementation, a single rating may be maintained for a comment. That single rating may be used to determine whether and/or how to present the comment in connection with any document with which the comment has been associated. In another implementation, a separate rating may be maintained for each document (or for a group of documents) with which the comment has been associated. In this case, the rating, associated with a particular document, may be used to determine whether to present the comment in connection with that particular document. - Returning to
FIG. 4 , search engine component 430 may receive the document portion fromcomments component 410 and locate other documents that include the same, or similar, document portion. When the document portion includes text, search engine component 430 may locate other documents that include the same, or similar, text. When the document portion includes image data, search engine component 430 may locate other documents that include the same, or similar, image data. When the document portion includes video data, search engine component 430 may locate other documents that include the same, or similar, video data. When the document portion includes audio data, search engine component 430 may locate other documents that include the same, or similar, audio data. - Techniques exist for locating exactly matching text, image data, video data, and audio data. Search engine component 430 may use one of these techniques to locate a document with a matching document portion. Techniques also exist for locating approximately matching text, image data, video data, and audio data. These techniques may determine a concept or topic associated with the document portion and locate another document portion relating to the same concept or topic. Alternatively, or additionally, these techniques may identify two document portions as matching if at least a threshold amount of the two document portions match. Alternatively, or additionally, these techniques may be based on synonyms.
- In one implementation, a document portion has to be greater than a particular size before search engine component 430 locates matching document portions in other documents. For a document portion that includes text, the document portion may need to include more than a threshold number of terms (e.g., words). For a document portion that includes image data, the document portion may need to be larger than a certain image size. For a document portion that includes video or audio data, the document portion may need to be larger than a certain length (or duration).
- Search engine component 430 may locate documents by searching
index database 440.Index database 440 may include one or more indexes. Ifindex database 440 includes more than one index,index database 440 may store the indexes in the same data structure or in different data structures that may be searched independently of one another. Each of the one or more indexes may include multiple index entries, with each entry containing a term stored in association with an item, from a document, in which the term appears, and a location within the document where the term appears. -
FIG. 6 is a flowchart of an exemplary process for creating a comment. In one implementation, the process ofFIG. 6 may be performed by one or more components withinclient 210,server 220, or a combination ofclient 210 andserver 220. In another implementation, the process may be performed by one or more components within another device or a group of devices separate from or includingclient 210 and/orserver 220. Also, whileFIG. 6 shows blocks in a particular order, the actual order may differ. For example, some blocks may be performed in parallel or in a different order than shown inFIG. 6 . - The process of
FIG. 6 may include presenting a document to a user of client 210 (block 610). For example, the user may access the document via a browser application operating onclient 210. To obtain access to the document, for example, the user might enter an address (e.g., a URL) into the address field of the browser, the user might select a document from a list of documents (e.g., a list of favorites or bookmarks), or the user might perform a search using a search engine and select a search result corresponding to the document. - An option to provide a comment regarding the document may be presented (block 620). For example, the browser may include a user interface item (e.g., a button, a menu item, etc.) that may permit the user to turn on and turn off the commenting function provided by the browser. The user may select this user interface item to create a comment, to view a comment, and/or to remove a presented comment from view (e.g., hide the comment from view).
-
FIG. 7 is a diagram of an exemplary user interface that may be presented to a user to permit the user to activate the commenting function of the browser. As shown inFIG. 7 , abrowser window 700 may include an add-ontoolbar 710 that includes a search box and a number of software buttons. In one implementation,toolbar 710 may include acomments button 720.Comments button 720 may optionally include information regarding the number of comments (shown as “(2)” inFIG. 7 ) that have been previously associated with the document that the user is currently accessing (shown as “www.javatalk.com/tostrings.htm” inFIG. 7 ). -
Comments button 720 may permit the user to turn on and off the commenting function. In one implementation, selection ofcomments button 720 may cause amenu 730 to be presented.Menu 730 may include a number of options including, for example, an option to create acomment 732, an option to show previously createdcomments 734, and an option to hide thecomments 736. The user may selectoption 732 to generate a comment regarding the document that the user is currently accessing. The user may selectoption 734 to view a comment that was previously associated with the document that the user is currently accessing (e.g.,FIG. 7 shows that two comments have been previously associated with the document). The user may selectoption 736 to remove any presented comments from view (e.g., hide the comments from view). - Returning to
FIG. 6 , selection of a portion of the document may be received (block 630). For example, the user may select a portion of the document upon which to comment (referred to hereinafter as “document portion”). The document portion may correspond to text, video data, image data, and/or audio data from the document. As explained above, the document portion may include less than the entirety of the document. The user might select the document portion using any existing technique, such as a technique involving the user's mouse or keyboard. - Selection of the option to provide a comment regarding the document may be received (block 640). For example, the user might activate the commenting feature. In one implementation, the user might activate the commenting feature by selecting an item from a menu or by selecting a button on a toolbar. As shown in
FIG. 7 , for example, the user may selectcomments button 720 ontoolbar 710 withinbrowser window 700, and/or may selectoption 734 onmenu 730. - A user interface may be presented to the user for creating the comment (block 650). For example, in response to receiving selection of
comments button 720, the browser may present the user with a user interface via which the user may create a comment regarding the document portion. The content of the comment may be received (block 660). For example, the user may, via the user interface, input the content of the comment and/or insert a file as the content of the comment. -
FIG. 8 is a diagram of an exemplary user interface that may be presented to a user to permit the user to create a comment. As shown inFIG. 8 ,browser window 700 may present auser interface 800 via which the user may enter the contents of the comment.User interface 800 may includeinput section 810, anoption 820 to insert a file, atags section 830, and save/discardoptions 840.Input section 810 may include an area into which the user may insert the contents of the comment (whether in the form of text, image data, video data, and/or audio data).Option 820 may permit the user to identify a file to be inserted into or attached to the comment.Tags section 830 may permit the user to identify keywords to associate with the comment. Save/discardoptions 840 may permit the user to select whether to save the comment or discard the comment without saving the comment. - Returning to
FIG. 6 , information associated with the comment may be stored (block 670). For example, the browser ofclient 210 may send information associated with the comment tocomments component 410 ofserver 220. This information may include, for example, the name of the author of the comment (e.g., the user's name), a timestamp indicating the date and/or time that the comment was created or modified, the content of the comment, the document portion to which the comment corresponds, and/or the document identifier for the document containing the document portion (referred to herein as “originating document”).Comments component 410 may create or update an entry incomments database 420 using this information. -
FIG. 9 is a flowchart of an exemplary process for spreading a comment to other documents. In one implementation, the process ofFIG. 9 may be performed by one or more components withinserver 220,client 210, or a combination ofserver 220 andclient 210. In another implementation, the process may be performed by one or more components within another device or a group of devices separate from or includingserver 220 and/orclient 210. Also, whileFIG. 9 shows blocks in a particular order, the actual order may differ. For example, some blocks may be performed in parallel or in a different order than shown inFIG. 9 . - The process of
FIG. 9 may be periodically performed on comments stored incomments database 420. Alternatively, the process ofFIG. 9 may be performed, with regard to a particular comment, after information associated with that particular comment is stored incomments database 420. As described above, the information associated with a comment, stored incomments database 420, may include, for example, the name of the author of the comment, a timestamp indicating the date and/or time that the comment was created or modified, the content of the comment, the document portion to which the comment corresponds, and/or the document identifier for the originating document. - A comment may be selected (block 910). For example, comments
component 410 may select an entry, corresponding to a comment, incomments database 420. It may be determined whether the size of the document portion, corresponding to the comment, is greater than a threshold (T/H) size (block 920). For example, commentscomponent 410 may determine whether the size of the document portion included in, or identified by, the entry (e.g., in thedocument portion field 540 of the entry) is greater than a threshold size. When the document portion takes the form of text, commentscomponent 410 may determine whether the text includes a number of terms (e.g., words) greater than a threshold number of terms. When the document portion takes the form of image data, commentscomponent 410 may determine whether the image data has an image size greater than a threshold image size. When the document portion takes the form of video or audio data, commentscomponent 410 may determine whether a length (or duration) of the video or audio data is greater than a threshold length (or duration). - When the size of the document portion is greater than the threshold size (block 920—YES), other documents (other than the originating document) that contain the same, or similar, document portion may be located (block 930). For example, when the size of the document portion is greater than the threshold size, comments
component 410 may send the document portion to search engine component 430, or otherwise identify the document portion to search engine component 430. - In one implementation, search engine component 430 may locate documents that contain a document portion that exactly matches the document portion of the originating document. In another implementation, search engine component 430 may locate documents that contain a document portion that is similar to the document portion of the originating document. In this case, search engine component 430 may determine a degree of match between the document portions and may generate a score that reflects this degree of match. Exemplary techniques for determining whether two document portions match, will be described below.
- The comment may be associated with the located documents (block 940). For example, search engine component 430 may provide information regarding the located documents to
comments component 410. In one implementation, the information, provided tocomments component 410, may include addresses (e.g., URLs) of the located documents. In another implementation, the information, provided tocomments component 410 may additionally include the score reflecting the degree of match between the document portions.Comments component 410 may update the entry, corresponding to the comment, incomments database 420 with the information regarding the located documents. For example, commentscomponent 410 may store the addresses of the located documents (and perhaps the scores reflecting the degree of match between the document portions) in the otherdocument identifiers field 560 incomments database 420. - A next comment may be selected (block 950). For example, comments
component 410 may select another comment to process and return to block 920 or block 930. In the implementation where a comment is processed when an entry for the comment is created incomments database 420, the process ofFIG. 9 may end without selecting a next comment to process. - When the size of the document portion is not greater than the threshold size (block 920—NO), a next comment may be selected (block 950). For example, comments
component 410 may select another comment to process and return to block 920 or block 930. In one implementation, commentscomponent 410 may mark an entry containing a comment associated with a document portion with a size that is not greater than the threshold size by, for example, setting a flag. In this case, commentscomponent 410 may select a next comment to process as a comment that has a document portion with a size that is greater than the threshold size. In the implementation where a comment is processed when an entry for the comment is created incomments database 420, the process ofFIG. 9 may end without selecting a next comment to process. - Document portions of small size (e.g., with a size not greater than the threshold) may result in the identification of a large number of documents with matching document portions, where these documents do not contain content that is relevant to the subject of the comment. By requiring that the document portion have a certain size, before associating the comment with other documents (i.e., other than the originating document), may result in the comments being more meaningfully presented in connection with other documents.
- In another implementation, a feature, other than (or in addition to) the size of the document portion for which the comment was originally created, may be used to determine whether to associate a comment with other documents. In one alternative implementation, for example, comments may be associated with other documents based on a score assigned to the comment. A score may be generated for a comment using one or more factors that will be described in detail below. A comment may be associated with the other documents when the score of the comment is greater than a certain threshold. In yet another alternative implementation, other features, or a combination of features, may be used to determine whether to associate a comment with other documents.
- As explained above, search engine component 430 may locate documents that contain a document portion that matches the document portion of the originating document. The technique(s) used to identify a match may differ based on whether the document portion includes text, image data, video data, and/or audio data.
- With regard to text, for example, search engine component 430 may determine, given the text of the document portion, whether the document portion text matches text in other documents included in
index database 440. Search engine component 430 may generate a confidence score for each document that indicates how near a match the document portion text is to text in the other documents. Search engine component 430 may identify other documents with confidence scores above a certain threshold as documents containing document portions matching the document portion of the originating document. - There are various techniques that search engine component 430 may use to identify a match. In one implementation, search engine component 430 may use a chunking technique. The chunking technique takes sets of contiguous terms (where each set may share one or more terms with a next or preceding set, or each set may share no terms with the next or preceding set) (called “chunks”), performs a hash on the chunks, and compares the number of matching chunks. By comparing the chunks, search engine component 430 may determine a percentage of overlap between two sets of text in two different documents. Search engine component 430 may generate a confidence score based on the amount of overlap between the chunks of the two sets of text.
- In another implementation, search engine component 430 may use a similarity detection technique. The similarity detection technique may consider a set of text as a vector of terms. For example, a vector may be created for each group of terms (e.g., sentence) in the set of text. The vector may include an entry for each unique term in the group. The similarity detection technique may generate a confidence score based on the number of the vectors that match between the two sets of text.
- In yet another implementation, search engine component 430 may use a different technique, or a combination of techniques, to identify a match between two sets of text. For example, search engine component 430 may perform a search on
index database 440 to identify documents that contain at least a threshold number of terms of the document portion text. Search engine component 430 may then perform a text-matching technique to determine a confidence score that indicates how near a match the document portion text is to text in the identified documents. - In a further implementation, search engine component 430 may use a machine learning technique to learn rules for a model that may be used to determine whether two sets of text match. This technique may identify synonyms of terms and/or identify text that relate to a same topic or concept even if the text does not contain terms in common.
- With regard to image data, search engine component 430 may determine, given the image data of the document portion, whether the document portion image matches an image in a document within
index database 440. Search engine component 430 may generate a confidence score for each document inindex database 440 that indicates how near a match the document portion image is to an image in the documents. Search engine component 430 may identify documents with confidence scores above a certain threshold as documents with document portions that match the document portion of the originating document. - There are various techniques that search engine component 430 may use to identify a match. In one implementation, search engine component 430 may use a technique that compares features of images. A number of different possible image features may be used. Examples of image features that may be used include image features based on, for example, intensity, color, edges, texture, wavelet-based techniques, or other aspects of the image.
- Regarding intensity, for example, each image may be divided into small patches (e.g., rectangles, circles, etc.) and an intensity histogram computed for each patch. Each intensity histogram may be considered to be a feature for the image. Similarly, as an example of a color-based feature, a color histogram may be computed for each patch (or for different patches) within each image. A color histogram can be similarly computed to obtain a possible color-based histogram. The color histogram may be calculated using any known color space, such as the RGB (red, green, blue) color space, YIQ (luma (Y) and chrominance (IQ)), or another color space.
- Histograms can also be used to represent edge and texture information. For example, histograms can be computed based on patches of edge information or texture information in an image. For wavelet based techniques, a wavelet transform may be computed for each patch and used as an image feature.
- In some implementations, to improve computation efficiency, features may be computed only for certain areas within images. For example, “objects of interest” within an image may be determined and image features may only be computed for the objects of interest. For example, if the image feature being used is a color histogram, a histogram may be computed for each patch in the image that includes an object of interest. Objects of interest within an image can be determined in a number of ways. For example, for color, objects of interest may be defined as points where there is high variation in color (i.e., areas where color changes significantly). In general, objects of interest can be determined mathematically in a variety of ways and are frequently based on determining discontinuities or differences from surrounding points. The Scale-Invariant Feature Transform (SIFT) algorithm is an example of one technique for locating objects of interest.
- Additionally, in some implementations, the various features described above may be computed using different image scales. For example, an image can be examined and features computed in its original scale and then features may be successively examined at smaller scales. Additionally or alternatively, features may be selected as features that are scale invariant or invariant to affine transformations. The SIFT technique, for example, can be used to extract distinctive invariant objects from images. The extracted objects are invariant to image scale and rotation.
- For each feature that is to be used, a comparison function may be used. In general, a comparison function may operate to generate a confidence score defining a similarity between a particular feature computed for two images. For image features based on histograms, for example, the comparison function may include a simple histogram comparer function. For image features other than those based on histograms, a different comparison function may be used.
- In another implementation, search engine component 430 may use another technique, or a combination of techniques, to determine whether two images match. For example, search engine component 430 may use a hash-based technique, a byte-by-byte comparison technique, or a cyclic redundancy check (CRC) technique. Additionally, or alternatively, search engine component 430 may compare tag information (e.g., labels or other meta-data assigned to the images) to determine whether two images match.
- With regard to video data, search engine component 430 may determine, given the video of the document portion, whether the document portion video matches a video in a document of
index database 440. Search engine component 430 may generate a confidence score for each document inindex database 440 that indicates how near a match the document portion video is to a video in the documents (e.g., a document may include a link for playing or downloading the video or provide a player via which the video can be played). Search engine component 430 may identify documents with confidence scores above a certain threshold as documents with document portions that match the document portion of the originating document. - There are various techniques that search engine component 430 may use to identify a match. In one implementation, search engine component 430 may divide videos into frames and use a technique, similar to a technique used by search engine component 430 in determining image matches, to identify matches in the frames of two videos. Search engine component 430 may generate a confidence score that is based on the number of frames that match between two videos.
- In another implementation, search engine component 430 may use a technique that compares text data, such as closed captioning text or a speech transcription, associated with two videos to determine whether the videos match. In this case, search engine component 430 may use a technique similar to a technique used by search engine component 430 in identifying a text match. In yet another implementation, search engine component 430 may divide the videos into short clips and produce spatio-temporal descriptors that are used to identify matching videos. This technique is described in further detail in D. DeMenthon, “Video Retrieval of Near-Duplicates Using K-Nearest Neighbor Retrieval of Spatio-Temporal Descriptors,” Language and Media Processing (LAMP), University of Maryland Institute for Advanced Computer Studies (UMIACS), 2006.
- In yet another implementation, search engine component 430 may use another technique, or a combination of techniques, to determine whether two videos match. For example, search engine component 430 may use a hash-based technique, a byte-by-byte comparison technique, or a cyclic redundancy check (CRC) technique. Additionally, or alternatively, search engine component 430 may compare tag information (e.g., labels or other meta-data assigned to the videos) to determine whether two videos match.
- With regard to audio data, search engine component 430 may determine, given the audio data of the document portion, whether the audio document portion matches audio associated with documents in
index database 440. Search engine component 430 may generate a confidence score for each document inindex database 440 that indicates how near a match the document portion audio is to audio in the documents (e.g., a document may include a link for playing or downloading the audio or provide a player via which the audio can be played). Search engine component 430 may identify documents with confidence scores above a certain threshold as documents with document portions that match the document portion of the originating document. - There are various techniques that search engine component 430 may use to identify a match. In one implementation, search engine component 430 may use an audio fingerprinting technique. The audio fingerprinting technique may generate a fingerprint for segments of the audio and compare these segments to audio associated with documents in
index database 440. By comparing the segments, search engine component 430 may determine a percentage of overlap between two sets of audio. Search engine component 430 may generate a confidence score based on the amount of overlap between the segments of the two sets of audio. - In another implementation, search engine component 430 may use a technique that compares text data, such as a speech transcription, associated with two sets of audio to determine whether the two sets of audio match. In this case, search engine component 430 may use a technique similar to a technique used by search engine component 430 in identifying text matches.
- In yet another implementation, search engine component 430 may use another technique, or a combination of techniques, to determine whether two sets of audio match. For example, search engine component 430 may use a hash-based technique, a byte-by-byte comparison technique, or a cyclic redundancy check (CRC) technique. Additionally, or alternatively, search engine component 430 may use tag information (e.g., labels or other meta-data assigned to the audio data) to determine whether two sets of audio match.
- Using one or a combination of the techniques identified above, search engine component 430 may locate documents that contain document portions that match the document portion of the originating document. Additionally, or alternatively, search engine component 430 may determine a concept or topic associated with the originating document and a concept or topic associated with each of the located documents. Search engine component 430 may remove, from further consideration, any documents relating to a concept or topic that does not match the concept or topic of the originating document.
-
FIG. 10 is a flowchart of an exemplary process for presenting a comment in connection with a document. In one implementation, the process ofFIG. 10 may be performed by one or more components withinclient 210,server 220, or a combination ofclient 210 andserver 220. In another implementation, the process may be performed by one or more components within another device or a group of devices separate from or includingclient 210 and/orserver 220. Also, whileFIG. 10 shows blocks in a particular order, the actual order may differ. For example, some blocks may be performed in parallel or in a different order than shown inFIG. 10 . - The process of
FIG. 10 may include presenting a document to a user of client 210 (block 1010). For example, the user may access the document via a browser application operating onclient 210. To obtain access to the document, for example, the user might enter an address (e.g., a URL) into the address field of the browser, the user might select a document from a list of documents (e.g., a list of favorites or bookmarks), or the user might perform a search using a search engine and select a search result corresponding to the document. - An option to show comments associated with the document may be presented (block 1020). For example, the browser may include a user interface item (e.g., a button, a menu item, etc.) that may permit the user to turn on and turn off the commenting function provided by the browser. The user may select this user interface item to create a comment, to view a comment, and/or to remove a presented comment from view (e.g., hide the comment from view). In another implementation, the showing of comments regarding a document may occur automatically. For example, a comment, associated with a document, may be automatically shown when the comment has a score above a particular threshold. Exemplary techniques for scoring comments are described below. Thus, in this implementation, a comment that does not have a sufficient score may not be automatically shown.
-
FIG. 11 is a diagram of an exemplary user interface that may be presented to a user to permit the user to activate the commenting function of the browser. As shown inFIG. 11 , abrowser window 1100 may include an add-ontoolbar 1110 that includes a search box and a number of software buttons. In one implementation,toolbar 1110 may include acomments button 1120.Comments button 1120 may optionally include information regarding the number of comments (shown as “(2)” inFIG. 11 ) that have been previously associated with the document that the user is currently accessing (shown as “www.javatimes.com” inFIG. 11 ). -
Comments button 1120 may permit the user to turn on and off the commenting function. In one implementation, selection ofcomments button 1120 may cause amenu 1130 to be presented.Menu 1130 may include a number of options including, for example, an option to create acomment 1132, an option to show previously createdcomments 1134, and an option to hide thecomments 1136. The user may selectoption 1132 to generate a comment regarding the document that the user is currently accessing. The user may selectoption 1134 to view a comment that was previously associated with the document that the user is currently accessing (e.g.,FIG. 11 shows that two comments have been previously associated with the document). The user may selectoption 1136 to remove any presented comments from view (e.g., hide the comments from view). - Returning to
FIG. 10 , selection of the option to provide a comment regarding the document may be received (block 1030). For example, the user might activate the commenting feature. In one implementation, the user might activate the commenting feature by selecting an item from a menu or by selecting a button on a toolbar. As shown inFIG. 11 , for example, the user may selectcomments button 1120 ontoolbar 1110 withinbrowser window 1100, and/or may selectoption 1134 onmenu 1130. - A comment(s) to show in connection with the document may be selected (block 1040). In one implementation,
client 210 may send, toserver 220, a request for comments associated with the document. For example,client 210 may send information regarding the document, such as a document identifier for the document, tocomments component 410.Comments component 410 may searchcomments database 420 using, for example, the document identifier for the document to retrieve the comments associated with the document. In another implementation, an index ofcomments database 420 may be constructed that lists the comments associated with each document. The index may be constructed using existing indexing techniques. The constructed index may be used to select one or more comments to provide in connection with the document. In yet another implementation, the index forcomments database 420 may only include those comments having a score above a certain threshold. Exemplary techniques for scoring comments are described below. -
Comments component 410 may select which comments to present and/or a manner for presenting the comments. In one implementation, commentscomponent 410 may rank the comments in some manner. For example, commentscomponent 410 may generate a score for each of the comments based on one or more factors associated with the comments. One factor for scoring a comment may include a rating of the comment. User feedback, in the form of a rating, may be obtained for various comments. A user may be permitted to provide a rating with regard to a comment presented in connection with a particular document. In one implementation, the rating may indicate whether the user found the comment useful (positive rating) or not useful (negative rating) in connection with the particular document. In another implementation, the rating may indicate a degree of usefulness, such as a rating from 1 to 5. Not all ratings need to be treated equally. For example, ratings from users may be weighted in some manner based on profiles of the users and/or a history of how the users' rating behavior has been in the past (e.g., how a user's past ratings compared to other users' ratings with regard to a particular comment or a particular set of comments). -
Comments component 410 may obtain the rating of a comment from rating(s)field 570 incomments database 420.Comments component 410 may use the rating factor to score a comment and use the score of a comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores). By using a rating to score a comment, comments in which users are interested (e.g., that users find useful) may be presented in connection with a document before or, instead of, comments in which users are not interested (e.g., that users did not find useful). - Another factor for scoring a comment may include a rank of an author of the comment. The author of a comment may be ranked based on one or more factors, such as the quantity of comments created by the author, a user feedback rating associated with the author (e.g., users might provide feedback regarding comments created by a particular author and this information may be used to rate the author), or whether the author is the user (e.g., users are typically interested in being presented with their own comments).
Comments component 410 may use the author ranking factor to score a comment and use the score of the comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores). The rank of an author may reflect the quality of the comment created by that author. Thus, by using an author ranking to score a comment, comments associated with higher ranked authors may be presented over comments associated with lower ranked authors. - Yet another factor for scoring a comment may include a timestamp associated with the comment.
Comments component 410 may obtain the timestamp fromtimestamp field 520 incomments database 420.Comments component 410 may use the timestamp factor to score a comment and use the score of the comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores). More recent timestamps may reflect fresh, more relevant comments, and less recent timestamps may reflect stale, less relevant comments. In the case of comments with revisions, timestamps reflecting comments with more modifications may infer more relevant comments than comments with fewer modifications. Thus, by using a timestamp to score a comment, comments that are more recent (or that have more modifications), and thus, potentially more relevant, may be presented over comments that are older (or that have fewer modifications), and potentially less relevant. - A further factor for scoring a comment may include a degree of match between the document portion, associated with the originating document, and the document portion associated with the document that the user is currently accessing. As described above, when search engine component 430 determines whether two document portions match, search engine component 430 may determine a degree of match between the document portions and generate a score based on this degree of match.
Comments component 410 may use the degree of match factor to score a comment and use the score of the comment to determine whether to present that comment (e.g., present only comments with scores above a threshold) and/or a manner in which to present the comments (e.g., present comments in an order based on their scores). A comment may be more relevant to a document with a higher degree of match of its document portion than to a document with a lower degree of match to its document portion. Thus, by using a degree of match to score a comment, comments that are associated with a higher degree of matching document portions (thus, potentially more relevant to the document for which the comment is to be presented) may be presented over comments that are associated with a lower degree of matching document portions (thus, potentially less relevant to the document for which the comment is to be presented). -
Comments component 420 may use one or more of the above-identified factors, and/or other factors, in scoring the comments associated with the document.Comments component 420 may select one or more of the comments based on the scores of the comments. - The selected comment(s) may be presented (block 1050). For example, comments
component 420 may send the selected comment(s) toclient 210 for presentation by the browser ofclient 210. In one implementation, the browser may present one or more of the comments within the browser window in which the document is presented. In another implementation, the browser may present one or more of the comments within a window separate from the window in which the document is presented. In yet another implementation, the browser may create a frame (e.g., a regular frame or iframe) and insert information regarding one or more comments in the frame. In a further implementation, the browser may use another mechanism for presenting one or more of the comments. -
FIG. 12 is a diagram of an exemplary user interface via which a comment may be presented. As shown inFIG. 12 ,browser window 1100 may include adocument section 1210 and acomments section 1220.Document section 1210 may include the content of the document that the user is currently accessing. In one implementation,document section 1210 may be highlighted to identify the portion of the document (i.e., “document portion”) to which the comment relates. -
Comments section 1220 may include aheader section 1222, anauthor name 1224, atimestamp 1226, acomment content 1228,tags 1230,rating option 1232, options 1234, and originating information 1236.Header section 1222 may include information regarding a quantity of comments that exist for this document, an option to see a next (or previous) comment, and/or an option to add a comment.Author name 1224 may include the name of the user that created the comment.Timestamp 1226 may include the date and/or time at which the comment was created or modified.Comment content 1228 may include the content of the comment. -
Tags 1230 may include keywords that may relate to a concept or topic of the comment or the document for which the comment was created.Rating option 1232 may present an option to the user to rate the comment (favorable or unfavorable rating).Rating option 1232 may also present information that indicates how many users found the comment useful (and/or not useful). Options 1234 may present options to the user to edit the comment, delete the comment, and/or obtain additional information regarding the comment. The additional information may include information regarding the other documents with which the comment is associated. Originating information 1236 may include information regarding the document for which the comment was originally created (i.e., the originating document). Originating information 1236 may also present a link to the originating document. - Returning to
FIG. 10 , any user feedback may be recorded (block 1060). For example, if the user provides user feedback viarating option 1232, the browser may capture this feedback and provide the feedback tocomments component 410.Comments component 410 may store the feedback incomments database 420. In one implementation, commentscomponent 410 may combine the feedback with other feedback already received for the comment and this particular document, or for the comment and any document with which the comment has been associated. - Implementations, described herein, may spread comments from a document for which the comment was originally created to other documents for which the comment may be relevant.
- The foregoing description provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention.
- For example, while series of blocks have been described with regard to
FIGS. 6 , 9, and 10, the order of the blocks may be modified in other implementations. Further, non-dependent blocks may be performed in parallel. - Also, exemplary graphical user interfaces have been described with respect to
FIGS. 7 , 8, 11, and 12. In other implementations, the graphical user interfaces may include more, fewer, or different pieces of information. - Also, certain portions of the implementations have been described as “logic” or a “component” that performs one or more functions. The terms “logic” or “component” may include hardware, such as a processor, an ASIC, or a FPGA, or a combination of hardware and software (e.g., software running on a general purpose processor—creating a specific purpose processor).
- Further, it has been described that scores are generated for comments. The scoring scheme has been described where higher scores are better than lower scores. This need not be the case. In another implementation, the scoring scheme may be switched to one in which lower scores are better than higher scores.
- Also, it has been described that users create comments regarding document portions. In another implementation, comments may be created for entire documents.
- It will be apparent that aspects described herein may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects does not limit the embodiments. Thus, the operation and behavior of the aspects were described without reference to the specific software code—it being understood that software and control hardware can be designed to implement the aspects based on the description herein.
- Even though particular combinations of features are recited in the claims and/or disclosed in the specification, these combinations are not intended to limit the disclosure of the invention. In fact, many of these features may be combined in ways not specifically recited in the claims and/or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim, the disclosure of the invention includes each dependent claim in combination with every other claim in the claim set.
- No element, act, or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article “a” is intended to include one or more items. Where only one item is intended, the term “one” or similar language is used. Further, the phrase “based on” is intended to mean “based, at least in part, on” unless explicitly stated otherwise.
Claims (21)
1-34. (canceled)
35. A method comprising:
receiving, using one or more devices, a comment relating to a portion of a first document;
identifying, using the one or more devices, one or more second documents based on the portion of the first document,
each second document, of the one or more second documents, including a portion that is similar to the portion of the first document;
storing, in a memory associated with the one or more devices, the comment with information identifying the first document and the one or more second documents;
receiving, by the one or more devices, a request to present comments with one of the one or more second documents;
determining, by the one or more devices, whether to present the comment with the one of the one or more second documents based on receiving the request,
determining whether to present the comment including:
determining a score of the comment, and
determining whether the score exceeds a threshold; and
providing, by the one or more devices, the comment for presentation with the one of the one or more second documents when the score of the comment exceeds the threshold.
36. The method of claim 35 , where determining the score of the comment includes:
obtaining a rating of the comment; and
determining the score of the comment based on the rating of the comment.
37. The method of claim 35 , where determining the score of the comment includes:
determining the score of the comment based on a rank of an author of the comment.
38. The method of claim 37 , where the rank of the author of the comment is based on one or more of:
a quantity of comments created by the author, or
a user feedback rating associated with the author.
39. The method of claim 37 , where the one of the one or more second documents is accessed by a user, and
where the rank of the author of the comment is based on the user being the author.
40. The method of claim 35 , where determining the score of the comment includes:
determining a degree of match between the portion of the first document and the portion of the one of the one or more second documents; and
determining the score of the comment based on the degree of match.
41. The method of claim 35 , where storing the comment with the information identifying the first document and the one or more second documents includes:
storing, in the memory, information identifying the portion of the first document and at least one of:
a timestamp associated with the comment,
information identifying an author of the comment,
information identifying a rating of the comment, or
an address of the first document and one or more addresses of the one or more second documents.
42. A system comprising:
one or more devices to:
receive a comment relating to a portion of a first document;
identify one or more second documents based on the portion of the first document,
each second document, of the one or more second documents, including a portion that is similar to the portion of the first document;
store, in a memory associated with the one or more devices, the comment with information identifying the first document and the one or more second documents;
receive a request to present comments with one of the one or more second documents;
determine a score of the comment based a plurality of:
information regarding an author of the comment,
a degree of match between the portion of the first document and the portion of the one of the one or more second documents, or
a rating of the comment;
determine whether the score exceeds a threshold; and
provide the comment for presentation with the one of the one or more second documents when the score of the comment exceeds the threshold.
43. The system of claim 42 , where, when determining the score of the comment, the one or more devices are to:
determine the score of the comment further based on a timestamp associated with the comment,
the timestamp indicating a date or time at which the comment was created or modified.
44. The system of claim 42 , where, when determining the score of the comment, the one or more devices are to:
determine the score of the comment based on the information regarding the author of the comment and at least one of:
the degree of match, or
the rating of the comment.
45. The system of claim 44 , where the information regarding the author of the comment includes a rank of the author of the comment, and
where the rank of the author of the comment reflects a quality of the comment.
46. The system of claim 45 , where the information regarding the author of the comment includes a rank of the author of the comment, and
where the rank of the author of the comment is based on one or more of:
a quantity of comments created by the author, or
a user feedback rating associated with the author.
47. The system of claim 45 , where the one of the one or more second documents is being accessed by a user,
where the information regarding the author of the comment includes a rank of the author of the comment, and
where the rank of the author of the comment is based on the user being the author.
48. The system of claim 42 , where the one or more devices are to:
determine that the score exceeds the threshold; and
provide the comment for presentation with the one of the one or more second documents based on determining that the score exceeds the threshold,
where, when providing the comment for presentation with the one of the one or more second documents based on determining that the score exceeds the threshold, the one or more devices are to at least one of:
highlight the portion of the one of the one or more second documents based on the comment being associated with the portion of the one of the one or more second documents, or
provide:
information regarding the first document, and
at least one of:
the information regarding the author of the comment, or
the rating of the comment.
49. A non-transitory computer-readable medium for storing instructions, the instructions comprising:
a plurality of instructions that, when executed by one or more processors, cause the one or more processors to:
receive a comment relating to a portion of a first document;
identify one or more second documents based on the portion of the first document,
each second document, of the one or more second documents, including a portion that is similar to the portion of the first document;
store, in a memory associated with the one or more devices, the comment with information identifying the first document and the one or more second documents;
receive a request to present comments with one of the one or more second documents;
determine a score of the comment based a plurality of:
information regarding an author of the comment,
a degree of match between the portion of the first document and the portion of the one of the one or more second documents, or
a rating of the comment;
determine whether the score exceeds a threshold; and
provide the comment for presentation with the one of the one or more second documents when the score of the comment exceeds the threshold.
50. The non-transitory computer-readable medium of claim 49 , where the instructions further comprise:
one or more instructions to determine that the score exceeds the threshold; and
one or more instructions to provide the comment for presentation with the one of the one or more second documents based on determining that the score exceeds the threshold,
where the one or more instructions to provide the comment for presentation with the one of the one or more second documents based on determining that the score exceeds the threshold include:
one or more instructions to highlight the portion of the one of the one or more second documents based on the comment being associated with the portion of the one of the one or more second documents.
51. The non-transitory computer-readable medium of claim 49 , where the instructions further comprise:
one or more instructions to determine that the score exceeds the threshold; and
one or more instructions to provide the comment for presentation with the one of the one or more second documents based on determining that the score exceeds the threshold,
where the one or more instructions to provide the comment for presentation with the one of the one or more second documents based on determining that the score exceeds the threshold include:
one or more instructions to provide:
information regarding the first document, and
at least one of:
the information regarding the author of the comment, or
the rating of the comment.
52. The non-transitory computer-readable medium of claim 49 , where one or more instructions, of the plurality of instructions, to determine the score of the comment include:
one or more instructions to determine the score of the comment based on the degree of match and at least one of:
the information regarding the author of the comment, or
the rating of the comment.
53. The non-transitory computer-readable medium of claim 49 , where one or more instructions, of the plurality of instructions, to determine the score of the comment include:
one or more instructions to determine the score of the comment based on the information regarding the author of the comment and at least one of:
the degree of match, or
the rating of the comment.
54. The non-transitory computer-readable medium of claim 49 , where one or more instructions, of the plurality of instructions, to store the comment with the information identifying the first document and the one or more second documents include:
one or more instructions to store, in the memory, the information identifying the portion of the first document and a plurality of:
a timestamp associated with the comment,
information identifying the author of the comment,
information identifying the rating of the comment, or
an address of the first document and one or more addresses of the one or more second documents.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/144,811 US20140114967A1 (en) | 2009-08-12 | 2013-12-31 | Spreading comments to other documents |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/RU2009/000399 WO2011019297A1 (en) | 2009-08-12 | 2009-08-12 | Spreading comments to other documents |
US201113056948A | 2011-01-31 | 2011-01-31 | |
US14/144,811 US20140114967A1 (en) | 2009-08-12 | 2013-12-31 | Spreading comments to other documents |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/056,948 Continuation US8645363B2 (en) | 2009-08-12 | 2009-08-12 | Spreading comments to other documents |
PCT/RU2009/000399 Continuation WO2011019297A1 (en) | 2009-08-12 | 2009-08-12 | Spreading comments to other documents |
Publications (1)
Publication Number | Publication Date |
---|---|
US20140114967A1 true US20140114967A1 (en) | 2014-04-24 |
Family
ID=42079032
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/056,948 Expired - Fee Related US8645363B2 (en) | 2009-08-12 | 2009-08-12 | Spreading comments to other documents |
US14/144,811 Abandoned US20140114967A1 (en) | 2009-08-12 | 2013-12-31 | Spreading comments to other documents |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/056,948 Expired - Fee Related US8645363B2 (en) | 2009-08-12 | 2009-08-12 | Spreading comments to other documents |
Country Status (2)
Country | Link |
---|---|
US (2) | US8645363B2 (en) |
WO (1) | WO2011019297A1 (en) |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8280882B2 (en) * | 2005-04-21 | 2012-10-02 | Case Western Reserve University | Automatic expert identification, ranking and literature search based on authorship in large document collections |
US20130097522A1 (en) * | 2011-10-15 | 2013-04-18 | Derek A. Devries | Method and system of generating composite web page elements with an annotating proxy server |
EP2786272A4 (en) * | 2011-12-02 | 2015-09-09 | Hewlett Packard Development Co | Topic extraction and video association |
US10095789B2 (en) * | 2012-08-26 | 2018-10-09 | Derek A. Devries | Method and system of searching composite web page elements and annotations presented by an annotating proxy server |
US9460201B2 (en) * | 2013-05-06 | 2016-10-04 | Iheartmedia Management Services, Inc. | Unordered matching of audio fingerprints |
US20140380191A1 (en) * | 2013-06-24 | 2014-12-25 | Autodesk, Inc. | Method and apparatus for design review collaboration across multiple platforms |
US10846330B2 (en) * | 2013-12-25 | 2020-11-24 | Heyoya Systems Ltd. | System and methods for vocal commenting on selected web pages |
US20170169029A1 (en) * | 2015-12-15 | 2017-06-15 | Facebook, Inc. | Systems and methods for ranking comments based on information associated with comments |
KR102594951B1 (en) * | 2016-06-03 | 2023-10-27 | 삼성전자주식회사 | Electronic apparatus and operating method thereof |
CN110866193B (en) * | 2019-11-20 | 2023-05-02 | 北京字节跳动网络技术有限公司 | Feedback method, device, equipment and storage medium based on online document comments |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080005064A1 (en) * | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20080109491A1 (en) * | 2006-11-03 | 2008-05-08 | Sezwho Inc. | Method and system for managing reputation profile on online communities |
US20080201632A1 (en) * | 2007-02-16 | 2008-08-21 | Palo Alto Research Center Incorporated | System and method for annotating documents |
US20090070376A1 (en) * | 2007-09-12 | 2009-03-12 | Nhn Corporation | Method of controlling display of comments |
US8195522B1 (en) * | 2008-06-30 | 2012-06-05 | Amazon Technologies, Inc. | Assessing users who provide content |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6889250B2 (en) * | 2000-03-01 | 2005-05-03 | Amazon.Com, Inc. | Method and system for information exchange between users of different web pages |
US7734610B2 (en) | 2005-12-12 | 2010-06-08 | Google Inc. | Decentralised web annotation |
-
2009
- 2009-08-12 US US13/056,948 patent/US8645363B2/en not_active Expired - Fee Related
- 2009-08-12 WO PCT/RU2009/000399 patent/WO2011019297A1/en active Application Filing
-
2013
- 2013-12-31 US US14/144,811 patent/US20140114967A1/en not_active Abandoned
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080005064A1 (en) * | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20080109491A1 (en) * | 2006-11-03 | 2008-05-08 | Sezwho Inc. | Method and system for managing reputation profile on online communities |
US20080201632A1 (en) * | 2007-02-16 | 2008-08-21 | Palo Alto Research Center Incorporated | System and method for annotating documents |
US20090070376A1 (en) * | 2007-09-12 | 2009-03-12 | Nhn Corporation | Method of controlling display of comments |
US8195522B1 (en) * | 2008-06-30 | 2012-06-05 | Amazon Technologies, Inc. | Assessing users who provide content |
Non-Patent Citations (1)
Title |
---|
Wanjun Jin, Rui Shi, and Tat-Seng Chua. 2004. A semi-naive Bayesian method incorporating clustering with pair-wise constraints for auto image annotation. In Proceedings of the 12th annual ACM international conference on Multimedia (MULTIMEDIA '04). ACM, New York, NY, USA, 336-339. * |
Also Published As
Publication number | Publication date |
---|---|
US8645363B2 (en) | 2014-02-04 |
WO2011019297A1 (en) | 2011-02-17 |
US20110264653A1 (en) | 2011-10-27 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8645363B2 (en) | Spreading comments to other documents | |
US7765209B1 (en) | Indexing and retrieval of blogs | |
US8291014B2 (en) | User interface for web comments | |
US8452766B1 (en) | Detecting query-specific duplicate documents | |
US8429173B1 (en) | Method, system, and computer readable medium for identifying result images based on an image query | |
US8374975B1 (en) | Clustering to spread comments to other documents | |
JP5827121B2 (en) | Method, computer program and apparatus for retrieving a plurality of stored digital images | |
JP4837040B2 (en) | Ranking blog documents | |
US8554759B1 (en) | Selection of documents to place in search index | |
US8195634B2 (en) | Domain-aware snippets for search results | |
US10169449B2 (en) | Method, apparatus, and server for acquiring recommended topic | |
US20140337368A1 (en) | Duplicate Content Search | |
US8515952B2 (en) | Systems and methods for determining document freshness | |
US8909625B1 (en) | Image search | |
US8510314B1 (en) | Book content item search | |
US20070250501A1 (en) | Search result delivery engine | |
US20150012542A1 (en) | Classification of ambiguous geographic references | |
US8548995B1 (en) | Ranking of documents based on analysis of related documents | |
US9977816B1 (en) | Link-based ranking of objects that do not include explicitly defined links | |
US8606780B2 (en) | Image re-rank based on image annotations | |
US8423885B1 (en) | Updating search engine document index based on calculated age of changed portions in a document | |
WO2021068681A1 (en) | Tag analysis method and device, and computer readable storage medium | |
CN105808615A (en) | Document index generation method and device based on word segment weights | |
US20200257724A1 (en) | Methods, devices, and storage media for content retrieval | |
CN114003799A (en) | Event recommendation method, device and equipment |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CIERNIAK, MICHAL;BARASHEV, DMITRY;SIGNING DATES FROM 20090806 TO 20090810;REEL/FRAME:038933/0597 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
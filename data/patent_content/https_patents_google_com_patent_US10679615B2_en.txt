CROSS-REFERENCE TO RELATED APPLICATIONS
The present application claims the benefit of priority under 35 U.S.C. ยง 120 as a continuation-in-part of U.S. patent application Ser. No. 15/769,013 filed Apr. 17, 2018, which is a national stage filing of International Application No. PCT/US2018/027808 filed Apr. 16, 2018. For foregoing applications are incorporated by reference in their entirety.
BACKGROUND
Computing devices can receive inputs. The user can use a plurality of different languages. In some cases, the user can provide the input in a language that is unexpected by the computing devices. In a networked system, inputs in the wrong language can cause excessive network transmissions, packet-based or otherwise, of network traffic data between computing devices as the sending and receiving computing devices negotiate the language of the input file.
SUMMARY
According to at least one aspect of the disclosure, a method can implemented by one or more processors. The method can include processing audio data using one or more acoustic models to monitor for an occurrence of an invocation phrase configured to invoke an automated assistant. The audio data can be based on detection of spoken input of a user at a client device that includes an automated assistant interface for interacting with the automated assistant. The method can further include detecting, based on processing the audio data using the one or more acoustic models, the occurrence of the invocation phrase in a portion of the audio data, and determining, based on processing of the audio data using the one or more acoustic models or other processing of the audio data using one or more other acoustic models, that the portion of the audio data that includes the invocation phrase corresponds to a user profile that is accessible to the automated assistant. The method can further include identifying a language assigned to the user profile, and selecting a speech recognition model for the language. The speech recognition model for the language can be based on determining the portion of the audio data corresponds to the user profile, and is based on identifying the language as assigned to the user profile. The method can also include using the selected speech recognition model to process a subsequent portion of the audio data that follows the portion of the audio data, and causing the automated assistant to provide responsive content that is determined based on the processing of the subsequent portion using the selected speech recognition model.
The method can further include identifying an additional language assigned to the user profile. Furthermore, selecting the speech recognition model can include selecting the speech recognition model in lieu of an additional speech recognition model for the additional language.
In some implementations, selecting the speech recognition model in lieu of the additional speech recognition model for the additional language can include identifying one or more contextual parameters associated with the audio data, and selecting the speech recognition model based on the one or more contextual parameters being more strongly associated, in the user profile, with the language than with the additional language. The one or more contextual parameters can include an identifier of the client device. The one or more contextual parameters can include one or multiple of: a time of day, a day of the week, and a location of the client device.
In some implementations, selecting the speech recognition model for the language can include selecting the speech recognition model based on at least one probability assigned to the language in the user profile, wherein the at least one probability is based on previous interactions, with the automated assistant, that are associated with the user profile.
The at least one probability is associated with one or more contextual parameters, and the method can further include identifying that the one or more contextual parameters are associated with the audio data, and using the at least one probability in the selecting based on the at least one probability being associated with the one or more contextual parameters identified as associated with the audio data.
In some implementations, using the selected speech recognition model to process the subsequent portion of the audio data that follows the portion of audio data can include using the selected speech recognition model in generating text, in the language, that corresponds to the subsequent portion. Furthermore, causing the automated assistant to provide responsive content that is determined based on the processing of the subsequent portion using the selected speech recognition model can include: generating the responsive content based on the text, and causing the automated assistant interface to render output that is based on the responsive content.
The automated assistant can be configured to access multiple different user profiles that are: available at the client device, and associated with multiple different users of the client device. The multiple different user profiles can each identify one or more corresponding languages and a corresponding language probability for each of the corresponding languages. Furthermore, the corresponding language probabilities can each be based on previous interactions between a corresponding one of the multiple different users and the automated assistant.
In some implementations, using the selected speech recognition model to process the subsequent portion of the audio data can include using the selected speech recognition model to generate first text in the language. Furthermore, the method can include identifying an additional language assigned to the user profile, and selecting an additional speech recognition model for the additional language. Selecting the additional speech recognition model for the additional language can be based on determining the portion of the audio data corresponds to the user profile, and can be based on identifying the additional language as assigned to the user profile. Furthermore, the method can include using the selected additional speech recognition model to process the subsequent portion of the audio data that follows the portion of the audio data. Using the selected additional speech recognition model to process the subsequent portion of the audio data can include using the selected speech recognition model to generate second text in the additional language, and selecting the first text in the language, in lieu of the second text in the additional language. Furthermore, causing the automated assistant to provide responsive content that is determined based on the processing of the subsequent portion using the selected speech recognition model can include: causing, based on selecting the first text in the first language, the automated assistant to provide responsive content that is determined based on the first text in the language.
According to at least one aspect of the disclosure, a method can be implemented by one or more processors to process audio data. The audio data can be based on detection of spoken input of a user at a client device, and the client device can include an automated assistant interface for interacting with the automated assistant. The method can further include determining, based on processing of the audio data, that at least a portion of the audio data matches a user profile accessible to the automated assistant, and identifying at least one probabilistic metric assigned to the user profile and corresponding to a particular speech recognition model, for a particular language. The method can also include, based on the at least one probabilistic metric satisfying a threshold: selecting the particular speech recognition model, for the particular language, for processing the audio data, and processing the audio data, using the particular speech recognition model for to the particular language, to generate text, in the particular language, that corresponds to the spoken input. The method can further include causing the automated assistant to provide responsive content that is determined based on the generated text.
The user profile further includes an additional probabilistic metric corresponding to at least one different speech recognition model, for a different language. Furthermore, the method can include, based on the additional probabilistic metric failing to satisfy the threshold, refraining from processing the audio data using the different speech recognition model.
The method can include identifying current contextual data associated with the audio data. Identifying the at least one probabilistic metric can be based on a correspondence between the current contextual data and the at least one probabilistic metric. The current contextual data can identify a location of the client device or an application that is being accessed via the client device when the spoken input is received. The current contextual data identifies the client device. The probabilistic metric can be based on past interactions between the user and the automated assistant.
According to at least one aspect of the disclosure, a method can be implemented by one or more processors to receive audio data. The audio data can be based on detection of spoken input of a user at a client device, the client device including an automated assistant interface for interacting with an automated assistant. The method can also determining that the audio data corresponds to a user profile accessible to the automated assistant, and identifying a first language assigned to the user profile, and a first probability metric assigned to the first language in the user profile. The method can further include selecting a first speech recognition model for the first language. Selecting the first speech recognition model for the first language can be based on identifying the first language as assigned to the user profile. The method can also include using the selected first speech recognition model to generate first text in the first language, and a first measure that indicates a likelihood the first text is an appropriate representation of the spoken input. The method can further include identifying a second language assigned to the user profile, and a second probability metric assigned to the second language in the user profile. Additionally, the method can include selecting a second speech recognition model for the second language. Selecting the second speech recognition model for the second language can be based on identifying the second language as assigned to the user profile. The method can also include using the selected second speech recognition model to generate second text in the second language, and a second measure that indicates a likelihood the second text is an appropriate representation of the spoken input. The method can further include selecting the first text in the first language in lieu of the second text in the second language. Selecting the first text in the first language in lieu of the second text in the second language can be based on: the first probability metric, the first measure, the second probability metric, and the second measure. Furthermore, the method can include, in response to selecting the first text, causing the automated assistant to provide responsive content that is determined based on the selected first text.
The method can include identifying a current context associated with the audio data. Identifying the first probability metric can be based on the first probability metric corresponding to the current context. Identifying the second probability metric can be based on the second probability metric corresponding to the current context. In some implementations, determining that the audio data corresponds to the user profile can be based on comparing features of the audio data to features of the user profile.
Aspects of the present disclosure may advantageously reduce incidents during which a spoken language utterance is not interpreted by an appropriate speech recognition model. Consequently, an improved response to user input may be received, reducing occasions on which an automatic assistant is unresponsive or does not operate as intended. As well as improving functionality for a user, this may reduce load on computer and/or network resources used to implement such an assistant by reducing repeat commands in order to reach a desired result.
Other implementations may include a non-transitory computer readable storage medium storing instructions executable by one or more processors (e.g., central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s)) to perform a method such as one or more of the methods described above and/or elsewhere herein. Yet other implementations may include a system of one or more computers that include one or more processors operable to execute stored instructions to perform a method such as one or more of the methods described above and/or elsewhere herein.
According to at least one aspect of the disclosure, a system to generate voice-based interfaces in a networked system includes a server device that includes a memory and one or more processors. The system can receive, by an automated assistant, audio data detected at a client device that includes an automated assistant interface for interacting with the automated assistant. The system can parse, by a speech recognition engine, with one or more acoustic models the audio data to detect an invocation phrase configured to invoke the automated assistant. The system can determine, by the speech recognition engine, that first portion of the audio data including the invocation phrase corresponds to a user profile that is accessible to the automated assistant. The system can select, by the speech recognition engine, a language and a speech recognition model assigned to the user profile. The system can parse, by the speech recognition engine, a second portion of audio data with the speech recognition model to identify a request and a keyword. The system can select, by a content selector component, a first digital component based on the request identified in the second portion of the audio data and a second digital component based on the keyword identified in the second portion of the audio data and the language. The system can transmit, by the content selector component, the first digital component and the second digital component to the client device for presentation in response to the audio data.
According to at least one aspect of the disclosure, a method to generate voice-based interfaces in a networked system can include receiving, by an automated assistant executed by one or more processors of a server device, audio data detected at a client device that includes an automated assistant interface for interacting with the automated assistant. The method can include parsing, by a speech recognition engine executed by the one or more processors, with one or more acoustic models the audio data to detect an invocation phrase configured to invoke the automated assistant. The method can include determining, by the speech recognition engine, that first portion of the audio data including the invocation phrase corresponds to a user profile that is accessible to the automated assistant. The method can include selecting, by the speech recognition engine, a language and a speech recognition model assigned to the user profile. The method can include parsing, by the speech recognition engine, a second portion of audio data with the speech recognition model to identify a request and a keyword. The method can include selecting, by a content selector component executed by the one or more processors, a first digital component based on the request identified in the second portion of the audio data and a second digital component based on the keyword identified in the second portion of the audio data and the language. The method can include transmitting, by the content selector component, the first digital component and the second digital component to the client device for presentation in response to the audio data.
It should be appreciated that all combinations of the foregoing concepts and additional concepts described in greater detail herein are contemplated as being part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are contemplated as being part of the subject matter disclosed herein.
BRIEF DESCRIPTION OF THE DRAWINGS
FIG. 1 illustrates a system for selecting a language for an automated assistant to interact with a user.
FIG. 2 illustrates a diagram of an example of a speech recognition model being selected based on a context in which a user is interacting with, or invoking, an automated assistant.
FIG. 3 illustrates a method for processing audio data according to a speech recognition model that is selected based on contents of a user profile.
FIG. 4 illustrates a method for scheduling a language model to be pre-emptively activated according to contextual data accessible to an automated assistant.
FIG. 5 illustrates a block diagram of an example method to generate voice-based interfaces in a networked system.
FIG. 6 is a block diagram of an example computer system.
DETAILED DESCRIPTION
Humans may engage in human-to-computer dialogs with interactive software applications referred to herein as โautomated assistantsโ (also referred to as โdigital agents,โ โchatbots,โ โinteractive personal assistants,โ โintelligent personal assistants,โ โassistant applications,โ โconversational agents,โ etc.). For example, humans (which when they interact with automated assistants may be referred to as โusersโ) may provide commands and/or requests to an automated assistant using spoken natural language input (e.g., utterances), which may in some cases be converted into text and then processed, and/or by providing textual (e.g., typed) natural language input. An automated assistant responds to a request by providing responsive user interface output, which can include audible and/or visual user interface output.
Speech recognition engines are configured to recognize speech in only a single language. For multilingual users and/or households, such single language speech recognition engines can be unsatisfactory, and can cause an automated assistant to fail and/or provide erroneous output when a spoken utterance is received in an additional language that is not the single language supported by the speech recognition engines. This can render the automated assistant unusable and/or lead to excess usage of computational and/or network resources. Excess usage of computational and/or network resources can be a result of a user needing to provide a further spoken utterance, that is in the single language supported, when the automated assistant fails or provides erroneous output. Such further spoken utterance must additionally be processed by a corresponding client device and/or remote automated assistant component(s), thereby causing additional usage of various resources.
Other speech recognition engines may be configured to recognize speech in multiple languages, but require a user to explicitly designate which of the multiple languages should be utilized in speech recognition at a given time. For example, some of the other speech recognition engines may require a user to manually designate a default language to be utilized in speech recognition of all spoken utterances received at a particular client device. To change the default language to another language, the user can be required to interact with a graphical and/or audible interface to explicitly alter the default language. Such interaction can lead to excess usage of computational and/or network resources in the rendering of the interface, the processing of inputs of the user provided via the interface, etc. Further, it may often be the case that a user forgets to change the default language prior to providing a spoken utterance that is not currently the default language. This can render the automated assistant unusable and/or lead to excess usage of computational and/or network resources as described above.
An automated assistant can convert audio data, corresponding to a spoken utterance of a user, into corresponding text (or other semantic representation). For example, audio data can be generated based on detection of a spoken utterance of a user via one or more microphones of a client device that includes an assistant interface for enabling the user to interact with an automated assistant. The automated assistant can include a speech recognition engine that attempts to recognize various characteristics of the spoken utterance captured in the audio data, such as the sounds produced (e.g., phonemes) by the spoken utterance, the order of the produced sounds, rhythm of speech, intonation, etc. Further, the speech recognition engine can identify text words or phrases represented by such characteristics. The text can then be further processed by the automated assistant (e.g., using a natural language understanding (NLU) engine and/or a dialog state engine) in determining responsive content for the spoken utterance. The speech recognition engine can be implemented by the client device and/or by one or more automated assistant component(s) that are remote from, but in network communication with, the client device.
Implementations described herein relate to systems, methods, and apparatus for automatically determining a language for speech recognition of a spoken utterance received via an automated assistant interface. In some implementations, speech recognition of a spoken utterance using a given language can include processing audio data, which captures the spoken utterance, using one or more speech recognition models for the given language in order to generate text that corresponds to the spoken utterance, and that is in the given language. As described herein, multiple speech recognition models can be accessible for speech recognition, and each of the speech recognition models can be configured for a corresponding language of multiple languages. For example, a first speech recognition model can be configured for generating English text based on processing audio data including English spoken utterances, a second speech recognition model can be configured for generating French text based on processing audio data including French spoken utterances, a third speech recognition model can be configured for generating Spanish text based on processing audio data including Spanish spoken utterances, etc.
The system can utilize various techniques to select only a subset of languages to utilize in speech recognition of a given spoken utterance of a given user. For example, the given user can have a user profile with multiple candidate languages assigned to the user profile. The multiple candidate languages can be manually assigned to the user profile by the user and/or automatically assigned based on past usage of the candidate language(s) by the user across one or more platforms. As described in more detail below, selecting only the subset of languages can be based on, for example, probability metrics assigned to the multiple candidate languages for the user profile, which can be based on past usage of the multiple candidate languages for the user profile, and which can each correspond to one or more contextual parameters (e.g., each based on past usage of a corresponding language for the user profile, given the contextual parameter(s)).
As one particular example, a single particular language, of multiple languages assigned to the user profile, can have an assigned probability metric, for one or more current contextual parameters (e.g., a client device via which the given spoken utterance is detected, a time of day, and/or a day of the week), where the probability metric indicates a very high likelihood of the single particular language being spoken by the given user. Based on the assigned probability metric, the single particular language can be selected, and speech recognition performed using only speech recognition model(s) for the single language. Based on the assigned probability metric, the system can select one or more digital components to provide to the client device. Performing the speech recognition can result in corresponding text, in the single language, that can then be further processed by additional component(s) of an automated assistant in generating content that is responsive to the given spoken utterance. The content that is responsive can then be provided for rendering at the client device for presentation to the user. The content that is responsive can optionally be in the same single language, or provided to cause rendering in the same single language.
As another particular example, two particular languages, of three or more candidate languages assigned to the user profile, can have corresponding assigned probability metrics, for one or more current contextual parameters, where the probability metrics each indicate at least a threshold likelihood of a corresponding one of the two particular languages being spoken by the given user. Based on the assigned probability metrics, the two particular languages can be selected, and speech recognition of the given spoken utterance performed using only speech recognition models for the two particular languages. The other candidate language(s) may not be selected for speech recognition based on their corresponding assigned probability metrics, for the one or more current contextual parameters, failing to satisfy a threshold.
Performing the speech recognition using the speech recognition model for a first of the two particular languages can result in corresponding first text, in the first language, and optionally a first measure that indicates a likelihood that the first text is representative of the given spoken utterance. Performing the speech recognition using the speech recognition model for a second of the two particular languages can result in corresponding second text, in the second language, and optionally a second measure that indicates a likelihood that the second text is representative of the given spoken utterance. One of the first text or the second text can then be selected as appropriate text for generating and providing content that is responsive to the given spoken utterance.
In some implementations, one of the first text or the second text is selected based on the first and second measures that indicate corresponding likelihoods that they are representative of the given spoken utterance. For example, if the first measure indicates an 80% likelihood the first text is representative of the given spoken utterance, and the second measure indicates a 70% likelihood the second text is representative of the given spoken utterance, the first text can be selected in lieu of the second text in view of the first measure indicating a greater likelihood than the second measure. In some of those implementations, the probability metrics for the two particular languages can further be considered. For example, assume again that the first measure indicates an 80% likelihood and the second measure indicates a 70% likelihood, and further assume that the probability metric for the first language (for the one or more contextual parameters) is 30% and the probability metric for the second language (for the one or more contextual parameters) is 65%. In such an example, the second text can be selected in lieu of the first based on consideration of both the measures that indicate the likelihoods that the first and second texts are representative of the given spoken utterance, and the probability metrics for the first and second languages. For instance, a score for the first text can be based on 70% and 65% (e.g., a score of 0.455 based on 0.7*0.65) and a score for the second text can be based on 80% and 30% (e.g., a score of 0.24 based on 0.8*0.3), and the first text selected based on having the higher score.
These and other implementations that select only a subset of candidate languages of a user to utilize in speech recognition of a spoken utterance of the user can conserve various resources of device(s) (e.g., client device(s) and/or remote automated assistant component(s)) that perform the speech recognition), as only speech recognition model(s) that correspond to the subset of languages are utilized in performing the speech recognition. Further, these and other implementations that utilize probability metrics for languages and/or measures for generated text can increase the likelihood that an automated assistant generates responsive content based on the appropriate text. This can lead to an improved automated assistant, and can also conserve various resources as it mitigates risk of the automated assistant providing errant responsive content based on recognition of text using a language that is not the language being spoken in a spoken utterance. Such mitigation of risk of errant responsive content prevents further resource intensive detection of further user interface input (and processing of that input) in attempting to rectify the errant responsive content.
Some implementations described herein can additionally or alternatively utilize various techniques to perform speech recognition, of a given spoken utterance of a given user, in each of multiple languages assigned to a user profile of the given user. In those implementations, probability metrics (optionally dependent on current contextual parameter(s)) for the multiple languages and/or measures for each of the speech recognitions can still be utilized to select only one of the speech recognitions as appropriate for generating and providing content that is responsive to the given spoken utterance. As one particular example, assume the given user has only a first language and a second language assigned in a user profile of the given user. Further assume the first language has a probability metric of 60% and the second language has a probability metric of 40%. Speech recognition of the given spoken utterance can be performed using a first speech recognition model for the first language to generate first text in the first language, and a measure that indicates a 70% likelihood the first text is representative of the given spoken utterance. Speech recognition of the given spoken utterance can also be performed using a second speech recognition model for the second language to generate second text in the second language, and a measure that indicates a 70% likelihood the second text is representative of the given spoken utterance. One of the first text or the second text can then be selected as appropriate text for generating and providing content that is responsive to the given spoken utterance. For example, the first text can be selected in lieu of the second text based on the first language probability metric (60%) being higher than the second language probability metric (40%), and based on the first and second text measures being the same (70%).
These and other implementations that utilize probability metrics for languages and/or measures for generated text can increase the likelihood that an automated assistant generates responsive content based on the appropriate text. This can lead to an improved automated assistant, and can also conserve various resources as it mitigates risk of the automated assistant providing errant responsive content based on recognition of text using a language that is not the language being spoken in a spoken utterance. Such mitigation of risk of errant responsive content prevents further resource intensive detection of further user interface input (and processing of that input) in attempting to rectify the errant responsive content.
As mentioned above, a user profile of a user providing a spoken utterance can be determined, and the user profile utilized to identify language(s) assigned to the user profile and/or probability metric(s) for the language(s), for use in various implementations described herein. The user profile is determined based on determining that at least a portion of audio data, that captures the spoken utterance, has one or more features (e.g., intonation, pitch, tone, accents, intonation, and/or any other feature) that correspond to feature(s) assigned to the user profile. For example, the audio data can be processed, using one or more acoustic models, to determine features of the audio data, and those feature(s) compared to feature(s) of candidate user profile(s) (e.g., candidate user profile(s) associated with a client device via which the audio data is received), and one of the candidate user profile(s) determined as the user profile for the audio data based on the comparison indicating a sufficient match.
In some of those implementations, the portion of the audio data that is determined to have feature(s) corresponding to feature(s) mapped to the user profile, is a portion that corresponds to an invocation phrase configured to invoke an automated assistant. An invocation phrase for an automated assistant contains one or more hot words/trigger words and can be, for example, โHey Assistantโ, โOK Assistantโ, and/or โAssistantโ. Often, a client device that includes an assistant interface includes one or more locally stored acoustic models that the client device utilizes to monitor for an occurrence of a spoken invocation phrase. Such a client device can locally process received audio data utilizing the locally stored model, and discards any audio data that does not include the spoken invocation phrase. However, when local processing of received audio data indicates an occurrence of a spoken invocation phrase, the client device will then cause that audio data and/or following audio data to be further processed by the automated assistant.
For example, when the local processing indicates the occurrence of the invocation phrase, further processing can occur to determine a user profile and/or further processing can occur to perform speech recognition according to implementations described herein. For instance, when local processing of a portion of audio data utilizing a locally stored acoustic model indicates the occurrence of a spoken invocation phrase in the portion, output from the locally stored acoustic model can indicate feature(s) of the portion of audio data, and those feature(s) can be compared to feature(s) of candidate user profiles to determine a user profile that corresponds to the spoken invocation phrase (and resultantly, to the portion of the audio data that follows the spoken invocation phrase). Also, for instance, when local processing utilizing a locally stored acoustic model indicates the occurrence of a spoken invocation phrase in a portion of audio data, an additional acoustic model (local or remote) can optionally be utilized to process at least the portion of audio data, determine features of the at least the portion of the audio data, and determine a user profile that corresponds to those feature(s). In some implementations, additional or alternative techniques can be utilized to determine a user profile of a user providing a spoken utterance, such as techniques that use output from a camera of a client device to determine a user profile of a user providing a spoken utterance detected at the client device.
As mentioned above, a user profile can be created for a particular user of a device or application in order to, inter alia, characterize language preferences of the user. Users can be provided control over their user profiles, and a user can control whether any user profile is created for the user. A user profile for a user can identify multiple different languages that the user can use when engaging with the device or application. The user profile can be manually created or modified by the user in order that the user can manually designate preferred languages with which the user can engage with the automated assistant. For example, the user can provide an explicit natural language input such as, โMy name is Chris and I speak English,โ in order to cause the automated assistant to set the English language in the user profile as a most probable language for the user to speak in when communicating with the automated assistant. As another example, the user can provide an explicit natural language input such as, โI speak English and Spanishโ in order to cause the automated assistant to set both the English language and the Spanish language as candidate languages for the user in his/her user profile. One or more candidate languages assigned to a user profile for a user can be based on information that is associated with the user and accessible to the automated assistant such as, for example, emails, contact names, images that include text, location data, etc. For example, the user profile of a user can include candidate languages based on past interactions of the user with the automated assistant (and/or other platforms) using those candidate languages. Further, the user profile of a user can optionally have one or more corresponding probabilities assigned to each of the candidate languages. The one or more probabilities for a language, for the user profile of the user, can be based on past usage of that language by the user for past interactions with an automated assistant and/or past interactions with other platforms (e.g., email platforms, messaging platforms, and/or search platforms).
Each language identified by a user profile can be associated with a probability that can depend on a context in which a user is interacting with the automated assistant. For instance, the user profile can identify a probability that a particular language will be employed by a user when a user is providing an invocation phrase for initializing the automated assistant to perform a particular action. Alternatively, or additionally, the probability associated with a particular language can be dynamic, and change during a dialogue sessions between a user and an automated assistant. Each of the languages can correspond to one or more speech recognition models, for converting an audio input that embodies a particular language, to text and/or other semantic representations that characterize the input. When selecting the language or user profile that will be used to interpret inputs from a user, the automated assistant can select speech recognition model(s) that are appropriate for a particular interaction.
The process for determining the language model(s) to use for a particular interaction can include operations such as: processing a stream of audio data using one or more language models to monitor for an occurrence of an invocation phrase for invoking an automated assistant. The operations can further include detecting, based on the processing, an occurrence of the invocation phrase in a portion of the audio data. Based on the processing, or any additional processing using one or more additional language models, a determination can be made as to whether the audio data includes an invocation phrase that corresponds to a stored user profile. When the audio data includes an invocation phrase that corresponds to a stored user profile, a language assigned to the user profile can be identified. Based on the identified language and/or a portion(s) of the audio data, a language model can be selected. Using the selected language model, additional portions of the audio data can be processed and responsive content can be provided back to the user based on the processing of the additional portions of the audio data.
In some implementations, when a user profile is associated with multiple different languages, and each language is associated with a probability the respective language will be employed during an interaction, the probability for each language can be dynamic. For example, a user profile can initially indicate that a first language has a probability of A (e.g., 70%) and a second language has a probability of B (e.g., 30%) before starting a dialogue session between the user and an automated assistant. During the interaction, the automated assistant can detect that a first query is in the second language. In response, the automated assistant can cause one or more probabilities stored in association with the user profile to be modified. For instance, during at least the remainder of the dialog, the user profile can indicate that the probability for the first language is reduced (e.g., 5%) and the probability for the second language can be increased (e.g., 95%).
Multiple user profiles can be managed by an automated assistant that is accessible through a computing device that is interacted with by multiple different users. In this way, a language model selected by the automated assistant can be based on a user profile that is selected according to the user that is interacting with the automated assistant. The automated assistant can identify the user profile and one or more language(s) that are indicated in the user profile as having at least a threshold likelihood of use by the user, at least in the instant context. A user can be associated with multiple user profiles that are associated with different devices, or a single user profile that identifies languages that are preferred for particular devices. For example, a user can prefer to speak a particular language in their vehicle when communicating with an in-vehicle automated assistant, but prefer to speak a different language in their house where other persons who also speak the different language are present. Therefore, the user profile can identify multiple devices and language(s) and corresponding probabilities for each device of the identified multiple devices.
A language selected for a particular user can be based on application data available to the automated assistant. Such application data can correspond to applications that are loaded onto devices through which the user interacts with the automated assistant. For example, a computing device that includes an automated assistant interface can also host an email application that includes emails written in a particular language. The automated assistant can acknowledge the particular language (e.g., French) and confirm that the user would prefer to interact with the automated assistant using that particular language when operating the computing device, the application, and/or any other device or module that can be associated with the automated assistant. For example, the automated assistant can specifically prompt the user with a question such as, โI noticed used you understand French, would you like to interact using French?โ Depending on the response, the automated assistant can modify the user profile to indicate the preference of the user to interact using a particular language for a device or application.
A speech recognition model (or other language model) can be preemptively loaded at a client device prior to a user invoking the automated assistant. For example, a language model can be preemptively loaded at a client device based on location data, message data (e.g., an email that includes travel plans), contact data, calendar data, and/or any other data that can be used to infer that the user would prefer a particular language during an upcoming event or context. Furthermore, in some additional or alternative implementations, a language model can be selected based on background noise captured in audio data, which can be used to infer a language with which the user may prefer to speak in a particular context. For instance, the user can explicitly request that the automated assistant translate a particular portion of content (e.g., text that the user will be reading out loud, audio that the user is listening to, etc.). The audio data corresponding to the request can include background noise, therefore the automated assistant can process the audio data to determine that the user is requesting a translation, and also determine the language in which the user would like the final translation to be in.
A number of languages identified by a user profile can change according to an interest of the user in other languages. For instance, a user profile can identify a default language for the user, but as the user further interacts with the automated assistant, the automated assistant can identify additional languages with which to engage with the user. As a result, the automated assistant can push additional language packages to a device of the user, in order that a language model operating on the device can properly convert voice-to-text when the user is communicating with the automated assistant. A language package can be pushed to a device in anticipation of the user interacting with the automated assistant at a particular time in the future. For instance, a user can create a calendar event corresponding to a time in the future, and a title for the calendar event be written in a different language than a default language of the user profile. When the calendar event approaches (e.g., a day before the calendar event), the automated assistant can cause a language package corresponding to the different language to be pushed to the device at which the user created the calendar event. Alternatively, when the calendar event identifies a location, and the automated assistant is aware of a particular computing device that the user typically uses at that location, the automated assistant can cause the language package to be pushed to that particular computing device. In this way, network bandwidth can be optimized by pushing language packages at a time when the user is on a faster or more accessible network, rather than when the user is traveling or otherwise not within a predictably reliable network.
The above description is provided as an overview of some implementations of the present disclosure. Further description of those implementations, and other implementations, are described in more detail below.
FIG. 1 illustrates a system 100 for selecting a language for an automated assistant 104 to interact with a user 130. The automated assistant 104 can operate, in part via an automated assistant 126 that is provided at one or more client devices, such as client computing device 118 (e.g., a portable computing device 132), and in part via one or more remote computing device(s) 112, such as a server device 102. The user 130 can interact with the automated assistant 104 via an assistant interface 128 of the client computing device 118. The assistant interface 128 includes user interface input device(s) and user interface output device(s) for use by the automated assistant 126 in interfacing with a user. The assistant interface 128 accepts user interface inputs of the user 130 that are directed to the automated assistant 104, and renders content from the automated assistant 104 for presentation to the user 130. The assistant interface 128 can include, a microphone, a camera, a touch screen display, and/or any other user interface input device(s) of the client computing device 118. The assistant interface 128 can also include a display, projector, a speaker, and/or any other user interface output device(s) of the client computing device 118 that can be used to render content from the automated assistant 104. A user can initialize the automated assistant 104 by providing a verbal, textual, or a graphical input to the assistant interface 128 to cause the automated assistant 104 to perform a function (e.g., provide data, control a peripheral device, access an agent, etc.). The client computing device 118 can include a display device, which can be a display panel that includes a touch interface for receiving touch inputs and/or gestures for allowing a user to control applications of the client computing device 118 via the touch interface. The client computing device 118 can lack a display device, thereby providing an audible user interface output, without providing a graphical user interface output. Furthermore, the client computing device 118 can provide a user interface input device, such as a microphone, for receiving spoken natural language inputs from the user 130 (and from additional unillustrated users).
The client computing device 118 can be in communication with the remote computing device 112, such as the service device 102, over a network 114, such as the internet. The client computing device 118 can offload computational tasks to the remote computing device 112 in order to, for example, conserve computational resources at the client device 118 and/or leverage more robust resources available at the remote computing device 112. For instance, the remote computing device 112 can host the automated assistant 104, and the client computing device 118 can transmit inputs received at one or more assistant interfaces to the remote computing device 112. However, the automated assistant 104 can be hosted by the automated assistant 126 at the client computing device 118. In various implementations, all or less than all aspects of the automated assistant 104 can be implemented by the automated assistant 126 at the client computing device 118. In some of those implementations, aspects of the automated assistant 104 are implemented via the local automated assistant 126 of the client computing device 118 and interface with the remote computing device 112 that implements other aspects of the automated assistant 104. The remote computing device 112 can optionally serve a plurality of users and their associated assistant applications via multiple threads. In implementations where all or less than all aspects of the automated assistant 104 are implemented via the local automated assistant 126 of the client computing device 118, the local automated assistant 126 can be an application that is separate from an operating system of the client device 118 (e.g., installed โon topโ of the operating system)โor can alternatively be implemented directly by the operating system of the client device 118 (e.g., considered an application of, but integral with, the operating system).
The remote computing device 112 can include a speech recognition engine 134 that can process audio data received at an assistant interface to determine text and/or other semantic representation(s) of a spoken utterance embodied in the audio data. The speech recognition engine 134 can utilize one or more speech recognition models 136 in determining text and/or other semantic representations of a spoken utterance embodied in audio data. As described herein, multiple speech recognition models 136 can be provided, and each can be for a corresponding language. For example, a first speech recognition model can be for English, a second speech recognition model can be for French, etc. Further, as described herein, which of multiple speech recognition models 136 is utilized in processing of audio data can be based on, for example, information contained in a user profile determined to correspond to the audio data being processed. For example, in some implementations a given user profile can be determined to correspond to audio data being processed based on matching voice features of the audio data to voice features associated with the user profile. Also, for example, in some implementations a given user profile can additionally or alternatively be determined to correspond to audio data being processed based on matching other sensor data (e.g., data from a camera and/or data from a fingerprint sensor), from sensor(s) of the client computing device 118, to corresponding data of the user profile. Continuing with the examples, if the user profile indicates that an English speech recognition model is significantly more likely to be utilized for the user than a French speech recognition model, the English speech recognition model can be utilized to process the audio data. The English speech recognition model can optionally be utilized in lieu of utilizing the French speech recognition model (or any other speech recognition model for a non-English language).
The server device 102 can include multiple speech recognition models 136 for multiple different languages can be utilized in processing of audio data to generate multiple candidate semantic representations (e.g., each corresponding to a different language). The probability metrics (optionally dependent on current contextual parameter(s)) for the multiple different languages and/or measures for each of the multiple candidate semantic representations can be utilized to select only one of the candidate semantic representations as appropriate for generating and providing content that is responsive to the given spoken utterance. The multiple speech recognition models 136 can be used in the selection of digital components for presentation to the client computing device 118.
The speech recognition models 136 can each include one or machine learning models (e.g., neural network models) and/or statistical models for determining text (or other semantic representation) that corresponds to a spoken utterance embodied in audio data. The speech recognition engine 134 can utilize one of the speech recognition models 136 to determine phonemes, for a corresponding language, that are included in the audio data, and then generate text, for the corresponding language, based on the determined phonemes. The speech recognition engine 134 can receive an audio recording of voice input, e.g., in the form of input audio signals or digital audio data, and uses one or more models to convert the received data into one or more text tokens. The model or models used by such functionality, which can collectively be considered a speech recognition model, generally model the relationship between an audio signal and phonetic units in a language, along with word sequences in the language. The speech recognition models may include one or more of acoustic models, language models, pronunciation models, etc., as well as models combining functionality of one or more of such models. The speech recognition models may be implemented as finite state decoding graphs including a plurality of paths or pathways.
The automated assistant 104 can operate according to one or more language models simultaneously in order to be responsive to natural language inputs from the user 130 and/or provide responsive content to the user 130. For example, the automated assistant 104 can operate using an invocation phrase model simultaneously with using a speech recognition model that is associated with a particular language. In this way, the automated assistant can process audio data that embodies an invocation phrase and one or more commands provided in the particular language, and be responsive to both the invocation phrase and the one or more commands. The text, and/or semantic representations of text, converted from the audio data can parsed by a text parser engine 110 and made available to the automated assistant 104 as textual data or semantic data that can be used to generate and/or identify command phrases from the user 130 and/or a third party application.
A language model can include or refer to an acoustic model, a speech recognition model, an invocation phrase model, a voice-to-text model, a voice-to-semantic representation model, a text-to-semantic representation model, and/or any other model that can be used to translate a natural language input into data that can be processed by an application or a device. A language that the automated assistant 104 uses to communicate with the user 130 can be selected from one or more languages identified in a user profile. The automated assistant can access a user profile from one or more server user profiles 120 and/or one or more client user profiles 122. For example, when the user 130 is communicating with an automated assistant 126 at the client computing device 118, the user 130 can provide a spoken natural language input to an assistant interface 128 of the client computing device 118. The spoken natural language input can be converted into audio data, which can be processed by a client language model 124, such as an invocation phrase model for identifying whether the audio data embodies an invocation phrase for invoking the automated assistant 126. The client language model 124 can also provide a voice signature of the user 130. Based on the voice signature of the user 130, the automated assistant 126 can select a client user profile 122 that corresponds to the user 130. The client user profile 122 can identify one or more languages that the identified user 130 prefers to communicate in, depending on a context of an interaction, or characteristics of the interaction between the user 130 and the automated assistant 126.
The invocation phrase model can be employed at the client computing device 118 or the service device 102 to determine whether the user 130 is intending to invoke the automated assistant 104. When the user provides an input audio signal that includes a natural language input to the assistant interface 128, and the natural language input includes an invocation phrase for invoking the automated assistant 104, the client computing device 118 can cause the automated assistant 104 at the server device 102 to receive the natural language input and/or subsequent natural language inputs from the user 130. For instance, in response to determining that the user 130 is intending to invoke the automated assistant 104 at the client computing device 118, one or more communication channels can be established between the client computing device 118 and the server device 102. Thereafter, as the user continues to provide natural language inputs to the assistant interface 128, the natural language inputs will be converted into data that is then transmitted over the network 114 and processed by the server device 102. Thereafter, the automated assistant 104 can analyze the data to determine a user profile, that corresponds to the user, from one or more server user profiles 120 available at the server device 102. A speech recognition model 136 from the selected server user profile can be selected for communicating with the user 130. The selection of the speech recognition model 136 from the user profile can be based on a context of the user 130, one or more confidence scores or probabilities associated with one or more speech recognition model 136 identified by the user profile, and/or any other information that can be used to select a language.
Each language identified by a user profile of the server user profiles 120 and/or the client user profiles 122 can be associated with a probability or a confidence score that can be static or dynamic. For example, a default language for a particular user can be identified by a user profile and include a correspondence to a confidence score that is higher than other confidence scores associated with other languages identified by the user profile. A language identified by a user profile can be associated with multiple confidence scores, and each confidence score of the multiple conference scores can be associated with a context. For example, the user profile can identify โhomeโ as a location context for a particular language and a confidence score for the location context for the particular language. Because the user may prefer to communicate using the particular language at home over other languages, the user profile can identify a separate language and a separate confidence score associated with the separate language that is lower than the confidence score corresponding to the โhomeโ location context. In other words, the user profile can indicate, using confidence scores and contextual data, that the user prefers to speak a particular language at home over other languages that are identified by the user profile.
A confidence score for a particular language and for a particular context can be based on assistant interaction data 106, which can be accessible to an automated assistant at the server device 102 or the client computing device 118. The assistant interaction data 106 can be generated based on historical interactions between one or more users and the automated assistant. Therefore, as the user interacts with the automated assistant using one or more different languages, the assistant interaction data 106 can reflect the one or more different languages that the user has communicated with. The confidence scores associated with the different languages, as identified by a user profile, can be dynamically updated based on how the assistant interaction data 106 changes over time. For example, contextual data identified by a user profile can identify a contact with which the user communicates with through the automated assistant by employing the automated assistant to compose messages to be sent to the contact. Initially, a user profile can identify a particular language that has a first confidence score when composing messages. However, if the user subsequently directs the automated assistant to compose a message for the contact in another language, a second confidence score, that is associated with the other language and a context of sending a message to the contact, can be increased above the first confidence score. In this way, the other language will become the default language according to the user profile, at least when the user is directing the automated assistant to compose a message for the contact. As a result, the user does not have to explicitly specify the other language when composing a message to the contact, thereby conserving computational resources that would otherwise be wasted on processing audio in a variety of different languages.
The digital component selector 139 can be a part of the server device 102 or separate from the server device 102. The digital component selector 139 can receive the content request or an indication thereof for the selection of a digital component based on the request. The content selector component 132 can select the digital component based on confidence score for a particular language, a language model, or the invocation phrase model that server device 102 determines or associates with the input audio signal that included the request. The content selector component 132 can based the selection of digital components on previously received audio inputs (or packaged data object) or user preferences. The content selector component 132 execute a real-time digital component selection process to select the digital component. The content selector component 132 can select addition or supplemental digital components based on the input request.
The real-time digital component selection process can refer to, or include, selecting digital component objects (which may include sponsored digital component objects) provided by third party content providers 138. The real-time content selection process can include a service in which digital components provided by multiple content providers are parsed, processed, weighted, or matched based on request identified in the input audio signal in order to select one or more digital components to provide to the client computing device 118. The digital component selector 139 can perform the content selection process in real-time. Performing the content selection process in real-time can refer to performing the content selection process responsive to the request for content received via the client computing device 118. The real-time content selection process can be performed (e.g., initiated or completed) within a time interval of receiving the request (e.g., 5 seconds, 10 seconds, 20 seconds, 30 seconds, 1 minute, 2 minutes, 3 minutes, 5 minutes, 10 minutes, or 20 minutes). The real-time content selection process can be performed during a communication session with the client computing device 118, or within a time interval after the communication session is terminated.
For example, the digital component selector 139 can be designed, constructed, configured or operational to select digital component objects based on the content request in the input audio signal. The digital component selector 139 can identify, analyze, or recognize voice, audio, terms, characters, text, symbols, or images of the candidate digital components using an image processing technique, character recognition technique, natural language processing technique, or database lookup. The candidate digital components can include metadata indicative of the subject matter of the candidate digital components, in which case digital component selector 139 can process the metadata to determine whether the subject matter of the candidate digital component corresponds to the content request.
Responsive to the request identified in the input audio (or other) signal, the content selector component 132 can select a digital component object from a database associated with the digital component provider 138 and provide the digital component for presentation via the client computing device 118. The digital component object can be provided by a digital component provider 138. The content selector component 132 can select multiple digital components. The multiple digital components can be provided by different digital component providers 138. For example, a first digital component provider 138 can provide a primary digital component responsive to the request and a second digital component provider 138 can provide a supplemental digital component that is associated with or relates to the primary digital component. The client computing device 118 or a user thereof can interact with the digital component object. The client computing device 118 can receive an audio, touch, or other input response to the digital component. The client computing device 118 can receive an indication to select a hyperlink or other button associated with the digital component object that causes or allows the client computing device 118 to identify digital component provider 138, request a service from the digital component provider 138, instruct the digital component provider 138 to perform a service, transmit information to the digital component provider 138, or otherwise identify a good or service associated with digital component provider 138.
The digital component selector 139 can select a digital component that includes text, strings, or characters that can be processed by a text to speech system or presentable via a display. The digital component selector 139 can select a digital component that is in a parameterized format configured for a parametrically driven text to speech technique. The digital component selector 139 can select a digital component that is in a format configured for display via client computing device 118. The digital component selector 139 can select a digital component that can be re-formatted to match a native output format of the client computing device 118 or application to which the digital component is transmitted. The digital component selector 139 can provide the selected digital component to the client computing device 118 or automated assistant client 108 or application executing on the client computing device 118 for presentation by the client computing device 118.
The system 100 can include one or more digital component providers 138. The digital component providers 138 can provide audio, visual, or multimedia based digital components (which can also be referred to as content, images, or supplemental content) for presentation by the client computing device 118 as an audio and visual based output digital components. The digital component can be or include other digital components. The digital component can be or include a digital object. The digital component can be configured for a parametrically driven text to speech technique. The digital component can be configured for text-to-speech (TTS) implementations that convert normal language text into speech. For example, the digital component can include an image that is displayed to the user and, via TTS, text related to the displayed image is presented to the user. The digital component can be input to an application programming interface that utilizes a speech-synthesis capability to synthesize text into natural-sounding speech in a variety of languages, accents, and voices. The digital component can be coded as plain text or a speech synthesis markup language (SSML). SSML can include parameters that can be set to control aspects of speech, such as pronunciation, volume, pitch, or rate that can form an acoustic fingerprint or native voice.
The digital component provider 138 can provide selection criteria for the digital component, such as a value, keyword, concept, or other metadata or information to facilitate a content selection process. The digital component provider 138 can provide video based digital components (or other digital components) to the content selector component 132 where they can be stored in a data repository. The content selector component 132 can select the digital components from the data repository and provide the selected digital components to the client computing device 118.
The digital component provider 138 can provide the digital component to the content selector component 132 for storage in the data repository in a content data structure. The content selector component 132 can retrieve the digital component responsive to a request for content from the client computing device 118 or otherwise determining to provide the digital component.
The digital component provider 138 can establish a digital component campaign (or electronic content campaign). A digital component campaign can refer to one or more content groups that correspond to a common theme. A content campaign can include a hierarchical data structure that includes content groups, digital component data objects (e.g., digital components or digital objects), and content selection criteria. To create a digital component campaign, digital component provider 138 can specify values for campaign level parameters of the digital component campaign. The campaign level parameters can include, for example, a campaign name, a preferred content network for placing digital component objects, a value of resources to be used for the digital component campaign, start and end dates for the content campaign, a duration for the digital component campaign, a schedule for digital component object placements, language, geographical locations, type of computing devices on which to provide digital component objects. In some cases, an impression can refer to when a digital component object is fetched from its source and is countable. Due to the possibility of click fraud, robotic activity can be filtered and excluded, as an impression. Thus, an impression can refer to a measurement of responses from a Web server to a page request from a browser, which is filtered from robotic activity and error codes, and is recorded at a point as close as possible to opportunity to render the digital component object for display on the computing device 104. In some cases, an impression can refer to a viewable or audible impression; e.g., the digital component object or digital component is at least partially (e.g., 20%, 30%, 30%, 40%, 50%, 60%, 70%, or more) viewable on a display device of the client computing device 118, or audible via a speaker of the client computing device 118. A click or selection can refer to a user interaction with the digital component object, such as a voice response to an audible impression, a mouse-click, touch interaction, gesture, shake, audio interaction, or keyboard click. A conversion can refer to a user taking a desired action with respect to the digital component objection; e.g., purchasing a product or service, completing a survey, visiting a physical store corresponding to the digital component, or completing an electronic transaction.
The digital component provider 138 can establish one or more content groups for a digital component campaign. A content group includes one or more digital component objects and corresponding content selection criteria, such as keywords, words, terms, phrases, geographic locations, type of computing device, time of day, interest, topic, or vertical. Content groups under the same content campaign can share the same campaign level parameters, but may have tailored specifications for content group level parameters, such as keywords, negative keywords (e.g., that block placement of the digital component in the presence of the negative keyword on main content), or parameters associated with the content campaign.
To create a new content group, the digital component provider 138 can provide values for the content group level parameters of the content group. The content group level parameters include, for example, a content group name or content group theme, and bids for different content placement opportunities (e.g., automatic placement or managed placement) or outcomes (e.g., clicks, impressions, or conversions). A content group name or content group theme can be one or more terms that the digital component provider 138 can use to capture a topic or subject matter for which digital component objects of the content group is to be selected for display. For example, a food and beverage company can create a different content group for each brand of food or beverage it carries, and may further create a different content group for each model of vehicle it carries. Examples of the content group themes that the food and beverage company can use include, for example, โBrand A colaโ, โBrand B ginger ale,โ โBrand C orange juice,โ โBrand D sports drink,โ or โBrand E purified water.โ An example content campaign theme can be โsodaโ and include content groups for both โBrand A colaโ and โBrand B ginger aleโ, for example. The digital component (or digital component object or digital component) can include โBrand Aโ, โBrand Bโ, โBrand Cโ, โBrand Dโ or โBrand Eโ.
The digital component provider 138 can provide one or more keywords and digital component objects to each content group. The keywords can include terms that are relevant to the product or services of associated with or identified by the digital component objects. A keyword can include one or more terms or phrases. For example, the food and beverage company can include โsoda,โ โcola,โ โsoft drink,โ as keywords for a content group or content campaign that can be descriptive of the goods or services the brand provides. In some cases, negative keywords can be specified by the content provider to avoid, prevent, block, or disable content placement on certain terms or keywords. The content provider can specify a type of matching, such as exact match, phrase match, or broad match, used to select digital component objects.
The digital component provider 138 can provide the one or more keywords to be used by the content selector component 132 to select a digital component object provided by the digital component provider 138. The digital component provider 138 can provide additional content selection criteria to be used by the content selector component 132 to select digital component objects. The content selector component 132 can run a content selection process involving multiple content providers 138 responsive to receiving an indication of a keyword of an electronic message.
The digital component provider 138 can provide one or more digital component objects for selection by the content selector component 132. The digital component objects can be a digital component or a collection of digital components. The content selector component 132 can select the digital component objects when a content placement opportunity becomes available that matches the resource allocation, content schedule, maximum bids, keywords, and other selection criteria specified for the content group. Different types of digital component objects can be included in a content group, such as a voice digital component, audio digital component, a text digital component, an image digital component, video digital component, multimedia digital component, or digital component link. Upon selecting a digital component, the content selector component 132 can transmit the digital component object for presentation or rendering on a client computing device 118 or display device of the client computing device 118. Presenting or rendering can include displaying the digital component on a display device or playing the digital component via a speaker of the client computing device 118. The content selector component 132 to present or render the digital component object. The content selector component 132 can instruct the client computing device 118 to generate audio signals, acoustic waves, or visual output. For example, the automated assistant client 108 can present the selected digital component via an audio output.
FIG. 2 illustrates a diagram 200 of an example of a language model being selected based on a context in which a user 214 is interacting with, or invoking, an automated assistant. Specifically, a user 214 can interact with an automated assistant through an assistant device 212. The assistant device 212 can store or access a table 220 that identifies one or more user profiles corresponding to different users that have or can interact with the automated assistant. For example, the table 220 can identify the user 214 (e.g., โ1โ) and a separate user (e.g., โ2โ), each of which can be associated with different user profiles. A user profile can identify language preferences of a user, and the language preferences can be based on a context in which the user is interacting with the automated assistant. The language preferences can be adapted by the automated assistant overtime as the user interacts with the automated assistant (and/or other platforms) using different languages.
For example, the assistant device 212 can be located within a home of the user 214, which can be a residence of a separate user that also interacts with the automated assistant through the assistant device 212. The assistant device 212 can switch between user profiles according to the user that is employing the assistant device 212 to interact with the automated assistant. For instance, the user 214 can interact with the automated assistant through the assistant device 212 using English or French, while a separate user can interact with the automated assistant through the assistant device 212 using English or Spanish. In order for the assistant device 212 to understand a respective user and communicate with the respective user, the assistant device 212 can select a language model (e.g., a speech recognition model) for interpreting inputs from the user. The language model can be selected based on contents of the table 220 and/or a user profile associated with the respective user. Each language model can be associated with a score or probability, which quantifies a likelihood that the user is or will be communicating with the automated assistant according to a particular language.
The score or probability can be based on a context in which the user is interacting with the automated assistant or the assistant device 212. For example, the user 214 can provide a spoken natural language input 218, such as โAssistant,โ in order to invoke the automated assistant. The assistant device 212 can include an automated assistant interface that receives the spoken natural language input 218 for further processing at the assistant device 212. The assistant device 212 can employ a language model (e.g., an invocation phrase model) for determining a voice signature based on characteristics of the voice of the user 214. When the assistant device 212 has identified the voice signature of the user 214, the assistant device 212 can access a table 220 that identifies multiple different user profiles, corresponding to multiple different voice signatures, respectively, and a correspondence between the user profiles and different language models. The table 220 can also provide a correspondence between the language models and scores or probabilities, which can be used to determine whether to employ a particular language model. The scores can be based on a context in which the user 214 is invoking an automated assistant that is accessible through the assistant device 212.
As provided in FIG. 2, the user 214 can be operating an application 206 (e.g., APPLICATION_1) through a portable computing device 216, which provides basis for the assistant device 212 to select a particular language model. Alternatively, or additionally, the assistant device 212 can select a language model based on the user 214 being at a location 210. The table 220, or the user profile corresponding to the user 214, can provide a correspondence between a score for a language model and a context of the application and or the location. By identifying the context in which the user 214 is invoking the automated assistant, and comparing the contacts to the table 220, the assistant device 212 can determine the language model that has the highest score for the user 214. For instance, the automated assistant or the assistant device 212 can select the English model based on the user accessing the application 206 and being located at the location 210. Alternatively, if the user was located at LOCATION_2, identified by the table 220, but accessing APPLICATION_1, the automated assistant can select the English model because the score for APPLICATION_1 is greater than the score for LOCATION_2. However, if the user was located at LOCATION_1, but using APPLICATION_2 to communicate with CONTACT_2, the automated assistant can select the French model because the score for LOCATION_1 is less than the sum of the scores for APPLICATION_2 and CONTACT_2 (in other words: 0.5<(0.6+0.3)).
In some implementations, if the automated assistant selects a language model that was not intended by the user 214, and the user corrects the automated assistant by requesting a different language model be employed, the scores for each of the respective language models can be updated. For example, the language model that was initially selected can have its score decreased while the requested language model can have its score increased. If the requested language model (e.g., Swahili) is not identified by a user profile (e.g., the user profile โ1โ does not identify Swahili), the automated assistant can cause a request to be generated and transmitted over a network 202. The request can be received by a remote device 208, which can store multiple different language models that can be pushed to various devices upon request. For example, if the user 214 requests that a Swahili language model be employed, the automated assistant can request the Swahili language model from the remote device 208 and modify the user profile to identify the Swahili language model. Furthermore, the automated assistant can modify the user profile to identify a context in which the user requested the Swahili language model, and provide a score for the Swahili language model in the identified context (e.g., the user 214 being located at LOCATION_1).
The entries in the table 220 can correspond to same contexts but different scores for each model. For instance, APPLICATION_1 and APPLICATION_2 can be the same applications, LOCATION_1 and LOCATION_2 can be the same locations, and CONTACT_1 and CONTACT_2 can be the same contacts. Furthermore, each application, location, and/or contact can correspond to different scores, depending on the model being referenced. For example, if the user 213 is using the application at the location, the English model can be selected over the French model, since the total score for the English model would be 0.13 and the score for the French model would be 0.12. As another example, if the user 213 is at the location and communicating with the contacts, the English model would be selected over the French model, since the total score for the English model would be 0.14 and the score for the French model would be 0.9.
FIG. 3 illustrates a method 300 for processing audio data according to a speech recognition model that is selected based on contents of a user profile. The method 300 can be performed by one or more computing devices or applications, and/or any other apparatus or module capable of processing a user input. The method 300 can include an operation 302 of processing audio data using one or more acoustic models to monitor for an occurrence of an invocation phrase configured to invoke an automated assistant. The audio data can be generated based on an audible input that is received at a client device that includes an automated assistant interface for interacting with the automated assistant. The automated assistant interface can be, for example, an audio subsystem of the client device and can therefore include one or more of a microphone, a speaker, and/or any other apparatus for transmitting audio related data.
The client device can store one or more acoustic models, and/or access one or more acoustic models over a network, such as the internet. The one or more acoustic models can include a first acoustic model, such as an invocation phrase acoustic model, for identifying the invocation phrase embodied in the audio data. The invocation phrase can identify the device, the automated assistant, and/or any other feature that can be associated with the automated assistant (e.g., โAssistantโ). The first acoustic model can be agnostic to the language in which the invocation phrase is provided, but, rather the first acoustic model can process the audio data to identify pitch, tone, accents, intonation, and/or any other feature of speech that can be used to identify a phrase and/or a user. The first acoustic model can be arranged as an always active acoustic model in order that the automated assistant can be triggered at any time when the invocation phrase is received at the automated assistant interface. Simultaneously, one or more other acoustic models can be active, at least according to a user profile that is stored at the client device or otherwise accessible to the automated assisting.
The method 300 can further include an operation 304 of detecting, based on the processing of the audio data, the occurrence of the invocation phrase in a portion of the audio data. For example, when the invocation phrase is, โAssistant,โ the first acoustic model can receive the portion of audio data and output either a semantic representation of the word โassistant,โ or text corresponding to the word โassistant.โ The automated assistant can then compare the semantic representation, or the text, to one or more stored representations of the invocation phrase in order to determine whether the user is intending to invoke the automated assistant.
The method 300 can also include an operation 306 of determining that the portion of the audio data that includes the invocation phrase corresponds to a user profile accessible to the automated assistant. This determination can be performed based on the processing of the audio data using the one or more acoustic models, or other processing using one or more other acoustic models. For example, the first acoustic model can receive the portion of audio data as the input and provide an output that indicates that the user is intending to invoke the automated assistant. The first acoustic model can also provide an output that identifies the user that provided the audio input corresponding to the audio data. Specifically, the first acoustic model can operate to distinguish how different users say a particular invocation phrase. As an example, a first user may provide an invocation phrase at a pitch that is higher than a second user provides the same invocation phrase, therefore the first acoustic model can distinguish the first user from the second user by analyzing a level of pitch exhibited by the audio data. The automated assistant can access a table of voice signatures that identifies voice characteristics for each user that accesses the automated assistant. In this way, the automated assistant can use one or more acoustic models to characterize voice characteristics and identify a user profile of a user based on a degree of correspondence between an input from the user and the voice characteristics stored in association with the user profile in the table of voice signatures.
The user profile can identify one or more languages corresponding to one or more speech recognition models for processing natural language inputs from the user whose language preferences are identified by the user profile. The user profile can identify contexts in which the user prefers particular languages, probabilities or confidence scores associated with the particular languages, availability of speech recognition models corresponding to the languages, and/or any other data that can be used to identify language preferences of the user. The contexts identified by the user profile can include applications, locations, devices, contacts, times, and/or any other data that can characterize a context in which a user communicates using a particular language. In this way, a current context of the user that provided the audio input corresponding to the audio data can be compared to contextual data identified in the user profile of the user in order to identify a language that the user prefers to communicate given the current context. For example, if the user is at home and the user profile indicates that the user prefers to use Spanish when at home, the automated assistant can select Spanish as a preferred of language when the user invokes the automated assistant at home.
The method 300 can also include an operation 308 of identifying a language assigned to the user profile. The user profile can include multiple different languages that are assigned to the user profile, and the language identified at operation 308 can depend on a confidence score associated with the language in the user profile, contextual data corresponding to the language in the user profile, and/or any other data identified in the user profile suitable for processing when identifying the language. Identifying the language assigned to the user profile can include flagging the language as the active language for the automated assistant at the time the user provides the invocation phrase or subsequently thereafter.
The method 300 can further include an operation 310 of selecting a speech recognition model for the language based on identifying the language as assigned to the user profile. The speech recognition model can be selected from one or more candidate speech recognition models. In this way, the automated assistant can switch between speech recognition models in order to ensure that the automated assistant can interact with the user despite the user communicating in multiple different languages. The user profile can provide a correspondence between a language identified in the user profile and a speech recognition model. In this way, when the automated assistant identifies the language preferred by the user, the automated assistant will be able to also identify the speech recognition model corresponding to the preferred language.
The method 300 can also include an operation 312 of using the selected speech recognition model to process a subsequent portion of the audio data that follows the portion of audio data. In other words, a client device that includes the automated assistant at which the audio input is received, can store a snippet of audio data that embodies the invocation phrase as well as one or more other commands provided by the user. The automated assistant can cause a portion of the audio data to be processed by the first acoustic model to determine whether the user provided the invocation phrase. Any portion of the audio data that does not embody the invocation phrase can be processed by the speech recognition model. In this way, the user does not need to repeat any commands after this speech recognition model has been selected, but rather can rely on the automated assistant to adapt to variations in language that can occur as the user is interacting with the automated assistant.
The method 300 can optionally include an operation 314 of causing the automated assistant to provide responsive content that is determined or generated based on the processing of the subsequent portion of the audio data using the selected speech recognition model. The responsive content can be any output capable of being provided by a computing device. For example, the responsive content can be a natural language output generated by a speech generation model corresponding to the language identified at operation 308. Therefore, the natural language output can be an audio output, a video output, and/or any other output that can be characterized as a natural language output. When the subsequent portion of audio data includes a query from the user, the responsive content can be an answer to the query that is provided in the language identified at operation 308.
FIG. 4 illustrates a method 400 for scheduling a language model to be pre-emptively activated according to contextual data accessible to an automated assistant. The method can be performed by one or more computing devices, applications, and/or any other apparatus or module capable of interacting with an automated assistant. The method 400 can include an operation 402 of determining that an event is to occur during an upcoming period of time. The event can be described by a stored calendar event or other data that characterizes the event and sets forth the period of time at which the event will occur. An automated assistant can determine that the event is going to occur at the upcoming period of time by accessing account data associated with a particular user or group of users. Alternatively, the automated assistant can be at least partially hosted at a device that includes a memory that stores data corresponding to multiple different events that are associated with multiple different users. The event can be identified over a network, such as the internet, and can be associated with publicly available data that is associated with one or more different users. For example, the event can be associated with an upcoming public festival or public holiday that can be associated with a particular language.
The method 400 can further include an operation 404 of determining whether the event is associated with a particular user. The determination can be based on a comparison between event-related data and user-related data that are accessible to the automated assistant. For example, an event can be associated with the user when the event is described by a calendar entry and includes the user as an attendee. Furthermore, an event can be associated with a particular user when an account associated with the user includes information that is associated with the event. Moreover, the event can be associated with a particular user when historical interaction data between the user and an automated assistant identifies the event, or otherwise describes information associated with the event. For example, if a particular user has requested that the automated assistant order tickets to a particular destination that is also the location of the event, the event can be associated with the particular user.
When the event is not associated with a particular user, the method 400 can refer back to operation 402 of monitoring whether an upcoming event is to occur. Otherwise, when the event is associated with the particular user, the method 400 can proceed to operation 406 of selecting a user profile corresponding to the particular user. The user profile can be identified in an index or table that lists one or more user profiles and provides a correspondence between the user profiles and one or more different users. For example, a computing device that at least partially hosts an automated assistant can store one or more user profiles, which can designate particular language models to use for communicating with or interpreting inputs from a particular user. Therefore, because the event is associated with a particular user, a user profile can be selected in order to identify a suitable language model to activate pre-emptively for the upcoming event.
The method 400 can also include an operation 408 of determining whether the event is associated with a context identified by the selected user profile. If the event is not associated with a context identified by the user profile, the method 400 can proceed to an operation 410 of selecting a default language model of language models identified in the user profile. For example, the selected user profile can identify contexts such as a location, a contact or person associated with the event, an application or a device associated with the event, a time for the event, and/or any other information that can identify a context in which an event can occur.
When the event is associated with a context identified by the user profile, the method 400 can proceed to an operation 412 of determining one or more scores for one or more language models identified by the user profile based on the context. For example, the event can be associated with a location, and the user profile can identify: a first score for a first language model and the location, and a second score for a second language model and the location. If the first score is greater than the second score, the first language model can be selected for pre-emptively activating for the upcoming event.
When the scores are determined for the language models identified by the user profile, then the method 400 can proceed to an operation 404 of selecting a language model based on the determined score. When two or more scores are the same or substantially similar, additional context can be considered in order to further distinguish the scores and select a suitable language model. For example, if the event is associated with contacts that the user has previously communicated with using a particular language, the user profile can identify one or more of the contacts in order to determine additional scores to consider. The additional scores can be combined with the previously considered scores, and a language model associated with the highest score can be selected for pre-emptively activating.
When a particular language model has been selected user profile, the method 400 can proceed to an operation 416 of preemptively configuring the selected language model to be active for the event that is during the upcoming period of time. In this way, when the event begins, or the period of time is the present time, the selected language model will be active. This can be useful when the event is located in area with limited network connectivity, as the language model would have already been downloaded to the device of the user before the event.
FIG. 5 illustrates a block diagram of an example method 600 to generate voice-based interfaces in a networked system. The method 600 can include receiving audio data (operation 602). The method 600 can include parsing the audio data (operation 604). The method 600 can include determining that a first portion of the audio data corresponds to a user profile (operation 606). The method 600 can include selecting a language and speech recognition model (operation 608). The method 600 can include parsing a second portion of the audio data (operation 610). The method 600 can include selecting digital components (operation 612). The method 600 can include transmitting the digital components (operation 614).
The method 600 can include receiving audio data (operation 602). The audio data can be generated as an input audio signal based on audible input received at a client device that includes an automated assistant interface for interacting with the automated assistant. The automated assistant interface can be, for example, an audio subsystem of the client device and can therefore include one or more of a microphone, a speaker, and/or any other apparatus for transmitting audio related data.
The method 600 can include parsing the audio data (operation 604). The speech recognition engine can parse the audio data. The speech recognition engine can parse the audio data with one or more acoustic models. The speech recognition engine can parse the audio data to identify an invocation phrase that is configured to invoke the automated assistant. The acoustic models can be agnostic to the language in which the speech of the input audio signal (e.g., the speech of the invocation phrase) was spoken. The acoustic models can process the audio data to identify pitch, tone, accents, intonation, or any other feature of speech that can be used to identify a phrase or the user that generated the input audio signal. The speech recognition engine can select or extract the portion of the audio data that includes the invocation phrase.
The method 600 can include determining that a first portion of the audio data corresponds to a user profile (operation 606). The speech recognition engine can use the portion of the audio data that includes the invocation phrase to determine the audio data corresponds to the user profile. The speech recognition engine can determine that audio data corresponds to a user profile by matching voice features of the audio data to voice features associated with the user profile. The speech recognition engine can select the user profile from a plurality of user profiles. Each of the plurality of user profiles can be associated with the client device. For example, the client device can have multiple users and each of the users can generate a user profile.
The method 600 can include selecting a language and a speech recognition model (operation 608). The speech recognition engine can select the language or the speech recognition model based on the user profile. The user profile can include multiple languages. For example, the user can be bilingual and the user profile can be associated with a speech recognition model that corresponds to each of the languages that the user speaks. The speech recognition engine can select the speech recognition model and language based on context parameters, such as client device location. For example, the automated assistant may be executed on a client device, such as a smart phone. The user may typically speak a first language at a first location (e.g., a work location) and may speak a second location at a second location (e.g., a home location). In this example, the server device determines that the client device is at the user's work location, the speech recognition engine can select a speech recognition model corresponding to the first language. The automated assistant can generate a probability or confidence score that a speech recognition model is associated with a user profile. For example, the more often the user provides inputs to the automated assistant in a given language, the higher the probability or confidence score that the given language (and associated speech recognition model) should be associated with the user profile. Selecting the language assigned to the user profile can include flagging the language as the active language for the automated assistant at the time the user provides the invocation phrase or subsequently thereafter.
The method 600 can include parsing a second portion of the audio data (operation 610). The speech recognition engine can parse the second portion of the audio data to identify a request and a keyword. The second portion of the audio data following the portion containing the invocation phrase. The request can be a request for a digital component. For example, the request can be for a digital component that includes images, video, text, audio files, or any combination thereof. The request can be a request to access the functions provided by an agent associated with the automated assistant. For example, the automated assistant can transmit the identified request to an agent via a web hook and the agent can fulfill the request. The keywords can include terms that are relevant, identified by, or associated with the requested or requested digital component. A keyword can include one or more terms or phrases. For example, for a request that a digital component including the current weather in San Francisco, the keyword can be โweatherโ or โSan Francisco.โ
The method 600 can include selecting digital components (operation 612). The digital component selector can select one or more digital components. The digital component selector can select a digital component based on the request that is identified in the audio data. The digital component selector can select a digital component based on the keyword identified in the audio data. The digital components can be selected based on the identified language. For example, the digital component can be selected based on the language of the invocation phrase or the language associated with the user profile. The user profile can be associated with multiple languages or speech recognition models. The digital components can be selected based on the additional languages or speech recognition models associated with the user profile. For example, the speech recognition engine can determine the user generally provides audio data in the Spanish language (based on previous interactions), but that the current audio data was spoken in English. In this example, the speech recognition engine can associate a higher confidence score with Spanish than English (based on the previous interactions) and can select a digital component based on the additional language (e.g., Spanish) that is associated with the user profile.
The method 600 can include transmitting the digital components (operation 614). The server device can transmit the selected digital components to the client device that transmitted the audio data to the server device. The server device can transmit the selected digital components to client device in response the audio data. For example, one of the selected digital components can be transmitted to the client device to fulfill the request identified in the audio data and a second digital component can be transmitted to the client device to provide supplement content associated with the request or preferences of the client device.
FIG. 6 is a block diagram of an example computer system 510. Computer system 510 typically includes at least one processor 514 which communicates with a number of peripheral devices via bus subsystem 512. These peripheral devices may include a storage subsystem 524, including, for example, a memory 525 and a file storage subsystem 526, user interface output devices 520, user interface input devices 522, and a network interface subsystem 516. The input and output devices allow user interaction with computer system 510. Network interface subsystem 516 provides an interface to outside networks and is coupled to corresponding interface devices in other computer systems.
User interface input devices 522 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touchscreen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices. In general, use of the term โinput deviceโ is intended to include all possible types of devices and ways to input information into computer system 510 or onto a communication network.
User interface output devices 520 may include a display subsystem, a printer, a fax machine, or non-visual displays such as audio output devices. The display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image. The display subsystem may also provide non-visual display such as via audio output devices. In general, use of the term โoutput deviceโ is intended to include all possible types of devices and ways to output information from computer system 510 to the user or to another machine or computer system.
Storage subsystem 524 stores programming and data constructs that provide the functionality of some or all of the modules described herein. For example, the storage subsystem 524 may include the logic to perform selected aspects of method 300, 400, and/or to implement one or more of server device 102, client computing device 118, portable computing device 132, assistant device 212, and/or any other device or operation discussed herein.
These software modules are generally executed by processor 514 alone or in combination with other processors. Memory 525 used in the storage subsystem 524 can include a number of memories including a main random access memory (RAM) 530 for storage of instructions and data during program execution and a read only memory (ROM) 532 in which fixed instructions are stored. A file storage subsystem 526 can provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges. The modules implementing the functionality of certain implementations may be stored by file storage subsystem 526 in the storage subsystem 524, or in other machines accessible by the processor(s) 514.
Bus subsystem 512 provides a mechanism for letting the various components and subsystems of computer system 510 communicate with each other as intended. Although bus subsystem 512 is shown schematically as a single bus, alternative implementations of the bus subsystem may use multiple busses.
Computer system 510 can be of varying types including a workstation, server, computing cluster, blade server, server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computer system 510 depicted in FIG. 6 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations of computer system 510 are possible having more or fewer components than the computer system depicted in FIG. 6.
In situations in which the systems described herein collect personal information about users (or as often referred to herein, โparticipantsโ), or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current geographic location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. Also, certain data may be treated in one or more ways before it is stored or used, so that personal identifiable information is removed. For example, a user's identity may be treated so that no personal identifiable information can be determined for the user, or a user's geographic location may be generalized where geographic location information is obtained (such as to a city, ZIP code, or state level), so that a particular geographic location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and/or used.
While several implementations have been described and illustrated herein, a variety of other means and/or structures for performing the function and/or obtaining the results and/or one or more of the advantages described herein may be utilized, and each of such variations and/or modifications is deemed to be within the scope of the implementations described herein. More generally, all parameters, dimensions, materials, and configurations described herein are meant to be exemplary and that the actual parameters, dimensions, materials, and/or configurations will depend upon the specific application or applications for which the teachings is/are used. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific implementations described herein. It is, therefore, to be understood that the foregoing implementations are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, implementations may be practiced otherwise than as specifically described and claimed. Implementations of the present disclosure are directed to each individual feature, system, article, material, kit, and/or method described herein. In addition, any combination of two or more such features, systems, articles, materials, kits, and/or methods, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.
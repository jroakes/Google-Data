US20150161255A1 - Systems and Methods for Deriving and Using an Interaction Profile - Google Patents
Systems and Methods for Deriving and Using an Interaction Profile Download PDFInfo
- Publication number
- US20150161255A1 US20150161255A1 US13/308,770 US201113308770A US2015161255A1 US 20150161255 A1 US20150161255 A1 US 20150161255A1 US 201113308770 A US201113308770 A US 201113308770A US 2015161255 A1 US2015161255 A1 US 2015161255A1
- Authority
- US
- United States
- Prior art keywords
- electronic documents
- search
- profile
- queries
- result
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 230000003993 interaction Effects 0.000 title claims abstract description 130
- 238000000034 method Methods 0.000 title claims abstract description 115
- 238000004422 calculation algorithm Methods 0.000 claims abstract description 121
- 230000004044 response Effects 0.000 claims description 17
- 238000004458 analytical method Methods 0.000 description 56
- 230000009471 action Effects 0.000 description 37
- 230000006399 behavior Effects 0.000 description 19
- 230000006870 function Effects 0.000 description 16
- 238000010845 search algorithm Methods 0.000 description 16
- 238000013459 approach Methods 0.000 description 11
- 230000008569 process Effects 0.000 description 9
- 238000011156 evaluation Methods 0.000 description 7
- 230000000694 effects Effects 0.000 description 6
- 230000008859 change Effects 0.000 description 5
- 235000014510 cooky Nutrition 0.000 description 5
- 238000004364 calculation method Methods 0.000 description 4
- 239000000284 extract Substances 0.000 description 4
- 238000012552 review Methods 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 2
- 230000000903 blocking effect Effects 0.000 description 2
- 238000004891 communication Methods 0.000 description 2
- 238000013500 data storage Methods 0.000 description 2
- 230000007423 decrease Effects 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 238000002474 experimental method Methods 0.000 description 2
- 238000010801 machine learning Methods 0.000 description 2
- 238000005259 measurement Methods 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000006978 adaptation Effects 0.000 description 1
- 230000004931 aggregating effect Effects 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- XMQFTWRPUQYINF-UHFFFAOYSA-N bensulfuron-methyl Chemical compound COC(=O)C1=CC=CC=C1CS(=O)(=O)NC(=O)NC1=NC(OC)=CC(OC)=N1 XMQFTWRPUQYINF-UHFFFAOYSA-N 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000002860 competitive effect Effects 0.000 description 1
- 238000004590 computer program Methods 0.000 description 1
- 238000007405 data analysis Methods 0.000 description 1
- 238000013499 data model Methods 0.000 description 1
- 238000009795 derivation Methods 0.000 description 1
- 238000009499 grossing Methods 0.000 description 1
- 238000007477 logistic regression Methods 0.000 description 1
- 230000003278 mimic effect Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000008447 perception Effects 0.000 description 1
- 238000012545 processing Methods 0.000 description 1
- 241000894007 species Species 0.000 description 1
- 238000013517 stratification Methods 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
- 238000012549 training Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G06F17/30864—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0201—Market modelling; Market analysis; Collecting market data
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/2866—Architectures; Arrangements
- H04L67/30—Profiles
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/535—Tracking the activity of the user
Definitions
- the present invention relates generally to systems and methods for data analysis.
- the present invention relates particularly to systems and methods for deriving and using an interaction profile, such as a click profile.
- the commercial search engine may gather information about which results were presented to the user and about the particular results the user clicked. The commercial search engine operators may then use this information to evaluate the quality of the search, to improve the search, and to perform machine learning to improve the quality of the search results.
- a commercial search engine may present results from the new algorithm, and compare the click rate of the results from the new algorithm to the click rate of the results from the old algorithm.
- a higher click rate on results from the new algorithm suggests that it is superior. Examples of such approaches may be found in J. Boyan, D. Freitag, and T. Joachims, A Machine Learning Architecture for Optimizing Web Search Engines, Proceedings of the AAAI Workshop on Internet Based Information Systems, 1996.
- a result is “good,” or how good it is, without clicking on it. Users may click on a result by mistake. Moreover, users sometime click on results that are not superior, and in many cases, inferior, to other results. For example, the title and snippets associated with some search results may mislead users and result in an artificially-high click rate. The fact that users are misled may be accidental or deliberate. For example, some webmasters adjust their pages to make them appear artificially good in search result lists, in order to draw additional traffic to their sites. For example, some web sites extract information from a search query and insert the information into the result title or snippet, making the result appear as if it closely matches the search query. Thus, evaluating the quality of search results based solely on which results in a result set are selected by users (or “clicked on”) may not yield an effective evaluation.
- Some search engines associated with electronic-commerce sites have devised methods of tracking user behavior in an attempt to more accurately rank search results. For example, some commercial shopping sites track a user's behavior by determining whether they buy particular products when they are shown to the user. If the purchase rate increases, the ranking of the result is increased. This approach, too, has limited effectiveness. For example, this approach may not be available, to a search engine not associated with an electronic-commerce site, and access to such data may not be available. Moreover, for many searches, a purchase may not constitute a good indicator of user satisfaction.
- Embodiments of the present invention provide systems and methods for deriving an interaction profile, such as a click profile.
- a plurality of metrics indicating a level of satisfaction for search results is determined.
- the metrics may comprise at least one of click-duration data, multiple-click data, and query-refinement data.
- the values of the metrics for a plurality of instances of an object, such as search results from a search engine, are determined.
- An interaction profile for the object based at least in part on the values of the metrics for a plurality of instances of the first object, is then determined.
- This interaction profile may be used in a variety of ways, such as determining the quality of ranking algorithms, optimizing algorithms, and detecting undesirable search results.
- a computer-readable medium (such as, for example random access memory or a computer disk) comprises code for carrying out such a method.
- FIG. 1 is a block diagram illustrating an exemplary environment in which one embodiment of the present invention may operate
- FIG. 2 is a flowchart illustrating a method for deriving a click profile in one embodiment of the present invention
- FIG. 3 is a flowchart illustrating a method for estimating the quality of an object in one embodiment of the present invention
- FIG. 4 is a flowchart illustrating a method for identifying a possible manipulated article in one embodiment of the present invention
- FIG. 5 is a flowchart illustrating a method for comparing scoring algorithms in one embodiment of the present invention.
- FIG. 6 is a flowchart illustrating a method for determining the relative quality of search results for a particular query in one embodiment of the present invention.
- Embodiments of the present invention provide systems and methods for deriving and using an interaction profile, such as a click profile.
- an interaction profile such as a click profile.
- a search-engine provider wishes to consider a new ranking algorithm for implementation.
- the search-engine provider may carry out testing of the new algorithm whereby persons input search queries into a search-engine interface that then provides the search queries to a search engine employing the new algorithm, and the search engine returns search results resulting from the new algorithm to the querying person.
- the querying person then interacts with the search results, and the query, results, and interaction, and other relevant data may he recorded in a log file.
- a software application extracts information regarding user behavior from the log file for the new algorithm.
- the information includes on which results in a result set a user clicked, how long the user remained on the target web site, and other user-behavior information.
- This information can constitute a click profile for the new search algorithm.
- the software application may also extract similar data from the same or another log file associated with a second; different ranking-algorithm (for example, an algorithm previously used by the search engine, or another new algorithm under consideration for implementation). Such data can constitute a click profile for the second algorithm.
- the analyzer software application may then compare the click profile associated with the first ranking algorithm with the click profile associated with the second ranking algorithm to determine the relative quality of the first and second algorithms.
- the relative quality comprises an attribute indicating the nature of one of the algorithms relative to the other, or relative to a chosen object, expectation, or standard. This relative quality determination may be done to determine which of the two algorithms may be of higher quality.
- An example of a higher-quality algorithm may be one that produces better results in response to search queries.
- FIG. 1 is a diagram illustrating an exemplary environment in which one embodiment of the present invention may operate.
- the present invention may operate, and be embodied in, other environments as well.
- the system 100 shown in FIG. 1 comprises multiple client devices 102 a - n in communication with a server device 104 over a network 106 .
- the network 106 shown comprises the Internet. In other embodiments, other networks, such as an intranet, local area network, or wide area network may be used. Moreover, methods according to the present invention may operate within a single client or server device.
- the client devices 102 a - n shown each comprises a computer-readable medium.
- the computer-readable medium shown comprises a random access memory (RAM) 108 coupled to a processor 110 .
- the processor 110 executes computer-executable program instructions stored in memory 108 .
- Such processors may comprise a microprocessor, an Application-specific integrated Circuit (ASIC), a state machine, or other processor.
- ASIC Application-specific integrated Circuit
- Such processors comprise, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.
- Embodiments of computer-readable media may comprise an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a, with computer-readable instructions.
- suitable media may comprise a floppy disk, Compact Disk Read Only Memory (CD-ROM), magnetic disk, memory chip, ROM, Random Access Memory (RAM), an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other suitable medium from which a computer processor can read instructions.
- various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.
- the instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Peri, and JavaScript.
- Client devices 102 a - n may also comprise a number of external or internal devices such as a mouse, a CD-ROM, a keyboard, a display, or other input or output devices.
- client devices 102 a - n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices.
- a client device 102 a - n may be any type of processor-based platform that is connected to a network 106 and that interacts with one or more application programs.
- Client devices 102 a - n may operate on any suitable operating system, such as Microsoft® Windows® or Linux, capable of supporting one or more client application programs.
- the client device 102 a shown comprises a personal computer executing client application programs, also known as client applications.
- the client applications can be contained in memory 108 and can comprise, for example, a word processing application, a spreadsheet application, an e-mail application, a media player application, an instant messenger application, a presentation application, an Internet browser application, a calendar/organizer application, and any other application or computer program capable of being executed by a client device.
- a server device 104 is also coupled to the network 106 .
- a user 112 a - n can generate a search query 114 at a client device 102 a - n.
- the client device 102 a - n transmits the query 114 to the server device 104 via the network 106 .
- a user 112 a types a textual search query into a query field of a web page of a search engine interface displayed on the client device 102 a, which is then transmitted via the network 106 to the server device 104 .
- a user 112 a - n inputs a search query 114 at a client device 102 a - n, which transmits an associated search query signal corresponding to the search query to the server device 104 .
- the search query may be transmitted directly to the server device 104 as shown.
- the query signal may instead be sent to a proxy server (not shown), which then transmits the query signal to server device 104 .
- Such an embodiment may be utilized, for example, to generate a log of a user's behavior while accessing the network 106 .
- the server device 104 shown comprises a server executing a search engine application program, such as the GoogleTM search engine. Similar to the client devices 102 a - n, the server device 104 shown comprises a processor 116 coupled to a computer-readable memory 118 .
- Server device 104 depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 104 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.
- Client processors 110 and the server processor 116 can be any of a number of well known computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
- a client may perform any or all of the processes described as being performed by a server.
- a server may perform any or all of the processes described herein as being performed by a client.
- Memory 118 contains the search-engine application program, also known as a search engine 120 .
- the search engine 120 locates relevant information in response to a search query from a user 112 a - n.
- the server device 104 also includes an analyzer application 122 .
- the analyzer application or analyzer, comprises an application that may analyze data.
- the analyzer 122 shown in FIG. 1 comprises a software application that receives and analyzes data.
- the analyzer 122 shown reads log-file information and derives aggregated (and non-aggregated) data based on the log-file information.
- the analyzer 122 is depicted as an application program executing on the server device 104 , in other embodiments, the analyzer 122 may comprise various other hardware and software and may execute independently of the server device 104 .
- the analyzer 122 shown in FIG. 1 may comprise computer code for carrying out all or some of the methods ascribed to the analyzer below, including those described with reference to FIGS. 2-4 .
- the server device 104 has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems connected to the network 106 , and indexed the articles in memory 118 or on another data storage device, such as data store 130 .
- the data store 130 can be any type of suitable computer-readable media and can be integrated with the server device 104 , such as a hard drive, or external to the client server device 104 , such as an external hard drive or on another data storage device accessed through the network 106 .
- the data store 130 may comprise any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs.
- Articles comprise, for example, data elements from a database, web pages of various formats, such as Hypertext Markup Language (HTML), eXtensible Markup Language (XML), eXtensible Hypertext Markup Language (XHTML), Portable Document Format (PDF) files, and word processor, database, and application program document files, audio, video, or any other documents or information of any type whatsoever made available, on a network (such as the Internet), a personal computer, or other computing or storage means.
- HTML Hypertext Markup Language
- XML eXtensible Markup Language
- XHTML eXtensible Hypertext Markup Language
- PDF Portable Document Format
- the search engine 120 responds to the query signal by generating and returning a set of relevant search results.
- search results are returned as an ordered result set formatted as a list to client device 102 a - n from which the search query originated.
- the result set comprises one or more search results, and the search results may comprise one or more article identifiers.
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, an index in a database, an indicator of a single destination, item, or location, or any other suitable article identifier.
- the result set may include additional elements as well, including, for example, a snippet associated with each search result.
- the search engine 120 also comprises a web server application.
- the web server responds to Hypertext Transfer Protocol (HTTP) requests by executing code.
- HTTP Hypertext Transfer Protocol
- the web server also stores one or more logs of activity on the web server.
- the data is typically written to a file, database, or other data store, and stored in a binary format.
- the log, or log file may be stored, for example, in data store 130 .
- the logs typically include information regarding activity such as access and errors.
- an access (or transfer) log includes an entry for each access of the web site. Each entry includes an Internet protocol (EP) address of the requestor, the date and time; the URL, the method of access, the client (e.g., the browser application), the status, cookie information, and other information about the access.
- EP Internet protocol
- the URL includes information that can be used to reconstruct the search query 114 entered by the user.
- data store 130 comprises two log files, Log File 1 132 and Log File 2 134 .
- server device 104 and server device 122 may comprise a single physical or logical server.
- the system 100 shown in FIG. 1 is merely exemplary, and is used to explain the exemplary methods shown in FIGS. 2-4 .
- FIG. 1 Various methods according to the present invention may be implemented in the environment shown in FIG. 1 and other environments. Methods according to the present invention may be implemented by, for example, a processor-executable program code stored on a computer-readable medium. Example methods according to the present invention are described below.
- the example methods described below include methods of competitive evaluation of ranking functions as a function of user behavior (such as clicks or other interactions by the user with search results).
- the sections below entitled “Determining Ranking Algorithm Quality By Comparing Interaction Profiles of Ranking Algorithms” and “Comparing Algorithms on Different Classes of Queries” include descriptions of such methods.
- Example methods described below also include methods of evaluation of a search result across queries to determine the probable quality of a particular object, such as a search result.
- the sections below entitled “Evaluation of a Particular Class of Search Result” and “Manipulated Article Identification” include descriptions of such methods.
- a log file may include, for example, user-behavior data, or data indicating a user's behavior relative to an object, such as search results returned to the user by a search engine in response to the user's query.
- User-behavior data may comprise, for example, data reflecting actions by the user.
- Actions by the user may include, for example, clicks on search results, clicks on advertisements, refinements of queries (such as the user's submission of new queries after submission of an earlier query that are similar to the earlier query), and other actions. Examples of other actions may include explicit or implicit indications of interest, such as hovering over or in the area of a potential selection, the area(s) of the screen the user may be viewing, and other data.
- a log file may comprise data indicating a search query received by a search engine from a user, the internet protocol (IP) address from which the search query originates, a cookie from the user, the response to the query by the search engine (such as, for example, the search results returned to the user in response to the query in the form of a search result set), actions taken by the person submitting the search query (such as actions taken by the person in relation to the search results provided by the search engine in response to the query, including actions such as selecting a search result, and such as the submission of a new or revised query by the person), time that actions occurred, and other data.
- the search result set comprising all of the search results determined by the search engine in response to the user's query is recorded in the log file. In other embodiments, fewer than all of the search results may be recorded.
- a link embedded in a search result may point to the search engine's site, and when a user clicks on the search result, the user's selection may first be directed to the search engine site (at which time the selection of the search result may be recorded in the log file), and then the user may be redirected to the site associated with the search result.
- code such as Javascript
- a search query submitted to the search engine 120 is represented by variables in a query string of a URL directed to the search engine.
- a log file 132 comprising the data discussed above for multiple search queries across multiple users using a particular ranking algorithm has been developed and stored.
- the log file 132 may be stored in any suitable location.
- the log file shown in FIG. 1 is located in the data store 130 .
- the log file 132 comprises the types of log-file data mentioned above recorded in relation to the particular search algorithm.
- FIG. 1 For illustration purpose, the system illustrated in FIG. 1 is used to describe the method shown in FIGS. 2-6 .
- the methods shown in FIGS. 2-6 may be carried out by other systems.
- log files are used only as an example of the type of data that may be used, as other types of files and information may be used in accordance with the present invention.
- An interaction profile comprises data indicating one or more interactions that have occurred with an object of the profile.
- One example of an interaction profile comprises a selection profile.
- a selection profile may comprise data indicating a histogram of one or more of various types of one or more interactions (such as clicks) for an object of the profile.
- a selection profile may be referred to as a click profile in an environment in which many of the interactions with the object is carried out through clicking an input device, such as a mouse, to select and/or interact.
- An object comprises the item or object that constitutes the subject matter of concern, operation, or analysis.
- One example of an object in accordance with the present invention is a particular search result.
- Another example of an object is a group of search results, whether in a search result set, multiple search result sets, or otherwise.
- Another example of an object is a particular URL.
- Another example of an object is a particular domain, which may include multiple URLs. There may be other suitable objects, and these serve only as examples.
- a click profile comprises aggregated data reflecting behavior of one or more users over all queries on an individual search result.
- the data may reflect user behavior relative to a search result when the search result is returned to a plurality of users when submitting a plurality of different search queries.
- a click profile comprises aggregated data reflecting user behavior over all queries on a plurality of search results (including, for example, all search results over a time period for an algorithm).
- the data may reflect user behavior relative to a group of search results (whether previously returned in the same search result set or not) when one or more of the search results in the group result are returned to a plurality of users when submitting a plurality of different search queries.
- a click profile may comprise data indicating a histogram for a search-result set returned by an Internet search engine in response to a search query.
- the histogram may be, for example, a histogram of click types and/or durations.
- the click profile for the search result set may include one or more of a variety of metrics (or attributes or properties). Metrics are standards or properties of measurement.
- the metrics in a click profile may include metrics indicating a level of satisfaction with an object, such as a search result or a search result set. A level of satisfaction indicates a level or degree of satisfaction.
- a click profile for a search-result set may comprise the total number of clicks made on the set during a user session, the total number of single, long clicks made on the set during a user session, the ratio of long clicks to short clicks on the result set during a user session, and the number of refinements of the original query made during a session.
- a click profile for a particular search result may comprise these same metrics.
- the metrics, and other metrics, may indicate the level of satisfaction that a human being has or had in relation to an object or an interaction.
- Short and long clicks are relative terms.
- a short click indicates that the user returns to the result set shortly after clicking on one of the results (e.g., a user clicks on a URL in a result in a result set, views the page associated with the URL, and immediately clicks the “Back” button on the user's Internet browser).
- a short click is a click that is less than 80 seconds in duration.
- a long click indicates that the user either returns to the result set after a relatively significant time viewing other pages (e.g., after 200 seconds or more), or does not return to the result set.
- a long click often indicates that the user located content of interest upon clicking on a result in the result set.
- a click profile may include other information.
- the click profile may include the click sequence.
- the click profile may indicate whether an action occurred before or after another action in a session.
- the location of the search result when clicked on for example, the first result in the search result set, or the fifth, or the tenth
- the page on which the search result clicked on resided (first page returned, second page returned, etc.)
- the user may alter the number of search results provided per page, and thus recording the search result's ranking and the page number on which it appeared may be beneficial.
- the click profile may also include an indication of whether the search result was the first result clicked on in the search result set, was the second result click on, or was later in a sequence of clicks.
- a click profile may comprise arbitrary observable information about a user session that contains a result. Such information may include, for example, the number, sequence, and duration of clicks.
- a click profile for an object, such as a search result, across multiple user-sessions may be useful in evaluating search algorithms and other aspects of providing search results. These multiple user-sessions may be sessions of many different people. Aggregating data for an object across multiple user sessions to construct an interaction profile, such as a click profile, for the object may provide a reliable basis for analysis.
- a click profile for a particular search result may include data associated with all instances of a particular query for which returned results include the particular search result, data associated with all instances in which the particular search result is included in returned results for any search query, or other data.
- a click profile for a particular domain may include data associated with all instances of a particular query for which returned results include the particular domain, data associated with all instances in which the particular domain is included in returned results for any search query, or other data.
- a click profile for a particular search (or scoring) algorithm may include data associated with all search results for all queries processed by the algorithm over a defined time period or other data.
- a click profile may include all, none, or some of the properties or metrics mentioned above in relation to a click profile for an object, with the quantities aggregated across the multiple user-sessions. Other properties or metrics may also be included in such a click profile.
- a click profile for a search-result set across multiple user-sessions may include the ratio of single to multiple clicks on the search-result set (for example, the number of times a user clicked on only one search result in the result set (single clicks) to the number of times a user clicked on more than one search result in the result set (multiple clicks)).
- Multiple clicks typically refers to the situation in which a user clicked on more than one result during a user session. Thus, in one embodiment, in any given user session, there may be no clicks, one click, or multiple clicks.
- the properties or metrics within a click profile may vary according to its object, according to its intended use, or other factors. Also, the method of determining the click profile may vary depending on its object. For example, determining a click profile for a particular ranking algorithm may involve determining attributes or metrics across multiple user-sessions involving the interactions of multiple users with multiple search result-sets. It is desirable for the click profile developed to include the data needed or useful in methods carried out using the profile.
- FIG. 2 is a flowchart illustrating a process for deriving an interaction profile in one embodiment of the present invention.
- an analyzer 122 examines the log file created by the server device 104 in response to access of the search engine 122 by one or more persons 112 a - n, and determines a click profile for an object.
- the object is a group of search results.
- the method makes use of a log file 132 , previously constructed as described above.
- the analyzer 122 first groups the log entries in the log file 132 by user by sorting interaction data in the log entries by user 200 .
- a particular user's interactions, as recorded in the log file over a time period, may be identified in any suitable manner.
- a user may be identified by the user's IP address.
- IP Internet Protocol
- the search engine may provide each user with an identifying cookie or other identifying data. The presence of the cookie may then be logged in the log file 132 , along with identifying information, to indicate the activity of a particular user.
- the analyzer 122 then sorts the interactions recorded in the log file 132 by user (as identified by IP address, cookie-based identification, or other identification), grouping the interaction data recorded in relation to the sessions for a user together, and records the sorted-by-user data in a sorted log file 136 .
- This sorted log file 136 may be stored in the data store 130 or in another suitable location.
- the analyzer then begins its analysis of the sorted log file 136 to determine the data used to create a click profile.
- the analyzer 122 identifies a user for analysis 201 .
- the analyzer 122 reads the sorted log file 136 and identifies the first user indicated in the sorted log file 136 as the user for current analysis. As discussed below, the process will repeat for the next user listed in the sorted log file 136 , and so on, in one embodiment of the present invention.
- the analyzer 122 After identifying the user for current analysis 201 , the analyzer 122 then identifies the beginning of a session in the sorted log file 136 for the user, and determines a search query of interest 202 . Identifying the beginning of a session may comprise, for example, identifying a point in the sorted log file 136 at which a first interaction for a user is recorded. In other embodiments, a new session may be indicated by the IP address of the user (or requestor) changing, a pre-defined time passing before a next interaction occurs, or other standard. A session typically indicates data associated with a single person's interactions with the search engine 120 , but can also involve multiple users.
- the analyzer 122 determines the beginning of a session. For example, in one embodiment, the analyzer 122 determines a search query submitted during the session by accessing the sorted log file 136 , and parsing a log entry containing the search query. In the instance that the log entry comprises the URL submission mentioned above, the analyzer 122 may extract the search query from the values of the variable q in the query string (“bmw+convertible+used” in the example given).
- the analyzer 122 next determines the search results provided by the search engine for the determined search query. For example, the analyzer 122 may determine article identifiers that would or did result from the search query 206 when searched by a search engine using the particular algorithm. In one embodiment, the search results returned to the user during the session have been recorded in the log file 132 , and are recorded in the sorted log file 136 . Thus, in such an embodiment, the analyzer 122 may determine the search results provided by examining the sorted log file 136 for that session.
- the analyzer 122 may resubmit the query to the search engine 122 (if still using the particular algorithm at issue) or another search engine using the algorithm associated with the web file in to determine the result set, access an archive of search results for queries, or otherwise determine the content and order of the result set for the search query in relation to the particular algorithm at issue.
- the analyzer 122 then proceeds sequentially through the sorted log file 136 and identifies a next action 208 .
- the next action comprises data indicating an action, typically a subsequent action, associated with the requestor's interaction with the search engine, such as the requestor's interaction with results from the search engine.
- the analyzer 122 determines a next action comprising the next action recorded in the sorted log file 136 that occurred after the requestor received search results in response to the requestor's search query.
- the next action comprises data indicating clicking on a result, changing the query, or a session change.
- the analyzer 122 may identify the next action as a selection of a result in the returned search results, such as clicking on a result 208 . For instance, the analyzer 122 may compare the article identifiers in the result set to the URL indicated as selected by the user in the sorted log file 136 . If the URLs match, the analyzer 122 concludes that the user clicked on the result associated with the URL. In one embodiment, the tog file 132 and the sorted log file 136 include an indication that a URL selected by the user was included in the search result set.
- the analyzer 122 identifies the result selected 210 . Identifying the result may comprise, for example, identifying the URL associated with the selection, determining the sequence and page number of the result within the result set, and determining any other properties of the result desired that may be used subsequently.
- the analyzer 122 may then determine if and when a session returns to the search engine 212 . For instance, the analyzer 122 may examine the sorted log file 136 to identify that the user under analysis selected a result from a result set, and then interacted again with the search results or the search engine within 300 seconds of such selection, and the analyzer 122 may treat those actions associated with the user as having occurred during the same session. This is just one example of an identification of a return of a session to the search engine. In another embodiment, the analyzer 122 may treat an interaction that occurs within a pre-defined time period (for example, 1800 seconds) after the previous interaction recorded for the user in the sorted log file 136 as part of the same session as the previous interaction. In another embodiment, the analyzer may treat the user entering a query that is not a refinement as a new session. In still another embodiment, the analyzer may treat the user entering a query that is different from the original query of the session as a new session.
- a pre-defined time period for example, 1800 seconds
- the analyzer 122 may then calculate the duration between the request for the result (e.g., the click) and the return 214 .
- the duration reflects the time between activities visible to the search site, and is estimated by the analyzer 122 from the timestamp offsets between interactions found in the sorted log file 136 .
- the analyzer 122 may compute the values of other metrics as well by, for example, examining the sorted log file. For example, in one embodiment, the analyzer 122 computes a delay. The delay represents the time that the user spent looking at the search page to determine which result to click.
- the method shown in FIG. 2 illustrates a method in which a result, return, and duration are determined.
- these attributes may be incalculable, not present, or otherwise not determinable.
- the method returns to the next action determination 208 in such an event.
- the attributes that may be determined are determined, and then the method returns to the next action determination 208 .
- the analyzer 122 may determine attributes or metrics associated with the sessions that will be necessary or useful in constructing a click profile for the object of the analysis.
- the analyzer 122 determines the next action using the log file 208 . If the next action is determined to be the receipt of a new query (or a query change) from the user within the session, the analyzer 122 determines whether the new query is a refinement of the existing query 216 . In one embodiment, the analyzer 122 determines a new query is a query refinement if the new query and the old query share a common term. In another embodiment, the analyzer 122 determines that a new query is a refinement of an old query if the queries share a common synonym. For example, if an old query includes the term “car” and a new query includes the term “automobile,” the new query is treated as a refinement of the existing query. Typically, a user refines a query when the user is not satisfied by the results returned by the first query.
- the analyzer 122 determines the result set for the new query 206 (for example, by any one of the methods described above). The analyzer 122 then determines what action is occurring 208 and proceeds accordingly.
- the process is repeated for all users and sessions in the sorted log file 136 .
- analyzer 122 determines if there is a next session for analysis 218 .
- the analyzer 122 may look in the sorted log file 136 to determine if there is a subsequent session for the user to the session under analysis. If there is a next session, the method shown repeats, beginning again at block 202 for the next session. If the analyzer determines that there is no next session for the user under analysis in the sorted log file 136 , the analyzer determines if there is data recorded in the sorted log file 136 for a next user 219 .
- the analyzer 122 may look in the sorted log file 136 to determine if there is a subsequent session recorded in the sorted log file 136 that is for a different user. If there is data for a next user, the method shown repeats for the next user, beginning again at block 201 by identifying the next user.
- the analyzer 122 stores the results of the identifications, calculations, determinations, and other analysis data in memory or in a data store, such as data store 130 .
- the data stored may comprise instances of the triple (s,q,r), where s is a collection of session-related properties, q is a collection of query-related properties, and r is a collection of result-related properties.
- An instance comprises an occurrence or presence.
- the session collection s may comprise, for example, the IP address of the session, the time and date that the session occurred, and other session-related data.
- the query collection q may comprise, for example, the search terms of a query submitted during the session s, the class of the query (e.g., navigational or search, etc.), and whether the query was refined or not.
- the result collection r may comprise, for example, the result set returned in response to the query, the sequence of results, click data for each of the results in the result set, including quantity, sequence, and duration of clicks, and other result-related information.
- the sequence of clicks refers to the number of clicks within a session.
- An instance of the triple (s,q,r) may be stored for each session identified in the log file.
- the data stored as the triple (s,q,r) should comprise the data necessary or useful in determining a click profile for the desired object of consideration.
- the triple (s,q,r) may provide the information to compute interaction profiles for one or more search results or groups of search results of interest.
- click profiles may be generated for any one or a group of objects, such as a search result, or a search result set. Click profiles may also be generated for other objects, such as a ranking algorithm (or scoring algorithm), a group of algorithms, a particular query, or other suitable object.
- a ranking algorithm or scoring algorithm
- the instances of (s,q,r) provide the raw data for deriving a click profile for a search result, group of search results, or other object.
- the analyzer 122 can provide an aggregated click profile for search results of specific queries and classes of queries, as well as an aggregated click profile for specific results or result sets. In one embodiment, this data may be further refined to constitute a click profile.
- the analyzer 122 when the analyzer 122 determines that there is no next user for analysis in the sorted log file 136 , the analyzer may then determine one or more click profiles. For example, a click profile may be determined for one object, or multiple click profiles may be determined for multiple objects, selected by an operator or by computer. Referring to block 220 , the analyzer 122 next determines an object of interest. As indicated by the examples above, this may be done in any suitable manner. For example, the analyzer 122 may ask an operator to indicate an object of interest by asking the operator for a query of interest, and then the analyzer 122 may designate the search result set associated with the query as the object of interest.
- the analyzer 122 may select some order of search result sets as objects of interest (for example, by time received by a user, alphabetical order based on query associated with the search result set, by the number of times provided, or other measure), and select the first one in the order for analysis.
- the analyzer 122 may ask the operator to designate a search result of interest by asking an operator to input a URL reflecting the search result of interest to the user.
- an operator may select a type of object for analysis because the operator wishes to conduct an analysis for each object of a certain type or kind (for example, the type or kind of object selected may be domains that appear in a large set of sessions, and thus the objects of interest will be those domains). In one such embodiment, the analyzer would generate a click profile for each of those domains automatically.
- the analyzer 122 identifies all instances of the object in the raw data previously generated 222 . In block 220 or block 222 , the analyzer 122 may identify these instances. In other embodiments, if the object of interest is a group of search results that constitutes a search result set for a query, the analyzer may identify instances of the search result set by identifying occurrences of the query (or queries) associated with the search result set. In other embodiments, fewer than all of the instances may be identified and used.
- the object of interest may be a particular search result input by the operator.
- the analyzer 122 determines the click profile associated with the search result of interest across multiple sessions 224 .
- the click profile for the search result of interest across multiple sessions comprises interaction attributes, such as click-duration data, multiple-click data, and query-refinement data.
- Click-duration data comprises data relating to the duration(s) of one or more clicks.
- Multiple-click data comprises data relating to the instance of greater than one click in, for example, a user session.
- Query-refinement data comprises data relating to the refinement of a search query in, for example, a user session.
- Examples of query-refinement data may include data indicating whether or not the user refined an original query during a user session, and data indicating the substance or text of the refinement itself.
- the click profile comprises the total number of clicks made on the search result during a user session, the total number of single, long clicks made on the search result during a user session, the ratio of long clicks to short clicks on the search result during a user session, the number of refinements of the original query made during a session when the search result was returned in a search result set, and the ratio of single to multiple clicks on search-result sets that included the search result.
- the analyzer 122 may determine these metrics by calculating them based on the raw interaction data described previously. Other embodiments may include other or different properties or metrics in the click profile.
- the value of the metrics (e.g., the length of time, text of query refinement, a yes or no indicator, or other value) May be calculated and stored in the click profile.
- these properties or metrics are aggregate totals. That is, if there are one thousand instances of the search result set in the data, and in each and every instance of the search result set, the user made two long clicks during a session, the metric of long clicks made on the set during a user session in the click profile for the search result set would be two thousand.
- the data associated with each search result set is used to determine an average for each metric desired.
- the metric of long clicks made on the set during a user session in the click profile for the search result set would be two (i.e., the average across all instances).
- any aggregate statistic or combination of aggregate statistics may be used, including the mean, median and mode, as well as variance, skew and higher moments, histograms and more-complex parametric and non-parametric data models.
- a click is just one type of selection, and interaction profiles may comprise non-click data.
- the interaction profile of a result can comprise information about when it was presented but not clicked on, such as the fraction of time it was presented and not clicked on, the fraction of time it was presented in a session where one result was clicked on, but it was not the result in question.
- a combination of properties or metrics for a search result set in a session may be weighted to determine its contribution to a property or metric for the overall analysis of the search result set.
- the analyzer 122 in calculating the values of properties or metrics to be used in the click profile for a search result set across multiple user-sessions may take into account general metrics associated with user behavior in deriving a click profile. It may choose to weigh various properties or metrics accordingly. For example, it has been observed that typically, clicks on search results decrease sharply with position. About 55% of all clicks occur on the first 5 results, and about 75% of all clicks occur on the first page. Also, out of all clicks, the maximum fraction, 22%, goes to first position clicks. The drop-off function can be modeled either by a linear approximation or a power law. Further, the fraction of single clicks decreases as the position increases (i.e., as the result appears further down in the result set).
- navigational queries have a very low refinement rate ( ⁇ about 0.3%) and a high instance of single clicks (about 81%).
- long queries and queries with syntax have several percentage point differences in overall click through and in the proportion of single/multiple clicks observed. Of clicked sessions, short queries average about 58% single clicks, while long queries average about 52% single clicks.
- the determination of an object of interest 220 , identification of instances 222 , and determination of a click profile for the object of interest across multiple user sessions and multiple users 224 may be repeated for all or less than all of the objects of interest identified as present in the analysis (not shown). For example, if there are multiple search results in the object of interest, such as in a particular search result set, a click profile for each of the search results across multiple user sessions and multiple users may be determined in this manner.
- the raw data, or instances of (s,q,r) itself may serve as the click profile. That is, in certain embodiments, the body of instances of (s,q,r) data, or a sub-set thereof, may serve as a click profile.
- Interaction profiles such as click profiles, may be used in a variety of ways. Some examples are provided below.
- Click profiles may be utilized to evaluate the likely quality of an object, such as a search result.
- the quality of a particular search result as indicated by its click profile may be compared with the quality of other search results in a group of results of interest (such as a group of results in a result set) to detect differences in user behavior.
- This detection may be used to detect an article with an undesired attribute, to detect a manipulated article (such as spam), to detect a high-quality search result that should appear higher in search rankings, to evaluate the quality and usefulness of a search algorithm, and for other purposes.
- a manipulated article comprises an article that has been manipulated.
- a manipulated article may comprise an article that has been manipulated specifically to influence a search engine's treatment of the article.
- a click profile may comprise information useful to identify a particular search result as likely “good” or “bad,” or to identify the domain associated with the result as likely “good” or “bad.”
- a user-behavior profile for a search result is affected by both position in its search result set and presentation bias—attributes of the result that attract the user to click on the result but are not necessarily linked to result quality (e.g., mimicking the user's query in the result). Analysis of the probability that a search result is “good” or “bad” search result using data for multiple users across multiple user-sessions may attenuate this affect on search-result quality analysis.
- the quality of an object may comprise a characteristic or property of the object that indicates its degree or grade of satisfaction of a desire, interest, or search.
- a high-quality search result may indicate a search result that is associated with content of interest that is perceived as satisfactory by a person.
- a low-quality search result may indicate a search result that is associated with content that is perceived as unsatisfactory by a person.
- a “good” search result may be a search result that is of high quality; that is, it is associated with content of interest that is perceived as satisfactory by a person.
- a “bad” search result may be a search result that is of lower quality—that is, a search result that is associated with content that is perceived as unsatisfactory by a person.
- analysis of the relative “goodness” of a search result is inherently an approximation of likely human perception.
- a degree of quality, or a degree of “goodness,” or a degree of “badness,” may be determined. Such a degree may indicate the relative level or magnitude of the trait.
- thresholds in relation to such degrees may be designated. For example, a function may determine that a particular search result should be assigned a value of 0.55 as a degree of “goodness,” and that another search result should be assigned a value of 0.45 as a degree of “goodness.” A method used may be to designate all search results with a value of 0.5 or higher as “good” results, and all search results with a value of 0.49 or lower as “bad” results. The setting of these thresholds may be done by observation, experiment, or other ways. Further, the definition of “good” and “bad” may be defined numerically in a particular utilization.
- FIG. 3 shows an example method for estimating the quality of an object according to the present invention.
- initial probability estimates for various user actions are learned 302 .
- these estimates are learned by comparing human-labeled result qualities to logged click behavior over a large set of (query, document) pairs obtained or derived from click profiles. This comparison allows for the determination of the metric values that indicate desirability.
- a human evaluator assigns a quality rating to a search result by examining the search result, and the content to which it may be linked, as returned for the used search query.
- the quality rating may comprise a number between 0 and 10.
- these human evaluators may evaluate a designated group of search results.
- the group of search results is a relatively large group of search results. Click profiles for this large group of search results are generated using methods like that described in relation to FIG. 2 . These profiles indicate the actions taken by multiple users across multiple session sets.
- the human-labeled result qualities for this large group of search results are then compared with the logged click behavior over a large set of (query, document) pairs for the large group of search results. Accordingly, through observation, the likelihood that a particular action, or a sequence of actions, results in a user clicking on a result that includes good content or that the user will perceive as good can be learned.
- the likelihood of an action taken resulting in the user finding satisfactory, or good, content by taking the action is determined to be as follows, p(good
- Table 1 above is an example of computing P(good
- the rows indicate clicks sequence type.
- the first sequence type or first row, is a session in which no results were clicked.
- the second sequence type is a single click in a session (e.g., just one selection made in the session).
- the third and fourth types are species of multiple clicks.
- a click that is a multiple click is one that is one of two or more clicks in a session. If that multiple click is the last click made in a sequence of clicks in a session, it is categorized as a Multiple (Last) type. If that multiple click is not the last click made in a session, it is categorized as a Multiple (Not Last) type.
- the columns indicate the duration of the click observed.
- the first column indicates an instance in which no click was observed.
- the second column indicates a click of short duration.
- a click of short duration is one that is less than 80 seconds
- a click of medium duration is one that is greater than 80 seconds and less than 200 seconds
- a click of long duration is one that is more than 200 seconds.
- a probability function to determine the quality of a particular object may vary according to preference, data set behavior, and other factors. In selecting the probability function, various factors should be considered. For example, although clicks may indicate a user's satisfaction with results only fifty percent of the time, certain types of clicks represent a user's satisfaction eighty percent of the time. Long clicks (such as those with duration over two-hundred seconds) tend to indicate user satisfaction (e.g., relevant content found). Also, clicks that are the only click of a user on a set of search results indicate user satisfaction with that result. In other embodiments, combinations of these metrics may be used to identify “good” results.
- One principle indicator is the ratio of short to long clicks received by a result domain.
- a relatively low ratio indicates a low quality or bad result set.
- clicks of less than eighty seconds duration, or that are one of many clicks in a sequence frequently indicate low quality results.
- clicks with short duration or that are part of a multi-click sequence may also be indicative of browsing.
- individual clicks are not reliable indicators for quality.
- the fact that results are not clicked on may serve as a type of click, i.e., it provides additional information for rating a set of results. These and other factors may be considered in selecting a probability function.
- the probability P that a search result is “good” may be based on the following function:
- ⁇ click,noclick ⁇ comprises the variable of whether a search result was clicked or not
- position comprises the variable of the position of the search result in a search result set
- duration comprises the variable of duration for the search result
- sequence comprises the variable of sequence of the selection of the search result
- refinement_next comprises the variable of whether the original search query was refined after selecting the search result.
- the following function may be used to observe probability that the search result is a “good,” or desirable, search result: P(good
- Such functions and approaches, and other functions and approaches may be refinements on the function and approach mentioned above with reference to Table 1.
- an object such as a particular search result
- the analyzer 122 may receive this selection 304 .
- This selection may be made in any suitable mariner.
- a human operator may select a particular search result for analysis by selecting the search result from a list of search results provided in a graphical user interface.
- a click profile for the object such as the search result selected, may then be obtained 306 .
- the click profile may be constructed in a manner like that described in relation to FIG. 2 .
- the click profile for the object may have been previously constructed, and the analyzer 122 may locate the click profile for the object in a database.
- a click profile useful in such analysis may contain the data needed to determine the probability that the particular result is good or bad, based on the factors in use in the particular method to make such a determination.
- the analyzer 122 may estimate the quality of the search result 308 . For example, the analyzer 122 may calculate an estimation of the quality of the search result. In one embodiment, if sufficient data is available to generate various metrics for a click profile, the quality of the profile may be analyzed. In another embodiment in which data may be limited or that is focused on a particular session, the probability that a particular result is good based on prior user interactions may be calculated. In other embodiments, these or other suitable approaches may be used.
- a calculation of the quality of a search result involves estimating a probability that the search result is a “good” result is based on a variety of observable measures.
- the click profile for the search result provides the analyzer 122 with the user-action data that may be used to determine the number of short clicks, the number of medium clicks, and other metrics that may be indicative of the quality of the search result.
- the probability that the search result is a good result is a product of this user-action data and the probabilities set out above as applied to user-action data.
- Expected goodness of search result given observables may be calculated as a mean value. For example, it may be calculated as the sum over all relevant observations: 1/n*sum_n[p(good
- the analyzer 122 compares a click profile metric, such as the fraction of long clicks, for a particular object of interest (such as a search result) with the same metric for other comparable objects. If the analyzer 122 determines that the metric for the particular search result of interest is in the bottom 5 th percentile (or, in another embodiment, in the bottom 10 th percentile) of the metric for such comparable search results, then the analyzer designates the search result of interest as a poor (or “bad” or “not good”) result.
- a click profile metric such as the fraction of long clicks
- the quality probability of a search result or other object may be used in any of a variety, of suitable ways. For example, if the aggregated probability that the search results returned by one algorithm are good is higher than the aggregated probability that the search results returned by a second algorithm are good, then an operator may further analyze the reasons that the first algorithm returns a search result set with a higher probability. As another example, measurements from the click profiles, from probability determinations, and other determinations may be used as a signal in a scoring algorithm for a search engine. For example, the analyzer 122 may assign a number to a search result (such as a URL) between 0 and 1 that represents the probability that the result is a “good” result.
- a search result such as a URL
- the number may then be used as a signal in a ranking algorithm to score the search result for ranking purposes.
- this probability variable may be multiplied by a score for the search result (URL) as calculated by a scoring algorithm so as to affect the ordering of a result set.
- probabilities may be used to detect manipulated articles, and this use is discussed further below.
- a probability measure may be made in any of a variety of suitable ways.
- the metrics involved in the calculation may be compared to expected values, and if the metric exceeds the expected value, the metric tends to indicate a higher probably that the search result is a “good,” or desirable, search result.
- the user performs a query and is expected to act in a certain way (i.e., the analyzer 122 expects certain values for the click profile metrics); if the user does not act in that way, it suggests that the results are not “good.”
- the starting estimate of whether a result is “good” can be computed with a conditional probability table generated by binning and/or smoothing the features in the click profile.
- These features may include, for example, the click durations and sequence.
- Other embodiments may include the use of parametric or non-parametric models, such as logistic regression, to estimate probability of a result being good as a function of the click profile.
- These embodiments may include, for example, models that explicitly model sequence information, such as hidden Markov models.
- an automatic learning system monitors features of one or more click profiles of one or more classes of results.
- the system learns a model of features of the results and their queries that predicts the quality of the results indicated by the profiles.
- An example of methods and systems of the type that may be used for such analysis may be found in U.S. patent application Ser. No. 10/706,991, “Ranking Documents Based on Large Data Sets,” filed Nov. 13, 2003, Attorney Docket No. 0026-0057, owned by the same assignee as the present application, which is hereby incorporated by reference in full.
- This referenced patent application describes the learning of a model of features of results and queries that predicts whether or not there will be a long click on a result.
- Embodiments of the present invention may learn, for example, a model of features of results and queries that predicts the “goodness” of results, in any of the forms mentioned above.
- the fraction of good clicks associated with an interest set may be useful in analysis of the interest set or in comparing the interest set with another object.
- the analyzer 122 may construct a click profile for the interest set according to the method described in relation to FIG. 2 or another method. The analyzer 122 may then access the click profile to determine the number of clicks that may be classified as “good” using the probability determinations described above or other methods. The analyzer 122 may also determine the total number of clicks (good and bad) for the interest set. The analyzer 122 may then calculate the fraction of clicks that are classified as good by, for example, dividing the number of good clicks determined by the total number of clicks. This fraction of good clicks may be used as a basis for comparison with other objects of interest, or may be used as a metric to evaluate the quality of the interest set.
- a click profile is developed for manipulated-article results, such as spam results.
- a manipulated article is an article (such as a web page) that has been manipulated to deceive or distract an analysis of the article, such as an automated analysis of the article by a web crawler or a search engine.
- Spam pages are one example.
- a click profile can be used to identify spam.
- spam comprises a result page in which standard content signals for the page, such as content and anchors, have been modified in a way that does not reflect the value of the page for the user, but causes it to be ranked more highly for queries. Spammers not only optimize web pages to achieve higher rankings from a search engine, but optimize the title and snippet to mimic results for “good” content in order to maximize the click through rate from users.
- Click profiles may be used to identify spam pages and content.
- the analyzer 122 generates a click profile for a result in a result set (e.g., a URL at the domain level), and compares the click profile for the result to a profile identified as indicative of spam.
- the spam-indicative profile may be identified or constructed by human evaluators or automatically, based on a variety of factors that will change depending on, among other things, varying approach by web-page spammers. It has been found that spam sites or pages have the following attributes: spam results comprise results that are overly optimized for search engines; the pages tend to score high in page-scoring algorithms, but they are seldom visited by navigational client users; they are linked to by guestbook spammers, and they can be readily identified by human evaluators.
- the analyzer 122 may derive a click profile for a class of spam results.
- a click profile for a class of spam results may be determined using a variety of factors. It has been observed that, for spam results, long duration clicks are only half as likely for non-spam; and results with very short clicks are the most likely to be spam results. The duration for spam results is typically short, evidencing a mean staytime of 51.3 seconds. Also, the ratio of short to long clicks is twice as high as for non-spam results, and spam results evidence more multiple clicks that other results. Generally, examining a particular result is not as effective as examining results for a domain. These and other factors may be considered in determining a click profile for a class of spam.
- a method for identifying a manipulated article, such as a “spam” page comprises calculating a “good click” as a long, single click, an indefinite duration single click, or a long, multiple click, and calculating a “bad click” as a short click.
- a “bad ratio” may then be calculated as bad clicks divided by good clicks, and a “good fraction” may be calculated as good clicks divided by all clicks for the analysis set.
- the bad ratio may then be calculated for the specific search result under analysis, and for the aggregate of all other search results that appear in a search result set with the specific search result under analysis.
- the analyzer 122 may conclude that the specific search result under analysis constitutes a spam-type result if its good fraction is less than 0.15, and its bad ratio is twice as great as the bad ratio of the aggregate of all other search results that occur with it in search result sets.
- the relative ratio of good clicks comprises (good clicks on a search result under analysis/bad clicks on the search result under analysis)/(good clicks on all search results in search result sets returned to users that included the search result under analysis/bad clicks on all search results in search result sets returned to users that included the search result under analysis).
- the search result may be identified as a search result that may point to a manipulated article, such as a spam page, a page devoid of content, or unpopular content.
- a ratio may be used to identify search results that are likely good, or high-content, sites. For example, if the relative ratio of good clicks for a search result is relatively high, the search result is identified as one that is likely associated with content that is good or helpful.
- Other methods may be used in determining a manipulated article, and this method serves only as an example.
- the profile defined for a manipulated article may be defined in absolute terms or relative to competing results. For example, in absolute terms, if a particular search result has a probability of being a good result that is lower than a pre-determined probability (e.g., 50%), the search result may be designated as a “bad” result. In relative terms, the probability determination for a particular search result may be compared with other search results in a search result set or other group of search results. If that search result's goodness-probability determination is low in absolute terms (e.g., less than 50%) but is substantially higher than goodness-probability determinations for other search results in the group, the particular search result may not be designated as a “bad” result.
- a pre-determined probability e.g. 50%
- FIG. 4 shows one example of a method for identifying a possible manipulated article.
- a click profile indicative of a manipulated article is constructed 402 using the techniques described above.
- a click profile indicative of a domain that comprises a spam-type domain may be constructed according to the above.
- the analyzer 122 uses the profile to analyze results and result sets to identify spam.
- the analyzer 122 may then identify an object of interest for analysis 404 .
- a human operator may indicate a particular group of domains for analysis, and the analyzer 122 may identify a first domain in the group as the first object of interest.
- the analyzer 122 may then create a click profile for the particular domain under analysis 406 .
- the analyzer 122 may then compare the metrics in the click profile for the domain of interest to the click profile for spam results 408 . If the comparison reveals similarities between the profiles or other indications that the domain may be a spam-type domain, then the analyzer 122 may indicate that the domain may be a spam-type domain. For example, if the metrics for the domain of interest are worse than the manipulated article profile 410 (e.g., the duration of clicks is shorter or the ratio of short to long clicks is higher), the analyzer 122 can mark or flag the domain as probably comprising spam 412 . Once the domain is marked, the search results can be de-weighted in future queries or the site can be marked for further analysis by, for example, human evaluators. If the comparison reveals that the click profile for the domain of interest is not similar to the profile for a manipulated article, or is “better than” such a profile, the method may continue by analyzing another object of interest or otherwise proceeding 414 .
- the metrics for the domain of interest are worse than the manipulated article
- the metrics stored in click profiles are used to compare a scoring algorithm under consideration with another scoring algorithm.
- FIG. 5 is a flowchart illustrating a method for comparing scoring algorithms using click profiles in one embodiment of the present invention.
- the metrics stored in a click profile can be compared for different result sets to determine, for example, which algorithm is superior, e.g., which algorithm produces higher quality results, such as results that appear to bring a user a higher level of satisfaction.
- the analyzer 122 determines a click profile for the first scoring algorithm 502 .
- the analyzer 122 next determines a click profile for a second algorithm 504 .
- These determinations may be carried out in any suitable manner, such as those described herein.
- the raw data used by the analyzer 122 to determine the click profiles is generated by causing a search engine to alternate between the two scoring algorithms over a period of time necessary to generate a data set sufficient for analysis.
- the data associated with the first algorithm may be stored in a first log file 132
- the data associated with the second algorithm may be stored in a second log file 134 .
- data associated with multiple algorithms may be interleaved in a single log file, and identified with a code or other data.
- the analyzer 122 compares the metrics of the two profiles 506 . Metrics of a profile are described above. For example, the analyzer 122 may compare the total number of clicks for each algorithm, the number of single long clicks, the ratio of long to short clicks, and the ratio of single to multiple clicks and the number of refinements to the query. One or more of these or other metrics may be used at once.
- the analyzer 122 may conclude that the first algorithm is better 508 , and the process ends 510 . If the analyzer 122 determines that the metrics are better for the second algorithm, the analyzer 122 may conclude that the second algorithm is better 512 . And if the metrics are substantially equal, the analyzer 122 may mark the algorithms for further evaluation 514 . This further evaluation may be by human observer or by machine analysis.
- the determination of whether one algorithm is better than another may be based on any of a variety of suitable approaches, and may vary depending on the application and desired approach. For example, in one embodiment, a higher magnitude for the following metrics may indicate a better algorithm: click rate, ratio of long to short clicks, and ratio of single to multiple clicks. In one embodiment, if all three of these metrics are higher for one algorithm, the analyzer 122 may treat that algorithm as better than the lower-scoring algorithm, and if all three are not higher for one algorithm, the algorithms are designated for Further review. In one embodiment, further review comprises a human being examining the metrics, understanding the differences between the algorithms, and determining how to proceed. Another embodiment involves further computer-based analysis. For example, in one embodiment, search results from the two algorithms may be interleaved for presentation to users, such that interaction with the interleaved search results may be analyzed.
- a click profile may be employed to systematically improve a ranking function by evaluating search results for groups of queries.
- Search results for different classes of queries will generally exhibit different click profiles.
- search results for a navigational query such as a query for the location of a restaurant
- a click profile comprising a single long click or a click with no duration (i.e., the user does not return to the search results).
- general-searching types of queries will typically result in multiple clicks of varying durations.
- classes of queries with certain base click profiles can be derived based on various criteria.
- a “class” of result pages may be defined as a set of results that appear, for example, for an individual query (such as “BMW”), a category query (such as “automobiles”), all commercial queries, or other groupings.
- BMW individual query
- category query such as “automobiles”
- the algorithms can inject result sets with click-identified “good” pages by comparing the overall profile of a subclass of pages (pages with content X, or pages from mydomainx.com) to that of the larger class to identify “good” or “bad” result subclasses.
- FIG. 6 is a flowchart illustrating a process for determining the relative quality of search results for a particular query class produced by two different search algorithms by comparing a click profile for search results returned for the class of queries by one search algorithm with a click profile for search results returned for the class of queries by a second search algorithm.
- the analyzer 122 identifies a query class 602 .
- the class may be provided explicitly. For example, a user may identify a class of queries and provide it to the analyzer 122 by inputting one or more queries that constitute the class (e.g., “directions,” “map,” “address,” and “location.”). The queries in the class may be identified automatically, or provided implicitly.
- Another example of classification of queries is classification of queries that result-in high click duration in one group, and the classification of queries that result in medium or low click duration in another.
- the manual designation of queries in the class is used to describe the method for ease of illustration.
- the analyzer 122 next identifies a query within the class 604 . For example, the analyzer 122 may select the first query in a list provided by the user (e.g., “directions”). The query within the class identified may be one identified by a user as well.
- the analyzer 122 then derives a click profile for the query class identified for the two algorithms under consideration 606 .
- the analyzer 122 does so by first deriving a click profile for the query identified.
- the analyzer may determine a first click profile for the search results returned by the first algorithm in relation to the query “directions” (the first query identified in this example). This may be done according to the method discussed in relation to FIG. 2 by, for example, determining a click profile for the result set returned by the first algorithm in relation to the query.
- the analyzer determines a second click profile, one in relation to the second search algorithm under analysis, for the query in the class identified.
- the analyzer 122 may repeat the identification of a query within the class and the derivation of two profiles for that query in relation to the two algorithms under analysis in order to derive sufficient data to determine a profile applicable to the search results for the class of queries. For example, the analyzer 122 may determine two click profiles for each query in the list provided (for each query, one for the first algorithm, and one for the second algorithm).
- the analyzer 122 determines a click profile for the class of queries under consideration for each algorithm 606 . This may be done, for example, by taking the weighted average of values for the various metrics selected. They may be weighted by, for example, the number of occurrences of search results for the query.
- the analyzer 122 compares the class profiles 608 .
- the analyzer 122 compares the two click profiles for the query class. If the click profile for the query class as determined from data associated with the second algorithm displays better metrics for the query class than the first algorithm, the analyzer determines that the second algorithm produces better results for the class of queries under analysis, and may so indicate 612 . If the click profile for the query class as determined from data associated with the first algorithm displays better metrics for the query class than the second algorithm, the analyzer determines that the first algorithm produces better results for the class of queries under analysis 610 , and may so indicate.
- the query class may be selected for further study 614 . These determinations may be indicated to a user of the method, or another person. For example, a computer display may indicate the results.
- Deriving a click profile for a class of queries allows optimizing retrieval algorithms to maximize the probability that “good” pages are returned. Click behavior within a class tends to be similar while click behavior between classes can be highly disparate, e.g., navigation to specific sites versus browsing for a person's name.
- Click behavior may also be affected by geographical or cultural differences.
- classes are created to reflect these differences. For example, it may be the case that users in one country tend to read faster than users in another countries. Accordingly, what would be a short click for users in the second country may actually be a long click in the first country.
- the profile, or comparisons of the profile, may be adjusted accordingly.
- one method according to the present invention comprises determining a plurality of metrics (also called properties) indicating a level of satisfaction for search results, determining the values of the metrics for a plurality of instances of a first object (such as a search result), and determining an interaction profile for the first object based at least in part on the values of the metrics for a plurality of instances of the first object.
- a plurality of metrics also called properties
- Such an object may comprise any one or more of the objects discussed herein and others, including a search result, a search result set, and a scoring algorithm.
- a useful object for analysis in examining ranking algorithm is a search result set or group of search result sets.
- the metrics indicating a level of satisfaction may comprise factors that have been determined to indicate the presence or magnitude of a person's satisfaction, or happiness.
- metrics indicating a level of satisfaction with a search result set returned by a search engine may comprise the metrics and properties discussed herein and others, and may comprise data such as the total number of clicks made for the first object, total number of single, long clicks made on the first object, the ratio of long clicks to shorts clicks made on the first object, the number of query refinements made in relation to the first object, and the ratio of single to multiple clicks on the first object.
- the metrics determined may comprise interaction attributes. Interaction attributes comprise one or more attributes of an interaction, rather than only the number of interactions (the number of interactions can be included, but more is needed).
- interaction attributes comprise click-duration data, multiple-click data, and query-refinement data.
- interaction attributes comprise more than the number of clicks in a user session, or across multiple sessions, but instead comprise data about those clicks, such as their duration, sequence, whether they are multiple clicks or single clicks, whether a query was refined, and other attributes of the interactions.
- Determining the metrics to include within the interaction profile may comprise selecting metrics, such as those interaction attributes indicated, that may be relevant to user-perceived probability that the search results provide relevant information.
- User-perceived probability comprises a probability perceived by a user, such as a person.
- determining an interaction profile for the first object may comprise determining the values of the metrics for instances of the first object in multiple user-sessions of a search engine.
- One way this may be accomplished is by accessing a log file for the search engine.
- a user In the environment of interacting with web pages via a mouse or other input device, a user often provides the interactions with the search engine or other application by what has become known as clicking the mouse. Accordingly, interaction profiles in such environments may be referred to as click profiles.
- analysis of interaction profiles may involve comparing the profile for the first object with another set of data, such as an interaction profile for another object.
- a method according to the present invention determines the values of the metrics for a plurality of instances of a second object, determines an interaction profile for the second object based at least in part on the values of the metrics for a plurality of instances of the second object, and compares the interaction profile for the first object with the interaction profile of the second object.
- the comparison of the interaction profile for the first object with the interaction profile of the second object may comprise determining that a particular quality of the interaction profile for the first object is better than the particular quality of the interaction profile for the second object, and further comprise indicating a positive indicator for the first object.
- a positive indicator is an indication of a positive nature, such as an indication of acceptable quality, a higher quality, or other generally positive attribute. This positive indicator may be indicated by displaying an indication on a computer screen, displaying metric values side by side on a screen such that an operator can view which value may be higher or lower, or by any other suitable way.
- Comparing the interaction profile for the first object with the interaction profile of the second object may, alternatively or additionally, comprise determining that a particular quality of the interaction profile for the first object is less than the particular quality of the interaction profile for the second object.
- This particular quality comparison may be made by comparing values of metrics (e.g., comparing magnitudes of duration) or by any suitable comparison.
- a method of providing the first object (such as a search algorithm) may be adjusted based at least in part on the comparison. For instance, the search algorithm may be altered in light of the comparison.
- methods according to the present embodiment may detect undesirable objects, such as a manipulated article (e.g., spam web-page) or other undesirable factors.
- a method according to the present invention determines an interaction profile indicative of an undesired quality (such as a spam page, or a pornographic page), compares the interaction profile for a first object with the interaction profile indicative of the undesired quality, and if the interaction profile for the first object is within a specified similarity to the interaction profile indicative of the undesired quality, indicates a follow-up action for the first object.
- the specified similarity may be of any suitable nature, such as a closeness in magnitude of certain metrics, a number of metrics that are within a certain range, or other similarity.
- Follow-up action may comprise a human or computer review of the first object, blocking the first object from future search results, or other action.
- blocking may be accomplished, for example, by removing the object from an index from which the search results are drawn, by changing an attribute of the article to keep it from being provide in search results, by including the first object in a list of objects to be filtered from search results, or by other suitable approaches.
- methods according to the present invention may comprise determining a probability that the search result comprises a desirable or undesirable search result based at least in part on the interaction profile.
- methods according to the present invention may designate a class of objects, such as a group of objects or a genus of objects, in order to further analysis of, adjustment of, or other interaction with search algorithms and the like.
- the first object mentioned above may comprise a class of objects.
- the method determines the values of the metrics for a plurality of instances of a second object, wherein the second object is at least similar to the class of objects, determines an interaction profile for the second object based at least in part on the values of the metrics for a plurality of instances of the second object, and compares the interaction profile for the first object with the interaction profile of the second object.
- a quality for the second object may be determined based at least in part on the comparison. This quality may, for instance, indicate that the second object is a good search result when compared with the first object, or may indicate that it is a bad search result when compared with the first object.
- This quality may, for instance, indicate that the second object is a good search result when compared with the first object, or may indicate that it is a bad search result when compared with the first object.
- Another general example of a method according to the present invention comprises receiving click data associated with a search result, and determining a search-result click profile for the search result based at least in part on the click data associated with the search result.
- the search-result click profile comprises a click profile (a sub-set of interaction profile) for the search result.
- the click data may comprise click-duration data, multiple-click data, query-refinement data, click-quantity data, or other data that may be used in, or to calculate, data in a click profile, as discussed in the examples given.
- Such a method may further comprise analyzing the search-result click profile, and detecting an undesirable search result.
- a search-result click profile comprises a click profile for a particular search result.
- the particular search result may be embodied by a URL, a domain, or other object.
- the detection of an undesirable search result may be accomplished, for example, by detecting an indication that a domain associated with the search result is associated with spam. As discussed in the examples, users often interact with spam pages in a detectable manner.
- click data may comprise click data associated with a first search algorithm
- a method according to the present invention may receive click data associated with a search result and a second ranking algorithm (such as click-duration data, multiple-click data, or query-refinement data), determine a second search-result click profile for the search result based at least in part on the click data associated with the search result and the second search algorithm, and compare the first click profile to the second click profile.
- This comparison may comprise, or the method may further comprise, determining which of the first ranking algorithm and the second ranking algorithm is better.
- Analyzing the search-result click profile may comprise weighting the click data. In one embodiment, this may be accomplished by weighting the click data for the magnitude of “goodness” (or desirability) indicated by a particular variable. The ranking of a search result may be adjusted based at least in part on a result of the analysis. Weighting may be accomplished in one embodiment by categorizing the click data into kinds of clicks, determining relative “goodness” indication of the category, and weighting accordingly.
- the method after receiving click data associated with a search result, the method receives a search result set having the search result, and determines a result-set click profile for the search result set based at least in part on the click data associated with the search result.
- a first interaction profile for a first object is identified, and this first interaction profile is based at least in part on click-duration data for the first object, multiple-click data for the first object, and/or query-refinement data for the first object.
- a second interaction profile may then be identified, and a relative quality of the first and second objects may be determined based at least in part on a comparison of the first interaction profile and the second interaction profile. This relative quality may be that one profile is better than the other on terms previously defined, for example.
- the second interaction profile may comprise an interaction profile indicative of an Undesired quality (such as indicative of a manipulated article, like a spam web page). If it is determined that the first interaction profile is within a specified similarity to the second interaction profile, indicating for example a likelihood that the object associated with the first profile is also a manipulated article, follow-up action for the first object may be set.
- an Undesired quality such as indicative of a manipulated article, like a spam web page.
- determining a relative quality of objects comprises determining that a particular quality of the first interaction profile is less than the particular quality of the second interaction profile, and further adjusting a method of providing the first object based at least in part on the determination. For example, a search algorithm that provides the first object may be adjusted based on the determination.
- a method may determine a probability that the first object comprises a desirable object based at least in part on the first interaction profile.
- the first object may comprise a search result, a group of search results (such as a search result set), or another object. Whether the probability indicates an undesirable attribute for the search result may also be determined by, for example, comparing the probability against probabilities pre-determined (by experiment or otherwise) to indicate an undesirable attribute.
- these methods may be carried out for a class of objects. For example, multiple objects may be grouped into a class of objects.
- Computer-readable media may be provided that stores executable code for carrying out such methods as described herein. Examples of such media are given above.
Abstract
Description
- This application is a continuation application of and claims priority to U.S. application Ser. No. 10/878,926, filed on Jun. 28, 2004 and entitled “SYSTEMS AND METHODS FOR DERIVING AND USING AN INTERACTION PROFILE,” the contents of which are incorporated herein by reference.
- The present invention relates generally to systems and methods for data analysis. The present invention relates particularly to systems and methods for deriving and using an interaction profile, such as a click profile.
- When a user performs a search on a commercial search engine and then clicks on the results, the commercial search engine may gather information about which results were presented to the user and about the particular results the user clicked. The commercial search engine operators may then use this information to evaluate the quality of the search, to improve the search, and to perform machine learning to improve the quality of the search results.
- For example, if a commercial search engine has a new algorithm for determining search results for a search query, the commercial search engine may present results from the new algorithm, and compare the click rate of the results from the new algorithm to the click rate of the results from the old algorithm. A higher click rate on results from the new algorithm suggests that it is superior. Examples of such approaches may be found in J. Boyan, D. Freitag, and T. Joachims, A Machine Learning Architecture for Optimizing Web Search Engines, Proceedings of the AAAI Workshop on Internet Based Information Systems, 1996.
- Unfortunately, users cannot always determine if a result is “good,” or how good it is, without clicking on it. Users may click on a result by mistake. Moreover, users sometime click on results that are not superior, and in many cases, inferior, to other results. For example, the title and snippets associated with some search results may mislead users and result in an artificially-high click rate. The fact that users are misled may be accidental or deliberate. For example, some webmasters adjust their pages to make them appear artificially good in search result lists, in order to draw additional traffic to their sites. For example, some web sites extract information from a search query and insert the information into the result title or snippet, making the result appear as if it closely matches the search query. Thus, evaluating the quality of search results based solely on which results in a result set are selected by users (or “clicked on”) may not yield an effective evaluation.
- Some search engines associated with electronic-commerce sites have devised methods of tracking user behavior in an attempt to more accurately rank search results. For example, some commercial shopping sites track a user's behavior by determining whether they buy particular products when they are shown to the user. If the purchase rate increases, the ranking of the result is increased. This approach, too, has limited effectiveness. For example, this approach may not be available, to a search engine not associated with an electronic-commerce site, and access to such data may not be available. Moreover, for many searches, a purchase may not constitute a good indicator of user satisfaction.
- Embodiments of the present invention provide systems and methods for deriving an interaction profile, such as a click profile. In one embodiment of the present invention, a plurality of metrics indicating a level of satisfaction for search results is determined. The metrics may comprise at least one of click-duration data, multiple-click data, and query-refinement data. The values of the metrics for a plurality of instances of an object, such as search results from a search engine, are determined. An interaction profile for the object, based at least in part on the values of the metrics for a plurality of instances of the first object, is then determined. This interaction profile may be used in a variety of ways, such as determining the quality of ranking algorithms, optimizing algorithms, and detecting undesirable search results. In another embodiment, a computer-readable medium (such as, for example random access memory or a computer disk) comprises code for carrying out such a method.
- These example embodiments are mentioned not to limit or define the invention, but to provide examples of embodiments of the invention to aid understanding thereof. Exemplary embodiments are discussed in the Detailed Description, and further description of the invention is provided there. Advantages offered by the various embodiments of the present invention may be further understood by examining this specification.
- These and other features, aspects, and advantages of the present invention are better understood when the following Detailed Description is read with reference to the accompanying drawings, wherein:
-
FIG. 1 is a block diagram illustrating an exemplary environment in which one embodiment of the present invention may operate; -
FIG. 2 is a flowchart illustrating a method for deriving a click profile in one embodiment of the present invention; -
FIG. 3 is a flowchart illustrating a method for estimating the quality of an object in one embodiment of the present invention; -
FIG. 4 is a flowchart illustrating a method for identifying a possible manipulated article in one embodiment of the present invention; -
FIG. 5 is a flowchart illustrating a method for comparing scoring algorithms in one embodiment of the present invention; and -
FIG. 6 is a flowchart illustrating a method for determining the relative quality of search results for a particular query in one embodiment of the present invention. - Embodiments of the present invention provide systems and methods for deriving and using an interaction profile, such as a click profile. There are multiple embodiments of the present invention. By way of introduction and example, in one exemplary embodiment of the present invention, a search-engine provider wishes to consider a new ranking algorithm for implementation. The search-engine provider may carry out testing of the new algorithm whereby persons input search queries into a search-engine interface that then provides the search queries to a search engine employing the new algorithm, and the search engine returns search results resulting from the new algorithm to the querying person. The querying person then interacts with the search results, and the query, results, and interaction, and other relevant data may he recorded in a log file. After a sufficient number of log entries have been accumulated in the log file relative to the new search algorithm for one or more users, a software application extracts information regarding user behavior from the log file for the new algorithm. The information includes on which results in a result set a user clicked, how long the user remained on the target web site, and other user-behavior information. This information can constitute a click profile for the new search algorithm. The software application may also extract similar data from the same or another log file associated with a second; different ranking-algorithm (for example, an algorithm previously used by the search engine, or another new algorithm under consideration for implementation). Such data can constitute a click profile for the second algorithm. The analyzer software application may then compare the click profile associated with the first ranking algorithm with the click profile associated with the second ranking algorithm to determine the relative quality of the first and second algorithms. The relative quality comprises an attribute indicating the nature of one of the algorithms relative to the other, or relative to a chosen object, expectation, or standard. This relative quality determination may be done to determine which of the two algorithms may be of higher quality. An example of a higher-quality algorithm may be one that produces better results in response to search queries.
- This introduction is given to introduce the reader to the general subject matter of the application. By no means is the invention limited to such subject matter. Example embodiments are described below.
- Referring now to the drawings in which like numerals indicate like elements throughout the several figures,
FIG. 1 is a diagram illustrating an exemplary environment in which one embodiment of the present invention may operate. The present invention may operate, and be embodied in, other environments as well. - The
system 100 shown inFIG. 1 comprises multiple client devices 102 a-n in communication with aserver device 104 over anetwork 106. Thenetwork 106 shown comprises the Internet. In other embodiments, other networks, such as an intranet, local area network, or wide area network may be used. Moreover, methods according to the present invention may operate within a single client or server device. - The client devices 102 a-n shown each comprises a computer-readable medium. The computer-readable medium shown comprises a random access memory (RAM) 108 coupled to a
processor 110. Theprocessor 110 executes computer-executable program instructions stored inmemory 108. Such processors may comprise a microprocessor, an Application-specific integrated Circuit (ASIC), a state machine, or other processor. Such processors comprise, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein. - Embodiments of computer-readable media may comprise an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the
processor 110 ofclient 102 a, with computer-readable instructions. Other examples of suitable media may comprise a floppy disk, Compact Disk Read Only Memory (CD-ROM), magnetic disk, memory chip, ROM, Random Access Memory (RAM), an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other suitable medium from which a computer processor can read instructions. Also, various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless. The instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Peri, and JavaScript. - Client devices 102 a-n may also comprise a number of external or internal devices such as a mouse, a CD-ROM, a keyboard, a display, or other input or output devices. Examples of client devices 102 a-n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, a client device 102 a-n may be any type of processor-based platform that is connected to a
network 106 and that interacts with one or more application programs. Client devices 102 a-n may operate on any suitable operating system, such as Microsoft® Windows® or Linux, capable of supporting one or more client application programs. For example, theclient device 102 a shown comprises a personal computer executing client application programs, also known as client applications. The client applications can be contained inmemory 108 and can comprise, for example, a word processing application, a spreadsheet application, an e-mail application, a media player application, an instant messenger application, a presentation application, an Internet browser application, a calendar/organizer application, and any other application or computer program capable of being executed by a client device. - Through the client devices 102 a-n, users 112 a-n can communicate over the
network 106 with each other and with other systems and devices coupled to thenetwork 106. As shown inFIG. 1 , aserver device 104 is also coupled to thenetwork 106. In the embodiment shown, a user 112 a-n can generate asearch query 114 at a client device 102 a-n. The client device 102 a-n transmits thequery 114 to theserver device 104 via thenetwork 106. For example, auser 112 a types a textual search query into a query field of a web page of a search engine interface displayed on theclient device 102 a, which is then transmitted via thenetwork 106 to theserver device 104. In the embodiment shown, a user 112 a-n inputs asearch query 114 at a client device 102 a-n, which transmits an associated search query signal corresponding to the search query to theserver device 104. The search query may be transmitted directly to theserver device 104 as shown. The query signal may instead be sent to a proxy server (not shown), which then transmits the query signal toserver device 104. Such an embodiment may be utilized, for example, to generate a log of a user's behavior while accessing thenetwork 106. - The
server device 104 shown comprises a server executing a search engine application program, such as the Google™ search engine. Similar to the client devices 102 a-n, theserver device 104 shown comprises aprocessor 116 coupled to a computer-readable memory 118.Server device 104, depicted as a single computer system, may be implemented as a network of computer processors. Examples of aserver device 104 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.Client processors 110 and theserver processor 116 can be any of a number of well known computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill. Although the processes described herein are described in relation to the client and server, a client may perform any or all of the processes described as being performed by a server. Similarly, a server may perform any or all of the processes described herein as being performed by a client. -
Memory 118 contains the search-engine application program, also known as asearch engine 120. Thesearch engine 120 locates relevant information in response to a search query from a user 112 a-n. - The
server device 104 also includes ananalyzer application 122. The analyzer application, or analyzer, comprises an application that may analyze data. Theanalyzer 122 shown inFIG. 1 comprises a software application that receives and analyzes data. Theanalyzer 122 shown reads log-file information and derives aggregated (and non-aggregated) data based on the log-file information. Although theanalyzer 122 is depicted as an application program executing on theserver device 104, in other embodiments, theanalyzer 122 may comprise various other hardware and software and may execute independently of theserver device 104. Theanalyzer 122 shown inFIG. 1 may comprise computer code for carrying out all or some of the methods ascribed to the analyzer below, including those described with reference toFIGS. 2-4 . - The
server device 104, or related device, or related device, has previously performed a crawl of thenetwork 106 to locate articles, such as web pages, stored at other devices or systems connected to thenetwork 106, and indexed the articles inmemory 118 or on another data storage device, such asdata store 130. - The
data store 130 can be any type of suitable computer-readable media and can be integrated with theserver device 104, such as a hard drive, or external to theclient server device 104, such as an external hard drive or on another data storage device accessed through thenetwork 106. Thedata store 130 may comprise any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs. - Articles comprise, for example, data elements from a database, web pages of various formats, such as Hypertext Markup Language (HTML), eXtensible Markup Language (XML), eXtensible Hypertext Markup Language (XHTML), Portable Document Format (PDF) files, and word processor, database, and application program document files, audio, video, or any other documents or information of any type whatsoever made available, on a network (such as the Internet), a personal computer, or other computing or storage means. The embodiments described herein are described generally in relation to HTML files or documents, but embodiments may operate on any suitable type of article.
- The
search engine 120 responds to the query signal by generating and returning a set of relevant search results. Typically, search results are returned as an ordered result set formatted as a list to client device 102 a-n from which the search query originated. The result set comprises one or more search results, and the search results may comprise one or more article identifiers. An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, an index in a database, an indicator of a single destination, item, or location, or any other suitable article identifier. The result set may include additional elements as well, including, for example, a snippet associated with each search result. - The
search engine 120 also comprises a web server application. The web server responds to Hypertext Transfer Protocol (HTTP) requests by executing code. The web server also stores one or more logs of activity on the web server. The data is typically written to a file, database, or other data store, and stored in a binary format. The log, or log file, may be stored, for example, indata store 130. The logs typically include information regarding activity such as access and errors. For example, an access (or transfer) log includes an entry for each access of the web site. Each entry includes an Internet protocol (EP) address of the requestor, the date and time; the URL, the method of access, the client (e.g., the browser application), the status, cookie information, and other information about the access. By analyzing a series of entries, patterns of usage can be identified. For example, in an HTTP request directed to thesearch engine 122, the URL includes information that can be used to reconstruct thesearch query 114 entered by the user. In the embodiment shown inFIG. 1 ,data store 130 comprises two log files,Log File 1 132 andLog File 2 134. - It should be noted that embodiments of the present invention may comprise systems having different architecture than that which is shown in
FIG. 1 . For example, in some systems according to the present invention,server device 104 andserver device 122 may comprise a single physical or logical server. Thesystem 100 shown inFIG. 1 is merely exemplary, and is used to explain the exemplary methods shown inFIGS. 2-4 . - Various methods according to the present invention may be implemented in the environment shown in
FIG. 1 and other environments. Methods according to the present invention may be implemented by, for example, a processor-executable program code stored on a computer-readable medium. Example methods according to the present invention are described below. - The example methods described below include methods of competitive evaluation of ranking functions as a function of user behavior (such as clicks or other interactions by the user with search results). The sections below entitled “Determining Ranking Algorithm Quality By Comparing Interaction Profiles of Ranking Algorithms” and “Comparing Algorithms on Different Classes of Queries” include descriptions of such methods. Example methods described below also include methods of evaluation of a search result across queries to determine the probable quality of a particular object, such as a search result. The sections below entitled “Evaluation of a Particular Class of Search Result” and “Manipulated Article Identification” include descriptions of such methods.
- These two types of methods, and other types of methods, are described throughout the description. First, log files and interaction profiles are introduced, and an example method of deriving an interaction profile is described.
- Activity on the
search engine 122 is tracked and stored in a log file. Creation and analysis of log files will be described briefly herein with reference to the exemplary process shown inFIG. 2 . A log file may include, for example, user-behavior data, or data indicating a user's behavior relative to an object, such as search results returned to the user by a search engine in response to the user's query. User-behavior data may comprise, for example, data reflecting actions by the user. Actions by the user may include, for example, clicks on search results, clicks on advertisements, refinements of queries (such as the user's submission of new queries after submission of an earlier query that are similar to the earlier query), and other actions. Examples of other actions may include explicit or implicit indications of interest, such as hovering over or in the area of a potential selection, the area(s) of the screen the user may be viewing, and other data. - In one embodiment, a log file may comprise data indicating a search query received by a search engine from a user, the internet protocol (IP) address from which the search query originates, a cookie from the user, the response to the query by the search engine (such as, for example, the search results returned to the user in response to the query in the form of a search result set), actions taken by the person submitting the search query (such as actions taken by the person in relation to the search results provided by the search engine in response to the query, including actions such as selecting a search result, and such as the submission of a new or revised query by the person), time that actions occurred, and other data. In one embodiment, the search result set comprising all of the search results determined by the search engine in response to the user's query is recorded in the log file. In other embodiments, fewer than all of the search results may be recorded.
- To include in a log file the selection of a search result by a user, such as the “clicking on” of the search result by the user, various techniques may be used. For example, a link embedded in a search result may point to the search engine's site, and when a user clicks on the search result, the user's selection may first be directed to the search engine site (at which time the selection of the search result may be recorded in the log file), and then the user may be redirected to the site associated with the search result. As another example, code (such as Javascript) may be placed in the page used to present search results to the user such that notification of the user's selection of a search result is sent to the search engine at the time of selection.
- As one example, in one embodiment, a search query submitted to the
search engine 120 is represented by variables in a query string of a URL directed to the search engine. For instance, a query of the Google™ search engine for the terms “bmw convertible used” may result in the following URL being submitted to the search engine “http://www.google.com/search?hl=en&ie=UTF-8&oe=UTF-8&q=bmw+convertible+used.” This URL may be recorded in thelog file 132. - In the example illustrated in
FIG. 1 , alog file 132 comprising the data discussed above for multiple search queries across multiple users using a particular ranking algorithm has been developed and stored. Thelog file 132 may be stored in any suitable location. The log file shown inFIG. 1 is located in thedata store 130. Thelog file 132 comprises the types of log-file data mentioned above recorded in relation to the particular search algorithm. - For illustration purpose, the system illustrated in
FIG. 1 is used to describe the method shown inFIGS. 2-6 . Of course, the methods shown inFIGS. 2-6 , and other methods, may be carried out by other systems. - The example methods of deriving an interaction profile described make use of log files. Log files are used only as an example of the type of data that may be used, as other types of files and information may be used in accordance with the present invention.
- An interaction profile comprises data indicating one or more interactions that have occurred with an object of the profile. One example of an interaction profile comprises a selection profile. A selection profile may comprise data indicating a histogram of one or more of various types of one or more interactions (such as clicks) for an object of the profile. A selection profile may be referred to as a click profile in an environment in which many of the interactions with the object is carried out through clicking an input device, such as a mouse, to select and/or interact.
- An object comprises the item or object that constitutes the subject matter of concern, operation, or analysis. One example of an object in accordance with the present invention is a particular search result. Another example of an object is a group of search results, whether in a search result set, multiple search result sets, or otherwise. Another example of an object is a particular URL. Another example of an object is a particular domain, which may include multiple URLs. There may be other suitable objects, and these serve only as examples.
- In one embodiment, a click profile comprises aggregated data reflecting behavior of one or more users over all queries on an individual search result. For example, the data may reflect user behavior relative to a search result when the search result is returned to a plurality of users when submitting a plurality of different search queries. In another embodiment, a click profile comprises aggregated data reflecting user behavior over all queries on a plurality of search results (including, for example, all search results over a time period for an algorithm). For example, the data may reflect user behavior relative to a group of search results (whether previously returned in the same search result set or not) when one or more of the search results in the group result are returned to a plurality of users when submitting a plurality of different search queries.
- As one example, a click profile may comprise data indicating a histogram for a search-result set returned by an Internet search engine in response to a search query. The histogram may be, for example, a histogram of click types and/or durations. The click profile for the search result set may include one or more of a variety of metrics (or attributes or properties). Metrics are standards or properties of measurement. The metrics in a click profile may include metrics indicating a level of satisfaction with an object, such as a search result or a search result set. A level of satisfaction indicates a level or degree of satisfaction. For example, a click profile for a search-result set may comprise the total number of clicks made on the set during a user session, the total number of single, long clicks made on the set during a user session, the ratio of long clicks to short clicks on the result set during a user session, and the number of refinements of the original query made during a session. A click profile for a particular search result may comprise these same metrics. The metrics, and other metrics, may indicate the level of satisfaction that a human being has or had in relation to an object or an interaction.
- Short and long clicks are relative terms. A short click indicates that the user returns to the result set shortly after clicking on one of the results (e.g., a user clicks on a URL in a result in a result set, views the page associated with the URL, and immediately clicks the “Back” button on the user's Internet browser). In one embodiment, a short click is a click that is less than 80 seconds in duration. A long click indicates that the user either returns to the result set after a relatively significant time viewing other pages (e.g., after 200 seconds or more), or does not return to the result set. A long click often indicates that the user located content of interest upon clicking on a result in the result set.
- A click profile may include other information. For example, in a click profile for a search result (a result in a search result set), the click profile may include the click sequence. For example, the click profile may indicate whether an action occurred before or after another action in a session. In other embodiments, the location of the search result when clicked on (for example, the first result in the search result set, or the fifth, or the tenth), and the page on which the search result clicked on resided (first page returned, second page returned, etc.), may also be indicated in the click profile. In some search-engine systems, the user may alter the number of search results provided per page, and thus recording the search result's ranking and the page number on which it appeared may be beneficial. The click profile may also include an indication of whether the search result was the first result clicked on in the search result set, was the second result click on, or was later in a sequence of clicks. In one embodiment, a click profile may comprise arbitrary observable information about a user session that contains a result. Such information may include, for example, the number, sequence, and duration of clicks.
- A click profile for an object, such as a search result, across multiple user-sessions may be useful in evaluating search algorithms and other aspects of providing search results. These multiple user-sessions may be sessions of many different people. Aggregating data for an object across multiple user sessions to construct an interaction profile, such as a click profile, for the object may provide a reliable basis for analysis. For example, a click profile for a particular search result may include data associated with all instances of a particular query for which returned results include the particular search result, data associated with all instances in which the particular search result is included in returned results for any search query, or other data. Similarly, a click profile for a particular domain may include data associated with all instances of a particular query for which returned results include the particular domain, data associated with all instances in which the particular domain is included in returned results for any search query, or other data. As still another example, a click profile for a particular search (or scoring) algorithm may include data associated with all search results for all queries processed by the algorithm over a defined time period or other data.
- Accordingly, a click profile may include all, none, or some of the properties or metrics mentioned above in relation to a click profile for an object, with the quantities aggregated across the multiple user-sessions. Other properties or metrics may also be included in such a click profile. As one example, a click profile for a search-result set across multiple user-sessions may include the ratio of single to multiple clicks on the search-result set (for example, the number of times a user clicked on only one search result in the result set (single clicks) to the number of times a user clicked on more than one search result in the result set (multiple clicks)). Multiple clicks, as used herein, typically refers to the situation in which a user clicked on more than one result during a user session. Thus, in one embodiment, in any given user session, there may be no clicks, one click, or multiple clicks.
- The properties or metrics within a click profile may vary according to its object, according to its intended use, or other factors. Also, the method of determining the click profile may vary depending on its object. For example, determining a click profile for a particular ranking algorithm may involve determining attributes or metrics across multiple user-sessions involving the interactions of multiple users with multiple search result-sets. It is desirable for the click profile developed to include the data needed or useful in methods carried out using the profile.
-
FIG. 2 is a flowchart illustrating a process for deriving an interaction profile in one embodiment of the present invention. In the example method illustrated inFIG. 2 , ananalyzer 122 examines the log file created by theserver device 104 in response to access of thesearch engine 122 by one or more persons 112 a-n, and determines a click profile for an object. In the embodiment shown, the object is a group of search results. The method makes use of alog file 132, previously constructed as described above. - Referring to the embodiment shown in
FIG. 2 , theanalyzer 122 first groups the log entries in thelog file 132 by user by sorting interaction data in the log entries byuser 200. A particular user's interactions, as recorded in the log file over a time period, may be identified in any suitable manner. For example, a user may be identified by the user's IP address. However, many users' Internet Protocol (IP) addresses change from session to session. As another example, the search engine may provide each user with an identifying cookie or other identifying data. The presence of the cookie may then be logged in thelog file 132, along with identifying information, to indicate the activity of a particular user. Theanalyzer 122 then sorts the interactions recorded in thelog file 132 by user (as identified by IP address, cookie-based identification, or other identification), grouping the interaction data recorded in relation to the sessions for a user together, and records the sorted-by-user data in asorted log file 136. Thissorted log file 136 may be stored in thedata store 130 or in another suitable location. - Once the sorted
log file 136, sorted by user, has been created, the analyzer then begins its analysis of the sortedlog file 136 to determine the data used to create a click profile. Theanalyzer 122 identifies a user foranalysis 201. In the first instance, in one embodiment, theanalyzer 122 reads the sortedlog file 136 and identifies the first user indicated in the sortedlog file 136 as the user for current analysis. As discussed below, the process will repeat for the next user listed in the sortedlog file 136, and so on, in one embodiment of the present invention. - After identifying the user for
current analysis 201, theanalyzer 122 then identifies the beginning of a session in the sortedlog file 136 for the user, and determines a search query ofinterest 202. Identifying the beginning of a session may comprise, for example, identifying a point in the sortedlog file 136 at which a first interaction for a user is recorded. In other embodiments, a new session may be indicated by the IP address of the user (or requestor) changing, a pre-defined time passing before a next interaction occurs, or other standard. A session typically indicates data associated with a single person's interactions with thesearch engine 120, but can also involve multiple users. - Alter the
analyzer 122 determines the beginning of a session, theanalyzer 122 determines a search query submitted during the session. For example, in one embodiment, theanalyzer 122 determines a search query submitted during the session by accessing the sortedlog file 136, and parsing a log entry containing the search query. In the instance that the log entry comprises the URL submission mentioned above, theanalyzer 122 may extract the search query from the values of the variable q in the query string (“bmw+convertible+used” in the example given). - The
analyzer 122 next determines the search results provided by the search engine for the determined search query. For example, theanalyzer 122 may determine article identifiers that would or did result from thesearch query 206 when searched by a search engine using the particular algorithm. In one embodiment, the search results returned to the user during the session have been recorded in thelog file 132, and are recorded in the sortedlog file 136. Thus, in such an embodiment, theanalyzer 122 may determine the search results provided by examining the sortedlog file 136 for that session. In another embodiment, for example one in which search results are not recorded in thelog file 132, theanalyzer 122 may resubmit the query to the search engine 122 (if still using the particular algorithm at issue) or another search engine using the algorithm associated with the web file in to determine the result set, access an archive of search results for queries, or otherwise determine the content and order of the result set for the search query in relation to the particular algorithm at issue. - In the embodiment shown in
FIG. 2 , theanalyzer 122 then proceeds sequentially through the sortedlog file 136 and identifies anext action 208. The next action comprises data indicating an action, typically a subsequent action, associated with the requestor's interaction with the search engine, such as the requestor's interaction with results from the search engine. Initially, theanalyzer 122 determines a next action comprising the next action recorded in the sortedlog file 136 that occurred after the requestor received search results in response to the requestor's search query. In the embodiment shown, the next action comprises data indicating clicking on a result, changing the query, or a session change. - The
analyzer 122 may identify the next action as a selection of a result in the returned search results, such as clicking on aresult 208. For instance, theanalyzer 122 may compare the article identifiers in the result set to the URL indicated as selected by the user in the sortedlog file 136. If the URLs match, theanalyzer 122 concludes that the user clicked on the result associated with the URL. In one embodiment, thetog file 132 and the sortedlog file 136 include an indication that a URL selected by the user was included in the search result set. - The
analyzer 122 identifies the result selected 210. Identifying the result may comprise, for example, identifying the URL associated with the selection, determining the sequence and page number of the result within the result set, and determining any other properties of the result desired that may be used subsequently. - Based on entries in the sorted
log file 136, theanalyzer 122 may then determine if and when a session returns to thesearch engine 212. For instance, theanalyzer 122 may examine the sortedlog file 136 to identify that the user under analysis selected a result from a result set, and then interacted again with the search results or the search engine within 300 seconds of such selection, and theanalyzer 122 may treat those actions associated with the user as having occurred during the same session. This is just one example of an identification of a return of a session to the search engine. In another embodiment, theanalyzer 122 may treat an interaction that occurs within a pre-defined time period (for example, 1800 seconds) after the previous interaction recorded for the user in the sortedlog file 136 as part of the same session as the previous interaction. In another embodiment, the analyzer may treat the user entering a query that is not a refinement as a new session. In still another embodiment, the analyzer may treat the user entering a query that is different from the original query of the session as a new session. - The
analyzer 122 may then calculate the duration between the request for the result (e.g., the click) and thereturn 214. The duration reflects the time between activities visible to the search site, and is estimated by theanalyzer 122 from the timestamp offsets between interactions found in the sortedlog file 136. Theanalyzer 122 may compute the values of other metrics as well by, for example, examining the sorted log file. For example, in one embodiment, theanalyzer 122 computes a delay. The delay represents the time that the user spent looking at the search page to determine which result to click. - The method shown in
FIG. 2 illustrates a method in which a result, return, and duration are determined. In other embodiments, one or more of these attributes may be incalculable, not present, or otherwise not determinable. In one such embodiment (not shown), the method returns to thenext action determination 208 in such an event. In another such embodiment (also not shown), the attributes that may be determined are determined, and then the method returns to thenext action determination 208. - Also, in other embodiments, further or different attributes or metrics associated with the session may be determined and stored. Essentially, the
analyzer 122 may determine attributes or metrics associated with the sessions that will be necessary or useful in constructing a click profile for the object of the analysis. - After calculating
duration 214, theanalyzer 122 determines the next action using thelog file 208. If the next action is determined to be the receipt of a new query (or a query change) from the user within the session, theanalyzer 122 determines whether the new query is a refinement of the existingquery 216. In one embodiment, theanalyzer 122 determines a new query is a query refinement if the new query and the old query share a common term. In another embodiment, theanalyzer 122 determines that a new query is a refinement of an old query if the queries share a common synonym. For example, if an old query includes the term “car” and a new query includes the term “automobile,” the new query is treated as a refinement of the existing query. Typically, a user refines a query when the user is not satisfied by the results returned by the first query. - After determining the submission of a new query in a
session 208, and determining whether the new query is aquery refinement 216, theanalyzer 122 determines the result set for the new query 206 (for example, by any one of the methods described above). Theanalyzer 122 then determines what action is occurring 208 and proceeds accordingly. - In the embodiment shown in
FIG. 2 , the process is repeated for all users and sessions in the sortedlog file 136. If thenext action determination 208 determines that the next action in the log file is a session change, then analyzer 122 then determines if there is a next session foranalysis 218. For example, theanalyzer 122 may look in the sortedlog file 136 to determine if there is a subsequent session for the user to the session under analysis. If there is a next session, the method shown repeats, beginning again atblock 202 for the next session. If the analyzer determines that there is no next session for the user under analysis in the sortedlog file 136, the analyzer determines if there is data recorded in the sortedlog file 136 for anext user 219. For example, theanalyzer 122 may look in the sortedlog file 136 to determine if there is a subsequent session recorded in the sortedlog file 136 that is for a different user. If there is data for a next user, the method shown repeats for the next user, beginning again atblock 201 by identifying the next user. - When carrying out methods as shown in
FIGS. 2-6 , described herein, and otherwise, theanalyzer 122 stores the results of the identifications, calculations, determinations, and other analysis data in memory or in a data store, such asdata store 130. The data stored may comprise instances of the triple (s,q,r), where s is a collection of session-related properties, q is a collection of query-related properties, and r is a collection of result-related properties. An instance comprises an occurrence or presence. - The session collection s may comprise, for example, the IP address of the session, the time and date that the session occurred, and other session-related data. The query collection q may comprise, for example, the search terms of a query submitted during the session s, the class of the query (e.g., navigational or search, etc.), and whether the query was refined or not. The result collection r, may comprise, for example, the result set returned in response to the query, the sequence of results, click data for each of the results in the result set, including quantity, sequence, and duration of clicks, and other result-related information. The sequence of clicks refers to the number of clicks within a session. An instance of the triple (s,q,r) may be stored for each session identified in the log file. The data stored as the triple (s,q,r) should comprise the data necessary or useful in determining a click profile for the desired object of consideration. The triple (s,q,r) may provide the information to compute interaction profiles for one or more search results or groups of search results of interest.
- There are a variety of ways to use such data to generate a click profile. Moreover, click profiles may be generated for any one or a group of objects, such as a search result, or a search result set. Click profiles may also be generated for other objects, such as a ranking algorithm (or scoring algorithm), a group of algorithms, a particular query, or other suitable object.
- In one embodiment, the instances of (s,q,r) provide the raw data for deriving a click profile for a search result, group of search results, or other object. For example, utilizing the raw data, the
analyzer 122 can provide an aggregated click profile for search results of specific queries and classes of queries, as well as an aggregated click profile for specific results or result sets. In one embodiment, this data may be further refined to constitute a click profile. - Referring again to
FIG. 2 , in one embodiment according to the present invention, when theanalyzer 122 determines that there is no next user for analysis in the sortedlog file 136, the analyzer may then determine one or more click profiles. For example, a click profile may be determined for one object, or multiple click profiles may be determined for multiple objects, selected by an operator or by computer. Referring to block 220, theanalyzer 122 next determines an object of interest. As indicated by the examples above, this may be done in any suitable manner. For example, theanalyzer 122 may ask an operator to indicate an object of interest by asking the operator for a query of interest, and then theanalyzer 122 may designate the search result set associated with the query as the object of interest. As another example, theanalyzer 122 may select some order of search result sets as objects of interest (for example, by time received by a user, alphabetical order based on query associated with the search result set, by the number of times provided, or other measure), and select the first one in the order for analysis. As still another example, theanalyzer 122 may ask the operator to designate a search result of interest by asking an operator to input a URL reflecting the search result of interest to the user. In another embodiment, an operator may select a type of object for analysis because the operator wishes to conduct an analysis for each object of a certain type or kind (for example, the type or kind of object selected may be domains that appear in a large set of sessions, and thus the objects of interest will be those domains). In one such embodiment, the analyzer would generate a click profile for each of those domains automatically. - Once an object of interest has been determined 220, the
analyzer 122 then identifies all instances of the object in the raw data previously generated 222. Inblock 220 or block 222, theanalyzer 122 may identify these instances. In other embodiments, if the object of interest is a group of search results that constitutes a search result set for a query, the analyzer may identify instances of the search result set by identifying occurrences of the query (or queries) associated with the search result set. In other embodiments, fewer than all of the instances may be identified and used. - As one example, the object of interest may be a particular search result input by the operator. Once the instances of the object of interest, in this case a particular search result, has been identified 222, the
analyzer 122 determines the click profile associated with the search result of interest acrossmultiple sessions 224. This may be carried out in a variety of ways. In the embodiment shown, the click profile for the search result of interest across multiple sessions comprises interaction attributes, such as click-duration data, multiple-click data, and query-refinement data. Click-duration data comprises data relating to the duration(s) of one or more clicks. Multiple-click data comprises data relating to the instance of greater than one click in, for example, a user session. One example of multiple-click data is data indicating that there was, or was not, more than one click during a user's session with search results. Query-refinement data comprises data relating to the refinement of a search query in, for example, a user session. Examples of query-refinement data may include data indicating whether or not the user refined an original query during a user session, and data indicating the substance or text of the refinement itself. In one embodiment, the click profile comprises the total number of clicks made on the search result during a user session, the total number of single, long clicks made on the search result during a user session, the ratio of long clicks to short clicks on the search result during a user session, the number of refinements of the original query made during a session when the search result was returned in a search result set, and the ratio of single to multiple clicks on search-result sets that included the search result. To determine the click profile for the search result of interest, theanalyzer 122 may determine these metrics by calculating them based on the raw interaction data described previously. Other embodiments may include other or different properties or metrics in the click profile. The value of the metrics (e.g., the length of time, text of query refinement, a yes or no indicator, or other value) May be calculated and stored in the click profile. - In one embodiment, these properties or metrics are aggregate totals. That is, if there are one thousand instances of the search result set in the data, and in each and every instance of the search result set, the user made two long clicks during a session, the metric of long clicks made on the set during a user session in the click profile for the search result set would be two thousand. In other embodiments, the data associated with each search result set is used to determine an average for each metric desired. Thus, in the previous example, the metric of long clicks made on the set during a user session in the click profile for the search result set would be two (i.e., the average across all instances). Any aggregate statistic or combination of aggregate statistics may be used, including the mean, median and mode, as well as variance, skew and higher moments, histograms and more-complex parametric and non-parametric data models. As mentioned, a click is just one type of selection, and interaction profiles may comprise non-click data. For example, the interaction profile of a result can comprise information about when it was presented but not clicked on, such as the fraction of time it was presented and not clicked on, the fraction of time it was presented in a session where one result was clicked on, but it was not the result in question.
- Further refinement may be carried out in generating a click profile. For example, a combination of properties or metrics for a search result set in a session may be weighted to determine its contribution to a property or metric for the overall analysis of the search result set.
- Thus, the
analyzer 122, in calculating the values of properties or metrics to be used in the click profile for a search result set across multiple user-sessions may take into account general metrics associated with user behavior in deriving a click profile. It may choose to weigh various properties or metrics accordingly. For example, it has been observed that typically, clicks on search results decrease sharply with position. About 55% of all clicks occur on the first 5 results, and about 75% of all clicks occur on the first page. Also, out of all clicks, the maximum fraction, 22%, goes to first position clicks. The drop-off function can be modeled either by a linear approximation or a power law. Further, the fraction of single clicks decreases as the position increases (i.e., as the result appears further down in the result set). - Also, it has been observed that navigational queries have a very low refinement rate (<about 0.3%) and a high instance of single clicks (about 81%). Further, long queries and queries with syntax have several percentage point differences in overall click through and in the proportion of single/multiple clicks observed. Of clicked sessions, short queries average about 58% single clicks, while long queries average about 52% single clicks. These and other observations may be used in calculations and determinations according to the present invention. Such data may be used, for example, in a stratification method or other method. For example, metrics may be aggregated separately for different cases, such as navigational and non-navigational, and then compared for each class independently. Referring again to
FIG. 2 , the determination of an object ofinterest 220, identification ofinstances 222, and determination of a click profile for the object of interest across multiple user sessions andmultiple users 224 may be repeated for all or less than all of the objects of interest identified as present in the analysis (not shown). For example, if there are multiple search results in the object of interest, such as in a particular search result set, a click profile for each of the search results across multiple user sessions and multiple users may be determined in this manner. - In another embodiment, the raw data, or instances of (s,q,r) itself, may serve as the click profile. That is, in certain embodiments, the body of instances of (s,q,r) data, or a sub-set thereof, may serve as a click profile.
- Interaction profiles, such as click profiles, may be used in a variety of ways. Some examples are provided below.
- Click profiles may be utilized to evaluate the likely quality of an object, such as a search result. The quality of a particular search result as indicated by its click profile may be compared with the quality of other search results in a group of results of interest (such as a group of results in a result set) to detect differences in user behavior. This detection may be used to detect an article with an undesired attribute, to detect a manipulated article (such as spam), to detect a high-quality search result that should appear higher in search rankings, to evaluate the quality and usefulness of a search algorithm, and for other purposes. A manipulated article comprises an article that has been manipulated. For example, a manipulated article may comprise an article that has been manipulated specifically to influence a search engine's treatment of the article.
- In one embodiment of such a utilization, a click profile may comprise information useful to identify a particular search result as likely “good” or “bad,” or to identify the domain associated with the result as likely “good” or “bad.” At an individual-interaction level, a user-behavior profile for a search result is affected by both position in its search result set and presentation bias—attributes of the result that attract the user to click on the result but are not necessarily linked to result quality (e.g., mimicking the user's query in the result). Analysis of the probability that a search result is “good” or “bad” search result using data for multiple users across multiple user-sessions may attenuate this affect on search-result quality analysis.
- The quality of an object, such as a search result, may comprise a characteristic or property of the object that indicates its degree or grade of satisfaction of a desire, interest, or search. For example, a high-quality search result may indicate a search result that is associated with content of interest that is perceived as satisfactory by a person. A low-quality search result may indicate a search result that is associated with content that is perceived as unsatisfactory by a person.
- The terms “good” and “bad” relative to search result provide an approximate quality of the search result, as perceived. For example, a “good” search result may be a search result that is of high quality; that is, it is associated with content of interest that is perceived as satisfactory by a person. Likewise, a “bad” search result may be a search result that is of lower quality—that is, a search result that is associated with content that is perceived as unsatisfactory by a person. As the level of satisfaction of a human being is inherently a subjective variable, analysis of the relative “goodness” of a search result is inherently an approximation of likely human perception.
- A degree of quality, or a degree of “goodness,” or a degree of “badness,” may be determined. Such a degree may indicate the relative level or magnitude of the trait.
- Moreover, thresholds in relation to such degrees may be designated. For example, a function may determine that a particular search result should be assigned a value of 0.55 as a degree of “goodness,” and that another search result should be assigned a value of 0.45 as a degree of “goodness.” A method used may be to designate all search results with a value of 0.5 or higher as “good” results, and all search results with a value of 0.49 or lower as “bad” results. The setting of these thresholds may be done by observation, experiment, or other ways. Further, the definition of “good” and “bad” may be defined numerically in a particular utilization.
-
FIG. 3 shows an example method for estimating the quality of an object according to the present invention. In one method according to the present invention, prior to undertaking a quality-analysis of a particular object, initial probability estimates for various user actions are learned 302. In one embodiment, these estimates are learned by comparing human-labeled result qualities to logged click behavior over a large set of (query, document) pairs obtained or derived from click profiles. This comparison allows for the determination of the metric values that indicate desirability. In one such embodiment, a human evaluator assigns a quality rating to a search result by examining the search result, and the content to which it may be linked, as returned for the used search query. The quality rating may comprise a number between 0 and 10. - For example, these human evaluators may evaluate a designated group of search results. In one embodiment, the group of search results is a relatively large group of search results. Click profiles for this large group of search results are generated using methods like that described in relation to
FIG. 2 . These profiles indicate the actions taken by multiple users across multiple session sets. - The human-labeled result qualities for this large group of search results are then compared with the logged click behavior over a large set of (query, document) pairs for the large group of search results. Accordingly, through observation, the likelihood that a particular action, or a sequence of actions, results in a user clicking on a result that includes good content or that the user will perceive as good can be learned.
- In one embodiment, based on such a comparison, the likelihood of an action taken resulting in the user finding satisfactory, or good, content by taking the action is determined to be as follows, p(good| observation):
-
TABLE 1 Duration Not Sequence Clicked Short Medium Long Last None 0.2 X X X X Single 0.2 0.621 0.758 0.9 0.738 Multiple (not last) 0.2 0.2 0.646 0.545 X Multiple (last) 0.2 0.299 0.507 0.510 0.557 - Table 1 above is an example of computing P(good |{click type, sequence). There are a variety of refinements that may be made in relation to such functions, and this table provides just one example.
- In the table above, the rows indicate clicks sequence type. The first sequence type, or first row, is a session in which no results were clicked. The second sequence type is a single click in a session (e.g., just one selection made in the session). The third and fourth types (third and fourth rows) are species of multiple clicks. A click that is a multiple click is one that is one of two or more clicks in a session. If that multiple click is the last click made in a sequence of clicks in a session, it is categorized as a Multiple (Last) type. If that multiple click is not the last click made in a session, it is categorized as a Multiple (Not Last) type.
- The columns indicate the duration of the click observed. The first column indicates an instance in which no click was observed. The second column indicates a click of short duration. For the data in the table shown above, a click of short duration is one that is less than 80 seconds, a click of medium duration is one that is greater than 80 seconds and less than 200 seconds, and a click of long duration is one that is more than 200 seconds. These duration-time designations were learned through observation by the techniques described herein. The fifth column (“last”) indicates a click from which the user did not return, and thus for which no duration is available. For example, a click of “last” duration may indicate a click that is made by a user, and then the user does not return to the search result set.
- In Table 1 above, cells marked “X” are logically empty. For example, in a session with no clicks (first row of the table), all results must be of type “Not Clicked.”
- A probability function to determine the quality of a particular object, such as the probability that a particular search result is a good result, may vary according to preference, data set behavior, and other factors. In selecting the probability function, various factors should be considered. For example, although clicks may indicate a user's satisfaction with results only fifty percent of the time, certain types of clicks represent a user's satisfaction eighty percent of the time. Long clicks (such as those with duration over two-hundred seconds) tend to indicate user satisfaction (e.g., relevant content found). Also, clicks that are the only click of a user on a set of search results indicate user satisfaction with that result. In other embodiments, combinations of these metrics may be used to identify “good” results. One principle indicator is the ratio of short to long clicks received by a result domain. A relatively low ratio indicates a low quality or bad result set. Also, clicks of less than eighty seconds duration, or that are one of many clicks in a sequence, frequently indicate low quality results. However, clicks with short duration or that are part of a multi-click sequence may also be indicative of browsing. Thus, individual clicks are not reliable indicators for quality. Further, the fact that results are not clicked on may serve as a type of click, i.e., it provides additional information for rating a set of results. These and other factors may be considered in selecting a probability function.
- For example, in one embodiment, the probability P that a search result is “good” may be based on the following function:
- P(good |{click,noclick}, position, duration, sequence, refinement_next)
- where {click,noclick} comprises the variable of whether a search result was clicked or not, position comprises the variable of the position of the search result in a search result set, duration comprises the variable of duration for the search result, sequence comprises the variable of sequence of the selection of the search result, and refinement_next comprises the variable of whether the original search query was refined after selecting the search result.
- In another embodiment, the following function may be used to observe probability that the search result is a “good,” or desirable, search result: P(good|page {click,noclick}, position, duration, sequence, refinement of query, display position, presentation statistics), where the variables are as mentioned above, with the addition of the display position variable, which comprises the position of the search result within a provided search result set (e.g., first, second, tenth, etc.), and the presentation statistics variable comprises data regarding the presentation of search results, such as the frequency of presentation of the search result in a search result set. Such functions and approaches, and other functions and approaches, may be refinements on the function and approach mentioned above with reference to Table 1.
- Referring again to
FIG. 3 , an object, such as a particular search result, may he selected for analysis, and theanalyzer 122 may receive thisselection 304. This selection may be made in any suitable mariner. For example, a human operator may select a particular search result for analysis by selecting the search result from a list of search results provided in a graphical user interface. A click profile for the object, such as the search result selected, may then be obtained 306. For example, the click profile may be constructed in a manner like that described in relation toFIG. 2 . Alternatively, the click profile for the object may have been previously constructed, and theanalyzer 122 may locate the click profile for the object in a database. A click profile useful in such analysis may contain the data needed to determine the probability that the particular result is good or bad, based on the factors in use in the particular method to make such a determination. - After determining the click profile for a search result under analysis, the
analyzer 122 may estimate the quality of thesearch result 308. For example, theanalyzer 122 may calculate an estimation of the quality of the search result. In one embodiment, if sufficient data is available to generate various metrics for a click profile, the quality of the profile may be analyzed. In another embodiment in which data may be limited or that is focused on a particular session, the probability that a particular result is good based on prior user interactions may be calculated. In other embodiments, these or other suitable approaches may be used. - In one embodiment, a calculation of the quality of a search result involves estimating a probability that the search result is a “good” result is based on a variety of observable measures. In one such embodiment, the click profile for the search result provides the
analyzer 122 with the user-action data that may be used to determine the number of short clicks, the number of medium clicks, and other metrics that may be indicative of the quality of the search result. The probability that the search result is a good result is a product of this user-action data and the probabilities set out above as applied to user-action data. Expected goodness of search result given observables may be calculated as a mean value. For example, it may be calculated as the sum over all relevant observations: 1/n*sum_n[p(good|observation(n))]. - In one embodiment, the
analyzer 122 compares a click profile metric, such as the fraction of long clicks, for a particular object of interest (such as a search result) with the same metric for other comparable objects. If theanalyzer 122 determines that the metric for the particular search result of interest is in the bottom 5th percentile (or, in another embodiment, in the bottom 10th percentile) of the metric for such comparable search results, then the analyzer designates the search result of interest as a poor (or “bad” or “not good”) result. - The quality probability of a search result or other object may be used in any of a variety, of suitable ways. For example, if the aggregated probability that the search results returned by one algorithm are good is higher than the aggregated probability that the search results returned by a second algorithm are good, then an operator may further analyze the reasons that the first algorithm returns a search result set with a higher probability. As another example, measurements from the click profiles, from probability determinations, and other determinations may be used as a signal in a scoring algorithm for a search engine. For example, the
analyzer 122 may assign a number to a search result (such as a URL) between 0 and 1 that represents the probability that the result is a “good” result. The number may then be used as a signal in a ranking algorithm to score the search result for ranking purposes. For example, this probability variable may be multiplied by a score for the search result (URL) as calculated by a scoring algorithm so as to affect the ordering of a result set. As still a further example, such probabilities may be used to detect manipulated articles, and this use is discussed further below. - It should be noted that a probability measure may be made in any of a variety of suitable ways. For example, the metrics involved in the calculation may be compared to expected values, and if the metric exceeds the expected value, the metric tends to indicate a higher probably that the search result is a “good,” or desirable, search result. In other words, the user performs a query and is expected to act in a certain way (i.e., the
analyzer 122 expects certain values for the click profile metrics); if the user does not act in that way, it suggests that the results are not “good.” - In one embodiment, the starting estimate of whether a result is “good” can be computed with a conditional probability table generated by binning and/or smoothing the features in the click profile. These features may include, for example, the click durations and sequence. Other embodiments may include the use of parametric or non-parametric models, such as logistic regression, to estimate probability of a result being good as a function of the click profile. These embodiments may include, for example, models that explicitly model sequence information, such as hidden Markov models.
- In one embodiment of the present invention, an automatic learning system monitors features of one or more click profiles of one or more classes of results. The system learns a model of features of the results and their queries that predicts the quality of the results indicated by the profiles. An example of methods and systems of the type that may be used for such analysis may be found in U.S. patent application Ser. No. 10/706,991, “Ranking Documents Based on Large Data Sets,” filed Nov. 13, 2003, Attorney Docket No. 0026-0057, owned by the same assignee as the present application, which is hereby incorporated by reference in full. This referenced patent application describes the learning of a model of features of results and queries that predicts whether or not there will be a long click on a result. Embodiments of the present invention may learn, for example, a model of features of results and queries that predicts the “goodness” of results, in any of the forms mentioned above.
- Moreover, the fraction of good clicks associated with an interest set (such as a group of three search results) may be useful in analysis of the interest set or in comparing the interest set with another object. For example, the
analyzer 122 may construct a click profile for the interest set according to the method described in relation toFIG. 2 or another method. Theanalyzer 122 may then access the click profile to determine the number of clicks that may be classified as “good” using the probability determinations described above or other methods. Theanalyzer 122 may also determine the total number of clicks (good and bad) for the interest set. Theanalyzer 122 may then calculate the fraction of clicks that are classified as good by, for example, dividing the number of good clicks determined by the total number of clicks. This fraction of good clicks may be used as a basis for comparison with other objects of interest, or may be used as a metric to evaluate the quality of the interest set. - In one embodiment of the present invention, a click profile is developed for manipulated-article results, such as spam results. A manipulated article is an article (such as a web page) that has been manipulated to deceive or distract an analysis of the article, such as an automated analysis of the article by a web crawler or a search engine. Spam pages are one example. A click profile can be used to identify spam. In the context of search, spam comprises a result page in which standard content signals for the page, such as content and anchors, have been modified in a way that does not reflect the value of the page for the user, but causes it to be ranked more highly for queries. Spammers not only optimize web pages to achieve higher rankings from a search engine, but optimize the title and snippet to mimic results for “good” content in order to maximize the click through rate from users.
- Click profiles may be used to identify spam pages and content. In one embodiment, the
analyzer 122 generates a click profile for a result in a result set (e.g., a URL at the domain level), and compares the click profile for the result to a profile identified as indicative of spam. The spam-indicative profile may be identified or constructed by human evaluators or automatically, based on a variety of factors that will change depending on, among other things, varying approach by web-page spammers. It has been found that spam sites or pages have the following attributes: spam results comprise results that are overly optimized for search engines; the pages tend to score high in page-scoring algorithms, but they are seldom visited by navigational client users; they are linked to by guestbook spammers, and they can be readily identified by human evaluators. - Moreover, the
analyzer 122 may derive a click profile for a class of spam results. A click profile for a class of spam results may be determined using a variety of factors. It has been observed that, for spam results, long duration clicks are only half as likely for non-spam; and results with very short clicks are the most likely to be spam results. The duration for spam results is typically short, evidencing a mean staytime of 51.3 seconds. Also, the ratio of short to long clicks is twice as high as for non-spam results, and spam results evidence more multiple clicks that other results. Generally, examining a particular result is not as effective as examining results for a domain. These and other factors may be considered in determining a click profile for a class of spam. - In one embodiment, a method for identifying a manipulated article, such as a “spam” page, that may be carried out by the
analyzer 122 comprises calculating a “good click” as a long, single click, an indefinite duration single click, or a long, multiple click, and calculating a “bad click” as a short click. A “bad ratio” may then be calculated as bad clicks divided by good clicks, and a “good fraction” may be calculated as good clicks divided by all clicks for the analysis set. The bad ratio may then be calculated for the specific search result under analysis, and for the aggregate of all other search results that appear in a search result set with the specific search result under analysis. Theanalyzer 122 may conclude that the specific search result under analysis constitutes a spam-type result if its good fraction is less than 0.15, and its bad ratio is twice as great as the bad ratio of the aggregate of all other search results that occur with it in search result sets. - In one embodiment of the present invention used to detect manipulated articles employs the fraction of “good clicks” (for example, clicks that have more than 60% probability of being perceived as good by the user based on prior observation) and the relative ratio of good clicks to detect a manipulated article. In one embodiment, the relative ratio of good clicks comprises (good clicks on a search result under analysis/bad clicks on the search result under analysis)/(good clicks on all search results in search result sets returned to users that included the search result under analysis/bad clicks on all search results in search result sets returned to users that included the search result under analysis). In one embodiment, if the relative ratio of good clicks for a particular search result, when determined in this manner, is less than 0.5, the search result may be identified as a search result that may point to a manipulated article, such as a spam page, a page devoid of content, or unpopular content. Similarly, such a ratio may be used to identify search results that are likely good, or high-content, sites. For example, if the relative ratio of good clicks for a search result is relatively high, the search result is identified as one that is likely associated with content that is good or helpful. Other methods may be used in determining a manipulated article, and this method serves only as an example.
- The profile defined for a manipulated article may be defined in absolute terms or relative to competing results. For example, in absolute terms, if a particular search result has a probability of being a good result that is lower than a pre-determined probability (e.g., 50%), the search result may be designated as a “bad” result. In relative terms, the probability determination for a particular search result may be compared with other search results in a search result set or other group of search results. If that search result's goodness-probability determination is low in absolute terms (e.g., less than 50%) but is substantially higher than goodness-probability determinations for other search results in the group, the particular search result may not be designated as a “bad” result.
-
FIG. 4 shows one example of a method for identifying a possible manipulated article. In the method shown inFIG. 4 , a click profile indicative of a manipulated article is constructed 402 using the techniques described above. For example, a click profile indicative of a domain that comprises a spam-type domain may be constructed according to the above. Once the spam-indicative profile has been generated, theanalyzer 122 uses the profile to analyze results and result sets to identify spam. Theanalyzer 122 may then identify an object of interest foranalysis 404. For example, a human operator may indicate a particular group of domains for analysis, and theanalyzer 122 may identify a first domain in the group as the first object of interest. Theanalyzer 122 may then create a click profile for the particular domain underanalysis 406. Theanalyzer 122 may then compare the metrics in the click profile for the domain of interest to the click profile for spam results 408. If the comparison reveals similarities between the profiles or other indications that the domain may be a spam-type domain, then theanalyzer 122 may indicate that the domain may be a spam-type domain. For example, if the metrics for the domain of interest are worse than the manipulated article profile 410 (e.g., the duration of clicks is shorter or the ratio of short to long clicks is higher), theanalyzer 122 can mark or flag the domain as probably comprisingspam 412. Once the domain is marked, the search results can be de-weighted in future queries or the site can be marked for further analysis by, for example, human evaluators. If the comparison reveals that the click profile for the domain of interest is not similar to the profile for a manipulated article, or is “better than” such a profile, the method may continue by analyzing another object of interest or otherwise proceeding 414. - In one embodiment of the present invention, the metrics stored in click profiles are used to compare a scoring algorithm under consideration with another scoring algorithm.
FIG. 5 is a flowchart illustrating a method for comparing scoring algorithms using click profiles in one embodiment of the present invention. For a relatively constant click profile, the metrics stored in a click profile can be compared for different result sets to determine, for example, which algorithm is superior, e.g., which algorithm produces higher quality results, such as results that appear to bring a user a higher level of satisfaction. - In the method shown in
FIG. 5 , theanalyzer 122 determines a click profile for the first scoring algorithm 502. Theanalyzer 122 next determines a click profile for a second algorithm 504. These determinations may be carried out in any suitable manner, such as those described herein. In one embodiment, the raw data used by theanalyzer 122 to determine the click profiles is generated by causing a search engine to alternate between the two scoring algorithms over a period of time necessary to generate a data set sufficient for analysis. The data associated with the first algorithm may be stored in afirst log file 132, and the data associated with the second algorithm may be stored in asecond log file 134. In other embodiments, data associated with multiple algorithms may be interleaved in a single log file, and identified with a code or other data. - The
analyzer 122 then compares the metrics of the twoprofiles 506. Metrics of a profile are described above. For example, theanalyzer 122 may compare the total number of clicks for each algorithm, the number of single long clicks, the ratio of long to short clicks, and the ratio of single to multiple clicks and the number of refinements to the query. One or more of these or other metrics may be used at once. - If the metrics for the first algorithm are better, the
analyzer 122 may conclude that the first algorithm is better 508, and the process ends 510. If theanalyzer 122 determines that the metrics are better for the second algorithm, theanalyzer 122 may conclude that the second algorithm is better 512. And if the metrics are substantially equal, theanalyzer 122 may mark the algorithms forfurther evaluation 514. This further evaluation may be by human observer or by machine analysis. - The determination of whether one algorithm is better than another may be based on any of a variety of suitable approaches, and may vary depending on the application and desired approach. For example, in one embodiment, a higher magnitude for the following metrics may indicate a better algorithm: click rate, ratio of long to short clicks, and ratio of single to multiple clicks. In one embodiment, if all three of these metrics are higher for one algorithm, the
analyzer 122 may treat that algorithm as better than the lower-scoring algorithm, and if all three are not higher for one algorithm, the algorithms are designated for Further review. In one embodiment, further review comprises a human being examining the metrics, understanding the differences between the algorithms, and determining how to proceed. Another embodiment involves further computer-based analysis. For example, in one embodiment, search results from the two algorithms may be interleaved for presentation to users, such that interaction with the interleaved search results may be analyzed. - In one embodiment, a click profile may be employed to systematically improve a ranking function by evaluating search results for groups of queries. Search results for different classes of queries will generally exhibit different click profiles. For example, search results for a navigational query (such as a query for the location of a restaurant) will typically exhibit a click profile comprising a single long click or a click with no duration (i.e., the user does not return to the search results). In contrast, general-searching types of queries will typically result in multiple clicks of varying durations. In order to ameliorate the effect on overall analysis of a ranking algorithm of different behavior for different query types, or to evaluate groups of queries with common characteristics, classes of queries with certain base click profiles can be derived based on various criteria. A “class” of result pages may be defined as a set of results that appear, for example, for an individual query (such as “BMW”), a category query (such as “automobiles”), all commercial queries, or other groupings. By training automatic-learning algorithms based on click models, the algorithms can inject result sets with click-identified “good” pages by comparing the overall profile of a subclass of pages (pages with content X, or pages from mydomainx.com) to that of the larger class to identify “good” or “bad” result subclasses.
- Ranking functions may be improved by studying results for a particular class of query.
FIG. 6 is a flowchart illustrating a process for determining the relative quality of search results for a particular query class produced by two different search algorithms by comparing a click profile for search results returned for the class of queries by one search algorithm with a click profile for search results returned for the class of queries by a second search algorithm. - In the embodiment shown in
FIG. 6 , theanalyzer 122 identifies aquery class 602. The class may be provided explicitly. For example, a user may identify a class of queries and provide it to theanalyzer 122 by inputting one or more queries that constitute the class (e.g., “directions,” “map,” “address,” and “location.”). The queries in the class may be identified automatically, or provided implicitly. Another example of classification of queries is classification of queries that result-in high click duration in one group, and the classification of queries that result in medium or low click duration in another. The manual designation of queries in the class is used to describe the method for ease of illustration. - The
analyzer 122 next identifies a query within theclass 604. For example, theanalyzer 122 may select the first query in a list provided by the user (e.g., “directions”). The query within the class identified may be one identified by a user as well. - The
analyzer 122 then derives a click profile for the query class identified for the two algorithms underconsideration 606. In one embodiment, theanalyzer 122 does so by first deriving a click profile for the query identified. For example, the analyzer may determine a first click profile for the search results returned by the first algorithm in relation to the query “directions” (the first query identified in this example). This may be done according to the method discussed in relation toFIG. 2 by, for example, determining a click profile for the result set returned by the first algorithm in relation to the query. The analyzer then determines a second click profile, one in relation to the second search algorithm under analysis, for the query in the class identified. - The
analyzer 122 may repeat the identification of a query within the class and the derivation of two profiles for that query in relation to the two algorithms under analysis in order to derive sufficient data to determine a profile applicable to the search results for the class of queries. For example, theanalyzer 122 may determine two click profiles for each query in the list provided (for each query, one for the first algorithm, and one for the second algorithm). - Using the click profiles for each of the queries, the
analyzer 122 determines a click profile for the class of queries under consideration for eachalgorithm 606. This may be done, for example, by taking the weighted average of values for the various metrics selected. They may be weighted by, for example, the number of occurrences of search results for the query. - Once the
analyzer 122 has derived a class profile for each algorithm, theanalyzer 122 compares the class profiles 608. Theanalyzer 122 compares the two click profiles for the query class. If the click profile for the query class as determined from data associated with the second algorithm displays better metrics for the query class than the first algorithm, the analyzer determines that the second algorithm produces better results for the class of queries under analysis, and may so indicate 612. If the click profile for the query class as determined from data associated with the first algorithm displays better metrics for the query class than the second algorithm, the analyzer determines that the first algorithm produces better results for the class of queries underanalysis 610, and may so indicate. If the metrics for the two profiles do not clearly indicate that one algorithm is better than the other for the class of queries, the query class may be selected forfurther study 614. These determinations may be indicated to a user of the method, or another person. For example, a computer display may indicate the results. - Deriving a click profile for a class of queries allows optimizing retrieval algorithms to maximize the probability that “good” pages are returned. Click behavior within a class tends to be similar while click behavior between classes can be highly disparate, e.g., navigation to specific sites versus browsing for a person's name.
- Click behavior may also be affected by geographical or cultural differences. Thus, in one embodiment, classes are created to reflect these differences. For example, it may be the case that users in one country tend to read faster than users in another countries. Accordingly, what would be a short click for users in the second country may actually be a long click in the first country. The profile, or comparisons of the profile, may be adjusted accordingly.
- As can be seen by the above examples, there are a variety of methods and systems that may embody the present invention. The invention is not limited to these or any examples given herein.
- As another, more-general example, one method according to the present invention comprises determining a plurality of metrics (also called properties) indicating a level of satisfaction for search results, determining the values of the metrics for a plurality of instances of a first object (such as a search result), and determining an interaction profile for the first object based at least in part on the values of the metrics for a plurality of instances of the first object.
- Such an object may comprise any one or more of the objects discussed herein and others, including a search result, a search result set, and a scoring algorithm. For example, a useful object for analysis in examining ranking algorithm is a search result set or group of search result sets.
- The metrics indicating a level of satisfaction may comprise factors that have been determined to indicate the presence or magnitude of a person's satisfaction, or happiness. For example, metrics indicating a level of satisfaction with a search result set returned by a search engine may comprise the metrics and properties discussed herein and others, and may comprise data such as the total number of clicks made for the first object, total number of single, long clicks made on the first object, the ratio of long clicks to shorts clicks made on the first object, the number of query refinements made in relation to the first object, and the ratio of single to multiple clicks on the first object. In one embodiment, the metrics determined may comprise interaction attributes. Interaction attributes comprise one or more attributes of an interaction, rather than only the number of interactions (the number of interactions can be included, but more is needed). Examples of interaction attributes comprise click-duration data, multiple-click data, and query-refinement data. In one embodiment, for example, interaction attributes comprise more than the number of clicks in a user session, or across multiple sessions, but instead comprise data about those clicks, such as their duration, sequence, whether they are multiple clicks or single clicks, whether a query was refined, and other attributes of the interactions. Determining the metrics to include within the interaction profile may comprise selecting metrics, such as those interaction attributes indicated, that may be relevant to user-perceived probability that the search results provide relevant information. User-perceived probability comprises a probability perceived by a user, such as a person.
- As discussed, gathering data over multiple user sessions (for multiple users) of a search engine may provide highly useful data in analyzing the search engine, its search algorithm, and other attributes. In one embodiment, determining an interaction profile for the first object may comprise determining the values of the metrics for instances of the first object in multiple user-sessions of a search engine. One way this may be accomplished is by accessing a log file for the search engine. In the environment of interacting with web pages via a mouse or other input device, a user often provides the interactions with the search engine or other application by what has become known as clicking the mouse. Accordingly, interaction profiles in such environments may be referred to as click profiles.
- As indicated in describing the example embodiments above, analysis of interaction profiles may involve comparing the profile for the first object with another set of data, such as an interaction profile for another object. In one embodiment, after determining the interaction profile for the first object, a method according to the present invention determines the values of the metrics for a plurality of instances of a second object, determines an interaction profile for the second object based at least in part on the values of the metrics for a plurality of instances of the second object, and compares the interaction profile for the first object with the interaction profile of the second object. The comparison of the interaction profile for the first object with the interaction profile of the second object may comprise determining that a particular quality of the interaction profile for the first object is better than the particular quality of the interaction profile for the second object, and further comprise indicating a positive indicator for the first object. A positive indicator is an indication of a positive nature, such as an indication of acceptable quality, a higher quality, or other generally positive attribute. This positive indicator may be indicated by displaying an indication on a computer screen, displaying metric values side by side on a screen such that an operator can view which value may be higher or lower, or by any other suitable way. Comparing the interaction profile for the first object with the interaction profile of the second object may, alternatively or additionally, comprise determining that a particular quality of the interaction profile for the first object is less than the particular quality of the interaction profile for the second object. This particular quality comparison may be made by comparing values of metrics (e.g., comparing magnitudes of duration) or by any suitable comparison. A method of providing the first object (such as a search algorithm) may be adjusted based at least in part on the comparison. For instance, the search algorithm may be altered in light of the comparison.
- As discussed in relation to the examples given, methods according to the present embodiment may detect undesirable objects, such as a manipulated article (e.g., spam web-page) or other undesirable factors. In one embodiment, a method according to the present invention determines an interaction profile indicative of an undesired quality (such as a spam page, or a pornographic page), compares the interaction profile for a first object with the interaction profile indicative of the undesired quality, and if the interaction profile for the first object is within a specified similarity to the interaction profile indicative of the undesired quality, indicates a follow-up action for the first object. The specified similarity may be of any suitable nature, such as a closeness in magnitude of certain metrics, a number of metrics that are within a certain range, or other similarity. Follow-up action may comprise a human or computer review of the first object, blocking the first object from future search results, or other action. Such blocking may be accomplished, for example, by removing the object from an index from which the search results are drawn, by changing an attribute of the article to keep it from being provide in search results, by including the first object in a list of objects to be filtered from search results, or by other suitable approaches.
- Also as mentioned in relation to the examples given, methods according to the present invention may comprise determining a probability that the search result comprises a desirable or undesirable search result based at least in part on the interaction profile. One such method may comprise determining whether the probability indicates an undesirable quality for the search result (such as a spam page). Determining that a search result comprises a desirable search result may comprise determining that the search result probably does not comprise an undesirable search result, or may comprise another suitable action.
- As discussed in relation to the example shown in
FIG. 6 and otherwise, methods according to the present invention may designate a class of objects, such as a group of objects or a genus of objects, in order to further analysis of, adjustment of, or other interaction with search algorithms and the like. For example, in one embodiment, the first object mentioned above may comprise a class of objects. In one method according to such an embodiment, the method determines the values of the metrics for a plurality of instances of a second object, wherein the second object is at least similar to the class of objects, determines an interaction profile for the second object based at least in part on the values of the metrics for a plurality of instances of the second object, and compares the interaction profile for the first object with the interaction profile of the second object. A quality for the second object may be determined based at least in part on the comparison. This quality may, for instance, indicate that the second object is a good search result when compared with the first object, or may indicate that it is a bad search result when compared with the first object. There are a variety of other methods that may make use of the designation of a group of objects or a genus of objects, in order to further analysis of, adjustment of, or other interaction with various objects. - Another general example of a method according to the present invention comprises receiving click data associated with a search result, and determining a search-result click profile for the search result based at least in part on the click data associated with the search result. The search-result click profile comprises a click profile (a sub-set of interaction profile) for the search result. The click data may comprise click-duration data, multiple-click data, query-refinement data, click-quantity data, or other data that may be used in, or to calculate, data in a click profile, as discussed in the examples given.
- Such a method may further comprise analyzing the search-result click profile, and detecting an undesirable search result. A search-result click profile comprises a click profile for a particular search result. The particular search result may be embodied by a URL, a domain, or other object. The detection of an undesirable search result may be accomplished, for example, by detecting an indication that a domain associated with the search result is associated with spam. As discussed in the examples, users often interact with spam pages in a detectable manner.
- As mentioned, comparisons of data may be carried out. For example, click data may comprise click data associated with a first search algorithm, and a method according to the present invention may receive click data associated with a search result and a second ranking algorithm (such as click-duration data, multiple-click data, or query-refinement data), determine a second search-result click profile for the search result based at least in part on the click data associated with the search result and the second search algorithm, and compare the first click profile to the second click profile. This comparison may comprise, or the method may further comprise, determining which of the first ranking algorithm and the second ranking algorithm is better.
- Analyzing the search-result click profile may comprise weighting the click data. In one embodiment, this may be accomplished by weighting the click data for the magnitude of “goodness” (or desirability) indicated by a particular variable. The ranking of a search result may be adjusted based at least in part on a result of the analysis. Weighting may be accomplished in one embodiment by categorizing the click data into kinds of clicks, determining relative “goodness” indication of the category, and weighting accordingly.
- In one method according to the present invention, after receiving click data associated with a search result, the method receives a search result set having the search result, and determines a result-set click profile for the search result set based at least in part on the click data associated with the search result.
- As discussed above, there are a variety of ways to use interaction profiles. It should be understood that the examples of uses of profiles given herein are merely examples. In one method of using an interaction profile, a first interaction profile for a first object is identified, and this first interaction profile is based at least in part on click-duration data for the first object, multiple-click data for the first object, and/or query-refinement data for the first object. A second interaction profile may then be identified, and a relative quality of the first and second objects may be determined based at least in part on a comparison of the first interaction profile and the second interaction profile. This relative quality may be that one profile is better than the other on terms previously defined, for example. In some instances, the second interaction profile may comprise an interaction profile indicative of an Undesired quality (such as indicative of a manipulated article, like a spam web page). If it is determined that the first interaction profile is within a specified similarity to the second interaction profile, indicating for example a likelihood that the object associated with the first profile is also a manipulated article, follow-up action for the first object may be set.
- In some instances, determining a relative quality of objects comprises determining that a particular quality of the first interaction profile is less than the particular quality of the second interaction profile, and further adjusting a method of providing the first object based at least in part on the determination. For example, a search algorithm that provides the first object may be adjusted based on the determination.
- Moreover, after identifying a first interaction profile for a first object (based at least in part on a plurality of metrics comprising click-duration data for the first object, multiple-click data for the first object, and/or query-refinement data for the first object), a method may determine a probability that the first object comprises a desirable object based at least in part on the first interaction profile. The first object may comprise a search result, a group of search results (such as a search result set), or another object. Whether the probability indicates an undesirable attribute for the search result may also be determined by, for example, comparing the probability against probabilities pre-determined (by experiment or otherwise) to indicate an undesirable attribute.
- It should he noted that these methods may be carried out for a class of objects. For example, multiple objects may be grouped into a class of objects.
- Computer-readable media may be provided that stores executable code for carrying out such methods as described herein. Examples of such media are given above.
- The foregoing description of embodiments of the invention has been presented only for the purpose of illustration and description and is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Numerous modifications and adaptations thereof will be apparent to those skilled in the art without departing from the spirit and scope of the present invention.
Claims (19)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/308,770 US9223868B2 (en) | 2004-06-28 | 2011-12-01 | Deriving and using interaction profiles |
US14/966,545 US10387512B2 (en) | 2004-06-28 | 2015-12-11 | Deriving and using interaction profiles |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US87892604A | 2004-06-28 | 2004-06-28 | |
US201113035432A | 2011-02-25 | 2011-02-25 | |
US13/308,770 US9223868B2 (en) | 2004-06-28 | 2011-12-01 | Deriving and using interaction profiles |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US201113035432A Continuation | 2004-06-28 | 2011-02-25 |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/966,545 Continuation US10387512B2 (en) | 2004-06-28 | 2015-12-11 | Deriving and using interaction profiles |
Publications (2)
Publication Number | Publication Date |
---|---|
US20150161255A1 true US20150161255A1 (en) | 2015-06-11 |
US9223868B2 US9223868B2 (en) | 2015-12-29 |
Family
ID=53271410
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/308,770 Expired - Fee Related US9223868B2 (en) | 2004-06-28 | 2011-12-01 | Deriving and using interaction profiles |
US14/966,545 Active 2025-05-31 US10387512B2 (en) | 2004-06-28 | 2015-12-11 | Deriving and using interaction profiles |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/966,545 Active 2025-05-31 US10387512B2 (en) | 2004-06-28 | 2015-12-11 | Deriving and using interaction profiles |
Country Status (1)
Country | Link |
---|---|
US (2) | US9223868B2 (en) |
Cited By (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130254177A1 (en) * | 2012-03-21 | 2013-09-26 | Apple Inc. | Systems and Methods for Optimizing Search Engine Performance |
US20150142557A1 (en) * | 2013-11-19 | 2015-05-21 | Yahoo! Inc. | User Engagement-Based Contextually-Dependent Automated Pricing for Non-Guaranteed Delivery |
US20150249716A1 (en) * | 2014-02-28 | 2015-09-03 | Guangde Chen | Systems and methods for measuring user engagement |
US20160224666A1 (en) * | 2015-01-30 | 2016-08-04 | Microsoft Technology Licensing, Llc | Compensating for bias in search results |
US20160335263A1 (en) * | 2015-05-15 | 2016-11-17 | Yahoo! Inc. | Method and system for ranking search content |
WO2017001944A1 (en) * | 2015-06-30 | 2017-01-05 | Yandex Europe Ag | Method, system and computer readable memory for generating ranked search results incorporating suggests |
US20170004541A1 (en) * | 2015-06-30 | 2017-01-05 | Yahoo! Inc. | Method and system for analyzing user behavior associated with web contents |
CN106777201A (en) * | 2016-12-23 | 2017-05-31 | 北京奇虎科技有限公司 | The sort method and device of the recommending data in search results pages |
US10007719B2 (en) | 2015-01-30 | 2018-06-26 | Microsoft Technology Licensing, Llc | Compensating for individualized bias of search users |
US10540263B1 (en) * | 2017-06-06 | 2020-01-21 | Dorianne Marie Friend | Testing and rating individual ranking variables used in search engine algorithms |
US10740418B2 (en) | 2016-11-03 | 2020-08-11 | International Business Machines Corporation | System and method for monitoring user searches to obfuscate web searches by using emulated user profiles |
US10885132B2 (en) | 2016-11-03 | 2021-01-05 | International Business Machines Corporation | System and method for web search obfuscation using emulated user profiles |
US10915661B2 (en) | 2016-11-03 | 2021-02-09 | International Business Machines Corporation | System and method for cognitive agent-based web search obfuscation |
US10929481B2 (en) * | 2016-11-03 | 2021-02-23 | International Business Machines Corporation | System and method for cognitive agent-based user search behavior modeling |
US10956430B2 (en) * | 2019-04-16 | 2021-03-23 | International Business Machines Corporation | User-driven adaptation of rankings of navigation elements |
US11061980B2 (en) * | 2019-09-18 | 2021-07-13 | Capital One Services, Llc | System and method for integrating content into webpages |
CN113392304A (en) * | 2020-03-11 | 2021-09-14 | 淄博职业学院 | Big data storage service method |
US11360979B2 (en) * | 2019-12-17 | 2022-06-14 | Atlassian Pty Ltd. | Relevance tuning for online search |
US11360937B2 (en) * | 2020-03-20 | 2022-06-14 | Bank Of America Corporation | System for natural language processing-based electronic file scanning for processing database queries |
US11403356B2 (en) | 2019-04-16 | 2022-08-02 | International Business Machines Corporation | Personalizing a search of a search service |
US11403354B2 (en) | 2019-04-16 | 2022-08-02 | International Business Machines Corporation | Managing search queries of a search service |
US11436214B2 (en) | 2019-04-16 | 2022-09-06 | International Business Machines Corporation | Preventing search fraud |
Families Citing this family (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8543592B2 (en) * | 2008-05-30 | 2013-09-24 | Microsoft Corporation | Related URLs for task-oriented query results |
US8326862B2 (en) * | 2011-05-01 | 2012-12-04 | Alan Mark Reznik | Systems and methods for facilitating enhancements to search engine results |
US11841912B2 (en) | 2011-05-01 | 2023-12-12 | Twittle Search Limited Liability Company | System for applying natural language processing and inputs of a group of users to infer commonly desired search results |
US10929890B2 (en) | 2013-08-15 | 2021-02-23 | Overstock.Com, Inc. | System and method of personalizing online marketing campaigns |
CN104615680B (en) * | 2015-01-21 | 2016-11-02 | 广州神马移动信息科技有限公司 | The method for building up of web page quality model and device |
US10997184B2 (en) | 2015-05-22 | 2021-05-04 | Coveo Solutions, Inc. | System and method for ranking search results |
US10832336B2 (en) * | 2017-05-22 | 2020-11-10 | Insurance Zebra Inc. | Using simulated consumer profiles to form calibration data for models |
US20190129958A1 (en) * | 2017-10-30 | 2019-05-02 | Facebook, Inc. | Optimizing the Mapping of Qualitative Labels to Scores for Calculating Gain in Search Results |
US11205179B1 (en) | 2019-04-26 | 2021-12-21 | Overstock.Com, Inc. | System, method, and program product for recognizing and rejecting fraudulent purchase attempts in e-commerce |
US11449671B2 (en) * | 2020-01-30 | 2022-09-20 | Optimizely, Inc. | Dynamic content recommendation for responsive websites |
US20220215948A1 (en) | 2021-01-07 | 2022-07-07 | Abiomed, Inc. | Network-based medical apparatus control and data management systems |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020099723A1 (en) * | 2000-01-14 | 2002-07-25 | Jorge Garcia-Chiesa | Apparatus and method to support management of uniform resource locators and/or contents of database servers |
US20020173971A1 (en) * | 2001-03-28 | 2002-11-21 | Stirpe Paul Alan | System, method and application of ontology driven inferencing-based personalization systems |
US20030018626A1 (en) * | 2001-07-23 | 2003-01-23 | Kay David B. | System and method for measuring the quality of information retrieval |
US20030078914A1 (en) * | 2001-10-18 | 2003-04-24 | Witbrock Michael J. | Search results using editor feedback |
US20030115333A1 (en) * | 2001-07-06 | 2003-06-19 | Tal Cohen | System and method for analyzing system visitor activities |
US6772150B1 (en) * | 1999-12-10 | 2004-08-03 | Amazon.Com, Inc. | Search query refinement using related search phrases |
US20050033732A1 (en) * | 2003-08-06 | 2005-02-10 | Ching-Chung Chang | Search engine having navigation path and orphan file features |
US20050154716A1 (en) * | 2004-01-09 | 2005-07-14 | Microsoft Corporation | System and method for automated optimization of search result relevance |
US20050159921A1 (en) * | 1999-08-26 | 2005-07-21 | Louviere Jordan J. | On-line experimentation |
US20050210024A1 (en) * | 2004-03-22 | 2005-09-22 | Microsoft Corporation | Search system using user behavior data |
US7219073B1 (en) * | 1999-08-03 | 2007-05-15 | Brandnamestores.Com | Method for extracting information utilizing a user-context-based search engine |
US8954420B1 (en) * | 2003-12-31 | 2015-02-10 | Google Inc. | Methods and systems for improving a search ranking using article information |
Family Cites Families (98)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5642502A (en) | 1994-12-06 | 1997-06-24 | University Of Central Florida | Method and system for searching for relevant documents from a text database collection, using statistical ranking, relevancy feedback and small pieces of text |
US6006221A (en) | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US5826260A (en) | 1995-12-11 | 1998-10-20 | International Business Machines Corporation | Information retrieval system and method for displaying and ordering information based on query element contribution |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US5897627A (en) | 1997-05-20 | 1999-04-27 | Motorola, Inc. | Method of determining statistically meaningful rules |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6311175B1 (en) | 1998-03-06 | 2001-10-30 | Perot Systems Corp. | System and method for generating performance models of complex information technology systems |
US6006225A (en) | 1998-06-15 | 1999-12-21 | Amazon.Com | Refining search queries by the suggestion of correlated terms from prior searches |
US6243076B1 (en) | 1998-09-01 | 2001-06-05 | Synthetic Environments, Inc. | System and method for controlling host system interface with point-of-interest data |
US6411950B1 (en) | 1998-11-30 | 2002-06-25 | Compaq Information Technologies Group, Lp | Dynamic query expansion |
US6542894B1 (en) | 1998-12-09 | 2003-04-01 | Unica Technologies, Inc. | Execution of multiple models using data segmentation |
JP2000194559A (en) | 1998-12-24 | 2000-07-14 | Canon Inc | Processor and method for information processing and storage medium storage with program thereof |
US6564202B1 (en) | 1999-01-26 | 2003-05-13 | Xerox Corporation | System and method for visually representing the contents of a multiple data object cluster |
US20030195796A1 (en) * | 1999-03-04 | 2003-10-16 | Vijay Konda | Internet activity rating system |
US6519585B1 (en) | 1999-04-27 | 2003-02-11 | Infospace, Inc. | System and method for facilitating presentation of subject categorizations for use in an on-line search query engine |
US6493702B1 (en) | 1999-05-05 | 2002-12-10 | Xerox Corporation | System and method for searching and recommending documents in a collection using share bookmarks |
US20040236721A1 (en) | 2003-05-20 | 2004-11-25 | Jordan Pollack | Method and apparatus for distributing information to users |
US6718363B1 (en) | 1999-07-30 | 2004-04-06 | Verizon Laboratories, Inc. | Page aggregation for web sites |
GB9925741D0 (en) | 1999-10-30 | 1999-12-29 | Ibm | Interaction with database reports |
US6732088B1 (en) | 1999-12-14 | 2004-05-04 | Xerox Corporation | Collaborative searching by query induction |
US6981040B1 (en) * | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US6397211B1 (en) | 2000-01-03 | 2002-05-28 | International Business Machines Corporation | System and method for identifying useless documents |
US6546388B1 (en) | 2000-01-14 | 2003-04-08 | International Business Machines Corporation | Metadata search results ranking system |
US6546389B1 (en) | 2000-01-19 | 2003-04-08 | International Business Machines Corporation | Method and system for building a decision-tree classifier from privacy-preserving data |
US6523020B1 (en) | 2000-03-22 | 2003-02-18 | International Business Machines Corporation | Lightweight rule induction |
US6671711B1 (en) | 2000-03-31 | 2003-12-30 | Xerox Corporation | System and method for predicting web user flow by determining association strength of hypermedia links |
KR20020019079A (en) | 2000-04-13 | 2002-03-09 | 요트.게.아. 롤페즈 | Search engine with search task model and interactive search task-refinement process |
US6701309B1 (en) | 2000-04-21 | 2004-03-02 | Lycos, Inc. | Method and system for collecting related queries |
US20020016736A1 (en) | 2000-05-03 | 2002-02-07 | Cannon George Dewey | System and method for determining suitable breaks for inserting content |
US7970713B1 (en) * | 2000-05-10 | 2011-06-28 | OIP Technologies, Inc. | Method and apparatus for automatic pricing in electronic commerce |
JP2002013938A (en) | 2000-06-28 | 2002-01-18 | Mazda Motor Corp | Information provision system, server device and on- vehicle device used in the same information provision system, and storage medium storing program readable by the same on-vehicle device or by computer |
US6463430B1 (en) | 2000-07-10 | 2002-10-08 | Mohomine, Inc. | Devices and methods for generating and managing a database |
US6675159B1 (en) | 2000-07-27 | 2004-01-06 | Science Applic Int Corp | Concept-based search and retrieval system |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US7062488B1 (en) | 2000-08-30 | 2006-06-13 | Richard Reisman | Task/domain segmentation in applying feedback to command control |
AU9124801A (en) | 2000-09-28 | 2002-04-08 | Oracle Corp | Enterprise web mining system and method |
US6678679B1 (en) | 2000-10-10 | 2004-01-13 | Science Applications International Corporation | Method and system for facilitating the refinement of data queries |
US6804662B1 (en) | 2000-10-27 | 2004-10-12 | Plumtree Software, Inc. | Method and apparatus for query and analysis |
US6856957B1 (en) | 2001-02-07 | 2005-02-15 | Nuance Communications | Query expansion and weighting based on results of automatic speech recognition |
US7194454B2 (en) | 2001-03-12 | 2007-03-20 | Lucent Technologies | Method for organizing records of database search activity by topical relevance |
US7065524B1 (en) | 2001-03-30 | 2006-06-20 | Pharsight Corporation | Identification and correction of confounders in a statistical analysis |
US6714929B1 (en) | 2001-04-13 | 2004-03-30 | Auguri Corporation | Weighted preference data search system and method |
US6738764B2 (en) | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
US7010527B2 (en) | 2001-08-13 | 2006-03-07 | Oracle International Corp. | Linguistically aware link analysis method and system |
US7499907B2 (en) | 2001-10-12 | 2009-03-03 | Teradata Us, Inc. | Index selection in a database system |
US7149732B2 (en) | 2001-10-12 | 2006-12-12 | Microsoft Corporation | Clustering web queries |
US8117072B2 (en) | 2001-11-13 | 2012-02-14 | International Business Machines Corporation | Promoting strategic documents by bias ranking of search results on a web browser |
JP2003208538A (en) | 2002-01-11 | 2003-07-25 | Oki Electric Ind Co Ltd | Advertisement delivery system and control program for it |
AU2003212463A1 (en) | 2002-03-01 | 2003-09-16 | Paul Jeffrey Krupin | A method and system for creating improved search queries |
US7567953B2 (en) * | 2002-03-01 | 2009-07-28 | Business Objects Americas | System and method for retrieving and organizing information from disparate computer network information sources |
US7272122B2 (en) | 2002-04-26 | 2007-09-18 | Nokia Corporation | Relocation of application-specific functionality during seamless network layer-level handoffs |
US7437349B2 (en) | 2002-05-10 | 2008-10-14 | International Business Machines Corporation | Adaptive probabilistic query expansion |
US7231395B2 (en) * | 2002-05-24 | 2007-06-12 | Overture Services, Inc. | Method and apparatus for categorizing and presenting documents of a distributed database |
US7117207B1 (en) * | 2002-09-11 | 2006-10-03 | George Mason Intellectual Properties, Inc. | Personalizable semantic taxonomy-based search agent |
US6829599B2 (en) | 2002-10-02 | 2004-12-07 | Xerox Corporation | System and method for improving answer relevance in meta-search engines |
US7383258B2 (en) | 2002-10-03 | 2008-06-03 | Google, Inc. | Method and apparatus for characterizing documents based on clusters of related words |
AU2003279992A1 (en) | 2002-10-21 | 2004-05-13 | Ebay Inc. | Listing recommendation in a network-based commerce system |
JP4536358B2 (en) | 2002-12-04 | 2010-09-01 | 株式会社リコー | Image forming apparatus |
US20040143644A1 (en) * | 2003-01-21 | 2004-07-22 | Nec Laboratories America, Inc. | Meta-search engine architecture |
US20040172374A1 (en) * | 2003-02-28 | 2004-09-02 | Forman George Henry | Predictive data mining process analysis and tool |
US6947930B2 (en) | 2003-03-21 | 2005-09-20 | Overture Services, Inc. | Systems and methods for interactive search query refinement |
US7051023B2 (en) | 2003-04-04 | 2006-05-23 | Yahoo! Inc. | Systems and methods for generating concept units from search queries |
US20040249796A1 (en) * | 2003-06-06 | 2004-12-09 | Microsoft Corporation | Query classification |
US7617202B2 (en) | 2003-06-16 | 2009-11-10 | Microsoft Corporation | Systems and methods that employ a distributional analysis on a query log to improve search results |
WO2005001668A2 (en) | 2003-06-29 | 2005-01-06 | Bitpass, Inc. | Dynamic indicator for context sensitive real-time communications |
US8856163B2 (en) | 2003-07-28 | 2014-10-07 | Google Inc. | System and method for providing a user interface with search query broadening |
US7174328B2 (en) * | 2003-09-02 | 2007-02-06 | International Business Machines Corp. | Selective path signatures for query processing over a hierarchical tagged data structure |
US8086619B2 (en) | 2003-09-05 | 2011-12-27 | Google Inc. | System and method for providing search query refinements |
US20050071337A1 (en) | 2003-09-25 | 2005-03-31 | International Business Machines Corporation | Encryption of query execution details in a database management system |
US7617205B2 (en) | 2005-03-30 | 2009-11-10 | Google Inc. | Estimating confidence for query revision models |
WO2005041100A2 (en) | 2003-10-24 | 2005-05-06 | Prosanos Corporation | Data analysis system of clinical databases |
US7240049B2 (en) * | 2003-11-12 | 2007-07-03 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US7231399B1 (en) | 2003-11-14 | 2007-06-12 | Google Inc. | Ranking documents based on large data sets |
US20050144158A1 (en) | 2003-11-18 | 2005-06-30 | Capper Liesl J. | Computer network search engine |
US7689412B2 (en) | 2003-12-05 | 2010-03-30 | Microsoft Corporation | Synonymous collocation extraction using translation information |
US20050149499A1 (en) | 2003-12-30 | 2005-07-07 | Google Inc., A Delaware Corporation | Systems and methods for improving search quality |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
US7424469B2 (en) * | 2004-01-07 | 2008-09-09 | Microsoft Corporation | System and method for blending the results of a classifier and a search engine |
US8676830B2 (en) | 2004-03-04 | 2014-03-18 | Yahoo! Inc. | Keyword recommendation for internet search engines |
KR101222294B1 (en) | 2004-03-15 | 2013-01-15 | 야후! 인크. | Search systems and methods with integration of user annotations |
US8150825B2 (en) | 2004-03-15 | 2012-04-03 | Yahoo! Inc. | Inverse search systems and methods |
US7254774B2 (en) | 2004-03-16 | 2007-08-07 | Microsoft Corporation | Systems and methods for improved spell checking |
US20050256848A1 (en) | 2004-05-13 | 2005-11-17 | International Business Machines Corporation | System and method for user rank search |
US7293017B2 (en) | 2004-07-01 | 2007-11-06 | Microsoft Corporation | Presentation-level content filtering for a search result |
US7519595B2 (en) | 2004-07-14 | 2009-04-14 | Microsoft Corporation | Method and system for adaptive categorial presentation of search results |
US7580921B2 (en) | 2004-07-26 | 2009-08-25 | Google Inc. | Phrase identification in an information retrieval system |
US7958115B2 (en) | 2004-07-29 | 2011-06-07 | Yahoo! Inc. | Search systems and methods using in-line contextual queries |
US7836076B2 (en) | 2004-08-20 | 2010-11-16 | Hewlett-Packard Development Company, L.P. | Distributing content indices |
US20060074883A1 (en) | 2004-10-05 | 2006-04-06 | Microsoft Corporation | Systems, methods, and interfaces for providing personalized search and information access |
US7475340B2 (en) | 2005-03-24 | 2009-01-06 | International Business Machines Corporation | Differential dynamic content delivery with indications of interest from non-participants |
US8346757B1 (en) | 2005-03-28 | 2013-01-01 | Google Inc. | Determining query terms of little significance |
US7870147B2 (en) | 2005-03-29 | 2011-01-11 | Google Inc. | Query revision using known highly-ranked queries |
US7565345B2 (en) | 2005-03-29 | 2009-07-21 | Google Inc. | Integration of multiple query revision models |
US7636714B1 (en) | 2005-03-31 | 2009-12-22 | Google Inc. | Determining query term synonyms within query context |
US8266162B2 (en) | 2005-10-31 | 2012-09-11 | Lycos, Inc. | Automatic identification of related search keywords |
-
2011
- 2011-12-01 US US13/308,770 patent/US9223868B2/en not_active Expired - Fee Related
-
2015
- 2015-12-11 US US14/966,545 patent/US10387512B2/en active Active
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7219073B1 (en) * | 1999-08-03 | 2007-05-15 | Brandnamestores.Com | Method for extracting information utilizing a user-context-based search engine |
US20050159921A1 (en) * | 1999-08-26 | 2005-07-21 | Louviere Jordan J. | On-line experimentation |
US6772150B1 (en) * | 1999-12-10 | 2004-08-03 | Amazon.Com, Inc. | Search query refinement using related search phrases |
US20020099723A1 (en) * | 2000-01-14 | 2002-07-25 | Jorge Garcia-Chiesa | Apparatus and method to support management of uniform resource locators and/or contents of database servers |
US20020173971A1 (en) * | 2001-03-28 | 2002-11-21 | Stirpe Paul Alan | System, method and application of ontology driven inferencing-based personalization systems |
US20030115333A1 (en) * | 2001-07-06 | 2003-06-19 | Tal Cohen | System and method for analyzing system visitor activities |
US20030018626A1 (en) * | 2001-07-23 | 2003-01-23 | Kay David B. | System and method for measuring the quality of information retrieval |
US20030078914A1 (en) * | 2001-10-18 | 2003-04-24 | Witbrock Michael J. | Search results using editor feedback |
US20050033732A1 (en) * | 2003-08-06 | 2005-02-10 | Ching-Chung Chang | Search engine having navigation path and orphan file features |
US8954420B1 (en) * | 2003-12-31 | 2015-02-10 | Google Inc. | Methods and systems for improving a search ranking using article information |
US20050154716A1 (en) * | 2004-01-09 | 2005-07-14 | Microsoft Corporation | System and method for automated optimization of search result relevance |
US20050210024A1 (en) * | 2004-03-22 | 2005-09-22 | Microsoft Corporation | Search system using user behavior data |
Non-Patent Citations (1)
Title |
---|
Spiliopoulou et al. 11 June 2002, Improving the Effectiveness of a Web Site with Web Usage Mining, Pgs. 142 - 160 * |
Cited By (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130254177A1 (en) * | 2012-03-21 | 2013-09-26 | Apple Inc. | Systems and Methods for Optimizing Search Engine Performance |
US10127314B2 (en) * | 2012-03-21 | 2018-11-13 | Apple Inc. | Systems and methods for optimizing search engine performance |
US20150142557A1 (en) * | 2013-11-19 | 2015-05-21 | Yahoo! Inc. | User Engagement-Based Contextually-Dependent Automated Pricing for Non-Guaranteed Delivery |
US10134053B2 (en) * | 2013-11-19 | 2018-11-20 | Excalibur Ip, Llc | User engagement-based contextually-dependent automated pricing for non-guaranteed delivery |
US9848053B2 (en) * | 2014-02-28 | 2017-12-19 | Microsoft Technology Licensing, Llc | Systems and methods for measuring user engagement |
US20150249716A1 (en) * | 2014-02-28 | 2015-09-03 | Guangde Chen | Systems and methods for measuring user engagement |
US10007719B2 (en) | 2015-01-30 | 2018-06-26 | Microsoft Technology Licensing, Llc | Compensating for individualized bias of search users |
US10007730B2 (en) * | 2015-01-30 | 2018-06-26 | Microsoft Technology Licensing, Llc | Compensating for bias in search results |
US20160224666A1 (en) * | 2015-01-30 | 2016-08-04 | Microsoft Technology Licensing, Llc | Compensating for bias in search results |
US20160335263A1 (en) * | 2015-05-15 | 2016-11-17 | Yahoo! Inc. | Method and system for ranking search content |
US11675795B2 (en) * | 2015-05-15 | 2023-06-13 | Yahoo Assets Llc | Method and system for ranking search content |
US11869040B2 (en) * | 2015-06-30 | 2024-01-09 | Yahoo Ad Tech Llc | Method and system for analyzing user behavior associated with web contents |
US20170004541A1 (en) * | 2015-06-30 | 2017-01-05 | Yahoo! Inc. | Method and system for analyzing user behavior associated with web contents |
US11157967B2 (en) | 2015-06-30 | 2021-10-26 | Verizon Media Inc. | Method and system for providing content supply adjustment |
WO2017001944A1 (en) * | 2015-06-30 | 2017-01-05 | Yandex Europe Ag | Method, system and computer readable memory for generating ranked search results incorporating suggests |
US10740418B2 (en) | 2016-11-03 | 2020-08-11 | International Business Machines Corporation | System and method for monitoring user searches to obfuscate web searches by using emulated user profiles |
US10929481B2 (en) * | 2016-11-03 | 2021-02-23 | International Business Machines Corporation | System and method for cognitive agent-based user search behavior modeling |
US10915661B2 (en) | 2016-11-03 | 2021-02-09 | International Business Machines Corporation | System and method for cognitive agent-based web search obfuscation |
US10885132B2 (en) | 2016-11-03 | 2021-01-05 | International Business Machines Corporation | System and method for web search obfuscation using emulated user profiles |
CN106777201A (en) * | 2016-12-23 | 2017-05-31 | 北京奇虎科技有限公司 | The sort method and device of the recommending data in search results pages |
US10540263B1 (en) * | 2017-06-06 | 2020-01-21 | Dorianne Marie Friend | Testing and rating individual ranking variables used in search engine algorithms |
US11403354B2 (en) | 2019-04-16 | 2022-08-02 | International Business Machines Corporation | Managing search queries of a search service |
US10956430B2 (en) * | 2019-04-16 | 2021-03-23 | International Business Machines Corporation | User-driven adaptation of rankings of navigation elements |
US11436214B2 (en) | 2019-04-16 | 2022-09-06 | International Business Machines Corporation | Preventing search fraud |
US11403356B2 (en) | 2019-04-16 | 2022-08-02 | International Business Machines Corporation | Personalizing a search of a search service |
US11061980B2 (en) * | 2019-09-18 | 2021-07-13 | Capital One Services, Llc | System and method for integrating content into webpages |
US11360979B2 (en) * | 2019-12-17 | 2022-06-14 | Atlassian Pty Ltd. | Relevance tuning for online search |
CN113392304A (en) * | 2020-03-11 | 2021-09-14 | 淄博职业学院 | Big data storage service method |
US11360937B2 (en) * | 2020-03-20 | 2022-06-14 | Bank Of America Corporation | System for natural language processing-based electronic file scanning for processing database queries |
Also Published As
Publication number | Publication date |
---|---|
US20160098488A1 (en) | 2016-04-07 |
US9223868B2 (en) | 2015-12-29 |
US10387512B2 (en) | 2019-08-20 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10387512B2 (en) | Deriving and using interaction profiles | |
US11809504B2 (en) | Auto-refinement of search results based on monitored search activities of users | |
US8380705B2 (en) | Methods and systems for improving a search ranking using related queries | |
CA2538597C (en) | Methods and systems for improving a search ranking using population information | |
US9811566B1 (en) | Modifying search result ranking based on implicit user feedback | |
US8321278B2 (en) | Targeted advertisements based on user profiles and page profile | |
US7533092B2 (en) | Link-based spam detection | |
US6640218B1 (en) | Estimating the usefulness of an item in a collection of information | |
KR101269105B1 (en) | Query revision using known highly-ranked queries | |
US9092510B1 (en) | Modifying search result ranking based on a temporal element of user feedback | |
US20120047444A1 (en) | Relating web page change with revisitation patterns | |
US20080091650A1 (en) | Augmented Search With Error Detection and Replacement | |
US20080097958A1 (en) | Method and Apparatus for Retrieving and Indexing Hidden Pages | |
US20160055252A1 (en) | Methods and systems for personalizing aggregated search results | |
AU2009246546A1 (en) | Search results with most clicked next objects | |
US20180032614A1 (en) | System And Method For Compiling Search Results Using Information Regarding Length Of Time Users Spend Interacting With Individual Search Results | |
US9400843B2 (en) | Adjusting stored query relevance data based on query term similarity | |
EP1775666A2 (en) | Document scoring based on traffic associated with a document |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BATTLE, ALEXIS J.;COHN, DAVID ARIEL;GRIMES, CARRIE ELIZABETH;AND OTHERS;REEL/FRAME:027630/0907Effective date: 20041005 |
|
ZAAA | Notice of allowance and fees due |
Free format text: ORIGINAL CODE: NOA |
|
ZAAB | Notice of allowance mailed |
Free format text: ORIGINAL CODE: MN/=. |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20231229 |
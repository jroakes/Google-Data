EP2191394B1 - Identifying and linking similar passages in a digital text corpus - Google Patents
Identifying and linking similar passages in a digital text corpus Download PDFInfo
- Publication number
- EP2191394B1 EP2191394B1 EP08796339A EP08796339A EP2191394B1 EP 2191394 B1 EP2191394 B1 EP 2191394B1 EP 08796339 A EP08796339 A EP 08796339A EP 08796339 A EP08796339 A EP 08796339A EP 2191394 B1 EP2191394 B1 EP 2191394B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- document
- shingle
- shingles
- corpus
- sequence
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Not-in-force
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/134—Hyperlinking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/194—Calculation of difference between files
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/284—Lexical analysis, e.g. tokenisation or collocates
Definitions
- This invention pertains in general to data mining a large corpus of text and in particular to identifying and navigating similar passages in a digital text corpus.
- a digital text corpus such as a digital library that is accessible via the Internet.
- a digital text corpus is established, for example, by scanning paper copies of documents including books and newspapers, and then applying an optical character recognition (OCR) process to produce computer-readable text from the scans.
- OCR optical character recognition
- the corpus can also be established by receiving documents and other texts already in machine-readable form.
- a document in a digital text corpus rarely contains functional links to other documents either in the same corpus or in other corpora.
- mining references from the text of documents in a digital text corpus to support general link-based browsing is a difficult task.
- Functional hypertext references such as URLs are rare. Citations and other forms of inline references are also seldom used outside of scholarly and professional works.
- Embodiments of the method, product, and system build a shingle table describing shingles found in the corpus, the one or more documents in which the shingles appear, and locations in the documents where the shingles occur.
- the method, product, and system identify a sequence of multiple contiguous shingles that appears in a source document in the corpus and in at least one other document in the corpus and generate a similar passage in the source document based at least in part on the sequence of multiple contiguous shingles.
- the method, product, and system also store data describing the similar passage.
- Another embodiment of the computer program product comprises program code including a user interface module configured to display a passage presentation region displaying a ranked list of similar passages found in a source document stored in a corpus, the similar passages in the list also found in one or more other documents stored in the corpus and provide a hypertext link in association with a similar passage in the list that, upon selection, enables navigation to another document in the corpus in which the similar passage is found.
- a user interface module configured to display a passage presentation region displaying a ranked list of similar passages found in a source document stored in a corpus, the similar passages in the list also found in one or more other documents stored in the corpus and provide a hypertext link in association with a similar passage in the list that, upon selection, enables navigation to another document in the corpus in which the similar passage is found.
- Another embodiment of the method comprises identifying a group of words found in a source document in the corpus and identifying one or more target documents in the corpus that also contain the group of words.
- the method generates a similar passage in the source document based at least in part on the group of words found in the source document and in the one or more target documents and stores data describing the similar passage.
- Yet another embodiment of the method comprises identifying a group of words found in a source document in the corpus and identifying one or more target documents in the corpus that also contain the group of words.
- the method also generates a similar passage in the source document based at least in part on the group of words found in the source document and in the one or more target documents and creates a link structure including one or more links associating the similar passage in the source document with the group of words contained in the one or more target documents.
- the method further stores data describing the link structure.
- FIG. 1 shows an environment adapted to support passage mining.
- FIG. 2 is a high-level block diagram illustrating a functional view of a typical computer for use as one of the entities illustrated in the environment of FIG. 1 .
- FIG. 3 is a high-level block diagram illustrating modules within the passage mining engine.
- FIG. 4 is a flow chart illustrating steps performed by the passage mining engine to mine passages according to one embodiment.
- FIG. 5 illustrates a sample shingle table generated by the shingling module according to one embodiment.
- FIG. 6 is a flow chart illustrating steps performed for building sequences according to one embodiment.
- FIG. 7 is a flow chart illustrating steps performed for building sequences.
- FIG. 8 illustrates a sample workspace for sequencing and sequence merging.
- FIG. 9 illustrates a sample web page presenting information about the book "Six Degrees of Separation.”
- FIG. 10 illustrates a sample web page presenting information about other books sharing a passage with the book "Six Degrees of Separation.”[0100]
- the figures depict an embodiment of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the scope of the invention described herein.
- FIG. 1 shows an environment 100 adapted to support identifying and navigating similar passages of text in a digital text corpus 112 according to one example.
- the environment 100 includes a data store 110 for storing the corpus 112 and a similar passage database 114, and a passage mining engine 116 for identifying similar passages in the corpus.
- the environment also includes a client 118 for requesting and/or viewing information from the data store 110, and a web server 120 for interacting with the client and providing interfaces allowing the client to access the information in the data store.
- a network 122 enables communications between and among the data store 110, passage mining engine 116, client 118, and web server 120.
- passage mining engine 116 is connected to the network 122 periodically. When it is online, the mining engine 116 only needs to communicate with the data store 110 in order to identify similar passages in the corpus 112 and store the passage data in the passage database 114. The passage mining engine 116 does not need to interact with the client 118 or the web server 120 according to one example. Once identifying similar passages is finished, the passage mining engine 116 may be off-line, and the web server 120 supports passage navigating by interacting with the client 118 and the data store 110 to retrieve information from the data store that is requested by the client. Moreover, different examples of the environment 100 include different and/or additional entities than the ones shown in FIG. 1 , and the entities are organized in a different manner.
- the data store 110 stores the corpus 112 of information and the similar passage database 114. It also stores data utilized to support the functionalities or generated by the functionalities described herein. The data store 110 can also store one or more other corpora and data. The data store 110 receives requests for information stored in it and provides the information in return. In a typical example the data store 110 is comprised of multiple computers and/or storage devices configured to collectively store a large amount of information.
- the corpus 112 stores a set of information.
- the corpus 112 stores the contents of a large number of digital documents.
- the term "document” refers to a written work or composition. This definition includes, for example, conventional books such as published novels, and collections of text such as newspapers, magazines, journals, pamphlets, letters, articles, web pages and other electronic documents.
- the document contents stored by the corpus 112 include, for example, the document text represented in a computer-readable format, images from the documents, scanned images of pages from the documents, etc.
- each document in the corpus 112 is assigned a unique identifier referred to as its "Doc ID”, and each word in the document is assigned a unique identifier that describes its position in the document and is referred to as its "Pos ID.”
- Doc ID a unique identifier that describes its position in the document and is referred to as its "Pos ID.”
- the term "word” refers to a token containing a block of structured text. The word does not necessarily have meaning in any language, although it will have meaning in most cases.
- the corpus 112 stores metadata about the documents within it.
- the metadata are structured data that describe the documents. Examples of metadata include metadata about a book such as the author, publisher, year published, number of pages, and edition.
- the similar passage database 114 stores data describing similar passages in the corpus 112.
- the passage database 114 is generated by the passage mining engine 116 to store information obtained from passage mining.
- the passage mining engine 116 constructs the passage database 114 by copying existing quotation collections such as Bartlett's, and searching and indexing the instances of quotations and their variations that appear in the corpus 112.
- the passage mining engine 116 constructs the passage database 114 by copying existing text appearing in a quoted form, such as delimited by quotation marks, from the corpus, and searching and indexing the instances of phrases in the corpus 112.
- the passage mining engine 116 constructs the passage database 114 by copying each group of words, such as sentences, from the corpus, and searching and indexing the instances of the group of words in the corpus 112.
- the database 114 stores similar passages, Doc IDs of the documents in which the passages exist, Pos IDs within the documents at which the passages appear, passage ranking results, etc. Further, in some examples, the database 114 also stores the documents or portions of the documents that have the similar passages.
- the passage mining engine 116 includes one or more computers adapted to analyze the texts of documents in the corpus 112 in order to identify similar passages.
- similar passage refers to a passage in a source document that is found in a similar form in one or more different target documents. Oftentimes, the passages in the target documents are identical to the passage in the source document. Nevertheless, the passages are referred to as "similar” because there might be slight differences among the passages in the different documents. When a source document is said to have multiple "similar passages,” it means that multiple passages in the source document are also found in target documents. This phrase does not necessarily mean that the "similar passages" within the source document are similar to each other.
- the passage mining engine 116 also ranks multiple similar passages found in one document, and stores these passage data in the similar passage database 114. For example, the passage mining engine 116 may find that the passage "I read somewhere that everybody on this planet is separated by only six other people" from the book “Six Degrees of Separation” by John Guare, also appears in 13 other books published between 2000 and 2006. The passage mining engine 116 may store, in the similar passage database 114, the passage, its location in the book, Doc IDs of the 13 other books, its location in the 13 books, and its ranking relative to other passages in the book.
- Passage mining may be performed off-line, asynchronously of any queries made by client 118 against the data store 110.
- the passage mining engine 116 runs periodically to process all the text information in the corpus 112 from scratch and generate similar passage data for storing in the similar passage database 114, disregarding any information obtained from prior passage mining.
- the passage mining engine 116 is used periodically to incrementally update the data stored in the similar passage database 114, for example, as new documents are added to the corpus 112.
- the client 118 is an electronic device having a web browser for interacting with the web server 120 via the network 122, and it is used by a human user to access and obtain information from the data store 110. It can be, for example, a notebook, desktop, or handheld computer, a mobile telephone, personal digital assistant (PDA), mobile email device, portable game player, portable music player, computer integrated into a vehicle, etc.
- PDA personal digital assistant
- the web server 120 interacts with the client 118 to provide information from the data store 110.
- the web server 120 includes a User Interface (UI) module 124 that communicates with the client's 118 web browser to receive and present information.
- the web server 120 also includes a searching module 126 that searches for information in the data store 110.
- the UI module 124 may receive a document query from the web browser issued by a user of the client 118, and the searching module 126 may execute the query against the corpus 112 and the similar passage database 114, and retrieve information including similar passages information that satisfies the query.
- the UI module 124 then interacts with the web browser on the client 118 to present the retrieved information in hypertext.
- hyperlinks are provided to allow the user of the client 118 to navigate to the portions of a document that contains similar passages, or to browse other documents that share the similar passages, much like the way traditional web-browsing is conducted.
- the network 122 represents communication pathways between the data store 110, passage mining engine 116, client 118, and web server 120.
- the network 122 is the Internet.
- the network 122 can also utilize dedicated or private communications links that are not necessarily part of the Internet.
- the network 122 uses standard communications technologies, protocols, and/or interprocess communications techniques.
- the network 122 can include links using technologies such as Ethernet, 802.11, integrated services digital network (ISDN), digital subscriber line (DSL), asynchronous transfer mode (ATM), etc.
- the networking protocols used on the network 122 can include the transmission control protocol/Internet protocol (TCP/IP), the hypertext transport protocol (HTTP), the simple mail transfer protocol (SMTP), the file transfer protocol (FTP), the short message service (SMS) protocol, etc.
- the data exchanged over the network 122 can be represented using technologies and/or formats including the hypertext markup language (HTML), the extensible markup language (XML), etc.
- all or some of links can be encrypted using conventional encryption technologies such as the secure sockets layer (SSL), HTTP over SSL (HTTPS), and/or virtual private networks (VPNs).
- the nodes can use custom and/or dedicated data communications technologies instead of, or in addition to, the ones described above.
- FIG. 2 is a high-level block diagram illustrating a functional view of a typical computer 200 for use as one or more of the entities illustrated in the environment 100 of FIG. 1 according to one example. Illustrated are at least one processor 202 coupled to a bus 204. Also coupled to the bus 204 are a memory 206, a storage device 208, a keyboard 210, a graphics adapter 212, a pointing device 214, and a network adapter 216. A display 218 is coupled to the graphics adapter 212.
- the processor 202 may be any general-purpose processor such as an INTEL x86 compatible-CPU.
- the storage device 208 is, in one example, a hard disk drive but can also be any other device capable of storing data, such as a writeable compact disk (CD) or DVD, or a solid-state memory device.
- the memory 206 may be, for example, firmware, read-only memory (ROM), non-volatile random access memory (NVRAM), and/or RAM, and holds instructions and data used by the processor 202.
- the pointing device 214 may be a mouse, track ball, or other type of pointing device, and is used in combination with the keyboard 210 to input data into the computer system 200.
- the graphics adapter 212 displays images and other information on the display 218.
- the network adapter 216 couples the computer system 200 to the network 122.
- the computer 200 is adapted to execute computer program modules.
- module refers to computer program logic and/or data for providing the specified functionality.
- a module can be implemented in hardware, firmware, and/or software.
- the modules are stored on the storage device 208, loaded into the memory 206, and executed by the processor 202 as one or more processes.
- the types of computers used by the entities of FIG. 1 can vary depending upon the embodiment and the processing power utilized by the entity.
- the client 118 typically requires less processing power than the passage mining engine 116 and web server 120.
- the client 118 system can be a standard personal computer or a mobile telephone.
- the passage mining engine 116 and web server 120 may comprise processes executing on more powerful computers, logical processing units, and/or multiple computers working together to provide the functionality described herein.
- the passage mining engine 116 and web server 120 might lack devices that are not required to operate them, such as displays 218, keyboards 210, and pointing devices 214.
- FIG. 3 is a high-level block diagram illustrating modules within the passage mining engine 116 according to one embodiment.
- an embodiment of the passage mining engine 116 identifies similar passages in the corpus 112, ranks them, and stores the passage information in the similar passage database 114. Some embodiments have different and/or additional modules than those shown in FIG. 3 .
- the passage mining engine 116 has only two modules, a searching module and a ranking module. The searching module searches and indexes the instances of quotations in the corpus 112 based on an existing quotation collection, and the ranking module ranks the quotations and the instances of the quotations.
- the functionalities can be distributed among the modules in a different manner than described here.
- a shingling module 302 generates a shingle table 500 for all the documents in the corpus 112.
- the term "shingle” refers to a group of adjacent words sequenced in the reading order of a text.
- word refers to a token containing a block of structured text. In one example, every word in the text is normalized.
- the shingling module 302 converts the alphabetic characters into lower case and tokenizes the text.
- the number of words in a shingle referred to as shingle size, can be any non-zero integer such as 4, 5, 12, etc. In one embodiment, 8-shingling is used, i.e. each shingle contains 8 words.
- Contiguous shingles are formed by moving one word in the reading order of the text, so that contiguous shingles have overlapping sets of words. For example, there are 5 contiguous shingles in the 7-shingling of the phrase "everybody on this planet is separated by only six other people", i.e., “everybody on this planet is separated by”, “on this planet is separated by only”, “this planet is separated by only six”, “planet is separated by only six other”, and “is separated by only six other people.”
- all the tokens for punctuation and stopwords are excluded from any shingle.
- Stopwords include words that are common and do not have meaning when considered individually, such as "the” and "of”.
- the 2-shingling of the text “After the big surge of Internet” includes 3 shingles, i.e., “after big”, “big surge”, and “surge internet” according to one example.
- the shingling module 302 For a pre-defined shingle size, the shingling module 302 generates a shingle table that specifies all the distinct shingles in the corpus 112, the documents in which the shingles are found, and the locations of the shingles within the documents.
- a sequencing module 304 uses the shingle table 500 to build sequences.
- a "sequence" is formed of one or more contiguous shingles that appear in a given document and at least one other document in the corpus 112. For example, “everybody on this planet is separated by only six” is a sequence made of 3 contiguous shingles, i.e., “everybody on this planet is separated by”, “on this planet is separated by only”, and "this planet is separated by only six”.
- distributed computing is used to compare shingles in each document with those in each other document in the corpus 112.
- the sequencing module 304 examines all the shingles in the document in sequence, and when it determines that another document has the same group of contiguous shingles, it forms a sequence that is shared between the given document and the other document.
- the document that is currently being examined is referred to as the "source document”
- the other document that shares the sequence is referred to as the "target document.”
- the sequencing module 304 examines it as a source document, identifies its target documents, and builds sequences it has in common with the target documents.
- a merging module 306 merges the sequences to identify similar passages in documents.
- the merging module 306 merges overlapping sequences from different target documents into a long sequence.
- Such a long merged sequence corresponds to a similar passage in the source document.
- the pre-merge overlapping sequences define portions of the similar passage that appear in various target documents.
- the similar passage defined by the long merged sequence is displayed in association with the source document. The portions of the similar passage defined by the pre-merge sequences are displayed with the target documents.
- a ranking module 308 ranks the similar passages identified in a given document. In one embodiment, it uses heuristics that consider both the length of a passage and its frequency of occurrence in other documents. The rankings are used for purposes including displaying the passages in an order and identifying a high-ranking subset of passages to display. Based on the ranking results, all or only a subgroup of the similar passages may be identified as "popular passages" in a given document.
- the target documents for a given "popular passage" are also ranked using heuristics that consider one or more other factors in addition to, or instead of, the factors described above. These other factors include the fraction of the passage that is repeated in the document, content relevance, popularity associated with user actions, publishing dates, etc.
- these ranking results can be used to decide which documents to display and the order in which they are displayed.
- FIG. 4 is a flow chart illustrating steps performed by the passage mining engine 116 to mine passages according to one embodiment. Other examples may perform the steps in different orders and/or perform different or additional steps than the ones shown in FIG. 4 . For example, in one example, shingling, sequencing, and merging may be replaced by starting with a collection of similar passages and applying an approximate search to find these passages within the digital text.corpus 112.
- the passage mining engine 116 generates 410 a shingle table 500 describing the occurrence information of shingles in the corpus 112.
- Each unique shingle is assigned an identifier referred to as its "shingle ID.”
- the passage mining engine 116 generates 410 a shingle table, referred to as "global shingle table" to describe all the distinct shingles in all of the documents in the corpus 112.
- the passage mining engine 116 generates 410 a shingle table, referred to as a "per-document shingle table", for each document that contains the occurrence information for the distinct shingles appearing in only that document.
- a shingle if a shingle appears in only one document, the shingle is excluded from any shingle table.
- Such a shingle defines a source gap in the document in which it appears.
- Other embodiments utilize combinations of the shingle tables described above.
- FIG. 5 illustrates a sample shingle table 500 generated by the passage mining engine 116 according to one embodiment.
- Each row of the shingle table has the occurrence information for a distinct shingle in the corpus 112.
- the leftmost column 512 of the table identifies the shingle by its shingle ID.
- the row extending rightward from column 512 identifies the documents in which the shingle appears by Doc IDs 514, 518, and the positions within the respective documents where the shingle is located by Pos IDs 516, 520.
- a row of the shingle table is referred to as a "shingle bucket" 522. If a shingle appears in only one document, there is no shingle bucket for that shingle.
- table 500 may be a global shingle table according to one embodiment, or may be a per-document shingle table according to another embodiment.
- FIG. 6 is a flow chart illustrating steps performed for building 412 sequences according to one embodiment.
- FIG. 7 is a flow chart illustrating steps performed for building 412 sequences according to another example. Other examples may perform sequencing steps in different orders and/or perform different or additional steps than the ones shown in FIGS. 6 and 7 .
- the passage mining engine 116 examines each shingle of the source document in sequence.
- the engine 116 identifies 610 the next shingle and uses the shingle table 500 to determine 612 whether the shingle defines a source gap. If the shingle defines a source gap, the engine 116 saves 614 the working set of sequences. If the shingle does not define a source, i.e., there are target documents sharing the shingle, the engine 116 identifies 616 the next target document, and further determines whether 618 there is a sequence where the identified shingle immediately follows the last shingle of the sequence in the identified target document.
- the passage mining engine 116 extends 620 the sequence to include the identified shingle. If there is not such a sequence, the engine 116 starts 622 a new sequence with the identified shingle. The process is performed for all target documents 624 sharing the identified shingle and then for all other shingles 626 in the source document. When all the shingles have been examined, the passage mining engine 116 saves 628 the last working set of sequences, if the last shingle does not define a source gap, i.e., the working set of sequences is not saved.
- the passage mining engine 116 uses the shingle buckets 522 to perform sequencing 412.
- a per-document shingle table 500 is constructed by placing rows of shingle buckets in an order corresponding to their appearing sequence in a source document, and the shingles in the source document are examined in sequence.
- the mining engine 116 begins by retrieving 710 the next shingle bucket from the shingle table 500. It first determines whether the shingle bucket does not indicate a source gap 712 and whether there are any sequences in an active sequence list 714.
- the engine 116 uses the list to identify the next active sequence, and then determines the target position, T p , that immediately follows the last shingle of the identified sequence in the target document associated with the sequence 716.
- the passage mining engine 116 searches the shingle bucket to decide whether T p is present in the bucket 718. If T p is in the bucket, the engine 116 extends the identified active sequence and removes T p from the bucket 720. If T p is not in the bucket, the engine 116 removes the identified sequence from the active sequence list 722, saves the identified sequence, and considers the next sequence in the active sequence list 724.
- the passage mining engine 116 After all sequences in the active sequence list are examined 724, or when there is no sequence in the active sequence list 714, the passage mining engine 116 starts a new sequence for each remaining target position in the shingle bucket, and adds the newly created sequence to the active sequence list 726. If the shingle bucket indicates a source gap at step 712, the engine 116 saves the active sequences and clears the active sequence list 728. Then, the engine 116 starts a new sequence for each target position in the bucket and adds the newly created sequence to the active sequence list 726. If the shingle bucket does not indicate a source gap, processing continues to step 714. The process next retrieves the remaining shingle bucket, if there is any. When there is no more shingle bucket left in the shingle table, the passage mining engine 116 saves the active sequences 732 and the sequencing 412 is done 734.
- FIG. 8 illustrates a sample workspace 800 for sequencing 412 and sequence merging 414 according to one example
- a source document SD i At the top of the workspace 800 are ten consecutive shingles 810, SD i_ S1 to SD i_ S10, from a source document SD i .
- SD i_ S5 and SD i_ S6 define source gaps 812 since these shingles appear in only document SD i .
- Two groups of sequences, group A 814 and group B 816 are also shown in the workspace 800, and are separated by the source gaps 812.
- Each group, 814, 816 includes multiple sequences, and each sequence is associated with a target document.
- sequence 818 is associated with target document TB j .
- the same target document may be related to more than one sequence, for example, in group A 814, TB h corresponds to two sequences, 820 and 824, both of which it shares with SD i .
- group A 814 is used as an illustration to demonstrate how sequencing 412 and grouping is performed according to one example.
- the passage mining engine 116 finds target documents TB j and TB h having the same shingle, and it starts two new sequences, 818 and 820, for TB j and TB h , respectively. Since both TB j and TB h also have the next shingle, SD i_ S2, and the shingle's positions, P j+1 and P h+1 , are adjacent to those of the previous shingle, P j and P h , respectively, the passage mining engine 116 extends both sequences 818 and 820.
- the passage mining engine 116 steps to shingle SD i_ S3. It finds that target documents TB j and TB n have the shingle. In TB j , the current position, P j+2 , is adjacent to that of SD i_ S2, i.e., P j+1 , so existing sequence 818 is extended. In the case of TB n , since it does not have previous shingle SD i_ S2, the passage mining engine 116 starts a new sequence 822 for TB n .
- the passage mining engine 116 analyzes the groups for each document and merges 414 sequences within the groups to define similar passages.
- sequence merging 414 There are different ways to implement sequence merging 414.
- all the overlapping sequences in a group are merged with each other to form at least one long sequence.
- the longest sequence in a group is first identified, and all the shorter sequences that overlap with the longest sequence are merged into the sequence.
- each group generates at least one long sequence that defines a similar passage in the source document, at least a portion of which is shared with target documents.
- the sequences are considered in order of position, starting with the sequence at the earliest position in the source document.
- sequences from adjacent groups are merged.
- sequences from different groups might be merged if they are very close and/or there is evidence that they are related but separated due to things like OCR errors, minor textual variations, etc.
- the sample workspace 800 is used in the following description to illustrate how sequence merging 414 is performed according to one example
- the passage mining engine 116 first identifies the longest sequence 818 starting at the earliest position, and then merges other shorter, overlapping sequences, 820, 822, and 824, into the sequence 818 to form sequence 832.
- the passage mining engine 116 merges sequences 826 and 830 into the earliest sequence 828 to form a long sequence 834.
- Sequences 832 and 834 define similar passages in document SD i , which or a portion of which also appears in target documents such as TB j and TB h .
- the pre-merge sequences such as 820, 822 and 824 define the portions of the similar passages that are shared by different target documents, which can be displayed at respective target documents such as TB h and TB n .
- a sequence must be longer than a given length, for example, 12 words, to be merged with other sequences. Those sequences that are shorter than the given length may represent common phrases and colloquialisms. Such short sequences are discarded before any merging process takes place.
- a shorter sequence must overlap with a long sequence by at least a certain number of words, for example, two words, in order to be merged into the long sequence.
- the sequences can be merged across groups if the source gap is smaller than a certain number of words, for example, three words.
- the passage mining engine 116 ranks 416 the passages.
- An embodiments of the passage mining engine 116 uses heuristics that consider both passage length and occurrence frequency to identify the most "interesting" passages in a source document. Other factors such as language quality, coherence, content relevance, etc. may also be included in the heuristics.
- Each passage is given a score based on the same metric. The passages having higher scores are ranked higher. In one example, the passages whose scores are higher than a pre-defined number are selected to be displayed as a list of popular passages, and the passages are displayed in the order of their scores with the highest-scored passage being displayed on the top of the list.
- the top N (a pre-defined integer) highest-scored passages are selected to be displayed.
- a combination of these techniques is used to select passages, i.e., select all the passages that score higher than a pre-defined number, but never select more than N passages.
- FIG. 9 illustrates a sample web page 900 generated by the web server 120 and presenting information about the book "Six Degrees of Separation.”
- this web page 900 is generated by the User Interface module 124.
- the page 900 is separated into several regions.
- a title region 910 displays the title and author of the book.
- a summary region 912 displays summary information for the book including an image 914 of the book cover and an "About this Book" link 916. Users can click on the link 916 to obtain more information about the book, for example, a summary of the content, key words and phrases, publishing year and publisher.
- a passage presentation region 918 shows the highest ranked passages in the book. These passages are selected based on the results of the passage ranking 416 in order to limit the number of passages shown at once and thereby increase the comprehension and utility of the passage presentation. In the sample web page 900, the passage presentation region 918 shows three of the highest ranked passages in the book.
- a passage subregion 920 displays the passage 922, page number 924 with a link to the page where the passage appears in the book, and popularity information 926 with a link to other documents in which the passage appears.
- a user can click on the page number link 924 and view the context of the passage shown in a text region 928. This allows the user to jump to different sections of the book to read the most popular passages and their context.
- a user can also click on the popularity information link 926, and the current browser window will allow the user to navigate to the other documents and the specific pages that share the passage. Other options such as opening a new browser window for displaying information related to other documents are used in some examples
- FIG. 10 illustrates a sample web page 1000 that is generated by the web server 120 when a user clicks on the popularity link 926 in FIG. 9 .
- this web page 1000 is generated by the User Interface module 124.
- the page 1000 is separated into several regions.
- a source region 1100 displays information about the book “Six Degrees of Separation.”
- a target region 1200 displays information about other documents that share the passage "I read somewhere that everybody on this planet is separated by only six people."
- the target region 1200 is further divided into sub-regions 1300, each of which presents information about one of the other documents, for example, the book "Six Degrees: the science of a connected age.”
- the source region 1100 displays the popular passage 1102 as it appears in the source book, a link 1104 to the page of the source book where the passage appears, author/publishing year information 1106, and an "About this book" link 1108. Users can click on the link 1108 to obtain more information about the source book.
- the target sub-region 1300 displays information for a given target document including, an image 1302 of the document cover, a link 1304 to the page of the target document where the passage appears, information about the author/publishing year/total page number 1306, the context 1308 of the passage in the target document, a "Table of Contents" link 1310, and an “About this book” link 1312. Users can click on link 1310 to obtain the table of contents for the target document, and click on link 1312 to get more information about the document.
- a link structure based upon popular passages enables a user to browse documents by related concepts in a manner similar to how one navigates the web. It also provides guidance when a user wants to only skim the most interesting parts of a book before deciding whether to read it.
Description
- This invention pertains in general to data mining a large corpus of text and in particular to identifying and navigating similar passages in a digital text corpus.
- Advancement in digital technology has changed the way people acquire information. For example, people now can view electronic documents that are stored in a predominantly text corpus such as a digital library that is accessible via the Internet. Such a digital text corpus is established, for example, by scanning paper copies of documents including books and newspapers, and then applying an optical character recognition (OCR) process to produce computer-readable text from the scans. The corpus can also be established by receiving documents and other texts already in machine-readable form.
- Unlike in a hypertext corpus, a document in a digital text corpus rarely contains functional links to other documents either in the same corpus or in other corpora. Moreover, mining references from the text of documents in a digital text corpus to support general link-based browsing is a difficult task. Functional hypertext references such as URLs are rare. Citations and other forms of inline references are also seldom used outside of scholarly and professional works.
- This lack of a link structure makes it difficult to browse documents in the corpus in the same manner that one might browse a set of web pages on the Internet. As a result, browsing the documents in the corpus can be less stimulating than traditional web browsing because one can not browse by related concept or by other characteristics.
US 6 119 124 A (BRODER ANDREI et al), published on 12 September 2000 (200-09-12) describes a computer-implemented method of identifying similar passages in a plurality of text documents stored in a corpus, employing statistical methods rather than shingle position to determine similarity. Depending on shingle size and other factors, this method can find documents to be similar that in fact are not similar at all, see column 6, lines 20-29. - The above and other difficulties are addressed by a computer-implemented method, computer program product, and computer system that identifies similar passages in a plurality of documents stored in a corpus. Embodiments of the method, product, and system build a shingle table describing shingles found in the corpus, the one or more documents in which the shingles appear, and locations in the documents where the shingles occur. In addition, the method, product, and system identify a sequence of multiple contiguous shingles that appears in a source document in the corpus and in at least one other document in the corpus and generate a similar passage in the source document based at least in part on the sequence of multiple contiguous shingles. The method, product, and system also store data describing the similar passage.
- Another embodiment of the computer program product comprises program code including a user interface module configured to display a passage presentation region displaying a ranked list of similar passages found in a source document stored in a corpus, the similar passages in the list also found in one or more other documents stored in the corpus and provide a hypertext link in association with a similar passage in the list that, upon selection, enables navigation to another document in the corpus in which the similar passage is found.
- Another embodiment of the method comprises identifying a group of words found in a source document in the corpus and identifying one or more target documents in the corpus that also contain the group of words. The method generates a similar passage in the source document based at least in part on the group of words found in the source document and in the one or more target documents and stores data describing the similar passage.
- Yet another embodiment of the method comprises identifying a group of words found in a source document in the corpus and identifying one or more target documents in the corpus that also contain the group of words. The method also generates a similar passage in the source document based at least in part on the group of words found in the source document and in the one or more target documents and creates a link structure including one or more links associating the similar passage in the source document with the group of words contained in the one or more target documents. The method further stores data describing the link structure.
-
FIG. 1 shows an environment adapted to support passage mining. -
FIG. 2 is a high-level block diagram illustrating a functional view of a typical computer for use as one of the entities illustrated in the environment ofFIG. 1 . -
FIG. 3 is a high-level block diagram illustrating modules within the passage mining engine. -
FIG. 4 is a flow chart illustrating steps performed by the passage mining engine to mine passages according to one embodiment. -
FIG. 5 illustrates a sample shingle table generated by the shingling module according to one embodiment. -
FIG. 6 is a flow chart illustrating steps performed for building sequences according to one embodiment. -
FIG. 7 is a flow chart illustrating steps performed for building sequences. -
FIG. 8 illustrates a sample workspace for sequencing and sequence merging. -
FIG. 9 illustrates a sample web page presenting information about the book "Six Degrees of Separation." -
FIG. 10 illustrates a sample web page presenting information about other books sharing a passage with the book "Six Degrees of Separation."[0100] The figures depict an embodiment of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the scope of the invention described herein. -
FIG. 1 shows anenvironment 100 adapted to support identifying and navigating similar passages of text in adigital text corpus 112 according to one example. Theenvironment 100 includes adata store 110 for storing thecorpus 112 and asimilar passage database 114, and apassage mining engine 116 for identifying similar passages in the corpus. The environment also includes aclient 118 for requesting and/or viewing information from thedata store 110, and aweb server 120 for interacting with the client and providing interfaces allowing the client to access the information in the data store. Anetwork 122 enables communications between and among thedata store 110,passage mining engine 116,client 118, andweb server 120. - Not all the entities shown in
FIG. 1 are required to be connected to thenetwork 122 at the same time for the functionalities described herein to be realized. In one examplepassage mining engine 116 is connected to thenetwork 122 periodically. When it is online, themining engine 116 only needs to communicate with thedata store 110 in order to identify similar passages in thecorpus 112 and store the passage data in thepassage database 114. Thepassage mining engine 116 does not need to interact with theclient 118 or theweb server 120 according to one example. Once identifying similar passages is finished, thepassage mining engine 116 may be off-line, and theweb server 120 supports passage navigating by interacting with theclient 118 and thedata store 110 to retrieve information from the data store that is requested by the client. Moreover, different examples of theenvironment 100 include different and/or additional entities than the ones shown inFIG. 1 , and the entities are organized in a different manner. - The
data store 110 stores thecorpus 112 of information and thesimilar passage database 114. It also stores data utilized to support the functionalities or generated by the functionalities described herein. Thedata store 110 can also store one or more other corpora and data. Thedata store 110 receives requests for information stored in it and provides the information in return. In a typical example thedata store 110 is comprised of multiple computers and/or storage devices configured to collectively store a large amount of information. - The
corpus 112 stores a set of information. In one embodiment, thecorpus 112 stores the contents of a large number of digital documents. As used herein, the term "document" refers to a written work or composition. This definition includes, for example, conventional books such as published novels, and collections of text such as newspapers, magazines, journals, pamphlets, letters, articles, web pages and other electronic documents. The document contents stored by thecorpus 112 include, for example, the document text represented in a computer-readable format, images from the documents, scanned images of pages from the documents, etc. In one example, each document in thecorpus 112 is assigned a unique identifier referred to as its "Doc ID", and each word in the document is assigned a unique identifier that describes its position in the document and is referred to as its "Pos ID." As used herein, the term "word" refers to a token containing a block of structured text. The word does not necessarily have meaning in any language, although it will have meaning in most cases. - In addition, the
corpus 112 stores metadata about the documents within it. The metadata are structured data that describe the documents. Examples of metadata include metadata about a book such as the author, publisher, year published, number of pages, and edition. - The
similar passage database 114 stores data describing similar passages in thecorpus 112. In one example, thepassage database 114 is generated by thepassage mining engine 116 to store information obtained from passage mining. In some example, thepassage mining engine 116 constructs thepassage database 114 by copying existing quotation collections such as Bartlett's, and searching and indexing the instances of quotations and their variations that appear in thecorpus 112. In some examples, thepassage mining engine 116 constructs thepassage database 114 by copying existing text appearing in a quoted form, such as delimited by quotation marks, from the corpus, and searching and indexing the instances of phrases in thecorpus 112. Further, in some examples thepassage mining engine 116 constructs thepassage database 114 by copying each group of words, such as sentences, from the corpus, and searching and indexing the instances of the group of words in thecorpus 112. In one example, thedatabase 114 stores similar passages, Doc IDs of the documents in which the passages exist, Pos IDs within the documents at which the passages appear, passage ranking results, etc. Further, in some examples, thedatabase 114 also stores the documents or portions of the documents that have the similar passages. - The
passage mining engine 116 includes one or more computers adapted to analyze the texts of documents in thecorpus 112 in order to identify similar passages. As used herein, the phrase "similar passage" refers to a passage in a source document that is found in a similar form in one or more different target documents. Oftentimes, the passages in the target documents are identical to the passage in the source document. Nevertheless, the passages are referred to as "similar" because there might be slight differences among the passages in the different documents. When a source document is said to have multiple "similar passages," it means that multiple passages in the source document are also found in target documents. This phrase does not necessarily mean that the "similar passages" within the source document are similar to each other. - The
passage mining engine 116 also ranks multiple similar passages found in one document, and stores these passage data in thesimilar passage database 114. For example, thepassage mining engine 116 may find that the passage "I read somewhere that everybody on this planet is separated by only six other people" from the book "Six Degrees of Separation" by John Guare, also appears in 13 other books published between 2000 and 2006. Thepassage mining engine 116 may store, in thesimilar passage database 114, the passage, its location in the book, Doc IDs of the 13 other books, its location in the 13 books, and its ranking relative to other passages in the book. - Passage mining may be performed off-line, asynchronously of any queries made by
client 118 against thedata store 110. In one example, thepassage mining engine 116 runs periodically to process all the text information in thecorpus 112 from scratch and generate similar passage data for storing in thesimilar passage database 114, disregarding any information obtained from prior passage mining. In another example, thepassage mining engine 116 is used periodically to incrementally update the data stored in thesimilar passage database 114, for example, as new documents are added to thecorpus 112. - In one example, the
client 118 is an electronic device having a web browser for interacting with theweb server 120 via thenetwork 122, and it is used by a human user to access and obtain information from thedata store 110. It can be, for example, a notebook, desktop, or handheld computer, a mobile telephone, personal digital assistant (PDA), mobile email device, portable game player, portable music player, computer integrated into a vehicle, etc. - The
web server 120 interacts with theclient 118 to provide information from thedata store 110. In one example, theweb server 120 includes a User Interface (UI)module 124 that communicates with the client's 118 web browser to receive and present information. Theweb server 120 also includes a searchingmodule 126 that searches for information in thedata store 110. For example, theUI module 124 may receive a document query from the web browser issued by a user of theclient 118, and the searchingmodule 126 may execute the query against thecorpus 112 and thesimilar passage database 114, and retrieve information including similar passages information that satisfies the query. TheUI module 124 then interacts with the web browser on theclient 118 to present the retrieved information in hypertext. In one embodiment, hyperlinks are provided to allow the user of theclient 118 to navigate to the portions of a document that contains similar passages, or to browse other documents that share the similar passages, much like the way traditional web-browsing is conducted. - The
network 122 represents communication pathways between thedata store 110,passage mining engine 116,client 118, andweb server 120. In one example, thenetwork 122 is the Internet. Thenetwork 122 can also utilize dedicated or private communications links that are not necessarily part of the Internet. In one example, thenetwork 122 uses standard communications technologies, protocols, and/or interprocess communications techniques. Thus, thenetwork 122 can include links using technologies such as Ethernet, 802.11, integrated services digital network (ISDN), digital subscriber line (DSL), asynchronous transfer mode (ATM), etc. Similarly, the networking protocols used on thenetwork 122 can include the transmission control protocol/Internet protocol (TCP/IP), the hypertext transport protocol (HTTP), the simple mail transfer protocol (SMTP), the file transfer protocol (FTP), the short message service (SMS) protocol, etc. The data exchanged over thenetwork 122 can be represented using technologies and/or formats including the hypertext markup language (HTML), the extensible markup language (XML), etc. In addition, all or some of links can be encrypted using conventional encryption technologies such as the secure sockets layer (SSL), HTTP over SSL (HTTPS), and/or virtual private networks (VPNs). In another example, the nodes can use custom and/or dedicated data communications technologies instead of, or in addition to, the ones described above. -
FIG. 2 is a high-level block diagram illustrating a functional view of atypical computer 200 for use as one or more of the entities illustrated in theenvironment 100 ofFIG. 1 according to one example. Illustrated are at least oneprocessor 202 coupled to abus 204. Also coupled to thebus 204 are amemory 206, astorage device 208, akeyboard 210, agraphics adapter 212, apointing device 214, and anetwork adapter 216. Adisplay 218 is coupled to thegraphics adapter 212. - The
processor 202 may be any general-purpose processor such as an INTEL x86 compatible-CPU. Thestorage device 208 is, in one example, a hard disk drive but can also be any other device capable of storing data, such as a writeable compact disk (CD) or DVD, or a solid-state memory device. Thememory 206 may be, for example, firmware, read-only memory (ROM), non-volatile random access memory (NVRAM), and/or RAM, and holds instructions and data used by theprocessor 202. Thepointing device 214 may be a mouse, track ball, or other type of pointing device, and is used in combination with thekeyboard 210 to input data into thecomputer system 200. Thegraphics adapter 212 displays images and other information on thedisplay 218. Thenetwork adapter 216 couples thecomputer system 200 to thenetwork 122. - As is known in the art, the
computer 200 is adapted to execute computer program modules. As used herein, the term "module" refers to computer program logic and/or data for providing the specified functionality. A module can be implemented in hardware, firmware, and/or software. In one example, the modules are stored on thestorage device 208, loaded into thememory 206, and executed by theprocessor 202 as one or more processes. - The types of computers used by the entities of
FIG. 1 can vary depending upon the embodiment and the processing power utilized by the entity. For example, theclient 118 typically requires less processing power than thepassage mining engine 116 andweb server 120. Thus, theclient 118 system can be a standard personal computer or a mobile telephone. Thepassage mining engine 116 andweb server 120, in contrast, may comprise processes executing on more powerful computers, logical processing units, and/or multiple computers working together to provide the functionality described herein. Further, thepassage mining engine 116 andweb server 120 might lack devices that are not required to operate them, such asdisplays 218,keyboards 210, and pointingdevices 214. -
FIG. 3 is a high-level block diagram illustrating modules within thepassage mining engine 116 according to one embodiment. As mentioned above, an embodiment of thepassage mining engine 116 identifies similar passages in thecorpus 112, ranks them, and stores the passage information in thesimilar passage database 114. Some embodiments have different and/or additional modules than those shown inFIG. 3 . For example, according to one embodiment, thepassage mining engine 116 has only two modules, a searching module and a ranking module. The searching module searches and indexes the instances of quotations in thecorpus 112 based on an existing quotation collection, and the ranking module ranks the quotations and the instances of the quotations. Moreover, the functionalities can be distributed among the modules in a different manner than described here. - A
shingling module 302 generates a shingle table 500 for all the documents in thecorpus 112. As used herein, the term "shingle" refers to a group of adjacent words sequenced in the reading order of a text. As described above, the term "word" refers to a token containing a block of structured text. In one example, every word in the text is normalized. For example, theshingling module 302 converts the alphabetic characters into lower case and tokenizes the text. The number of words in a shingle, referred to as shingle size, can be any non-zero integer such as 4, 5, 12, etc. In one embodiment, 8-shingling is used, i.e. each shingle contains 8 words. Contiguous shingles are formed by moving one word in the reading order of the text, so that contiguous shingles have overlapping sets of words. For example, there are 5 contiguous shingles in the 7-shingling of the phrase "everybody on this planet is separated by only six other people", i.e., "everybody on this planet is separated by", "on this planet is separated by only", "this planet is separated by only six", "planet is separated by only six other", and "is separated by only six other people." - In one example, all the tokens for punctuation and stopwords are excluded from any shingle. Stopwords include words that are common and do not have meaning when considered individually, such as "the" and "of". For example, the 2-shingling of the text "After the big surge of Internet" includes 3 shingles, i.e., "after big", "big surge", and "surge internet" according to one example. For a pre-defined shingle size, the
shingling module 302 generates a shingle table that specifies all the distinct shingles in thecorpus 112, the documents in which the shingles are found, and the locations of the shingles within the documents. - A
sequencing module 304 uses the shingle table 500 to build sequences. A "sequence" is formed of one or more contiguous shingles that appear in a given document and at least one other document in thecorpus 112. For example, "everybody on this planet is separated by only six" is a sequence made of 3 contiguous shingles, i.e., "everybody on this planet is separated by", "on this planet is separated by only", and "this planet is separated by only six". In one example, distributed computing is used to compare shingles in each document with those in each other document in thecorpus 112. For a given document, thesequencing module 304 examines all the shingles in the document in sequence, and when it determines that another document has the same group of contiguous shingles, it forms a sequence that is shared between the given document and the other document. In one embodiment, the document that is currently being examined is referred to as the "source document", and the other document that shares the sequence is referred to as the "target document." For each and every document in thecorpus 112, thesequencing module 304 examines it as a source document, identifies its target documents, and builds sequences it has in common with the target documents. - A merging
module 306 merges the sequences to identify similar passages in documents. In one embodiment, for each document in thecorpus 112, the mergingmodule 306 merges overlapping sequences from different target documents into a long sequence. Such a long merged sequence corresponds to a similar passage in the source document. Similarly, the pre-merge overlapping sequences define portions of the similar passage that appear in various target documents. In one embodiment, the similar passage defined by the long merged sequence is displayed in association with the source document. The portions of the similar passage defined by the pre-merge sequences are displayed with the target documents. - A
ranking module 308 ranks the similar passages identified in a given document. In one embodiment, it uses heuristics that consider both the length of a passage and its frequency of occurrence in other documents. The rankings are used for purposes including displaying the passages in an order and identifying a high-ranking subset of passages to display. Based on the ranking results, all or only a subgroup of the similar passages may be identified as "popular passages" in a given document. - In one example, the target documents for a given "popular passage" are also ranked using heuristics that consider one or more other factors in addition to, or instead of, the factors described above. These other factors include the fraction of the passage that is repeated in the document, content relevance, popularity associated with user actions, publishing dates, etc. When a user at
client 118 requests to view more information about the target documents, these ranking results can be used to decide which documents to display and the order in which they are displayed. -
FIG. 4 is a flow chart illustrating steps performed by thepassage mining engine 116 to mine passages according to one embodiment. Other examples may perform the steps in different orders and/or perform different or additional steps than the ones shown inFIG. 4 . For example, in one example, shingling, sequencing, and merging may be replaced by starting with a collection of similar passages and applying an approximate search to find these passages within thedigital text.corpus 112. - As shown in
FIG. 4 , thepassage mining engine 116 generates 410 a shingle table 500 describing the occurrence information of shingles in thecorpus 112. Each unique shingle is assigned an identifier referred to as its "shingle ID." For each shingle, all the documents that contain the shingle are identified, and the positions at which the shingle appears in the documents are recorded. In one embodiment, thepassage mining engine 116 generates 410 a shingle table, referred to as "global shingle table" to describe all the distinct shingles in all of the documents in thecorpus 112. In some embodiments, thepassage mining engine 116 generates 410 a shingle table, referred to as a "per-document shingle table", for each document that contains the occurrence information for the distinct shingles appearing in only that document. In other embodiments, if a shingle appears in only one document, the shingle is excluded from any shingle table. Such a shingle defines a source gap in the document in which it appears. Other embodiments utilize combinations of the shingle tables described above. -
FIG. 5 illustrates a sample shingle table 500 generated by thepassage mining engine 116 according to one embodiment. Each row of the shingle table has the occurrence information for a distinct shingle in thecorpus 112. Theleftmost column 512 of the table identifies the shingle by its shingle ID. The row extending rightward fromcolumn 512 identifies the documents in which the shingle appears byDoc IDs Pos IDs - Next, the
passage mining engine 116 uses the shingle table 500 to build 412 sequences for each document in thecorpus 112. Sequencing 412 may be implemented in different ways.FIG. 6 is a flow chart illustrating steps performed for building 412 sequences according to one embodiment.FIG. 7 is a flow chart illustrating steps performed for building 412 sequences according to another example. Other examples may perform sequencing steps in different orders and/or perform different or additional steps than the ones shown inFIGS. 6 and7 . - Referring to
FIG. 6 , thepassage mining engine 116 examines each shingle of the source document in sequence. Theengine 116 identifies 610 the next shingle and uses the shingle table 500 to determine 612 whether the shingle defines a source gap. If the shingle defines a source gap, theengine 116 saves 614 the working set of sequences. If the shingle does not define a source, i.e., there are target documents sharing the shingle, theengine 116 identifies 616 the next target document, and further determines whether 618 there is a sequence where the identified shingle immediately follows the last shingle of the sequence in the identified target document. If there is such a sequence, thepassage mining engine 116 extends 620 the sequence to include the identified shingle. If there is not such a sequence, theengine 116 starts 622 a new sequence with the identified shingle. The process is performed for alltarget documents 624 sharing the identified shingle and then for allother shingles 626 in the source document. When all the shingles have been examined, thepassage mining engine 116 saves 628 the last working set of sequences, if the last shingle does not define a source gap, i.e., the working set of sequences is not saved. - In another example the
passage mining engine 116 uses theshingle buckets 522 to performsequencing 412. A per-document shingle table 500 is constructed by placing rows of shingle buckets in an order corresponding to their appearing sequence in a source document, and the shingles in the source document are examined in sequence. As illustrated inFIG. 7 , themining engine 116 begins by retrieving 710 the next shingle bucket from the shingle table 500. It first determines whether the shingle bucket does not indicate asource gap 712 and whether there are any sequences in anactive sequence list 714. If both determinations are positive, theengine 116 uses the list to identify the next active sequence, and then determines the target position, Tp, that immediately follows the last shingle of the identified sequence in the target document associated with thesequence 716. Thepassage mining engine 116 then searches the shingle bucket to decide whether Tp is present in thebucket 718. If Tp is in the bucket, theengine 116 extends the identified active sequence and removes Tp from thebucket 720. If Tp is not in the bucket, theengine 116 removes the identified sequence from theactive sequence list 722, saves the identified sequence, and considers the next sequence in theactive sequence list 724. After all sequences in the active sequence list are examined 724, or when there is no sequence in theactive sequence list 714, thepassage mining engine 116 starts a new sequence for each remaining target position in the shingle bucket, and adds the newly created sequence to theactive sequence list 726. If the shingle bucket indicates a source gap atstep 712, theengine 116 saves the active sequences and clears theactive sequence list 728. Then, theengine 116 starts a new sequence for each target position in the bucket and adds the newly created sequence to theactive sequence list 726. If the shingle bucket does not indicate a source gap, processing continues to step 714. The process next retrieves the remaining shingle bucket, if there is any. When there is no more shingle bucket left in the shingle table, thepassage mining engine 116 saves theactive sequences 732 and thesequencing 412 is done 734. -
FIG. 8 illustrates asample workspace 800 for sequencing 412 and sequence merging 414 according to one example At the top of theworkspace 800 are tenconsecutive shingles 810, SDi_S1 to SDi_S10, from a source document SDi. Among them, SDi_S5 and SDi_S6 definesource gaps 812 since these shingles appear in only document SDi. Two groups of sequences,group A 814 andgroup B 816, are also shown in theworkspace 800, and are separated by thesource gaps 812. Each group, 814, 816, includes multiple sequences, and each sequence is associated with a target document. For example,sequence 818 is associated with target document TBj. The same target document may be related to more than one sequence, for example, ingroup A 814, TBh corresponds to two sequences, 820 and 824, both of which it shares with SDi. - In the following description,
group A 814 is used as an illustration to demonstrate howsequencing 412 and grouping is performed according to one example. Starting with the first shingle, SDi_S1, thepassage mining engine 116 finds target documents TBj and TBh having the same shingle, and it starts two new sequences, 818 and 820, for TBj and TBh, respectively. Since both TBj and TBh also have the next shingle, SDi_S2, and the shingle's positions, Pj+1 and Ph+1, are adjacent to those of the previous shingle, Pj and Ph, respectively, thepassage mining engine 116 extends bothsequences - Next the
passage mining engine 116 steps to shingle SDi_S3. It finds that target documents TBj and TBn have the shingle. In TBj, the current position, Pj+2, is adjacent to that of SDi_S2, i.e., Pj+1, so existingsequence 818 is extended. In the case of TBn, since it does not have previous shingle SDi_S2, thepassage mining engine 116 starts anew sequence 822 for TBn. - The same process occurs for shingle SDi_S4, and existing
sequence 818 is further extended andnew sequence 824 is created. At last thepassage mining engine 116 reaches SDi_S5 and determines that this shingle defines a source gap. Accordingly, it saves the working set of sequences, i.e., 818, 820, 822 and 824, and this working set definesgroup A 814. Other groups includinggroup B 816 may be constructed and processed similarly. Thus, at the end of thesequence building step 412, zero or more sequences are generated. In one embodiment, the sequences fall into groups with borders defined by source gaps. Although this description uses the term "group" to refer to a collection of sequences within borders defined by the source gaps, some examples do not organize the sequences into explicit groups. Rather, the groups are implicitly defined by the source gaps. - Once the groups are defined, the
passage mining engine 116 analyzes the groups for each document and merges 414 sequences within the groups to define similar passages. There are different ways to implement sequence merging 414. In one example, all the overlapping sequences in a group are merged with each other to form at least one long sequence. In another example, the longest sequence in a group is first identified, and all the shorter sequences that overlap with the longest sequence are merged into the sequence. As a result, each group generates at least one long sequence that defines a similar passage in the source document, at least a portion of which is shared with target documents. In still another example the sequences are considered in order of position, starting with the sequence at the earliest position in the source document. If there are multiple sequences at that position, the longest sequence is selected and all shingles that overlap with the selected sequence are merged. Then, the next sequence in position order that has not yet been merged is considered and the merging process repeats. In some example, sequences from adjacent groups are merged. For example, sequences from different groups might be merged if they are very close and/or there is evidence that they are related but separated due to things like OCR errors, minor textual variations, etc. - Referring back to
FIG. 8 , thesample workspace 800 is used in the following description to illustrate how sequence merging 414 is performed according to one example In the case ofgroup A 814, thepassage mining engine 116 first identifies thelongest sequence 818 starting at the earliest position, and then merges other shorter, overlapping sequences, 820, 822, and 824, into thesequence 818 to formsequence 832. Similarly forgroup B 816, thepassage mining engine 116 mergessequences earliest sequence 828 to form along sequence 834.Sequences - In one example, a sequence must be longer than a given length, for example, 12 words, to be merged with other sequences. Those sequences that are shorter than the given length may represent common phrases and colloquialisms. Such short sequences are discarded before any merging process takes place. In another example, a shorter sequence must overlap with a long sequence by at least a certain number of words, for example, two words, in order to be merged into the long sequence. In yet another example the sequences can be merged across groups if the source gap is smaller than a certain number of words, for example, three words.
- In one embodiment, the
passage mining engine 116 ranks 416 the passages. An embodiments of thepassage mining engine 116 uses heuristics that consider both passage length and occurrence frequency to identify the most "interesting" passages in a source document. Other factors such as language quality, coherence, content relevance, etc. may also be included in the heuristics. Each passage is given a score based on the same metric. The passages having higher scores are ranked higher. In one example, the passages whose scores are higher than a pre-defined number are selected to be displayed as a list of popular passages, and the passages are displayed in the order of their scores with the highest-scored passage being displayed on the top of the list. In another example, the top N (a pre-defined integer) highest-scored passages are selected to be displayed. In yet another example, a combination of these techniques is used to select passages, i.e., select all the passages that score higher than a pre-defined number, but never select more than N passages. - In one example, the metric uses a weighted geometric mean of a passage length score, LS(length), and a passage frequency score, FS(frequency), i.e., score = power(LS(length), LW) * power(FS(frequency), FW), where the coefficients LW and FW are the weights given to the length score and the frequency score, respectively, "power(x, y)" is a function returning x to the power of y, and LW + FW = 1. According to one example, LW = 0.7 and FW = 0.3, although other embodiments use different weights. Since short frequent passages are often common phrases and long infrequent passages are often collections and editions, in some example different formula are implemented for the length and frequency scoring functions. These functions exclude from the ranking those passages that are either very short or very long, and either too frequent or too infrequent. For example, passages are ranked only if they have more than 10 and less than 100 words with a frequency between 1 and 1000, according to one example
-
FIG. 9 illustrates asample web page 900 generated by theweb server 120 and presenting information about the book "Six Degrees of Separation." In one example thisweb page 900 is generated by theUser Interface module 124. Thepage 900 is separated into several regions. Atitle region 910 displays the title and author of the book. Asummary region 912 displays summary information for the book including animage 914 of the book cover and an "About this Book"link 916. Users can click on thelink 916 to obtain more information about the book, for example, a summary of the content, key words and phrases, publishing year and publisher. - A
passage presentation region 918 shows the highest ranked passages in the book. These passages are selected based on the results of the passage ranking 416 in order to limit the number of passages shown at once and thereby increase the comprehension and utility of the passage presentation. In thesample web page 900, thepassage presentation region 918 shows three of the highest ranked passages in the book. - For each passage, a
passage subregion 920 displays thepassage 922, page number 924 with a link to the page where the passage appears in the book, andpopularity information 926 with a link to other documents in which the passage appears. A user can click on the page number link 924 and view the context of the passage shown in atext region 928. This allows the user to jump to different sections of the book to read the most popular passages and their context. A user can also click on thepopularity information link 926, and the current browser window will allow the user to navigate to the other documents and the specific pages that share the passage. Other options such as opening a new browser window for displaying information related to other documents are used in some examples -
FIG. 10 illustrates asample web page 1000 that is generated by theweb server 120 when a user clicks on thepopularity link 926 inFIG. 9 . In one example, thisweb page 1000 is generated by theUser Interface module 124. Thepage 1000 is separated into several regions. A source region 1100 displays information about the book "Six Degrees of Separation." Atarget region 1200 displays information about other documents that share the passage "I read somewhere that everybody on this planet is separated by only six people...." Thetarget region 1200 is further divided intosub-regions 1300, each of which presents information about one of the other documents, for example, the book "Six Degrees: the science of a connected age." - The source region 1100 displays the
popular passage 1102 as it appears in the source book, a link 1104 to the page of the source book where the passage appears, author/publishing year information 1106, and an "About this book"link 1108. Users can click on thelink 1108 to obtain more information about the source book. - The
target sub-region 1300 displays information for a given target document including, an image 1302 of the document cover, alink 1304 to the page of the target document where the passage appears, information about the author/publishing year/total page number 1306, thecontext 1308 of the passage in the target document, a "Table of Contents" link 1310, and an "About this book" link 1312. Users can click on link 1310 to obtain the table of contents for the target document, and click on link 1312 to get more information about the document. - As illustrated in
FIG. 9 andFIG. 10 , a link structure based upon popular passages enables a user to browse documents by related concepts in a manner similar to how one navigates the web. It also provides guidance when a user wants to only skim the most interesting parts of a book before deciding whether to read it. - The above description is included to illustrate the operation of certain embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion, many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the scope of the invention.
Claims (14)
- Computer-implemented method of identifying similar passages in a plurality of documents stored in a corpus, comprising:building a shingle table describing shingles found in the corpus, the one or more documents in which the shingles appear, and locations in the documents where the shingles occur;identifying a sequence of multiple contiguous shingles that appears in a source document in the corpus and in at least one other document in the corpus;generating a similar passage in the source document based at least in part on the sequence of multiple contiguous shingles; andstoring data describing the similar passage.
- Method according to claim 1,
wherein building a shingle table comprises:- identifying a set of sequentially-ordered shingles occurring in a document in the corpus, each shingle including a group of adjacent words occurring in the document, and contiguous shingles including groups of words differing by two words;- describing, in the shingle table, distinct shingles in the document; and- describing, in the shingle table and for each distinct shingle in the shingle table, one or more locations in the document where the shingle occurs. - Method according to claim 2,
wherein building a shingle table comprises building a distinct shingle table for each document in the corpus or building a distinct shingle table for multiple documents in the corpus. - Method according to claim 1,
wherein the source document has a set of sequentially-ordered shingles, and wherein identifying a sequence of multiple shingles that appear in the source document and in at least one other document comprises:- examining the shingles in the source document in order;- for each examined shingle, determining whether any other document in the corpus includes the examined shingle; and- identifying a next shingle in the source document, the next shingle ordered immediately after the examined shingle in the set of sequentially ordered shingles in the source document and, for each other document in the corpus:o determining whether the other document includes the next shingle;o responsive to the other document including the next shingle, determining whether the other document includes the next shingle in a position occurring immediately after the examined shingle; ando responsive to the other document including the next shingle in a position occurring immediately after the examined shingle, defining a target sequence associated with the other document, the target sequence comprising the examined shingle and the next shingle. - Method according to claim 4,
wherein identifying a sequence of multiple shingles that appear in the source document and in at least one other document further comprises:- identifying a shingle that occurs in only the source document and defining a source gap in response thereto;- responsive to the source gap, terminating and saving the defined target sequence associated with the other document. - Method according to claim 1,
wherein identifying a sequence of multiple contiguous shingles that appears in the source document and in at least one other document comprises:- defining a source document sequence comprising all of the shingles occurring in the source document in order; and- comparing shingles of each other document in the corpus with the source document sequence to identify any subsequences of the source document sequence that appear in the other document. - Method according to claim 1,
wherein the sequence of multiple contiguous shingles that appears in the source document also appears in a plurality of other documents in the corpus and wherein generating a similar passage based at least in part on the sequence of multiple contiguous shingles comprises:- defining a group containing the sequences of multiple contiguous shingles appearing in the plurality of other documents in the corpus;- merging overlapping sequences in the group to form a merged sequence; and- defining the similar passage in the source document responsive to the merged sequence. - Method according to claim 7,
wherein merging overlapping sequences in the group comprises:- identifying an earliest of the multiple contiguous shingle sequences contained in the group; and- combining sequences in the group that overlap with the earliest sequence to form a merged sequence. - Method according to claim 1,
further comprising:- ranking the similar passage relative to other similar passages in the source document, in particular, wherein ranking the similar passage comprises:- calculating a score for the similar passage based, at least in part, on a length of the passage and frequency that the similar passage occurs in other documents in the corpus. - Method according to claim 1,
further comprising:- displaying a user interface having a passage presentation region showing the similar passage in association with the source document
or further comprising:- displaying a user interface displaying the similar passage; and- providing a hypertext link that, upon selection, allows a user to navigate to another document in the corpus having the similar passage. - Computer program product having a computer-readable storage medium having computer executable program code embodied therein for identifying similar passages in a plurality of documents stored in a corpus, especially employing a method according to one of the claims 1 - 10, comprising:a shingling module configured to build a shingle table describing shingles found in the corpus, the one or more documents in which the shingles appear, and locations in the documents where the shingles occur;a sequencing module configured to identify a sequence of multiple contiguous shingles that appears in a source document in the corpus and in at least one other document in the corpus;a merging module configured to generate a similar passage in the source document based at least in part on the sequence of multiple contiguous shingles; anda data store configured to store data describing the similar passage.
- Computer program product according to claim 11,
further comprising a user interface module configured to display a user interface having a passage presentation region showing the similar passage in association with the source document. - A computer system for identifying similar passages in a plurality of documents stored in a corpus, especially employing a method according to one of the claims 1 - 10, comprising:a computer-readable storage medium having executable program code embodied therein comprising:a shingling module configured to build a shingle table describing shingles found in the corpus, the one or more documents in which the shingles appear, and locations in the documents where the shingles occur;a sequencing module configured to identify a sequence of multiple contiguous shingles that appears in a source document in the corpus and in at least one other document in the corpus; anda merging module configured to generate a similar passage in the source document based at least in part on the sequence of multiple contiguous shingles;a processor configured to execute the program code; anda data store configured to store data describing the similar passage.
- Computer system of claim 13, the computer-readable medium further comprising a user interface module configured to display a user interface having a passage presentation region showing the similar passage in association with the source document.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/781,213 US8122032B2 (en) | 2007-07-20 | 2007-07-20 | Identifying and linking similar passages in a digital text corpus |
PCT/US2008/070557 WO2009015047A1 (en) | 2007-07-20 | 2008-07-18 | Identifying and linking similar passages in a digital text corpus |
Publications (3)
Publication Number | Publication Date |
---|---|
EP2191394A1 EP2191394A1 (en) | 2010-06-02 |
EP2191394A4 EP2191394A4 (en) | 2012-05-02 |
EP2191394B1 true EP2191394B1 (en) | 2013-03-06 |
Family
ID=40265681
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP08796339A Not-in-force EP2191394B1 (en) | 2007-07-20 | 2008-07-18 | Identifying and linking similar passages in a digital text corpus |
Country Status (4)
Country | Link |
---|---|
US (1) | US8122032B2 (en) |
EP (1) | EP2191394B1 (en) |
CA (1) | CA2691278C (en) |
WO (1) | WO2009015047A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104424160A (en) * | 2013-09-11 | 2015-03-18 | 北大方正集团有限公司 | Processing system and processing method for document skip |
Families Citing this family (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7606793B2 (en) * | 2004-09-27 | 2009-10-20 | Microsoft Corporation | System and method for scoping searches using index keys |
US7941420B2 (en) * | 2007-08-14 | 2011-05-10 | Yahoo! Inc. | Method for organizing structurally similar web pages from a web site |
US7676465B2 (en) * | 2006-07-05 | 2010-03-09 | Yahoo! Inc. | Techniques for clustering structurally similar web pages based on page features |
US20090106221A1 (en) * | 2007-10-18 | 2009-04-23 | Microsoft Corporation | Ranking and Providing Search Results Based In Part On A Number Of Click-Through Features |
US9348912B2 (en) * | 2007-10-18 | 2016-05-24 | Microsoft Technology Licensing, Llc | Document length as a static relevance feature for ranking search results |
US7958136B1 (en) * | 2008-03-18 | 2011-06-07 | Google Inc. | Systems and methods for identifying similar documents |
US8812493B2 (en) * | 2008-04-11 | 2014-08-19 | Microsoft Corporation | Search results ranking using editing distance and document information |
US20100169311A1 (en) * | 2008-12-30 | 2010-07-01 | Ashwin Tengli | Approaches for the unsupervised creation of structural templates for electronic documents |
DE102009006857A1 (en) * | 2009-01-30 | 2010-08-19 | Living-E Ag | A method for automatically classifying a text by a computer system |
US9135249B2 (en) * | 2009-05-29 | 2015-09-15 | Xerox Corporation | Number sequences detection systems and methods |
US8543381B2 (en) | 2010-01-25 | 2013-09-24 | Holovisions LLC | Morphing text by splicing end-compatible segments |
CN102193936B (en) * | 2010-03-09 | 2013-09-18 | 阿里巴巴集团控股有限公司 | Data classification method and device |
US8161073B2 (en) | 2010-05-05 | 2012-04-17 | Holovisions, LLC | Context-driven search |
US8738635B2 (en) | 2010-06-01 | 2014-05-27 | Microsoft Corporation | Detection of junk in search result ranking |
US9262390B2 (en) | 2010-09-02 | 2016-02-16 | Lexis Nexis, A Division Of Reed Elsevier Inc. | Methods and systems for annotating electronic documents |
US9069754B2 (en) * | 2010-09-29 | 2015-06-30 | Rhonda Enterprises, Llc | Method, system, and computer readable medium for detecting related subgroups of text in an electronic document |
US9495462B2 (en) | 2012-01-27 | 2016-11-15 | Microsoft Technology Licensing, Llc | Re-ranking search results |
US9448772B2 (en) * | 2013-03-15 | 2016-09-20 | Microsoft Technology Licensing, Llc | Generating program fragments using keywords and context information |
US9614724B2 (en) | 2014-04-21 | 2017-04-04 | Microsoft Technology Licensing, Llc | Session-based device configuration |
US20150317313A1 (en) * | 2014-05-02 | 2015-11-05 | Microsoft Corporation | Searching locally defined entities |
US10111099B2 (en) | 2014-05-12 | 2018-10-23 | Microsoft Technology Licensing, Llc | Distributing content in managed wireless distribution networks |
US9384335B2 (en) | 2014-05-12 | 2016-07-05 | Microsoft Technology Licensing, Llc | Content delivery prioritization in managed wireless distribution networks |
US9430667B2 (en) | 2014-05-12 | 2016-08-30 | Microsoft Technology Licensing, Llc | Managed wireless distribution network |
US9384334B2 (en) | 2014-05-12 | 2016-07-05 | Microsoft Technology Licensing, Llc | Content discovery in managed wireless distribution networks |
US9874914B2 (en) | 2014-05-19 | 2018-01-23 | Microsoft Technology Licensing, Llc | Power management contracts for accessory devices |
US10037202B2 (en) | 2014-06-03 | 2018-07-31 | Microsoft Technology Licensing, Llc | Techniques to isolating a portion of an online computing service |
US9367490B2 (en) | 2014-06-13 | 2016-06-14 | Microsoft Technology Licensing, Llc | Reversible connector for accessory devices |
US9892362B2 (en) | 2014-11-18 | 2018-02-13 | International Business Machines Corporation | Intelligence gathering and analysis using a question answering system |
US11204929B2 (en) | 2014-11-18 | 2021-12-21 | International Business Machines Corporation | Evidence aggregation across heterogeneous links for intelligence gathering using a question answering system |
US10318870B2 (en) * | 2014-11-19 | 2019-06-11 | International Business Machines Corporation | Grading sources and managing evidence for intelligence analysis |
US11244113B2 (en) | 2014-11-19 | 2022-02-08 | International Business Machines Corporation | Evaluating evidential links based on corroboration for intelligence analysis |
US11836211B2 (en) | 2014-11-21 | 2023-12-05 | International Business Machines Corporation | Generating additional lines of questioning based on evaluation of a hypothetical link between concept entities in evidential data |
US9928269B2 (en) | 2015-01-03 | 2018-03-27 | International Business Machines Corporation | Apply corrections to an ingested corpus |
US9916533B2 (en) | 2015-03-10 | 2018-03-13 | International Business Machines Corporation | Enhancement of massive data ingestion by similarity linkage of documents |
US10089382B2 (en) * | 2015-10-19 | 2018-10-02 | Conduent Business Services, Llc | Transforming a knowledge base into a machine readable format for an automated system |
US9495648B1 (en) | 2015-12-11 | 2016-11-15 | International Business Machines Corporation | Training a similar passage cognitive system using ground truth from a question answering cognitive system |
CN105635117A (en) * | 2015-12-22 | 2016-06-01 | 北京奇虎科技有限公司 | Method and device for identifying user clicking link |
US10606893B2 (en) | 2016-09-15 | 2020-03-31 | International Business Machines Corporation | Expanding knowledge graphs based on candidate missing edges to optimize hypothesis set adjudication |
CN108170684B (en) * | 2018-01-22 | 2020-06-05 | 京东方科技集团股份有限公司 | Text similarity calculation method and system, data query system and computer product |
CN111159996B (en) * | 2019-12-31 | 2023-03-24 | 福建福诺移动通信技术有限公司 | Short text set similarity comparison method and system based on text fingerprint algorithm |
US11494560B1 (en) * | 2020-01-30 | 2022-11-08 | Act, Inc. | System and methodology for computer-facilitated development of reading comprehension test items through passage mapping |
CN113221536A (en) * | 2020-12-29 | 2021-08-06 | 广东电网有限责任公司 | Method and device for analyzing similar paragraphs in file based on natural language |
US20220374459A1 (en) * | 2021-05-17 | 2022-11-24 | Salesforce.Com, Inc. | Systems and methods for hierarchical retrieval of semantic-based passages in deep learning |
Family Cites Families (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5724571A (en) | 1995-07-07 | 1998-03-03 | Sun Microsystems, Inc. | Method and apparatus for generating query responses in a computer-based document retrieval system |
US5909677A (en) * | 1996-06-18 | 1999-06-01 | Digital Equipment Corporation | Method for determining the resemblance of documents |
US5926812A (en) | 1996-06-20 | 1999-07-20 | Mantra Technologies, Inc. | Document extraction and comparison method with applications to automatic personalized database searching |
US6119124A (en) * | 1998-03-26 | 2000-09-12 | Digital Equipment Corporation | Method for clustering closely resembling data objects |
US6370551B1 (en) | 1998-04-14 | 2002-04-09 | Fuji Xerox Co., Ltd. | Method and apparatus for displaying references to a user's document browsing history within the context of a new document |
US6256622B1 (en) | 1998-04-21 | 2001-07-03 | Apple Computer, Inc. | Logical division of files into multiple articles for search and retrieval |
US6658626B1 (en) * | 1998-07-31 | 2003-12-02 | The Regents Of The University Of California | User interface for displaying document comparison information |
US6665837B1 (en) * | 1998-08-10 | 2003-12-16 | Overture Services, Inc. | Method for identifying related pages in a hyperlinked database |
US6466901B1 (en) * | 1998-11-30 | 2002-10-15 | Apple Computer, Inc. | Multi-language document search and retrieval system |
JP3022539B1 (en) * | 1999-01-07 | 2000-03-21 | 富士ゼロックス株式会社 | Document search device |
US6411953B1 (en) * | 1999-01-25 | 2002-06-25 | Lucent Technologies Inc. | Retrieval and matching of color patterns based on a predetermined vocabulary and grammar |
US6615209B1 (en) | 2000-02-22 | 2003-09-02 | Google, Inc. | Detecting query-specific duplicate documents |
US20020123994A1 (en) | 2000-04-26 | 2002-09-05 | Yves Schabes | System for fulfilling an information need using extended matching techniques |
US6859800B1 (en) | 2000-04-26 | 2005-02-22 | Global Information Research And Technologies Llc | System for fulfilling an information need |
US7028250B2 (en) | 2000-05-25 | 2006-04-11 | Kanisa, Inc. | System and method for automatically classifying text |
US7660819B1 (en) * | 2000-07-31 | 2010-02-09 | Alion Science And Technology Corporation | System for similar document detection |
US7813915B2 (en) * | 2000-09-25 | 2010-10-12 | Fujitsu Limited | Apparatus for reading a plurality of documents and a method thereof |
US7277766B1 (en) * | 2000-10-24 | 2007-10-02 | Moodlogic, Inc. | Method and system for analyzing digital audio files |
US7673344B1 (en) | 2002-09-18 | 2010-03-02 | Symantec Corporation | Mechanism to search information content for preselected data |
US6886010B2 (en) | 2002-09-30 | 2005-04-26 | The United States Of America As Represented By The Secretary Of The Navy | Method for data and text mining and literature-based discovery |
US20040117366A1 (en) * | 2002-12-12 | 2004-06-17 | Ferrari Adam J. | Method and system for interpreting multiple-term queries |
US7139752B2 (en) * | 2003-05-30 | 2006-11-21 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, and providing multiple document views derived from different document tokenizations |
US7146361B2 (en) * | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US7734627B1 (en) | 2003-06-17 | 2010-06-08 | Google Inc. | Document similarity detection |
US8868405B2 (en) | 2004-01-27 | 2014-10-21 | Hewlett-Packard Development Company, L. P. | System and method for comparative analysis of textual documents |
US7433893B2 (en) * | 2004-03-08 | 2008-10-07 | Marpex Inc. | Method and system for compression indexing and efficient proximity search of text data |
US7536408B2 (en) * | 2004-07-26 | 2009-05-19 | Google Inc. | Phrase-based indexing in an information retrieval system |
US20060129538A1 (en) | 2004-12-14 | 2006-06-15 | Andrea Baader | Text search quality by exploiting organizational information |
US8805781B2 (en) | 2005-06-15 | 2014-08-12 | Geronimo Development | Document quotation indexing system and method |
US7779347B2 (en) | 2005-09-02 | 2010-08-17 | Fourteen40, Inc. | Systems and methods for collaboratively annotating electronic documents |
US7707204B2 (en) | 2005-12-13 | 2010-04-27 | Microsoft Corporation | Factoid-based searching |
US8856145B2 (en) * | 2006-08-04 | 2014-10-07 | Yahoo! Inc. | System and method for determining concepts in a content item using context |
US7814048B2 (en) | 2006-08-14 | 2010-10-12 | Microsoft Corporation | Knowledge extraction from online discussion forums |
-
2007
- 2007-07-20 US US11/781,213 patent/US8122032B2/en not_active Expired - Fee Related
-
2008
- 2008-07-18 EP EP08796339A patent/EP2191394B1/en not_active Not-in-force
- 2008-07-18 WO PCT/US2008/070557 patent/WO2009015047A1/en active Application Filing
- 2008-07-18 CA CA2691278A patent/CA2691278C/en not_active Expired - Fee Related
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104424160A (en) * | 2013-09-11 | 2015-03-18 | 北大方正集团有限公司 | Processing system and processing method for document skip |
CN104424160B (en) * | 2013-09-11 | 2018-07-10 | 北大方正集团有限公司 | The processing system and processing method that document redirects |
Also Published As
Publication number | Publication date |
---|---|
CA2691278C (en) | 2013-09-24 |
CA2691278A1 (en) | 2009-01-29 |
US8122032B2 (en) | 2012-02-21 |
WO2009015047A1 (en) | 2009-01-29 |
US20090024606A1 (en) | 2009-01-22 |
EP2191394A4 (en) | 2012-05-02 |
EP2191394A1 (en) | 2010-06-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP2191394B1 (en) | Identifying and linking similar passages in a digital text corpus | |
US9323827B2 (en) | Identifying key terms related to similar passages | |
US7958128B2 (en) | Query-independent entity importance in books | |
US11294970B1 (en) | Associating an entity with a search query | |
US11314824B2 (en) | System and method for block segmenting, identifying and indexing visual elements, and searching documents | |
US9104772B2 (en) | System and method for providing tag-based relevance recommendations of bookmarks in a bookmark and tag database | |
AU2010343183B2 (en) | Search suggestion clustering and presentation | |
JP5546731B2 (en) | Search method and search system | |
US8131734B2 (en) | Image based annotation and metadata generation system with experience based learning | |
US20170140059A1 (en) | Knowledge-based entity detection and disambiguation | |
JP5241828B2 (en) | Dictionary word and idiom determination | |
US9009170B1 (en) | Book content item search | |
US20090265631A1 (en) | System and method for a user interface to navigate a collection of tags labeling content | |
US9613003B1 (en) | Identifying topics in a digital work | |
US20100076991A1 (en) | Apparatus and method product for presenting recommended information | |
US20090144240A1 (en) | Method and systems for using community bookmark data to supplement internet search results | |
US20070219945A1 (en) | Key phrase navigation map for document navigation | |
US9043338B1 (en) | Book content item search | |
US20040098385A1 (en) | Method for indentifying term importance to sample text using reference text | |
US20020083045A1 (en) | Information retrieval processing apparatus and method, and recording medium recording information retrieval processing program | |
CN101201841A (en) | Convenient method and system for electronic text-processing and searching | |
US20130290373A1 (en) | Cherry picking search terms | |
EP3485394B1 (en) | Contextual based image search results | |
Liu et al. | KNM: A novel intelligent user interface for webpage navigation | |
Chen et al. | Social Annotation. |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20100111 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MT NL NO PL PT RO SE SI SK TR |
|
AX | Request for extension of the european patent |
Extension state: AL BA MK RS |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20120403 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/22 20060101AFI20120328BHEPIpc: G06F 17/27 20060101ALI20120328BHEPIpc: G06N 7/08 20060101ALI20120328BHEPIpc: G06N 7/00 20060101ALI20120328BHEP |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602008022758Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0017000000Ipc: G06F0017220000 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/27 20060101ALI20120926BHEPIpc: G06N 7/00 20060101ALI20120926BHEPIpc: G06N 7/08 20060101ALI20120926BHEPIpc: G06F 17/22 20060101AFI20120926BHEP |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MT NL NO PL PT RO SE SI SK TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EPRef country code: ATRef legal event code: REFRef document number: 599985Country of ref document: ATKind code of ref document: TEffective date: 20130315 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602008022758Country of ref document: DEEffective date: 20130502 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 599985Country of ref document: ATKind code of ref document: TEffective date: 20130306 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130617Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130606Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130606 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: VDEPEffective date: 20130306 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130607Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: BEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130708Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130706Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602008022758Country of ref document: DERepresentative=s name: ISARPATENT GBR PATENT- UND RECHTSANWAELTE, DERef country code: DERef legal event code: R082Ref document number: 602008022758Country of ref document: DERef country code: DERef legal event code: R082Ref document number: 602008022758Country of ref document: DERepresentative=s name: WUESTHOFF & WUESTHOFF, PATENTANWAELTE PARTG MB, DE |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602008022758Country of ref document: DERepresentative=s name: WUESTHOFF & WUESTHOFF, PATENTANWAELTE PARTG MB, DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306 |
|
26N | No opposition filed |
Effective date: 20131209 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602008022758Country of ref document: DEEffective date: 20131209 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: STEffective date: 20140331 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20130731Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20130731 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20130731 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20130718 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20130306 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20130718Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20080718 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20160727Year of fee payment: 9Ref country code: DEPayment date: 20160726Year of fee payment: 9 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R119Ref document number: 602008022758Country of ref document: DE |
|
GBPC | Gb: european patent ceased through non-payment of renewal fee |
Effective date: 20170718 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GBFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20170718Ref country code: DEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180201 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
WO2023018435A1 - System for contextually driven, personalized, in-time utility for wearable electronic devices - Google Patents
System for contextually driven, personalized, in-time utility for wearable electronic devices Download PDFInfo
- Publication number
- WO2023018435A1 WO2023018435A1 PCT/US2021/063535 US2021063535W WO2023018435A1 WO 2023018435 A1 WO2023018435 A1 WO 2023018435A1 US 2021063535 W US2021063535 W US 2021063535W WO 2023018435 A1 WO2023018435 A1 WO 2023018435A1
- Authority
- WO
- WIPO (PCT)
- Prior art keywords
- alert
- wearable device
- user
- context
- notification
- Prior art date
Links
- 230000009471 action Effects 0.000 claims description 42
- 230000003993 interaction Effects 0.000 claims description 29
- 230000004044 response Effects 0.000 claims description 23
- 238000000034 method Methods 0.000 claims description 20
- 238000004891 communication Methods 0.000 claims description 2
- 230000006870 function Effects 0.000 abstract description 9
- 238000013499 data model Methods 0.000 abstract description 2
- 230000001360 synchronised effect Effects 0.000 abstract description 2
- 230000015654 memory Effects 0.000 description 16
- 238000010586 diagram Methods 0.000 description 12
- 230000001960 triggered effect Effects 0.000 description 8
- 230000000875 corresponding effect Effects 0.000 description 4
- 238000012384 transportation and delivery Methods 0.000 description 4
- 230000006399 behavior Effects 0.000 description 3
- 230000008878 coupling Effects 0.000 description 3
- 238000010168 coupling process Methods 0.000 description 3
- 238000005859 coupling reaction Methods 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000002596 correlated effect Effects 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 230000035622 drinking Effects 0.000 description 1
- 230000005672 electromagnetic field Effects 0.000 description 1
- 230000030279 gene silencing Effects 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 230000000414 obstructive effect Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 239000004984 smart glass Substances 0.000 description 1
- 230000002618 waking effect Effects 0.000 description 1
- XLYOFNOQVPJJNP-UHFFFAOYSA-N water Substances O XLYOFNOQVPJJNP-UHFFFAOYSA-N 0.000 description 1
- 210000000707 wrist Anatomy 0.000 description 1
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/12—Protocols specially adapted for proprietary or special-purpose networking environments, e.g. medical networks, sensor networks, networks in vehicles or remote metering networks
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/535—Tracking the activity of the user
Definitions
- the present disclosure provides for using contextual information to display templated bits of information on a user electronic device, wherein the user can interact with the notification to perform an action, without launching an application.
- One aspect of the disclosure provides a method for providing contextual alerts through a wearable device, comprising detecting, by one or more sensors on the wearable device, a context of a user, the context including conditions surrounding the wearable device, determining, by one or more processors on the wearable device, whether the detected context triggers an alert, and when the detected context triggers the alert, providing a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
- the method may further include receiving user interaction with the notification without launching an application on the wearable device, determining, based on the user interaction, whether to perform an action, and performing the action when it is determined to perform the action.
- Performing the action may include interfacing with a wirelessly paired device to perform the action.
- providing the notification may include identifying a template corresponding to the alert from a plurality of templates stored on a wirelessly paired device.
- Performing the action may include pulling content from the wirelessly paired device based on the template.
- Pulling the content may include pulling the content from an application on the wirelessly paired device without launching the application.
- determining whether the detected context triggers an alert may include executing an operating system level framework.
- the method may further include providing a suggestion for updating alert settings for the alert.
- the method may further include detecting a pattern of interaction with the alert, and automatically updating alert settings based on the detected pattern of interaction.
- Another aspect of the disclosure provides a system for providing contextual alerts through a wearable device, comprising one or more sensors, and one or more processors in communication with the one or more sensors.
- the one or more processors may be configured to detect, using the one or more sensors, a context of a user, the context including conditions surrounding the wearable device, determine whether the detected context triggers an alert, and when the detected context triggers the alert, provide a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
- the one or more processors may be further configured to receive user interaction with the notification without launching an application on the wearable device, determine, based on the user interaction, whether to perform an action, and perform the action when it is determined to perform the action.
- Performing the action may include, for example, interfacing with a wirelessly paired device to perform the action.
- providing the notification may include identifying a template corresponding to the alert from a plurality of templates stored on a wirelessly paired device.
- Performing the action may include pulling content from the wirelessly paired device based on the template.
- Pulling the content may include pulling the content from an application on the wirelessly paired device without launching the application.
- the system may further include a display, wherein providing the notification comprises displaying a description and one or more response prompts through the display.
- determining whether the detected context triggers an alert may include executing an operating system level framework.
- the one or more processors may be further configured to determine a suggested update for alert settings for the alert.
- the one or more processors may be further configured to detect a pattern of interaction with the alert, and automatically update alert settings based on the detected pattern of interaction.
- Yet another aspect of the disclosure provides a non-transitory computer-readable medium storing instructions executable by one or more processors to perform a method for providing contextual alerts through a wearable device, comprising detecting, by one or more sensors on the wearable device, a context of a user, the context including conditions surrounding the wearable device, determining whether the detected context triggers an alert, and when the detected context triggers the alert, providing a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
- Fig. 1 is a pictorial diagram illustrating an example contextual alert on a wearable device according to aspects of the disclosure.
- Fig. 2 is a pictorial diagram illustrating an example context and a relevant notification according to aspects of the disclosure.
- Figs. 3A-C illustrate example actionable notifications according to aspects of the disclosure.
- Fig. 4 is a pictorial diagram illustrating example sources of content for the contextual alerting function according to aspects of the disclosure.
- Fig. 5 is a block diagram illustrating an example template for a contextual alerting function according to aspects of the disclosure.
- Fig. 6 is a block diagram illustrating an example system according to aspects of the disclosure.
- Fig. 7 is a flow diagram illustrating an example method according to aspects of the disclosure. DETAILED DESCRIPTION
- CAFs Contextual Alerting Functions
- CAFs are an interface paradigm for synchronized device frameworks across multi-device ecosystems and user data models. CAFs can replace existing concepts such as apps and/or notifications.
- the CAF provides an interface to interact with an app present on a user’s phone or watch, or with a smart assistant or other device.
- the CAF triggers one or more callback actions based on the user’s input on the CAF.
- the CAF is displayed based on one or more contextual inputs such as a current location, nearby/proximate devices, time of day, state of nearby media devices (e.g. speakers, tv, etc.), the user’s status (e.g. driving, sleeping, eating, etc.), and/or ongoing active services (e.g. rideshare, deliveries, etc.).
- the CAF is personalized for a user based on the user’ s usage pattern.
- CAFs differ from apps in that they provide a single end-to-end user journey on one screen, are delivered in-time to the user with contextual cues, can be displayed with other CAFs simultaneously on the small screen, take a highly templated approach to improve efficient skimming of content, do not require the user to install anything on their small form factor device, and do not require extensive system libraries to be pulled in. While some operating system level libraries may be used to implement CAFs, third party developers are not needed.
- CAFs may have an alerting function that can be set manually, automatically, or suggested.
- the alerts provided through the CAFs may be displayed differently based on a type of alert. For example, urgent alerts may be displayed on a main portion of the display and overlaying other content, while contextually suggested CAFs may appear in a less obstructive portion of the display.
- each CAF To build each CAF, developers select one of a small set of CAF templates and specify parameters such as: what content should be displayed in the template; what callback action(s), such as unlocking a door, should be triggered when the user engages with the user interface (UI) for the CAF; and which of the available contextual inputs are relevant for displaying this CAF, such as location, proximity to another device, time of day, user activity, etc.
- UI user interface
- Each CAF represents a single user journey. They are not mini-apps, they are quick, glanceable moments of interaction. One particular app might design multiple CAFs for specific situations, such as a CAF for starting a workout based on user activity, and another CAF for recording drinking a glass of water.
- An operating system developer, CAF developer, device designer, other programmer, or the user may determine which of the available CAFs may be contextually relevant to the user at a given time, and at what importance level to display that CAF (e.g. whether to display over the watchface).
- a high level system may rank CAFs to determine which CAF(s) should show up.
- the system may leverage contextual cues, such as previous user behavior patterns of opening and using prior CAFs.
- the relevance factor for each suggested CAF may increase upon usage and decrease if the user dismisses it.
- User behavior patterns may further include time-of-day usage patterns, such as learning when a user typically starts a workout during the day.
- the contextual cues may further include, for example, current user location, nearby devices, time of day, state of nearby media devices (e.g. speakers, tv), user’s status (e.g. driving, sleeping, eating), ongoing active services (e.g. rideshare, deliveries), etc.
- the system may also use federated learning to gather insights about the most relevant CAFs for specific contexts based on the interaction patterns of a variety of users.
- Fig. 1 is a pictorial diagram illustrating an example contextual alert 110 on a wearable device 100 worn by a user 190.
- the wearable device 100 in this example includes a display 102.
- the contextual alert 110 appears as a graphic on the display 102.
- the contextual alert 110 may appear in response to detection, by the wearable device 100 or other devices wirelessly paired with the wearable device 100, of a particular context.
- the context may include one or more conditions surrounding the user 190.
- Such conditions may include information stored in an account registered to the user 190, such as calendar entries, historical information, transactions such as orders for delivery, or any other type of information related to the user and for which the user has approved use with CAFs.
- Further examples of such conditions surrounding the user 190 include weather, other devices detected within a predetermined range, position, etc., user activity such as movements, interactions, etc., time of day, dates, seasons, etc.
- contextual alert 110 is illustrated in Fig. 1 as a graphic on a display, in other examples the contextual alert 110 may take different forms, such as audible notifications, haptic feedback, etc. Moreover, as described further herein, appearance and positioning of the alert 110 may be determined based on a variety of factors, such as priority, type of notification, context, etc. While the wearable device 100 is shown in Fig. 1 as a smartwatch, any of a variety of wearable devices may be used to issue the alert. For example, such wearable devices may include smart glasses, helmets, earbuds, rings, pendants, smart clothing, fitness trackers, or any other device with a small form factor user interface.
- Fig. 2 illustrates an example context and a relevant contextual alert.
- user 290 is wearing smartwatch 200 and walks up to the front door of the user’s house 260.
- a proximity between the smartwatch 200 and a smart lock 262, video doorbell 264, and/or other device, such as a home assistant device within the house 260, may be detected.
- the smartwatch 200 may be detected using short range wireless pairing technology, such as Bluetooth or ultra wide band (UWB), radiofrequency (RF) tags, image capture devices, or any other technology.
- Security identifiers associated with the smartwatch 200 and the smart lock 262 or other home device may be verified to confirm that the user 290 is authorized to access the house 260 using the smart lock 262.
- a CAF may be triggered and alert 210 may be presented on the user’s smartwatch 200.
- the detected conditions may be compared to conditions listed in a library of CAF templates stored on the smartwatch 200 or on an associated device, such as a wirelessly paired phone, laptop, tablet, home assistant, or the like.
- multiple conditions may be detected and compared to stored information to determine the context. Some conditions may be categorized as necessary for a particular context, and others may be optional, such as to improve an accuracy of determining the context.
- the CAF template may specify which conditions are necessary and/or optional.
- the contextual alert 210 is provided on display 202 of the smartwatch 200.
- the alert 210 may occupy only a portion of the display 202, such that other information, such as time 204 by way of example only, can simultaneously be displayed.
- the alert 210 may include a description 212 or informational portion.
- the alert 210 further includes a user input prompt 214.
- the description 212 informs the user 290 of an ability to unlock the door through the CAF.
- the prompt 214 provides the option for the user to enter the input, which in turn triggers an instruction to the smart lock 262 to unlock the door. While only one prompt 214 is shown in this example, it should be understood that in other examples additional prompts may be provided, such as to display different input options to the user.
- FIG. 2 illustrates one example context of approaching the front door of the user’s house and a corresponding CAF alerting the user 290 of the option of unlocking the front door using the smartwatch 200
- numerous other types of CAFs are possible and may correspond to a variety of different contexts.
- the CAF may indicate to the user the driver’s location and/or estimated arrival time; when the user wakes up, for example as detected by biometric sensors within the wearable device, the CAF may indicate how long the user slept, heart rate, waking intervals, or other related information; when the user exits an office building that the user routinely occupies during predetermined hours of the day, the CAF may suggest upcoming events stored in the user’s calendar; when the user steps outside and begins jogging, as detected by motion sensors, GPS, etc., the CAF may suggest that the user record the distance covered, steps taken, calories burned, etc. during the jog.
- CAFs may be suggested to the user based on context, in some examples CAFs may be pinned by the user. For example, a user can pin it to a particular place on the wearable device, for example, as a small icon on watch face, or left/right swipe of the watch face, or somewhere else. In this regard, a user can easily find the CAF when needed.
- the user may instruct the wearable device or another device wirelessly paired thereto to generate an alert.
- the alert may remain on the display of the wearable device, such as on a portion of the main display, on a secondary display accessed by scrolling or the like, etc.
- the instructions to generate the alert may be provided through voice commands, graphical user interface of the wearable device, an interface of a paired device, etc.
- CAFs may be ranked or other ascribed a priority of level of importance.
- the rank or priority may be determined based on, for example, a nature of the CAF or actions that may be prompted by the user’s interaction with the CAF, user input, detected conditions such as timing, configuration of the CAF template, etc.
- the ranking of a given CAF may be adjusted based on the user’s interactions with the CAF over time. For example, if the user dismisses the given CAF each time it is presented, the priority or rank of the CAF may be lowered. Conversely, if the user commonly engages a lower priority CAF, the priority of that CAF may be raised in future instances when context relevant to the CAF is detected.
- a rank or priority of CAFs may be used to determine placement of the CAFs on a display screen of the wearable device. For example, high priority or highly relevant CAFs may be presented over the main display screen, which lower priority CAFs may be presented underneath or in an unobtrusive portion of the display.
- Figs. 3A-C illustrate example alert setting that may be suggested using CAFs.
- the settings updates may be suggested in response to recognizing a pattern of user interaction with the CAFs over time, such as when the user interacts with the CAF to perform an action, interacts with the CAF to dismiss the CAF, ignores the CAF, etc.
- the suggested updates can be offered after a first time the CAF is presented to the user, or after two or more CAFs are presented and handled similarly by the user.
- Fig. 3A illustrates a suggestion for updating the alert settings that may be provided by the CAF described above in connection with Fig. 2.
- the CAF may prompt the user to indicate how alerts should be provided in future instances where the same context is detected.
- the suggestion may include a description 312 asking whether to automatically unlock the front door when the context is detected, and one or more response prompts 314, 315 such as “Do automatically” or “Always alert me.”
- a response prompt suggested for the user may be highlighted, such as by changing a color or outline or other appearance of the “Do automatically” response prompt 314 based on a determination that the user typically using the CAF to unlock the door and therefore is likely to select the “Do automatically” response prompt 314.
- Fig. 3B illustrates a suggestion for updating the alert settings that may be provided by the CAF if, for example, a pattern of behavior is detected wherein the user does not interact with the CAF. Similar to Fig. 3A, a description 322 may be provided indicating that it has been detected that the user does not often interact with the CAF, along with one or more response prompts 324-327. Each response prompt 324-327 may trigger, if selected, a different update to the alert settings. [0046] While Figs. 3A-B illustrate example instances in which a suggestions to update alert settings may be provided, suggestions may be provided in connection with any action in addition or alternative to updating alert settings.
- suggestions may be provided in connection with any type of CAF. While the suggestions illustrated include descriptions and one or more prompts, the format of the suggestions may take any form, including but not limited to varying the number of response prompts.
- Fig. 3C illustrates an example request for user feedback regarding the CAF.
- Such feedback may be sought, for example, in response to a user declining to user the CAF, such as by dismissing the alert, ignoring the alert, updating alert settings such as to not be alerted in future instances, or the like. While these are merely some examples, feedback may be sought for any of a variety of reasons. According to some examples, such feedback may be used to automatically adjust alert settings.
- Fig. 4 is a pictorial diagram illustrating example sources of content for the contextual alerting function.
- available CAFs can be pulled from any of a variety of sources, including but not limited to smart home devices 460, mobile phones 470, smartwatch 400, laptops, tablets, or other paired devices associated with user 490, or any combination of these.
- content for the alert, response prompts, and actions taken in response thereto may be pulled from one or more applications on the user’s phone 470 and/or watch 400.
- An app can publish several CAFs, each CAFs may contain an action tile, a description of the action, call to action callback button(s), and potentially some graphics such as icons, a diagram etc. Also the app can specify a trigger condition of the CAFs. This information may follow some templates, and a developer can specify them in their app. When the trigger condition is met, the template information is pulled from the phone app, and shown on the wearable device.
- Fig. 5 is a block diagram illustrating an example template for a contextual alerting function.
- a developer may select from a set of templates and specify particular information.
- the selected template may dictate how the CAF is provided, such as whether to display graphics and an arrangement of particular graphics, whether to provide audible or other output, etc.
- the information specified by the developer within the template may include, for example, what content should be displayed, a callback action to be triggered when the user engages the CAF, contextual inputs relevant for displaying the CAF, etc.
- the content may include, for example, the description 212 and response prompt 214 such as mentioned above with respect to Fig. 2, any associated graphics, or other content.
- the callback action may include, for example, the actions triggered by a user’s interaction with response prompts, such as to unlock a door, etc.
- the contextual inputs may include the conditions detected by one or more sensors of the wearable device in response to which the CAF is triggered.
- the contextual inputs may include detected nearby devices, time of day, weather, light, motion, audio, or any combination of these or a variety of other conditions.
- the CAFs may be stored, for example, in a library on the user’ s phone, smartwatch, home assistant, or any other wearable device or device paired with the wearable. [0051] Fig.
- FIG. 6 is a block diagram illustrating an example system including a wearable device 600 and one or more paired computing devices 660, such as a smartphone, home assistant, wearable electronic device, tablet, gaming system, or other computing device.
- the wearable device 600 is configured to detect one or more conditions indicating a particular context, and trigger a CAF relating to the context, pulling content for the CAF from the computing device 660.
- the wearable device 600 includes various components, such as a processor 691, memory 692 including data and instructions, transceiver 694, sensors 695, and other components typically present in wearable wireless computing devices.
- the wearable device 600 may have all of the components normally used in connection with a wearable computing device such as a processor, memory (e.g., RAM and internal hard drives) storing data and instructions, user input, and output.
- the wearable device 600 may also be equipped with short range wireless pairing technology, such as a Bluetooth transceiver, allowing for wireless coupling with other devices.
- transceiver 694 may include an antenna, transmitter, and receiver that allows for wireless coupling with another device.
- the wireless coupling may be established using any of a variety of techniques, such as Bluetooth, Bluetooth low energy (BLE), ultra wide band (UWB), etc.
- the sensors 695 may be capable of detecting the user’s movements, and/or other parameters such as relative proximity to other devices, etc.
- the sensors may include, for example, IMU sensors 697, such as an accelerometer, gyroscope, etc.
- the gyroscopes may detect inertial positions of the wearable device 600, while the accelerometers detect linear movements of the wearable device 600.
- Such sensors may detect direction, speed, and/or other parameters of the movements.
- the sensors may additionally or alternatively include any other type of sensors capable of detecting changes in received data, where such changes may be correlated with user movements.
- the sensors may include a barometer, motion sensor, temperature sensor, a magnetometer, a pedometer, a global positioning system (GPS), proximity sensor, strain gauge, camera 698, microphone 696, UWB sensor 699, etc.
- GPS global positioning system
- the one or more sensors of each device may operate independently or in concert.
- the proximity sensor or UWB sensor may be used to determine a relative position, such as angle and/or distance, between two or more devices. Such information may be used to detect a relative position of devices, and therefore detect a relative position of the user’s body parts on which the wearable devices are worn.
- the strain gauge may be positioned, for example, in the smartwatch such as in a main housing and/or in a band of the smartwatch.
- the strain gauge may measure an amount of tension.
- the IMU sensor 697 may generate a three-dimensional signal which provides information about the direction and speed of the sensor movement. Features may be extracted from the IMU signal to help determine whether arm or wrist movement is involved when the signal is collected.
- sensors 695 While several example sensors 695 are described, it should be understood that any of a variety of sensors may be included in the wearable device 600 and adapted to detect various conditions. A few examples of other sensors include, without limitation, light sensors, GPS, RF sensors, electromagnetic field sensors, temperature sensors, biometric sensors, etc.
- the processor 691 may be configured to execute instructions to determine a context based on the detected conditions, pull a CAF from the computing device 600, and provide an alert associated with the CAF, such as by displaying content on the wearable device 600 and/or providing audible or tactile notification. While content for the CAF may be pulled from applications on the wearable device 600 and/or the computing device 660, the alert may be provided without launching the application. In some examples, the instructions may be executed to receive user input in response to the alert, and to execute a callback action with launching an application.
- the computing device 660 may include components similar to those described above with respect to the wearable device.
- the computing device 660 may include a processor 671, memory 672, transceiver 664, and sensors 665.
- sensors may include, without limitation, one or more cameras 668 or other image capture devices, such as thermal recognition, etc., UWB sensor 669, and any of a variety of other types of sensors.
- Input 676 and output 675 may be used to receive information from a user and provide information to the user.
- the input may include, for example, one or more touch sensitive inputs, a microphone, a camera, sensors, etc.
- the input 676 may include an interface for receiving data from the wearable device 600 and/or other wearable devices or other computing devices.
- the output 675 may include, for example, a speaker, display, haptic feedback, etc.
- the one or more processors 671 may be any conventional processors, such as commercially available microprocessors. Alternatively, the one or more processors may be a dedicated device such as an application specific integrated circuit (ASIC) or other hardware -based processor.
- ASIC application specific integrated circuit
- FIG. 6 functionally illustrates the processor, memory, and other elements of the computing device 660 as being within the same block, it will be understood by those of ordinary skill in the art that the processor, computing device, or memory may actually include multiple processors, computing devices, or memories that may or may not be stored within the same physical housing.
- the memory may be a hard drive or other storage media located in a housing different from that of computing device 660. Accordingly, references to a processor or computing device will be understood to include references to a collection of processors or computing devices or memories that may or may not operate in parallel.
- Memory 672 may store information that is accessible by the processors 671, including instructions 673 that may be executed by the processors 671, and data 674.
- the memory 672 may be of a type of memory operative to store information accessible by the processors 671, including a non- transitory computer-readable medium, or other medium that stores data that may be read with the aid of an electronic device, such as a hard-drive, memory card, read-only memory (“ROM”), random access memory (“RAM”), optical disks, as well as other write-capable and read-only memories.
- ROM read-only memory
- RAM random access memory
- optical disks as well as other write-capable and read-only memories.
- Data 674 may include one or more CAFs, each CAF corresponding to a different context. Data 674 may be retrieved, stored or modified by processors 671 in accordance with the instructions 673. For instance, although the present disclosure is not limited by a particular data structure, the data 674 may be stored in computer registers, in a relational database as a table having a plurality of different fields and records, XML documents, or flat files. The data 674 may also be formatted in a computer-readable format such as, but not limited to, binary values, ASCII or Unicode.
- the data 674 may be stored as bitmaps comprised of pixels that are stored in compressed or uncompressed, or various image formats (e.g., JPEG), vector-based formats (e.g., SVG) or computer instructions for drawing graphics.
- the data 674 may comprise information sufficient to identify the relevant information, such as numbers, descriptive text, proprietary codes, pointers, references to data stored in other memories (including other network locations) or information that is used by a function to calculate the relevant data.
- the instructions 673 may be executed to receive information from the wearable device and provide a particular CAF for presentation as an alert on the wearable device 600.
- the computing device 660 may receive a request from the wearable device 600, wherein the request identifies a specific CAF.
- the computing device 660 may receive information indicating a context or one or more detected conditions, and may determine which CAF should be provided in response.
- processor 671 and memory 672 of the computing device 660 are described in detail, it should be understood that the processor 691 and memory 692 of the wearable device 600 may include similar structure, features, and functions.
- Fig. 7 is a flow diagram illustrating an example method of contextual alerting. While the operations are described in a particular order, it should be understood that the order may be modified or operations may be performed in parallel. Operations may be performed by a same device or by multiple paired devices. Moreover, operations may be added or omitted.
- a context is detected based on conditions surrounding a wearable device.
- Such conditions may include conditions detected by sensors, such as position, nearby devices, weather, time of day, noise, light, etc. Additionally or alternatively, such conditions m ay include information related to the user, such as events stored in the user’ s calendar, places routinely visited by the user, etc. Access to such information may be defined by the user, such that the user may restrict or authorize access to any particular type or all information, and information is not accessed unless permitted by the user.
- block 710 it is determined whether the context triggers an alert. For example, it may be determined whether a CAF has been defined specifying input conditions that correspond to the detected conditions.
- a notification relevant to the context is provided through the wearable device when it is determined that an alert is triggered.
- the notification may be provided using information pulled from an application on the wearable device or a paired device, but without launching the application on the wearable device.
- the content may include, for example, a description of the alert, one or more response prompts, graphics, etc. If the detected context does not trigger an alert, the method may return to block 705 where it continues to detect conditions.
- user interaction with the notification is received.
- Such interaction may include, for example, selection of a response prompt through a touch screen interface, voice command, or other input.
- Other examples of interaction may include dismissing the alert, silencing the alert, etc.
- the action may include sending a signal to another device, such as a signal to manipulate a lock, turn a light on or off, record an event, communicate a message, or any other type of signal.
- the action may be executed within the wearable device.
- the action may be performed without launching an application on the wearable device.
- CAFs provide a single end-to-end user journey on one screen, are delivered in-time to the user with contextual cues, and can be displayed with other CAFs simultaneously on the small screen.
- the CAFs take a highly templated approach to improve efficient skimming of content, do not require the user to install anything on their small form factor device, and do not require extensive system libraries to be pulled in.
Abstract
The present disclosure provides for Contextual Alerting Functions (CAFs). CAFs are an interface paradigm for synchronized device frameworks across multi-device ecosystems and user data models. CAFs replace existing concepts such as apps and/or notifications.
Description
SYSTEM FOR CONTEXTUALLY DRIVEN, PERSONALIZED,
IN-TIME UTILITY FOR WEARABLE ELECTRONIC DEVICES
CROSS-REFERENCE TO RELATED APPLICATIONS
[0001] The present application claims the benefit of the filing date of U.S. Provisional Application No. 63/232,371, filed August 12, 2021, entitled “System For Contextually Driven, Personalized, In-Time Utility For Wearable Electronic Devices”, the disclosure of which is hereby incorporated herein by reference.
BACKGROUND
[0002] While software applications, or “apps”, are typically available on small form factor electronic devices, such as smartwatches or other wearable devices, users typically do not interact with the apps on the small form factor device. This may be because of the time it takes to figure out which app to use, find the app on the small form factor device, and launch the app. Users instead tend to interact with the app on a paired host device, such as a mobile phone, which can be easier for the user to manipulate.
SUMMARY
[0003] The present disclosure provides for using contextual information to display templated bits of information on a user electronic device, wherein the user can interact with the notification to perform an action, without launching an application.
[0004] One aspect of the disclosure provides a method for providing contextual alerts through a wearable device, comprising detecting, by one or more sensors on the wearable device, a context of a user, the context including conditions surrounding the wearable device, determining, by one or more processors on the wearable device, whether the detected context triggers an alert, and when the detected context triggers the alert, providing a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
[0005] According to some examples, the method may further include receiving user interaction with the notification without launching an application on the wearable device, determining, based on the user interaction, whether to perform an action, and performing the action when it is determined to perform the action. Performing the action may include interfacing with a wirelessly paired device to perform the action.
[0006] According to some examples, providing the notification may include identifying a template corresponding to the alert from a plurality of templates stored on a wirelessly paired device. Performing the action may include pulling content from the wirelessly paired device based on the template. Pulling the content may include pulling the content from an application on the wirelessly paired device without launching the application.
[0007] According to some examples, determining whether the detected context triggers an alert may include executing an operating system level framework.
[0008] According to some examples, the method may further include providing a suggestion for updating alert settings for the alert.
[0009] According to some examples, the method may further include detecting a pattern of interaction with the alert, and automatically updating alert settings based on the detected pattern of interaction.
[0010] Another aspect of the disclosure provides a system for providing contextual alerts through a wearable device, comprising one or more sensors, and one or more processors in communication with the one or more sensors. The one or more processors may be configured to detect, using the one or more sensors, a context of a user, the context including conditions surrounding the wearable device, determine whether the detected context triggers an alert, and when the detected context triggers the alert, provide a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
[0011] According to some examples, the one or more processors may be further configured to receive user interaction with the notification without launching an application on the wearable device, determine, based on the user interaction, whether to perform an action, and perform the action when it is determined to perform the action. Performing the action may include, for example, interfacing with a wirelessly paired device to perform the action.
[0012] According to some examples, providing the notification may include identifying a template corresponding to the alert from a plurality of templates stored on a wirelessly paired device. Performing the action may include pulling content from the wirelessly paired device based on the template. Pulling the content may include pulling the content from an application on the wirelessly paired device without launching the application.
[0013] According to some examples, the system may further include a display, wherein providing the notification comprises displaying a description and one or more response prompts through the display.
[0014] According to some examples, determining whether the detected context triggers an alert may include executing an operating system level framework.
[0015] According to some examples, the one or more processors may be further configured to determine a suggested update for alert settings for the alert.
[0016] According to some examples, the one or more processors may be further configured to detect a pattern of interaction with the alert, and automatically update alert settings based on the detected pattern of interaction.
[0017] Yet another aspect of the disclosure provides a non-transitory computer-readable medium storing instructions executable by one or more processors to perform a method for providing contextual alerts through a wearable device, comprising detecting, by one or more sensors on the wearable device, a context of a user, the context including conditions surrounding the wearable device, determining whether the detected context triggers an alert, and when the detected context triggers the alert, providing a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
DRAWINGS
[0018] Fig. 1 is a pictorial diagram illustrating an example contextual alert on a wearable device according to aspects of the disclosure.
[0019] Fig. 2 is a pictorial diagram illustrating an example context and a relevant notification according to aspects of the disclosure.
[0020] Figs. 3A-C illustrate example actionable notifications according to aspects of the disclosure.
[0021] Fig. 4 is a pictorial diagram illustrating example sources of content for the contextual alerting function according to aspects of the disclosure.
[0022] Fig. 5 is a block diagram illustrating an example template for a contextual alerting function according to aspects of the disclosure.
[0023] Fig. 6 is a block diagram illustrating an example system according to aspects of the disclosure. [0024] Fig. 7 is a flow diagram illustrating an example method according to aspects of the disclosure. DETAILED DESCRIPTION
[0025] The present disclosure provides for Contextual Alerting Functions (CAFs). CAFs are an interface paradigm for synchronized device frameworks across multi-device ecosystems and user data models. CAFs can replace existing concepts such as apps and/or notifications.
[0026] The CAF provides an interface to interact with an app present on a user’s phone or watch, or with a smart assistant or other device. The CAF triggers one or more callback actions based on the user’s input on the CAF. The CAF is displayed based on one or more contextual inputs such as a current location, nearby/proximate devices, time of day, state of nearby media devices (e.g. speakers, tv, etc.), the user’s status (e.g. driving, sleeping, eating, etc.), and/or ongoing active services (e.g. rideshare, deliveries, etc.). The CAF is personalized for a user based on the user’ s usage pattern.
[0027] CAFs differ from apps in that they provide a single end-to-end user journey on one screen, are delivered in-time to the user with contextual cues, can be displayed with other CAFs simultaneously on the small screen, take a highly templated approach to improve efficient skimming of content, do not require the user to install anything on their small form factor device, and do not require extensive system libraries to be pulled in. While some operating system level libraries may be used to implement CAFs, third party developers are not needed. As a result, there is no need for developers to create specific apps for the small form factor device, there is no need for users to download specific apps to their small form factor device, users are able to accomplish tasks more quickly using CAFs as compared to using apps or notifications, users are able to complete user journeys with only one interaction, and users do not have to search for the right app to launch when they need help.
[0028] CAFs may have an alerting function that can be set manually, automatically, or suggested. The alerts provided through the CAFs may be displayed differently based on a type of alert. For example, urgent alerts may be displayed on a main portion of the display and overlaying other content, while contextually suggested CAFs may appear in a less obstructive portion of the display.
[0029] To build each CAF, developers select one of a small set of CAF templates and specify parameters such as: what content should be displayed in the template; what callback action(s), such as unlocking a door, should be triggered when the user engages with the user interface (UI) for the CAF; and which of the available contextual inputs are relevant for displaying this CAF, such as location, proximity to another device, time of day, user activity, etc.
[0030] Each CAF represents a single user journey. They are not mini-apps, they are quick, glanceable moments of interaction. One particular app might design multiple CAFs for specific situations, such as a CAF for starting a workout based on user activity, and another CAF for recording drinking a glass of water.
[0031] An operating system developer, CAF developer, device designer, other programmer, or the user may determine which of the available CAFs may be contextually relevant to the user at a given time, and at what importance level to display that CAF (e.g. whether to display over the watchface). A high level system may rank CAFs to determine which CAF(s) should show up. For example, the system may leverage contextual cues, such as previous user behavior patterns of opening and using prior CAFs. In this example, the relevance factor for each suggested CAF may increase upon usage and decrease if the user dismisses it. User behavior patterns may further include time-of-day usage patterns, such as learning when a user typically starts a workout during the day. The contextual cues may further include, for example, current user location, nearby devices, time of day, state of nearby media devices (e.g. speakers, tv), user’s status (e.g. driving, sleeping, eating), ongoing active services (e.g. rideshare, deliveries), etc. The system may also use federated learning to gather insights about the most relevant CAFs for specific contexts based on the interaction patterns of a variety of users.
[0032] Fig. 1 is a pictorial diagram illustrating an example contextual alert 110 on a wearable device 100 worn by a user 190. For example, the wearable device 100 in this example includes a display 102. The contextual alert 110 appears as a graphic on the display 102. The contextual alert 110 may appear in response to detection, by the wearable device 100 or other devices wirelessly paired with the wearable device 100, of a particular context.
[0033] The context may include one or more conditions surrounding the user 190. Such conditions may include information stored in an account registered to the user 190, such as calendar entries, historical information, transactions such as orders for delivery, or any other type of information related to the user and for which the user has approved use with CAFs. Further examples of such conditions surrounding the user 190 include weather, other devices detected within a predetermined range, position, etc., user activity such as movements, interactions, etc., time of day, dates, seasons, etc.
[0034] While the contextual alert 110 is illustrated in Fig. 1 as a graphic on a display, in other examples the contextual alert 110 may take different forms, such as audible notifications, haptic feedback, etc. Moreover, as described further herein, appearance and positioning of the alert 110 may be determined based on a variety of factors, such as priority, type of notification, context, etc. While the wearable device 100 is shown in Fig. 1 as a smartwatch, any of a variety of wearable devices may be used to issue the alert. For example, such wearable devices may include smart glasses, helmets, earbuds, rings, pendants, smart clothing, fitness trackers, or any other device with a small form factor user interface.
[0035] Fig. 2 illustrates an example context and a relevant contextual alert. In this example, user 290 is wearing smartwatch 200 and walks up to the front door of the user’s house 260. A proximity between the smartwatch 200 and a smart lock 262, video doorbell 264, and/or other device, such as a home assistant device within the house 260, may be detected. For example, the smartwatch 200 may be
detected using short range wireless pairing technology, such as Bluetooth or ultra wide band (UWB), radiofrequency (RF) tags, image capture devices, or any other technology. Security identifiers associated with the smartwatch 200 and the smart lock 262 or other home device may be verified to confirm that the user 290 is authorized to access the house 260 using the smart lock 262.
[0036] In response to detecting the user’ s presence at the door and verifying authorized access, a CAF may be triggered and alert 210 may be presented on the user’s smartwatch 200. By way of example only, the detected conditions may be compared to conditions listed in a library of CAF templates stored on the smartwatch 200 or on an associated device, such as a wirelessly paired phone, laptop, tablet, home assistant, or the like. According to some examples, multiple conditions may be detected and compared to stored information to determine the context. Some conditions may be categorized as necessary for a particular context, and others may be optional, such as to improve an accuracy of determining the context. In some examples, described in more detail below in connection with Fig. 5, the CAF template may specify which conditions are necessary and/or optional.
[0037] When the CAF is triggered by the detected conditions, the contextual alert 210 is provided on display 202 of the smartwatch 200. According to some examples, the alert 210 may occupy only a portion of the display 202, such that other information, such as time 204 by way of example only, can simultaneously be displayed. The alert 210 may include a description 212 or informational portion. In this example, the alert 210 further includes a user input prompt 214. For example, the description 212 informs the user 290 of an ability to unlock the door through the CAF. The prompt 214 provides the option for the user to enter the input, which in turn triggers an instruction to the smart lock 262 to unlock the door. While only one prompt 214 is shown in this example, it should be understood that in other examples additional prompts may be provided, such as to display different input options to the user.
[0038] While Fig. 2 illustrates one example context of approaching the front door of the user’s house and a corresponding CAF alerting the user 290 of the option of unlocking the front door using the smartwatch 200, numerous other types of CAFs are possible and may correspond to a variety of different contexts. By way of example only: when it is detected that the user steps outside to look for a delivery driver for a food order the user placed, for example based on proximity sensors, GPS, transaction history, etc., the CAF may indicate to the user the driver’s location and/or estimated arrival time; when the user wakes up, for example as detected by biometric sensors within the wearable device, the CAF may indicate how long the user slept, heart rate, waking intervals, or other related information; when the user exits an office building that the user routinely occupies during predetermined hours of the day, the CAF may suggest upcoming events stored in the user’s calendar; when the user steps outside and begins jogging, as detected by motion sensors, GPS, etc., the CAF may suggest that the user record the distance covered, steps taken, calories burned, etc. during the jog.
[0039] While CAFs may be suggested to the user based on context, in some examples CAFs may be pinned by the user. For example, a user can pin it to a particular place on the wearable device, for example, as a small icon on watch face, or left/right swipe of the watch face, or somewhere else. In this regard, a user can easily find the CAF when needed. In some examples, the user may instruct the
wearable device or another device wirelessly paired thereto to generate an alert. The alert may remain on the display of the wearable device, such as on a portion of the main display, on a secondary display accessed by scrolling or the like, etc. The instructions to generate the alert may be provided through voice commands, graphical user interface of the wearable device, an interface of a paired device, etc.
[0040] According to some examples, CAFs may be ranked or other ascribed a priority of level of importance. The rank or priority may be determined based on, for example, a nature of the CAF or actions that may be prompted by the user’s interaction with the CAF, user input, detected conditions such as timing, configuration of the CAF template, etc.
[0041] In some examples, the ranking of a given CAF may be adjusted based on the user’s interactions with the CAF over time. For example, if the user dismisses the given CAF each time it is presented, the priority or rank of the CAF may be lowered. Conversely, if the user commonly engages a lower priority CAF, the priority of that CAF may be raised in future instances when context relevant to the CAF is detected.
[0042] In further examples, a rank or priority of CAFs may be used to determine placement of the CAFs on a display screen of the wearable device. For example, high priority or highly relevant CAFs may be presented over the main display screen, which lower priority CAFs may be presented underneath or in an unobtrusive portion of the display.
[0043] Figs. 3A-C illustrate example alert setting that may be suggested using CAFs. For example, the settings updates may be suggested in response to recognizing a pattern of user interaction with the CAFs over time, such as when the user interacts with the CAF to perform an action, interacts with the CAF to dismiss the CAF, ignores the CAF, etc. The suggested updates can be offered after a first time the CAF is presented to the user, or after two or more CAFs are presented and handled similarly by the user.
[0044] Fig. 3A illustrates a suggestion for updating the alert settings that may be provided by the CAF described above in connection with Fig. 2. In this example, it may be determined that the user has interacted with the CAF to unlock the front door one or more times, and therefore the CAF may prompt the user to indicate how alerts should be provided in future instances where the same context is detected. For example, as shown the suggestion may include a description 312 asking whether to automatically unlock the front door when the context is detected, and one or more response prompts 314, 315 such as “Do automatically” or “Always alert me.” According to some examples, a response prompt suggested for the user may be highlighted, such as by changing a color or outline or other appearance of the “Do automatically” response prompt 314 based on a determination that the user typically using the CAF to unlock the door and therefore is likely to select the “Do automatically” response prompt 314.
[0045] Fig. 3B illustrates a suggestion for updating the alert settings that may be provided by the CAF if, for example, a pattern of behavior is detected wherein the user does not interact with the CAF. Similar to Fig. 3A, a description 322 may be provided indicating that it has been detected that the user does not often interact with the CAF, along with one or more response prompts 324-327. Each response prompt 324-327 may trigger, if selected, a different update to the alert settings.
[0046] While Figs. 3A-B illustrate example instances in which a suggestions to update alert settings may be provided, suggestions may be provided in connection with any action in addition or alternative to updating alert settings. Moreover, while the suggestions illustrated related to the context of the user positioned at the front door and the associated CAF triggered by such conditions, suggestions may be provided in connection with any type of CAF. While the suggestions illustrated include descriptions and one or more prompts, the format of the suggestions may take any form, including but not limited to varying the number of response prompts.
[0047] Fig. 3C illustrates an example request for user feedback regarding the CAF. Such feedback may be sought, for example, in response to a user declining to user the CAF, such as by dismissing the alert, ignoring the alert, updating alert settings such as to not be alerted in future instances, or the like. While these are merely some examples, feedback may be sought for any of a variety of reasons. According to some examples, such feedback may be used to automatically adjust alert settings.
[0048] Fig. 4 is a pictorial diagram illustrating example sources of content for the contextual alerting function. As shown, available CAFs can be pulled from any of a variety of sources, including but not limited to smart home devices 460, mobile phones 470, smartwatch 400, laptops, tablets, or other paired devices associated with user 490, or any combination of these. For example, content for the alert, response prompts, and actions taken in response thereto may be pulled from one or more applications on the user’s phone 470 and/or watch 400.
[0049] An app can publish several CAFs, each CAFs may contain an action tile, a description of the action, call to action callback button(s), and potentially some graphics such as icons, a diagram etc. Also the app can specify a trigger condition of the CAFs. This information may follow some templates, and a developer can specify them in their app. When the trigger condition is met, the template information is pulled from the phone app, and shown on the wearable device.
[0050] Fig. 5 is a block diagram illustrating an example template for a contextual alerting function. To build each CAF, a developer may select from a set of templates and specify particular information. The selected template may dictate how the CAF is provided, such as whether to display graphics and an arrangement of particular graphics, whether to provide audible or other output, etc. The information specified by the developer within the template may include, for example, what content should be displayed, a callback action to be triggered when the user engages the CAF, contextual inputs relevant for displaying the CAF, etc. The content may include, for example, the description 212 and response prompt 214 such as mentioned above with respect to Fig. 2, any associated graphics, or other content. The callback action may include, for example, the actions triggered by a user’s interaction with response prompts, such as to unlock a door, etc. The contextual inputs may include the conditions detected by one or more sensors of the wearable device in response to which the CAF is triggered. For example, the contextual inputs may include detected nearby devices, time of day, weather, light, motion, audio, or any combination of these or a variety of other conditions. The CAFs may be stored, for example, in a library on the user’ s phone, smartwatch, home assistant, or any other wearable device or device paired with the wearable.
[0051] Fig. 6 is a block diagram illustrating an example system including a wearable device 600 and one or more paired computing devices 660, such as a smartphone, home assistant, wearable electronic device, tablet, gaming system, or other computing device. The wearable device 600 is configured to detect one or more conditions indicating a particular context, and trigger a CAF relating to the context, pulling content for the CAF from the computing device 660.
[0052] The wearable device 600 includes various components, such as a processor 691, memory 692 including data and instructions, transceiver 694, sensors 695, and other components typically present in wearable wireless computing devices. The wearable device 600 may have all of the components normally used in connection with a wearable computing device such as a processor, memory (e.g., RAM and internal hard drives) storing data and instructions, user input, and output.
[0053] The wearable device 600 may also be equipped with short range wireless pairing technology, such as a Bluetooth transceiver, allowing for wireless coupling with other devices. For example, transceiver 694 may include an antenna, transmitter, and receiver that allows for wireless coupling with another device. The wireless coupling may be established using any of a variety of techniques, such as Bluetooth, Bluetooth low energy (BLE), ultra wide band (UWB), etc.
[0054] The sensors 695 may be capable of detecting the user’s movements, and/or other parameters such as relative proximity to other devices, etc. The sensors may include, for example, IMU sensors 697, such as an accelerometer, gyroscope, etc. For example, the gyroscopes may detect inertial positions of the wearable device 600, while the accelerometers detect linear movements of the wearable device 600. Such sensors may detect direction, speed, and/or other parameters of the movements. The sensors may additionally or alternatively include any other type of sensors capable of detecting changes in received data, where such changes may be correlated with user movements. For example, the sensors may include a barometer, motion sensor, temperature sensor, a magnetometer, a pedometer, a global positioning system (GPS), proximity sensor, strain gauge, camera 698, microphone 696, UWB sensor 699, etc. The one or more sensors of each device may operate independently or in concert.
[0055] The proximity sensor or UWB sensor may be used to determine a relative position, such as angle and/or distance, between two or more devices. Such information may be used to detect a relative position of devices, and therefore detect a relative position of the user’s body parts on which the wearable devices are worn.
[0056] The strain gauge may be positioned, for example, in the smartwatch such as in a main housing and/or in a band of the smartwatch. Thus, for example, as a user’s arm tenses, such as when the user performs a fist-clenching gesture, the strain gauge may measure an amount of tension.
[0057] The IMU sensor 697 may generate a three-dimensional signal which provides information about the direction and speed of the sensor movement. Features may be extracted from the IMU signal to help determine whether arm or wrist movement is involved when the signal is collected.
[0058] While several example sensors 695 are described, it should be understood that any of a variety of sensors may be included in the wearable device 600 and adapted to detect various conditions. A few
examples of other sensors include, without limitation, light sensors, GPS, RF sensors, electromagnetic field sensors, temperature sensors, biometric sensors, etc.
[0059] In response to detecting signals from the sensors 695, the processor 691 may be configured to execute instructions to determine a context based on the detected conditions, pull a CAF from the computing device 600, and provide an alert associated with the CAF, such as by displaying content on the wearable device 600 and/or providing audible or tactile notification. While content for the CAF may be pulled from applications on the wearable device 600 and/or the computing device 660, the alert may be provided without launching the application. In some examples, the instructions may be executed to receive user input in response to the alert, and to execute a callback action with launching an application.
[0060] The computing device 660 may include components similar to those described above with respect to the wearable device. For example, the computing device 660 may include a processor 671, memory 672, transceiver 664, and sensors 665. Such sensors may include, without limitation, one or more cameras 668 or other image capture devices, such as thermal recognition, etc., UWB sensor 669, and any of a variety of other types of sensors.
[0061] Input 676 and output 675 may be used to receive information from a user and provide information to the user. The input may include, for example, one or more touch sensitive inputs, a microphone, a camera, sensors, etc. Moreover, the input 676 may include an interface for receiving data from the wearable device 600 and/or other wearable devices or other computing devices. The output 675 may include, for example, a speaker, display, haptic feedback, etc.
[0062] The one or more processors 671 may be any conventional processors, such as commercially available microprocessors. Alternatively, the one or more processors may be a dedicated device such as an application specific integrated circuit (ASIC) or other hardware -based processor. Although Fig. 6 functionally illustrates the processor, memory, and other elements of the computing device 660 as being within the same block, it will be understood by those of ordinary skill in the art that the processor, computing device, or memory may actually include multiple processors, computing devices, or memories that may or may not be stored within the same physical housing. Similarly, the memory may be a hard drive or other storage media located in a housing different from that of computing device 660. Accordingly, references to a processor or computing device will be understood to include references to a collection of processors or computing devices or memories that may or may not operate in parallel.
[0063] Memory 672 may store information that is accessible by the processors 671, including instructions 673 that may be executed by the processors 671, and data 674. The memory 672 may be of a type of memory operative to store information accessible by the processors 671, including a non- transitory computer-readable medium, or other medium that stores data that may be read with the aid of an electronic device, such as a hard-drive, memory card, read-only memory ("ROM"), random access memory ("RAM"), optical disks, as well as other write-capable and read-only memories. The subject matter disclosed herein may include different combinations of the foregoing, whereby different portions of the instructions 673 and data 674 are stored on different types of media.
[0064] Data 674 may include one or more CAFs, each CAF corresponding to a different context. Data 674 may be retrieved, stored or modified by processors 671 in accordance with the instructions 673. For instance, although the present disclosure is not limited by a particular data structure, the data 674 may be stored in computer registers, in a relational database as a table having a plurality of different fields and records, XML documents, or flat files. The data 674 may also be formatted in a computer-readable format such as, but not limited to, binary values, ASCII or Unicode. By further way of example only, the data 674 may be stored as bitmaps comprised of pixels that are stored in compressed or uncompressed, or various image formats (e.g., JPEG), vector-based formats (e.g., SVG) or computer instructions for drawing graphics. Moreover, the data 674 may comprise information sufficient to identify the relevant information, such as numbers, descriptive text, proprietary codes, pointers, references to data stored in other memories (including other network locations) or information that is used by a function to calculate the relevant data.
[0065] The instructions 673 may be executed to receive information from the wearable device and provide a particular CAF for presentation as an alert on the wearable device 600. For example, the computing device 660 may receive a request from the wearable device 600, wherein the request identifies a specific CAF. In other examples, the computing device 660 may receive information indicating a context or one or more detected conditions, and may determine which CAF should be provided in response.
[0066] While the processor 671 and memory 672 of the computing device 660 are described in detail, it should be understood that the processor 691 and memory 692 of the wearable device 600 may include similar structure, features, and functions.
[0067] Fig. 7 is a flow diagram illustrating an example method of contextual alerting. While the operations are described in a particular order, it should be understood that the order may be modified or operations may be performed in parallel. Operations may be performed by a same device or by multiple paired devices. Moreover, operations may be added or omitted.
[0068] In block 705, a context is detected based on conditions surrounding a wearable device. Such conditions may include conditions detected by sensors, such as position, nearby devices, weather, time of day, noise, light, etc. Additionally or alternatively, such conditions m ay include information related to the user, such as events stored in the user’ s calendar, places routinely visited by the user, etc. Access to such information may be defined by the user, such that the user may restrict or authorize access to any particular type or all information, and information is not accessed unless permitted by the user.
[0069] In block 710, it is determined whether the context triggers an alert. For example, it may be determined whether a CAF has been defined specifying input conditions that correspond to the detected conditions.
[0070] In block 715, a notification relevant to the context is provided through the wearable device when it is determined that an alert is triggered. The notification may be provided using information pulled from an application on the wearable device or a paired device, but without launching the application on the wearable device. The content may include, for example, a description of the alert, one or more
response prompts, graphics, etc. If the detected context does not trigger an alert, the method may return to block 705 where it continues to detect conditions.
[0071] In block 720, user interaction with the notification is received. Such interaction may include, for example, selection of a response prompt through a touch screen interface, voice command, or other input. Other examples of interaction may include dismissing the alert, silencing the alert, etc.
[0072] In block 725, it is determined whether to perform an action based on the user interaction. For example, the action may include sending a signal to another device, such as a signal to manipulate a lock, turn a light on or off, record an event, communicate a message, or any other type of signal. According to other examples, the action may be executed within the wearable device. In block 730, the action may be performed without launching an application on the wearable device.
[0073] The foregoing systems and methods are beneficial in that the CAFs provide a single end-to-end user journey on one screen, are delivered in-time to the user with contextual cues, and can be displayed with other CAFs simultaneously on the small screen. The CAFs take a highly templated approach to improve efficient skimming of content, do not require the user to install anything on their small form factor device, and do not require extensive system libraries to be pulled in. As a result, there is no need for developers to create specific apps for the small form factor device, there is no need for users to download specific apps to their small form factor device, users are able to accomplish tasks more quickly using CAFs as compared to using apps or notifications, users are able to complete user journeys with only one interaction, and users do not have to search for the right app to launch when they need help.
[0074] Unless otherwise stated, the foregoing alternative examples are not mutually exclusive, but may be implemented in various combinations to achieve unique advantages. As these and other variations and combinations of the features discussed above can be utilized without departing from the subject matter defined by the claims, the foregoing description of the embodiments should be taken by way of illustration rather than by way of limitation of the subject matter defined by the claims. In addition, the provision of the examples described herein, as well as clauses phrased as "such as," "including" and the like, should not be interpreted as limiting the subject matter of the claims to the specific examples; rather, the examples are intended to illustrate only one of many possible embodiments. Further, the same reference numbers in different drawings can identify the same or similar elements.
Claims
1. A method for providing contextual alerts through a wearable device, comprising: detecting, by one or more sensors on the wearable device, a context of a user, the context including conditions surrounding the wearable device; determining, by one or more processors on the wearable device, whether the detected context triggers an alert; and when the detected context triggers the alert, providing a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
2. The method of claim 1, further comprising: receiving user interaction with the notification without launching an application on the wearable device; determining, based on the user interaction, whether to perform an action; and performing the action when it is determined to perform the action.
3. The method of claim 2, wherein performing the action comprises interfacing with a wirelessly paired device to perform the action.
4. The method of claim 2, wherein providing the notification comprises identifying a template corresponding to the alert from a plurality of templates stored on a wirelessly paired device.
5. The method of claim 4, wherein performing the action comprises pulling content from the wirelessly paired device based on the template.
6. The method of claim 5, wherein pulling the content comprises pulling the content from an application on the wirelessly paired device without launching the application.
7. The method of claim 1, wherein determining whether the detected context triggers an alert comprises executing an operating system level framework.
8. The method of claim 1, further comprising providing a suggestion for updating alert settings for the alert.
9. The method of claim 1, further comprising: detecting a pattern of interaction with the alert; and automatically updating alert settings based on the detected pattern of interaction.
10. A system for providing contextual alerts through a wearable device, comprising: one or more sensors; and one or more processors in communication with the one or more sensors, the one or more processors configured to: detect, using the one or more sensors, a context of a user, the context including conditions surrounding the wearable device; determine whether the detected context triggers an alert; and when the detected context triggers the alert, provide a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
11. The system of claim 10, wherein the one or more processors are further configured to: receive user interaction with the notification without launching an application on the wearable device; determine, based on the user interaction, whether to perform an action; and perform the action when it is determined to perform the action.
12. The system of claim 11, wherein performing the action comprises interfacing with a wirelessly paired device to perform the action.
13. The system of claim 11, wherein providing the notification comprises identifying a template corresponding to the alert from a plurality of templates stored on a wirelessly paired device.
14. The system of claim 13, wherein performing the action comprises pulling content from the wirelessly paired device based on the template.
15. The system of claim 14, wherein pulling the content comprises pulling the content from an application on the wirelessly paired device without launching the application.
16. The system of claim 10, further comprising a display, wherein providing the notification comprises displaying a description and one or more response prompts through the display.
17. The system of claim 10, wherein the one or more processors are configured to execute an operating system level framework to provide the notification.
18. The system of claim 10, wherein the one or more processors are further configured to determine a suggested update for alert settings for the alert.
19. The system of claim 10, wherein the one or more processors are further configured to: detect a pattern of interaction with the alert; and automatically update alert settings based on the detected pattern of interaction.
20. A non-transitory computer-readable medium storing instructions executable by one or more processors to perform a method for providing contextual alerts through a wearable device, comprising: detecting, by one or more sensors on the wearable device, a context of a user, the context including conditions surrounding the wearable device; determining whether the detected context triggers an alert; and when the detected context triggers the alert, providing a notification through the wearable device without launching an application on the wearable device, wherein the notification is relevant to the context.
-14-
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202163232371P | 2021-08-12 | 2021-08-12 | |
US63/232,371 | 2021-08-12 |
Publications (1)
Publication Number | Publication Date |
---|---|
WO2023018435A1 true WO2023018435A1 (en) | 2023-02-16 |
Family
ID=80218474
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
PCT/US2021/063535 WO2023018435A1 (en) | 2021-08-12 | 2021-12-15 | System for contextually driven, personalized, in-time utility for wearable electronic devices |
Country Status (1)
Country | Link |
---|---|
WO (1) | WO2023018435A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210264275A1 (en) * | 2017-10-30 | 2021-08-26 | DoorDash, Inc. | System for dynamic estimated time of arrival predictive updates |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8941500B1 (en) * | 2014-01-23 | 2015-01-27 | Google Inc. | Somatosensory type notification alerts |
US20150230022A1 (en) * | 2014-02-07 | 2015-08-13 | Samsung Electronics Co., Ltd. | Wearable electronic system |
WO2020198088A1 (en) * | 2019-03-22 | 2020-10-01 | Vitaltech Properties, Llc | Enhanced smartwatch and vitals monitor |
-
2021
- 2021-12-15 WO PCT/US2021/063535 patent/WO2023018435A1/en active Application Filing
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8941500B1 (en) * | 2014-01-23 | 2015-01-27 | Google Inc. | Somatosensory type notification alerts |
US20150230022A1 (en) * | 2014-02-07 | 2015-08-13 | Samsung Electronics Co., Ltd. | Wearable electronic system |
WO2020198088A1 (en) * | 2019-03-22 | 2020-10-01 | Vitaltech Properties, Llc | Enhanced smartwatch and vitals monitor |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210264275A1 (en) * | 2017-10-30 | 2021-08-26 | DoorDash, Inc. | System for dynamic estimated time of arrival predictive updates |
US11755906B2 (en) * | 2017-10-30 | 2023-09-12 | DoorDash, Inc. | System for dynamic estimated time of arrival predictive updates |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11594330B2 (en) | User interfaces for health applications | |
KR101927438B1 (en) | Electronic apparatus having a hole area within screen and control method thereof | |
KR102398320B1 (en) | Method for providing route information and an electronic device thereof | |
US11960699B2 (en) | User interfaces for tracking and finding items | |
US11778421B2 (en) | User interfaces for tracking and finding items | |
KR20180095409A (en) | Electronic device and method for displaying screen thereof | |
KR102459031B1 (en) | Electronic device and method for displaying application used therein | |
KR102485448B1 (en) | Electronic device and method for processing gesture input | |
KR20180020669A (en) | Electronic apparatus and method for controlling display | |
KR102413657B1 (en) | Method for sensing a rotation of rotation member and an electronic device thereof | |
KR20170058152A (en) | Electronic apparatus and method for configuring of display thereof | |
KR20170071960A (en) | Apparatus and method for providing user interface of electronic device | |
KR102356449B1 (en) | Apparatus and method for providing additional information according to rotary input | |
KR102521214B1 (en) | Method for displaying user interface and electronic device supporting the same | |
KR20170122056A (en) | Electronic device and method for inputting adaptive touch using display in the electronic device | |
KR20170137404A (en) | Method for switching application and electronic device thereof | |
KR20180129478A (en) | Electronic device for selecting external device and controlling the same and operating method thereof | |
WO2021175272A1 (en) | Method for displaying application information and related device | |
KR20170030349A (en) | Electronic device for detecting pressure of input and operating method thereof | |
KR102328102B1 (en) | Electronic apparatus and screen display method thereof | |
KR20170054746A (en) | Method and electronic device selecting an area associated with contents | |
KR20180086639A (en) | Electronic apparatus and controlling method thereof | |
KR20180010029A (en) | Method and apparatus for operation of an electronic device | |
WO2023018435A1 (en) | System for contextually driven, personalized, in-time utility for wearable electronic devices | |
KR20170092312A (en) | Electronic device and method for display controlling, and server and method therefor |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
121 | Ep: the epo has been informed by wipo that ep was designated in this application |
Ref document number: 21854769Country of ref document: EPKind code of ref document: A1 |
|
WWE | Wipo information: entry into national phase |
Ref document number: 18289640Country of ref document: US |
|
NENP | Non-entry into the national phase |
Ref country code: DE |
US6012063A - Block file system for minimal incremental data transfer between computing devices - Google Patents
Block file system for minimal incremental data transfer between computing devices Download PDFInfo
- Publication number
- US6012063A US6012063A US09/034,644 US3464498A US6012063A US 6012063 A US6012063 A US 6012063A US 3464498 A US3464498 A US 3464498A US 6012063 A US6012063 A US 6012063A
- Authority
- US
- United States
- Prior art keywords
- block
- particular block
- data
- information
- file system
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0668—Interfaces specially adapted for storage systems adopting a particular infrastructure
- G06F3/0671—In-line storage system
- G06F3/0673—Single storage device
- G06F3/068—Hybrid storage device
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0602—Interfaces specially adapted for storage systems specifically adapted to achieve a particular effect
- G06F3/061—Improving I/O performance
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0628—Interfaces specially adapted for storage systems making use of a particular technique
- G06F3/0638—Organizing or formatting or addressing of data
- G06F3/0643—Management of files
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99942—Manipulating data structure, e.g. compression, compaction, compilation
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99951—File or database maintenance
- Y10S707/99952—Coherency, e.g. same view to multiple users
- Y10S707/99953—Recoverability
Definitions
- the present invention relates generally to the area of information processing and, specifically, to system and methods for storing information in one device, particularly a portable (e.g., hand-held) computing device, and transferring that information to another computing device.
- a portable (e.g., hand-held) computing device particularly a portable (e.g., hand-held) computing device, and transferring that information to another computing device.
- portable devices are often designed with minimal input capabilities, often making data entry cumbersome or even impossible. For this reason, portable computing devices are most effective as a component of a solution involving connectivity with larger, more input capable devices such as desktop computers, laptop computers and information servers.
- Typical file systems are designed for storage and retrieval of data, focusing on storing and retrieving large amounts of data on slow electro-mechanical devices.
- Such file systems typically store information in block chains represented in a specific storage area.
- the popular "FAT" storage system represents block chains in a designated area called the File Allocation Table.
- This mechanism is well suited for large capacity, mechanical storage devices because the allocation table, a table in constant use, can be cached in computer memory and accessed without typical mechanical penalties such as seek time and transfer time.
- This type of file system is not suited for minimal data transfer.
- storage on a portable device is usually solid state (e.g., RAM or random-access memory), not mechanical.
- the issues with seek time and data transfer time are minimized--practically non-existent--with solid state storage technology. The issue of minimal data transfer remains, however.
- a portable computing device or "information appliance” is provided with a file system designed for transferring data to other computing devices.
- the portable computing device comprises a central processing unit (e.g., microprocessor) connected via a system bus to a display, an input, ports, and memory.
- the display is a screen device for displaying information, such as a liquid crystal display (LCD) screen.
- the input comprises a keypad, either physical or logical (e.g., on screen buttons), but is typically limited to a terse set numbering about three to ten buttons.
- the memory comprises persistent memory, volatile memory, and non-volatile RAM memory.
- the persistent memory is typically implemented as a ROM or read-only memory. It stores a single-purpose operating system (SPOS) and application(s).
- SPOS single-purpose operating system
- the volatile memory is a "scratch” memory, for storing temporary computation results. It typically is implemented as a RAM (random-access memory), for providing a work space for the operating system and applications.
- the non-volatile RAM memory represents battery-backed RAM memory or flash memory, for storing context information from one session to another. When the device is powered down, the memory stores user data for the last session.
- the data transfer methodology of the device employs an improved file system supporting minimal transfer of data, thereby solving the problem of disproportionate data storage and communication speed situations, such as those encountered with portable computing devices.
- the file system is implemented as a "Delta Block" File System (DBFS) comprising a file system designed specifically for the purpose of minimal delta calculation and transfer for portable storage devices which use solid state storage.
- DBFS Delta Block
- the design of the DBFS minimizes the work required to compute changes to files and, hence, allows improved data transfer.
- an insert may affect many blocks of the file, thus requiring the entire file to be transferred or requiring a complicated difference calculation to find how the file has been changed.
- change or delta calculations are simplified in the DBFS as follows. Any new, removed, or modified blocks are transferred as changes. A simple checksum, CRC (cyclic redundancy checking), or similar comparison can be used to test a block for changes. Because block modifications are isolated to the proximity of the data change, only these blocks will be involved in a transfer. Furthermore, because the delta calculation is at the block level, it can be performed without knowledge of the data itself, thereby allowing any type of data to be compared and transferred.
- CRC cyclic redundancy checking
- the Delta Block File System (DBFS) of the present invention provides an improved file system architecture for portable computing devices.
- DBFS Delta Block File System
- the present invention provides a greatly improved mechanism of transferring data between computing devices, such as when updating differences between data on a portable device and corresponding data on a host device.
- FIG. 1 is a block diagram illustrating the general architecture of a portable computing device or "information appliance" in which the present invention may be embodied.
- FIG. 2 is a block diagram illustrating implementation of the application programs as modules under the control of a module selector.
- FIG. 4 is a block diagram illustrating the difference between a file in a traditional file system with that of a file in the file system of the present invention, with respect to how storage is allocated for allowing for growth.
- FIG. 5 is a block diagram illustrating the impact of a table insert into a file in a traditional file system and into a file in the file system of the present invention.
- FIG. 6 is a block diagram illustrating a similar insert into a file in a traditional file system and into a file in the file system of the present invention, but with a larger amount of data.
- FIG. 7 is a flow chart summarizing methodology for storing and transferring information in accordance with the present invention.
- FIG. 1 is a block diagram illustrating the general architecture of a portable computing device or "information appliance" in which the present invention may be embodied.
- computing device 100 comprises a central processing unit 105 (e.g., microprocessor) connected via a system bus 140 to a display 101, an input 102, ports 103, and memory 110.
- Display 101 is a screen device for displaying information, such as a liquid crystal display (LCD) screen.
- Input 102 comprises a keypad, either physical or logical (e.g., on screen buttons), but limited to a terse set numbering about three to ten buttons and more preferably about five buttons.
- Memory 10 comprises persistent memory 111, volatile memory 120, and non-volatile RAM memory 130.
- Persistent memory 111 is typically implemented as a ROM or read-only memory. As shown, it stores a single-purpose operating system (SPOS) 112 and application(s) 113, which are described in further detail below.
- Volatile memory 120 is a "scratch" memory, for storing temporary computation results. It typically is implemented as a RAM (random-access memory), for providing a work space for the operating system and applications.
- Non-volatile RAM memory 130 represents battery-backed RAM memory or flash memory, for storing context information from one session to another. When the device 100 is powered down, the memory 130 stores user data from that session.
- the single purpose operating system functions to provide a consistent mechanism by which applications 113 can communicate with the device 100.
- applications 113 are shielded from hardware complexity, such as hardware interrupts and ports.
- hardware complexity such as hardware interrupts and ports.
- API application programming interface
- Applications 113 are software application programs or modules provided for user operation of the device. As shown in FIG. 2, for instance, the application programs can be implemented as modules 201-206, which are controlled by a module selector 200.
- the module selector 200 serves as a user interface or shell representing the top-level or "home" display presented to a user. In the currently-preferred embodiment, the module selector 200 presents the user with selection icons for navigating to different applications or modules of functionality.
- other modules include a calendar module, a to do module, and an address book module.
- device 100 comprises a REXTM portable device, such as Model REX-3 available from Franklin Electronic Publishers of Burlington, N.J. Further description of the design and operation of the device 100 is provided in commonly-owned U.S. patent application Ser. No. 08/905,463, filed Aug. 4, 1997, and entitled, USER INTERFACE METHODOLOGY FOR MICROPROCESSOR DEVICE HAVING LIMITED USER INPUT, the disclosure of which is hereby incorporated by reference.
- the device 100 is used in tandem with a desktop computer or PC.
- the desktop PC is used by the user when “at the office," and the portable computing device 100 is employed when the user is "on the road” (i.e., out of the office).
- large repositories of data reside on the desktop PC which are periodically transferred or synchronized with data residing on the portable computing device 100.
- a device input/output (I/O) protocol or standard such as the PC card standard (formerly PCMCIA standard)
- the user can easily transfer data to the device 100 via a direct memory transfer.
- data can be streamed from the desktop PC to the portable computing device via a direct cable (or infrared) connection, such as using a serial port-to-serial port connection.
- a direct cable (or infrared) connection such as using a serial port-to-serial port connection. Since the data transferred is that of an application operating on the desktop PC, potentially thousands of data items or records might be downloaded into the portable computing device 100. This potentially large data volume, coupled with the need to transfer data to and from other larger devices, poses a connectivity challenge, as connection speeds rarely match storage capacity and data size requirements. Therefore, improved data transfer methodology is desired.
- the data transfer methodology of the present invention adopts an improved file system supporting minimal transfer of data, thereby solving the problem of disproportionate data storage and communication speed situations, such as those encountered with portable computing devices.
- a minimal transfer approach entails additional difficulties, however.
- the work required to calculate the differences or "deltas" is a primary concern. Delta calculation becomes increasingly challenging if the file system of the underlying computing device is designed to store varied types of data. Ideally, the file system should be designed for minimal transfer, thus allowing for simple delta calculation for any type of data.
- a basic block structure 300 employed by the file system includes a header 301 comprising a signature section 310, a previous block section 320, a next block section 330, and a data size section 340.
- a data (storage) section 350 follows the header.
- SIGNATURE--signature and flag bits representing the validity and state of the block i.e., used, free, bad.
- PREVIOUS BLOCK--index i.e., pointer
- special value indicates NONE
- NEXT BLOCK--index i.e., pointer
- the signature section 310 stores identification information or "signature," for identifying the validity of the block.
- the previous and next block sections 320, 330 specify the position of the block in a chain of blocks.
- the data size section 340 specifies the size of the data area of the block. In the currently-preferred embodiment, the size of each block on the media is physically equal. However, the actual data area within a block, stored at section 350, can vary from block to block.
- the approach adopted by the DBFS is to minimize changes to the block chains in the file system which occur in response to typical file operations. Fewer changes to the file system result in less data begin transferred to another system.
- Table insert operations are a common operation on portable computing devices, because of the need to maintain sorted lists.
- FIG. 5 is a block diagram illustrating the impact of a table insert into a file 510 in a traditional file system and into a file 520 in the DBFS of the present invention.
- An insert near the top (e.g., block 511) of the file 510 in the traditional file system forces data to be moved (i.e., "moved up"), thus causing updates to blocks in the file after the insert point (e.g., block 513).
- An insert near the top of a DBFS file e.g., block 521) only grows the size of the data area within the affected block, thus leaving all following blocks untouched.
- FIG. 6 is a block diagram illustrating a similar insert but with a larger amount of data.
- the insert into block 611 again causes data in the file 610 of the traditional file system to move up through all blocks after the insert point (i.e., blocks 613, 615).
- the insert into the file 620 of the DBFS cannot fit within the space of the target block 621 so a new block 623 is introduced or allocated to take up the overflow. The result is impact to only two blocks in the chain.
- the design of the DBFS minimizes the work required to compute changes to files and, hence, allows improved data transfer.
- an insert may affect many blocks of the file, thus requiring the entire file to be transferred or requiring a complicated difference calculation to find how the file has been changed.
- change or delta calculations are simplified in the DBFS as follows. Any new, removed, or modified blocks are transferred as changes.
- a simple checksum, CRC (cyclic redundancy checking), or similar comparison can be used to test a block for changes (e.g., by comparing against a prior checksum for that block).
- a simple checksum for instance, can be constructed by simply adding all the units together which comprise the content of interest, such as adding together all of the byte values for the block. The approach allows the summation process to overflow or wrap around as necessary, thus yielding an end result or sum that is typically a machine word (or other convenient unit).
- the checksum or CRC value itself can be stored as an element of the block header for convenience. Because block modifications are isolated to the proximity of the data change, only these blocks will be involved in a transfer. Furthermore, because the delta calculation is at the block level, it can be performed without knowledge of the data itself, thereby allowing any type of data to be compared and transferred.
- FIG. 7 is a flow chart summarizing methodology 700 for storing and transferring information in accordance with the present invention.
- the device allocates a file system comprising a plurality of blocks linked together to form a chain of blocks for storing information.
- a request is received by the device to store information in the file system.
- the device stores variable amounts of data in the blocks, at step 703, such that at least one block which is not at the end of the chain retains unused storage space capable of storing additional information.
- the device receives a request to modify information stored in the file system. In response to this request to modify information, the device stores new data in at least one block which is not at the end of the chain, at step 705.
- the device receives a request to update information stored on another device which corresponds to information stored in the file system.
- the device transfers, at step 707, only those blocks which have changed since the information stored on the other device was last updated.
- a step would typically include a calculation of a checksum for determining which blocks have changed (e.g., as compared against a prior checksum stored in the header). Thereafter, the method is done (or continues processing other requests).
- the Delta Block File System or DBFS of the present invention provides an improved file system architecture for portable computing devices.
- the present invention provides a greatly improved mechanism of transferring data between computing devices, such as when updating differences between data on a portable device and corresponding data on a host device.
- a device would need to perform fewer flash erase cycles, thus yielding potentially longer part life and better performance for the device.
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/034,644 US6012063A (en) | 1998-03-04 | 1998-03-04 | Block file system for minimal incremental data transfer between computing devices |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/034,644 US6012063A (en) | 1998-03-04 | 1998-03-04 | Block file system for minimal incremental data transfer between computing devices |
Publications (1)
Publication Number | Publication Date |
---|---|
US6012063A true US6012063A (en) | 2000-01-04 |
Family
ID=21877705
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/034,644 Expired - Lifetime US6012063A (en) | 1998-03-04 | 1998-03-04 | Block file system for minimal incremental data transfer between computing devices |
Country Status (1)
Country | Link |
---|---|
US (1) | US6012063A (en) |
Cited By (59)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6163811A (en) * | 1998-10-21 | 2000-12-19 | Wildseed, Limited | Token based source file compression/decompression and its application |
US20020038316A1 (en) * | 2000-05-19 | 2002-03-28 | Onyon Richard M. | Single click data synchronization of public and private data |
US20020040369A1 (en) * | 2000-01-25 | 2002-04-04 | Multer David L. | Binary data synchronization engine |
US6434683B1 (en) | 2000-11-07 | 2002-08-13 | Storage Technology Corporation | Method and system for transferring delta difference data to a storage device |
US20020199017A1 (en) * | 2001-06-25 | 2002-12-26 | Russell Lance W. | Routing meta data for network file access |
US20030028554A1 (en) * | 2001-06-15 | 2003-02-06 | Oskari Koskimies | Selecting data for synchronization |
US20030046317A1 (en) * | 2001-04-19 | 2003-03-06 | Istvan Cseri | Method and system for providing an XML binary format |
US20030135725A1 (en) * | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | Search refinement graphical user interface |
US20030233383A1 (en) * | 2001-06-15 | 2003-12-18 | Oskari Koskimies | Selecting data for synchronization and for software configuration |
US6671757B1 (en) | 2000-01-26 | 2003-12-30 | Fusionone, Inc. | Data transfer and synchronization system |
US20040193802A1 (en) * | 2003-03-25 | 2004-09-30 | Emc Corporation | Reading virtual ordered writes at local storage device |
US20050038863A1 (en) * | 2003-07-21 | 2005-02-17 | Richard Onyon | Device message management system |
US6879996B1 (en) | 2000-09-13 | 2005-04-12 | Edward W. Laves | Method and apparatus for displaying personal digital assistant synchronization data using primary and subordinate data fields |
US20050097266A1 (en) * | 2003-10-31 | 2005-05-05 | International Business Machines Corporation | Chaining of blocks for optimal performance with DASD (Direct Access Storage Devices) free nonvolatile updates |
US20050099963A1 (en) * | 2000-01-26 | 2005-05-12 | Multer David L. | Data transfer and synchronization system |
US6901414B2 (en) | 2000-11-30 | 2005-05-31 | Storage Technology Corporation | Method and system of storing a main data file and deltas in a storage device for determining new data files from the main data file and the deltas |
US20050147385A1 (en) * | 2003-07-09 | 2005-07-07 | Canon Kabushiki Kaisha | Recording/playback apparatus and method |
US6925476B1 (en) | 2000-08-17 | 2005-08-02 | Fusionone, Inc. | Updating application data including adding first change log to aggreagate change log comprising summary of changes |
US20060052091A1 (en) * | 2004-05-12 | 2006-03-09 | Richard Onyon | Advanced contact identification system |
US7035878B1 (en) | 2000-01-25 | 2006-04-25 | Fusionone, Inc. | Base rolling engine for data transfer and synchronization system |
US7054953B1 (en) | 2000-11-07 | 2006-05-30 | Ui Evolution, Inc. | Method and apparatus for sending and receiving a data structure in a constituting element occurrence frequency based compressed form |
WO2006072542A1 (en) * | 2005-01-05 | 2006-07-13 | Thomson Licensing | Device and method for managing the content of a file |
US20070056043A1 (en) * | 2005-05-19 | 2007-03-08 | Richard Onyon | Remote cell phone auto destruct |
US20070106851A1 (en) * | 2005-11-04 | 2007-05-10 | Sun Microsystems, Inc. | Method and system supporting per-file and per-block replication |
US20070112895A1 (en) * | 2005-11-04 | 2007-05-17 | Sun Microsystems, Inc. | Block-based incremental backup |
US20070112891A1 (en) * | 2005-11-14 | 2007-05-17 | Apple Computer, Inc. | Converting file-systems that organize and store data for computing systems |
US20070124659A1 (en) * | 2005-11-04 | 2007-05-31 | Sun Microsystems, Inc. | Method and system for data replication |
US20070226320A1 (en) * | 2003-10-31 | 2007-09-27 | Yuval Hager | Device, System and Method for Storage and Access of Computer Files |
US7320009B1 (en) | 2003-03-28 | 2008-01-15 | Novell, Inc. | Methods and systems for file replication utilizing differences between versions of files |
US20080082421A1 (en) * | 2004-05-12 | 2008-04-03 | Richard Onyon | Monetization of an advanced contact identification system |
US7359920B1 (en) | 2001-04-18 | 2008-04-15 | Intellisync Corporation | Communication protocol for synchronization of personal information management databases |
US7379940B1 (en) * | 2000-07-20 | 2008-05-27 | Repliweb, Inc. | Focal point compression method and apparatus |
US20080215606A1 (en) * | 2004-01-23 | 2008-09-04 | Elad Baron | Focal point compression method and apparatus |
US20080214163A1 (en) * | 2007-01-26 | 2008-09-04 | Richard Onyon | System for and method of backing up content for use on a mobile device |
CN100419714C (en) * | 2002-06-10 | 2008-09-17 | 三星电子株式会社 | Flash memory file system |
US20080243960A1 (en) * | 2007-03-27 | 2008-10-02 | Microsoft Corporation | Deterministic file content generation of seed-based files |
US7512635B1 (en) * | 2000-12-18 | 2009-03-31 | Bmc Software, Inc. | System and method for updating information on a computer system using a limited amount of space |
US20090106110A1 (en) * | 2004-02-27 | 2009-04-23 | Liam Stannard | Method and system for promoting and transferring licensed content and applications |
US7526622B1 (en) | 2004-05-26 | 2009-04-28 | Sun Microsystems, Inc. | Method and system for detecting and correcting data errors using checksums and replication |
US20090144298A1 (en) * | 2007-12-04 | 2009-06-04 | Timothy Evens | Method for storing universal network performance and historical data |
US20090172338A1 (en) * | 2005-08-18 | 2009-07-02 | Johan Eker | Feedback linker for increased delta performance |
US7587446B1 (en) | 2000-11-10 | 2009-09-08 | Fusionone, Inc. | Acquisition and synchronization of digital media to a personal information space |
US7643824B2 (en) | 2004-02-27 | 2010-01-05 | Cooligy Inc | Wireless telephone data backup system |
US7818435B1 (en) | 2000-12-14 | 2010-10-19 | Fusionone, Inc. | Reverse proxy mechanism for retrieving electronic content associated with a local network |
US7895334B1 (en) | 2000-07-19 | 2011-02-22 | Fusionone, Inc. | Remote access communication architecture apparatus and method |
US8073954B1 (en) | 2000-07-19 | 2011-12-06 | Synchronoss Technologies, Inc. | Method and apparatus for a secure remote access system |
US20120066263A1 (en) * | 2010-09-13 | 2012-03-15 | Sybase, Inc. | Incremental data transfer in a database management system |
US8181111B1 (en) | 2007-12-31 | 2012-05-15 | Synchronoss Technologies, Inc. | System and method for providing social context to digital activity |
US20120159085A1 (en) * | 2010-12-21 | 2012-06-21 | Timothy Steven Potter | Methods and system for verifying memory device integrity |
US8255006B1 (en) | 2009-11-10 | 2012-08-28 | Fusionone, Inc. | Event dependent notification system and method |
US8335951B2 (en) | 2010-05-06 | 2012-12-18 | Utc Fire & Security Americas Corporation, Inc. | Methods and system for verifying memory device integrity |
US8370689B2 (en) * | 2010-05-06 | 2013-02-05 | Utc Fire & Security Americas Corporation, Inc. | Methods and system for verifying memory device integrity |
CN103092849A (en) * | 2011-10-28 | 2013-05-08 | 浙江大华技术股份有限公司 | File system cluster management method |
US8615566B1 (en) | 2001-03-23 | 2013-12-24 | Synchronoss Technologies, Inc. | Apparatus and method for operational support of remote network systems |
US20140281798A1 (en) * | 2005-12-23 | 2014-09-18 | Steven R. King | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US8943428B2 (en) | 2010-11-01 | 2015-01-27 | Synchronoss Technologies, Inc. | System for and method of field mapping |
US9542076B1 (en) | 2004-05-12 | 2017-01-10 | Synchronoss Technologies, Inc. | System for and method of updating a personal profile |
US20200066367A1 (en) * | 2018-08-22 | 2020-02-27 | International Business Machines Corporation | Memory device controller |
US20200073980A1 (en) * | 2018-08-30 | 2020-03-05 | Black Hills Ip Holdings, Llc | Maintaining docketing data integrity |
Citations (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4435752A (en) * | 1973-11-07 | 1984-03-06 | Texas Instruments Incorporated | Allocation of rotating memory device storage locations |
US4653112A (en) * | 1985-02-05 | 1987-03-24 | University Of Connecticut | Image data management system |
US4686332A (en) * | 1986-06-26 | 1987-08-11 | International Business Machines Corporation | Combined finger touch and stylus detection system for use on the viewing surface of a visual display device |
US4774655A (en) * | 1984-10-24 | 1988-09-27 | Telebase Systems, Inc. | System for retrieving information from a plurality of remote databases having at least two different languages |
US5007085A (en) * | 1988-10-28 | 1991-04-09 | International Business Machines Corporation | Remotely sensed personal stylus |
US5121396A (en) * | 1988-10-27 | 1992-06-09 | International Business Machines Corp. | Preservation of crc integrity upon intentional data alteration during message transmission |
US5175854A (en) * | 1989-06-19 | 1992-12-29 | Digital Equipment Corporation | Inter-applicataion interface system |
US5179701A (en) * | 1989-06-15 | 1993-01-12 | Intellution, Incorporation | Organizing a process database having different types of data blocks by maintaining separate tables for generic routines and for block-type specific routines |
US5224060A (en) * | 1992-07-29 | 1993-06-29 | Ma Hsi Kuang | Mobile computer with pen base/keyboard input modes |
US5309564A (en) * | 1992-03-19 | 1994-05-03 | Bradley Graham C | Apparatus for networking computers for multimedia applications |
US5313578A (en) * | 1990-12-23 | 1994-05-17 | Motorola, Inc. | Portable interprocess communication facility |
US5329619A (en) * | 1992-10-30 | 1994-07-12 | Software Ag | Cooperative processing interface and communication broker for heterogeneous computing environments |
US5471615A (en) * | 1991-12-26 | 1995-11-28 | International Business Machines Corporation | Distributed data processing system having front-end and back-end computers with different operating systems |
US5479656A (en) * | 1992-05-13 | 1995-12-26 | Rawlings, Iii; Joseph H. | Method and system for maximizing data files stored in a random access memory of a computer file system and optimization therefor |
US5519851A (en) * | 1994-03-14 | 1996-05-21 | Sun Microsystems, Inc. | Portable PCMCIA interface for a host computer |
US5561446A (en) * | 1994-01-28 | 1996-10-01 | Montlick; Terry F. | Method and apparatus for wireless remote information retrieval and pen-based data entry |
US5577177A (en) * | 1994-05-27 | 1996-11-19 | Bitstream, Inc. | Apparatus and methods for creating and using portable fonts |
US5579481A (en) * | 1992-07-31 | 1996-11-26 | International Business Machines Corporation | System and method for controlling data transfer between multiple interconnected computer systems with an untethered stylus |
US5592665A (en) * | 1993-10-04 | 1997-01-07 | U.S. Philips Corporation | Method and apparatus for fast accessing of data items from a sorted list for use with such method and/or apparatus |
US5592657A (en) * | 1992-05-01 | 1997-01-07 | Johnson; R. Brent | Console simulator, multi-console management system, and console management distribution system |
US5625819A (en) * | 1995-04-26 | 1997-04-29 | Honeywell, Inc. | Methods and apparatus for performing heap management and protecting data structure integrity in non-volatile memory |
US5630168A (en) * | 1992-10-27 | 1997-05-13 | Pi Systems Corporation | System for utilizing object oriented approach in a portable pen-based data acquisition system by passing digitized data by data type to hierarchically arranged program objects |
US5652864A (en) * | 1994-09-23 | 1997-07-29 | Ibm | Concurrent storage allocations or returns without need to lock free storage chain |
US5832310A (en) * | 1993-12-30 | 1998-11-03 | Unisys Corporation | Serial I/O channel having dependent and synchronous sources of control data and user defined data |
US5835959A (en) * | 1995-12-01 | 1998-11-10 | Sand Technology Systems International, Inc. | Memory management system and method using dual indexing structures |
US5845282A (en) * | 1995-08-07 | 1998-12-01 | Apple Computer, Inc. | Method and apparatus for remotely accessing files from a desktop computer using a personal digital assistant |
US5850565A (en) * | 1996-08-26 | 1998-12-15 | Novell, Inc. | Data compression method and apparatus |
US5864867A (en) * | 1994-09-19 | 1999-01-26 | Siemens Aktiengesellschaft | Memory management system of a computer system |
-
1998
- 1998-03-04 US US09/034,644 patent/US6012063A/en not_active Expired - Lifetime
Patent Citations (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4435752A (en) * | 1973-11-07 | 1984-03-06 | Texas Instruments Incorporated | Allocation of rotating memory device storage locations |
US4774655A (en) * | 1984-10-24 | 1988-09-27 | Telebase Systems, Inc. | System for retrieving information from a plurality of remote databases having at least two different languages |
US4653112A (en) * | 1985-02-05 | 1987-03-24 | University Of Connecticut | Image data management system |
US4686332A (en) * | 1986-06-26 | 1987-08-11 | International Business Machines Corporation | Combined finger touch and stylus detection system for use on the viewing surface of a visual display device |
US5121396A (en) * | 1988-10-27 | 1992-06-09 | International Business Machines Corp. | Preservation of crc integrity upon intentional data alteration during message transmission |
US5007085A (en) * | 1988-10-28 | 1991-04-09 | International Business Machines Corporation | Remotely sensed personal stylus |
US5179701A (en) * | 1989-06-15 | 1993-01-12 | Intellution, Incorporation | Organizing a process database having different types of data blocks by maintaining separate tables for generic routines and for block-type specific routines |
US5175854A (en) * | 1989-06-19 | 1992-12-29 | Digital Equipment Corporation | Inter-applicataion interface system |
US5313578A (en) * | 1990-12-23 | 1994-05-17 | Motorola, Inc. | Portable interprocess communication facility |
US5471615A (en) * | 1991-12-26 | 1995-11-28 | International Business Machines Corporation | Distributed data processing system having front-end and back-end computers with different operating systems |
US5309564A (en) * | 1992-03-19 | 1994-05-03 | Bradley Graham C | Apparatus for networking computers for multimedia applications |
US5592657A (en) * | 1992-05-01 | 1997-01-07 | Johnson; R. Brent | Console simulator, multi-console management system, and console management distribution system |
US5479656A (en) * | 1992-05-13 | 1995-12-26 | Rawlings, Iii; Joseph H. | Method and system for maximizing data files stored in a random access memory of a computer file system and optimization therefor |
US5224060A (en) * | 1992-07-29 | 1993-06-29 | Ma Hsi Kuang | Mobile computer with pen base/keyboard input modes |
US5579481A (en) * | 1992-07-31 | 1996-11-26 | International Business Machines Corporation | System and method for controlling data transfer between multiple interconnected computer systems with an untethered stylus |
US5630168A (en) * | 1992-10-27 | 1997-05-13 | Pi Systems Corporation | System for utilizing object oriented approach in a portable pen-based data acquisition system by passing digitized data by data type to hierarchically arranged program objects |
US5329619A (en) * | 1992-10-30 | 1994-07-12 | Software Ag | Cooperative processing interface and communication broker for heterogeneous computing environments |
US5592665A (en) * | 1993-10-04 | 1997-01-07 | U.S. Philips Corporation | Method and apparatus for fast accessing of data items from a sorted list for use with such method and/or apparatus |
US5832310A (en) * | 1993-12-30 | 1998-11-03 | Unisys Corporation | Serial I/O channel having dependent and synchronous sources of control data and user defined data |
US5561446A (en) * | 1994-01-28 | 1996-10-01 | Montlick; Terry F. | Method and apparatus for wireless remote information retrieval and pen-based data entry |
US5519851A (en) * | 1994-03-14 | 1996-05-21 | Sun Microsystems, Inc. | Portable PCMCIA interface for a host computer |
US5583978A (en) * | 1994-05-27 | 1996-12-10 | Bitstream Inc. | Apparatuses and methods for creating and using portable fonted texts with embedded automatically-created font descriptions |
US5577177A (en) * | 1994-05-27 | 1996-11-19 | Bitstream, Inc. | Apparatus and methods for creating and using portable fonts |
US5864867A (en) * | 1994-09-19 | 1999-01-26 | Siemens Aktiengesellschaft | Memory management system of a computer system |
US5652864A (en) * | 1994-09-23 | 1997-07-29 | Ibm | Concurrent storage allocations or returns without need to lock free storage chain |
US5625819A (en) * | 1995-04-26 | 1997-04-29 | Honeywell, Inc. | Methods and apparatus for performing heap management and protecting data structure integrity in non-volatile memory |
US5845282A (en) * | 1995-08-07 | 1998-12-01 | Apple Computer, Inc. | Method and apparatus for remotely accessing files from a desktop computer using a personal digital assistant |
US5835959A (en) * | 1995-12-01 | 1998-11-10 | Sand Technology Systems International, Inc. | Memory management system and method using dual indexing structures |
US5850565A (en) * | 1996-08-26 | 1998-12-15 | Novell, Inc. | Data compression method and apparatus |
Cited By (105)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6163811A (en) * | 1998-10-21 | 2000-12-19 | Wildseed, Limited | Token based source file compression/decompression and its application |
US6738789B2 (en) | 2000-01-25 | 2004-05-18 | Fusionone, Inc. | Data package including synchronization data |
US7007041B2 (en) | 2000-01-25 | 2006-02-28 | Fusionone, Inc. | Synchronization system application object interface |
US20020040369A1 (en) * | 2000-01-25 | 2002-04-04 | Multer David L. | Binary data synchronization engine |
US7035878B1 (en) | 2000-01-25 | 2006-04-25 | Fusionone, Inc. | Base rolling engine for data transfer and synchronization system |
US8621025B2 (en) | 2000-01-25 | 2013-12-31 | Synchronoss Technologis, Inc. | Mobile data transfer and synchronization system |
US6757696B2 (en) * | 2000-01-25 | 2004-06-29 | Fusionone, Inc. | Management server for synchronization system |
US20090055464A1 (en) * | 2000-01-26 | 2009-02-26 | Multer David L | Data transfer and synchronization system |
US7415486B2 (en) | 2000-01-26 | 2008-08-19 | Fusionone, Inc. | System using change log stored at a server to identify changes to user's application data for synchronizing data between systems |
US6671757B1 (en) | 2000-01-26 | 2003-12-30 | Fusionone, Inc. | Data transfer and synchronization system |
US20040054711A1 (en) * | 2000-01-26 | 2004-03-18 | Multer David L. | Data transfer and synchronization system |
US8442943B2 (en) | 2000-01-26 | 2013-05-14 | Synchronoss Technologies, Inc. | Data transfer and synchronization between mobile systems using change log |
US8315976B2 (en) | 2000-01-26 | 2012-11-20 | Synchronoss Technologies, Inc. | Data transfer and synchronization system |
US8156074B1 (en) | 2000-01-26 | 2012-04-10 | Synchronoss Technologies, Inc. | Data transfer and synchronization system |
US20050099963A1 (en) * | 2000-01-26 | 2005-05-12 | Multer David L. | Data transfer and synchronization system |
US6944651B2 (en) | 2000-05-19 | 2005-09-13 | Fusionone, Inc. | Single click synchronization of data from a public information store to a private information store |
US20020038316A1 (en) * | 2000-05-19 | 2002-03-28 | Onyon Richard M. | Single click data synchronization of public and private data |
US8073954B1 (en) | 2000-07-19 | 2011-12-06 | Synchronoss Technologies, Inc. | Method and apparatus for a secure remote access system |
US7895334B1 (en) | 2000-07-19 | 2011-02-22 | Fusionone, Inc. | Remote access communication architecture apparatus and method |
US7379940B1 (en) * | 2000-07-20 | 2008-05-27 | Repliweb, Inc. | Focal point compression method and apparatus |
US6925476B1 (en) | 2000-08-17 | 2005-08-02 | Fusionone, Inc. | Updating application data including adding first change log to aggreagate change log comprising summary of changes |
US6879996B1 (en) | 2000-09-13 | 2005-04-12 | Edward W. Laves | Method and apparatus for displaying personal digital assistant synchronization data using primary and subordinate data fields |
US7054953B1 (en) | 2000-11-07 | 2006-05-30 | Ui Evolution, Inc. | Method and apparatus for sending and receiving a data structure in a constituting element occurrence frequency based compressed form |
US6434683B1 (en) | 2000-11-07 | 2002-08-13 | Storage Technology Corporation | Method and system for transferring delta difference data to a storage device |
US7587446B1 (en) | 2000-11-10 | 2009-09-08 | Fusionone, Inc. | Acquisition and synchronization of digital media to a personal information space |
US6901414B2 (en) | 2000-11-30 | 2005-05-31 | Storage Technology Corporation | Method and system of storing a main data file and deltas in a storage device for determining new data files from the main data file and the deltas |
US7818435B1 (en) | 2000-12-14 | 2010-10-19 | Fusionone, Inc. | Reverse proxy mechanism for retrieving electronic content associated with a local network |
US7512635B1 (en) * | 2000-12-18 | 2009-03-31 | Bmc Software, Inc. | System and method for updating information on a computer system using a limited amount of space |
US8615566B1 (en) | 2001-03-23 | 2013-12-24 | Synchronoss Technologies, Inc. | Apparatus and method for operational support of remote network systems |
US7359920B1 (en) | 2001-04-18 | 2008-04-15 | Intellisync Corporation | Communication protocol for synchronization of personal information management databases |
US20090132910A1 (en) * | 2001-04-19 | 2009-05-21 | Microsoft Corporation | Method and System for Providing an XML Binary Format |
US20030046317A1 (en) * | 2001-04-19 | 2003-03-06 | Istvan Cseri | Method and system for providing an XML binary format |
US7500017B2 (en) * | 2001-04-19 | 2009-03-03 | Microsoft Corporation | Method and system for providing an XML binary format |
US20050203971A1 (en) * | 2001-06-15 | 2005-09-15 | Oskari Koskimies | Selecting data for synchronization |
US20030028554A1 (en) * | 2001-06-15 | 2003-02-06 | Oskari Koskimies | Selecting data for synchronization |
US7320011B2 (en) | 2001-06-15 | 2008-01-15 | Nokia Corporation | Selecting data for synchronization and for software configuration |
US20030233383A1 (en) * | 2001-06-15 | 2003-12-18 | Oskari Koskimies | Selecting data for synchronization and for software configuration |
US7483925B2 (en) | 2001-06-15 | 2009-01-27 | Nokia Corporation | Selecting data for synchronization |
US20020199017A1 (en) * | 2001-06-25 | 2002-12-26 | Russell Lance W. | Routing meta data for network file access |
US20030135725A1 (en) * | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | Search refinement graphical user interface |
US7096218B2 (en) * | 2002-01-14 | 2006-08-22 | International Business Machines Corporation | Search refinement graphical user interface |
CN100419714C (en) * | 2002-06-10 | 2008-09-17 | 三星电子株式会社 | Flash memory file system |
US7380082B2 (en) * | 2003-03-25 | 2008-05-27 | Emc Corporation | Reading virtual ordered writes at local storage device |
US20040193802A1 (en) * | 2003-03-25 | 2004-09-30 | Emc Corporation | Reading virtual ordered writes at local storage device |
US8306954B2 (en) | 2003-03-28 | 2012-11-06 | Oracle International Corporation | Methods and systems for file replication utilizing differences between versions of files |
US9547703B2 (en) | 2003-03-28 | 2017-01-17 | Oracle International Corporation | Methods and systems for file replication utilizing differences between versions of files |
US9934301B2 (en) | 2003-03-28 | 2018-04-03 | Oracle International Corporation | Methods and systems for file replication utilizing differences between versions of files |
US20110066594A1 (en) * | 2003-03-28 | 2011-03-17 | Piyush Kumar Srivastava | Methods and systems for file replication utilizing differences between versions of files |
US7320009B1 (en) | 2003-03-28 | 2008-01-15 | Novell, Inc. | Methods and systems for file replication utilizing differences between versions of files |
US20050147385A1 (en) * | 2003-07-09 | 2005-07-07 | Canon Kabushiki Kaisha | Recording/playback apparatus and method |
US7809728B2 (en) * | 2003-07-09 | 2010-10-05 | Canon Kabushiki Kaisha | Recording/playback apparatus and method |
US9723460B1 (en) | 2003-07-21 | 2017-08-01 | Synchronoss Technologies, Inc. | Device message management system |
US8645471B2 (en) | 2003-07-21 | 2014-02-04 | Synchronoss Technologies, Inc. | Device message management system |
US9615221B1 (en) | 2003-07-21 | 2017-04-04 | Synchronoss Technologies, Inc. | Device message management system |
US20050038863A1 (en) * | 2003-07-21 | 2005-02-17 | Richard Onyon | Device message management system |
US20070226320A1 (en) * | 2003-10-31 | 2007-09-27 | Yuval Hager | Device, System and Method for Storage and Access of Computer Files |
US7107396B2 (en) * | 2003-10-31 | 2006-09-12 | International Business Machines Corporation | Chaining of blocks for optimal performance with DASD (Direct Access Storage Devices) free nonvolatile updates |
US20050097266A1 (en) * | 2003-10-31 | 2005-05-05 | International Business Machines Corporation | Chaining of blocks for optimal performance with DASD (Direct Access Storage Devices) free nonvolatile updates |
US8244677B2 (en) | 2004-01-23 | 2012-08-14 | Elad Baron | Focal point compression method and apparatus |
US20080215606A1 (en) * | 2004-01-23 | 2008-09-04 | Elad Baron | Focal point compression method and apparatus |
US20090106110A1 (en) * | 2004-02-27 | 2009-04-23 | Liam Stannard | Method and system for promoting and transferring licensed content and applications |
US8620286B2 (en) | 2004-02-27 | 2013-12-31 | Synchronoss Technologies, Inc. | Method and system for promoting and transferring licensed content and applications |
US7643824B2 (en) | 2004-02-27 | 2010-01-05 | Cooligy Inc | Wireless telephone data backup system |
US8611873B2 (en) | 2004-05-12 | 2013-12-17 | Synchronoss Technologies, Inc. | Advanced contact identification system |
US20080082421A1 (en) * | 2004-05-12 | 2008-04-03 | Richard Onyon | Monetization of an advanced contact identification system |
US20060052091A1 (en) * | 2004-05-12 | 2006-03-09 | Richard Onyon | Advanced contact identification system |
US9542076B1 (en) | 2004-05-12 | 2017-01-10 | Synchronoss Technologies, Inc. | System for and method of updating a personal profile |
US7526622B1 (en) | 2004-05-26 | 2009-04-28 | Sun Microsystems, Inc. | Method and system for detecting and correcting data errors using checksums and replication |
WO2006072542A1 (en) * | 2005-01-05 | 2006-07-13 | Thomson Licensing | Device and method for managing the content of a file |
US20080046489A1 (en) * | 2005-01-05 | 2008-02-21 | Serge Defrance | Device and Method for Managing the Content of a File |
US20070056043A1 (en) * | 2005-05-19 | 2007-03-08 | Richard Onyon | Remote cell phone auto destruct |
US20090172338A1 (en) * | 2005-08-18 | 2009-07-02 | Johan Eker | Feedback linker for increased delta performance |
US20120005163A1 (en) * | 2005-11-04 | 2012-01-05 | Oracle America, Inc. | Block-based incremental backup |
US20070106851A1 (en) * | 2005-11-04 | 2007-05-10 | Sun Microsystems, Inc. | Method and system supporting per-file and per-block replication |
US7873799B2 (en) | 2005-11-04 | 2011-01-18 | Oracle America, Inc. | Method and system supporting per-file and per-block replication |
US20070112895A1 (en) * | 2005-11-04 | 2007-05-17 | Sun Microsystems, Inc. | Block-based incremental backup |
US7596739B2 (en) | 2005-11-04 | 2009-09-29 | Sun Microsystems, Inc. | Method and system for data replication |
US20070124659A1 (en) * | 2005-11-04 | 2007-05-31 | Sun Microsystems, Inc. | Method and system for data replication |
US7836105B2 (en) * | 2005-11-14 | 2010-11-16 | Apple Inc. | Converting file-systems that organize and store data for computing systems |
US20070112891A1 (en) * | 2005-11-14 | 2007-05-17 | Apple Computer, Inc. | Converting file-systems that organize and store data for computing systems |
US9116684B2 (en) * | 2005-12-23 | 2015-08-25 | Intel Corporation | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US10379938B2 (en) | 2005-12-23 | 2019-08-13 | Intel Corporation | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US9645884B2 (en) | 2005-12-23 | 2017-05-09 | Intel Corporation | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US9262159B2 (en) | 2005-12-23 | 2016-02-16 | Intel Corporation | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US20140281798A1 (en) * | 2005-12-23 | 2014-09-18 | Steven R. King | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US11048579B2 (en) | 2005-12-23 | 2021-06-29 | Intel Corporation | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US11899530B2 (en) | 2005-12-23 | 2024-02-13 | Intel Corporation | Performing a cyclic redundancy checksum operation responsive to a user-level instruction |
US20080214163A1 (en) * | 2007-01-26 | 2008-09-04 | Richard Onyon | System for and method of backing up content for use on a mobile device |
US20080243960A1 (en) * | 2007-03-27 | 2008-10-02 | Microsoft Corporation | Deterministic file content generation of seed-based files |
US7685211B2 (en) | 2007-03-27 | 2010-03-23 | Microsoft Corporation | Deterministic file content generation of seed-based files |
US7840544B2 (en) * | 2007-12-04 | 2010-11-23 | Cisco Technology, Inc. | Method for storing universal network performance and historical data |
US20090144298A1 (en) * | 2007-12-04 | 2009-06-04 | Timothy Evens | Method for storing universal network performance and historical data |
US8181111B1 (en) | 2007-12-31 | 2012-05-15 | Synchronoss Technologies, Inc. | System and method for providing social context to digital activity |
US8255006B1 (en) | 2009-11-10 | 2012-08-28 | Fusionone, Inc. | Event dependent notification system and method |
US8335951B2 (en) | 2010-05-06 | 2012-12-18 | Utc Fire & Security Americas Corporation, Inc. | Methods and system for verifying memory device integrity |
US8370689B2 (en) * | 2010-05-06 | 2013-02-05 | Utc Fire & Security Americas Corporation, Inc. | Methods and system for verifying memory device integrity |
US8458218B2 (en) * | 2010-09-13 | 2013-06-04 | Sybase, Inc. | Incremental data transfer in a database management system |
US20120066263A1 (en) * | 2010-09-13 | 2012-03-15 | Sybase, Inc. | Incremental data transfer in a database management system |
US8943428B2 (en) | 2010-11-01 | 2015-01-27 | Synchronoss Technologies, Inc. | System for and method of field mapping |
US20120159085A1 (en) * | 2010-12-21 | 2012-06-21 | Timothy Steven Potter | Methods and system for verifying memory device integrity |
CN102591733B (en) * | 2010-12-21 | 2016-08-03 | Utc消防和保安美国有限公司 | Method and system for verifying memory device integrity |
CN102591733A (en) * | 2010-12-21 | 2012-07-18 | Utc消防和保安美国有限公司 | Methods and system for verifying memory device integrity |
CN103092849A (en) * | 2011-10-28 | 2013-05-08 | 浙江大华技术股份有限公司 | File system cluster management method |
US20200066367A1 (en) * | 2018-08-22 | 2020-02-27 | International Business Machines Corporation | Memory device controller |
US20200073980A1 (en) * | 2018-08-30 | 2020-03-05 | Black Hills Ip Holdings, Llc | Maintaining docketing data integrity |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6012063A (en) | Block file system for minimal incremental data transfer between computing devices | |
US8898384B2 (en) | Fast accessible compressed thin provisioning volume | |
US7647355B2 (en) | Method and apparatus for increasing efficiency of data storage in a file system | |
US8260818B1 (en) | Method, apparatus, and computer-readable medium for space-efficient storage of variables in a non-volatile computer memory | |
US8407446B2 (en) | Simultaneously supporting different block sizes on a single hard drive | |
EP1039387B1 (en) | System for replicating data | |
AU722146B2 (en) | A device driver for accessing computer files | |
US7966353B2 (en) | Method and system for flexibly providing shared access to non-data pool file systems | |
US9342528B2 (en) | Method and apparatus for tiered storage | |
US7634494B2 (en) | Flash memory directory virtualization | |
EP0798656A2 (en) | File system level compression using holes | |
EP1580664B1 (en) | Computing device with relatively limited storage space and operating / file system thereof | |
US20070143369A1 (en) | System and method for adding a storage server in a distributed column chunk data store | |
US20080043774A1 (en) | Method, System and Program Product for Determining an Initial Number of Connections for a Multi-Source File Download | |
EP1999595A1 (en) | File-based compression on a fat volume | |
US20100115006A1 (en) | Computing device with relatively limited storage space and operating/file system thereof | |
US20220129428A1 (en) | Database key compression | |
US8055839B2 (en) | Maintaining reserved free space at the end of a physical volume for creating new segments of segmented logical volumes in the reserved free space | |
JP3731859B2 (en) | Method and apparatus for data storage and retrieval of handheld devices | |
CN111159296A (en) | Storage capacity expansion method, device, equipment and readable storage medium | |
CN100365601C (en) | Emulation system and emulation method | |
US7711758B1 (en) | Method, apparatus, and computer-readable medium for storing character strings in a human interface infrastructure database | |
US6988179B2 (en) | Method, system, and program for ordering of physical extents | |
US20020087593A1 (en) | Method for dynamic function loading in spreadsheets on small devices | |
US6625614B1 (en) | Implementation for efficient access of extended attribute data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: STARFISH SOFTWARE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BODNAR, ERIC O.;REEL/FRAME:009033/0097Effective date: 19980304 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER NO LONGER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: STOL); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:STARFISH SOFTWARE, INC.;REEL/FRAME:014692/0621Effective date: 20030326 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:035354/0420Effective date: 20141028 |
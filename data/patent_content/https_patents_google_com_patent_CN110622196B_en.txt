CN110622196B - Evaluating a model dependent on aggregated historical data - Google Patents
Evaluating a model dependent on aggregated historical data Download PDFInfo
- Publication number
- CN110622196B CN110622196B CN201880031437.8A CN201880031437A CN110622196B CN 110622196 B CN110622196 B CN 110622196B CN 201880031437 A CN201880031437 A CN 201880031437A CN 110622196 B CN110622196 B CN 110622196B
- Authority
- CN
- China
- Prior art keywords
- simulation
- events
- functions
- time series
- member counts
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 230000001419 dependent effect Effects 0.000 title description 3
- 230000006870 function Effects 0.000 claims abstract description 192
- 238000004088 simulation Methods 0.000 claims abstract description 149
- 238000000034 method Methods 0.000 claims abstract description 56
- 238000012545 processing Methods 0.000 claims abstract description 26
- 238000012795 verification Methods 0.000 claims abstract description 10
- 230000005012 migration Effects 0.000 claims description 32
- 238000013508 migration Methods 0.000 claims description 32
- 230000008859 change Effects 0.000 claims description 22
- 238000002156 mixing Methods 0.000 claims description 11
- 238000004458 analytical method Methods 0.000 abstract description 24
- 230000007704 transition Effects 0.000 description 71
- 230000000694 effects Effects 0.000 description 44
- 230000009466 transformation Effects 0.000 description 35
- 238000004891 communication Methods 0.000 description 19
- 238000013500 data storage Methods 0.000 description 19
- 230000006399 behavior Effects 0.000 description 16
- 238000003860 storage Methods 0.000 description 16
- 238000010586 diagram Methods 0.000 description 14
- 238000009826 distribution Methods 0.000 description 14
- 238000012360 testing method Methods 0.000 description 14
- 230000003442 weekly effect Effects 0.000 description 12
- 238000006243 chemical reaction Methods 0.000 description 11
- 230000003993 interaction Effects 0.000 description 9
- 230000008569 process Effects 0.000 description 9
- 230000001932 seasonal effect Effects 0.000 description 9
- 229920006395 saturated elastomer Polymers 0.000 description 8
- 238000007726 management method Methods 0.000 description 7
- 239000004941 mixed matrix membrane Substances 0.000 description 7
- 238000000877 multi-layer micromoulding Methods 0.000 description 7
- 238000004590 computer program Methods 0.000 description 6
- 208000018910 keratinopathic ichthyosis Diseases 0.000 description 6
- 239000004065 semiconductor Substances 0.000 description 6
- 230000008685 targeting Effects 0.000 description 6
- 208000003443 Unconsciousness Diseases 0.000 description 5
- 230000009471 action Effects 0.000 description 5
- 230000007935 neutral effect Effects 0.000 description 5
- 239000008186 active pharmaceutical agent Substances 0.000 description 4
- 230000004888 barrier function Effects 0.000 description 4
- 230000005540 biological transmission Effects 0.000 description 4
- 230000002860 competitive effect Effects 0.000 description 4
- 230000033001 locomotion Effects 0.000 description 4
- 239000000203 mixture Substances 0.000 description 4
- 238000010295 mobile communication Methods 0.000 description 4
- 230000004044 response Effects 0.000 description 4
- 239000002253 acid Substances 0.000 description 3
- 239000011159 matrix material Substances 0.000 description 3
- 230000001360 synchronised effect Effects 0.000 description 3
- 238000011282 treatment Methods 0.000 description 3
- 206010020772 Hypertension Diseases 0.000 description 2
- 241000699670 Mus sp. Species 0.000 description 2
- 230000002776 aggregation Effects 0.000 description 2
- 238000004220 aggregation Methods 0.000 description 2
- 230000008901 benefit Effects 0.000 description 2
- 235000015496 breakfast cereal Nutrition 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 230000009977 dual effect Effects 0.000 description 2
- 238000011156 evaluation Methods 0.000 description 2
- 239000000835 fiber Substances 0.000 description 2
- 238000012417 linear regression Methods 0.000 description 2
- 230000007774 longterm Effects 0.000 description 2
- 238000005259 measurement Methods 0.000 description 2
- 230000006855 networking Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000005192 partition Methods 0.000 description 2
- 230000002250 progressing effect Effects 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 238000012384 transportation and delivery Methods 0.000 description 2
- 238000003491 array Methods 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000003542 behavioural effect Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 235000013339 cereals Nutrition 0.000 description 1
- 230000001186 cumulative effect Effects 0.000 description 1
- 230000001351 cycling effect Effects 0.000 description 1
- 230000008021 deposition Effects 0.000 description 1
- 201000010099 disease Diseases 0.000 description 1
- 208000037265 diseases, disorders, signs and symptoms Diseases 0.000 description 1
- 239000003814 drug Substances 0.000 description 1
- 229940079593 drug Drugs 0.000 description 1
- 230000005674 electromagnetic induction Effects 0.000 description 1
- 230000007613 environmental effect Effects 0.000 description 1
- 238000012854 evaluation process Methods 0.000 description 1
- 238000001125 extrusion Methods 0.000 description 1
- 235000013305 food Nutrition 0.000 description 1
- 238000009472 formulation Methods 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 238000002955 isolation Methods 0.000 description 1
- 238000011068 loading method Methods 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000003340 mental effect Effects 0.000 description 1
- 230000006996 mental state Effects 0.000 description 1
- 239000002184 metal Substances 0.000 description 1
- 230000009022 nonlinear effect Effects 0.000 description 1
- 230000000737 periodic effect Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 238000013439 planning Methods 0.000 description 1
- 238000001556 precipitation Methods 0.000 description 1
- 230000001737 promoting effect Effects 0.000 description 1
- 238000011160 research Methods 0.000 description 1
- 230000035945 sensitivity Effects 0.000 description 1
- 238000005245 sintering Methods 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000000638 solvent extraction Methods 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 229920000638 styrene acrylonitrile Polymers 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
- 238000010200 validation analysis Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2458—Special types of queries, e.g. statistical queries, fuzzy queries or distributed queries
- G06F16/2465—Query processing support for facilitating data mining operations in structured databases
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/242—Query formulation
- G06F16/2433—Query languages
- G06F16/244—Grouping and aggregation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
- G06F17/10—Complex mathematical operations
- G06F17/18—Complex mathematical operations for evaluating statistical data, e.g. average values, frequency distributions, probability functions, regression analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0201—Market modelling; Market analysis; Collecting market data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
- G06F17/10—Complex mathematical operations
- G06F17/16—Matrix or vector computation, e.g. matrix-matrix or matrix-vector multiplication, matrix factorization
Abstract
Systems and methods for model verification are described. The system and method for model verification includes: first and second time series of subdivision states are generated for a dataset representing a simulated population, such as a set of member counts corresponding to respective segments of the simulated population. The first and second time series of subdivision states are generated by processing the data set through first and second simulations, respectively, each of the first and second simulations comprising an iterative application of a plurality of event functions. The first and second simulations differ in at least one capacity, e.g., one includes a first event function configured with a first parameter, and the second does not. An analysis of the difference between the first time series and the second time series may be compared to an analysis of one of the time series using the topic model. The comparison is then used to verify the model or prove accuracy, inaccuracy, and/or deviation of the model from the performance metric.
Description
Cross-reference to related patent applications
The present application claims the benefit and priority of U.S. patent application Ser. No.15/707,594 filed on 18/9/2017, the entire disclosure of which is incorporated herein by reference.
Background
Complex systems involving a large number of variables may be affected by a number of different factors. Models have been developed to attempt to measure or quantify the impact of individual factors. However, these models cannot control the effects of other factors. As a result, the validity or accuracy of these models may vary as well as the validity or accuracy of the assessments or predictions generated by these models. These models are a measurement tool that can be calibrated and adjusted. To calibrate a metrology tool, the tool should be applied to a standard of known accuracy. However, for many complex systems, there are no known repeatable criteria.
This problem can be seen, for example, in a model for evaluating marketing strategies and identifying how changes in marketing strategies affect key performance indicators. Marketing models (e.g., media mixing models ("MMM")) typically analyze aggregated historical data representing real-world events that cannot be reconstructed (e.g., due to external variables out of the field of view or control of the modeler). There is a need for a reliable market simulation that can be built to evaluate ground truth (ground trunk) of a marketing model that relies on aggregated historical data.
Disclosure of Invention
Systems and methods for model verification are described. The system and method for model verification includes: first and second time series of segment states are generated for a dataset representing a simulated population, such as a set of member counts corresponding to individual segments (segments) of the simulated population. The first and second time series of subdivision states are generated by processing the data set through first and second simulations, respectively, each of the first and second simulations comprising an iterative application of a plurality of event functions. The first and second simulations differ in at least one capacity, e.g., one includes a first event function configured with a first parameter, and the second does not. An analysis of the difference between the first time series and the second time series may be compared to an analysis of one of the time series using the topic model. The comparison is then used to verify the model or prove accuracy, inaccuracy, and/or deviation of the model from the performance metric.
In at least one aspect, a method of model validation is described, the method comprising: a data set representing a simulated population is generated by a data simulator comprising a processor, the data set comprising a set of member counts corresponding to individual segments of the simulated population according to a subdivision scheme. The method includes generating a first time series of subdivision states by processing a data set through a first simulation, the first simulation including an iterative application of a first plurality of event functions, the first plurality of event functions including a first event function configured with a first parameter, and generating a second time series of subdivision states by processing the data set through a second simulation, the second simulation including an iterative application of a second plurality of event functions, wherein the second plurality of event functions does not include the first event function configured with the first parameter. The method includes identifying a first value of a performance metric, the first value representing a difference between a first time series and a second time series. The method includes identifying, for a topic model, a second value of a performance metric, the second value being output by applying the topic model to one of the first time series or the second first time series. The method then determines a validity score of the topic model with respect to the performance metric by comparing the first value to the second value.
The following is a detailed description of various concepts related to these and similar methods, devices, and systems, and embodiments thereof. The various concepts introduced above and discussed in more detail below may be implemented in any of a variety of ways, as the described concepts are not limited to any particular implementation.
Drawings
The above and related objects, features and advantages of the present disclosure will be more fully understood by reference to the following detailed description when taken in conjunction with the accompanying drawings in which:
FIG. 1A is a block diagram illustrating an example computing environment suitable for use in the various embodiments described herein;
FIG. 1B is a block diagram illustrating an example computing device suitable for use in the various embodiments described herein;
FIG. 2A is an illustration of a timeline on which a simulator iteratively migrates a population between segments;
FIG. 2B illustrates an example of actions that may be performed in each of a set of activity states and activities that may occur;
FIG. 3A is a block diagram of an example transition function (transition function);
FIG. 3B is a block diagram of an example transition function for modeling the impact of a media channel (channel);
FIG. 3C is a block diagram of an example transition function for modeling the impact of online marketing;
FIG. 4A is a graph of demand curves for multiple segments in a contention-free environment;
fig. 4B, 4C, and 4D are graphs of purchase probability plotted against price change in a competitive environment;
FIG. 5 is a flow chart of a method for iteratively applying a transition function to population segment data;
FIG. 6 is a flow chart of an example method for model verification; and
fig. 7A and 7B are histograms of estimates for media channels or ROAS and mROAS distributions from an example simulation.
For purposes of clarity, not every component may be labeled in every drawing. The figures are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
Complex systems involving a large number of variables include, for example, weather prediction systems, market analysis systems, traffic prediction systems, elevator demand prediction systems, and the like. In general, these (and other) complex systems may be affected by a number of different factors. For example, weather prediction uses models based on variables such as precipitation level, humidity, barometric pressure, temperature, wind speed, and movement of the transition front. While it is easy to know whether the prediction is accurate (e.g., rains when it is predicted to rain, or not), it may be difficult to know how much effect any one variable has exerted (e.g., rains due to a drop in temperature or vice versa. Similarly, in advertising, it is difficult to know how much sales are driven by advertising costs, and more particularly, how much sales are driven by advertising costs in one format (e.g., broadcast media) compared to advertising costs in another format (e.g., online advertising). The advertising industry uses models (e.g., media mixing models, "MMMs") to evaluate the effectiveness of advertising strategies (e.g., key performance indicators, "KPIs," such as return on investment, "ROIs"). The media mix model is sometimes referred to as a mixed media model or a marketing mix model. As with weather or traffic predictions, the models used are typically retrospective, and the aggregate historical data is analyzed to estimate how much an advertising strategy contributes to achieving a particular goal (e.g., conversion). Advertisers may use these models to predict future advertising costs. Online advertising networks are typically part of many of these policies, and advertisers of the networks are using industry models to rank advertising products of the networks. However, these models come from external suppliers and function in a variety of different ways, typically a "black box", some of which favor the supplier's preferred philosophy or methodology. These biases may be reflected in good or bad on the online advertising network, which thus creates confusion on the market as to actual value.
Systems for validating a third party model and methods of validating a third party model are described herein. This may be analogous to verifying the accuracy of a particular scale or thermometer, rather than directly measuring distance or temperature. Briefly, according to some embodiments, a simulator is launched with an initial group data set (which may be based on actual group status or randomly generated) that is partitioned according to one or more classifications (e.g., market interests, saturation, interest activities, brand preferences/loyalty, and admission (access)). A simulator iteratively applies transition functions to the data, each transition function simulating an incremental change in population distribution over a segment based on a corresponding event or desire. For example, the simulator may include a transition function corresponding to a television advertisement for the next week at a particular budget. The simulation establishes a "ground truth". The simulation may be rerun on the same initial population data set with a change in the function or parameters for the function, and a comparison between different simulation runs illustrates the cumulative effect of the change. For example, a simulated run that sets a television advertising budget to zero may justify the ROI of the television advertising budget as compared to a simulated run that sets the television advertising budget to a value greater than zero. If the parameters and functions are sufficiently accurate, a retrospective model looking at the final data should assign the same (or similar) value to a given KPI. Thus, by applying the model to the test history generated by the simulation, the model can be verified using the simulation.
One example simulation described herein is referred to as an aggregate marketing system simulator ("AMSS"). AMSS is a simulation tool that is capable of generating aggregate level time series data related to marketing metrics (e.g., channel level marketing expenditures, web site visits, competitor expenditures, pricing, sales volume, etc.). It simulates the movement of a consumer between discrete latency states according to a markov model. The simulation is capable of generating marketing data over a wide range of marketing/modeling scenarios and establishing "ground truth" for marketing impact. (e.g., return on advertisement costs, marginal return on advertisement costs, optimized marketing budget allocation, etc.). It is an assessment tool that simulates marketing systems at the aggregation level. The model evaluation framework is divided into three parts: (1) a data simulation model; (2) A method of reporting the ground truth of key marketing metrics under any setting of data simulation; and (3) a system for evaluating the marketing method against the simulated data. The model is evaluated based on its ability to accurately estimate key marketing metrics, such as the rate of return on advertising expenditures ("ROAS"). Estimates from the model (applied to data from the AMSS simulation) are compared to the "ground truth" established by the simulation.
These simulations, including AMSS, are described with reference to an illustrative example computing environment and are used to evaluate models. However, the application of these simulations is not limited to this example. The described simulations and evaluations have applications not limited to marketing and advertising.
FIG. 1A is a block diagram illustrating an example computing environment 100. The computing environment 100 includes a communication network 110 through which media devices 120 receive media content. Media device 120 may include a passive media receiver device and/or an interactive media presentation device. The communication network 110 may include, for example, a television and/or radio broadcast infrastructure, a satellite communication infrastructure, a cable media infrastructure, a telephone network, and/or a data network such as the internet. The computing environment 100 includes data processing systems ("servers") such as a distributor server 130, a model analysis server 140, and a simulation server 150. These servers may use data storage systems such as the distributor data store 136 and the analog data store 156. FIG. 1B, described in more detail below, is a block diagram illustrating an example computing device 101, the example computing device 101 being suitable for use as a certain type of media device 120 or for being configured as any of the servers 130, 140, and 150 shown in FIG. 1A. FIG. 1B also illustrates an example network 110 that enables communication between various nodes, such as between servers 130, 140, and 150, and/or between servers 130, 140, and 150 and media device 120.
Still referring to fig. 1A, and in more detail, the network 110 enables communication between various nodes (e.g., between the distributor server 130 and the media devices 120). The network 110 may include, for example, a broadcast network, a telephone network, a cable network, and a data network such as the internet. In general, a data network enables communication between various nodes ("network devices"), such as computing device 101 (shown in fig. 1B). In some embodiments, data flows from a source node to a destination node through network 110 as a stream of data packets, for example in the form of data packets according to the open systems interconnection ("OSI") layer. The packet stream may be transmitted via network 110 layered over an OSI layer 3 network protocol (e.g., IPv4 or IPv 6), such as the internet protocol ("IP"), using, for example, an OSI layer 4 transport protocol, such as user datagram protocol ("UDP"), transmission control protocol ("TCP"), or stream control transmission protocol ("SCTP"). Network 110 is comprised of various network devices ("nodes") that are linked together to form one or more data communication paths between participating devices. Each networking device includes at least one network interface for receiving and/or transmitting data. For example, in some data networks, data is transmitted as one or more data packets. The internet is an exemplary data network; however, other networks may be used. Network 110 may comprise an autonomous system ("AS"), i.e., a network that operates under consistent, unified routing policies (or at least appears to be such from outside the AS network) and is typically managed by a single management entity (e.g., a system operator, administrator, or management group). Network 110 may be comprised of a plurality of connected subnetworks or AS networks that may meet at one or more of the following: an intermediate network ("transport network"), a dual home gateway node, a point of presence ("POP"), an internet exchange point ("IXP"), and/or additional other network boundaries. The network 110 may be a local area network ("LAN"), metropolitan area network ("MAN"), wide area network ("WAN"), internetwork such as the Internet, or a peer-to-peer network, such as an Ad Hoc WiFi peer-to-peer network. The data links between nodes in network 110 may be any combination of physical links (e.g., fiber optic, mesh, coaxial, twisted pair, such as Cat-5 or Cat-6, etc.) and/or wireless links (e.g., radio, satellite, microwave, etc.). The network 110 may include an operator network for mobile communication devices, e.g., a network implementing wireless communication protocols such as the Global System for Mobile communications ("GSM"), code division multiple Access ("CDMA"), time division synchronous code division multiple Access ("TD-SCDMA"), long term evolution ("LTE"), or any other such protocols, including but not limited to so-called "3G", "4G", and "5G" protocols. Network 110 may include a radio, television, cable, and/or satellite broadcast network. Network 110 may include a short-range wireless link, sometimes referred to as a personal area network ("PAN") or mesh network, for example, via WiFi, bluetooth, BLE, or ZIGBEE. The network may be a public network, a private network, or a combination of public and private networks. The network 110 may be any type and/or form of data network and/or communication network.
Suitable example media devices 120 include, for example, televisions, television auxiliary boxes (e.g., cable converters and tuners, also referred to as "set top boxes"), media streaming devices, video gaming devices (including multi-purpose games and media streaming devices), tablet computers, data telephones ("smart" phones), radio receivers, voice recognition "assistant" devices, wearable devices (e.g., "smart" watches), public media displays (e.g., digital banners and billboards), and the like. In some cases, media device 120 is a client computing system or processor-based device that executes applications, presents output to a user, and receives input from a user. The client computing system may be any kind of computing device including, for example, a desktop computer, a laptop computer or notepad computer, a mobile device such as a tablet computer or electronic board, a personal digital assistant, a smart phone, a video game device, a television or television set-top box, a kiosk, or any other such device capable of presenting media received via network 110. In some implementations, the media device 120 includes one or more hardware elements for facilitating data input and/or data presentation, such as function keys, a keyboard, programmable "soft" keys, a remote control, an indicator light, a display, a touch screen, a microphone, a speaker, and/or a haptic feedback device. In some implementations, the media device 120 is implemented using application specific logic circuitry (e.g., an application specific integrated circuit ("ASIC")). In some implementations, the media device 120 is implemented using a system-on-a-chip (SoC) semiconductor device including at least one processor (or microprocessor) core. In some implementations, the media device 120 is implemented using a general purpose computing processor. FIG. 1B, described in more detail below, illustrates a computing device 101 suitable for use as a media device 120 in some configurations.
In some implementations, the media device 120 runs an operating system that manages execution of software applications on the media device 120. In some cases, an operating system is provided with the media device 120. In some implementations, the media device 120 executes an application, such as a browser application (e.g., a Web browser), that is capable of receiving data formatted according to a set of hypertext application protocols (e.g., hypertext transfer protocol ("HTTP") and/or HTTP encrypted by transport layer security ("HTTPs")). In some such implementations, the browser facilitates interaction with one or more servers via an interface presented at the media device 120 in the form of one or more web pages. In some cases, a browser application is provided with the media device 120. In some implementations, the media device 120 executes a custom application, such as a media streaming application, a game, or any other application that interacts with a server (e.g., the distributor server 130). Interactions between the custom application and the distributor server 130 via the network 110 may use standard protocols such as HTTP and HTTPs, or may use application-specific protocols such as custom application layer protocols implemented over transport layer protocols (e.g., UDP, TCP or SCTP). In some implementations, one or more of the servers in communication with the media device 120 support a custom instruction set, e.g., an application programming interface ("API"), and a custom application executing on the media device 120 implements the API. An application may implement an API using, for example, a library or software development kit ("SDK") provided to an application developer.
In some implementations, some media devices 120 may act as client devices in interactions with model analysis server 140, e.g., to request or obtain analysis data. In some implementations, some media devices 120 may act as client devices in interactions with simulation server 150, e.g., to request or obtain simulation data. In some implementations, some media devices 120 may be media receivers that may not be suitable for such interactions.
Media device 120 may receive data from or exchange data with various servers, such as distributor server 130. In some implementations, one or more of servers 130, 140, and 150 are implemented using application specific logic circuits (e.g., application specific integrated circuits ("ASICs")). In some implementations, one or more of servers 130, 140, and 150 are implemented using a system-on-a-chip ("SoC") semiconductor device including at least one processor (or microprocessor) core. In some implementations, one or more of servers 130, 140, and 150 are implemented using a general purpose computing processor. FIG. 1B, described in more detail below, illustrates a computing device 101 suitable for use as a distributor server 130, model analysis server 140, and/or simulation server 150 in some configurations.
In fig. 1A, a distributor server 130 provides media distribution and/or statistics collection regarding media distribution. For example, the distributor server 130 may be a media streaming server (e.g., as part of a content delivery network ("CDN"), may be a media access server, may be a content selection server, and/or may be a statistics collection server (e.g., collect statistics of media requests, audience coverage, coupon usage, redirection, page browsing, impressions, clicks, conversions, etc.). The distributor server 130 uses the distributor data store 136, for example, to obtain media for distribution, to select content for distribution, and/or to store statistical information about the distribution of the media.
Model analysis server 140 is a computing system that provides analysis of historical data, for example, using one or more analysis models. For example, in some implementations, the model analysis server 140 accesses "real world" data from the distributor data store 136 to provide one or more values for the performance metrics using a model, such as a media mixing model ("MMM"). Performance metrics may include, for example, return on investment ("ROI"), advertisement payout return ("ROAS"), marginal advertisement payout return ("mraas"), etc. In some implementations, the model analysis server 140 may be configured to access simulation data from the simulation data store 156 to run similar analysis on human data. In some implementations, the model analysis server 140 does not determine whether the data in the simulated data storage 156 is manual. In some implementations, the model analysis server 140 is configured to perform additional analysis, such as comparing the analysis results of the model to expected results (e.g., from simulations), and identifying marginal errors.
Simulation server 150 is a computing system that runs simulations and manages data for the simulations. Simulation server 150 is configured to access simulation data store 156 to store simulation data and to obtain simulation configurations. In some implementations, simulation server 150 provides interfaces (e.g., web pages, custom applications, APIs, etc.) for modelers to configure and execute simulations. The simulation will be described in more detail below.
Data stores 136 and 156 may each be implemented using one or more data storage devices. The data storage device may be any memory device suitable for storing computer readable data. The data storage device may include a device with fixed storage or a device for reading removable storage media. Examples include all forms of non-volatile memory, media and memory devices, semiconductor memory devices (e.g., EPROM, EEPROM, SDRAM and flash memory devices), magnetic disks, magneto-optical disks, and optical disks (e.g., CD ROM, DVD-ROM, or BLU-RAY disks). Example implementations of suitable data storage devices include storage area networks ("SANs"), network attached storage ("NAS"), and redundant storage arrays (e.g., a "RAID" array). In some implementations, the data store 190 hosts (host) a relational database, for example, using a relational database management system ("RDBMS"). In some implementations, the data store 190 manages data stored as files (e.g., XML files).
FIG. 1B is a block diagram of an example computing device 101. According to an illustrative embodiment, the example computing device 101 is suitable for use in implementing the computerized components described herein. Computing device 101 may be used, for example, to implement illustrative media device 120, distributor server 130, model analysis server 140, simulation server 150, and/or various other illustrative systems described in this disclosure. In general, computing device 101 includes a processor 102, where processor 102 is configured to perform actions in accordance with instructions (e.g., instructions stored in cache 103). The illustrated example computing device 101 includes one or more processors 102 and coprocessors 104 in communication with a main memory 106, a network interface controller 107, input/output ("I/O") interfaces 108, and nonvolatile data storage 109 via a bus 105. In some implementations, the computing device 101 may include additional interfaces or other components 116. Typically, the processor 102 loads instructions from the memory 106 (or from the non-volatile data storage 109) into the cache memory 103, loads instructions from the cache memory 103 into on-board registers, and executes instructions from the on-board registers. In some implementations, instructions are encoded into and read from a read only memory ("ROM") or firmware memory chip (e.g., which stores instructions for a basic input/output system ("BIOS")) not shown. As shown, the processor 102 is directly connected to the cache memory 103; however, in some embodiments, cache memory 103 is integrated into processor 102 or implemented on the same circuit or chip as processor 102. Some implementations include multiple levels or stages of cache 103, each of which is further removed from processor 102. Some embodiments include multiple processors 102 and/or coprocessors 104 that augment the processor 102 (e.g., math coprocessors, floating point coprocessors, and/or graphics coprocessors) with support for additional dedicated instructions. As shown, the coprocessor 104 is closely coupled to the processor 102; however, in some embodiments, the coprocessor 104 is integrated into the processor 102 or implemented on the same circuit or chip as the processor 102. In some implementations, the coprocessor 104 is further removed from the processor 102, e.g., connected to the bus 105. The network interface controller 107 controls one or more network interfaces 117 to connect to the network device 114 (e.g., for accessing the network 110). The I/O interface 108 facilitates the sending and receiving of data to various I/O devices 118, including but not limited to keyboards, pointing devices (mice, trackballs, etc.), touch screens, microphones, motion sensors, video displays, speakers, haptic feedback devices, printers, etc. In some implementations, one or more I/O devices 118 are integrated into the computing device 101. In some implementations, one or more I/O devices 118 are external to computing device 101 and may be separate from computing device 101. In some implementations, computing device 101 is implemented using special-purpose logic circuitry, such as an application specific integrated circuit ("ASIC") or a system-on-a-chip ("SoC") semiconductor device including processor 102 and one or more additional components, such as cache 103, network interface controller 107, and network interface 117, and one or more I/O interfaces 108.
In more detail, the processor 102 may be any logic circuitry that processes instructions, such as instructions fetched from the cache 103, the main memory 106, the nonvolatile data storage 109, or other memory not shown. The processor 102 includes a plurality of data and instruction registers. In some implementations, after startup ("boot"), the processor 102 loads initial instructions from the BIOS (including instructions for loading more instructions) into registers and executes the instructions from the registers. In some implementations, the BIOS instructions cause the processor 102 to load an operating system ("OS"), which in turn causes the processor 102 to load and execute one or more programs. The processor 102 may be enhanced by one or more auxiliary coprocessors 104, which are auxiliary processing units having a dedicated instruction set for a particular purpose. In some implementations, the processor 102 facing the unidentified instruction will pass the instruction to the coprocessor 104, e.g., via a special bus, and generate an unidentified instruction fault only if the coprocessor 104 does not also recognize the instruction. Processor 102 and coprocessor 104 may each be single-core or multi-core processor(s). The computing device 101 may include a plurality of different processors 102 and/or a plurality of different coprocessors 104. For example, in some embodiments, a general purpose processor 102, such as a multi-core central processing unit ("CPU"), may be augmented with one or more special purpose coprocessors 104, such as math coprocessors, floating point coprocessors, or graphics processing units ("GPUs"). For example, math co-processor 104 may assist processor 102 in performing high precision or complex computations. In some implementations, the processor(s) 102 and coprocessor 104 are implemented as circuitry on one or more "chips. The computing device 101 may be based on any processor 102 or group of processors 102 and/or coprocessors 104 capable of operating in the manners described herein.
Cache memory 103 is typically a form of computer memory that is placed in close proximity to processor 102 to achieve fast access times. In some implementations, cache 103 is a memory circuit either as part of processor 102 or on the same chip as processor 102. In some implementations, there are multiple levels of cache 103, e.g., L2 and L3 cache layers. In some implementations, multiple processors 102 and/or multiple cores of the processors 102 share access to the same cache 103.
Main memory 106 may be any device suitable for storing computer-readable data. Main memory 106 is a device that supports direct access to specified addresses; that is, the main memory 106 is a random access memory ("RAM"). In some implementations, the main memory 106 is a volatile semiconductor memory device, such as dynamic random access memory ("DRAM"), synchronous dynamic random access memory ("SDRAM"), double data rate SDRAM ("DDR SDRAM"), static random access memory ("SRAM"), T-RAM, Z-RAM, and the like. Computing device 101 may have any number of devices that function as main memory 106.
The non-volatile data storage 109 may be any device suitable for storing computer readable data between power cycles. In some implementations, the non-volatile data storage 109 is a device having a fixed storage medium (e.g., a magnetic disk), such as a hard disk drive ("HDD"). In some embodiments, the nonvolatile data storage 109 is a device having removable storage media such as magnetic disks (e.g., floppy disk drives or removable HDDs), magnetic tape, magneto-optical disks, or optical disks (e.g., CD ROM, DVD-ROM, or BLU-RAY disks). In some implementations, the non-volatile data storage 109 is a non-volatile semiconductor memory device, such as an erasable programmable read-only memory ("EPROM"), an electrically erasable programmable read-only memory ("EPROM"), or a flash memory. In some implementations, the main memory 106 is a solid state drive ("SSD"), for example, which uses multi-level cell ("MLC") NAND-based flash memory. Computing device 101 may have any number of devices that function as non-volatile data storage 109.
Still referring to FIG. 1B, bus 105 is an interface that provides for the exchange of data between various internal components of computing device 101, such as connecting processor 102 to main memory 106, network interface controller 107, I/O interface 108, and nonvolatile data storage 109. In some implementations, bus 105 also provides for data exchange with one or more components external to computing device 101 (e.g., other components 116). In some implementations, the bus 105 includes serial and/or parallel communication links. In some implementations, bus 105 implements a data bus standard such as integrated drive electronics ("IDE"), peripheral component interconnect express ("PCI"), small computer System interface ("SCSI"), or universal serial bus ("USB"). In some implementations, the computing device 101 has multiple buses 105.
Computing device 101 may include an interface 108 or provide interface 108 for one or more input or output ("I/O") devices 118. Input devices include, but are not limited to, keyboards, pointing devices (mice, trackballs, etc.), touch screens, touch pads (e.g., electromagnetic induction pads, electrostatic pads, capacitive pads, etc.), handwriting pens, microphones, joysticks, foot pedals, inertial measurement units ("IMUs"), accelerometers, gyroscopes, tilt sensors, motion sensors, environmental sensors, and musical instrument digital interface ("MIDI") input devices, such as MIDI instruments (e.g., MIDI keyboards). Output devices include, but are not limited to, video displays, speakers, haptic feedback devices, refreshable Braille terminals, lamps, servers, MIDI output devices (e.g., MIDI synthesizers), two-dimensional or three-dimensional printers (including, but not limited to, inkjet printers, laser printers, thermal image printers, stereolithography printers, extrusion deposition printers, and metal sintering printers).
Network 110 enables communication between various nodes, such as computing device 101 and network device 114. In some embodiments, data flows from a source node to a destination node through network 110 as a stream of data packets, for example in the form of data packets according to the open systems interconnection ("OSI") layer. The packet stream may be transmitted via network 110 layered over an OSI layer 3 network protocol (e.g., IPv4 or IPv 6), such as the internet protocol ("IP"), using, for example, an OSI layer 4 transport protocol, such as user datagram protocol ("UDP"), transmission control protocol ("TCP"), or stream control transmission protocol ("SCTP"). Network 110 is comprised of various network devices ("nodes") that are linked together to form one or more data communication paths between participating devices. Each networking device includes at least one network interface for receiving and/or transmitting data (typically as one or more data packets). One exemplary network 110 is the internet; however, other networks may be used. Network 110 may be an autonomous system ("AS"), i.e., a network that operates under consistent, unified routing policies (or at least appears to be such from outside the AS network) and is typically managed by a single management entity (e.g., a system operator, administrator, or management group). Network 110 may be comprised of a plurality of connected subnetworks or AS networks that may meet at one or more of the following: an intermediate network ("transport network"), a dual home gateway node, a point of presence ("POP"), an internet exchange point ("IXP"), and/or additional other network boundaries. The network 110 may be a local area network ("LAN"), metropolitan area network ("MAN"), wide area network ("WAN"), internetwork such as the Internet, or a peer-to-peer network, such as an Ad Hoc WiFi peer-to-peer network. The data links between nodes in network 110 may be any combination of physical links (e.g., fiber optic, mesh, coaxial, twisted pair, such as Cat-5 or Cat-6, etc.) and/or wireless links (e.g., radio, satellite, microwave, etc.). The network 110 may include an operator network for mobile communication devices, e.g., a network implementing wireless communication protocols such as the Global System for Mobile communications ("GSM"), code division multiple Access ("CDMA"), time division synchronous code division multiple Access ("TD-SCDMA"), long term evolution ("LTE"), or any other such protocols, including but not limited to so-called "3G", "4G", and "5G" protocols. Network 110 may include a short-range wireless link, sometimes referred to as a personal area network ("PAN") or mesh network, for example, via WiFi, bluetooth, BLE, or ZIGBEE. The network may be a public network, a private network, or a combination of public and private networks. The network 110 may be any type and/or form of data network and/or communication network.
The network interface controller 107 manages the exchange of data with devices in the network 110 (e.g., the network device 114) via a network interface 117 (sometimes referred to as a network interface "port"). The network interface controller 107 handles the physical and data link layers of the open systems interconnection ("OSI") model for network communications. In some implementations, the tasks of some network interface controllers are handled by the processor 102 and/or the coprocessor 104. In some embodiments, the network interface controller 107 is incorporated into the processor 102, for example, as circuitry on the same chip. In some implementations, the computing device 101 has multiple network interfaces 117 controlled by a single controller 107. In some implementations, the computing device 101 has a plurality of network interface controllers 107. In some implementations, each network interface 117 is a connection point of a physical network link (e.g., cat-5 Ethernet link). In some implementations, the network interface controller 107 supports wireless network connectivity, and the interface 117 is a wireless (e.g., radio) receiver/transmitter (e.g., for any IEEE 802.11WiFi protocol, near field communication ("NFC"), bluetooth low energy ("BLE"), ZIGBEE, ANT, or any other wireless protocol). In some implementations, the network interface controller 107 implements one or more network protocols, such as ethernet. Typically, computing device 101 exchanges data with other computing devices via a physical or wireless link through network interface 117. The network interface 117 may be directly linked to another device or linked to another device via an intermediary device, such as network device 114 connecting the computing device 101 to the network 110, the network device 114 being, for example, a hub, bridge, switch, or router.
Network device 114 may be a hub, a switch, a router, a modem, a bridge, another computing device 101, or any other network node. In some implementations, the network device 114 is a network gateway. In some implementations, the network device 114 is a routing device implemented using customized hardware, such as a dedicated processor and/or ternary content addressable memory ("TCAM").
Other components 116 may include alternative I/O interfaces, external serial device ports, and any other coprocessors 104 connected via bus 105. For example, computing device 101 may include an interface (e.g., a universal interface serial bus ("USB") interface) for connecting an external input device, an output device, or an additional memory device (e.g., a portable flash drive or an external media drive).
The computing device 101 shown is suitable for implementing a system for managing or organizing data. For example, in some implementations, the computing device 101 hosts a database. The database (or more specifically, a database management system ("DBMS")) organizes data according to database definitions (e.g., database schemas). For example, in a relational database, the DBMS maintains data in a table-like data structure. In a relational database, data is entered into "columns" within "rows," where columns represent specific data types, categories, or groupings, and rows represent associations between data in respective columns; the columns and rows form a table. In some cases, an entry (or combination of entries) will associate a row from one table with one or more rows in another table. In some DBMS implementations, a virtual table called a "view" represents data that is pulled from one or more tables as if it were a table (i.e., the view appears to a database client or user as if it were a table, but it is not necessarily so stored). Other types of database management systems may also be used, including various types of relational databases, object-oriented databases, document-oriented databases, extensible markup language ("XML") databases, noSQL databases, and the like. Many of these database types use tables or table-like structures in a manner similar to that described above with reference to the relational database. In some database implementations, data is stored or represented in a different manner than tables, e.g., as a collection of data tuples.
A client or user of the database may add data to, modify data in, or retrieve data from the database using database instructions (e.g., queries in a database query language such as structured query language ("SQL"). One or more database instructions may be grouped together into a database transaction. Traditionally, databases provide transaction atomicity, consistency, isolation, and durability. These properties are abbreviated as "ACID". In some embodiments, the DBMS provides all ACID attributes. However, in some embodiments, the DBMS does not provide all ACID attributes.
One example simulation described herein is referred to as an aggregate marketing system simulator ("AMSS"). AMSS is designed to generate aggregate time series data that is generated from natural consumer behavior and changes in that behavior due to marketing interventions. By partitioning the example consumer population into different groups based on features that characterize the consumer's relationship to categories and brands, the AMSS is designed to generate the aggregate time series data. In the simulation, each segment is represented as a count of consumers that fit the corresponding segment; AMSS simulation does not track individuals. Consumers in different segments have different media consumption patterns, reactions to advertisements, purchasing behavior, etc. Over time, the relationship of a given consumer to a category and/or brand may change in response to uncontrolled forces (e.g., seasonal and competitive activities) as well as marketing interventions by the advertising host. These changes are reflected in the AMSS simulation by adjusting population counts appropriate for each segment to represent the migration of the consumer to the segment reflecting its new mind. The change in population subdivision then results in a change in population aggregation behavior. For example, marketing interventions increase the sales of advertisers by moving consumers to sections corresponding to higher probabilities of making purchases in categories and/or purchasing advertised brands.
FIG. 2A is a diagram 200 of a timeline 210 in which a simulator iteratively migrates a population between partitions. Diagram 200 reflects a simplified scenario in which a simulator tracks a population of one hundred people divided into four compartments. The diagram 200 includes a timeline 210 upon which various events 220 are applied iteratively. Based on each iteration event, e.g., in the first subdivision state 230 a And then subdivision state 230 b A segmented population 230 is shown. The various marketplaces driving consumer behavior are conceptualized as an ordered sequence of events 220 that repeat over time intervals. Each event 220 corresponds to a particular non-actionable or actionable having its own impact on the consumer's handling and behavior. The change in consumer disposition is reflected by the migration of consumers from pre-event population segments to post-event population segments 230. In addition, each event generates observable data. In particular, fig. 2A depicts a scenario with four repeating events: seasonal, television, pay search, and sales. "seasonal" events reflect non-actionable forces that change market size over time, and drive consumer migration into and out of the market for that category. Electric power The look-and-pay search is a marketing intervention of the ad master control. Their driving is often beneficial to the migration of advertisers, and they also generate relevant data, such as media volume and expense. The last event 220 shown in FIG. 2A is a "sell" event that generates sales for advertisers and competitors. It may also drive migration; for example, consumer loyalty or mindsets to advertiser brands may change as part of the post-purchase evaluation process.
Each event 220 affects all subsequent events by changing the population subdivision 230. This linkage effect supports modeling interactions between different influences (e.g., television advertisements may motivate brand queries, thereby increasing the volume of search inventory) and helps accurately represent complex relationships in marketing systems. AMSS provides flexibility in event sets, event design, and event ordering. The event specification is described in more detail below. Modelers may be free to add or remove specific market forces from the simulation and may alter event specifications and ordering to reflect different consumer behavior models. Checking the performance of analytical methods over a wide range of scenarios allows modelers to find and design methods that are robust to a wide range of statistical problems.
Population subdivision 230 represents changes in consumer mental state. AMSS conceptualizes consumer ideas as discrete hidden variables with respect to category and advertiser brands; it then uses the consumer's mind to subdivide the population. Between the compartments, the mental differences may lead to behavioral differences due to media consumption and response to purchasing behavior. The aggregate behavior of the population is determined by the size of each compartment. For example, if a high proportion of consumers belong to a compartment corresponding to high brand loyalty, the advertiser brand will have a higher market share. AMSS subdivides a population along six dimensions, each dimension tracking a particular aspect of consumer relationship to a category or brand. The first three dimensions track consumer relationships to categories and are referred to as "category status". The latter three dimensions track consumer relationships with advertiser brands and are referred to as "brand status". Six-element tuples s = (s 1, s2, s3, s4, s5, s 6) may represent a compartment, each value in the tuple describing consumer mind in a corresponding dimension. The following table (table 1) lists six categories and brand status and corresponding status. More detailed information about the meaning and usage of each category and brand status will be given below.
TABLE 1
Market status. The market state specifies whether group members should be considered part of a pool (pool) of potential consumers for that category. This allows us to mark a part of the population as being completely uninteresting to that category even under the most friendly purchase conditions (e.g., high marketing pressure, low pricing). As an example, the market for drugs for treating hypertension consists only of those diagnosed with this disease. Those without hypertension will never consider purchasing, whether any marketing intervention is taken.
AMSS divides the population into "in-market" and "out-of-market" individuals. The number of individuals within the market for a certain class of merchandise may vary over time. Some variations are seasonal, i.e. they repeat in a periodic pattern, for example once a year. For example, travel categories have a yearly seasonal nature that is responsive to school years, national holidays, weather patterns, and the like. There may also be a more general trend to affect "in-market" populations. Examples include the increasing adoption of smartphones, resulting in an ever-increasing app market, the impact of economic factors on luxury goods, and the impact of gasoline prices on SUV sales. AMSS allows modelers to specify both seasonal patterns and more general trends in market participation rates.
Saturation state. The saturation state specifies whether past purchases have met someone's needs for that category. In AMSS, the consumer is either "saturated" or "unsaturated". Unsaturated individuals may become saturated after making purchases in this category; saturated individuals eventually become unsaturated over time. Tracking saturation allows the AMSS to model the impact of sales slip, for example, after price increases. Both the advertiser's own promotions and the competitor's promotions may cause a drop in demand in the next few weeks, as this is an effect of the entire category. In the real world, the time required for the saturation effect to fade out depends on the category. In the category where the demand for perishable food products is fast cycling, for example, the saturation rapidly disappears. In categories where purchase intervals are longer (e.g., travel or durable goods categories), saturation disappears slower. In simulation, the decay rate is part of the model specification.
An active state. The activity state tracks the location of the consumer along the path of purchase. AMSS partitions the population into three active states: "inactivity", "exploratory" and "purchase". Consumers in different activities have different media consumption behaviors, different responses to marketing, and different purchasing behaviors.
FIG. 2B illustrates an example of actions 260 that a consumer may perform in each activity state 270 and marketing campaigns that may occur. Marketing interactions and purchase activities may move consumers from inactive state 272 to exploratory state 274, or from exploratory stage 274 to conversion events (e.g., purchases 276).
An "inactive" individual is not currently engaged in any activity related to that category. Of course, they do not make purchases in that category. Nor do they exhibit any observable interest in that category, such as by conducting search queries or online site visits related to the category. "exploratory" individuals are considering making purchases and conducting related activities to assist them in making their decisions. For example, a "exploratory" group may conduct general and brand search queries as part of the decision making process. They still have not decided to make purchases in that category. Individuals who reach the "buy" state are in the process of making purchases. This may be located at a brand-specific location (e.g., a brand website), or may be located at an unspecified location (e.g., department store, grocery store, fare information collection business). The brand selected by the individual in the process of making the purchase depends on factors such as brand favourites, brand loyalty, brand availability and price at the time of purchase.
Tracking consumer activity status allows the simulator to distinguish marketing tools for different audience in terms of coverage (reach) and accuracy. Mass marketing media formats such as television and radio will cover consumers in a wide range of active states, while other media such as paid searches tend to be directed to a smaller number of consumers farther down the purchase path. Tracking the activity state also allows the simulator to follow the natural and marketing-affected progress along the purchased path. For the advertiser to sell, the consumer must be brought to a "buy" state.
Brand favour status. Brand popularity measures consumer opinion of brands. In general, a high level of brand favorability corresponds to a high probability of purchasing an advertiser brand. In AMSS, consumers are divided into five groups based on brand popularity: "unconscious", "disfavored", "neutral", "somewhat favored" and "favored" consumers. Marketing tools may increase brand sales by increasing brand favourites. Note that brands of multiple brands may all be high at the same time, and thus, high brands of favor do not automatically suggest brand purchases or brand loyalty.
Brand loyalty status. Consumers may be faithful to the advertiser's brand, faithful to competitors, or have differentiated loyalty. AMSS tracks brand loyalty through brand loyalty status; the consumer has a "loyalty", "competitor loyalty" or "switcher" status. It is important to distinguish brand favourites from brand loyalty. Brand loyalty is exclusive, whereas brand favorability is not; consumers may have a high appreciation for multiple brands. The probability of purchasing from a competitor is small for consumers that are faithful to a particular brand. Consumers that are neither faithful to advertisers nor competitors are called "switchers"; at the time of purchase, these consumers may choose from among multiple brands based on price, convenience, and other factors.
Brand availability status. Brand availability refers to the physical and psychological availability of an advertiser's brand to consumers, i.e., the ease with which the brand is purchased physically or psychologically. Brand availability is actually affected by the brand distribution, i.e., the presence of the brand at the retail location. Some marketing interventions may appeal to the consumer's attention to the brand or increase its convenience; these increase the psychological usability of the brand. For example, point of purchase displays direct the advertised brand to the consumer's attention by conspicuous placement at the point of sale. In online space, search advertisements make brands more visible on search results pages, thereby increasing the psychological availability of brands. This helps to attract sales from "switchers" who do not have strong brand favourites.
In AMSS, brand availability may be "low", "average", or "high" for each consumer. For example, consider modeling the impact of physical distribution on breakfast cereal sales. If a certain brand of cereal is available only at 70% of grocery and convenience stores, the brand availability should be "average" for 70% of the consumers purchasing breakfast cereals from the store with that brand, and "low" for the other 30% of the population. Efforts to increase distribution have increased brand availability for certain consumers from "low" to "average". In-store displays increase brand availability for certain consumers from "average" to "high".
In some cases, only some subset of the possible sub-combinations are used. In AMSS, only consumers who are both "in the market" and "unsaturated" can move out of the "inactive" active state. This strengthens the following concept: an individual who is "off-market" or "saturated" is not interested in making purchases in that category and will not participate in the activity associated with the purchase. As a result, as shown in table 2 below, there are only six valid category segments (s 1, s2, s 3). Second, only consumers with "favourite" brand favourites may be loyal. This is reflected in table 3 below. The following table illustrates the resulting 198 possible segment tuples (s 1, s2, s3, s4, s5, s 6):
Market for the production of | Saturation level | Activity |
"out of market" | "saturation" | "Inactive" |
"out of market" | "unsaturation" | "Inactive" |
"in market" | "saturation" | "Inactive" |
"in market" | "unsaturation" | "Inactive" |
"in market" | "unsaturation" | Exploratory property " |
"in market" | "unsaturation" | "purchase" |
TABLE 2
Favourite degree | Loyalty degree |
"unconsciousness" | "switcher" |
Disfavor " | "switcher" |
"neutral" | "switcher" |
"some favour" | "switcher" |
"favour" | "switcher" |
"favour" | "loyal" |
"unconsciousness" | "competitor loyalty" |
Disfavor " | "competitor loyalty" |
"neutral" | "competitor loyalty" |
"some favour" | "competitor loyalty" |
"favour" | "competitor loyalty" |
TABLE 3 Table 3
There are six possible rows of category tuples in table 2, and ten rows of possible brand pairs in table 3, representing sixty-six total possible combinations. Each of the sixty six possible combinations may be paired with a "low", "average" or "high" availability. This represents one hundred ninety eight possible segment tuple (s 1, s2, s3, s4, s5, s 6). In some embodiments, fewer combinations may be used. For example, some embodiments may determine that a consumer is unlikely to have both a "favored" rating for brands and a "competitor loyalty. In some embodiments, additional combinations or section classes may be used. For example, some embodiments may allow consumers to have a "somewhat favored" rating for brands and also be "loyal".
As will be described in more detail below, the population may be placed into the segments based on the subdivision tuples. In some embodiments, the simulated population is randomly placed in an initial segment state. In some embodiments, the simulated population is placed in the initial segment state with an equal distribution. In some implementations, a simulated population is placed in an initial segment state with a distribution representing a known "real world" state. In some embodiments, the simulated community is placed in an initial segment state that suggests a new product or new market entry, e.g., no brand awareness or loyalty.
The simulation moves the population from one segment to another based on a transition function that represents an event (e.g., the example event 220 shown in fig. 2A). The transition function migrates the population through state transitions, for example, as shown in fig. 2B. In some embodiments, the simulation generates a time series of various population states as the simulation progresses through iterative application of a transition function. The time series may represent, for example, the impact of a marketing campaign or strategy over time. These time sequences can then be used to build ground truth for model verification.
Fig. 3A is a block diagram 300 of an example transition function 320. The transition function 320 accepts the initial subdivision state 310 and generates a resultant subdivision state 390. Each transition function 320 is configured by a parameter. For example, the illustrated transition function 320 accepts a range (reach) parameter 342 and a budget/rate (rate) parameter 346. The illustrated transition function 320 is also limited by an effect limit parameter 348. These parameters control how the transition function 320 migrates the population between segments. For example, the audience size 350 is determined by the overlay 342, while the impact volume 360 is determined by the budget/ratio parameter 346. Also, the effect limit parameter 348 limits the effect zoom 382 and the resulting migration 384. The transformation function 320 applies the parameters to generate the resulting subdivision 390. Fig. 3B and 3C each illustrate a particular implementation of the transition function 320, and are described in more detail below.
Some embodiments use different transformation functions 320 to model the behavior of each advertisement channel (e.g., audience targeting (targeting) and advertisement effectiveness for that channel). Simulation server 150 then orders these events into custom simulation scenarios. Each transition function 320 takes as input the current population subdivision and returns an updated population subdivision. Some implementations also have a transition function 320 that returns additional related output variables (e.g., media payout and/or media volume). The transition function 320 is parameterized to provide a flexible framework for specifying interrelated media variables (e.g., costs and volumes) and their impact on population subdivision (e.g., budget/rate parameters 346). The behavior of a particular media channel is specified by parameterization of the appropriate transformation function 320. For example, a transition function modeling the impact of online placement associated with a search term specifies how query volumes, impressions, clicks, and search expenditures are generated. Different parameterizations specifying query rates and click rates for each community segment may be used to create separate brands and general search events from the same module.
Simulation server 150 applies an ordered sequence of transition functions 320, each modeling a corresponding event or event type to drive migration between segments. There are many different kinds of events, each of which drives consumer migration in its own particular manner. For example, consumer treatments for certain categories and brands may change and evolve over time even without marketing intervention. Some events reflect these natural forces that drive changes in consumer mind. Other events reflect the effects of market intervention (e.g., media advertising). The act of making purchases in this category may also change the mind of the consumer. For example, the consumer may become saturated and/or loyal. The transition function 320 models these various events and event types. In one example, fig. 3B illustrates a transition function 320 that simulates the effects of media marketing (e.g., television marketing). In another example, FIG. 3C illustrates a transition function 320 that simulates the effects of online marketing. In fig. 3B and 3C, the input parameters specified by the modeler are represented by ellipses, and the internally generated values are represented by rectangles; the shaded rectangle represents the "hidden" value, while the unshaded rectangle represents the "view" variable.
The market size for a particular class of goods or services naturally varies over time. For example, the market size of travel categories, such as vacation wheels, is affected by the leisure time of the consumer and the available revenue. The market is seasonal due to changes in annual holiday and holiday schedules. The travel market also reacts to economic changes that affect consumer's available revenue. Natural migration of a population between "in-market" and "out-of-market" segments reflects both seasonal variations and more general trends in the interest of the population in that category. In AMSS, natural migration is the first event in each time interval. That is, for each time interval (e.g., each simulated week), the natural forces will determine the origin, with the marketing intervention being built on the resulting baseline. When natural migration brings a large number of individuals into the "in-market" section, marketing efforts have more opportunities to motivate brand purchases; the low market participation period correspondingly limits the opportunities for marketing.
Fig. 3B is a block diagram 372 of a media impact function 374, the media impact function 374 being a transition function 320 for modeling the impact of a media channel. The media impact function 374 simulates the impact of media marketing (e.g., television marketing or radio broadcast marketing). A modeler using the media impact function 374 may specify parameter values that control audience size and composition, media volume and expense, and media availability of the media channel according to various simulation needs. Fig. 3B depicts the structure of a media impact function 374 used in AMSS. The media impact function 374 accepts parameterizations of audience, expense, volume, and effect. Some variables (e.g., weekly payouts) generated by the media impact function 374 may be observed, while other variables are hidden. In particular, the population migration caused by the media is calculated as the "effect" of the media impact function 374, which is typically not available in real world analysis such as MMM research.
In some implementations, the media impact function 374 calculates the media audience as follows. Each media channel has its own audience, i.e., a community that interacts with the media. This audience segment is the largest segment that can be reached by advertisements in a particular media channel. For example, the audience may be the number of viewers of a television program or the number of households reading a particular newspaper. Accessibility (accessibility) of a segment of a community may be described as the probability of a consumer from the segment audience to become part of the media channel audience within a given time interval. The heterogeneity of reachability across community segments reflects the ability of media channels to target consumers with different levels of interest for that category and/or brand. Mass marketing tools such as televisions will lead to a broad segment of the covered population with very rough guidance. More targeted media covers individuals with prior interest in that category and/or brand at a higher rate. In AMSS, modelers specify reachability for each population segment. Audience size is calculated based on the current size and reachability of the segments.
In some implementations, the media impact function 374 calculates weekly spending as follows. Weekly spending is calculated from the budget and barrier (weighting) pattern of the media channel. In the simulation setup, the time intervals are divided into groups called budget periods, each of which gives a target payout called budget. The barrier mode specifies the proportion of the budget to be allocated to each week during the budget period. Budget allocated to a budget period (e.g., one year) is one mechanism by which advertisers can control media planning. Budgets are divided into weekly payouts based on barrier patterns. For example, suppose the modeler specifies a budget of $100 to be paid out over a budget period of 4 weeks, the barrier mode is (0.20,0.00,0.65,0.15); advertisers pay $ 20 for the first week, $ 0 for the second week, $ 65 for the third week, and $ 15 for the fourth week. In some implementations, the media impact function 374 uses the budget allocated to the media channel to determine the values of dependent variables, such as weekly spending and media volume. The budget is the observed variable that is controlled by the advertisement. It is defined as the target payout of media channels over a particular range of time intervals, referred to as a budget period. For example, advertisers may allocate one million dollars to newspaper channels in the fourth quarter of 2016.
In some implementations, the media impact function 374 calculates the media volume as follows. The volume is the total number of exposures to a particular media content for consumers in a given section during a particular time interval. The volume is calculated from weekly payouts based on a cost function. For example, a simple cost function is the unit cost per exposure. Some embodiments allow for changing weekly unit costs by means of mean and variance parameters.
In some implementations, the media impact function 374 calculates the coverage and frequency as follows. Coverage of a community segment refers to the number of consumers in the segment that are exposed to an advertiser's advertisement in a media channel at least once during a time interval. In some embodiments, it is calculated based on the audience size and the total amount of exposure to the segment. For example, the coverage may be calculated based on the audience size within the segment and the overall amount of advertisement exposure for the segment. Some embodiments are based on the assumption that the advertisement exposure for each individual occurs as an independent Poisson (Poisson) process using a normal approximation. The average frequency is the average number of advertisement exposures among consumers having at least one advertisement exposure. It is calculated based on the exposure volume for a certain section divided by the coverage within that section.
In some implementations, the media impact function 374 updates the population segments as follows. The amount of migration in the population subdivision driven by a given iteration of the media impact function 374 depends on the coverage and frequency. The coverage determines the affected population, i.e., the population with potential for migration. The frequency determines the migration probability. Consumers exposed to advertisements are likely to migrate to new community segments; thus, the affected population in each segment is covered. The migration probability depends on the frequency of advertisement exposure and the effectiveness of these advertisements. At high frequencies, consumers in the media audience will be based on the transformation matrix Q (k) Migration between segments, the conversion matrix Q (k) The maximum migration probability between segment pairs (for modeling the media channel "k") is specified. In some embodiments, the conversion matrix Q (k) Is defined as the product of successive transitions in each dimension affected by marketing (e.g., a subdivision dimension corresponding to factors for category activity, brand favorites, brand loyalty, and brand availability). That is, for media channel "k" and dimension "l", the transition of segment "s" may beFor example, the transition of the active state driven by television advertisement is represented by Q (tv,activity) And (5) determining. To specify a 20% chance of transitioning an "inactive" consumer to an "exploratory" active state and a 10% chance of transitioning an "inactive" consumer to a "purchasing" active state, the modeler would compare Q (tv,activity) Is set (0.7,0.2,0.1).
At lower frequencies, the probability of migration from one segment to another is smaller. Thus, the maximum probability is scaled against the exposure frequency according to the Hill equation. The Hill equations are S-shaped, making them convenient for parameterizing the media model to increase payback (at lower frequencies) and decrease payback (at greater frequencies).
The parameter κ is half the maximum effective concentration, i.e. the frequency at which H (f) =1/2. The zeta parameter ζ is the maximum slope of the curve H (f).
The Hill transform has several desirable characteristics; at the right-hand limit of the limit, H (++) a) of (c) 1, forced Q (k) Is defined as defining a maximum migration probability, and the hill transformation also produces a reduced return as the average frequency increases.
The media impact function 374 described herein is capable of modeling the behavior of many conventional media channels (e.g., television, radio broadcasts, and printed matter). Using different parameterizations of the media impact function 374, the modeler may include various media channels, each channel having its own coverage, targeting, exposure frequency, expense, and effectiveness to drive sales or other conversion events (e.g., drive website visitors, incentivize participation in live campaigns, or other advertising objectives).
FIG. 3C is a block diagram 376 of an online marketing impact function 378, the online marketing impact function 378 being a transition function 320 for modeling the impact of online marketing. Some marketing efforts differ in structure from the media channel model described above. For example, online marketing has inventory restrictions (e.g., restrictions on impressions), and auction-based pricing systems may be used (e.g., automatic auctions for placement based on contextual factors such as search keywords or page content).
The online marketing impact function 378 depicted in fig. 3C is similar in some respects to the media impact function 374 depicted in fig. 3B. The increased complexity allows interactions with other media channels in a complex manner, and seasonal changes in the community. For example, previous events in the simulated path that change the state of the population may affect the volume and its effectiveness in the online marketing influencing function 378. For example, the activity state may affect the probability of a consumer conducting a related brand agnostic search, and both the activity state and the brand state may affect the probability of a consumer conducting a related brand search. Brand favorites and brand loyalty also affect the click-through rate ("CTR") of consumers, i.e., the probability that they click on a brand's online advertisement. The online marketing impact function 378 also considers other features such as organic search campaigns without paid advertisements, which allows modelers to identify incremental impact on organic searches.
One of the complexities of the online marketing impact function 378 depicted in FIG. 3C in distinguishing it from the media impact function 374 depicted in FIG. 3B is the active budget for controlling impression delivery. The modeler may specify how the activity settings of the search will change in response to the budget. As in the media impact function 374, the budget represents a target payout in the channel over a fixed budget period (e.g., one year). However, in online marketing, advertisers may control search costs by adjusting weekly cost limits, bids, or keyword listings. This may be reflected in the online marketing influencing function 378.
In some implementations, the modeler specifies (for the online marketing impact function 378) a function that maps the budget to an upper weekly expense limit. For example, the budget may be evenly allocated over several weeks in the budget period. Alternatively, the advertiser may not have an upper bound payout (upper bound = ≡), and the volume of paid search pays is affected by other controls. For example, the modeler may specify a function that maps the budget to a weekly bid (per keyword or reduced to a single value for all keywords). Advertisers may increase bids, for example, linearly with an annual budget. Alternatively, the advertiser may set a constant bid and influence the volume of paid search pays by other controls. As another example, the modeler may specify a function mapping a budget to a keyword list length. As the keyword list increases, the simulated volume of matching queries by the population will also increase.
In some embodiments of the online marketing influencing function 378, the query volume is calculated as followsAmount of the components. The members of each group segment may have different levels of interest in the offer (offer) category and/or brand, and thus different probabilities of conducting relevant online queries. This consideration affects media with different levels of targeting. The query volume is based in part on the audience range. The audience is the number of people making queries that match a list of keywords associated with (or targeted to) the online marketing campaign. The audience may be calculated based on the population of each segment, the probability that members of each segment have to make related queries, and the proportion of those queries covered by the keyword list. Consumers in different segments have different probabilities of making brand agnostic and brand queries, depending on their level of interest in the category and/or brand. Paid searches are typically directed to higher levels of category and/or brand interest. Advertisements are typically searched, for example, for individuals in a "exploratory" or "purchasing" activity state. Brand search advertisements are directed to segments with a higher level of brand popularity and brand loyalty. The targeting gives advertisers confidence that the group exposed to the search advertisement has a higher and more immediate level of interest in the category and/or brand. Modeling multiple channels with different levels of targeting allows modelers to explore challenges related to selection bias. In some cases, each member of the audience is based on having a ratio (rate) λ that can be specified by the modeler (k) And (3) carrying out the query of the matching keyword list.
In some implementations of the online marketing influencing function 378, effects are calculated similar to the effects of the media influencing function 374. However, one difference is in the expression (formulation) of the effect size. The effect size may vary from query volume, impression, and interaction ("click"). Given the audience and search volume, the following can be calculated: the number of people who are queried on the keyword list but are not advertised by the advertiser; the number of people that are advertised but not interacted with (e.g., they may interact with competitor advertisements or natural search results); and the number of people interacting (e.g., clicking) with the paid advertisement of the advertiser.
In some embodiments, the conversion transformation function is used to model whether the consumer will or will notConversion events are performed, such as making purchases or accepting offers (offers). In AMSS, this conversion transformation function is used as the last transformation function in each iteration time period. During this event, the AMSS calculates the advertiser sales y for each segment for time interval t t And competitor sales z for each sector t . Furthermore, changes in consumer mind after purchase may result in changes in population subdivision, which may be accounted for by transforming the transformation function.
FIG. 4A is a graph of demand curves for multiple segments in a contention-free environment. The depicted group section has an activity status of "purchase", brand loyalty "switcher" and brand availability "average". Brand favourites are favourite (solid line), somewhat favourite (dashed line), neutral (dotted line), unconscious (long dashed line) or negative (dash-dot line).
Fig. 4B, 4C, and 4D are graphs of purchase probabilities plotted against price change in a competitive environment. At any price p, the height of the light shaded area is equal to the purchasing probability r of the competitor brand (z) Corresponding to the above. The combined height of the dark shaded areas and the purchase probability r of the advertiser brand (y) Corresponding to the above. As described in more detail below, ω designates the degree to which brands and competitors sell as alternatives to each other. The graph shows the difference in ω: ω=1 (upper); ω=1/2 (medium); omega = 0 (down) competitor changes to advertiser sales.
Simulations in AMSS consider the impact of pricing and competition on advertisers and competitors' sales. It also accounts for differences in purchasing behavior between consumers belonging to different community segments. In each segment s (i.e., a group having a segment dimension "buy") of its consumer's purchase intent, without competition, the relationship between the advertiser's product price and the probability of any consumer making a purchase in that segment is specified by a linear demand curve. The demand curve in each segment is parameterized by its y-intercept and negative slope:
α＝(α s ) s∈S Each alpha s ∈[0,1]The probability that a consumer in section s purchases an advertiser brand at a unit price of 0 without competition is specified.
β＝(β s ) s∈S Each beta s E (- ≡and infinity) designates that the purchase probability per unit rise of the price is reduced without competition. It controls the sensitivity of the consumer to price in that section. Generally, beta s >0, so sales drop as prices rise.
Thus, in a contention-free environment, and within a time interval t, a product unit price p is given t >0, the probability that each consumer in segment s will purchase an advertiser brand is:
the demand curves reflect differences in purchasing behavior between segments. In general, consumers in a segment with high brand favorites, brand loyalty, and/or brand availability are more likely to purchase the advertiser's brand than their competitor's brand; thus, these segments should have a higher alpha s Value and smaller beta s >A value of 0. An example set of demand curves following these criteria is plotted in fig. 4A. Previously inspected marketing interventions (e.g., media advertisements) motivate sales by changing consumer mind, resulting in migration to a community segment with a more favored demand curve. Alternatively, pricing strategies such as promotional discounts motivate sales by moving consumers along demand curves to lower price points with higher probability of purchase.
In AMSS, to avoid the complexity of simulating competitor activity at the same level of detail as advertiser activity, the use of two time-varying parameters in the sales module outlines the competency of the competitor. They specify the current strength of the advertiser's competitor and the extent to which the competitor and advertiser sales are mutually substituted:
ζ＝(ζ t,s ) (1:T)×s each zeta t,s ∈[0,1]Specifying that consumers in section s purchase competitor brands at time t when the price of the advertiser's product is high and therefore the advertiser does not make any salesProbability.
ω＝(ω t,s ) (1:T)×s Each omega t,s ∈[0,1]The degree to which sales of a given brand and competitor replace each other. When omega t,s When=1, the competitor's sales are not affected by the advertiser's pricing, and the competitor's sales will maximally replace the advertiser's sales. This is the default setting for the consumer "competitor loyalty" zone and is shown in FIG. 4B. When omega t,s At=0, the advertiser's sales are not affected by the presence of the competitor, and the advertiser's sales are maximally superseded by the competitor's sales. This is the default setting for the consumer "loyal" zone. This is shown in fig. 4D. By default, "switcher" is in ω t,s =0.5 balances the trade-off between brands of advertisers and their competitors, as shown in fig. 4C.
Given price p t The probability of a consumer purchasing a competitor's brand is:
the probability of their purchasing the advertiser's brand is:
the population of each segment is divided into those who do not purchase goods in that category, those who purchase advertiser brands, and those who purchase competitor brands. Each of these groups is of the size of And->These numbers are generated from the following polynomial (Multinomial) distribution: />
Lambda is shown as (y) Representing the average number of units purchased by any purchaser in a category, the total sales y of brands for a group segment s during a time interval t t,s The method comprises the following steps:
revenue calculation as sales y t,s And price p t Is a product of (a) and (b).
In the AMSS simulation model, post-purchase changes in the purchaser's mind are reflected by updating the subdivision dimension. First, all purchasers become "saturated". In addition, the purchase experience may affect brand status; after successful purchase, the consumer may become accustomed to or have a strong preference for a particular brand. This migration is similar to the market-intervention driven migration, except that the frequency is ignored in the sales-driven migration.
Fig. 5 is a flow chart of a method 500 for iteratively applying a transition function to population segment data. In the general overview of method 500, at stage 510, simulation server 150 applies a first transformation function to the population subdivision data. Simulation server 150 iterates through a set of transformation functions by applying the next transformation function to the population segment data at stage 520, and applying the nth transformation function to the population segment data at stage 530. At stage 540, simulation server 150 updates the time series of subdivision data with the current state of the data. The simulation is repeated until the event is terminated. At stage 550, simulation server 150 determines whether to terminate the simulation. If not, then simulation server 150 returns to stage 510. Otherwise, at stage 560, simulation server 150 returns (or provides access to) the time series of final population subdivision data and/or collected subdivision data.
Referring in more detail to method 500, at stage 510, simulation server 150 applies a first transformation function (e.g., transformation function 320 described with reference to FIG. 3A) to the population subdivision data. In some implementations, the first transformation function is a "natural" transformation function that simulates the population migration that would occur without external effects (e.g., marketing effects).
At stage 520, simulation server 150 applies the next transformation function to the population subdivision data modified by the previous application of the first transformation function. Simulation server 150 iterates through a set of transformation functions, applying each next transformation function to the population subdivision data in a determined order. In some implementations, the order is specified by a configuration file or other input (e.g., configuration input received from a modeler). The simulation server 150 applies each transition function in turn to stage 530, wherein the simulation server 150 applies the last ("nth") transition function to the group subdivision data.
At stage 530, simulation server 150 applies the nth transition function to the population subdivision data. In some embodiments, the nth transition function is a transition function for modeling a conversion (e.g., purchase) event. That is, the last transition function may account for any sales or activities that may have occurred during a time frame from a previous event. In some embodiments, the transformation function used to simulate the transformation takes into account both the transformation driven by the modeled advertising campaign and the natural transformation and competitor transformation (e.g., sales of competitors, which may occur naturally or through competitive advertising campaigns). In some implementations, the transformation function used to simulate the transformation updates the population subdivision to reflect changes in consumer mind and category (e.g., transition from unsaturated to saturated) after purchase.
In stage 540, simulation server 150 updates the time series of segment data with the current state of the data. The iterations from stages 510 to 530 simulate a single time period (timeframe), such as a day or a week. At the end of the iteration from stage 510 to 530, simulation server 150 has population subdivision data representing all transition functions applied. In some embodiments, at stage 540, simulation server 150 records this state of the population subdivision data in a time series of subdivision data. In some embodiments, simulation server 150 records this status of the group subdivision data by updating a database. In some implementations, the simulation server 150 records the status of the group segment data by appending the status of the group segment data to a log file. In some implementations, simulation server 150 records this state of the population subdivision data by generating events for processing by the auxiliary system.
At stage 550, simulation server 150 determines whether to terminate the simulation. For example, the simulation may be configured to run a fixed number of iterations, each iteration representing a period of time. Simulation server 150 determines whether it has reached a fixed number of iterations. If not, simulation server 150 returns to stage 510 and continues to iteratively apply the transition function. If at stage 550, simulation server 150 determines to terminate the simulation, then the simulation server proceeds to stage 560.
At stage 560, simulation server 150 returns the final population segment data and/or a time series of the collected segment data. In some embodiments, at stage 560, the data is returned by writing the data to a file or other data storage container in a data storage system (e.g., analog data storage system 156). In some implementations, at stage 560, the data is returned by returning an identifier or handle of the file or other data storage container. For example, in some embodiments, data is written to a disk, database, or other storage device in stage 540; at stage 560, access to the write data is provided.
For any simulated scene, simulator server 150 may be configured to use method 500 with scene-specific parameters or configurations to generate a time series of subdivision data for the respective scene. For example, scenes that do not have online advertisements may be modeled by eliminating the online advertisement transition function or setting its budget to zero. As another example, a scenario with one million dollar television advertisement spending may be run by configuring the media transition function with a one million dollar budget, and another scenario with two million dollar television advertisement spending may be run by configuring the media transition function with a two million dollar budget; the two scenarios may then be compared. The simulation generates a ground truth that can also be used for comparison with other modeling results. Various types of results may be generated. For example, given a specified change in marketing strategies, simulations may be used to estimate the resulting key performance metrics ("KPIs"); simulations may be used to assign KPIs on a set of media/marketing channels; and/or simulations may be used to optimize the proposed marketing strategy, e.g., to maximize KPIs, such as return on investment ("ROI"). Simulations can be run with different changes in policies and configurations, resulting in different counterfactual scenarios. The results from these different counterfactual scenarios may then be compared to each other or to results from third party analysis tools and models.
FIG. 6 is a flow chart of an example method 600 for model verification. In the general overview of method 600, at stage 605, simulation server 150 initializes a dataset representing a simulation population spanning multiple segments. At stage 610, simulation server 150 parameterizes a set of transition functions for a first test scenario and, at stage 615, iteratively applies the parameterized transition functions to the data set to generate a first time series of states. At stage 620, simulation server 150 parameterizes a set of transition functions for a second test scenario and, at stage 625, iteratively applies the parameterized transition functions to the data set to generate a second time series of states. As will be explained in more detail below, the parameterization in stage 610 and the parameterization in stage 620 are different in at least one respect, which results in a difference between the first time series of states generated by stage 615 and the second time series of states generated by stage 625. These differences are analyzed by the simulation server 150. At stage 630, simulation server 150 determines a first value of the performance metric by comparing the subdivision states of the data set after the simulation in the first scenario and the simulation in the second scenario (e.g., comparing the subdivision states of the first time series of states generated by stage 615 and the second time series of states generated by stage 625). At stage 640, simulation server 150 determines a second value of the performance metric by applying the topic model to either the first time series of states generated by stage 615 or the second time series of states generated by stage 625. For a valid topic model, the second value of the performance metric in stage 640 should be similar to the first value of the performance metric in stage 630 under proper parameterization. At stage 650, simulation server 150 validates the topic model by comparing the first value and the second value of the performance metric.
Referring to method 600 in more detail, at stage 605, simulation server 150 initializes a dataset representing a simulation population spanning multiple segments. Each segment is a sub-population of the simulated population that is suitable for the subdivision criteria of the subdivision scheme. The simulated population may be partitioned according to any of a number of possible subdivision schemes. For example, in some implementations, the subdivision scheme uses a set of interest descriptors (e.g., in the quoted market, not in the quoted market, having a need for unsaturation to the quote, need to get saturated, not actively participate in seeking the quote, explore the offering, accepted the quote). In some embodiments, the subdivision scheme uses a set of opinion descriptors (e.g., how a segment sees a brand associated with a bid (unconscious, disfavored, neutral, some favored, or favored by the brand), loyalty to the brand (no loyalty/easy switch, loyalty to the brand, loyalty to alternative brands/competitors), acquisition or availability of the bid (low, medium, high).
At stage 610, simulation server 150 parameterizes a set of transition functions for a first test scenario. In some implementations, the transition function is the transition function described above (e.g., with reference to fig. 3A). Each transition function takes an initial subdivision state and returns a resulting subdivision state. The parameters of each transition function determine how the function will generate the resulting subdivision state to return. In some embodiments, the parameters include, for example, a range or coverage of the transition function, a budget or scale of the transition function, and a limit on the impact of the transition function. In some embodiments, the one or more transition functions in the set are naturally progressing transitions. In some embodiments, the first transfer function in the set represents a naturally progressing transition. The first test scenario uses the set of transition functions according to the parameterization by stage 610. In some embodiments, the same transformation function (or a subset of the same transformation functions) is used in stages 620 and 625, but under different parameterizations. In some implementations, a second set of transition functions is used in stage 620 and stage 625.
At stage 615, simulation server 150 iteratively applies a first set of parameterized transformation functions to the dataset to generate a first time series of states. In some implementations, the simulation server 150 iteratively applies the parameterized transformation function using the method 500 described above with reference to fig. 5.
At stage 620, simulation server 150 parameterizes a set of transition functions for a second test scenario. In some implementations, the set of transition functions is the same set or subset of transition functions used in stage 610 and stage 615. In some implementations, a second set of transition functions is used that is different from the first set of transition functions used in stage 610 and stage 615; the second set may overlap the first set. The simulation server 150 configures the second test scenario to be different from the first test scenario in at least one capacity. For example, in some implementations, the second test scenario may include a larger budget for the advertising channel than was allocated in the first scenario. As another example, in some implementations, the second test scenario may include a transition function of advertising channels that are not present in the first test scenario. In these examples, the first test scenario results in a first time series of states representing a simulation with no added capacity, while the second test scenario results in a second time series of states representing a simulation with added capacity. Thus, the difference between the first time series of states and the second time series of states may be attributed to increased capacity. In some embodiments, additional test scenarios may be used, such as a third time series, a fourth time series, etc., each scenario representing other changes in the parameterization of the transition function and/or excluding or adding the transition function.
At stage 625, simulation server 150 iteratively applies a second set of parameterized transformation functions to the dataset to generate a second time series of states. In some implementations, the simulation server 150 iteratively applies the second set of parameterized transformation functions using the method 500 described above with reference to fig. 5. In some embodiments, both stage 615 and stage 625 begin with the same initial data set from stage 605 and produce significantly different first and second time series data based on the application of the first or second set of parameterized transformation functions.
At stage 630, simulation server 150 determines a first value of the performance metric by comparing the subdivision states of the data set after the simulation in the first scenario and the simulation in the second scenario (e.g., comparing the subdivision states of the first time series of states generated by stage 615 and the second time series of states generated by stage 625). As previously described, the parameterization in stage 610 and the parameterization in stage 620 are different in at least one respect, which results in a difference between the first time series of states generated by stage 615 and the second time series of states generated by stage 625. These differences are analyzed by simulation server 150 at stage 630. In some implementations, the simulation server 150 uses these differences to identify the value of the performance metric. For example, if the second time series of states represents an additional budget or advertising expenditure, an increase in the population that has moved to the conversion or purchase state represents a return for the budget or advertising expenditure. That is, it represents a return on investment ("ROI"). Other key performance metrics ("KPIs") may be similarly evaluated.
At stage 640, simulation server 150 determines a second value of the performance metric by applying the topic model to either the first time series of states generated from stage 615 or the second time series of states generated from stage 625. For example, a media mixing model ("MMM") aimed at assessing return on investment ("ROI") may be applied to a time series of states generated with a particular budget or advertising expenditure. The value generated by applying the MMM to the time series can then be compared to the estimate generated in stage 630. For example, the MMM may include a time series multivariate common least squares ("OLS") regression that may be applied to the time series of generated states. For a valid topic model, the second value of the performance metric in stage 640 should be similar to the first value of the performance metric in stage 630 under proper parameterization.
At stage 650, simulation server 150 validates the topic model by comparing the first value and the second value of the performance metric. In some embodiments, the first and second values of the performance metric must be within a predetermined range. In some embodiments, the first and second values of the performance metric must be sufficiently similar, as determined by applying an acceptable error range or margin. In some implementations, this is represented by a score, e.g., a numerical value representing the quality of the topic model.
Given a fully specified scene, the AMSS simulator is able to generate observable data generated by a random instance of the scene. The underlying reality is obtained empirically by generating multiple random instances of data. The base true θ may be, for example, the amount of expected weekly sales that the scene generates. As the sample size, i.e., the number of data sets generated, increases, the AMSS simulator reports the underlying reality with greater accuracy. Larger samples facilitate accurate estimation with greater variability.
In some implementations, these processes are used to report the underlying reality of the amount of advertising payout returns in, for example, a media channel. For example, consider a specific marketing strategy b= (bm) 1:M Where bm is the budget of the mth media channel. For example, m=1 may represent a television. To calculate the advertisement payout rate ("ROAS") of a televisionN is formed 1 Data set D n1 (b) The method comprises the steps of carrying out a first treatment on the surface of the n1=1; : : the method comprises the steps of carrying out a first treatment on the surface of the N1. The ROAS theta can be empirically estimated using the following formula, where x n1 (b) Is the data set D n1 (b) Total advertising expenditure, y n1 (b) Is revenue and b' represents the same counter-facts scenario as b except that no budget is allocated to the television. (b' 1 =0, and)：
the base true theta reported by the simulator is close to the true ROAS theta according to the law of large numbers. The accuracy of the approximation can be estimated by calculating an error margin from variability in the empirical samples.
In an example embodiment, a simulation is run to generate a base reality to compare with a linear regression model of the effect of media spending on sales. The model formula is:
wherein E is t ～N(0,σ 2 ) For some sigma 2 ≥0
The media variables are weekly spending for each media channel. This is a simplified representation of the data generation model, but produces reasonable results to illustrate analysis of the advertisement payout rate ("ROAS") and marginal advertisement payout rate ("mROAS"). The following table shows the estimated bias and mean square error ("MSE") of ROAS and mROAS for media (e.g., television) and online (e.g., pay search) in a simplified model:
TABLE 4 Table 4
Fig. 7A and 7B are histograms showing the estimated or ROAS and mROAS distribution for each media channel in an example simulation. Model estimates of ROAS and mROAS can be compared to the base reality generated by the simulation, with the bias and mean square error ("MSE") as shown in table 4 above. There is a small bias in the estimation of ROAS and mROAS for the media due to the lack of model matching for the nonlinear effects of television. Fig. 7A is a histogram of ROAS, and fig. 7B is a histogram of mROAS. Histograms are regression estimates for ROAS and mROAS for media and online advertisements calculated over 1000 datasets using basic linear regression. The values provided by the simulation are plotted as vertical dashed lines.
Accordingly, systems and methods for model verification are described herein. In some embodiments, according to the present specification, a method comprises: generating a dataset representing a simulated population, the dataset comprising a set of member counts corresponding to individual segments of the simulated population according to a subdivision scheme; generating a first time series of subdivision states by processing the data set through a first simulation, the first simulation comprising an iterative application of a first plurality of event functions, the first plurality of event functions comprising a first event function configured with a first parameter; generating a second time series of subdivision states by processing the data set through a second simulation, the second simulation comprising an iterative application of a second plurality of event functions, wherein the second plurality of event functions does not include the first event function configured with the first parameter; identifying a first value of the performance metric, the first value representing a difference between the first time series and the second time series; and for the topic model, identifying a second value of the performance metric, the second value representing an output from applying the topic model to one of the first time series or the second first time series. The method then determines a validity score of the topic model with respect to the performance metric by comparing the first value to the second value.
In some embodiments of the method, the second plurality of event functions includes a first event function configured with a second parameter different from the first parameter. In some embodiments of the method, the second plurality of event functions does not include the first event function. In some embodiments of the method, the first plurality of event functions includes natural migration events. In some implementations of the method, the topic model is a media mixing model. For example, the media mixing model may include a time series multivariate general least squares ("OLS") regression. Some embodiments of the method include randomly generating a dataset representing the simulated population.
Some embodiments include a non-transitory computer-readable memory storing instructions that, when executed by a processor, cause the processor to perform the method. In some implementations, a system includes a memory storing such instructions and a processor configured to execute the instructions from the memory.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software implemented on tangible media, firmware, or hardware, including the structures disclosed in this specification and their equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, embodied on tangible media, encoded on one or more computer storage media, for execution by, or to control the operation of, data processing apparatus (including, for example, processor 102). The computer storage medium may be or be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. The computer storage media may also be or be included in one or more separate components or media (e.g., a plurality of CDs, disks, or other storage devices). The computer storage medium is tangible. Computer storage media store data, such as computer-executable instructions, in a non-transitory form.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled, interpreted, and procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, libraries, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., a field programmable gate array ("FPGA") or an application-specific integrated circuit ("ASIC"). Even if such dedicated circuitry is not a general purpose processor, it may also be referred to as a computer processor.
Although this specification contains many specifics of particular embodiments, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, although operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Furthermore, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated in a single software product or packaged into multiple software products.
The recitation of "or" may be interpreted to be inclusive, such that any word described using "or" may indicate a single, more than one, and any of the recited terms. The labels "first," "second," "third," etc. do not necessarily denote a order, and are generally used merely to distinguish one element or item from another.
Thus, particular embodiments of the present subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying drawings do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking or parallel processing may be used.
Claims (20)
1. A method for model verification, the method comprising:
generating a dataset comprising a set of member counts corresponding to a plurality of segments, and the dataset representing a consumer's relationship to a category or brand;
generating a first time series comprising states of a plurality of first member counts at a plurality of points in time corresponding to the plurality of segments by processing the data set through a first simulation, the first simulation comprising an application of a first plurality of functions representing a first plurality of events, the first plurality of functions comprising a first function configured with a first parameter, wherein processing the data set through the first simulation causes a set of the member counts to change to one of the plurality of first member counts at each of the plurality of points in time;
Generating a second time series comprising states of a plurality of second member counts corresponding to the plurality of segments at the plurality of time points by processing the data set through a second simulation comprising application of a second plurality of functions representing a second plurality of events, wherein the second plurality of functions does not comprise the first function configured with the first parameter, wherein processing the data set through the second simulation causes the set of member counts to change to one of the plurality of second member counts at each of the plurality of time points;
identifying a first value of a metric by analyzing differences between the plurality of first member counts and the plurality of second member counts;
for a topic model, identifying a second value of the metric, the second value representing an output of applying the topic model to one of the first time series or the second time series; and
determining a score for the topic model by comparing the first value with the second value,
wherein the first plurality of events and the second plurality of events comprise at least one of a natural migration event and a marketing intervention event.
2. The method of claim 1, wherein the second plurality of functions includes the first function configured with a second parameter different from the first parameter.
3. The method of claim 1, wherein the second plurality of functions does not include the first function.
4. The method of claim 1, wherein the first plurality of events comprises natural migration events.
5. The method of claim 1, wherein the topic model is a media mixing model.
6. The method of claim 5, wherein the media mixing model comprises time series multivariate common least squares ("OLS") regression.
7. The method of claim 1, comprising randomly generating the data set.
8. A system for model verification, the system comprising:
a computer readable memory storing instructions; and
a processor configured to execute instructions from the memory to:
generating a dataset comprising a set of member counts corresponding to a plurality of segments, and the dataset representing a consumer's relationship to a category or brand;
generating a first time series of states of a plurality of first member counts at a plurality of points in time corresponding to the plurality of segments by processing the data set through a first simulation, the first simulation comprising an application of a first plurality of functions representing a first plurality of events, the first plurality of functions comprising a first function configured with a first parameter, wherein processing the data set through the first simulation causes a set of the member counts to change to one of the plurality of first member counts at each of the plurality of points in time;
Generating a second time series comprising states of a plurality of second member counts corresponding to the plurality of segments at the plurality of time points by processing the data set through a second simulation comprising application of a second plurality of functions representing a second plurality of events, wherein the second plurality of functions does not comprise the first function configured with the first parameter, wherein processing the data set through the second simulation causes the set of member counts to change to one of the plurality of second member counts at each of the plurality of time points;
identifying a first value of a metric by analyzing differences between the plurality of first member counts and the plurality of second member counts;
for a topic model, identifying a second value of the metric, the second value representing an output of applying the topic model to one of the first time series or the second time series; and
determining a score for the topic model by comparing the first value with the second value,
wherein the first plurality of events and the second plurality of events comprise at least one of a natural migration event and a marketing intervention event.
9. The system of claim 8, wherein the second plurality of functions includes the first function configured with a second parameter different from the first parameter.
10. The system of claim 8, wherein the second plurality of functions does not include the first function.
11. The system of claim 8, wherein the first plurality of events comprises natural migration events.
12. The system of claim 8, wherein the topic model is a media mixing model.
13. The system of claim 12, wherein the media mixing model comprises a time series multivariate common least squares ("OLS") regression.
14. The system of claim 8, wherein the processor is configured to randomly generate the data set.
15. A non-transitory computer-readable memory storing instructions that cause a processor to execute the instructions to:
generating a dataset comprising a set of member counts corresponding to a plurality of segments, and the dataset representing a consumer's relationship to a category or brand;
generating a first time series comprising a plurality of first member counts corresponding to the plurality of segments at a plurality of points in time by processing the data set through a first simulation having a first parameter representative of a first plurality of events, wherein processing the data set through the first simulation causes the set of member counts to change to one of the plurality of first member counts at each of the plurality of points in time;
Generating a second time series comprising states of a plurality of second member counts corresponding to the plurality of segments at the plurality of time points by processing the data set through a second simulation having a second parameter representing a second plurality of events, wherein processing the data set through the second simulation causes the set of member counts to change to one of the plurality of second member counts at each of the plurality of time points;
identifying a first value of a metric by analyzing differences between the plurality of first member counts and the plurality of second member counts;
for a topic model, identifying a second value of the metric, the second value representing an output of applying the topic model to one of the first time series or the second time series; and
determining a score for the topic model by comparing the first value with the second value,
wherein the first plurality of events and the second plurality of events comprise at least one of a natural migration event and a marketing intervention event.
16. The non-transitory computer-readable memory of claim 15, wherein the first simulation includes applying a first plurality of functions representing a first plurality of events and the second simulation includes applying a second plurality of functions representing a second plurality of events,
Wherein applying the first plurality of functions includes applying a first function of the plurality of functions configured with the first parameter;
wherein the second plurality of functions includes a first function of the first plurality of functions configured with the second parameter, wherein the second parameter is different from the first parameter.
17. The non-transitory computer-readable memory of claim 15, wherein the first simulation includes applying a first plurality of functions representing a first plurality of events and the second simulation includes applying a second plurality of functions representing a second plurality of events,
wherein applying the first plurality of functions includes applying a first function of the plurality of functions configured with the first parameter;
wherein the second plurality of functions does not include the first function.
18. The non-transitory computer-readable memory of claim 16, wherein the first plurality of events comprises natural migration events.
19. The non-transitory computer-readable memory of claim 15, wherein the topic model is a media mixing model.
20. The non-transitory computer readable memory of claim 15, wherein the processor is configured to randomly generate the data set.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/707,594 US10719521B2 (en) | 2017-09-18 | 2017-09-18 | Evaluating models that rely on aggregate historical data |
US15/707,594 | 2017-09-18 | ||
PCT/US2018/022467 WO2019055065A1 (en) | 2017-09-18 | 2018-03-14 | Evaluating models that rely on aggregate historical data |
Publications (2)
Publication Number | Publication Date |
---|---|
CN110622196A CN110622196A (en) | 2019-12-27 |
CN110622196B true CN110622196B (en) | 2023-11-28 |
Family
ID=61899373
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880031437.8A Active CN110622196B (en) | 2017-09-18 | 2018-03-14 | Evaluating a model dependent on aggregated historical data |
Country Status (4)
Country | Link |
---|---|
US (1) | US10719521B2 (en) |
EP (1) | EP3607522A1 (en) |
CN (1) | CN110622196B (en) |
WO (1) | WO2019055065A1 (en) |
Families Citing this family (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10838377B1 (en) * | 2017-03-17 | 2020-11-17 | Hrl Laboratories, Llc | Comprehensive causal impact estimation system with a selective synthetic control |
US11062792B2 (en) | 2017-07-18 | 2021-07-13 | Analytics For Life Inc. | Discovering genomes to use in machine learning techniques |
US11139048B2 (en) | 2017-07-18 | 2021-10-05 | Analytics For Life Inc. | Discovering novel features to use in machine learning techniques, such as machine learning techniques for diagnosing medical conditions |
US11334911B1 (en) | 2018-03-23 | 2022-05-17 | Tatari, Inc. | Systems and methods for debiasing media creative efficiency |
US11132706B1 (en) | 2018-03-26 | 2021-09-28 | Tatari, Inc. | System and method for quantification of latent effects on user interactions with an online presence in a distributed computer network resulting from content distributed through a distinct content delivery network |
US11212566B1 (en) | 2018-03-26 | 2021-12-28 | Tatari, Inc. | Systems and methods for attributing TV conversions |
US11562393B1 (en) | 2018-12-07 | 2023-01-24 | Tatari, Inc. | Self-consistent inception architecture for efficient baselining media creatives |
US11334912B1 (en) | 2018-12-07 | 2022-05-17 | Tatari, Inc. | Systems and methods for determining media creative attribution to website traffic |
CN111177893B (en) * | 2019-12-11 | 2023-05-02 | 中电普信(北京)科技发展有限公司 | Parallel discrete simulation event driving method and device based on multithreading |
US11636185B2 (en) * | 2020-11-09 | 2023-04-25 | International Business Machines Corporation | AI governance using tamper proof model metrics |
CN112988851B (en) * | 2021-04-27 | 2021-07-27 | 腾讯科技（深圳）有限公司 | Counterfactual prediction model data processing method, device, equipment and storage medium |
CN113590962B (en) * | 2021-08-03 | 2023-07-25 | 合肥泰瑞数创科技有限公司 | Flow data prediction system, method, computer equipment and medium |
US11887167B2 (en) * | 2022-06-14 | 2024-01-30 | Accenture Global Solutions Limited | Utilizing machine learning models to generate an optimized digital marketing simulation |
CN115789880B (en) * | 2022-11-18 | 2024-04-26 | 四川虹美智能科技有限公司 | Remote controller key setting method, device and equipment based on big data |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102640179A (en) * | 2009-09-18 | 2012-08-15 | 奥多比公司 | Advertisee-history-based bid generation system and method for multi-channel advertising |
CN103154928A (en) * | 2010-06-24 | 2013-06-12 | 奥比融移动有限公司 | Network server arrangement for processing non-parametric, multi-dimensional, spatial and temporal human behavior or technical observations measured pervasively, and related method for the same |
CN103220164A (en) * | 2011-12-27 | 2013-07-24 | 特克特朗尼克公司 | Data integrity scoring and visualization for network and customer experience monitoring |
CN104462177A (en) * | 2013-09-20 | 2015-03-25 | 纽昂斯通信有限公司 | Mobile application daily user engagement scores and user profiles |
CN105190564A (en) * | 2013-04-11 | 2015-12-23 | 甲骨文国际公司 | Predictive diagnosis of SLA violations in cloud services by seasonal trending and forecasting with thread intensity analytics |
CN105378714A (en) * | 2013-06-14 | 2016-03-02 | 微软技术许可有限责任公司 | Fast grouping of time series |
Family Cites Families (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
ES2261527T3 (en) * | 2001-01-09 | 2006-11-16 | Metabyte Networks, Inc. | SYSTEM, PROCEDURE AND APPLICATION OF SOFTWARE FOR DIRECT ADVERTISING THROUGH A GROUP OF BEHAVIOR MODELS, AND PROGRAMMING PREFERENCES BASED ON BEHAVIOR MODEL GROUPS. |
US20020169658A1 (en) * | 2001-03-08 | 2002-11-14 | Adler Richard M. | System and method for modeling and analyzing strategic business decisions |
GB0322050D0 (en) * | 2003-09-20 | 2003-10-22 | Spiratech Ltd | Modelling and simulation method |
JP4962782B2 (en) * | 2007-08-13 | 2012-06-27 | 富士通株式会社 | User state estimation system, user state estimation method, and user state estimation program |
US20100217650A1 (en) | 2009-02-24 | 2010-08-26 | Edwin Geoffrey Hartnell | System and method for providing market simulation/optimization |
US20110099101A1 (en) * | 2009-10-26 | 2011-04-28 | Bank Of America Corporation | Automated validation reporting for risk models |
US9391855B2 (en) | 2012-05-09 | 2016-07-12 | Everbridge, Inc. | Systems and methods for simulating a notification system |
US9201989B2 (en) * | 2013-01-25 | 2015-12-01 | Globalfoundries Inc. | Interpolation techniques used for time alignment of multiple simulation models |
US10685150B2 (en) * | 2013-09-30 | 2020-06-16 | International Business Machines Corporation | System for design and execution of numerical experiments on a composite simulation model |
US20150186925A1 (en) * | 2013-12-31 | 2015-07-02 | Anto Chittilappilly | Media spend optimization using engagement metrics in a cross-channel predictive model |
US9922340B1 (en) * | 2014-04-10 | 2018-03-20 | Google Llc | Evaluating attribution models based on simulated activity streams |
CA2896052C (en) | 2014-07-04 | 2023-09-12 | Tata Consultancy Services Limited | System and method for prescriptive analytics |
US10003926B2 (en) * | 2014-09-16 | 2018-06-19 | DataSpark, Pte., Ltd. | Predicting human movement behaviors using location services model |
US9715695B2 (en) * | 2015-06-01 | 2017-07-25 | Conduent Business Services, Llc | Method, system and processor-readable media for estimating airport usage demand |
US10387894B2 (en) * | 2015-08-28 | 2019-08-20 | International Business Machines Corporation | Brand personality comparison engine |
US20170091810A1 (en) * | 2015-09-29 | 2017-03-30 | Michael McGovern | Brand engagement touchpoint attribution using brand engagement event weighting |
US20170178149A1 (en) | 2015-12-16 | 2017-06-22 | International Business Machines Corporation | Method and system for purchase pattern extraction from point of sale data |
US20170300657A1 (en) * | 2016-04-14 | 2017-10-19 | Virginia Polytechnic Institute And State University | Computerized Event Simulation Using Synthetic Populations |
-
2017
- 2017-09-18 US US15/707,594 patent/US10719521B2/en active Active
-
2018
- 2018-03-14 CN CN201880031437.8A patent/CN110622196B/en active Active
- 2018-03-14 EP EP18715861.3A patent/EP3607522A1/en not_active Withdrawn
- 2018-03-14 WO PCT/US2018/022467 patent/WO2019055065A1/en unknown
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102640179A (en) * | 2009-09-18 | 2012-08-15 | 奥多比公司 | Advertisee-history-based bid generation system and method for multi-channel advertising |
CN103154928A (en) * | 2010-06-24 | 2013-06-12 | 奥比融移动有限公司 | Network server arrangement for processing non-parametric, multi-dimensional, spatial and temporal human behavior or technical observations measured pervasively, and related method for the same |
CN103220164A (en) * | 2011-12-27 | 2013-07-24 | 特克特朗尼克公司 | Data integrity scoring and visualization for network and customer experience monitoring |
CN105190564A (en) * | 2013-04-11 | 2015-12-23 | 甲骨文国际公司 | Predictive diagnosis of SLA violations in cloud services by seasonal trending and forecasting with thread intensity analytics |
CN105378714A (en) * | 2013-06-14 | 2016-03-02 | 微软技术许可有限责任公司 | Fast grouping of time series |
CN104462177A (en) * | 2013-09-20 | 2015-03-25 | 纽昂斯通信有限公司 | Mobile application daily user engagement scores and user profiles |
Also Published As
Publication number | Publication date |
---|---|
CN110622196A (en) | 2019-12-27 |
US10719521B2 (en) | 2020-07-21 |
WO2019055065A1 (en) | 2019-03-21 |
EP3607522A1 (en) | 2020-02-12 |
US20190087469A1 (en) | 2019-03-21 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN110622196B (en) | Evaluating a model dependent on aggregated historical data | |
US11188935B2 (en) | Analyzing consumer behavior based on location visitation | |
US11301761B2 (en) | Behavioral prediction for targeted end users | |
US10417653B2 (en) | Inferring consumer affinities based on shopping behaviors with unsupervised machine learning models | |
US11042814B2 (en) | Mixed-initiative machine learning systems and methods for determining segmentations | |
Paulson et al. | Efficient large-scale internet media selection optimization for online display advertising | |
CN105493057B (en) | The content selection controlled using accuracy | |
James et al. | Penalized and constrained optimization: an application to high-dimensional website advertising | |
US10878058B2 (en) | Systems and methods for optimizing and simulating webpage ranking and traffic | |
US20230306491A1 (en) | User feature-based page displaying method and apparatus, medium, and electronic device | |
US20080208652A1 (en) | Method and system utilizing online analytical processing (olap) for making predictions about business locations | |
US20120330778A1 (en) | Product comparison and feature discovery | |
CN103748605A (en) | Conversion type to conversion type funneling | |
US20140337275A1 (en) | Method and system for scaling panels | |
CN109417644A (en) | The income optimization launched across screen advertisement | |
Morozov | Measuring benefits from new products in markets with information frictions | |
US11244244B1 (en) | Machine learning systems architectures for ranking | |
CN115345530A (en) | Market address recommendation method, device and equipment and computer readable storage medium | |
Song et al. | Evaluation model of click rate of electronic commerce advertising based on fuzzy genetic algorithm | |
Wodecki | The reserve price optimization for publishers on real-time bidding on-line marketplaces with time-series forecasting | |
Zhang et al. | Introduction to the Aggregate Marketing System Simulator | |
Borenstein et al. | Ancillary services in targeted advertising: From prediction to prescription | |
Matos et al. | A deep learning-based decision support system for mobile performance marketing | |
Nia | Social big data analytics of consumer choices: a two sided online platform perspective | |
Ehsani et al. | Customer purchase prediction in electronic markets from clickstream data using the Oracle meta-classifier |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
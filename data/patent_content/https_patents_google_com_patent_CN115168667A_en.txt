CN115168667A - Method and system for generating action elements of suggested content for an ongoing task - Google Patents
Method and system for generating action elements of suggested content for an ongoing task Download PDFInfo
- Publication number
- CN115168667A CN115168667A CN202210756943.1A CN202210756943A CN115168667A CN 115168667 A CN115168667 A CN 115168667A CN 202210756943 A CN202210756943 A CN 202210756943A CN 115168667 A CN115168667 A CN 115168667A
- Authority
- CN
- China
- Prior art keywords
- computing system
- content
- user
- ongoing
- user data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9035—Filtering based on additional data, e.g. user or group profiles
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/30—Monitoring
- G06F11/34—Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation ; Recording or statistical evaluation of user activity, e.g. usability assessment
- G06F11/3438—Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation ; Recording or statistical evaluation of user activity, e.g. usability assessment monitoring of user actions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/901—Indexing; Data structures therefor; Storage structures
- G06F16/9024—Graphs; Linked lists
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9038—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/906—Clustering; Classification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04842—Selection of displayed objects or displayed text elements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2201/00—Indexing scheme relating to error detection, to error correction, and to monitoring
- G06F2201/835—Timestamp
Abstract
The present disclosure relates to methods and systems for generating action elements of suggested content for an ongoing task. Computing systems and methods may be used to expose selectable action elements for at least one ongoing task. In particular, the present disclosure provides a general pipeline to identify potential tasks that a user is continuously interested in or has not yet completed, so that suggestions of content items can be made to further advance the identified tasks of the user. The pipeline may incorporate probabilistic transition graphs, machine learning models, and/or historical data to determine relevance and completion of tasks that a user may wish to continue performing.
Description
Technical Field
The present disclosure relates generally to identifying an ongoing task associated with a user. Even more particularly, the present disclosure relates to generating action elements for suggested content for an ongoing task identified based on historical user web browsing data.
Background
A web browser application ("browser") may retrieve content from a web server and display it on a user's device. A user may enter a Uniform Resource Locator (URL) so that a browser may retrieve data (e.g., content) associated with the URL (e.g., by communicating with a web server using hypertext transfer protocol).
In some cases, the communication between the browser and the web server may be encrypted for privacy and security purposes. Once the browser retrieves the web page, the rendering engine of the browser may display the web page on the user's device, including the image and video formats supported by the browser. Most browsers can use internal caching of web page resources to improve the load time for subsequent accesses to the same page. The cache may store many items, such as large images, so they do not need to be downloaded again from the server.
Generating personalized search queries is the process of providing personalized content to a user using web browsing techniques. Some standard query personalization techniques rely on aggregated user information, such as common search queries. However, existing methods that do not attempt to determine a particular task for a particular user may have been performed.
While advances have been made in the area of personalized search queries, existing approaches are generally limited to users conducting individual, isolated queries with pre-existing search bars, and do not consider the alternative or overall purpose of any given user search.
Disclosure of Invention
Aspects and advantages of embodiments of the present disclosure will be set forth in part in the following description, or may be learned from the description, or may be learned through practice of the embodiments.
One example aspect of the present disclosure relates to a computer-implemented method for task-specific action element generation. The method includes a computing system obtaining historical user data describing historical user actions taken in one or more past user online sessions. The historical user data has been annotated with annotations describing content attributes associated with the user actions. The method includes the computing system identifying one or more tasks based on historical user data. The method includes the computing system determining a suggested content item for each of one or more ongoing tasks. The method includes the computing system exposing a selectable action element for displaying at least one ongoing task to a user. The selectable action element is configured to provide access to at least one suggested content item for at least one ongoing task.
Other aspects of the disclosure relate to various systems, apparatuses, non-transitory computer-readable media, user interfaces, and electronic devices.
These and other features, aspects, and advantages of various embodiments of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate exemplary embodiments of the disclosure and together with the description, serve to explain the relevant principles.
Drawings
A detailed discussion of embodiments directed to one of ordinary skill in the art is set forth in the specification with reference to the drawings, in which:
fig. 1 depicts a block diagram of an example computing system, according to an example embodiment of the present disclosure.
Fig. 2 illustrates an exemplary client device including one or more processors and a user interface.
FIG. 3 illustrates exemplary web content displayed in a browser window in a user interface of a client device.
FIG. 4 depicts a block diagram of an example content recommendation model, according to an example embodiment of the present disclosure.
FIG. 5 illustrates an example user interface showing how action elements are presented to a user, according to an example embodiment of the present disclosure.
FIG. 6 illustrates an example user interface showing how a dedicated dashboard is utilized to present a user with multiple ongoing tasks having associated action elements, according to an example embodiment of the present disclosure.
FIG. 7 illustrates an example user interface showing how a user may interact with a particular continuous ongoing task, according to an example embodiment of the present disclosure.
FIG. 8 illustrates an example user interface showing how a user may interact with a particular discrete ongoing task according to an example embodiment of the present disclosure.
FIG. 9 depicts a flowchart of an example method for generation of an action element for performing suggested content of an ongoing task, according to an example embodiment of the present disclosure.
Reference numerals repeated among the figures are intended to identify like features in various implementations.
Detailed description of the invention
SUMMARY
In general, the present disclosure is directed to a computing system and method that may be used to expose selectable action elements of at least one ongoing task, e.g., an action element configured to provide access to at least one suggested content item associated with the ongoing task. In particular, the present disclosure provides a general pipeline to identify potential tasks that a user is continuously interested in or has not yet completed, so that suggestions of content items can be made to further advance the identified tasks of the user. The pipeline may incorporate probabilistic transition graphs, machine learning models, and/or historical data to determine relevance and completion of tasks that a user may wish to continue performing.
Even more specifically, the example computing system may identify an ongoing task. For example, a computing system may identify an ongoing task by analyzing historical user data to infer what tasks the user may be engaged in the future. By taking advantage of what the user has done in the past, the computing system can determine overall categories of activity from which the computing system can evaluate a pipeline of predicted steps that the user is most likely to take for the identified task. For example, if the computing system identifies that the user has engaged in a shopping activity, the computing system may generate (e.g., with a probabilistic transition graph, machine learning model, etc.) a most likely shopping pipeline (e.g., inspiration, discovery, consideration, confirmation, purchase, post-purchase) and/or evaluate the user state or location along such a pipeline. Thus, the computing system may utilize historical user data to determine which stage in the pipeline the user is most likely to engage next.
In some implementations, the computing system may optimize the pipeline of activities that a user may participate in to accomplish a particular task. The computing system may optimize the pipeline of activities in which the user may participate by predicting the next most likely steps the user is likely to take and identifying relevant content. The related content may then be presented to the user such that the user does not need to personally participate in manually searching for the content. The related content may be presented to the user by exposing a selectable action element. The selectable action elements may be displayed in a particular dashboard that a user may navigate to view a number of tasks that the computing system has determined. For example, a user may interact with a dedicated dashboard to indicate which of a plurality of available tasks the user wishes to interact with. In addition, selectable action elements may be overlaid on the current browsing session in which the user is participating to provide suggestions that the user may interact with to push the user further on the ongoing task.
An example method for surfacing selectable action elements of at least one ongoing task may include obtaining historical user data. In particular, the historical user data may describe historical user actions taken in one or more past user online sessions. For example, historical user data may be annotated with annotations. In particular, the annotations may describe properties of the content associated with the user actions. For example, the computing system may obtain historical user data and annotate some portion of the historical data in connection with searching for or purchasing headphones. Even more particularly, the annotations may be based on metadata associated with the content.
The computing system may identify one or more ongoing tasks. One or more ongoing tasks may be identified based on historical user data (e.g., using historical user web browsing data). The ongoing task may be a discrete task (e.g., purchasing an item, planning a vacation, etc.). The ongoing task may be a continuous task (e.g., cooking, watching a movie, etc.). For example, the computing system may identify discrete tasks such as purchasing a set of headphones.
The computing system may determine one or more suggested content items. One or more suggested content items may be determined for each of the one or more ongoing tasks. For example, if the user is experiencing the task of purchasing a set of headphones, the computing system may suggest content items related to purchasing the headphones. For example, the computing system may suggest content items, such as shopping guides for purchasing headsets, comments of headsets that the user viewed from historical browser data, the various headsets themselves, suggested search queries, comparison guides, or related products (e.g., attachable microphones, headset sleeves, etc.). The suggested content items may change according to the identified task that the user is performing. In particular, suggested content items may include adding content to a user database (e.g., a list). For example, if the computing system instead determines that the user is interested in cooking, the suggested content items may instead be recipes that the user may add to the user's recipe book in conjunction with other suggested content (e.g., cooking utensils, grocery lists, grocery store locations, etc.). As another example, if the computing system determines that the user is interested in movies, the suggested content items may include movies that are to be added to the watch list in conjunction with other suggested content (e.g., movie reviews, related movies, etc.).
The selectable action elements may be exposed for display to the user. The selectable action element may be associated with at least one ongoing task. In particular, the selectable action element may be configured to provide access to at least one suggested content item of at least one ongoing task. The selectable action element may include an image related to the ongoing task to which the action element relates. For example, an optional action element associated with a user attempting to purchase headphones may include an image of the headphones on the action element itself.
In some implementations, historical user actions may be extracted across multiple web pages. For example, historical user actions may be extracted from multiple web pages that the user has opened, regardless of whether the web pages were closed after being opened. Further, historical user actions may be extracted across multiple web browser sessions. In particular, historical user actions may be extracted from multiple instances in which a user initiated a search using a web browser, closed the web browser for a period of time, then returned to the web browser, and initiated other searches (e.g., different searches). For example, historical user actions may be extracted for a web browser session for a predetermined amount of time. Specifically, the historical user actions may be extracted within 30 days before the historical user actions are extracted. A web browser session may correspond to: loading and unloading of discrete instances of the web browser application (e.g., one session corresponds to loading and unloading an instance of the web browser application into the device memory); using the web browser application for a period of time (e.g., one session for each different day of using the web browser application); a given user uses a web browser during login; different tabs within the web browser; and/or other segments of the browser application's use over time.
In some implementations, the computing system may identify one or more ongoing tasks. Further, one or more ongoing tasks based on historical user data may be annotated. The historical user data may be annotated, describing attributes of the content associated with the user action. As an example, historical user data indicating that the user searched for the best headset in 2021 may be annotated as being described as being relevant to purchasing the headset. In particular, the annotated historical user data may be arranged into a plurality of clusters. Further, one or more ongoing tasks may be identified from historical user data based at least in part on the plurality of clusters. In one example, identifying one or more ongoing tasks may include performing an edge threshold algorithm to identify one or more primary clusters of a plurality of clusters. Examples of "edges" or "dimensions" that a product image search may match include identifying derived (recognition-derived) attributes, such as categories (e.g., "headphones"), attributes (e.g., "noise elimination", "games", etc.), or other semantic dimensions and/or visual attributes (such as "dark bands and light colors", "light colors are thin lines that make up 40% of the entire color space", etc.) including machine-generated visual attributes (such as machine-extracted visual features or machine-generated visual embedding).
In some implementations, one or more ongoing tasks may be identified from historical user data. In particular, historical user data may be input into the machine learning model. Even more specifically, the machine learning model may generate one or more ongoing tasks from the input historical user data.
In some implementations, identifying one or more ongoing tasks from historical user data may be based at least in part on the relevance score. In particular, the relevance score may be based at least in part on timestamps associated with historical user data. Even more specifically, content that includes a higher relevance score may be weighted more heavily than content with a lower relevance score. For example, the relevance score of a web browsing search conducted within the previous 24 hours may be higher than the relevance score of a web browsing search conducted on the previous 30 days. Further, the timestamp may be associated with a duration of time spent browsing the particular content. In particular, the relevance score may be based at least in part on a duration of time spent browsing the particular content. For example, the relevance score may be higher for content that is viewed for a longer period of time. Additionally, the relevance score can be based at least in part on repetitions of the web browsing search. For example, the relevance score of content being repeatedly viewed may be higher. Even more specifically, the relevance score may be required to meet a relevance threshold in order to qualify the associated content for identification of the potential user task.
In some implementations, identifying one or more ongoing tasks from historical user data may include generating a probability distribution. In particular, the probability distribution may include a set of subsequent step intents (i.e., intents to perform an action) based at least in part on historical user data. Even more specifically, historical user data may be extracted from a plurality of users. Further, suggested subsequent steps may be identified based at least in part on the completion metric. In particular, identifying one or more ongoing tasks based on historical user data may include identifying suggested follow-up steps. Even more particularly, the suggested subsequent steps may be based in part on a completion metric, wherein the completion metric indicates a user state with respect to completion of a predetermined checkpoint associated with one or more ongoing tasks. Even more specifically, the predetermined checkpoint may indicate what information the user has consumed. For example, the subsequent steps of the identified suggestions may be different depending on the degree of completion of the task that the user is experiencing or what checkpoint the user has completed. For example, if the user is attempting to purchase headphones, if the user is in a preliminary stage (e.g., the user does not click (hit) any check points), the user may be most helped by viewing the shopping guide. On the other hand, if the user is in a later stage of the process (e.g., the user has clicked on multiple checkpoints, such as viewing a shopping guide), the user may be more interested in the commentary of a particular headset. Further, the historical data may indicate the user's strong interest in completing the task, but the user may have actually completed the task recently, so no more content may be exposed to the user regarding the completed task. In particular, the completion metric may be based at least in part on a URL associated with the at least one predetermined checkpoint. Even more particularly, the URL associated with at least one predetermined checkpoint may be associated with one or more ongoing tasks. For example, the URL from the purchase confirmation webpage may indicate that the user has purchased a set of headphones and completed the task. Accordingly, in response, the computing system may remove the headset from the potential ongoing task that the computing system has determined.
In some implementations, identifying one or more ongoing tasks from historical user data can include accessing a continuously updated probabilistic transition graph that describes a predictive pipeline of steps that a user can take to complete a task. In particular, the probability transition graph can identify subsequent step intents for the identified tasks. In particular, the probabilistic transition graph may be based on a plurality of historical user tasks, where the plurality of historical user tasks may span a plurality of different users. Even more particularly, the probability transition graph can reflect different subsequent step intents within the ongoing task demand for different categories of tasks. For example, even in a shopping task, there may be differences in the probability transition graph depending on the product (e.g., television versus mobile phone versus sofa). In particular, a unique distribution may be generated for each task category and subcategory. Based on the probabilistic transition graph, the computing system may identify a subsequent step intent of one or more ongoing tasks. In particular, the probabilistic transition graph can include a hierarchical representation of subsequent step intent for one or more ongoing tasks based at least in part on historical user data. Even more particularly, the computing system can select one or more content intents based at least in part on the hierarchical representation of subsequent step intents. By way of example, the determined or predicted user preferences may determine a hierarchical representation of subsequent step intent (e.g., common product attributes for all products explored, brand similarity, etc.).
In some implementations, suggested content items for each of one or more subsequent step intents within an ongoing task may be ranked. In particular, suggested content items for each of one or more subsequent step intents within the ongoing task may be ranked based on at least one quality attribute. Even more particularly, the quality can be one or more of other user engagement level (e.g., percentage of other users who interacted with the suggested content item when presented as an option), comment (e.g., comment on an article that can be provided as suggested content), freshness (e.g., how new or old the article is), or content relevance (e.g., headphone shopping guide as opposed to gaming computer comment).
In some implementations, surfacing the selectable action element for displaying the at least one ongoing task to the user includes surfacing the selectable element on a dedicated dashboard. For example, a dedicated dashboard may be configured to display a plurality of ongoing tasks. For example, a plurality of ongoing tasks (e.g., "headset shopping") may be depicted under the heading of an explicit task element representing the user, such that the user may interact with one of the plurality of ongoing tasks to move to another interface that allows the user to interact with a particular ongoing task with greater granularity.
Interacting with a particular ongoing task with greater granularity may allow a user to have a more detailed impact on the content exposed by the computing system, as well as expand the breadth of suggestions that the user may view. For example, the current suggestion can be seen as well as the implicit task elements of the preview, such as subsequent steps of the suggestion. The products can be tracked and viewed, and the tracked products can be interacted with by turning on or off alarms of the tracked products and the like. The user may indicate by interacting with particular exposed content whether the content is accurate in predicting useful content, or whether the user is not interested (e.g., if the user indicates that particular exposed content is not interested, the particular exposed content may be reordered, and alternate content may be exposed). Another way in which a user may interact deeper with a particular ongoing task is to interact with a timeline of content that the user has interacted with during pursuit of the particular ongoing task.
The dedicated dashboard may present selectable action elements indicating suggested content items in various ways. For example, selectable action elements may be presented on a conveyor belt (carousel) (e.g., a suggested movie to watch), as a preview of a suggested web page (e.g., a headset shopping guide), a notification of a price drop for a previously viewed item (e.g., a sale of a certain brand of headphones), and so forth. Further, the ranking of suggested content items may determine how to present the action elements of a particular suggested content item. For example, suggested content items ranked above a particular threshold may be presented with larger icons (e.g., with images depicting content), while suggested content items ranked below a particular threshold may be presented with smaller icons (e.g., under higher ranked content, only words, etc.). Even more particularly, a marker (badge) may be overlaid on the selectable action element, alerting the user to relevant information (e.g., streaming service providing suggested movies, time the user last viewed content, etc.).
In some implementations, surfacing the selectable action element for displaying the at least one ongoing task to the user includes obtaining current user web browser data. The current user web browser data may include one or more of textual content or image content. Based at least in part on the one or more textual or image content, one or more ongoing tasks may be identified from historical user data. In particular, identifying one or more ongoing tasks based on historical user data may be based at least in part on semantically analyzing textual content. Even more particularly, the content type may be determined based at least in part on semantically analyzed textual content of current user web browser data. Further, identifying one or more ongoing tasks based on historical user data may be based at least in part on identifying one or more constituent features of the image. Even more particularly, the content type can be determined based at least in part on one or more constituent features of an image of current user web browser data. Continuing with the example above, if the user is currently browsing an article about earplugs, the computing system may expose a selectable action element suggesting an article related to purchasing a set of headphones based at least in part on the work "earplugs" appearing in the article or an image of earplugs appearing in the article.
Accordingly, the present disclosure provides a computing system and method that may be used to expose selectable action elements, e.g., action elements configured to provide access to at least one suggested content item, for at least one ongoing task. In particular, the present disclosure provides a general pipeline to identify potential tasks that a user is continuously interested in or has not completed so that suggestions of content items can be made to further advance the tasks of the identified user. The pipeline combines a hierarchical graph, a machine learning model, and historical data to determine relevance and completion of tasks that a user may wish to continue performing, and to present selectable action elements in various interfaces.
The system and method of the present disclosure provide a number of technical effects and benefits. As one example technical effect, the proposed technology can provide users with an immersive and beneficial experience that predicts subsequent steps in a task that the user is attempting to complete or continue to participate in. In particular, providing helpful suggestions about tasks can greatly overcome user frustration because many users participate in long-term tasks involving multiple searches without the ability to leverage previously completed work in an efficient and productive manner by filtering spam. Rather than predicting what the user may be searching for based solely on initial text query input, the present disclosure shows a way to directly provide the results of historical searches to more efficiently provide the most helpful content to the user. Further, the present disclosure allows users to more fully utilize historical content in conjunction with their future content to complete initiated tasks in a manner that is not possible based on an initial input predictive search alone. In particular, the proposed techniques reduce redundant work or search without results, thereby saving computing resources (e.g., processor usage, memory usage, network bandwidth, etc.) as well as user time and frustration. In particular, by exposing relevant content of an ongoing task, the total number of searches required to perform the task may be reduced, which may save computing resources such as those described above. Furthermore, the proposed techniques expose content that is more suitable for the user, which may not be exposed based on a general search that the user may have entered, thus reducing meaningless content consumption.
Referring now to the drawings, example embodiments of the disclosure will be discussed in more detail.
Example apparatus and System
Fig. 1 depicts a block diagram of an example computing system 100 that performs personalized and/or intelligent searches in response, at least in part, to a visual query, according to an example embodiment of the present disclosure. Computing system 100 includes a user computing device 102 and a network server 104 communicatively coupled by a network 180.
The user computing device 102 may be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
The user computing device 102 includes one or more processors 112 and memory 114. The one or more processors 112 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and may be an operatively connected processor or processors. Memory 114 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, disks, and the like, and combinations thereof. The memory 114 may store data 116 and instructions 118 that are executed by the processor 112 to cause the user computing device 102 to perform operations.
In some implementations, the web browser application 124 of the user computing device 102 retrieves content related to the object referenced in the user input component 122 of the user computing device 102. For example, a web browser may retrieve content related to a web page requested by a user and then display the page to the user interface 158 of the device 102.
Although web browser application 124 is shown in fig. 1 as being included in device 102, in other implementations, some or all of the functionality of web browser application 124 may be implemented on web server 104.
The web server 104 includes one or more front-end servers 136 and one or more back-end servers 140. The front end server 136 may receive the user input component 122 from a user computing device, such as the user computing device 102 (e.g., from the web browser 124). The front end server 136 may provide image data to the back end server 140. The back-end server 140 may identify content associated with the object identified in the user input data and provide the content to the front-end server 136. In turn, the front end server 136 may provide content to the mobile device from which the image data is received.
The back end server 140 includes one or more processors 142 and memory 146. The one or more processors 142 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and may be an operatively connected processor or processors. The memory 146 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, a disk, and the like, as well as combinations thereof. Memory 146 may store data 148 and instructions 150 that are executed by processor 142 to cause web server 104 to perform operations. The back end server 140 may also include a query processing system 154.
Alternatively, the back-end server 140 may not have access to pre-existing files to provide to the front-end server 136. Thus, the file may be generated upon request by other programs that provide content 160 in communication with web server 104. In turn, web server 104 and front end server 136 may provide content to mobile devices from which image data is received.
In some implementations, the network server 104 includes or is implemented by one or more server computing devices. Where the network server 104 includes multiple server computing devices, such server computing devices may operate according to a sequential computing architecture, a parallel computing architecture, or some combination thereof.
In some implementations, the query processing system 154 includes multiple processing systems. One example system may allow the system to identify a plurality of candidate search results. For example, the system may identify a plurality of candidate search results when the user input component is first received. On the other hand, after the system has completed further processing, the system may identify a plurality of search results. In particular, the system may identify multiple search results based on more targeted queries that the system has generated. Even more specifically, when the system first receives the user input component, the system can generate a plurality of candidate search results, which are then regenerated after further processing based on the more targeted queries that the system has generated.
After the content is selected, the content may be provided to the user computing device 102, received from the user computing device 102, stored in the content cache 138 of the web server 104, and/or stored at the top of the memory stack of the front end server 136. In this way, content may be quickly presented to a user in response to the user requesting the content. If content is provided to the user computing device 102, the web browser 124 may store the content in a content cache 134 or other fast-access storage. For example, the web browser 124 can store the content of the object and a reference to the object such that the web browser 124 can identify the appropriate content of the object in response to determining to render the content of the object.
The user computing device 102 may also include one or more user input components 122 that receive user input. For example, the user input component 122 may be a touch-sensitive component (e.g., a touch-sensitive display screen or touchpad) that is sensitive to touch by a user input object (e.g., a finger or stylus). The touch sensitive component may be used to implement a virtual keyboard. Other example user input components include a microphone, a conventional keyboard, or other devices that a user may use to provide user input.
FIG. 1 illustrates an example computing system that can be used to implement the present disclosure. Other different distributions of components may also be used. For example, some or all of the various aspects of the visual search system may alternatively be located at the user computing device 102 and/or implemented at the user computing device 102.
Fig. 2 illustrates an exemplary client device 102 that includes one or more processors 210 and a user interface 212. The client 102 may be, for example, but not limited to, a personal computer, a laptop computer, a personal handheld device, a mobile phone, a game console, a set-top box, an embedded system, and the like. Client 102 may include any computing device capable of requesting web content from a web content server, such as server 104.
The client 102 includes a user interface 212, which user interface 212 may include various types of inputs and outputs that allow a user to interact with the client 102. Example inputs may include, but are not limited to, a mouse, a keyboard, a keypad, a touch screen, a microphone, and so forth. Example outputs may include, but are not limited to, a display for visual output, a speaker for audible output, and the like. Many, if not all, of the above interface examples are driven, supported, or enhanced by hardware, firmware, and/or software located or running within the client 102. For example, to view web content, the user interface 212 may include a web browser 214. Browser 214 includes software running on client 102 that allows a user to request and view web content (i.e., content that may be provided from a server (e.g., server 104) connected to client 102 via one or more networks (e.g., the internet or world wide web)). Examples of browser 214 include, but are not limited to, google TM Chrome, a company,
Fig. 3 illustrates an exemplary browser window 314 displayed to a user of client device 102. A typical browser window 314 may include a title bar 316, a menu bar 318, a tool bar 320, a URL (uniform resource locator) field 324, and a body 325. The title bar 316 may contain the title that the designer of the web page names for the web page being viewed. Menu bar 318 may contain various drop down menus including tools and options related to the web page being viewed. Toolbar 320 may contain various buttons 322 representing tools and options related to the currently viewed web page and/or navigation to other web pages. The URL field 324 may contain the address of the web page being viewed and may allow the user to type in the address of other web pages to be viewed. The principal 325 may contain the content of the web page including, for example, text 326 and images 330. The text in the body 325 may also represent a hyperlink 328, which hyperlink 328 is typically highlighted and/or underlined to distinguish it from general text. If the user selects or clicks on hyperlink 328, a new web page may appear, for example, in place of or in addition to the currently viewed web page associated with the text displayed in hyperlink 328.
When a user selects to view a web page, for example by entering an address in a URL field in a browser window, such as browser window 314, clicking on a hyperlink (in the currently viewed web page, email, electronic document, etc.), or using menu bar 318 or toolbar 320, or selecting to view particular web content (e.g., a new view of an image) on the web page, a request for the corresponding web content is sent to the appropriate web content server 104 over one or more networks 106. The server 104 retrieves or otherwise obtains the requested web content, for example, from the database 108 and provides (transmits) it to the requesting client device 102. The client device 102 receives the requested web content and renders it for display, for example, in a browser window 314.
Example model arrangement
FIG. 4 depicts a block diagram of an example content recommendation model 200, according to an example embodiment of the present disclosure. In some implementations, the content recommendation model 200 is trained to receive a set of input data 204 describing historical user data, and as a result of receiving the input data 204, provide output data 206, the output data 206 identifying content recommended by the machine learning model to the user to complete a subsequent step of prediction in the identified task. Thus, in some implementations, the task generative model 200 can include a task generative model 202, the task generative model 202 operable to generate one or more tasks that the user is currently participating in. In particular, the task generation model 202 may utilize the input data 204 to determine a current task based on historical user actions determined from historical user data. For example, the task generation model may generate annotations for historical user data (e.g., based on metadata associated with the historical user data). Based on the annotations associated with the historical user data, the task generation model 202 may generate one or more predicted tasks that the user may be participating in. Even more particularly, the content recommendation model may utilize the input data 204 in conjunction with one or more predicted tasks that the user may be participating in, as generated by the task generation model 202, to generate the output data 206, in particular, one or more content predicted to complete a subsequent step in the predicted tasks that the user may be participating in.
Example method
Fig. 9 depicts a flowchart of an example method performed in accordance with an example embodiment of the present disclosure. Although fig. 9 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particular illustrated order or arrangement. The various steps of the method 900 may be omitted, rearranged, combined, and/or modified in various ways without departing from the scope of the present disclosure.
At 902, a computing system may obtain historical user data describing historical user actions taken in one or more past user online sessions. In particular, historical user data describing historical user actions may be annotated with annotations describing attributes of content associated with the user actions.
At 904, the computing system can identify one or more ongoing tasks from the historical user data.
At 906, the computing system can determine suggested content items for each of the one or more ongoing tasks.
At 908, the computing system may expose a selectable action element for displaying at least one ongoing task to the user. In particular, the selectable action element may be configured to provide access to at least one suggested content item for at least one of the egress tasks.
Example applications
Fig. 5 shows a first exemplary application of the method disclosed in fig. 9. An exemplary user interface is shown at 500, where a user may participate in continuing a predicted task. For example, the user may engage in continuing the predicted task (e.g., a task-specific dashboard prompting predicted content) by interacting with (e.g., touching, selecting, switching, etc.) selectable action element 502. In particular, selectable action element 502 may include an icon 508 symbolizing the predicted task. For example, if the predicted task is to purchase a set of headphones, selectable action element 502 may include an icon 508 for the set of headphones. The user interface 500 may additionally include at least one content 512 that is directly recommended to the user. In particular, the user may interact with the at least one content 512 that is recommended directly without engaging the selectable action element 502. For example, the user may be directly engaged in directly recommended content 512 without having to prompt a task-specific dashboard predicting the content by interacting with selectable action elements 502. The user interface 500 may include an overlay 504, the overlay 504 describing how directly recommended content 512 may affect the predicted task. Additionally, the user interface 500 may include tags 506 that describe keywords associated with the predicted task. Additionally, the user interface 500 may include a preferences switch 510, where the user may participate in the preferences switch 510 to indicate that the user likes directly recommended content 512. If the user activates the preference switch 510, the computing system may save the directly recommended content 512 in another recoverable location. The computing system may additionally have a button 514 with which the user may interact to launch an immersive dashboard related to the predicted task.
Fig. 6 illustrates another exemplary application of the method disclosed in fig. 9. 600 illustrates an exemplary immersive dashboard user interface in which a user may engage in continuing more than one predicted task. For example, the dashboard may indicate more than one predicted task with text headings 602 so that the user can browse which task the user wishes to continue. The predicted task may include a panel 610 on the conveyorized feature 604 indicating the predicted subsequent steps of the users participating in the task. For example, panel 610 on conveyorized feature 604 may include a feature for the user to continue browsing options. The panels 610 on the conveyorized feature 604 may include predictors of interest. Panels 610 on the conveyor belt feature 604 may include content saved by the user. In particular, the predicted task may be cooking, for example. Thus, as a further example, the panel 610 on the conveyorized feature 604 indicating the predicted item of interest may comprise the predicted recipe of interest. As another example, if the predicted task is to purchase headphones, the panel 610 on the conveyor-to-belt feature 604 indicating the predicted item of interest may include sold headphones or earplugs. The panel 610 may include an information overlay 612. The information overlay 612 may indicate information related to the content associated with the panel 610. For example, the information overlay 612 may indicate a price or source of content associated with the panel 610. The user may indicate a desire to see more detailed suggestions related to the task by interacting with the detail icon 606. Upon interacting with the detail icon 606, the user may view additional content related to the task. Upon interacting with detail icon 606, the user may engage in a further dashboard displaying additional content related to a particular task. The additional content may have an information overlay 608, the information overlay 608 indicating the reason the computing system exposed the particular content. For example, the content may have an information overlay 608 that indicates that the content was viewed by the user in the past (e.g., "viewed four days ago"), or that the content has similar characteristics to the user-saved content or content previously viewed by the user (e.g., "inspired by saved content").
Fig. 7 illustrates another exemplary application of the method disclosed in fig. 9. 700 illustrates an exemplary immersive dashboard user interface in which a user may engage in continuing a particular predicted task. In particular, 700 illustrates how an immersive dashboard associated with a particular predicted task can allow a user to perform a particular task with increased specificity. For example, the card 712 may indicate predicted content related to a particular task. In particular, the specified action element 702 may be exposed such that a user may interact with the specified action element 702 to trigger a predicted action tailored to particular predicted content in connection with a particular task. For example, the designated action element 702 may link the predicted content with other features of the smart home (e.g., nest, echo, etc.). As a further example, for a card 712 suggesting a recipe, the designated action elements 702 may include actions that the user may engage in, such as purchasing ingredients. The card 712 may also have a bookmark feature 704 such that the user may indicate that they wish to revisit the content associated with the card 712. In some cases, an overlay may appear on the interface prompting the user to indicate their feedback in response to the predicted content. For example, the user may interact with an affirmative (positive) icon 706 or a negative (negative) icon 708 on the overlay to indicate their feedback regarding the indicated content. In addition, the user may insert a note 710 associated with a particular piece of content, where the note may contain the user's written memo regarding the associated content. Immersive dashboard user interface 700 can additionally contain a share icon 714 where the user can share tasks with other users. The second user may be a passive observer in the course of the task, or may be added as an active contributor. Where more than one user contributes to a particular task, certain predictions may be attributed to a particular user and a representation of the particular user (e.g., an image, symbol, name, etc.) may be used to indicate to which user the particular prediction is attributed.
Fig. 8 shows another exemplary application of the method disclosed in fig. 9. 800 illustrates another exemplary immersive dashboard user interface in which a user may engage in continuing a particular predicted task. In particular, 800 further illustrates how an immersive dashboard associated with a particular predicted task can allow a user to perform a particular task with increased specificity. For example, the immersive dashboard 800 may include a related activities search 802, wherein the related activities search 802 may reveal which keywords are included in the search. In some cases, the keywords included in the search may be hyperlinked so that interaction with them initiates the user's full search. Alternatively, results from the related activity search 802 may be displayed in the results panel 808 next to the related activity search 802. The resulting panel 808 may be displayed in a conveyor belt fashion. The immersive dashboard user interface 800 can include a step counter 810 that indicates the number of subsequent steps that the computing system has predicted. The number of subsequent steps indicated on step counter 810 may be the number of most highly suggested steps (e.g., steps above a particular confidence threshold). Further, the predicted step may be indicated in step summary panel 804, where step summary panel 804 may be hyperlinked so that a user may interact with step summary panel 804 to initiate the associated step. For example, the step of predicting may be reviewing price declines for items that the user has indicated are of interest (e.g., by viewing them in the past, indicated as favorites, added to a wish list, bookmarks, etc.). Another predictive step may be to browse for similar products (e.g., browsing for similar products for less than a certain fee). Immersive dashboard 800 may also include user interface prompts 806. User interface prompts 806 may allow a user to interact therewith to present even more detailed predictions output by the computing system. By way of example, user interface prompt 806 may be associated with step counter 810 and step summary panel 804 such that a user may select the user interface prompt to view all predicted subsequent steps, rather than only the most highly suggested subsequent steps selected by the computing system.
Supplementary disclosure
The technology discussed herein relates to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and received from these systems. The inherent flexibility of computer-based systems allows for a variety of possible configurations, combinations, and divisions of tasks and functions between components. For example, the processes discussed herein may be implemented using a single device or component or multiple devices or components operating in combination. The database and applications may be implemented on a single system or may be distributed across multiple systems. The distributed components may operate sequentially or in parallel.
While the present subject matter has been described in detail with respect to various specific exemplary embodiments thereof, each example is provided by way of explanation, not limitation of the disclosure. Those skilled in the art, having the benefit of the foregoing description, may effect numerous modifications, alterations, and equivalents to the described embodiments. Accordingly, the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art. For instance, features illustrated or described as part of one embodiment, can be used with another embodiment to yield a still further embodiment. Thus, the present disclosure is intended to cover such alternatives, modifications, and equivalents.
Claims (20)
1. A computer-implemented method for task-specific action element generation, the method comprising:
obtaining, by a computing system, historical user data describing historical user actions taken in one or more past user online sessions, wherein the historical user data has been annotated with annotations describing properties of content associated with the user actions;
identifying, by the computing system, one or more ongoing tasks from the historical user data;
determining, by the computing system, a suggested content item for each of the one or more ongoing tasks; and
exposing, by a computing system, a selectable action element for displaying at least one ongoing task to a user, the selectable action element configured to provide access to at least one suggested content item of the at least one ongoing task.
2. The computer-implemented method of claim 1, wherein obtaining, by a computing system, historical user data describing historical user actions comprises:
historical user actions are extracted from a plurality of web pages across a plurality of web browser sessions by a computing system.
3. The computer-implemented method of claim 1, wherein identifying, by the computing system, the one or more ongoing tasks from historical user data comprises:
annotating, by the computing system, the historical user data with annotations describing attributes of content associated with the user action;
clustering, by a computing system, the annotated historical user data into a plurality of clusters; and
identifying one or more ongoing tasks from historical user data based at least in part on the plurality of clusters.
4. The computer-implemented method of claim 1, wherein identifying, by the computing system, the one or more ongoing tasks from historical user data comprises:
processing, by the computing system, the historical user data with a machine learning model; and
generating, by the machine learning model, the one or more ongoing tasks from historical user data.
5. The computer-implemented method of claim 1, wherein identifying, by the computing system, the one or more ongoing tasks from the historical user data is based at least in part on a relevance score, wherein identifying one or more ongoing tasks from the historical user data comprises:
content that includes a higher relevance score is weighted more heavily than content that has a lower relevance score.
6. The computer-implemented method of claim 5, wherein the relevance score is based at least in part on a timestamp associated with the historical user data.
7. The computer-implemented method of claim 1, wherein identifying, by the computing system, the one or more ongoing tasks from historical user data further comprises:
generating, by a computing system, a probability distribution, wherein the probability distribution comprises a set of intents based at least in part on aggregated historical user data for a plurality of users; and
identifying, by the computing system, a suggested subsequent step based at least in part on a completion metric, wherein the completion metric indicates a state of the user with respect to completing a predetermined checkpoint associated with the one or more ongoing tasks, wherein the checkpoint indicates information that the user has consumed.
8. The computer-implemented method of claim 7, wherein the completion metric is based at least in part on a URL associated with at least one predetermined checkpoint associated with the one or more ongoing tasks.
9. The computer-implemented method of claim 1, wherein identifying, by the computing system, the one or more ongoing tasks from historical user data further comprises:
accessing, by a computing system, a probability transition graph describing a persistent update of content intent; and
identifying, by the computing system, a subsequent step intent of the one or more ongoing tasks based at least in part on the continuously updated probabilistic transition graph.
10. The computer-implemented method of claim 9, wherein:
the probabilistic transition graph describing content intent includes a hierarchical representation of subsequent step intent of the one or more ongoing tasks based at least in part on historical user data; and
identifying, by the computing system, the subsequent-step intent of the one or more ongoing tasks includes selecting, by the computing system, one or more content intents based at least in part on the hierarchical representation of the subsequent-step intent.
11. The computer-implemented method of claim 1, wherein determining, by the computing system, suggested content items for each of the one or more ongoing tasks comprises ranking, by the computing system, suggested content items for each of the one or more ongoing tasks based on at least one quality attribute.
12. The computer-implemented method of claim 11, wherein the quality attributes comprise one or more of:
other user engagement levels;
commenting;
freshness; or alternatively
The relevance of the content.
13. The computer-implemented method of claim 1, wherein surfacing, by the computing system, the selectable action element for displaying the at least one ongoing task to the user comprises surfacing, by the computing system, the selectable action element on a dedicated dashboard.
14. The computer-implemented method of claim 1, wherein surfacing, by a computing system, a selectable action element for displaying at least one ongoing task to a user comprises:
obtaining, by a computing system, current user web browser data, wherein the current user web browser data includes one or more of textual content or image content currently presented to a user;
selecting, by the computing system, the at least one ongoing task according to historical user data based at least in part on the one or more textual content or image content;
exposing, by the computing system, a selectable action element for displaying at least one ongoing task to the user, the selectable action element overlaid on or adjacent to the current user web browser data.
15. The computer-implemented method of claim 14, wherein selecting, by the computing system, the at least one ongoing task according to historical user data based at least in part on the one or more of text content or image content comprises:
semantic analysis is carried out on the text content of the current user web browser data by the computing system; and
determining, by the computing system, a content type based at least in part on semantically analyzed textual content of the current user web browser data.
16. The computer-implemented method of claim 14, wherein selecting, by a computing system, the at least one or more ongoing tasks according to historical user data based at least in part on one or more of the text content or the image content comprises:
identifying, by the computing system, one or more constituent features of image content of current user web browser data; and
determining, by the computing system, a content type based at least in part on the one or more constituent features of the image content of the current user web browser data.
17. A computing system, comprising:
one or more processors; and
a non-transitory computer-readable storage medium storing instructions executable by the one or more processors and that, when executed, cause a computing system to perform operations comprising:
obtaining, by a computing system, historical user data describing historical user actions taken in one or more past user online sessions, wherein the historical user data has been annotated with annotations describing properties of content associated with the user actions;
identifying, by the computing system, one or more ongoing tasks from the historical user data;
determining, by the computing system, a suggested content item for each of the one or more ongoing tasks; and
exposing, by a computing system, a selectable action element for displaying at least one ongoing task to a user, the selectable action element configured to provide access to at least one suggested content item of the at least one ongoing task.
18. The computing system of claim 17, wherein identifying, by the computing system, one or more ongoing tasks from the historical user data comprises:
annotating historical user data describing attributes of content associated with the user action;
arranging the annotated historical user data into a plurality of clusters;
identifying one or more ongoing tasks from historical user data based at least in part on the plurality of clusters.
19. The computing system of claim 17, wherein identifying, by the computing system, one or more ongoing tasks from the historical user data comprises:
inputting historical user data into a machine learning model; and
one or more ongoing tasks are generated by the machine learning model from the historical user data.
20. A non-transitory computer-readable storage medium storing instructions executable by a computing system and that when executed cause the computing system to perform operations comprising:
obtaining, by a computing system, historical user data describing historical user actions taken in one or more past user online sessions, wherein the historical user data has been annotated with annotations describing properties of content associated with the user actions;
identifying, by the computing system, one or more ongoing tasks from the historical user data;
determining, by the computing system, a suggested content item for each of the one or more ongoing tasks; and
exposing, by a computing system, a selectable action element for displaying at least one ongoing task to a user, the selectable action element configured to provide access to at least one suggested content item of the at least one ongoing task.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/368,155 | 2021-07-06 | ||
US17/368,155 US20230007980A1 (en) | 2021-07-06 | 2021-07-06 | Generating Action Elements Suggesting Content For Ongoing Tasks |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115168667A true CN115168667A (en) | 2022-10-11 |
Family
ID=82258232
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202210756943.1A Pending CN115168667A (en) | 2021-07-06 | 2022-06-29 | Method and system for generating action elements of suggested content for an ongoing task |
Country Status (5)
Country | Link |
---|---|
US (1) | US20230007980A1 (en) |
EP (1) | EP4116843A1 (en) |
JP (1) | JP7467536B2 (en) |
KR (1) | KR20230007946A (en) |
CN (1) | CN115168667A (en) |
Family Cites Families (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP4861004B2 (en) | 2005-12-27 | 2012-01-25 | 株式会社エヌ・ティ・ティ・ドコモ | Service recommendation system and service recommendation method |
US11720940B2 (en) * | 2015-10-29 | 2023-08-08 | Micro Focus Llc | System and apparatus for models based on data augmented with conceivable transitions |
CN106682925A (en) * | 2015-11-06 | 2017-05-17 | 北京奇虎科技有限公司 | Method and device for recommending advertisement content |
US20180027082A1 (en) * | 2016-07-19 | 2018-01-25 | International Business Machines Corporation | Determining recommendations based on user intent |
CN106530058A (en) * | 2016-11-29 | 2017-03-22 | 广东聚联电子商务股份有限公司 | Method for recommending commodities based on historical search and browse records |
US10810532B2 (en) * | 2017-02-28 | 2020-10-20 | Fuji Xerox Co., Ltd. | Systems and methods for access control based on machine-learning |
US11042810B2 (en) * | 2017-11-15 | 2021-06-22 | Target Brands, Inc. | Similarity learning-based device attribution |
US10733545B2 (en) * | 2018-10-04 | 2020-08-04 | Microsoft Technology Licensing, Llc | User-centric contextual information for browser |
US11017045B2 (en) * | 2018-11-19 | 2021-05-25 | Microsoft Technology Licensing, Llc | Personalized user experience and search-based recommendations |
-
2021
- 2021-07-06 US US17/368,155 patent/US20230007980A1/en active Pending
-
2022
- 2022-06-23 EP EP22180785.2A patent/EP4116843A1/en active Pending
- 2022-06-29 CN CN202210756943.1A patent/CN115168667A/en active Pending
- 2022-06-30 KR KR1020220080569A patent/KR20230007946A/en active Search and Examination
- 2022-07-01 JP JP2022107012A patent/JP7467536B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
EP4116843A1 (en) | 2023-01-11 |
JP2023008982A (en) | 2023-01-19 |
KR20230007946A (en) | 2023-01-13 |
JP7467536B2 (en) | 2024-04-15 |
US20230007980A1 (en) | 2023-01-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9613132B2 (en) | Method of and system for displaying a plurality of user-selectable refinements to a search query | |
US9852227B2 (en) | Control for persistent search results and iterative searching | |
JP4805929B2 (en) | Search system and method using inline context query | |
KR101278406B1 (en) | System and method for assisting search requests with vertical suggestions | |
US8930393B1 (en) | Referent based search suggestions | |
US11693863B1 (en) | Query completions | |
US7664680B2 (en) | Method and apparatus for creating contextual auction feeds | |
US8782033B2 (en) | Entity following | |
US20160275127A1 (en) | Systems and methods for presenting content | |
US10642905B2 (en) | System and method for ranking search engine results | |
US8850301B1 (en) | Linking to relevant content from an ereader | |
WO2014113396A1 (en) | Intent prediction based recommendation system | |
WO2007134194A2 (en) | Web notebook tools | |
WO2013138742A1 (en) | Systems and methods for delivery techniques of contextualized services on mobile devices | |
CN101073080A (en) | Suggesting search engine keywords | |
US20140156623A1 (en) | Generating and displaying tasks | |
US10747400B1 (en) | Shaping a relevance profile for engagement | |
EP2189917A1 (en) | Facilitating display of an interactive and dynamic cloud with advertising and domain features | |
WO2012023541A1 (en) | Information provision device, information provision method, programme, and information recording medium | |
US9576077B2 (en) | Generating and displaying media content search results on a computing device | |
US20190258666A1 (en) | Resource accessibility services | |
JP7467536B2 (en) | Generate action elements that suggest content for ongoing tasks | |
US20200401638A1 (en) | Method of and system for generating search query completion suggestion on search engine |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US7031975B2 - Method and program for creating picture data, and system using the same - Google Patents
Method and program for creating picture data, and system using the same Download PDFInfo
- Publication number
- US7031975B2 US7031975B2 US10/652,652 US65265203A US7031975B2 US 7031975 B2 US7031975 B2 US 7031975B2 US 65265203 A US65265203 A US 65265203A US 7031975 B2 US7031975 B2 US 7031975B2
- Authority
- US
- United States
- Prior art keywords
- memory
- setting value
- copy destination
- displayed
- picture
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000000034 method Methods 0.000 title claims abstract description 34
- 230000015654 memory Effects 0.000 claims description 135
- 238000003860 storage Methods 0.000 claims description 70
- 230000010365 information processing Effects 0.000 claims description 68
- 238000010276 construction Methods 0.000 claims description 50
- 230000006870 function Effects 0.000 claims description 42
- 230000008859 change Effects 0.000 claims description 6
- 230000000116 mitigating effect Effects 0.000 abstract 1
- GHVNFZFCNZKVNT-UHFFFAOYSA-N decanoic acid Chemical compound CCCCCCCCCC(O)=O GHVNFZFCNZKVNT-UHFFFAOYSA-N 0.000 description 30
- 230000010076 replication Effects 0.000 description 27
- 238000010586 diagram Methods 0.000 description 20
- 238000004891 communication Methods 0.000 description 11
- 230000008569 process Effects 0.000 description 11
- 230000005540 biological transmission Effects 0.000 description 4
- 230000004044 response Effects 0.000 description 4
- 238000009826 distribution Methods 0.000 description 3
- 238000003825 pressing Methods 0.000 description 3
- 241001362551 Samba Species 0.000 description 2
- 238000004590 computer program Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 239000004065 semiconductor Substances 0.000 description 2
- 238000012790 confirmation Methods 0.000 description 1
- 239000000470 constituent Substances 0.000 description 1
- 230000008034 disappearance Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 238000002360 preparation method Methods 0.000 description 1
- 238000007639 printing Methods 0.000 description 1
- 238000012545 processing Methods 0.000 description 1
- 238000011084 recovery Methods 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0628—Interfaces specially adapted for storage systems making use of a particular technique
- G06F3/0629—Configuration or reconfiguration of storage systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0602—Interfaces specially adapted for storage systems specifically adapted to achieve a particular effect
- G06F3/0604—Improving or facilitating administration, e.g. storage management
- G06F3/0605—Improving or facilitating administration, e.g. storage management by facilitating the interaction with a user or administrator
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0668—Interfaces specially adapted for storage systems adopting a particular infrastructure
- G06F3/067—Distributed or networked storage systems, e.g. storage area networks [SAN], network attached storage [NAS]
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
- Y10S707/99945—Object-oriented database structure processing
Definitions
- the present invention relates to a picture data creating method, computer and program.
- the storage system is provided with many disk drives (physical disks). Then, by managing and working these disk drives through, for example, RAID scheme, many logical volumes can be organized on the disk drives, thus providing logical storage areas for the information processing apparatus.
- NAS Network Attached Storage
- TCP/IP Transmission Control Protocol/Internet Protocol
- a technique is known in which data of a logical volume in a storage system is copied to another logical volume provided in the same storage system or in a different storage system in order to improve maintainability/anti-fault properties in the storage system as above (for example, see JP-A-10-333838). Further, a technique for copying data stored as file data in a storage system to a different storage system is also known (for example, see JP-A-2002-351703).
- the present invention has been made and it is an object of the invention to provide a picture data creating method, computer and program.
- a picture data creation method for creating, by means of a computer, picture data necessary to display on a display unit a picture in which two or more items and input columns made to be correspondent with the individual items are provided, the input columns are provided for selecting setting values correspondent with the items from a plurality of setting value candidates which can be correspondent with the items and inputting the selected setting values
- the computer has a step of creating picture data necessary for causing the display unit to display a picture in which the mutually different setting value candidates are displayed as defaults in the individual input columns.
- the aforementioned “item” may be of any type.
- an identifier of copy source memory volume, an identifier of copy source physical disk, an identifier of primary LU or an identifier of copy source LU, for instance may be considered as the “item”.
- the “setting value” is to be correspondent with each “item” and may be of any type.
- an identifier of copy destination memory volume, an identifier of copy destination physical disk, an identifier of secondary LU or an identifier of copy destination LU, for instance may be considered as the “setting value”.
- the “computer” may also be of any type.
- a host computer When the present invention is applied to the storage system, a host computer, an array controller, a management terminal, an information processing apparatus, a memory device controller, a channel controller or a disk controller, for instance, may be considered as the “computer”.
- the “picture data” may also be of any type. For example, it may be a file described with such language as HTML or XML.
- FIG. 1 is a block diagram showing an example of construction of a system according to an embodiment of the invention.
- FIG. 2 is a diagram showing an example of a picture displayed on a display unit.
- FIGS. 3A , 3 B and 3 C show an example of a default LU list according to an embodiment of the invention.
- FIG. 4 is a diagram showing an example of a picture displayed on the display unit according to an embodiment of the invention.
- FIG. 5 is a block diagram showing an example of a system according to another embodiment of the invention.
- FIG. 6 is a diagram showing an appearance of a storage system according to the FIG. 5 embodiment of the invention.
- FIGS. 7A and 7B are block diagrams showing an example of construction of an information processing apparatus according to an embodiment of the invention.
- FIGS. 8A and 8B are diagrams showing an example of construction of a memory device according to an embodiment of the invention.
- FIGS. 9A and 9B are block diagrams showing an example of construction of a channel control unit according to an embodiment of the invention.
- FIG. 10 shows an example of a LU management table according to an embodiment of the invention.
- FIG. 11 is shows an example of a virtual logical volume management table according to an embodiment of the invention.
- FIGS. 12A and 12B are block diagrams showing an example of construction of a disk control unit according to an embodiment of the invention.
- FIG. 13 is a block diagram showing an example of construction of a management terminal according to an embodiment of the invention.
- FIG. 14 is a block diagram showing an example of construction of software of the FIG. 5 system according to an embodiment of the invention.
- FIG. 15 is a flowchart showing part of an example of a process for determining defaults of setting value candidates according to an embodiment of the invention.
- FIG. 16 is a diagram showing an example of a picture displayed on the display unit according to another embodiment of the invention.
- FIG. 17 is a diagram showing an example of a picture displayed on the display unit according to still another embodiment of the invention.
- FIG. 18 shows an example of an empty LU list according to an embodiment of the invention.
- FIG. 19 is a flowchart showing part of an example of a process for determining defaults of setting value candidates according to another embodiment of the invention.
- FIG. 20 shows an example of a default LU list according to another embodiment of the invention.
- FIG. 21 shows an example of a default LU list according to still another embodiment of the invention.
- FIG. 22 shows an example of a default LU list according to still another embodiment of the invention.
- FIG. 23 is a flowchart showing part of an example of a process for determining defaults of setting value candidates according to still another embodiment of the invention.
- FIG. 24 is a diagram showing an example of a picture displayed on the display unit according to still another embodiment of the invention.
- FIG. 25 is a diagram showing another example of a picture displayed on the display unit according to an embodiment of the invention.
- FIG. 26 is a diagram showing still another example of a picture displayed on the display unit according to still another embodiment of the invention.
- FIG. 27 is a diagram showing still another example of a picture displayed on the display unit according to still another embodiment of the invention.
- FIG. 28 shows another example of the LU management table according to an embodiment of the invention.
- FIG. 29 shows another example of the empty LU list according to an embodiment of the invention.
- FIG. 30 is a diagram showing still another example of a picture displayed on the display unit according to still another embodiment of the invention.
- FIG. 31 is a diagram showing still another example of a picture displayed on the display unit according to still another embodiment of the invention.
- FIG. 32 is a diagram showing still another example of a picture displayed on the display unit according to still another embodiment of the invention.
- FIG. 33 shows another example of the empty LU list according to still another embodiment of the invention.
- the computer system 2000 comprises a host computer 2100 , an array controller 2200 to which the host computer 2100 is connected and a disk array 2300 connected to the array controller 2200 .
- the host computer 2100 and array controller 2200 may be connected together directly or through the medium of a network as illustrated.
- the shown network is a network based on the TCP/IP.
- the host computer 2100 is constructed as exemplified in FIG. 13 , including a CPU for executing programs and performing operations, a memory for storing programs and data, a port for connection to the array controller 2200 , a storage unit for storing programs and data, an input unit for performing input operations, an output unit for delivering (for example, displaying/printing) data and a recording medium read unit for installing various programs from a recording medium to the storage unit/memory.
- the host computer 2100 may be a computer of any type such as for example a personal computer.
- the disk array includes many physical disks (in this figure, disks 301 to 309 ).
- the array controller 2200 manages/controls the many physical disks of disk array 2300 and organizes many logical volumes (simply referred to as “LU's”; eight LU 0 to LU 7 in total in the example of FIG. 1 ).
- the array controller 2200 is also a computer. Accordingly, it may take the same form as the host computer 2100 or for example, it may be a CPU for executing and operating programs or a unit (see FIG. 12A ) having a memory/NVRAM for storing programs and data and an interface section for connection to the host computer 2100 . In the case of such a form, programs can be installed from the recording medium read unit of the host computer 2100 . It is to be noted that the LU's may also be organized through the RAID scheme.
- a method has been known which forms pairs each having two LU's in the disk array 2300 of the computer system 2000 constructed as above and duplicates data between paired LU's. This is also termed “replication management”.
- the array controller 2200 provides for data a “replication management function” 2240 to store a replication of data stored in a particular LU (hereinafter referred to as “primary LU”) also in a different LU (hereinafter referred to as “secondary LU”).
- the replication management function 2240 can be realized by causing the CPU of array controller 2200 to execute a program stored in the NVRAM.
- the array controller 2200 also has various functions including a function to act as a Web server to be described later and a function to act as a GUI creation unit 2220 also to be described later. These functions can also be implemented by causing the CPU to execute programs stored in the NVRAM.
- Setting concerning the replication management function 2240 such as setting of a combination of a primary LU and a secondary LU storing its replication and controlling of the replication management function 2240 can be carried out by means of the host computer 2100 or a management terminal (not shown in FIG. 1 ) for managing the array controller 2200 .
- Each of the host computer 2100 and the management terminal is installed with GUI software such as Web browser.
- GUI software such as Web browser.
- a console picture (to be described later) for performing setting/control of the replication management function 2240 through the GUI software is displayed on the output unit of, for example, host computer 2100 .
- the setter can set/control the replication management function 2240 of array controller 2200 through this console picture.
- control state between primary LU and secondary LU can be shifted bi-directionally from “paired state” to “split state” or vice versa in accordance with a command from, for example, the host computer 2100 .
- Shift from “paired state” to “split state” is carried out when the host computer 2100 , for instance, transmits an indication command to this effect (hereinafter referred to as “split command”).
- split command an indication command to this effect
- the “split command” is transmitted when, for example, backup of data is carried out. If data of the secondary LU in “split state” is backed up to, for example, a magnetic tape 2450 through backup server 2400 , the backup data can be acquired without affecting the primary LU.
- the “split command” is also transmitted in case the contents of the primary LU at a past time point is desired to be accessed.
- the contents of the secondary LU in the “split state” is so kept as to be identical to that at the time of shift to the split state and therefore, the user can access the contents of the primary LU at the past time point.
- the split command transmitted for such a use is sometimes called a “snapshot command”.
- the contents of the primary LU at a past time point to be held in the secondary LU is sometimes called a snapshot image.
- Shift from “split state” to “paired state” is also carried out when, for example, the host computer 2100 transmits an indication command to this effect (hereinafter referred to as “rethink command”).
- the “rethink indication” is transmitted when, for example, backup is completed or the necessity for holding the snapshot image disappears.
- the replication management function 2240 utilizes the managed difference data to make the contents of the primary LU identical to that of the secondary LU and thereafter shift the control state between the primary and secondary LU's to the “paired state”.
- the present invention is applied to such a situation that pairs of LU's are formed to perform the replication management function as above.
- FIG. 2 An example of a console picture 3000 displayed on a display unit 2150 in order to set the replication management function 2240 is shown in FIG. 2 .
- the console picture 3000 in respect of primary LU's (corresponding to “items” or “copy source storage volumes” to be set), secondary LU's (corresponding to “setting values” or “copy destination memory volumes”) are set.
- names (identifiers) of the primary LU's are displayed and on the right half, input columns 3050 , 3100 and 3150 to which names (identifiers) of the secondary LU's to be set in correspondence with the individual primary LU's are inputted are displayed.
- a so-called “pull-down menu” scheme is employed for the input columns 3050 , 3100 and 3150 and therefore, candidates which can be set for the secondary LU's are displayed in the pull-down menu.
- five LU's of LU 3 to LU 7 can be candidates for the secondary LU's (corresponding to “setting value candidates” or “copy destination memory volume candidates”). Accordingly, by operating the pull-down menu of each of the input columns 3050 , 3100 and 3150 as shown in FIG. 2 , one of the LU 3 to LU 7 can be selectively inputted as a secondary LU in respect of each of the LU 0 , LU 1 and LU 2 .
- console picture 3000 In order to perform the replication management, different secondary LU's must be set in respect of the individual primary LU's. Accordingly, unless the console picture 3000 is provided with any type of contrivance, it is necessary that the input columns 3050 , 3100 and 3150 be operated one by one to selectively input mutually different secondary LU names.
- a default control unit 2230 of array controller 2200 can determine names of secondary LU candidates displayed as defaults at pull-down menus in the input columns 3050 , 3100 and 3150 of console picture 3000 .
- the default control unit 2230 prepares a “default LU list” 4000 as shown in FIGS. 3A to 3C and stores it in a memory.
- This default LU list 4000 has a “secondary LU candidate” column 4100 and a “default flag” column 4200 .
- Described in the “secondary LU candidate” column 4100 are names of candidates for the secondary LU's (in this example, LU 3 to LU 7 ).
- the “default flag” column 4200 indicates which ones of the secondary LU candidates are determined as secondary LU candidates to be displayed as defaults in the input columns 3050 , 3100 and 3150 . It is now assumed that respective fields of “default flag” column 4200 are all described with “0” initially. When a particular LU is settled as a secondary LU candidate displayed as a default, “1” is described at a field corresponding to that LU in the “default flag” column 4200 .
- the default control unit 2230 first determines a secondary LU candidate to be displayed as a default in the input column 3050 in respect of LU 0 which is one of the primary LU's.
- the default control unit 2230 consults the “default flag” column 4200 of default LU list 4000 . At present, all fields in “default flag” column 4200 are described with “0” (status shown in FIG. 3A ). Then, the default control unit 2230 determines that LU 3 recorded at the uppermost field of list 4000 is to be displayed as a default in the input column 3050 corresponding to LU 0 .
- the control unit then stores the result of this determination in, for example, the memory and at the same time, describes “1” at the field corresponding to LU 3 in the “default flag” column 4200 of default LU list 4000 (status shown in FIG. 3B ).
- the default control unit 2230 determines a secondary LU candidate to be displayed as a default in the input column 3100 in respect of LU 1 which is one of the primary LU's.
- the default control unit 2230 consults the “default flag” column 4200 of default LU list 4000 .
- “1” is described at only the field corresponding to LU 3 (status shown in FIG. 3B ).
- the default control unit 2230 determines that LU 4 recorded next to LU 3 is to be displayed as a default in the input column 3100 corresponding to LU 1 .
- the control unit then stores the result of this determination in, for example, the memory and describes “1” also at the field corresponding to LU 4 in the “default flag” column 4200 of default LU list 4000 (status shown in FIG. 3C ).
- the default control unit 2230 proceeds with a process similar to the above in respect of the input column 3150 corresponding to LU 2 . As a result, it determines that LU 5 is to be displayed as a default in the input column 3150 corresponding to LU 2 .
- the default control unit 2230 informs the GUI creation unit 2220 of the result of decision.
- the GUI creation unit 2220 creates picture data necessary to display such a console picture as reflecting the decision result. Then, the GUI creation unit transmits the created picture data to a Web server function 2210 .
- the Web server function 2210 transmits this picture data to a Web browser of host computer 2100 .
- the Web browser displays the console picture on the output unit on the basis of the received picture data.
- FIG. 4 An example of the console picture 3000 displayed on the output unit is shown in FIG. 4 .
- Mutually different names of secondary LU's namely, LU 3 , LU 4 and LU 5
- the setter can make the correspondence between the respective primary LU's and the different secondary LU's without overlap by merely pressing an “OK” button 3200 displayed on the console picture without resort to application of further operation to the input columns 3050 , 3100 and 3150 .
- the above construction can ensure that the setter can be freed from labor and time to a large extent and troublesomeness of work can be alleviated.
- the invention can also be applied to a storage system as shown in FIG. 5 (also termed NAS).
- a storage system as shown in FIG. 5 (also termed NAS).
- LU's copy destination logical volumes
- LU's copy source logical volumes
- FIG. 5 An example of construction of a storage system 600 is illustrated in FIG. 5 .
- the storage system 600 illustrated in FIG. 5 includes a memory device controller 100 and memory devices 300 .
- Each memory device 300 provides a physical or logical storage area for storing data.
- the memory device controller 100 manages and controls the memory devices 300 .
- the memory device controller 100 , and memory device 300 will be detailed later.
- memory device controller 100 and two memory devices 300 are illustrated in the example of FIG. 5 , the memory device controller 100 and memory devices 300 are not limited in number to the above.
- the memory device controller 100 and the memory devices 300 can be connected directly to each other as shown in FIG. 5 or they may be connected together indirectly through a network.
- the storage system 600 is connected to information processing apparatus 200 through a LAN (local Area Network) 400 .
- the storage system 600 provides for these information processing apparatus 200 a storage area for storing data, file sharing service and the like.
- these information processing apparatus 200 can apply various kinds of setting to the storage system 600 .
- FIG. 6 there is illustrated an appearance of the storage system 600 according to the present embodiment.
- the memory device controller 100 and the memory devices 300 are housed in different consoles and the consoles are located adjacently to each other. Obviously, however, the memory device controller 100 and the memory devices 300 may be housed in the same console.
- FIG. 7A An example of physical construction of the information processing apparatus 200 connected to the storage system 600 is illustrated in FIG. 7A and an example of its logical construction is illustrated in FIG. 7B .
- the information processing apparatus 200 includes a CPU (Central Processing Unit) 201 , a memory 202 , a storage unit 203 , a display unit 204 , an input unit 205 and a port 206 .
- the storage unit 203 and memory 202 of information processing apparatus 200 are stored with various kinds of programs.
- the stored programs can be exemplified as including an operating system (OS), a file sharing function program and a Web browser (see FIG. 7B ).
- OS operating system
- FIG. 7B Web browser
- the information processing apparatus 200 can transmit a “file access request” to the storage system 600 .
- the “file access request” means a request for performing data access by designating a file name).
- the information processing apparatus 200 can receive a file sharing function service from the storage system 600 .
- NFS Network File System
- CIFS Common Interface File System
- the Web browser of the information processing apparatus 200 can transmit/receive a request/response to/from a Web server (to be described later) of storage system 600 by following a communication protocol such as HTTP or FTP. Thanks to this contrivance, the information processing apparatus 200 can apply various kinds of setting to the storage system 600 .
- the information processing apparatus 200 may be a personal computer or workstation or may be a mainframe computer. Although the two information processing apparatus 200 are illustrated in FIG. 5 , the number of the information processing apparatus 200 is not limited to two. Further, the OS's operating on the information processing apparatus 200 are not limited to those described above.
- a LAN 400 may be a dedicated network including VLAN, VPN or the like but instead, it may use Internet, WAN or the like. Communication can be made between the information processing apparatus 200 and the memory device control unit 100 through the medium of the LAN 400 pursuant to the communication protocol such as TCP/IP.
- FIG. 8A An example of physical construction of the memory device 330 is illustrated in FIG. 8A and an example of its logical construction is illustrated in FIG. 8B .
- the memory device 300 is comprised of many disk drives (physical disks) 301 to 309 to provide physical or logical storage areas for the information processing apparatus 200 . On these physical storage areas provided by the disk drives, logical volumes (logical units or LU's) are set logically. Data is stored in these LU's.
- logical volumes logical units or LU's
- Data is stored in these LU's.
- the disk drive various kinds of types, for example, hard disk device, flexible disk device and semiconductor memory device can be used. In FIG. 8A , nine disk drives 301 to 309 are illustrated in the memory device 300 but the number of the disk drives is not limited thereto.
- a disk array may be formed of the plurality of disk drives 301 to 309 .
- logical storage areas may be provided for the information processing apparatus 200 .
- nine LU's (LU 0 to LU 8 ) are set on the nine disk drives 301 to 309 incorporated in the memory device 300 .
- the nine disk drives 301 to 309 are divided into three groups (termed RAID groups 0 to 2). Each group is managed through the RAID scheme.
- the management/operation of the disk array based on the RAID scheme can be carried out by means of the memory device controller 100 as will be described later.
- the number and combination of the RAID groups are not limited to the above and besides the number and the manner of organization of the LU's are not limited to those illustrated.
- LU set in the memory device 300 Available as the LU set in the memory device 300 is a “user LU” accessible from the information processing apparatus 200 or a “system LU” used for controlling a channel control unit (CHN) 110 of memory device controller 100 to be described later.
- the system LU stores an OS executed by the CHN 110 and various kinds of programs to be described later. It is now assumed that the LU 0 to LU 8 shown in FIGS. 8A and 8B are all user LU's.
- the memory device controller 100 is connected to the information processing apparatus 200 through the LAN 400 and transmits/receives commands for managing/controlling the storage system 600 and requests/responses to/from the information processing apparatus 200 .
- the memory device controller 100 is also connected to the memory devices 300 so as to control the memory devices 300 in accordance with commands received from the information processing apparatus 200 .
- the memory device controller receives a request for input/output of data from the information processing apparatus 200 to perform a process for input/output of data stored in the memory devices 300 .
- the memory device controller 100 as shown in FIG. 5 includes two CHN's 110 , a shared memory 120 , a cache memory 130 , two disk control units (DKA) 140 , a management terminal 160 and a connection unit 150 .
- the number of constituent components of the memory device controller 100 is not limited thereto.
- FIG. 9A An example of physical construction of the CHN 110 is illustrated in FIG. 9A and an example of its logical construction is illustrated in FIG. 9B .
- FIGS. 5 , 9 A, 9 B and 14 the CHN 110 will be described.
- the CHN 110 of the present embodiment is formed into a single unit.
- this unit will also be termed “NAS board”.
- the NAS board is formed of a circuit board, including a network interface section 111 , a CPU 112 , a memory 113 , an input/output control section 114 , an I/O (input/output) processor 119 , NVRAM (non-volatile RAM) 115 , connectors for board connection 116 and communication connectors 117 . These components constitute a single unit 118 .
- the network interface section 111 is a communication interface for communication with the information processing apparatus 200 . For example, it receives a file access request, a HTTP request and the like transmitted from the information processing apparatus 111 .
- the communication connector 117 is a connector for communicatively connecting the memory device controller 100 to the information processing apparatus 200 through the LAN 400 .
- it corresponds to Ethernet (registered trademark).
- the CPU 112 takes charge of control for making the CHN 110 function as NAS board.
- Various kinds of programs and data are stored in the memory 113 .
- it stores tables as shown in FIGS. 10 and 11 and various kinds of programs such as NAS manager 706 as shown in FIG. 9B .
- the CPU 112 executes programs stored in the memory 113 and previously-described system LU to implement a software construction to be described later.
- the input/output control section 114 transmits/receives data and commands to/from the DKA 140 , cache memory 130 , shared memory 120 and management terminal 160 .
- the input/output control section 114 includes the I/O processor 119 and NVRAM 115 .
- the I/O processor 119 controls the aforementioned transmission/reception of data and commands.
- the NVRAM 115 is a non-volatile memory for storing a program for taking charge of control of the I/O processor 119 .
- the board connection connectors 116 are coupled to connectors (not shown) provided in the memory device controller 100 . This permits the NAS board to electrically connect to the memory device controller 100 .
- the two CHN's 110 are connected to each other by an internal LAN 151 .
- Each CHN 110 also connects to the management terminal 160 through the medium of this internal LAN 151 .
- This construction ensures that a computer program such as microprogram the CHN 110 is caused to execute can be transmitted from the management terminal 160 and can be installed to the CHN 110 . Construction of the management terminal 160 will be described later.
- the CPU 112 of CHN 110 executes various kinds of programs stored in the memory 113 and system LU, so that the software construction shown in, for example, FIG. 9B can be realized. This type of software construction will be described below.
- CHN 110 also termed an NAS head
- software such as RAID manager 708 , volume manger 707 , file system program 703 , network control section 702 and NAS manager 706 operates.
- the RAID manager 708 has a function to set parameters in an RAID control section 740 of DKA 140 (to be described later; see FIGS. 12B and 14 ) and a function to control the RAID control section 740 . More particularly, the RAID manager 708 receives a parameter and control command or indication information from the operating system 701 or another application or management terminal operating on the operating system 701 to set the received parameter to the RAID control section 740 or transmit a control command corresponding to the RAID control section command or indication information. To add, the RAID control section 740 of DKA 140 has a function to set a disk drive (physical disk) of memory device 300 and an LU while making the correspondence therebetween and a function to set/manage a RAID group.
- a disk drive physical disk
- the “parameter” to be set herein parameters for defining the disk drives (physical disks) 301 to 309 constituting the RAID group and parameters for indicating the emulation type and capacity of the LU are available.
- the “emulation type” is a parameter for prescribing “operational specifications” of the LU.
- the “operational specifications” prescribed by the emulation type may include, for example, volume capacity (capacity of LU), logical track capacity (the number of bytes per logical track constituting the LU), logical track number/logical cylinder (the number of logical tracks constituting one logical cylinder) and logical cylinder number /volume (the number of logical cylinders constituting one LU).
- volume capacity capacity
- logical track capacity the number of bytes per logical track constituting the LU
- logical track number/logical cylinder the number of logical tracks constituting one logical cylinder
- logical cylinder number /volume the number of logical cylinders constituting one LU.
- the LU management table 800 in addition to “LU name” 810 of each LU, the aforementioned “emulation type” 820 of LU, “capacity” 830 of LU and “RAID group name” 840 to which LU's belong, “physical disk number” 850 of a physical disk to which each LU is set and “use flag” 860 indicating whether each LU is in use are managed.
- “1” is inputted to the use flag 860 .
- the LU is in disuse, “0” is inputted to the use flag 860 .
- the above table 800 may be stored in the memory 143 or NVRAM 144 (to be described later; see FIG. 12A ) of DKA 140 , in the shared memory 120 or management terminal 160 of memory device controller 100 or in the system LU of memory device 300 .
- RAID manager 708 transmits to the RAID control section 740 are a command for designating the construction/delete/ capacity change of RAID and a command for requesting the construction information of each LU and each RAID group (hereinafter termed “construction information request command”).
- the volume manager 707 has a function to provide a virtual logical volume (virtual logical unit group, hereinafter referred to as “VLU”) to the file system program 703 .
- VLU virtual logical unit group
- the “virtual logical volume (VLU)” is a logical group obtained by further organizing the LU's set on the memory device 300 in a virtual fashion.
- One VLU is comprised of one or more LU's. In this construction, the file system program 703 and information processing apparatus 200 recognize the VLU instead of the LU's.
- the volume manager 707 uses a “virtual logical volume management table” 900 as shown in FIG. 11 to manage the correspondence between a VLU ( 910 ) and an LU or LU's ( 920 ) constituting the VLU.
- this table may be stored in the memory 113 or NVRAM 115 of CHN 110 , the shared memory 120 or management terminal 160 of memory device controller 100 or the system LU of memory device 300 .
- the main function of the file system program 703 is to manage the correspondence between a file name designated in a file access request received by the network control section 702 and an address on VLU at which the file name is stored.
- the file system program 703 can specify, for example, an address on VLU corresponding to a file name designated in a file access request.
- the network control section 702 is constructed on the basis of two file system protocols of NFS 711 and Samba 712 .
- the NFS 711 receives a file access request from the information processing unit 200 of a UNIX (registered trademark) system in which the NFS client (see FIG. 14 ) operates.
- the Samba 712 receives a file access request from the information processing unit 200 of Windows (registered trademark) system in which the CIFS client (see FIG. 14 ) operates.
- the NAS manager 706 is a program for performing confirmation of the operational state of the storage system 600 (namely NAS) and setting/control of the storage system 600 .
- the NAS manager 706 also functions as Web server 713 , GUI creation section 714 , snapshot control section 715 and default candidate control section 716 .
- the Web server 713 provides a Web page for performing setting/control of the storage system 600 to the information processing apparatus 200 . More specifically, the Web server 713 of NAS manager 706 responds to a HTTP request from the information processing apparatus 200 to transmit data of a Web page to the information processing apparatus 200 .
- a system manager of storage system 600 can command or designate setting/control of the storage system 600 by using the input unit 205 to operate the Web page while watching the Web page displayed on the display unit 204 of information processing apparatus 200 .
- management/setting of LU for example, setting of capacity, management of capacity, expand/reduction of capacity and user allotment
- setting/control concerning such functions as replication management and remote copy (replication) performed by the DKA 140 for example, setting/change of copy source LU and copy destination LU
- data concerning setting/control of the storage system 600 can be transmitted to the NAS manager 706 .
- the NAS manager 706 receives the data concerning setting/control to execute setting/control corresponding to the data. This enables the information processing apparatus 200 to perform various kinds of setting and control of the storage system 600 .
- the GUI creation section 714 , snapshot control section 715 and default candidate control section 715 of NAS manager 706 cooperate with the volume manager 707 and RAID manager 708 and the RAID control section 740 of DKA 140 to function as an “application server” of Web server 713 .
- these components functioning as the “application server” create “picture data”.
- the memory device controller 100 including the components functioning as the “application server” functions as a “computer for creating picture data”. These components will operate as will be detailed later.
- the DKA 140 is adapted to control the memory device 300 .
- FIG. 12A An example of physical construction of the DKA 140 is illustrated in FIG. 12A and an example of its logical construction is illustrated in FIG. 12B .
- the DKA 140 will be described hereunder by making reference to FIGS. 5 , 12 A, 12 B and 14 .
- the DKA 140 of the present embodiment includes an interface section 141 , a memory 143 , a CPU 142 , a NVRAM 144 and connectors for board connection 145 . These components are formed into a single unit 148 .
- the interface section 141 serves as not only a communication interface for performing communication with the CHN's 110 through the connection unit 150 but also a communication interface for performing communication with the memory device 300 .
- the CPU 142 takes charge of control of the overall DKA 140 and besides communicates with the CHN's 110 , memory devices 300 and management terminal 160 .
- the NVRAM 144 is a non-volatile memory for storing programs taking charge of control of the CPU 142 .
- the CPU 142 executes the programs stored in the memory 143 , NVRAM 144 and system LU described previously, software construction to be described later can be realized. Further, as described previously, the aforementioned LU management table 800 (see FIG. 10 ) may sometimes be stored in the memory 143 and NVRAM 144 .
- the board connection connectors 145 are coupled to connectors (not shown) provided to the memory device controller 100 . This ensures that the DKA 140 can be connected electrically to the memory device controller 100 .
- the two DKA's 140 in the present embodiment are connected to each other by the internal LAN 151 .
- Each DKA 140 is also connected to the management terminal 160 by means of this internal LAN 151 .
- a computer program such as a microprogram to be executed by the DKA 140 can be transmitted from the management terminal 160 and can be installed to, for example, the NVRAM 144 of DKA 140 .
- the management terminal 160 is constructed as will be described later.
- such software as RAID control section 740 , remote copy control program 750 and replication management program 760 operates on the DKA 140 .
- the RAID control section 740 functions to set LU's by making the correspondence between disk drives (physical disks) of memory device 300 and LU's and set/manage RAID groups.
- the RAID control section 740 manages the correspondence between each LU and various kinds of parameters (described previously) by using the LU management table 800 (see FIG. 10 ).
- the RAID control section 740 follows or complies with a control command transmitted from the RAID manager 708 to perform the construction/delete/capacity change of RAID and the input/output to/from the memory device 300 and follows a construction information request command to transmit construction information of each LU and each RAID group.
- the RAID control section 740 converts the received data access request into a request for access to data of physical disks 301 to 309 based on or pursuant to physical address designation.
- the replication management program 760 performs the “replication management function” or the like described in connection with the foregoing embodiment.
- the remote copy control program 750 aims at preventing disappearance of data in the event of occurrence of a disaster (disaster recovery) and provides a function to perform “replication” or “remote copy”.
- the “replication” or “remote control” referred to herein means such control as storing a replication of data in the storage system 600 located at a specified site (primary site) into another storage system (not shown) located at another site (secondary site).
- connection unit 150 mutually connects the CHN 110 , shared memory 120 , cache memory 130 and DKA 140 . Transmission/reception of data and commands among the CHN 110 , the share memory 120 , the cache memory 130 and the DKA 140 is carried out through the connection unit 150 .
- the connection unit 150 is, for example, a high-speed bus such as a super-high-speed crossbar switch adapted to perform data transmission by high-speed switching.
- the shared memory 120 and cache memory 130 are storage memories shared by the CHN 110 and DKA 140 .
- the shared memory 120 is utilized to mainly store control information and commands.
- the cache memory 130 is utilized to mainly store data.
- a data input/output command a particular CHN 110 has received from the information processing apparatus 200 is a write command
- that CHN 110 writes the write command to the shared memory 120 and at the same time, writes the writ data received from the information processing apparatus 200 to the cache memory 130 .
- the DKA 140 monitors the shared memory 120 and when detecting that a write command is written to the shared memory 120 , the DKA 140 reads written data from the cache memory 130 in accordance with that command and writes it to the memory device 300 .
- the management terminal 160 is a computer for maintaining/managing the storage system 600 .
- the management terminal 160 includes a CPU 161 , a memory 162 , a port 163 , a recording medium read unit 164 , an input unit 165 , an output unit 166 and a storage unit 168 .
- the CPU 161 implements various kinds of functions on the basis of programs/data stored in the memory 162 /storage unit 168 .
- the management terminal 160 can function as a Web server.
- the management terminal 160 can access the Web server 713 of NAS manager 706 in CHN 110 to permit a Web page transmitted from the Web server 13 to be displayed on the output unit 166 .
- the recording medium read unit 164 is a unit for reading programs and data recorded on a recording medium 167 .
- the read programs and data are stored in the memory 162 or storage unit 168 . Accordingly, a program recorded on the recording medium 167 , for instance, can be read out of the recording medium 167 by using the recording medium read unit 164 so as to be stored in the memory 162 and storage unit 168 .
- a flexible disk, CD-ROM or semiconductor memory can be used as the recording medium 167 .
- the port 163 is connected to the internal LAN 151 . This permits the management terminal 160 to transmit a program read by the recording medium read unit 164 to the CHN 110 and DKA 140 .
- FIG. 14 Software construction of the whole of the storage system 600 according to the present embodiment is illustrated in FIG. 14 .
- An example for materializing the present invention in the storage system 600 constructed as above will be described below.
- a process in which a user operates the information processing apparatus 200 to determine a copy destination of data of a particular virtual logical volume (VLU) will be described by making reference to flowcharts of FIGS. 15 and 19 .
- VLU virtual logical volume
- the user starts the Web browser in the information processing apparatus 200 .
- the user inputs a suitable address to the Web browser (in this case, an address of a Web server 713 operating in the memory device controller 100 ) to transmit a HTTP request to the Web server 713 (as in S 1000 in FIG. 15 ).
- the Web browser follows the inputted address to access the Web server 713 in the memory device controller (S 1010 ) and then acquire from the Web server 713 a HTML file for displaying a Web page (hereinafter referred to as “system management console picture”) 1500 (S 1020 ).
- the Web browser follows the acquired HTML file to display the system management console picture 1500 on the display unit 204 of information processing apparatus 200 (S 1030 ).
- FIG. 16 An example of the system management console picture 1500 is illustrated in FIG. 16 .
- Displayed in the picture 1500 are an input column 1510 , a display part 1520 , input columns 1531 to 1533 , an “OK” button 1540 and a “cancel” button 1550 .
- the input column 1510 is provided to input and designate a VLU desired to be copied.
- the display part 1520 is a part for displaying names of LU's constituting the designated VLU (corresponding to “items” to be set or “identifiers of copy source storage volumes”).
- the input columns 1531 to 1533 are provided to select and input names of LU's representing copy destinations in respect of individual LU's (corresponding to “setting values” to be set or “identifiers of copy destination storage volumes”).
- the “OK” button 1540 is pressed to transmit a HTTP request when inputting to the input columns 1510 and 1531 to 1533 is completed.
- the “cancel” button 1550 is provided for ending input to the picture 1500
- the user operates the input unit 205 of information processing apparatus 200 to input a name of a VLU desired to be copied (VLU name) to the input column 1510 of the displayed system management console picture.
- An inputted state is shown in FIG. 17 . This example is to determine a copy destination of a VLU of a name “FS 1 ” inputted to the input column 1510 .
- the user presses the “OK” button 1540 on the picture to cause the Web browser to transmit data (S 1040 ).
- the Web browser transmits the inputted data (VLU name “FS 1 ”) and at the same time, transmits to the Web server 713 a request for commanding return of names of LU's constituting the VLU and names of candidates for LU's which can be copy destinations of data in respect of the individual LU's (S 1050 ).
- the Web server 713 receiving this request starts the GUI creation section 714 (see FIG. 14 ) and transmits to this GUI creation section 714 a request for commanding the GUI creation section 714 to create a HTL file corresponding to the request (S 1060 ).
- the GUI creation section 714 is one of parts functioning as “application server” for the Web server 713 and can be implemented by utilizing a technique of, for example, server Side Java (registered trademark) or CGI.
- the GUI creation section 714 receiving the above request starts the snapshot control section 715 (see FIG. 14 ) in order to collect data necessary for creating the HTML file and transmits to the snapshot control section 715 a request for commanding it to transmit necessary data (S 1070 ).
- the snapshot control section 715 is one of parts functioning as “application server” for the Web server 713 as described above.
- the snapshot control section 715 receiving the above request first examines LU's constituting the VLU “FS 1 ”. This can be accomplished through the following procedures.
- the snapshot control sectin 715 transmits to a volume manager 707 (see FIG. 14 ) a request for commanding it to inform names of LU's constituting the VLU “FS 1 ” (also termed DevName) (S 1080 ).
- the volume manager 707 receiving the above request examines the LU names constituting the VLU “FS 1 ” by consulting the virtual logical volume management table 900 (see FIG. 11 ) (S 1090 ). According to the table 900 shown in FIG. 11 , it will be seen that the LU's constituting the VLU “FS 1 ” are “LU 0 ” and “LU 1 ”. After ending the examination, the volume manager 707 informs the snapshot control section 715 of the examined LU names (S 1100 ).
- the snapshot control section 715 recognizes that the LU's constituting the VLU “FS 1 ” are LU 0 and LU 1 (S 1110 ).
- the snapshot control section 715 examines which LU's can be made to be correspondent with the LU 0 and LU 1 constituting the VLU “FS 1 ”.
- the copy source LU and the copy destination LU must have the “same construction”.
- parameters described previously; for example, emulation type and capacity
- the snapshot control section 715 searches LU's having “the same construction” as the LU 0 and LU 1 and being in disuse. This can be done through the following procedures.
- the snapshot control section 715 transmits to the RAID manager a request for commanding it to send an “empty LU list” describing LU's having the “same construction” as the LU 0 and LU 1 and being in disuse (S 1120 ).
- the RAID manager 708 receiving the above request transfers it to the RAID control section 740 of DKA 140 (S 1130 ).
- the RAID control section 740 receiving this command consults the LU management table 800 (see FIG. 10 ) to examine, in respect of the individual LU 0 and LU 1 , LU's which have the same emulation type and capacity as the LU 0 and LU 1 and for which “0” is inputted to the use flag 860 to indicate disuse (S 1140 ).
- the LU management table 800 it will be seen that LU 2 to LU 8 meet the above conditions in respect of the LU 0 and LU 1 . (In this example, these LU 2 to LU 8 correspond to “setting value candidates” or “copy destination memory volume candidates”).
- the RAID control section 740 prepares an empty LU list 1400 (S 1150 ).
- FIG. 18 An example of empty LU list 1400 is shown in FIG. 18 .
- Described in an “object LU name” column 1410 are names of “LU 0 ” and “LU 1 ” representing LU's constituting the VLU “FS 1 ” (that is, LU's having data to be copied).
- Described in a “corresponding empty LU” column 1420 are names of “LU 2 ” to “LU 8 ” representing LU's which are able to be correspondent with the individual LU 0 and LU 1 and are in disuse.
- the RAID control section 740 transmits this empty LU list 1400 to the RAID manager 708 (S 1160 in FIG. 19 ).
- the RAID manager 708 transfers the empty LU list 1400 to the snapshot control section 715 (S 1170 ).
- the snapshot control section 715 transmits to the default candidate control section 716 the received empty LU list 1400 and a request for commanding that one of the LU 2 to LU 8 described in the “corresponding empty LU” column 1420 should be determined as a default of a copy destination LU candidate of the LU 0 or LU 1 (S 1180 ).
- a “default LU list” 1600 is prepared on the basis of the received empty LU list 1400 and the request (S 1190 ).
- An example of the default LU list 1600 is shown in FIG. 20 .
- the default candidate control section 716 adds a “default flag” column 1630 to the empty LU list 1400 to provide the default LU list 1600 .
- the default LU list 1600 has an “object LU name” column 1610 and a “corresponding empty LU” column 1620 similarly to the empty LU list 1400 and in addition thereto, the “default flag” column 1630 indicating whether a particular LU is determined as a default of a copy destination LU candidate.
- this default LU list 1600 may be prepared in the NVRAM 115 or memory 113 of CHN 110 (see FIG. 9A ), in the shared memory 120 or cache memory 130 of memory device controller 100 (see FIG. 5 ) or in the system LU (not shown) of memory device 300 .
- the default candidate control section 716 sets, in respect of LU 0 first appearing in the “object LU name” column 1610 , any of the LU's described in the “corresponding empty LU” column 1620 (namely, “LU 2 to LU 8 ”) as a default of a copy destination LU candidate (S 1200 ).
- This S 1200 will be described in greater detail by making reference to FIG. 23 .
- the default candidate control section 716 consults the default LU list 1600 (S 1201 ). Then, it recognizes that two or more LU's to be set are present in the “object LU name” column 1610 (S 1202 :Y). At present, “0” is described at all fields of the “default flag” column 1630 in default LU list 1600 .
- the default candidate control section 716 sets LU 2 first appearing in the “default flag” column 1630 as a default of a copy destination LU candidate corresponding to LU 0 (S 1203 ). Then, as shown in FIG. 21 , “1” is described in a corresponding field (namely, a field corresponding to LU 2 on the LU 0 side in the “default flag” column 1630 ).
- the default candidate control section 716 determines, in respect of LU 1 secondly appearing in the “object LU name” column 1610 , any of LU's described in the “corresponding empty LU” column 1620 as a default (S 1210 ).
- the S 1210 will be described in greater detail by making reference to FIG. 23 .
- the default candidate control section 716 recognizes that “1” is described at the field corresponding to LU 2 on the LU 0 side in the “default flag” column 1630 (namely, LU 2 is set as the default for LU 0 ).
- the default candidate control section 716 sets, as a default of a copy destination LU candidate of LU 1 , LU 3 appearing next to LU 2 in the “corresponding empty LU” column 1620 (S 1204 ).
- “1” is described in a corresponding field (namely, a filed corresponding to LU 3 on the LU 1 side in the “default flag” column 1630 .
- the default candidate control section 716 transmits the prepared default LU list 1600 to the snapshot control section 715 (S 1220 ).
- the snapshot control section 715 recognizes that LU 2 and LU 3 are set as defaults of copy destination candidates in respect of the LU 0 and LU 1 , respectively (S 1230 ). Subsequently, the snapshot control section 715 informs the GUI creation section 714 that (1) LU's constituting the VLU “FS 1 ” are LU 0 and LU 1 , (2) copy destination LU candidates which are able to be correspondent with the LU 0 and LU 1 and are in disuse are LU 2 to LU 8 and (3) the LU 2 and LU 3 are set as defaults of copy destination LU candidates in respect of the LU 0 and LU 1 , respectively (S 1240 ).
- the GUI creation section 714 creates a HTML file to be returned to the Web browser (namely, “picture data”) (S 1250 ). Then, it transmits the created HTML file to the Web server 713 (S 1260 ).
- the Web server 713 receives the created HTML file and transmits it, as a HTTP response, to the Web browser of information processing apparatus 200 (S 1270 ).
- the Web browser of information processing apparatus 200 causes the display unit 204 of information processing apparatus 200 to display a system management console picture 1500 , for example, as shown in FIG. 24 (S 1280 ).
- a system management console picture 1500 for example, as shown in FIG. 24 (S 1280 ).
- “LU 0 ” and “LU 1 ” representing names of the LU's constituting the VLU “FS 1 ” are displayed at a part 1520 .
- “LU 2 ” is displayed as the default of copy destination LU candidate in respect of the LU 0 .
- “LU 3 ” is displayed as the default of copy destination LU candidate in respect of the LU 1 .
- the user and system manager need not make the correspondence between the individual copy source LU's and the copy destination LU's one by one by operating the input columns 1531 to 1533 . Accordingly, with this construction, the user and system manager can be freed from labor and time to a great extent and troublesomeness of work can be mitigated.
- the copy destination LU candidate “LU 2 ” displayed as the default in the input column 1531 “LU 4 ” to “LU 8 ” other than the “LU 3 ” displayed in the input column 1532 of LU 1 may be displayed in, for example, a pull-down menu format.
- the copy destination LU candidate displayed in the input column 1532 of LU 1 may also be changed to an LU (in the depicted example, “LU 2 ”) other than the “LU 3 ” resulting from the changed in the input column 1531 .
- Parameters may be allotted to each setting value candidate and on the basis of the parameters, a setting value to be displayed as a default in each input column may be determined. A description will be given below by making reference to a concrete example.
- an LU management table 800 as shown in FIG. 28 , parameters other than those shown in FIG. 10 , including, for example, an “access speed” 870 indicative of an input/output speed to/from each LU and a “use start date” 880 indicative of a time that each LU begins to be used, are further managed. Then, in preparing an empty LU list 1400 by examining the LU management table 800 in the S 1140 and S 1150 in FIG. 15 , the RAID control section 740 consults also these parameters 870 and 880 in the LU management table 800 to prepare, for example, an empty LU list 1400 as shown in FIG. 29 . In other words, the RAID control section 740 consults the LU management table 800 of FIG.
- the default candidate control section 716 determines, in order of excellence of performance, copy destination LU candidates which serve as defaults.
- An example of a picture displayed by way of such a procedure as above is shown in FIG. 30 .
- “LU 6 ” and “LU 7 ” of good performance are displayed as defaults.
- setting value candidates having excellent characteristics can preferentially be displayed as defaults.
- an input column 1534 for selection of parameter may be provided to enable the user or system manager to select a parameter to be used preferentially.
- the user or the like selects the “access speed” as a parameter to be used preferentially.
- the “access speed” is preferentially displayed in the input columns 1531 and 1532 .
- the correspondence may be made in such a way that an RAID group to which copy source LU's belong differs from an RAID group to which copy destination LU candidates belong.
- the RAID control section 740 may search such LU's that (1) they have the same emulation type and capacity as those of copy source LU 0 and LU 1 , (2) their use flags 860 are inputted with “0” (namely, in disuse) and (3) they belong to a RAID group different from that for the copy source LU 0 and LU 1 . In this case, the RAID control section 740 may select, as correspondent copy destination LU candidates, “LU 3 ” to “LU 8 ” belonging to a different RAID group from that for the copy source LU's of “LU 0 ” and “LU 1 ”.
- the default candidate control section 716 determines copy destination LU candidates serving as defaults from the “LU 3 ” to “LU 8 ”.
- An example of a picture displayed by way of such a procedure as above is shown in FIG. 32 .
- “LU 3 ” and “LU 4 ” belonging to a different RAID group from that for the “LU 0 ” and “LU 1 ” are displayed as defaults.
- data is copied or a backup of an LU is prepared in the storage system by taking into account data maintainability/anti-fault properties.
- the copy source LU's and the copy destination LU's belong to mutually different RAID groups and therefore, even in the event that the RAID group to which the copy source LU's belong becomes faulty, data can be maintained in the copy destination LU's without fail. Accordingly, the data maintainability/anti-fault properties of the whole of the storage system can be improved further.
- the user or system manager is also allowed to select a method for selection of copy destination LU's as in the applied example 5.
- the aforementioned applied example 4 can be applied. More particularly, (1) by determining copy destination LU's in such a way that the copy source LU and the copy destination LU belong to different RAID groups and (2) on the basis of parameters attendant on LU's determined as copy destination LU candidates, copy destination LU candidates to be displayed as defaults at individual fields of the input column may be determined.
- a LU to be displayed further preferentially is determined.
- a LU management table 800 as shown in FIG. 28 so as to select and determine, out of “LU 3 ” to “LU 8 ”, a LU of good performance (for example, “access speed” is high and “use start date” is recent) as a copy destination LU candidate of default.
- “LU 6 ” and “LU 7 ” belonging to a different RAID group from that for the copy source LU's and having good performance will be displayed as defaults in the input columns 1531 and 1532 , as shown in FIG. 30 .
- the user or system manger can make a choice by using a selection picture as shown in FIG. 31 .
- an additional input column 2 is provided laterally of, for example, the input column 1534 .
- parameters similar to those in the input column 1534 are provided.
- the user selects, in the input column 1534 , the aforementioned item “RAID group distribution” which is a parameter for distributing the RAID group of the copy destination LU's.
- the “access speed”, for instance is selected.
- the default control section first follows the “RAID group distribution” selected in the input column 1534 to determine copy destination LU's in such a way that copy source LU's and copy destination LU's belong to different RAID groups. Further, when there are a plurality of determined copy destination LU's, the control section can preferentially display, in connection with the plurality of copy destination LU's, a LU having a high access speed representing a parameter selected in the input column 2 .
- the correspondence can be made in such a way that a RAID group to which copy source LU's belong and RAID groups to which copy destination LU candidates being correspondent with the individual copy source LU's belong are all different from each other.
- the correspondence may be made in such a manner that LU 0 and LU 1 representing copy source LU's (both belonging to a RAID group 0), a copy destination LU candidate to be correspondent with the LU 0 and a copy destination LU candidate to be correspondent with the LU 1 all belong to different RAID groups.
- the RAID control section 740 consults the LU management table 800 in the S 1140 to prepare, in the S 1150 , an empty LU list 1400 (see FIG. 33 ) in which copy destination LU candidates belonging to different RAID groups are allotted to the LU 0 and LU 1 , respectively.
- the GUI can be provided which can alleviate troublesomeness of work by setter/operator engaged in setting of the computer.
Abstract
Description
Claims (11)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2003025072A JP4409181B2 (en) | 2003-01-31 | 2003-01-31 | Screen data generation method, computer, program |
JP2003-025072 | 2003-01-31 |
Publications (2)
Publication Number | Publication Date |
---|---|
US20040243630A1 US20040243630A1 (en) | 2004-12-02 |
US7031975B2 true US7031975B2 (en) | 2006-04-18 |
Family
ID=32953439
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/652,652 Active 2024-07-19 US7031975B2 (en) | 2003-01-31 | 2003-08-28 | Method and program for creating picture data, and system using the same |
Country Status (2)
Country | Link |
---|---|
US (1) | US7031975B2 (en) |
JP (1) | JP4409181B2 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050086432A1 (en) * | 2003-10-21 | 2005-04-21 | Nec Corporation | Disk array device having snapshot simulation function |
US20070245062A1 (en) * | 2004-08-30 | 2007-10-18 | Shoko Umemura | Data processing system |
US20090150608A1 (en) | 2005-05-24 | 2009-06-11 | Masataka Innan | Storage system and operation method of storage system |
US8549248B2 (en) | 2006-09-29 | 2013-10-01 | Hitachi, Ltd. | Data migration method and information processing system |
Families Citing this family (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7711539B1 (en) * | 2002-08-12 | 2010-05-04 | Netapp, Inc. | System and method for emulating SCSI reservations using network file access protocols |
JP2006119829A (en) * | 2004-10-20 | 2006-05-11 | Hitachi Ltd | Storage controller and storage control method |
JP4688478B2 (en) * | 2004-11-25 | 2011-05-25 | 株式会社日立製作所 | Software development support system and software development support method for storage apparatus |
JP4833541B2 (en) * | 2004-12-08 | 2011-12-07 | 株式会社日立製作所 | Deployment method, program, and server system |
JP2009122752A (en) * | 2007-11-12 | 2009-06-04 | Sharp Corp | Electric equipment device and setting method for electric equipment device |
US8224879B2 (en) | 2010-02-23 | 2012-07-17 | Hitachi, Ltd. | Management system and management method for storage system |
JP5269216B2 (en) * | 2012-01-16 | 2013-08-21 | 株式会社日立製作所 | Data migration method and information processing system |
JP7230539B2 (en) * | 2019-01-30 | 2023-03-01 | ヤマハ株式会社 | SOUND SIGNAL PROCESSING DEVICE, SOUND SIGNAL PROCESSING METHOD, AND PROGRAM |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS61193232A (en) | 1985-02-20 | 1986-08-27 | Fujitsu Ltd | Data display system |
US5206951A (en) | 1987-08-21 | 1993-04-27 | Wang Laboratories, Inc. | Integration of data between typed objects by mutual, direct invocation between object managers corresponding to object types |
JPH10333838A (en) | 1997-06-04 | 1998-12-18 | Hitachi Ltd | Data multiplexing storage sub-system |
US20020083068A1 (en) * | 2000-10-30 | 2002-06-27 | Quass Dallan W. | Method and apparatus for filling out electronic forms |
JP2002351703A (en) | 2001-05-25 | 2002-12-06 | Hitachi Ltd | Storage device, file data backup method and file data copying method |
US20030007009A1 (en) | 2001-03-23 | 2003-01-09 | Haley John D. | Processing system for use with a user interface display |
US20030204557A1 (en) | 2002-04-29 | 2003-10-30 | Sun Microsystems, Inc. | Method and apparatus for managing remote data replication using CIM providers in a distributed computer system |
US20030217195A1 (en) | 2002-05-16 | 2003-11-20 | Sun Microsystems, Inc. | Method and apparatus for managing host-based data services using CIM providers |
US20040205294A1 (en) | 2003-01-20 | 2004-10-14 | Hitachi, Ltd. | Method of controlling storage device controlling apparatus, and storage device controlling apparatus |
-
2003
- 2003-01-31 JP JP2003025072A patent/JP4409181B2/en not_active Expired - Fee Related
- 2003-08-28 US US10/652,652 patent/US7031975B2/en active Active
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS61193232A (en) | 1985-02-20 | 1986-08-27 | Fujitsu Ltd | Data display system |
US5206951A (en) | 1987-08-21 | 1993-04-27 | Wang Laboratories, Inc. | Integration of data between typed objects by mutual, direct invocation between object managers corresponding to object types |
JPH10333838A (en) | 1997-06-04 | 1998-12-18 | Hitachi Ltd | Data multiplexing storage sub-system |
US20020083068A1 (en) * | 2000-10-30 | 2002-06-27 | Quass Dallan W. | Method and apparatus for filling out electronic forms |
US20030007009A1 (en) | 2001-03-23 | 2003-01-09 | Haley John D. | Processing system for use with a user interface display |
JP2002351703A (en) | 2001-05-25 | 2002-12-06 | Hitachi Ltd | Storage device, file data backup method and file data copying method |
US20030204557A1 (en) | 2002-04-29 | 2003-10-30 | Sun Microsystems, Inc. | Method and apparatus for managing remote data replication using CIM providers in a distributed computer system |
US20030217195A1 (en) | 2002-05-16 | 2003-11-20 | Sun Microsystems, Inc. | Method and apparatus for managing host-based data services using CIM providers |
US20040205294A1 (en) | 2003-01-20 | 2004-10-14 | Hitachi, Ltd. | Method of controlling storage device controlling apparatus, and storage device controlling apparatus |
Non-Patent Citations (2)
Title |
---|
Khoral Research, Inc., Available GUI Items, 1997, pp. 1-14. * |
Randy Finch, Web Typesetting-Part 5:Forms, Aug. 1996, pp. 1-4. * |
Cited By (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7257675B2 (en) * | 2003-10-21 | 2007-08-14 | Nec Corporation | Disk array device having snapshot simulation function |
US20050086432A1 (en) * | 2003-10-21 | 2005-04-21 | Nec Corporation | Disk array device having snapshot simulation function |
US8122214B2 (en) | 2004-08-30 | 2012-02-21 | Hitachi, Ltd. | System managing a plurality of virtual volumes and a virtual volume management method for the system |
US20070245062A1 (en) * | 2004-08-30 | 2007-10-18 | Shoko Umemura | Data processing system |
US7565502B2 (en) * | 2004-08-30 | 2009-07-21 | Hitachi, Ltd. | System managing a plurality of virtual volumes and a virtual volume management method for the system |
US20090249012A1 (en) * | 2004-08-30 | 2009-10-01 | Hitachi, Ltd. | System managing a plurality of virtual volumes and a virtual volume management method for the system |
US8843715B2 (en) | 2004-08-30 | 2014-09-23 | Hitachi, Ltd. | System managing a plurality of virtual volumes and a virtual volume management method for the system |
US7840767B2 (en) | 2004-08-30 | 2010-11-23 | Hitachi, Ltd. | System managing a plurality of virtual volumes and a virtual volume management method for the system |
US20090150608A1 (en) | 2005-05-24 | 2009-06-11 | Masataka Innan | Storage system and operation method of storage system |
US7953942B2 (en) | 2005-05-24 | 2011-05-31 | Hitachi, Ltd. | Storage system and operation method of storage system |
US8180979B2 (en) | 2005-05-24 | 2012-05-15 | Hitachi, Ltd. | Storage system and operation method of storage system |
US8484425B2 (en) | 2005-05-24 | 2013-07-09 | Hitachi, Ltd. | Storage system and operation method of storage system including first and second virtualization devices |
US20100274963A1 (en) * | 2005-05-24 | 2010-10-28 | Hitachi, Ltd. | Storage system and operation method of storage system |
US8549248B2 (en) | 2006-09-29 | 2013-10-01 | Hitachi, Ltd. | Data migration method and information processing system |
Also Published As
Publication number | Publication date |
---|---|
JP2004234556A (en) | 2004-08-19 |
JP4409181B2 (en) | 2010-02-03 |
US20040243630A1 (en) | 2004-12-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7668882B2 (en) | File system migration in storage system | |
US7363446B2 (en) | Storage system and storage control device | |
TWI421692B (en) | System of virtual media with folder-mount function and operation method thereof | |
US8621119B2 (en) | Storage system | |
US6728848B2 (en) | Method and system for backing up storage system data | |
US6912627B2 (en) | Method of creating a storage area & storage device | |
US7370229B2 (en) | Storage system and setting method for storage configuration information | |
US7827382B2 (en) | Network system and method for setting volume group in the network system | |
US20040091175A1 (en) | Image processing | |
US7783737B2 (en) | System and method for managing supply of digital content | |
US7467241B2 (en) | Storage control method and storage control system | |
US7031975B2 (en) | Method and program for creating picture data, and system using the same | |
EP0670550B1 (en) | Information processing method and apparatus therefor | |
EP1890224A2 (en) | Data processing system | |
EP1669850A1 (en) | Network storage system with a clustered configuration sharing a namespace, and control method therefore | |
JP2004157637A (en) | Storage management method | |
US20060090055A1 (en) | Storage management apparatus, storage apparatus, file processing system, file management system, and methods and programs thereof | |
JPH1185576A (en) | Data moving method and information processing system | |
US8117405B2 (en) | Storage control method for managing access environment enabling host to access data | |
JP2830826B2 (en) | Distributed file synchronization system and method | |
JP4326819B2 (en) | Storage system control method, storage system, program, and recording medium | |
JP2926779B2 (en) | Document construction device in distributed file system | |
JPH03276360A (en) | Virtual assignment processing system for terminal file | |
JP2005346410A (en) | Access management method in san | |
JPH06259295A (en) | Method and apparatus for improvement of permissible power of obstacle of document management system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: HITACHI, LTD., JAPANFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:KANIE, HOMARE;REEL/FRAME:015520/0514Effective date: 20031009 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:HITACHI, LTD.;REEL/FRAME:030555/0554Effective date: 20121016 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553)Year of fee payment: 12 |
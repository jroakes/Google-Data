US7774328B2 - Browseable fact repository - Google Patents
Browseable fact repository Download PDFInfo
- Publication number
- US7774328B2 US7774328B2 US11/356,851 US35685106A US7774328B2 US 7774328 B2 US7774328 B2 US 7774328B2 US 35685106 A US35685106 A US 35685106A US 7774328 B2 US7774328 B2 US 7774328B2
- Authority
- US
- United States
- Prior art keywords
- fact
- facts
- search
- link
- search query
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2452—Query translation
- G06F16/24522—Translation of natural language queries to structured queries
Definitions
- the present invention relates to a knowledge and fact databases, and in particularly to user interfaces, methods, and systems for browsing such database.
- Knowledge bases are collections of facts and data organized in into systematic arrangement of information. Online knowledge bases have become increasingly prevalent on the Internet, and examples include WordNet, Wikipedia, Webopedia, and similar online encyclopedias, dictionaries, and document collections. These knowledge bases are typically organized around individual documents (“articles”) that describe topics of interest, such as persons, places, events, fields of knowledge, and the like. Each article on a particular subject or topic is the primary unit of storage and manipulation. That is, articles as a whole are used to describe a topic, and articles themselves are stored as single document typically containing a large block of unstructured (other than for formatting) text.
- search tools are provided to search the knowledge for information.
- An underlying service engine or database management system receives a search query containing one or more keywords or phrases.
- the service engine selects one or more articles that contains such keywords.
- the single article that best matches the keyword query for example, the article having the query keywords in its title, will be retrieved and displayed to the user.
- the present invention provides a methodology and system for automatically creating and maintaining facts and links between facts and objects in a fact repository.
- the fact repository includes a large collection of facts, each of which is associated with an object, such as a person, place, book, movie, country, or any other entity of interest.
- Each fact comprises an attribute, which is descriptive of the type of fact (e.g., “name,” or “population”), and a value for that attribute (e.g., “George Washington”, or “1,397,264,580”).
- a value can also contain any amount of text—from a single term or phrase to many paragraphs or pages—such as appropriate to describe the attribute.
- Each object will have a name fact that is the name of the object.
- the value of an attribute can thus include one or more phrases that are themselves the names of other objects. Facts are preferably stored individually and separately, allowing them to be individually selected and configured in response to user queries.
- a search query is received, which may contain keywords or phrases.
- the search query is used to search the fact repository for objects that are relevant to the search query.
- Each object is displayed with a plurality of facts that are associated with the object.
- the facts are displayed in a rank order based on a function of their relevance to the query.
- an object name link which comprises a name fact for the object, and a link to an page containing additional facts associated with the object.
- the present invention further has embodiments in computer program products, in computer systems, and computer user interfaces, which various perform or cooperate in the operation or use of the foregoing method (or its alternative embodiments and features).
- FIG. 1 shows a system architecture, in accordance with a preferred embodiment of the invention.
- FIGS. 2( a )- 2 ( d ) are block diagrams illustrating a data structure for facts within a repository of FIG. 1 in accordance with preferred embodiments of the invention.
- FIG. 2( e ) is a block diagram illustrating an alternate data structure for facts and objects in accordance with preferred embodiments of the invention.
- FIG. 3 illustrates a landing page for initiating a search query of a fact repository.
- FIG. 4 illustrate a search results page
- FIG. 5 illustrates the results of a search query link.
- FIG. 6 illustrates another search results page.
- FIG. 7 illustrates an object detail page.
- FIG. 8 illustrates another search results.
- FIG. 9 illustrates another object detail page, from the search results page of FIG. 8 .
- FIG. 10 illustrates a search result page from an attribute search link in FIG. 9 .
- FIG. 11 illustrates a search results page from a value search link in FIG. 9 .
- FIG. 12 illustrates a search results page from an attribute-value search link in FIG. 9 .
- FIG. 1 shows a system architecture 100 adapted to support one embodiment of the invention.
- FIG. 1 shows components used to add facts into, and retrieve facts from a repository 115 .
- the system architecture 100 includes a network 104 , through which any number of document hosts 102 communicate with a data processing system 106 , along with any number of object requesters 152 , 154 .
- Document hosts 102 store documents and provide access to documents.
- a document is comprised of any machine-readable data including any combination of text, graphics, multimedia content, etc.
- a document may be encoded in a markup language, such as Hypertext Markup Language (HTML), i.e., a web page, in a interpreted language (e.g., JavaScript) or in any other computer readable or executable format.
- HTML Hypertext Markup Language
- a document can include one or more hyperlinks to other documents.
- a typical document will include one or more facts within its content.
- a document stored in a document host 102 may be located and/or identified by a Uniform Resource Locator (URL), or Web address, or any other appropriate form of identification and/or location.
- URL Uniform Resource Locator
- a document host 102 is implemented by a computer system, and typically includes a server adapted to communicate over the network 104 via networking protocols (e.g., TCP/IP), as well as application and presentation protocols (e.g., HTTP, HTML, SOAP, D-HTML, Java).
- networking protocols e.g., TCP/IP
- application and presentation protocols e.g., HTTP, HTML, SOAP, D-HTML, Java.
- the documents stored by a host 102 are typically held in a file directory, a database, or other data repository.
- a host 102 can be implemented in any computing device (e.g., from a PDA or personal computer, a workstation, mini-computer, or mainframe, to a cluster or grid of computers), as well as in any processor architecture or operating system.
- FIG. 1 shows components used to manage facts in a fact repository 115 .
- Data processing system 106 includes one or more importers 108 , one or more janitors 110 , a build engine 112 , a service engine 114 , and a fact repository 115 (also called simply a “repository”).
- Importers 108 operate to process documents received from the document hosts, read the data content of documents, and extract facts (as operationally and programmatically defined within the data processing system 106 ) from such documents.
- the importers 108 also determine the subject or subjects with which the facts are associated, and extract such facts into individual items of data, for storage in the fact repository 115 .
- there are different types of importers 108 for different types of documents for example, dependent on the format or document type.
- Janitors 110 operate to process facts extracted by importer 108 .
- This processing can include but is not limited to, data cleansing, object merging, and fact induction.
- Other types of janitors 110 may be implemented, depending on the types of data management functions desired, such as translation, compression, spelling or grammar correction, and the like.
- Various janitors 110 act on facts to normalize attribute names, and values and delete duplicate and near-duplicate facts so an object does not have redundant information. For example, we might find on one page that Britney Spears' birthday is “Dec. 2, 1981” while on another page that her date of birth is “Dec. 2, 1981.” Birthday and Date of Birth might both be rewritten as Birthdate by one janitor and then another janitor might notice that Dec. 2, 1981 and Dec. 2, 1981 are different forms of the same date. It would choose the preferred form, remove the other fact and combine the source lists for the two facts. As a result when you look at the source pages for this fact, on some you'll find an exact match of the fact and on others text that is considered to be synonymous with the fact.
- Build engine 112 builds and manages the repository 115 .
- Service engine 114 is an interface for querying the repository 115 .
- Service engine 114 's main function is to process queries, score matching objects, and return them to the caller but it is also used by janitor 110 .
- Repository 115 stores factual information extracted from a plurality of documents that are located on document hosts 102 .
- a document from which a particular fact may be extracted is a source document (or “source”) of that particular fact.
- source a source of a fact includes that fact (or a synonymous fact) within its contents.
- Repository 115 contains one or more facts.
- each fact is associated with exactly one object.
- One implementation for this association includes in each fact an object ID that uniquely identifies the object of the association.
- any number of facts may be associated with an individual object, by including the object ID for that object in the facts.
- objects themselves are not physically stored in the repository 115 , but rather are defined by the set or group of facts with the same associated object ID, as described below. Further details about facts in repository 115 are described below, in relation to FIGS. 2( a )- 2 ( d ).
- the components of the data processing system 106 will be distributed over multiple computers, communicating over a network.
- repository 115 may be deployed over multiple servers.
- the janitors 110 may be located on any number of different computers. For convenience of explanation, however, the components of the data processing system 106 are discussed as though they were implemented on a single computer.
- document hosts 102 are located on data processing system 106 instead of being coupled to data processing system 106 by a network.
- importer 108 may import facts from a database that is a part of or associated with data processing system 106 .
- FIG. 1 also includes components to access repository 115 on behalf of one or more object requesters 152 , 154 .
- Object requesters are entities that request objects from repository 115 .
- Object requesters 152 , 154 may be understood as clients of the system 106 , and can be implemented in any computer device or architecture.
- a first object requester 152 is located remotely from system 106
- a second object requester 154 is located in data processing system 106 .
- the blog may include a reference to an object whose facts are in repository 115 .
- An object requester 152 such as a browser displaying the blog will access data processing system 106 so that the information of the facts associated with the object can be displayed as part of the blog web page.
- janitor 110 or other entity considered to be part of data processing system 106 can function as object requester 154 , requesting the facts of objects from repository 115 .
- FIG. 1 shows that data processing system 106 includes a memory 107 and one or more processors 116 .
- Memory 107 includes importers 108 , janitors 110 , build engine 112 , service engine 114 , and requester 154 , each of which are preferably implemented as instructions stored in memory 107 and executable by processor 116 .
- Memory 107 also includes repository 115 .
- Repository 115 can be stored in a memory of one or more computer systems or in a type of memory such as a disk.
- FIG. 1 also includes a computer readable medium 118 containing, for example, at least one of importers 108 , janitors 110 , build engine 112 , service engine 114 , requester 154 , and at least some portions of repository 115 .
- FIG. 1 also includes a computer readable medium 118 containing, for example, at least one of importers 108 , janitors 110 , build engine 112 , service engine 114 , requester 154 ,
- data processing system 106 also includes one or more input/output devices 120 that allow data to be input and output to and from data processing system 106 .
- data processing system 106 preferably also includes standard software components such as operating systems and the like and further preferably includes standard hardware components not shown in the figure for clarity of example.
- FIG. 2( a ) shows an example format of a data structure for facts within repository 115 , according to some embodiments of the invention.
- the repository 115 includes facts 204 .
- each fact is stored separately and independently.
- Each fact 204 includes a unique identifier for that fact, such as a fact ID 210 .
- Each fact 204 includes at least an attribute 212 and a value 214 .
- a fact associated with an object representing George Washington may include an attribute of “date of birth” and a value of “Feb. 22, 1732.”
- all facts are stored as alphanumeric characters since they are extracted from web pages.
- facts also can store binary data values. Other embodiments, however, may store fact values as mixed types, or in encoded formats.
- each fact is associated with an object ID 209 that identifies the object that the fact describes.
- object ID 209 identifies the object that the fact describes.
- objects are not stored as separate data entities in memory.
- the facts associated with an object contain the same object ID, but no physical object exists.
- objects are stored as data entities in memory, and include references (for example, pointers or IDs) to the facts associated with the object.
- the logical data structure of a fact can take various forms; in general, a fact is represented by a tuple that includes a fact ID, an attribute, a value, and an object ID.
- the storage implementation of a fact can be in any underlying physical data structure.
- FIG. 2( b ) shows an example of facts having respective fact IDs of 10 , 20 , and 30 in repository 115 .
- Facts 10 and 20 are associated with an object identified by object ID “1.”
- Fact 10 has an attribute of “Name” and a value of “China.”
- Fact 20 has an attribute of “Category” and a value of “Country.”
- the object identified by object ID “1” has a name fact 205 with a value of “China” and a category fact 206 with a value of “Country.”
- Fact 30 208 has an attribute of “Property” and a value of “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- the object identified by object ID “2” has a property fact with a fact ID of 30 and a value of “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- each fact has one attribute and one value.
- the number of facts associated with an object is not limited; thus while only two facts are shown for the “China” object, in practice there may be dozens, even hundreds of facts associated with a given object.
- the value fields of a fact need not be limited in size or content. For example, a fact about the economy of “China” with an attribute of “Economy” would have a value including several paragraphs of text, numbers, perhaps even tables of figures. This content can be formatted, for example, in a markup language. For example, a fact having an attribute “original html” might have a value of the original html text taken from the source web page.
- FIG. 2( b ) shows the explicit coding of object ID, fact ID, attribute, and value
- content of the fact can be implicitly coded as well (e.g., the first field being the object ID, the second field being the fact ID, the third field being the attribute, and the fourth field being the value).
- Other fields include but are not limited to: the language used to state the fact (English, etc.), how important the fact is, the source of the fact, a confidence value for the fact, and so on.
- FIG. 2( c ) shows an example object reference table 210 that is used in some embodiments. Not all embodiments include an object reference table.
- the object reference table 210 functions to efficiently maintain the associations between object IDs and fact IDs. In the absence of an object reference table 210 , it is also possible to find all facts for a given object ID by querying the repository to find all facts with a particular object ID. While FIGS. 2( b ) and 2 ( c ) illustrate the object reference table 210 with explicit coding of object and fact IDs, the table also may contain just the ID values themselves in column or pair-wise arrangements.
- FIG. 2( d ) shows an example of a data structure for facts within repository 115 , according to some embodiments of the invention showing an extended format of facts.
- the fields include an object reference link 216 to another object.
- the object reference link 216 can be an object ID of another object in the repository 115 , or a reference to the location (e.g., table row) for the object in the object reference table 210 .
- the object reference link 216 allows facts to have as values other objects. For example, for an object “United States,” there may be a fact with the attribute of “president” and the value of “George W. Bush,” with “George W. Bush” being an object having its own facts in repository 115 .
- the value field 214 stores the name of the linked object and the link 216 stores the object identifier of the linked object.
- this “president” fact would include the value 214 of “George W. Bush”, and object reference link 216 that contains the object ID for the for “George W. Bush” object.
- facts 204 do not include a link field 216 because the value 214 of a fact 204 may store a link to another object.
- Each fact 204 also may include one or more metrics 218 .
- a metric provides an indication of the some quality of the fact.
- the metrics include a confidence level and an importance level.
- the confidence level indicates the likelihood that the fact is correct.
- the importance level indicates the relevance of the fact to the object, compared to other facts for the same object.
- the importance level may optionally be viewed as a measure of how vital a fact is to an understanding of the entity or concept represented by the object.
- Each fact 204 includes a list of one or more sources 220 that include the fact and from which the fact was extracted.
- Each source may be identified by a Uniform Resource Locator (URL), or Web address, or any other appropriate form of identification and/or location, such as a unique document identifier.
- URL Uniform Resource Locator
- the facts illustrated in FIG. 2( d ) include an agent field 222 that identifies the importer 108 that extracted the fact.
- the importer 108 may be a specialized importer that extracts facts from a specific source (e.g., the pages of a particular web site, or family of web sites) or type of source (e.g., web pages that present factual information in tabular form), or an importer 108 that extracts facts from free text in documents throughout the Web, and so forth.
- a name fact 207 is a fact that conveys a name for the entity or concept represented by the object ID.
- a name fact 207 includes an attribute 224 of “name” and a value, which is the name of the object. For example, for an object representing the country Spain, a name fact would have the value “Spain.”
- a name fact 207 being a special instance of a general fact 204 , includes the same fields as any other fact 204 ; it has an attribute, a value, a fact ID, metrics, sources, etc.
- the attribute 224 of a name fact 207 indicates that the fact is a name fact, and the value is the actual name.
- the name may be a string of characters.
- An object ID may have one or more associated name facts, as many entities or concepts can have more than one name. For example, an object ID representing Spain may have associated name facts conveying the country's common name “Spain” and the official name “Kingdom of Spain.” As another example, an object ID representing the U.S. Patent and Trademark Office may have associated name facts conveying the agency's acronyms “PTO” and “USPTO” as well as the official name “United States Patent and Trademark Office.” If an object does have more than one associated name fact, one of the name facts may be designated as a primary name and other name facts may be designated as secondary names, either implicitly or explicitly.
- a property fact 208 is a fact that conveys a statement about the entity or concept represented by the object ID.
- Property facts are generally used for summary information about an object.
- a property fact 208 being a special instance of a general fact 204 , also includes the same parameters (such as attribute, value, fact ID, etc.) as other facts 204 .
- the attribute field 226 of a property fact 208 indicates that the fact is a property fact (e.g., attribute is “property”) and the value is a string of text that conveys the statement of interest.
- the value of a property fact may be the text string “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- Some object IDs may have one or more associated property facts while other objects may have no associated property facts.
- the data structure of the repository 115 may take on other forms. Other fields may be included in facts and some of the fields described above may be omitted.
- each object ID may have additional special facts aside from name facts and property facts, such as facts conveying a type or category (for example, person, place, movie, actor, organization, etc.) for categorizing the entity or concept represented by the object ID.
- an object's name(s) and/or properties may be represented by special records that have a different format than the general facts records 204 .
- null object As described previously, a collection of facts is associated with an object ID of an object.
- An object may become a null or empty object when facts are disassociated from the object.
- a null object can arise in a number of different ways.
- One type of null object is an object that has had all of its facts (including name facts) removed, leaving no facts associated with its object ID.
- Another type of null object is an object that has all of its associated facts other than name facts removed, leaving only its name fact(s).
- the object may be a null object only if all of its associated name facts are removed.
- a null object represents an entity or concept for which the data processing system 106 has no factual information and, as far as the data processing system 106 is concerned, does not exist.
- facts of a null object may be left in the repository 115 , but have their object ID values cleared (or have their importance to a negative value). However, the facts of the null object are treated as if they were removed from the repository 115 . In some other embodiments, facts of null objects are physically removed from repository 115 .
- FIG. 2( e ) is a block diagram illustrating an alternate data structure 290 for facts and objects in accordance with preferred embodiments of the invention.
- an object 290 contains an object ID 292 and references or points to facts 294 .
- Each fact includes a fact ID 295 , an attribute 297 , and a value 299 .
- an object 290 actually exists in memory 107 .
- the content of the facts in the repository 115 are also indexed in index 127 .
- the index 127 maintains a term index, which maps terms to ⁇ object, fact, field, token ⁇ tuples, where “field” is, e.g., attribute or value.
- the service engine 114 is adapted to receive keyword queries from clients such as object requestors, and communicates with the index 127 to retrieve the facts that are relevant to user's search query. For a generic query containing one or more terms, the service engine 114 assumes the scope is at the object level. Thus, any object with one or more of the query terms somewhere (not necessarily on the same fact) will match the query for purposes of being ranked in the search results.
- the ranking (score) of an object is a linear combination of relevance scores for each of the facts.
- the relevance score for each fact is based on whether the fact includes one or more query terms (a hit) in either the attribute or value portion of the fact.
- Each hit is scored based on the frequency of the term that is hit, with more common terms getting lower scores, and rarer terms getting higher scores (e.g., using a TF-IDF based term weighting model).
- the fact score is then adjusted based on additional factors.
- each fact's score is also adjusted by its associated confidence measure and by its importance measure. Since each fact is independently scored, the facts most relevant and important to any individual query can be determined, and selected. In one embodiment, a selected number (e.g., 5) of the top scoring facts is selected for display in response to query.
- the service engine 114 is also adapted to handle structured queries, using query operators that restrict the scope of a term match.
- a fact restriction operator comprising brackets enclosing terms, e.g., “[terms] ”, restricts the term(s) to matching in a single fact.
- Field restriction operators attribute ⁇ ⁇ and value ⁇ ⁇ operators restrict to a single field.
- the query [attribute ⁇ name ⁇ value ⁇ “george washington”] restricts the scope of the match to the terms “george washington” appearing in the name fact.
- FIGS. 3-12 there is shown various example screens from a user interface for browsing the fact repository in accordance with one embodiment of present invention.
- a simple landing or home page for initiating a query of the fact repository 115 .
- the page 300 a search query field 302 and a search objects button 304 .
- the user enters any number of search terms into the search field 302 .
- the terms can be any terms whatsoever, as they may appear in any fact.
- the user selects the search objects button 304 to provide the search terms to the service engine 114 .
- FIG. 4 illustrates the search result page 400 of a search, here for the search query “china.”
- the results page 400 includes a list of ranked search results 402 , each search result 402 comprising a name link 416 to an object, the anchor text of the link 416 being the name of the object (the name link 416 resolves to an object detail page, as further described below).
- the results 402 are ranked according to their relevance to the search query.
- Each search result 402 (which for the purpose of this discussion can also be referred to as an object) is optionally displayed with a label 406 indicating the category of the object (e.g., country, company, person, car, etc.).
- an object search link 408 Next to each search result 402 is displayed one example of an object search link 408 .
- the object search link 408 causes a search query to be sent from the client device to the service engine.
- This search query is for objects of the same category as the search result object, and which contain the current search query terms in at least one of the facts associated with such object.
- a search query is sent to the service engine 127 for objects of category “country” and which contain the search term “china” in one or more facts.
- the object search link operates to further filter out the search results, such as the second and third search results 402 which are companies, and not countries. Additional examples of object search links are discussed below.
- FIG. 5 illustrates an example of such a search link 408 .
- This figure illustrates the resulting page after search link 408 was selected by the user.
- the search link resulted in search query being transmitted to the service engine (as shown in the search query field 302 ), which then provides search results 402 of other objects having a “category” fact of “country”, and which contain the search term “china” in one or more facts.
- each search result 402 displayed in conjunction with each search result 402 is a list of one or more facts 410 associated with the object.
- the list of facts 410 is ordered according to relevance of the fact for the query and to the object.
- four facts 410 are listed, these being the population fact, the area fact, the GDP fact, and the chief of state fact.
- the four facts are entirely different, but again ordered by relevance to query and to object itself.
- Each fact 410 is preferably displayed with both its attribute such as “population,” and its value, such as “1,306,313,812.”
- FIG. 6 further illustrates the selection of facts 410 for display with the object of a search result 402 based on the relevance of the fact to the object.
- the search query of “china railways” yields a set of search results 402 , again including a result for the “China” object.
- some of selected facts 410 are those relevant to railways in China as shown by facts 410 for the total length of the railways in China, total standard and dual gauge, and then again the population fact.
- each fact 410 is displayed with source link 412 which links to the source of the factual information on which the fact is based.
- the anchor text for the source link 412 is the URL for the source itself (or a portion thereof), but other anchor text may be used as well (e.g., a name of the source), particularly if the URL is not descriptive of the source. Selecting the source link 412 accesses the source, either for the page of the source that directly contains the fact, or other some other portion of the source, such as the home page. Alternatively, some portion of the fact value may be used as the anchor for the source link 412 .
- One more or links to media files 414 may also be displayed in conjunction with the search result 402 .
- the media link 414 may be displayed if available for the object, for any type of object.
- the type of media link 414 may be dependent on the type of object in the search result. In the example of FIG. 4 , there is shown an image of the flag for China.
- a link to a representative audio file e.g., a national anthem, or a historic, or recent event
- the media link 414 may be to an image of the person, or a video file of the person; similarly link 414 may be to an audio recording (e.g., a speech, statement or song) associated with the person.
- the media link 414 may also be to a service or system from which one or more media files associated with the object may be purchased, such as a link to a download music or video service.
- a service or system from which one or more media files associated with the object may be purchased, such as a link to a download music or video service.
- the search result object is a person such as a musician
- the media link 414 is a search link to an online music service to search for one or more songs performed by the person, and then provide the purchase opportunity to the user.
- the media link 414 may be search link to an online video rental service (or download service) for one more movies in which the person performed.
- the media link 414 may be a search link to an online retailer to purchase a book associated with the object. If the object is a person, then the media link 414 can be a search link to an online retailer (or other entity, e.g., classifieds, auction site, etc.) and resolve to one or more books written by the person (e.g., where the person object is author, such as Joseph Conrad), or about the person. Similarly, where the object is some other entity, e.g., a country, company, automobile, the media link 414 may be a search link to an online retailer and resolves to one or more books about the country, company, automobile, and so forth. Other examples of links 414 include links to stock tickers or prices where the object is company, links to blogs regarding the object, links to news reports relevant to the object, and so forth.
- the object detail page 700 contains a list of the facts 710 associated with the object, each fact 710 including its attribute (e.g., “name,” “category,” “population,” etc.) and its value.
- the facts 710 may be listed on a single detailed result page 700 , or on several linked pages.
- the object detail page 700 can be presented as a table with fixed size columns, or a list.
- Facts 710 can be textual or graphical, as shown by the flag fact and the map fact.
- Each fact 710 is also associated with a source link 712 to a source of the fact.
- each fact 710 is further associated with one or more object search links 708 .
- some of the object search links 708 are associated with search queries for objects having a fact of the same attribute as the current object.
- search link 708 c is associated with a search query for objects that have a “population” fact
- search link 708 d is associated with a search query for objects that have an “area” fact.
- attribute search links are called attribute search links, because they search for objects that simply have facts for the same type of attribute, regardless of the value of the attribute.
- a search link 708 such as attribute search link 708 c , can use any text as the anchor text.
- another implementation of this attribute search link is the search link 708 e with the anchor text “a” in the third column of the table in FIG. 7 .
- FIGS. 8-12 further illustrate the operation and benefits of the object search link.
- FIG. 8 illustrates a search results page 800 for a search query “katharine hepburn”.
- the search results 802 include various objects, again ranked by relevance to the query, including the “Katharine Hepburn” object for the person herself, and a different object, the “Katharine Hepburn: All About Me (1993) (TV)” object for a made-for-television movie [about the Hollywood diva].
- each search result 802 includes a set of facts 810 , ranked by relevance. In this example, the most relevant fact 810 has been determined by the service engine 114 to be the “cause of death” fact 810 .
- each fact 810 has a value (e.g., “natural causes”), and a source link 812 .
- the name link 816 of the object leads to the object detail page for the “Katharine Hepburn” object.
- the label 806 for the category of this object here, a “person”
- media link 814 also illustrates several different types of media links 814 , including a media link 814 a to an image of Katharine Hepburn, a media link 814 b to a source of additional [smoldering] images of Katharine Hepburn, a media link 814 c to an online retailer of books for books about Katharine Hepburn, a media link 814 d to another online retailer of books for books authored by Katharine Hepburn, and finally, a media link 814 e to an online movie rental site to movies starring Katharine Hepburn.
- Each of the foregoing media links 814 is preferably implemented as a search link which passes a search query of the appropriate type to the source (e.g., a query on “Katharine Hepburn” and additional field constraints as appropriate, such as “author” or “actor”).
- a search query of the appropriate type e.g., a query on “Katharine Hepburn” and additional field constraints as appropriate, such as “author” or “actor”.
- FIG. 9 illustrates the object detail page 900 for the “Katharine Hepburn” object. Again, the facts associated with this object are displayed in a list, rather than as a table as in FIG. 7 .
- object detail page 900 is attribute “date of birth” in fact 910 and its associated value “12 May 1907.” Both the attribute “date of birth” and the value “12 May 1907” serve as anchor text to object search links 908 .
- the text “date of birth” of this attribute is the anchor text for search link for a search query for any object having a fact has “date of birth” attribute; or in more simplified terms, a search for any object that has a date of birth.
- Additional search links 908 are included to other attributes that are in common with this object. In one embodiment, the selection of which additional search links 908 are included is determined by the relevance of the attributes to the current object.
- the search query is “attribute ⁇ (date of birth) ⁇ ”, and is processed to select from the fact repository 115 the objects which have a fact for the attribute “date of birth.” As expected, and illustrated in FIG. 10 , this is primarily people.
- the value “12 May 1907” for this factor is the anchor text for search link 908 for a search query for any object having any fact with a value of “12 May 1907”, and regardless of whether that value is for the date of birth or others.
- FIG. 11 illustrates the search results page 1100 for this search.
- the search query field 1103 shows the search query of “value ⁇ (12 May 1907) ⁇ ” which returns several person objects, including the third one for “Joris-Karl Huysmans”, which includes facts 1110 (“date of death”, and “summary”) that contain the string “12 May 1907”.
- an object or fact as displayed on search results page or an object detail page may include an object search link for a combined attribute-value pair. This is called an attribute-value search link.
- This type of search link is associated with a search query for objects having a fact in which the attribute and the value of the attribute match the input search.
- FIG. 9 there is shown a search link 908 c for objects containing this type of search.
- FIG. 12 illustrates the search results page 1200 from selection of search link 908 c .
- the search query includes restrictions for both the attribute and its value, expressed as “[attribute ⁇ (date of birth) ⁇ value ⁇ (12 May 1907) ⁇ ]”.
- the search results 1202 include both the “Katharine Hepburn” object, and the result for a “Leslie Charteris” object, which also has a fact matching the attribute of “date of birth” and matching the value “12 May 1907”.
- Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present invention also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present invention is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.
Abstract
Description
Claims (14)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/356,851 US7774328B2 (en) | 2006-02-17 | 2006-02-17 | Browseable fact repository |
US14/194,534 US9092495B2 (en) | 2006-01-27 | 2014-02-28 | Automatic object reference identification and linking in a browseable fact repository |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/356,851 US7774328B2 (en) | 2006-02-17 | 2006-02-17 | Browseable fact repository |
Publications (2)
Publication Number | Publication Date |
---|---|
US20070198503A1 US20070198503A1 (en) | 2007-08-23 |
US7774328B2 true US7774328B2 (en) | 2010-08-10 |
Family
ID=38429577
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/356,851 Expired - Fee Related US7774328B2 (en) | 2006-01-27 | 2006-02-17 | Browseable fact repository |
Country Status (1)
Country | Link |
---|---|
US (1) | US7774328B2 (en) |
Cited By (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8560468B1 (en) | 2011-02-10 | 2013-10-15 | Google Inc. | Learning expected values for facts |
US8819047B2 (en) | 2012-04-04 | 2014-08-26 | Microsoft Corporation | Fact verification engine |
US9224103B1 (en) | 2013-03-13 | 2015-12-29 | Google Inc. | Automatic annotation for training and evaluation of semantic analysis engines |
US9235653B2 (en) | 2013-06-26 | 2016-01-12 | Google Inc. | Discovering entity actions for an entity graph |
US9235626B2 (en) | 2013-03-13 | 2016-01-12 | Google Inc. | Automatic generation of snippets based on context and user interest |
US9286271B2 (en) | 2010-05-26 | 2016-03-15 | Google Inc. | Providing an electronic document collection |
US9342622B2 (en) | 2013-06-27 | 2016-05-17 | Google Inc. | Two-phase construction of data graphs from disparate inputs |
US9384285B1 (en) | 2012-12-18 | 2016-07-05 | Google Inc. | Methods for identifying related documents |
US9448992B2 (en) | 2013-06-04 | 2016-09-20 | Google Inc. | Natural language search results for intent queries |
US9454599B2 (en) | 2013-10-09 | 2016-09-27 | Google Inc. | Automatic definition of entity collections |
US9495341B1 (en) | 2012-12-18 | 2016-11-15 | Google Inc. | Fact correction and completion during document drafting |
US9514113B1 (en) | 2013-07-29 | 2016-12-06 | Google Inc. | Methods for automatic footnote generation |
US9529791B1 (en) | 2013-12-12 | 2016-12-27 | Google Inc. | Template and content aware document and template editing |
US9529916B1 (en) | 2012-10-30 | 2016-12-27 | Google Inc. | Managing documents based on access context |
US9542374B1 (en) | 2012-01-20 | 2017-01-10 | Google Inc. | Method and apparatus for applying revision specific electronic signatures to an electronically stored document |
US9659056B1 (en) | 2013-12-30 | 2017-05-23 | Google Inc. | Providing an explanation of a missing fact estimate |
US9703763B1 (en) | 2014-08-14 | 2017-07-11 | Google Inc. | Automatic document citations by utilizing copied content for candidate sources |
US9785696B1 (en) | 2013-10-04 | 2017-10-10 | Google Inc. | Automatic discovery of new entities using graph reconciliation |
US9798829B1 (en) | 2013-10-22 | 2017-10-24 | Google Inc. | Data graph interface |
US9842113B1 (en) | 2013-08-27 | 2017-12-12 | Google Inc. | Context-based file selection |
US9870554B1 (en) | 2012-10-23 | 2018-01-16 | Google Inc. | Managing documents based on a user's calendar |
US20180040049A1 (en) * | 2014-12-29 | 2018-02-08 | Ebay Inc. | Method for performing sequence labelling on queries |
US10002117B1 (en) | 2013-10-24 | 2018-06-19 | Google Llc | Translating annotation tags into suggested markup |
US10713261B2 (en) | 2013-03-13 | 2020-07-14 | Google Llc | Generating insightful connections between graph entities |
US10810193B1 (en) | 2013-03-13 | 2020-10-20 | Google Llc | Querying a data graph using natural language queries |
US11308037B2 (en) | 2012-10-30 | 2022-04-19 | Google Llc | Automatic collaboration |
US20220292103A1 (en) * | 2009-01-21 | 2022-09-15 | Staffan Truvé | Information service for facts extracted from differing sources on a wide area network |
Families Citing this family (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7769579B2 (en) * | 2005-05-31 | 2010-08-03 | Google Inc. | Learning facts from semi-structured text |
US8682913B1 (en) | 2005-03-31 | 2014-03-25 | Google Inc. | Corroborating facts extracted from multiple sources |
US9208229B2 (en) | 2005-03-31 | 2015-12-08 | Google Inc. | Anchor text summarization for corroboration |
US7587387B2 (en) | 2005-03-31 | 2009-09-08 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US7831545B1 (en) | 2005-05-31 | 2010-11-09 | Google Inc. | Identifying the unifying subject of a set of facts |
US8996470B1 (en) | 2005-05-31 | 2015-03-31 | Google Inc. | System for ensuring the internal consistency of a fact repository |
US8260785B2 (en) | 2006-02-17 | 2012-09-04 | Google Inc. | Automatic object reference identification and linking in a browseable fact repository |
US8700568B2 (en) | 2006-02-17 | 2014-04-15 | Google Inc. | Entity normalization via name normalization |
US8122026B1 (en) | 2006-10-20 | 2012-02-21 | Google Inc. | Finding and disambiguating references to entities on web pages |
US8347202B1 (en) | 2007-03-14 | 2013-01-01 | Google Inc. | Determining geographic locations for place names in a fact repository |
US8768932B1 (en) * | 2007-05-14 | 2014-07-01 | Google Inc. | Method and apparatus for ranking search results |
US7970766B1 (en) | 2007-07-23 | 2011-06-28 | Google Inc. | Entity type assignment |
US8959433B2 (en) * | 2007-08-19 | 2015-02-17 | Multimodal Technologies, Llc | Document editing using anchors |
US7984032B2 (en) * | 2007-08-31 | 2011-07-19 | Microsoft Corporation | Iterators for applying term occurrence-level constraints in natural language searching |
US8812435B1 (en) | 2007-11-16 | 2014-08-19 | Google Inc. | Learning objects and facts from documents |
US8756219B2 (en) * | 2008-11-04 | 2014-06-17 | Microsoft Corporation | Relevant navigation with deep links into query |
US20100280989A1 (en) * | 2009-04-29 | 2010-11-04 | Pankaj Mehra | Ontology creation by reference to a knowledge corpus |
US20110113086A1 (en) * | 2009-11-10 | 2011-05-12 | Kevin Long | System and method for monitoring activity on internet-based social networks |
US8527596B2 (en) * | 2009-11-10 | 2013-09-03 | Youdiligence, LLC | System and method for monitoring activity of a specified user on internet-based social networks |
CA2729966A1 (en) * | 2010-01-28 | 2011-07-28 | Her Majesty The Queen In Right Of Canada As Represented By The Minister Of The Department Of National Defence | Method and system for extracting and characterizing relationships between entities mentioned in documents |
US20130173521A1 (en) * | 2011-12-30 | 2013-07-04 | Target Brands, Inc. | Knowledge base for service ticketing system |
US20140006417A1 (en) * | 2012-07-01 | 2014-01-02 | Shubhendu Sekhar Mukherjee | Method and Apparatus to Generate Ratings for a Tangible or Non-Tangible Object by Comparing Against Other Tangible or Non-Tangible Objects |
RU2014125471A (en) | 2014-06-24 | 2015-12-27 | Общество С Ограниченной Ответственностью "Яндекс" | SEARCH QUERY PROCESSING METHOD AND SERVER |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US6101515A (en) * | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US20030120654A1 (en) * | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20040107125A1 (en) | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US6961723B2 (en) * | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US7043521B2 (en) * | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
US20060206508A1 (en) * | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20070055656A1 (en) * | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
-
2006
- 2006-02-17 US US11/356,851 patent/US7774328B2/en not_active Expired - Fee Related
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US6101515A (en) * | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US20040107125A1 (en) | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US20030120654A1 (en) * | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US6718324B2 (en) * | 2000-01-14 | 2004-04-06 | International Business Machines Corporation | Metadata search results ranking system |
US6961723B2 (en) * | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20060206508A1 (en) * | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US7043521B2 (en) * | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
US20070055656A1 (en) * | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
Non-Patent Citations (24)
Title |
---|
"Information Entropy-Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet. |
"Information Entropy—Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet<URL:http://en.wikipedia.org/wiki/Information—entropy>. |
"Information Theory-Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet. |
"Information Theory—Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet<URL:http://en.wikipedia.org/wiki/Information—theory>. |
Brill, E. et al., "An Analysis of the AskMSR Question-Answering System," Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP), Jul. 2002, pp. 257-264. |
Brin, S., "Extracting Patterns and Relations from the World Wide Web," 12 pages. |
Chang, C. et al., "IEPAD: Information Extraction Based on Pattern Discovery," WWW10 '01, ACM, May 1-5, 2001, pp. 681-688. |
Chu-Carroll, J. et al., "A Multi-Strategy with Multi-Source Approach to Question Answering," 8 pages. |
Dean, J. et al., "MapReduce: Simplified Data Processing on Large Clusters," To appear in OSDI 2004, pp. 1-13. |
Etzioni, O. et al., "Web-scale Information Extraction in KnowItAll (Preliminary Results)," WWW2004, ACM, May 17-20, 2004, 11 pages. |
Freitag, D. et al., "Boosted Wrapper Induction," American Association for Artificial Intelligence, 2000, 7 pages. |
Guha, R. et al., "Disambiguating People in Search," WWW2004, ACM, May 17-22, 2004, 9 pages. |
Guha, R., "Object Co-identification on the Semantic Web," WWW2004, ACM, May 17-22, 2004, 9 pages. |
Hogue, A.W., "Tree Pattern Inference and Matching for Wrapper Induction on the World Wide Web," Master of Engineering in Electrical Engineering and Computer Science, Massachusetts Institute of Technology, Jun. 2004, pp. 1-106. |
Jones, R. et al., "Bootstrapping for Text Learning Tasks," 12 pages. |
Kosseim, L, et al., "Answer Formulation for Question-Answering," 11 pages. |
Liu, B. et al., "Mining Data Records in Web Pages," Conference '00, ACM, 2000, pp. 1-10. |
Mccallum, A. et al., "Object Consolodation by Graph Partitioning with a Conditionally-Trained Distance Metric," SIGKDD '03, ACM, Aug. 24-27, 2003, 6 pages. |
Mihalcea, R. et al., "PageRank on Semantic Networks, with Application to Word Sense Disambiguation," 7 pages. |
Mihalcea, R. et al., "TextRank: Bringing Order into Texts," 8 pages. |
PCT International Search Report and Written Opinion, PCT/US06/07639, Sep. 13, 2006, 6 pages. |
Prager, J. et al., "IBM's PIQUANT in TREC2003," 10 pages. |
Prager, J. et al., "Question Answering using Constraint Satisfaction: QA-by-Dossier-with-Constraints," 8 pages. |
Ramakrishnan, G. et al., "Is Question Answering an Acquired Skill?", WWW2004, ACM, May 17, 2004, pp. 111-120. |
Cited By (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20220292103A1 (en) * | 2009-01-21 | 2022-09-15 | Staffan Truvé | Information service for facts extracted from differing sources on a wide area network |
US9286271B2 (en) | 2010-05-26 | 2016-03-15 | Google Inc. | Providing an electronic document collection |
US9292479B2 (en) | 2010-05-26 | 2016-03-22 | Google Inc. | Providing an electronic document collection |
US8560468B1 (en) | 2011-02-10 | 2013-10-15 | Google Inc. | Learning expected values for facts |
US9542374B1 (en) | 2012-01-20 | 2017-01-10 | Google Inc. | Method and apparatus for applying revision specific electronic signatures to an electronically stored document |
US8819047B2 (en) | 2012-04-04 | 2014-08-26 | Microsoft Corporation | Fact verification engine |
US9870554B1 (en) | 2012-10-23 | 2018-01-16 | Google Inc. | Managing documents based on a user's calendar |
US11308037B2 (en) | 2012-10-30 | 2022-04-19 | Google Llc | Automatic collaboration |
US11748311B1 (en) | 2012-10-30 | 2023-09-05 | Google Llc | Automatic collaboration |
US9529916B1 (en) | 2012-10-30 | 2016-12-27 | Google Inc. | Managing documents based on access context |
US9384285B1 (en) | 2012-12-18 | 2016-07-05 | Google Inc. | Methods for identifying related documents |
US9495341B1 (en) | 2012-12-18 | 2016-11-15 | Google Inc. | Fact correction and completion during document drafting |
US11403288B2 (en) | 2013-03-13 | 2022-08-02 | Google Llc | Querying a data graph using natural language queries |
US10810193B1 (en) | 2013-03-13 | 2020-10-20 | Google Llc | Querying a data graph using natural language queries |
US9720913B1 (en) | 2013-03-13 | 2017-08-01 | Google Inc. | Automatic generation of snippets based on context and user interest |
US9235626B2 (en) | 2013-03-13 | 2016-01-12 | Google Inc. | Automatic generation of snippets based on context and user interest |
US10713261B2 (en) | 2013-03-13 | 2020-07-14 | Google Llc | Generating insightful connections between graph entities |
US9224103B1 (en) | 2013-03-13 | 2015-12-29 | Google Inc. | Automatic annotation for training and evaluation of semantic analysis engines |
US9448992B2 (en) | 2013-06-04 | 2016-09-20 | Google Inc. | Natural language search results for intent queries |
US9235653B2 (en) | 2013-06-26 | 2016-01-12 | Google Inc. | Discovering entity actions for an entity graph |
US9342622B2 (en) | 2013-06-27 | 2016-05-17 | Google Inc. | Two-phase construction of data graphs from disparate inputs |
US10614127B2 (en) | 2013-06-27 | 2020-04-07 | Google Llc | Two-phase construction of data graphs from disparate inputs |
US9514113B1 (en) | 2013-07-29 | 2016-12-06 | Google Inc. | Methods for automatic footnote generation |
US9842113B1 (en) | 2013-08-27 | 2017-12-12 | Google Inc. | Context-based file selection |
US11681654B2 (en) | 2013-08-27 | 2023-06-20 | Google Llc | Context-based file selection |
US9785696B1 (en) | 2013-10-04 | 2017-10-10 | Google Inc. | Automatic discovery of new entities using graph reconciliation |
US10331706B1 (en) | 2013-10-04 | 2019-06-25 | Google Llc | Automatic discovery of new entities using graph reconciliation |
US9454599B2 (en) | 2013-10-09 | 2016-09-27 | Google Inc. | Automatic definition of entity collections |
US9798829B1 (en) | 2013-10-22 | 2017-10-24 | Google Inc. | Data graph interface |
US10002117B1 (en) | 2013-10-24 | 2018-06-19 | Google Llc | Translating annotation tags into suggested markup |
US9529791B1 (en) | 2013-12-12 | 2016-12-27 | Google Inc. | Template and content aware document and template editing |
US10318540B1 (en) | 2013-12-30 | 2019-06-11 | Google Llc | Providing an explanation of a missing fact estimate |
US9659056B1 (en) | 2013-12-30 | 2017-05-23 | Google Inc. | Providing an explanation of a missing fact estimate |
US9703763B1 (en) | 2014-08-14 | 2017-07-11 | Google Inc. | Automatic document citations by utilizing copied content for candidate sources |
US20180040049A1 (en) * | 2014-12-29 | 2018-02-08 | Ebay Inc. | Method for performing sequence labelling on queries |
US11556969B2 (en) | 2014-12-29 | 2023-01-17 | Ebay Inc. | Method for performing sequence labelling on queries |
US10559018B2 (en) * | 2014-12-29 | 2020-02-11 | Ebay Inc. | Method for performing sequence labelling on queries |
Also Published As
Publication number | Publication date |
---|---|
US20070198503A1 (en) | 2007-08-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7774328B2 (en) | Browseable fact repository | |
US8260785B2 (en) | Automatic object reference identification and linking in a browseable fact repository | |
US8954426B2 (en) | Query language | |
US8055674B2 (en) | Annotation framework | |
US10223406B2 (en) | Entity normalization via name normalization | |
US7454398B2 (en) | Support for object search | |
US10311068B2 (en) | Methods of and systems for searching by incorporating user-entered information | |
US9558186B2 (en) | Unsupervised extraction of facts | |
US7778952B2 (en) | Displaying facts on a linear graph | |
US7792837B1 (en) | Entity name recognition | |
US9208229B2 (en) | Anchor text summarization for corroboration | |
US7590628B2 (en) | Determining document subject by using title and anchor text of related documents | |
US20070198597A1 (en) | Attribute entropy as a signal in object normalization | |
US20070203867A1 (en) | Data object visualization | |
US20140372478A1 (en) | Learning Objects And Facts From Documents | |
US20070185895A1 (en) | Data object visualization using maps | |
US9785686B2 (en) | Corroborating facts in electronic documents | |
US20140359409A1 (en) | Learning Synonymous Object Names from Anchor Texts | |
Azad et al. | LOD search engine: A semantic search over linked data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HOGUE, ANDREW W.;BETZ, JONATHAN T.;REEL/FRAME:017597/0233;SIGNING DATES FROM 20060216 TO 20060217Owner name: GOOGLE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HOGUE, ANDREW W.;BETZ, JONATHAN T.;SIGNING DATES FROM 20060216 TO 20060217;REEL/FRAME:017597/0233 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220810 |
EP3008591A1 - Embeddable media content search widget - Google Patents
Embeddable media content search widgetInfo
- Publication number
- EP3008591A1 EP3008591A1 EP14811543.9A EP14811543A EP3008591A1 EP 3008591 A1 EP3008591 A1 EP 3008591A1 EP 14811543 A EP14811543 A EP 14811543A EP 3008591 A1 EP3008591 A1 EP 3008591A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- media content
- user interface
- content item
- link
- software component
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0623—Item investigation
- G06Q30/0625—Directed, with specific intent or strategy
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/43—Querying
- G06F16/438—Presentation of query results
- G06F16/4387—Presentation of query results by the use of playlists
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/48—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
- G06F16/972—Access to data in other repository systems, e.g. legacy data or dynamic Web page generation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0251—Targeted advertisements
- G06Q30/0253—During e-commerce, i.e. online transactions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0277—Online advertisement
Definitions
- a first computer system that is associated with a first organization provides a software component to a second computer system that is associated with a second organization, where the software component, when embedded and executed within a user interface provided by the second organization, includes in the user interface a first link to a first media content item and a second link to a second media content item.
- the first media content item and the second media content item reside in a data store associated with the first organization, and the first media content item and the second media content item are selected from a plurality of media content items based on content in the user interface.
- Figure 1 illustrates an exemplary system architecture, in accordance with one implementation of the present disclosure.
- Figure 2 depicts a flow diagram of an example of a method for handling a request for a software component.
- Figure 3 depicts a flow diagram of an example of a method by which a software component is embedded in a user interface that is downloaded and executed by a client machine.
- Figure 4 depicts a flow diagram of an example of some operations of an embedded software component when executed by a client machine.
- Figure 5 depicts an illustrative user interface with embedded playlist, in accordance with one implementation of the present disclosure.
- Figure 6 depicts a flow diagram of an example of a method for processing a request for links to media content items that are relevant to one or more keywords.
- Figure 7 depicts a block diagram of an illustrative computer system operating in accordance with aspects and implementations of the present disclosure.
- a first computer system that is associated with a first organization provides a software component (known as a "widget") to a second computer system that is associated with a second organization, where the software component, when embedded and executed within a user interface provided by the second organization, includes in the user interface links to relevant media content items (e.g., video clips, audio clips, etc.) in a data store (e.g., a file server, a relational database, etc.) managed by the first organization.
- relevant media content items e.g., video clips, audio clips, etc.
- a data store e.g., a file server, a relational database, etc.
- the software component may be embedded within a user interface of an application (or "app") that is created by the second organization and is downloaded and run by a client (e.g., a smartphone, a laptop computer, etc.), while in some other implementations, the software component may be embedded within a web page that is created by the second organization and is downloaded by a client browser.
- a client e.g., a smartphone, a laptop computer, etc.
- aspects and implementations of the present disclosure are thus capable of enabling a user who is browsing a retailer's mobile website, for example, on his or her smartphone, or who is using a retailer's mobile app running on the smartphone, to research a potential purchase without having to leave the current web page or suspend the current app.
- a website developer who works for the retailer i.e., the "second organization” referenced above
- can obtain a software component from another organization i.e., the "first organization” referenced above
- embed the software component in a user interface that is downloaded and run by a client e.g., in a web page visited by a client browser, in an app downloaded and run by a client, etc.
- the software component obtains one or more keywords based on content of the user interface (e.g., text, button labels, images, metadata tags, etc.) and transmits a query to the data store of the first organization, where the query specifies the keyword(s) and requests links to media content items in the data store that are relevant to the keyword(s).
- relevant media content items are selected from among the items stored in the data store based on the specified keyword(s) and links to the selected media content items are transmitted to the software component.
- the software component creates a playlist in the user interface, and then populates the playlist with the received links.
- a playlist of relevant videos (e.g., a product demonstration video, etc.) is available for the user to view in the current web page or application, without having to leave the web page or application and visit a new web page or launch another application, thereby improving the user experience.
- relevant videos e.g., a product demonstration video, etc.
- FIG. 1 illustrates an exemplary system architecture 100, in accordance with one implementation of the present disclosure.
- the system architecture 100 includes a server machine 115, a media content item store 110, a software component library 130, and website developer machines 102A-102N connected to a network 104.
- Network 104 may be a public network (e.g., the Internet), a private network (e.g., a local area network (LAN) or wide area network (WAN)), or a combination thereof.
- LAN local area network
- WAN wide area network
- Server machine 115 may be a rackmount server, a router computer, a personal computer, a portable digital assistant, a mobile phone, a laptop computer, a tablet computer, a camera, a video camera, a netbook, a desktop computer, a media center, or any combination of the above.
- Server machine 115 includes a web server 140 and a media content item manager 145.
- the web server 140 and media content item manager 145 may run on different machines (e.g., a plurality of servers that are part of a content hosting and sharing platform, etc.).
- Media content item store 1 10 is a persistent storage that is capable of storing media content items (e.g., video clips, audio clips, images, etc.), as well as data structures to tag, organize, and index the media content items, and of processing queries pertaining to the stored media content items.
- Media content item store 1 10 may be hosted by one or more storage devices, such as main memory, magnetic or optical storage based disks, tapes or hard drives, NAS, SAN, and so forth.
- media content item store 110 may be a network-attached file server, while in other embodiments media content item store 110 may be some other type of persistent storage such as an object-oriented database, a relational database, and so forth, that may be hosted by the server machine 115 or one or more different machines coupled to the server machine 1 15 via the network 104.
- the media content items stored in the media content item store 110 may include end user content that is uploaded via user devices, as well as media content items uploaded by publishers, libraries, news services, and so forth.
- media content item store 1 10 is maintained by the same organization (e.g., corporation, government agency, etc.) that maintains server machine 1 15.
- Software component library 130 is a persistent storage that is capable of storing software components (e.g., widgets that can be embedded in web pages, widgets that can embedded in user interfaces of applications, software objects [e.g., data structures, business objects, etc.] that can be used by applications written in an object-oriented programming language, etc.), as well as data structures to tag, organize, and index the software components.
- software components e.g., widgets that can be embedded in web pages, widgets that can embedded in user interfaces of applications, software objects [e.g., data structures, business objects, etc.] that can be used by applications written in an object-oriented programming language, etc.
- the software components may be provided by private software organizations, open-source software organizations, independent software developers, and so forth.
- Software component library 130 may be hosted by one or more storage devices, such as main memory, magnetic or optical storage based disks, tapes or hard drives, NAS, SAN, and so forth.
- software component library 130 may be a network-attached file server, while in other embodiments software component library 130 may be some other type of persistent storage such as an object-oriented database, a relational database, and so forth, that may be hosted by the server machine 115 or one or more different machines coupled to the server machine 115 via the network 104.
- software component library 130 is maintained by the same organization (e.g., corporation, government agency, etc.) that maintains server machine 115 and media content item store 110.
- media content item manager 145 is capable of receiving requests (e.g., from software components, etc.) for links to items stored in media content item store 1 10, and of providing such links in response to the requests.
- media content item manager 145 may select particular items in media content item store 110 based on one or more keywords specified by a request, and return links to these relevant content items to the sender of the request.
- media content item manager 145 may also be capable of providing software components (e.g., from software component library 130, etc.) to developers (e.g., via web server 140, etc.).
- server machine 115, media content item store 110, and software component library 130 are associated with one particular organization (e.g., an organization that provides a content hosting and/or sharing platform).
- the website developer machines 102A-102N are personal computers (PC), laptops, tablet computers, smartphones, or any other computing or communication devices.
- each website developer machine 102 is associated with a human website developer who belongs to an organization that is different than the organization associated with server machine 115, media content item store 110, and software component library 130.
- the website developer machines 102A-102N may run an operating system (OS) that manages hardware and software of the website developer machines 102A-102N.
- OS operating system
- a browser (not shown) may run on the website developer machines (e.g., on the OS of the website developer machines).
- the browser may be a web browser that can download and render web pages served by a web server (e.g., web server 140 hosted by server machine 115, etc.) and download items (e.g., images, software components [or "widgets"], etc.) embedded within or linked to by the web pages.
- a web server e.g., web server 140 hosted by server machine 115, etc.
- download items e.g., images, software components [or "widgets"], etc.
- Figure 2 depicts a flow diagram of an example of a method 200 for handling a request for a software component.
- the method is performed by processing logic that may comprise hardware (circuitry, dedicated logic, etc.), software (such as is run on a general purpose computer system or a dedicated machine), or a combination of both.
- the method is performed by the server machine 115 of Figure 1, while in some other
- one or more blocks of Figure 2 may be performed by another machine.
- a request is received for a software component.
- the request is received by web server 140 from a website developer machine and may be generated in response to a website developer clicking on a particular link, button, etc. of a web page downloaded from server machine 1 15.
- the website developer may arrive at the web page via a search engine query, or via a link in an email received by the website developer, etc.
- the requested software component is retrieved from software component library 130, and at block 203, the software component is transmitted to the website developer machine.
- web content item manager 145 retrieves the software component and transmits the software component to the website developer machine via the File Transfer Protocol (FTP).
- FTP File Transfer Protocol
- the software component may be obtained by a website developer in some other manner, rather than via downloading from a website (e.g., from a CD-ROM distribution provided to the website developer, etc.).
- FIG. 3 depicts a flow diagram of an example of a method 300 by which a software component is embedded in a user interface that is downloaded and executed by a client machine.
- the method is performed by processing logic that may comprise hardware (circuitry, dedicated logic, etc.), software (such as is run on a general purpose computer system or a dedicated machine), or a combination of both.
- a website developer machine receives a software component.
- the website developer machine belongs to a particular organization and the software component is received from a different organization (e.g., from software component library 130, etc.).
- the software component is embedded in a user interface.
- the user interface may be a web page (e.g., a web page of an e-commerce company, a web page of a shopping search engine service, etc.), and the software component may be a Javascript widget, an ActiveX control, etc. that is embedded within the web page, while in some other implementations, the user interface may be part of an application that executes independent of a browser, and the software component may be a Javascript widget, a Java object, etc. that is embedded within the user interface (e.g., as source code, Java bytecode, object code, etc.).
- the user interface with embedded software component is downloaded by a client machine (e.g., via a smartphone whose user is browsing a web page [for example, a web page of an e-commerce company or of a shopping search engine service] via the World Wide Web, via a smartphone whose user has elected to download an application comprising the user interface [for example, a search engine application, an app provided by baseball team, an app provided by a retailer, etc.] from an "app store" or other site, etc.)
- the software component is executed by the client machine.
- the software component When the software component is embedded within a web page, the software component may be executed when the web page is rendered by a browser running on the client machine, while when the software component is embedded within a user interface (UI) of an application, the software component may be executed when the UI portion of the application code is run by the client machine.
- UI user interface
- Figure 4 depicts a flow diagram of an example of some operations 400 of an embedded software component when executed by a client machine.
- the operations are performed by processing logic that may comprise hardware (circuitry, dedicated logic, etc.), software (such as is run on a general purpose computer system or a dedicated machine), or a combination of both.
- the software component includes a playlist in the user interface (e.g., the illustrative user interface 500 with embedded playlist shown in Figure 5, etc.).
- the software component may create a playlist widget and add the widget within the markup language code of the user interface so that it is displayed in a particular area of the web page.
- the software component may instantiate a new playlist object and add the playlist object to the elements of the user interface.
- the playlist widget or object comprises a first area that presents a description of media content items (e.g., titles of the media content items and/or a thumbnail of a frame of a video clip item) and enables a user to select one of the media content items, and a second area in which a selected media content item is played.
- a description of media content items e.g., titles of the media content items and/or a thumbnail of a frame of a video clip item
- a second area in which a selected media content item is played.
- some other implementations may create a different type of widget or object, rather than a playlist (e.g., a widget or object in which media content items are described by an unordered set rather than an ordered list, etc.)
- the software component analyzes content in the user interface (e.g., text, button labels, metadata tags, etc.) and obtains one or more keywords based on the content.
- content in the user interface e.g., text, button labels, metadata tags, etc.
- keywords e.g., multi-word phrases (e.g., "Barack Obama,” “San Francisco Giants,” etc.) as well as single words.)
- the one or more keywords might include “Broan”, “Trash Compactor", “Stainless Steel”, and so forth.
- the software component may analyze content in the user interface at runtime via a self-reflection mechanism provided by the object- oriented programming language.
- the software component transmits a request that specifies the keyword(s) obtained at block 402 and requests links to media content items relevant to the keyword(s).
- the request may also specify the current location of the client machine when allowed by the user (e.g., when the user responds affirmatively to a prompt from the operating system requesting permission for a website or application to use the current location, etc.).
- the request is transmitted to and handled by server machine 115. A method for handling the request is described in detail below with respect to Figure 6.
- the software component receives links to media content items in response to the query transmitted at block 403.
- the links received at block 404 may be ranked, while in some other implementations, the links may be returned as an unordered set.
- the software component may rank or re-rank the links based on one or more criteria such as current location, relevancy scores, the authors of the media content items, and so forth.
- the links are received from server machine 115 and point to media content items in media content item store 110.
- the software component populates the playlist included in the UI at block 401 with the links to media content items received at block 404.
- the software component may include a playlist in the user interface and populate the playlist at compile time (e.g., via modifying code or markup language before downloading and execution of the user interface, etc.), rather than dynamically at runtime, as in the method of Figure 4.
- Figure 6 depicts a flow diagram of an example of a method 600 for processing a request for links to media content items that are relevant to one or more keywords.
- the method is performed by processing logic that may comprise hardware (circuitry, dedicated logic, etc.), software (such as is run on a general purpose computer system or a dedicated machine), or a combination of both.
- the method is performed by the server machine 115 of Figure 1, while in some other implementations, one or more blocks of Figure 6 may be performed by another machine.
- a request that specifies one or more keywords and that requests links to media content items related to the keyword(s) is received.
- the request is a web service invocation transmitted by the embedded software component via the hypertext transfer protocol (HTTP) to media content item manager 145.
- HTTP hypertext transfer protocol
- a new set of one or more keywords is generated based on the keyword(s) received at block 601.
- media content item manager 145 may consult a dictionary of standard keywords (not depicted in the Figures) and "translate" the keyword(s) received at block 601, as necessary, in accordance with the dictionary.
- media content item manager 145 may also delete redundant keywords and include one or more additional related keywords to the new keyword set.
- a query specifying the new set of keywords and requesting links to media content items relevant to the keywords is submitted.
- the query is transmitted by media content item manager 145 to media content item store 110.
- links to relevant media content items are received in response to the query of block 603.
- media content item store 110 selects the relevant content items based on the new set of keyword(s), and returns the links to media content item manager 145.
- the links may be ranked when returned by media content item store 1 10, while in some other implementations, the links may be returned as an unordered set.
- the ranking may be based on one or more criteria such as: a relevancy score for the keyword with respect to the media content item, the current location of the client machine submitting the request, the author of the media content item, and so forth.
- the links to the selected content items are transmitted to the sender of the request of block 601.
- media content item manager 145 returns the links to embedded software component via one or more HTTP messages.
- media content item manager 145 may process the links before returning them to the embedded software component (e.g., limiting the number of links to a maximum, ranking or re -ranking the links according to various other criteria, etc.).
- Figure 7 illustrates an exemplary computer system within which a set of instructions, for causing the machine to perform any one or more of the methodologies discussed herein, may be executed.
- the machine may be connected (e.g., networked) to other machines in a LAN, an intranet, an extranet, or the Internet.
- the machine may operate in the capacity of a server machine in client-server network environment.
- the machine may be a personal computer (PC), a set-top box (STB), a server, a network router, switch or bridge, or any machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine.
- PC personal computer
- STB set-top box
- server a server
- network router switch or bridge
- the exemplary computer system 700 includes a processing system (processor) 702, a main memory 704 (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM)), a static memory 706 (e.g., flash memory, static random access memory (SRAM)), and a data storage device 716, which communicate with each other via a bus 708.
- processor processing system
- main memory 704 e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM)
- DRAM dynamic random access memory
- SDRAM synchronous DRAM
- static memory 706 e.g., flash memory, static random access memory (SRAM)
- SRAM static random access memory
- Processor 702 represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processor 702 may be a complex instruction set computing (CISC) microprocessor, reduced instruction set computing (RISC) microprocessor, very long instruction word (VLIW) microprocessor, or a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processor 702 may also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like. The processor 702 is configured to execute instructions 726 for performing the operations and steps discussed herein.
- ASIC application specific integrated circuit
- FPGA field programmable gate array
- DSP digital signal processor
- the computer system 700 may further include a network interface device 722.
- the computer system 700 also may include a video display unit 710 (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an alphanumeric input device 712 (e.g., a keyboard), a cursor control device 714 (e.g., a mouse), and a signal generation device 720 (e.g., a speaker).
- a video display unit 710 e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)
- an alphanumeric input device 712 e.g., a keyboard
- a cursor control device 714 e.g., a mouse
- a signal generation device 720 e.g., a speaker
- the data storage device 716 may include a computer-readable medium 724 on which is stored one or more sets of instructions 726 (e.g., instructions executed by web page manager 225, etc.) embodying any one or more of the methodologies or functions described herein.
- instructions 726 e.g., instructions executed by web page manager 225, etc.
- Instructions 726 may also reside, completely or at least partially, within the main memory 704 and/or within the processor 702 during execution thereof by the computer system 700, the main memory 704 and the processor 702 also constituting computer-readable media. Instructions 726 may further be transmitted or received over a network via the network interface device 722.
- computer-readable storage medium 724 is shown in an exemplary embodiment to be a single medium, the term “computer-readable storage medium” should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of instructions.
- the term “computer-readable storage medium” shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure.
- the term “computer-readable storage medium” shall accordingly be taken to include, but not be limited to, solid-state memories, optical media, and magnetic media.
- aspects and implementations of the disclosure also relate to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer.
- a computer program may be stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/916,290 US9805406B2 (en) | 2013-06-12 | 2013-06-12 | Embeddable media content search widget |
PCT/US2014/039242 WO2014200684A1 (en) | 2013-06-12 | 2014-05-22 | Embeddable media content search widget |
Publications (2)
Publication Number | Publication Date |
---|---|
EP3008591A1 true EP3008591A1 (en) | 2016-04-20 |
EP3008591A4 EP3008591A4 (en) | 2017-01-18 |
Family
ID=52020055
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP14811543.9A Ceased EP3008591A4 (en) | 2013-06-12 | 2014-05-22 | Embeddable media content search widget |
Country Status (6)
Country | Link |
---|---|
US (1) | US9805406B2 (en) |
EP (1) | EP3008591A4 (en) |
JP (2) | JP6437537B2 (en) |
KR (2) | KR102284761B1 (en) |
CN (1) | CN105283843B (en) |
WO (1) | WO2014200684A1 (en) |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150356529A1 (en) * | 2014-06-10 | 2015-12-10 | Disney Enterprises, Inc. | Digital Purchase Transfers Between Separate Retailers |
US10482144B2 (en) * | 2016-08-01 | 2019-11-19 | Facebook, Inc. | Systems and methods to manage media content items |
CN106657601B (en) * | 2016-10-31 | 2019-10-01 | 努比亚技术有限公司 | The guide device and method of intelligent terminal operation |
US10499090B2 (en) * | 2016-12-30 | 2019-12-03 | Facebook, Inc. | Systems and methods to transition between media content items |
US9936230B1 (en) * | 2017-05-10 | 2018-04-03 | Google Llc | Methods, systems, and media for transforming fingerprints to detect unauthorized media content items |
US20180341716A1 (en) * | 2017-05-26 | 2018-11-29 | Microsoft Technology Licensing, Llc | Suggested content generation |
US20210248668A1 (en) | 2018-09-11 | 2021-08-12 | Nippon Food Manufacturer Co. | Virtual store provision system |
Family Cites Families (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010042107A1 (en) | 2000-01-06 | 2001-11-15 | Palm Stephen R. | Networked audio player transport protocol and architecture |
JP4417357B2 (en) * | 2006-08-07 | 2010-02-17 | バリューコマース株式会社 | Method and apparatus for acquiring an advertiser's RSS feed and distributing it as a banner advertisement in an affiliate system |
US7565332B2 (en) * | 2006-10-23 | 2009-07-21 | Chipin Inc. | Method and system for providing a widget usable in affiliate marketing |
US8260687B2 (en) * | 2007-04-16 | 2012-09-04 | Ebay Inc. | Distributed commerce application-widget |
US9224149B2 (en) * | 2007-10-15 | 2015-12-29 | Google Inc. | External referencing by portable program modules |
WO2009086014A1 (en) * | 2007-12-28 | 2009-07-09 | Amazon Technologies, Inc. | Widget-assisted detection and exposure of behavioral associations |
US8145521B2 (en) * | 2008-07-15 | 2012-03-27 | Google Inc. | Geographic and keyword context in embedded applications |
US8352913B2 (en) | 2009-08-07 | 2013-01-08 | Adobe Systems Incorporated | Generating and resolving component names in an integrated development environment |
US9721035B2 (en) | 2010-06-30 | 2017-08-01 | Leaf Group Ltd. | Systems and methods for recommended content platform |
CN102693238B (en) * | 2011-03-23 | 2015-09-16 | 青岛海信电器股份有限公司 | Widget application process, system and multimedia terminal |
US20140298184A1 (en) * | 2013-03-26 | 2014-10-02 | Larry Bailin | Computer-implemented system and method for integrating and managing product specific data |
-
2013
- 2013-06-12 US US13/916,290 patent/US9805406B2/en active Active
-
2014
- 2014-05-22 KR KR1020167000561A patent/KR102284761B1/en active IP Right Grant
- 2014-05-22 CN CN201480033600.6A patent/CN105283843B/en active Active
- 2014-05-22 EP EP14811543.9A patent/EP3008591A4/en not_active Ceased
- 2014-05-22 JP JP2016519518A patent/JP6437537B2/en active Active
- 2014-05-22 KR KR1020217023931A patent/KR102344780B1/en active IP Right Grant
- 2014-05-22 WO PCT/US2014/039242 patent/WO2014200684A1/en active Application Filing
-
2018
- 2018-11-14 JP JP2018213655A patent/JP6695952B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
EP3008591A4 (en) | 2017-01-18 |
JP6437537B2 (en) | 2018-12-12 |
JP2019040629A (en) | 2019-03-14 |
KR102284761B1 (en) | 2021-08-03 |
KR20210097221A (en) | 2021-08-06 |
CN105283843A (en) | 2016-01-27 |
KR20160018770A (en) | 2016-02-17 |
JP6695952B2 (en) | 2020-05-20 |
CN105283843B (en) | 2020-02-18 |
US20140372255A1 (en) | 2014-12-18 |
WO2014200684A1 (en) | 2014-12-18 |
KR102344780B1 (en) | 2021-12-28 |
US9805406B2 (en) | 2017-10-31 |
JP2016529583A (en) | 2016-09-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9652550B2 (en) | Indexing application pages of native applications | |
US10394949B2 (en) | Deconstructing documents into component blocks for reuse in productivity applications | |
JP6695952B2 (en) | Embeddable Media Content Search Widget | |
US9547721B2 (en) | Native application search results | |
US20160224568A1 (en) | System and methods thereof for enhancing a user's search experience | |
TWI410812B (en) | Customized, personalized, integrated client-side search indexing of the web | |
US9519703B2 (en) | Refining search results for a compound search query | |
US20150254216A1 (en) | Contextual hyperlink insertion | |
US10496686B2 (en) | Method and system for searching and identifying content items in response to a search query using a matched keyword whitelist | |
US9760557B2 (en) | Tagging autofill field entries | |
RU2693193C1 (en) | Automated extraction of information | |
US10567845B2 (en) | Embeddable media content search widget | |
US8996512B2 (en) | Search engine optimization using a find operation | |
US11055365B2 (en) | Mechanism for web crawling e-commerce resource pages | |
WO2013106424A1 (en) | Method and apparatus for displaying suggestions to a user of a software application | |
US9098228B2 (en) | Determining content rendering capabilities for web browser optimization | |
Sharma et al. | Search Engine | |
WO2011156732A2 (en) | A system and methods thereof for adaptation of a free text query to a customized query set |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20151125 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20161215 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06Q 30/02 20120101AFI20161209BHEPIpc: G06F 17/30 20060101ALI20161209BHEPIpc: G06F 9/445 20060101ALI20161209BHEP |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20180328 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
APBK | Appeal reference recorded |
Free format text: ORIGINAL CODE: EPIDOSNREFNE |
|
APBN | Date of receipt of notice of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA2E |
|
APBR | Date of receipt of statement of grounds of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA3E |
|
APAF | Appeal reference modified |
Free format text: ORIGINAL CODE: EPIDOSCREFNE |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
APBT | Appeal procedure closed |
Free format text: ORIGINAL CODE: EPIDOSNNOA9E |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20230911 |
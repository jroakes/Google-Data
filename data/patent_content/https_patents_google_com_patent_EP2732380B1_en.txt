EP2732380B1 - Mobile web browser for pre-loading web pages - Google Patents
Mobile web browser for pre-loading web pages Download PDFInfo
- Publication number
- EP2732380B1 EP2732380B1 EP12810829.7A EP12810829A EP2732380B1 EP 2732380 B1 EP2732380 B1 EP 2732380B1 EP 12810829 A EP12810829 A EP 12810829A EP 2732380 B1 EP2732380 B1 EP 2732380B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- web page
- query
- predicted
- mobile
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/56—Provisioning of proxy services
- H04L67/568—Storing data temporarily at an intermediate stage, e.g. caching
- H04L67/5681—Pre-fetching or pre-delivering data based on network characteristics
Definitions
- the present disclosure generally relates to the transmission of data over a network, and more particularly to the use of a computing device to communicate over a network.
- Non-mobile computing devices such as desktop computer and laptop computers usually have faster computing speed and access to faster network connections than other types of computing devices.
- a user using a web browser on a non-mobile computing device (a "non-mobile web browser") is accustomed to faster web page loading and rendering times.
- mobile computing devices such as smartphones
- network access connections e.g., to mobile data telecommunication networks
- a user selects a web page to view on a web browser for a mobile device (a "mobile web browser")
- the loading and display speed of the web page is slowed by the limited bandwidth and computing capacity of the mobile device.
- a user that is accustomed to faster loading and display times on non-mobile web browsers can find the slower load and display time of the web page on the mobile web browser to be frustrating.
- US 2011/040777 A1 discloses a server computer that receives, over a network from a computing device, a request for a search suggestion related to a search query that is input into a search term entry area displayed by a web browser executing on the computing device.
- the server computer transmits over the network to the computing device, instructions for the computing device to display a search suggestion related to the search query, the search suggestion corresponding to a search results web page.
- the instructions further cause the computing device to store, in a memory of the computing device, a web page component associated with the search results web page without causing the computing device to visibly display the web page component during display of the search suggestion.
- a computer-implemented method for pre-loading a web page in a mobile web browser includes receiving a partial or complete query in a mobile web browser from a mobile device prior to the partial or complete query being submitted by a user and receiving an identification of a predicted web page responsive to the partial or complete query.
- the method also includes loading but not rendering the predicted web page prior to the partial or complete query being query being submitted by the user, and displaying the loaded and rendered predicted web page in the mobile web browser after the completed query is submitted by the user when the predicted web page is determined to be responsive to the submitted query.
- the predicted web page is rendered after loading and prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser.
- the method can also include receiving an identification of additional predicted web pages responsive to the partial or complete query, and loading at least a subset of the additional predicted web pages prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser.
- the predicted web page can be loaded over a network connection, and the predicted web page can be loaded prior to the completing and submitting the query if the network connection includes a wireless local area network or a predetermined type of mobile data telecommunication network pricing plan.
- the predicted web page can be loaded prior to the completing and submitting the query if the predicted web page is not designated as a web page excluded from pre-loading.
- the predicted web page can be loaded prior to the completing and submitting the query if a memory requirement for loading the predicted web page is below a pre-determined limit. If the predicted web page includes active content, activation of the active content can be delayed until after the predicted web page is displayed.
- a system for pre-loading a web page in a mobile web browser includes a memory for storing a predicted web page responsive to a partial or complete query received in a mobile web browser from a mobile device, and a processor.
- the processor is configured to receive an identification of the predicted web page as responsive to the partial or complete query, and load but not render the predicted web page from a server based on the prediction prior to the query being completed and submitted.
- the processor is also configured to display the loaded and rendered predicted web page in the mobile web browser after the completed query is submitted by a user when the predicted web page is determined to be responsive to the submitted query.
- the processor is further configured to render the predicted web page after loading and prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser.
- the processor can be further configured to receive an identification of additional predicted web pages responsive to the partial or complete query, and load at least a subset of the additional predicted web pages prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser.
- the processor can be further configured to load the predicted web page from the server over a network connection, and the processor being configured to load the predicted web page prior to the completing and submitting the query includes the processor being configured to load the predicted web page prior to the completing and submitting the query if the network connection includes a wireless local area network or predetermined type of mobile data telecommunication network pricing plan.
- the predicted web page can be loaded prior to the completing and submitting the query if the predicted web page is not designated as a web page excluded from pre-loading.
- the processor being configured to load the predicted web page prior to the completing and submitting the query includes the processor being configured to load the predicted web page prior to the completing and submitting the query if a memory requirement for loading the predicted web page is below a pre-determined limit.
- the processor being configured to display the loaded and rendered includes the processor being configured to delayed activation of active content for the predicted web page until after the predicted web page is displayed if the predicted web page includes active content.
- a mobile web browser for pre-loading a web page in a mobile web browser.
- the mobile web browser includes an input field configured to receive, from a mobile device, a submission of a partial or complete query for a web page for loading and rendering the predicted web page, and a web page display area configured to display a web page.
- the mobile web browser is configured to receive an identification of a predicted web page responsive to the partial or complete query prior to the partial or complete query being submitted by a user, load but not render the predict web page based on the prediction prior to the query being completed and submitted, and display the loaded and rendered predicted web page in the predicted web page display area after the completed query is submitted by the user to the input field when the predicted web page is determined to be responsive to the submitted query.
- the predicted web page can be rendered by the mobile web browser after loading and prior to the completing and submitting the query for loading and rendering the predicted web page to the input field.
- the mobile web browser can be further configured to receive an identification of additional predicted web pages responsive to the partial or complete query, and load at least a subset of the additional predicted web pages prior to the completing and submitting the query for loading and rendering the predicted web page to the input field.
- the mobile web browser can be configured to load the predicted web page over a network connection, and the mobile web browser can be configured to load the predicted web page prior to the completing and submitting the query if the network connection includes a wireless local area network or a predetermined type of mobile data telecommunication network pricing plan.
- the mobile web browser can be configured to load the predicted web page prior to the completing and submitting the query if the predicted web page is not designated as a web page excluded from pre-loading.
- the mobile web browser can be configured to load the predicted web page prior to the completing and submitting the query if a memory requirement for loading the predicted web page is below a pre-determined limit. If the predicted web page includes active content, the mobile web browser is configured to delay activation of the active content until after the mobile web browser displays the predicted web page.
- a machine-readable storage medium includes machine-readable instructions for causing a processor to execute a method for pre-loading a web page in a mobile web browser.
- the method includes receiving a query in a mobile web browser from a mobile device prior to the query being submitted by a user, and receiving an identification of at least one predicted web page responsive to the query.
- the method also includes loading and rendering the at least one identified web page based on the prediction prior to the query being completed and submitted, and displaying the loaded and rendered at least one predicted web page in the mobile web browser after the completed query is submitted by the user when the predicted web page is determined to be responsive to the submitted query.
- the disclosed web browser which can operate on a mobile or non-mobile device, automatically loads and renders one or many suggested web pages in the background ("pre-loading" and "pre-rendering") while a user is still selecting a web page to load.
- a query e.g., a URL, search request, or selection from history
- the web browser automatically downloads and renders (e.g., prepares for display) one or many of the web pages the user will most likely select to load based on the query entered so far, based on the user's history or bookmarks, other users' histories, and other information relevant to predicting responses to web page queries.
- the loaded and rendered web page is not displayed until the user completes entry of the query.
- the web browser displays the web page nearly instantly when the pre-loaded and pre-rendered web page matches the submitted user query.
- the near instant display of the web page in response to the submission makes it appear to the user that the web page was very quickly loaded and rendered, thereby improving the user's web browsing experience, especially on mobile devices having limited bandwidths.
- the mobile web browser will display a list of suggested URLs or search queries responsive to the "y” and will begin downloading and rendering the webpage "www.yoursite.com”.
- the webpage "www.yoursite.com” will not be displayed in the web browser until the user selects "www.yoursite.com” from the list of suggestions.
- the web page for "www.yoursite.com” appears in the mobile web browser nearly instantly.
- a user's information such as a user's web browser history
- the user can, at any time, delete the user information from memory and/or opt out of having the user information stored in memory. Additionally, the user can, at any time, adjust appropriate privacy settings to selectively limit the types of user information stored in memory.
- the user information does not include and/or share the specific identification of the user (e.g., the user's name) unless otherwise specifically provided or directed by the user.
- FIG. 1 illustrates an exemplary architecture 100 for pre-loading a web page in a mobile web browser.
- the architecture 100 includes servers 130 and clients 110 connected over a network 150.
- Each of the clients 110 is configured to download, install, and run a web browser as disclosed herein.
- the web browser is configured to run on clients 110 that are mobile or non-mobile.
- the clients 110 can be, for example, desktop computers, laptop computers, mobile devices (e.g., a smartphone, tablet computer, or PDA), set top boxes (e.g., for a television), video game consoles, or any other devices having appropriate processor, memory, and communications capabilities.
- mobile devices e.g., a smartphone, tablet computer, or PDA
- set top boxes e.g., for a television
- video game consoles e.g., for a television
- certain advantages of the web browser such as increased web page loading time in response to a query submission, are most salient on clients 110 that are mobile devices or that otherwise have slower processing and network data download speeds.
- the web browser can be downloaded over the network 150 from one of the many servers 130.
- multiple servers 130 can also host the data for downloading the web browser.
- different versions and/or configurations of the web browser that include the features disclosed herein are available for download from a server 130 and subsequent installation depending on whether the client 110 is a mobile device or non-mobile device.
- the web browser once installed on a client 110, is configured to load web pages from any one or multiple servers 130 hosting the web pages.
- the servers 130 can be any device having an appropriate processor, memory, and communications capability for hosting the data for installing the web browser and for hosting the web pages.
- the network 150 can include, for example, any one or more of a personal area network (PAN), a local area network (LAN), a campus area network (CAN), a metropolitan area network (MAN), a wide area network (WAN), a broadband network (BBN), the Internet, and the like. Further, the network 150 can include, but is not limited to, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, and the like.
- PAN personal area network
- LAN local area network
- CAN campus area network
- MAN metropolitan area network
- WAN wide area network
- BBN broadband network
- the Internet and the like.
- the network 150 can include, but is not limited to, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, and the like.
- the disclosed web browser once downloaded from a server 130 and installed and executed on a client 110, is configured to receive a partial or complete query (e.g., partial query "y” or complete query "yoursite.com") from a user into an input field of the web browser.
- the input field e.g., "omnibox”
- the web browser provides the partial or complete query to an appropriate server 130, in response to which the server 130 predicts web pages responsive to the query.
- the server 130 provides a list of the predicted web pages to the client 110, and the client 110 loads (from the appropriate server 130) and renders those responsive web pages in the background without indication to the user.
- Responsive web pages can include search suggestions (e.g., "Search for yoursite.com”), navigation suggestions (e.g., "www.yoursite.com”), or a suggestion from a user's web browsing history or bookmarks.
- the prediction is based on the user's history, bookmarks, other users' history, and other information relevant to predicting responses to web page queries.
- the web browser continues to provide updates to the query to the appropriate server 130, receive predicted web pages responsive to the updated query, and load (from the appropriate server 130) and render those responsive web pages in the background.
- the web page responsive to the query has already been loaded and rendered by the client 110 and is ready for display.
- the web page appears nearly instantly to the user in the web browser on the client 110.
- the web browsing speed of the client 110 appears to be significantly increased to the user.
- FIG. 2 is a block diagram 200 illustrating an exemplary server 130 and client 110 in the architecture 100 of FIG. 1 according to certain aspects of the disclosure.
- the client and the server 130 are connected over the network 150 via respective communications modules 218 and 238.
- the communications modules 218 and 238 are configured to interface with the network 150 to send and receive information, such as data, requests, responses, and commands to other devices on the network.
- the communications modules 218 and 238 can be, for example, modems or Ethernet cards.
- the client 110 includes a processor 212, the communications module 218, and a memory 220 that includes a web browser 222 and a client copy of a web page 224b to display in the web browser 222 using the output device 214 (e.g., a display) of the client 110.
- the client 110 also includes an input device 216, such as a keyboard, touchscreen, or mouse, to receive user queries.
- the processor 212 of the client 110 is configured to execute instructions, such as instructions physically coded into the processor 212, instructions received from software in memory 240, or a combination of both.
- the processor 212 of the client 110 executes instructions from the web browser 222 to receive (e.g., from a dictionary 240 on the server 130) an identification of one or many predicted web pages that are responsive to a partial or complete query received from a user of the client 110.
- the one or many web pages are identified with reference to the dictionary 240 stored in the memory 232 of the server 130 in response to the client 110 providing the partial or complete query to the server 130.
- Systems and methods for predicting one or many web pages responsive to a partial or complete query received from a user of a client are disclosed in U.S. Pat. App. No. 10/875,143, filed on June 22, 2004 , titled "Anticipated Query Generation and Processing in a Search Engine.
- the dictionary 240 which is discussed in the referenced application, is illustrated as stored in the memory 232 of the server 130, the dictionary 240 can be stored on any one or more other servers 130 illustrated in FIG. 1 .
- the processor 212 After identification by the processor 212 of the client 110 of a web page responsive to a partial or complete query, the processor 212 then downloads the identified web page 224a from the server 130 hosting the web page 224a prior to the user completing and submitting the query to the web browser 222 for loading and rendering. Specifically, the processor 222 of the client 110 sends a request to download the web page 224a from the communications module 218 of the client 110, over the network 150, to the communications module 238 of the server 130. The processor 236 of the server 130 receives the request and provides the requested web page 224a from memory 232 back to the client 110 over the network 150, and the client 110 stores a copy of the received web page 224b in memory 220.
- the processor 212 of the client 110 continues to provide the continuing entry of a partial query by the user to the server 130, and continues to receive identifications of one or many predicted web pages that are responsive to the continuing entry of a partial query by the user.
- the processor 212 of the client 110 also continues to request, download, and render those identified web pages.
- the number of identified web pages that are selected by the web browser 222 on the client 110 for downloading from the server 130 prior to the user completing and submitting the query can depend on the memory requirements of the web pages and the client 110. For example, if the pre-loading and pre-rendering of a web page will exceed a memory performance limit of the client 110 or the web browser 222, the web page will not be pre-loaded and pre-rendered.
- the processor 222 can also determine whether to download an identified web page 224a from the server prior to the user completing and submitting the query depending on the network connection of the client 110.
- an unlimited connection e.g., a connection that does not charge based on an amount of data downloaded
- a wireless local area network connection e.g., WiFi
- an unlimited download mobile data telecommunication network pricing plan e.g., "unlimited data plan”
- connection to the network 150 is a limited connection (e.g., a connection that charges based on an amount of data downloaded), or if the web page is designated as excluded from pre-loading (e.g., if the web page contains sensitive information, is designated as malicious, or otherwise indicated by a user as undesired or web page owner as excluded), then an identified web page will not be downloaded for rendering prior to the user completing and submitting the query.
- a limited connection e.g., a connection that charges based on an amount of data downloaded
- the web page is designated as excluded from pre-loading
- an identified web page will not be downloaded for rendering prior to the user completing and submitting the query.
- a client copy of the loaded web page is stored in the memory 224b of the client 110.
- the client copy of the web page 224b can then be rendered (e.g., prepared for display) by the processor 212 after downloading but before the user query is completed and submitted.
- the processor 212 is configured to then display the loaded and rendered web page 224b in the web browser 222 after the user submits the completed query for loading and rendering to the web browser 222 if the web page 224b is responsive (e.g., matches) the submitted query.
- the web page 224b contains active content, such as audio, video, scripts, or other load-time dependent content, then activation (e.g., playback) of the active content can be delayed from the time the web page 224b is pre-rendered to the time the web page 224b is displayed in the web browser 222.
- active content such as audio, video, scripts, or other load-time dependent content
- FIG. 3 illustrates an exemplary process 300 for pre-loading a web page in a mobile web browser using the exemplary client 110 and server 130 of FIG. 2 .
- the process 300 begins by proceeding from step 301 when a user opens a web browser 222 to step 302 when an input field in the web browser 222 receives a partial or complete query from the user.
- step 303 before the user completes and submits the query, the web browser 222 provides the partial or complete query to a server 130, in response to which the server 130 in step 304 predicts one or many web pages responsive to the partial or complete query.
- step 305 again before the user completes and submits the query, the web browser 222 receives an identification of the predicted web page and in step 306 requests a copy of the responsive web page(s) from a corresponding server hosting the web page.
- step 307 the web browser 222 on the client 110 loads and renders the copy of the web page 224b.
- the web page 224b is loaded and rendered in step 307 prior to the user completing and submitting the user's query.
- step 308 the web browser 222 receives a submission of the completed query from the user.
- the submission of the query by the user to the web browser 222 indicates to the web browser 222 that the user has selected a web page for loading, rendering, and display in the web browser 222.
- the pre-loaded and pre-rendered web page 224b if responsive to the submitted query, is then displayed in the web browser 222 in step 309, and the process 300 ends.
- FIG. 3 set forth an exemplary process 300 for pre-loading a web page in a mobile web browser using the exemplary client 110 and server 130 of FIG. 2 .
- An example will now be described using the exemplary process 300 of FIG. 3 , a smartphone client 110, a mobile web browser 222 on the smartphone 110, the partial query "y”, and a responsive webpage from the website "www.yoursite.com.”
- the process 300 begins by proceeding from step 301 when a user opens the mobile web browser 222 on the user's smartphone 110 and a location page 402 is displayed.
- step 302 the user enters the partial query "y" 408 into the omnibox 406 of the web browser 222.
- the user enters the partial query "y” by pressing the "y” key 404 on the touchscreen 214 and 216 of the smartphone 110.
- the letter "y" 408 is entered into the omnibox 406 of the web browser 222.
- the web browser provides the partial query "y" to a server 130, in response to which the server 130 in step 304 predicts, based on the user's history, bookmarks, other users' history, and other information relevant to predicting responses to web page queries, one or many web pages responsive to the partial query "y” 408.
- the web browser 222 receives a list 410 of the responsive web pages (e.g., URLs for web pages or search queries for terms) and displays the list 410 in the web browser 222.
- the foremost web page "www.yoursite.com” responsive to the partial query "y” is displayed as the first result 412 and automatically populated 414 into the omnibox 406.
- the web browser 222 requests a copy of "www.yoursite.com” from a corresponding server hosting the web page.
- step 307 the web browser 222 on the client 110 downloads and renders a copy of the responsive web page 224a for "www.yoursite.com," which is "m.yoursite.com/index” 224b.
- the user who has not completed and submitted a query, identifies "www.yoursite.com” 412 from the list 410 and already suggested 414 by the web browser 222 into the omnibox 406 as the responsive web page to the user's intended query.
- step 308 the user presses the "Go” button 416, thereby submitting the omnibox suggestion 414 of "yoursite.com” to the web browser 222 as the user's completed query.
- the pre-loaded and pre-rendered "m.yoursite.com/index" 224b which is responsive to the submitted query, is then displayed in the web browser 222 in step 309 as illustrated in FIG. 4B , a screenshot 450 of the "m.yoursite.com/index" web page 224b after it is loaded in the web browser 222.
- the displayed web page 452 includes a URL identification 454 of the web page responsive to the user's completed query in the omnibox 406.
- the display of the web page 224b in the web browser 222 in step 309 is nearly instant, thereby making it appear to the user that the connection speed of the smartphone 110 and/or the processing speed of the web browser 222 is very fast.
- the web browser 222 can optionally display an indicator to the user indicating the web page 224b was loaded.
- the optional indicator indicates to the user that the web page was loaded in response to the user's query, and is not a version of the web page from a previous user request. The process 300 then ends.
- FIG. 5 is a block diagram illustrating an exemplary computer system 500 with which the client 110 and server 130 of FIG. 2 can be implemented.
- the computer system 500 may be implemented using hardware or a combination of software and hardware, either in a dedicated server, or integrated into another entity, or distributed across multiple entities.
- Computer system 500 (e.g., client 110 and server 130) includes a bus 508 or other communication mechanism for communicating information, and a processor 502 (e.g., processor 212 and 236) coupled with bus 508 for processing information.
- processor 502 e.g., processor 212 and 236
- the computer system 500 may be implemented with one or more processors 502.
- Processor 502 may be a general-purpose microprocessor, a microcontroller, a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), a Programmable Logic Device (PLD), a controller, a state machine, gated logic, discrete hardware components, or any other suitable entity that can perform calculations or other manipulations of information.
- DSP Digital Signal Processor
- ASIC Application Specific Integrated Circuit
- FPGA Field Programmable Gate Array
- PLD Programmable Logic Device
- Computer system 500 can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them stored in an included memory 504 (e.g., memory 220 and 232), such as a Random Access Memory (RAM), a flash memory, a Read Only Memory (ROM), a Programmable Read-Only Memory (PROM), an Erasable PROM (EPROM), registers, a hard disk, a removable disk, a CD-ROM, a DVD, or any other suitable storage device, coupled to bus 508 for storing information and instructions to be executed by processor 502.
- the processor 502 and the memory 504 can be supplemented by, or incorporated in, special purpose logic circuitry.
- the instructions may be stored in the memory 504 and implemented in one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, the computer system 500, and according to any method well known to those of skill in the art, including, but not limited to, computer languages such as data-oriented languages (e.g., SQL, dBase), system languages (e.g., C, Objective-C, C++, Assembly), architectural languages (e.g., Java, .NET), and application languages (e.g., PHP, Ruby, Perl, Python).
- data-oriented languages e.g., SQL, dBase
- system languages e.g., C, Objective-C, C++, Assembly
- architectural languages e.g., Java, .NET
- application languages e.g., PHP, Ruby, Perl, Python.
- Instructions may also be implemented in computer languages such as array languages, aspect-oriented languages, assembly languages, authoring languages, command line interface languages, compiled languages, concurrent languages, curly-bracket languages, dataflow languages, data-structured languages, declarative languages, esoteric languages, extension languages, fourth-generation languages, functional languages, interactive mode languages, interpreted languages, iterative languages, list-based languages, little languages, logic-based languages, machine languages, macro languages, metaprogramming languages, multiparadigm languages, numerical analysis, non-English-based languages, object-oriented class-based languages, object-oriented prototype-based languages, off-side rule languages, procedural languages, reflective languages, rule-based languages, scripting languages, stack-based languages, synchronous languages, syntax handling languages, visual languages, wirth languages, and xml-based languages.
- Memory 504 may also be used for storing temporary variable or other intermediate information during execution of instructions to be executed by processor 502.
- a computer program as discussed herein does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, subprograms, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- Computer system 500 further includes a data storage device 506 such as a magnetic disk or optical disk, coupled to bus 508 for storing information and instructions.
- Computer system 500 may be coupled via input/output module 510 to various devices.
- the input/output module 510 can be any input/output module.
- Exemplary input/output modules 510 include data ports such as USB ports.
- the input/output module 510 is configured to connect to a communications module 512.
- Exemplary communications modules 512 e.g., communications modules 218 and 238) include networking interface cards, such as Ethernet cards and modems.
- the input/output module 510 is configured to connect to a plurality of devices, such as an input device 514 (e.g., input device 216) and/or an output device 516 (e.g., output device 214).
- exemplary input devices 514 include a keyboard and a pointing device, e.g., a mouse or a trackball, by which a user can provide input to the computer system 500.
- Other kinds of input devices 514 can be used to provide for interaction with a user as well, such as a tactile input device, visual input device, audio input device, or brain-computer interface device.
- feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, tactile, or brain wave input.
- exemplary output devices 516 include display devices, such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user.
- the clients 110 and server 130 can be implemented using a computer system 500 in response to processor 502 executing one or more sequences of one or more instructions contained in memory 504. Such instructions may be read into memory 504 from another machine-readable medium, such as data storage device 506. Execution of the sequences of instructions contained in main memory 504 causes processor 502 to perform the process steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained in memory 504. In alternative aspects, hard-wired circuitry may be used in place of or in combination with software instructions to implement various aspects of the present disclosure. Thus, aspects of the present disclosure are not limited to any specific combination of hardware circuitry and software.
- a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- the communication network can include, for example, any one or more of a personal area network (PAN), a local area network (LAN), a campus area network (CAN), a metropolitan area network (MAN), a wide area network (WAN), a broadband network (BBN), the Internet, and the like.
- PAN personal area network
- LAN local area network
- CAN campus area network
- MAN metropolitan area network
- WAN wide area network
- BBN broadband network
- the Internet and the like.
- the communication network can include, but is not limited to, for example, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, or the like.
- the communications modules can be, for example, modems or Ethernet cards.
- Computing system 500 can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- Computer system 500 can be, for example, and without limitation, a desktop computer, laptop computer, or tablet computer.
- Computer system 500 can also be embedded in another device, for example, and without limitation, a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, a video game console, and/or a television set top box.
- PDA personal digital assistant
- GPS Global Positioning System
- machine-readable storage medium or “computer readable medium” as used herein refers to any medium or media that participates in providing instructions to processor 502 for execution. Such a medium may take many forms, including, but not limited to, non-volatile media, volatile media, and transmission media.
- Non-volatile media include, for example, optical or magnetic disks, such as data storage device 506.
- Volatile media include dynamic memory, such as memory 504.
- Transmission media include coaxial cables, copper wire, and fiber optics, including the wires that include bus 508.
- machine-readable media include, for example, floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, DVD, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, an EPROM, a FLASH EPROM, any other memory chip or cartridge, or any other medium from which a computer can read.
- the machine-readable storage medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them.
- the disclosed web browser receives a partial or complete query from a user and identifies one or many web pages responsive to the query. Before the user has completed and submitted the query, the web browser predicts, downloads, and renders at least one web page responsive to the partial or complete query in the background. When the user completes and submits the query, the responsive web page has already been pre-loaded and pre-rendered in the background by the web browser. Thus, after the query is completed and submitted, the responsive web page is displayed to the user nearly instantly in the web browser when the responsive web page matches the submitted query.
Description
- The present application claims priority benefit under 35 U.S.C. § 119(e) from
U.S. Provisional Application No. 61/508,006, filed July 14, 2011 - The present disclosure generally relates to the transmission of data over a network, and more particularly to the use of a computing device to communicate over a network.
- Non-mobile computing devices such as desktop computer and laptop computers usually have faster computing speed and access to faster network connections than other types of computing devices. As a result, a user using a web browser on a non-mobile computing device (a "non-mobile web browser") is accustomed to faster web page loading and rendering times.
- On the other hand, mobile computing devices, such as smartphones, have slower computing speeds and slower network access connections (e.g., to mobile data telecommunication networks) than non-mobile computing devices. As a result, when a user selects a web page to view on a web browser for a mobile device (a "mobile web browser"), the loading and display speed of the web page is slowed by the limited bandwidth and computing capacity of the mobile device. A user that is accustomed to faster loading and display times on non-mobile web browsers can find the slower load and display time of the web page on the mobile web browser to be frustrating.
-
US 2011/040777 A1 discloses a server computer that receives, over a network from a computing device, a request for a search suggestion related to a search query that is input into a search term entry area displayed by a web browser executing on the computing device. In response to receiving the request, the server computer transmits over the network to the computing device, instructions for the computing device to display a search suggestion related to the search query, the search suggestion corresponding to a search results web page. The instructions further cause the computing device to store, in a memory of the computing device, a web page component associated with the search results web page without causing the computing device to visibly display the web page component during display of the search suggestion. - The above objects are solved by the subject-matter of the independent claims. Preferred embodiments are definded in the dependent claims.
- According to one aspect of the disclosure, a computer-implemented method for pre-loading a web page in a mobile web browser is disclosed. The method includes receiving a partial or complete query in a mobile web browser from a mobile device prior to the partial or complete query being submitted by a user and receiving an identification of a predicted web page responsive to the partial or complete query. The method also includes loading but not rendering the predicted web page prior to the partial or complete query being query being submitted by the user, and displaying the loaded and rendered predicted web page in the mobile web browser after the completed query is submitted by the user when the predicted web page is determined to be responsive to the submitted query.
- In certain aspects of the method, the predicted web page is rendered after loading and prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser. The method can also include receiving an identification of additional predicted web pages responsive to the partial or complete query, and loading at least a subset of the additional predicted web pages prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser. The predicted web page can be loaded over a network connection, and the predicted web page can be loaded prior to the completing and submitting the query if the network connection includes a wireless local area network or a predetermined type of mobile data telecommunication network pricing plan. The predicted web page can be loaded prior to the completing and submitting the query if the predicted web page is not designated as a web page excluded from pre-loading. The predicted web page can be loaded prior to the completing and submitting the query if a memory requirement for loading the predicted web page is below a pre-determined limit. If the predicted web page includes active content, activation of the active content can be delayed until after the predicted web page is displayed.
- According to another aspect of the disclosure, a system for pre-loading a web page in a mobile web browser is disclosed. The system includes a memory for storing a predicted web page responsive to a partial or complete query received in a mobile web browser from a mobile device, and a processor. The processor is configured to receive an identification of the predicted web page as responsive to the partial or complete query, and load but not render the predicted web page from a server based on the prediction prior to the query being completed and submitted. The processor is also configured to display the loaded and rendered predicted web page in the mobile web browser after the completed query is submitted by a user when the predicted web page is determined to be responsive to the submitted query.
- In certain aspects of the system, the processor is further configured to render the predicted web page after loading and prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser. The processor can be further configured to receive an identification of additional predicted web pages responsive to the partial or complete query, and load at least a subset of the additional predicted web pages prior to the completing and submitting the query for loading and rendering the predicted web page in the mobile web browser. The processor can be further configured to load the predicted web page from the server over a network connection, and the processor being configured to load the predicted web page prior to the completing and submitting the query includes the processor being configured to load the predicted web page prior to the completing and submitting the query if the network connection includes a wireless local area network or predetermined type of mobile data telecommunication network pricing plan. The predicted web page can be loaded prior to the completing and submitting the query if the predicted web page is not designated as a web page excluded from pre-loading. The processor being configured to load the predicted web page prior to the completing and submitting the query includes the processor being configured to load the predicted web page prior to the completing and submitting the query if a memory requirement for loading the predicted web page is below a pre-determined limit. The processor being configured to display the loaded and rendered includes the processor being configured to delayed activation of active content for the predicted web page until after the predicted web page is displayed if the predicted web page includes active content.
- According to a further aspect of the disclosure, a mobile web browser for pre-loading a web page in a mobile web browser is disclosed. The mobile web browser includes an input field configured to receive, from a mobile device, a submission of a partial or complete query for a web page for loading and rendering the predicted web page, and a web page display area configured to display a web page. The mobile web browser is configured to receive an identification of a predicted web page responsive to the partial or complete query prior to the partial or complete query being submitted by a user, load but not render the predict web page based on the prediction prior to the query being completed and submitted, and display the loaded and rendered predicted web page in the predicted web page display area after the completed query is submitted by the user to the input field when the predicted web page is determined to be responsive to the submitted query.
- In certain aspects of the mobile web browser, the predicted web page can be rendered by the mobile web browser after loading and prior to the completing and submitting the query for loading and rendering the predicted web page to the input field. The mobile web browser can be further configured to receive an identification of additional predicted web pages responsive to the partial or complete query, and load at least a subset of the additional predicted web pages prior to the completing and submitting the query for loading and rendering the predicted web page to the input field. The mobile web browser can be configured to load the predicted web page over a network connection, and the mobile web browser can be configured to load the predicted web page prior to the completing and submitting the query if the network connection includes a wireless local area network or a predetermined type of mobile data telecommunication network pricing plan. The mobile web browser can be configured to load the predicted web page prior to the completing and submitting the query if the predicted web page is not designated as a web page excluded from pre-loading. The mobile web browser can be configured to load the predicted web page prior to the completing and submitting the query if a memory requirement for loading the predicted web page is below a pre-determined limit. If the predicted web page includes active content, the mobile web browser is configured to delay activation of the active content until after the mobile web browser displays the predicted web page.
- According to yet a further aspect of the disclosure, a machine-readable storage medium includes machine-readable instructions for causing a processor to execute a method for pre-loading a web page in a mobile web browser is disclosed. The method includes receiving a query in a mobile web browser from a mobile device prior to the query being submitted by a user, and receiving an identification of at least one predicted web page responsive to the query. The method also includes loading and rendering the at least one identified web page based on the prediction prior to the query being completed and submitted, and displaying the loaded and rendered at least one predicted web page in the mobile web browser after the completed query is submitted by the user when the predicted web page is determined to be responsive to the submitted query.
- The accompanying drawings, which are included to provide further understanding and are incorporated in and constitute a part of this specification, illustrate disclosed embodiments and together with the description serve to explain the principles of the disclosed embodiments. In the drawings:
-
FIG. 1 illustrates an exemplary architecture for pre-loading a web page in a mobile web browser. -
FIG. 2 is a block diagram illustrating an exemplary client and server from the architecture ofFIG. 1 according to certain aspects of the disclosure. -
FIG. 3 illustrates an exemplary process for pre-loading a web page in a mobile web browser using the exemplary client and server ofFIG. 2 . -
FIGS. 4A and 4B are exemplary screenshots associated with the exemplary process ofFIG. 3 . -
FIG. 5 is a block diagram illustrating an exemplary computer system with which the clients and server ofFIG. 2 can be implemented. - In the following detailed description, numerous specific details are set forth to provide a full understanding of the present disclosure. It will be apparent, however, to one ordinarily skilled in the art that the embodiments of the present disclosure may be practiced without some of these specific details. In other instances, well-known structures and techniques have not been shown in detail so as not to obscure the disclosure.
- The disclosed web browser, which can operate on a mobile or non-mobile device, automatically loads and renders one or many suggested web pages in the background ("pre-loading" and "pre-rendering") while a user is still selecting a web page to load. Specifically, as a user enters a query (e.g., a URL, search request, or selection from history), the web browser automatically downloads and renders (e.g., prepares for display) one or many of the web pages the user will most likely select to load based on the query entered so far, based on the user's history or bookmarks, other users' histories, and other information relevant to predicting responses to web page queries. The loaded and rendered web page is not displayed until the user completes entry of the query. Thus, because the likely web page the user wants to see has already been pre-loaded and pre-rendered, when the user submits the query for the web page to the web browser (e.g., by pressing "enter" after inputting a search request or selecting a suggested web page from a list), the web browser displays the web page nearly instantly when the pre-loaded and pre-rendered web page matches the submitted user query. The near instant display of the web page in response to the submission makes it appear to the user that the web page was very quickly loaded and rendered, thereby improving the user's web browsing experience, especially on mobile devices having limited bandwidths.
- For example, if a user enters "y" in a web browser URL address bar, and the user's web browser history indicates that the user most likely wants to load the web page "www.yoursite.com," then the mobile web browser will display a list of suggested URLs or search queries responsive to the "y" and will begin downloading and rendering the webpage "www.yoursite.com". The webpage "www.yoursite.com" will not be displayed in the web browser until the user selects "www.yoursite.com" from the list of suggestions. When the user presses the "go" button in the mobile web browser to select "www.yoursite.com" or selects the suggestion from a list for loading and display, the web page for "www.yoursite.com" appears in the mobile web browser nearly instantly.
- Although many examples provided herein describe a user's information, such as a user's web browser history, being stored in memory, the user can, at any time, delete the user information from memory and/or opt out of having the user information stored in memory. Additionally, the user can, at any time, adjust appropriate privacy settings to selectively limit the types of user information stored in memory. The user information does not include and/or share the specific identification of the user (e.g., the user's name) unless otherwise specifically provided or directed by the user.
-
FIG. 1 illustrates anexemplary architecture 100 for pre-loading a web page in a mobile web browser. Thearchitecture 100 includesservers 130 andclients 110 connected over anetwork 150. - Each of the
clients 110 is configured to download, install, and run a web browser as disclosed herein. The web browser is configured to run onclients 110 that are mobile or non-mobile. Theclients 110 can be, for example, desktop computers, laptop computers, mobile devices (e.g., a smartphone, tablet computer, or PDA), set top boxes (e.g., for a television), video game consoles, or any other devices having appropriate processor, memory, and communications capabilities. In certain aspects, certain advantages of the web browser, such as increased web page loading time in response to a query submission, are most salient onclients 110 that are mobile devices or that otherwise have slower processing and network data download speeds. - The web browser can be downloaded over the
network 150 from one of themany servers 130. For purposes of load balancing,multiple servers 130 can also host the data for downloading the web browser. In certain instances, different versions and/or configurations of the web browser that include the features disclosed herein are available for download from aserver 130 and subsequent installation depending on whether theclient 110 is a mobile device or non-mobile device. The web browser, once installed on aclient 110, is configured to load web pages from any one ormultiple servers 130 hosting the web pages. Theservers 130 can be any device having an appropriate processor, memory, and communications capability for hosting the data for installing the web browser and for hosting the web pages. Thenetwork 150 can include, for example, any one or more of a personal area network (PAN), a local area network (LAN), a campus area network (CAN), a metropolitan area network (MAN), a wide area network (WAN), a broadband network (BBN), the Internet, and the like. Further, thenetwork 150 can include, but is not limited to, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, and the like. - The disclosed web browser, once downloaded from a
server 130 and installed and executed on aclient 110, is configured to receive a partial or complete query (e.g., partial query "y" or complete query "yoursite.com") from a user into an input field of the web browser. The input field (e.g., "omnibox") can be designated for entering a Uniform Resource Locator, a search query, or both. As the user enters the query, the web browser provides the partial or complete query to anappropriate server 130, in response to which theserver 130 predicts web pages responsive to the query. Theserver 130 provides a list of the predicted web pages to theclient 110, and theclient 110 loads (from the appropriate server 130) and renders those responsive web pages in the background without indication to the user. Responsive web pages can include search suggestions (e.g., "Search for yoursite.com"), navigation suggestions (e.g., "www.yoursite.com"), or a suggestion from a user's web browsing history or bookmarks. The prediction is based on the user's history, bookmarks, other users' history, and other information relevant to predicting responses to web page queries. As the user continues entry of the query, the web browser continues to provide updates to the query to theappropriate server 130, receive predicted web pages responsive to the updated query, and load (from the appropriate server 130) and render those responsive web pages in the background. By the time the user decides to submit the query, the web page responsive to the query has already been loaded and rendered by theclient 110 and is ready for display. When the user does submit the query, the web page appears nearly instantly to the user in the web browser on theclient 110. As a result, the web browsing speed of theclient 110 appears to be significantly increased to the user. -
FIG. 2 is a block diagram 200 illustrating anexemplary server 130 andclient 110 in thearchitecture 100 ofFIG. 1 according to certain aspects of the disclosure. The client and theserver 130 are connected over thenetwork 150 viarespective communications modules communications modules network 150 to send and receive information, such as data, requests, responses, and commands to other devices on the network. Thecommunications modules - The
client 110 includes aprocessor 212, thecommunications module 218, and amemory 220 that includes aweb browser 222 and a client copy of aweb page 224b to display in theweb browser 222 using the output device 214 (e.g., a display) of theclient 110. Theclient 110 also includes aninput device 216, such as a keyboard, touchscreen, or mouse, to receive user queries. Theprocessor 212 of theclient 110 is configured to execute instructions, such as instructions physically coded into theprocessor 212, instructions received from software inmemory 240, or a combination of both. For example, theprocessor 212 of theclient 110 executes instructions from theweb browser 222 to receive (e.g., from adictionary 240 on the server 130) an identification of one or many predicted web pages that are responsive to a partial or complete query received from a user of theclient 110. The one or many web pages are identified with reference to thedictionary 240 stored in thememory 232 of theserver 130 in response to theclient 110 providing the partial or complete query to theserver 130. Systems and methods for predicting one or many web pages responsive to a partial or complete query received from a user of a client are disclosed inU.S. Pat. App. No. 10/875,143, filed on June 22, 2004 dictionary 240, which is discussed in the referenced application, is illustrated as stored in thememory 232 of theserver 130, thedictionary 240 can be stored on any one or moreother servers 130 illustrated inFIG. 1 . - After identification by the
processor 212 of theclient 110 of a web page responsive to a partial or complete query, theprocessor 212 then downloads the identifiedweb page 224a from theserver 130 hosting theweb page 224a prior to the user completing and submitting the query to theweb browser 222 for loading and rendering. Specifically, theprocessor 222 of theclient 110 sends a request to download theweb page 224a from thecommunications module 218 of theclient 110, over thenetwork 150, to thecommunications module 238 of theserver 130. Theprocessor 236 of theserver 130 receives the request and provides the requestedweb page 224a frommemory 232 back to theclient 110 over thenetwork 150, and theclient 110 stores a copy of the receivedweb page 224b inmemory 220. Theprocessor 212 of theclient 110 continues to provide the continuing entry of a partial query by the user to theserver 130, and continues to receive identifications of one or many predicted web pages that are responsive to the continuing entry of a partial query by the user. Theprocessor 212 of theclient 110 also continues to request, download, and render those identified web pages. - The number of identified web pages that are selected by the
web browser 222 on theclient 110 for downloading from theserver 130 prior to the user completing and submitting the query can depend on the memory requirements of the web pages and theclient 110. For example, if the pre-loading and pre-rendering of a web page will exceed a memory performance limit of theclient 110 or theweb browser 222, the web page will not be pre-loaded and pre-rendered. Theprocessor 222 can also determine whether to download an identifiedweb page 224a from the server prior to the user completing and submitting the query depending on the network connection of theclient 110. For example, if the client's connection to thenetwork 150 is an unlimited connection (e.g., a connection that does not charge based on an amount of data downloaded), such as a wireless local area network connection (e.g., WiFi) or an unlimited download mobile data telecommunication network pricing plan (e.g., "unlimited data plan"), then an identified web page can be downloaded prior to the user completing and submitting the query. On the other hand, if the connection to thenetwork 150 is a limited connection (e.g., a connection that charges based on an amount of data downloaded), or if the web page is designated as excluded from pre-loading (e.g., if the web page contains sensitive information, is designated as malicious, or otherwise indicated by a user as undesired or web page owner as excluded), then an identified web page will not be downloaded for rendering prior to the user completing and submitting the query. - Once an identified
web page 224a is downloaded from theserver 130, a client copy of the loaded web page is stored in thememory 224b of theclient 110. The client copy of theweb page 224b can then be rendered (e.g., prepared for display) by theprocessor 212 after downloading but before the user query is completed and submitted. Theprocessor 212 is configured to then display the loaded and renderedweb page 224b in theweb browser 222 after the user submits the completed query for loading and rendering to theweb browser 222 if theweb page 224b is responsive (e.g., matches) the submitted query. If theweb page 224b contains active content, such as audio, video, scripts, or other load-time dependent content, then activation (e.g., playback) of the active content can be delayed from the time theweb page 224b is pre-rendered to the time theweb page 224b is displayed in theweb browser 222. -
FIG. 3 illustrates anexemplary process 300 for pre-loading a web page in a mobile web browser using theexemplary client 110 andserver 130 ofFIG. 2 . Theprocess 300 begins by proceeding fromstep 301 when a user opens aweb browser 222 to step 302 when an input field in theweb browser 222 receives a partial or complete query from the user. Instep 303, before the user completes and submits the query, theweb browser 222 provides the partial or complete query to aserver 130, in response to which theserver 130 instep 304 predicts one or many web pages responsive to the partial or complete query. Instep 305, again before the user completes and submits the query, theweb browser 222 receives an identification of the predicted web page and instep 306 requests a copy of the responsive web page(s) from a corresponding server hosting the web page. Instep 307, theweb browser 222 on theclient 110 loads and renders the copy of theweb page 224b. Theweb page 224b is loaded and rendered instep 307 prior to the user completing and submitting the user's query. Instep 308, theweb browser 222 receives a submission of the completed query from the user. The submission of the query by the user to theweb browser 222 indicates to theweb browser 222 that the user has selected a web page for loading, rendering, and display in theweb browser 222. The pre-loaded andpre-rendered web page 224b, if responsive to the submitted query, is then displayed in theweb browser 222 instep 309, and theprocess 300 ends. -
FIG. 3 set forth anexemplary process 300 for pre-loading a web page in a mobile web browser using theexemplary client 110 andserver 130 ofFIG. 2 . An example will now be described using theexemplary process 300 ofFIG. 3 , asmartphone client 110, amobile web browser 222 on thesmartphone 110, the partial query "y", and a responsive webpage from the website "www.yoursite.com." - With reference to
FIG. 4A , which illustrates anexemplary screenshot 400 from themobile web browser 222, theprocess 300 begins by proceeding fromstep 301 when a user opens themobile web browser 222 on the user'ssmartphone 110 and alocation page 402 is displayed. Instep 302, the user enters the partial query "y" 408 into theomnibox 406 of theweb browser 222. The user enters the partial query "y" by pressing the "y" key 404 on thetouchscreen smartphone 110. In response, the letter "y" 408 is entered into theomnibox 406 of theweb browser 222. Instep 303, the web browser provides the partial query "y" to aserver 130, in response to which theserver 130 instep 304 predicts, based on the user's history, bookmarks, other users' history, and other information relevant to predicting responses to web page queries, one or many web pages responsive to the partial query "y" 408. Instep 305, theweb browser 222 receives alist 410 of the responsive web pages (e.g., URLs for web pages or search queries for terms) and displays thelist 410 in theweb browser 222. The foremost web page "www.yoursite.com" responsive to the partial query "y" is displayed as thefirst result 412 and automatically populated 414 into theomnibox 406. Instep 306, before the user completes and submits the query in theomnibox 406, theweb browser 222 requests a copy of "www.yoursite.com" from a corresponding server hosting the web page. - In
step 307, theweb browser 222 on theclient 110 downloads and renders a copy of theresponsive web page 224a for "www.yoursite.com," which is "m.yoursite.com/index" 224b. The user, who has not completed and submitted a query, identifies "www.yoursite.com" 412 from thelist 410 and already suggested 414 by theweb browser 222 into theomnibox 406 as the responsive web page to the user's intended query. Instep 308, the user presses the "Go"button 416, thereby submitting theomnibox suggestion 414 of "yoursite.com" to theweb browser 222 as the user's completed query. The pre-loaded and pre-rendered "m.yoursite.com/index" 224b, which is responsive to the submitted query, is then displayed in theweb browser 222 instep 309 as illustrated inFIG. 4B , ascreenshot 450 of the "m.yoursite.com/index"web page 224b after it is loaded in theweb browser 222. The displayedweb page 452 includes aURL identification 454 of the web page responsive to the user's completed query in theomnibox 406. The display of theweb page 224b in theweb browser 222 instep 309 is nearly instant, thereby making it appear to the user that the connection speed of thesmartphone 110 and/or the processing speed of theweb browser 222 is very fast. Theweb browser 222 can optionally display an indicator to the user indicating theweb page 224b was loaded. The optional indicator indicates to the user that the web page was loaded in response to the user's query, and is not a version of the web page from a previous user request. Theprocess 300 then ends. -
FIG. 5 is a block diagram illustrating anexemplary computer system 500 with which theclient 110 andserver 130 ofFIG. 2 can be implemented. In certain aspects, thecomputer system 500 may be implemented using hardware or a combination of software and hardware, either in a dedicated server, or integrated into another entity, or distributed across multiple entities. - Computer system 500 (e.g.,
client 110 and server 130) includes abus 508 or other communication mechanism for communicating information, and a processor 502 (e.g.,processor 212 and 236) coupled withbus 508 for processing information. By way of example, thecomputer system 500 may be implemented with one ormore processors 502.Processor 502 may be a general-purpose microprocessor, a microcontroller, a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), a Programmable Logic Device (PLD), a controller, a state machine, gated logic, discrete hardware components, or any other suitable entity that can perform calculations or other manipulations of information. -
Computer system 500 can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them stored in an included memory 504 (e.g.,memory 220 and 232), such as a Random Access Memory (RAM), a flash memory, a Read Only Memory (ROM), a Programmable Read-Only Memory (PROM), an Erasable PROM (EPROM), registers, a hard disk, a removable disk, a CD-ROM, a DVD, or any other suitable storage device, coupled tobus 508 for storing information and instructions to be executed byprocessor 502. Theprocessor 502 and thememory 504 can be supplemented by, or incorporated in, special purpose logic circuitry. - The instructions may be stored in the
memory 504 and implemented in one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, thecomputer system 500, and according to any method well known to those of skill in the art, including, but not limited to, computer languages such as data-oriented languages (e.g., SQL, dBase), system languages (e.g., C, Objective-C, C++, Assembly), architectural languages (e.g., Java, .NET), and application languages (e.g., PHP, Ruby, Perl, Python). Instructions may also be implemented in computer languages such as array languages, aspect-oriented languages, assembly languages, authoring languages, command line interface languages, compiled languages, concurrent languages, curly-bracket languages, dataflow languages, data-structured languages, declarative languages, esoteric languages, extension languages, fourth-generation languages, functional languages, interactive mode languages, interpreted languages, iterative languages, list-based languages, little languages, logic-based languages, machine languages, macro languages, metaprogramming languages, multiparadigm languages, numerical analysis, non-English-based languages, object-oriented class-based languages, object-oriented prototype-based languages, off-side rule languages, procedural languages, reflective languages, rule-based languages, scripting languages, stack-based languages, synchronous languages, syntax handling languages, visual languages, wirth languages, and xml-based languages.Memory 504 may also be used for storing temporary variable or other intermediate information during execution of instructions to be executed byprocessor 502. - A computer program as discussed herein does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, subprograms, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
-
Computer system 500 further includes adata storage device 506 such as a magnetic disk or optical disk, coupled tobus 508 for storing information and instructions.Computer system 500 may be coupled via input/output module 510 to various devices. The input/output module 510 can be any input/output module. Exemplary input/output modules 510 include data ports such as USB ports. The input/output module 510 is configured to connect to acommunications module 512. Exemplary communications modules 512 (e.g.,communications modules 218 and 238) include networking interface cards, such as Ethernet cards and modems. In certain aspects, the input/output module 510 is configured to connect to a plurality of devices, such as an input device 514 (e.g., input device 216) and/or an output device 516 (e.g., output device 214).Exemplary input devices 514 include a keyboard and a pointing device, e.g., a mouse or a trackball, by which a user can provide input to thecomputer system 500. Other kinds ofinput devices 514 can be used to provide for interaction with a user as well, such as a tactile input device, visual input device, audio input device, or brain-computer interface device. For example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, tactile, or brain wave input.Exemplary output devices 516 include display devices, such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user. - According to one aspect of the present disclosure, the
clients 110 andserver 130 can be implemented using acomputer system 500 in response toprocessor 502 executing one or more sequences of one or more instructions contained inmemory 504. Such instructions may be read intomemory 504 from another machine-readable medium, such asdata storage device 506. Execution of the sequences of instructions contained inmain memory 504 causesprocessor 502 to perform the process steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained inmemory 504. In alternative aspects, hard-wired circuitry may be used in place of or in combination with software instructions to implement various aspects of the present disclosure. Thus, aspects of the present disclosure are not limited to any specific combination of hardware circuitry and software. - Various aspects of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. The communication network (e.g., network 150) can include, for example, any one or more of a personal area network (PAN), a local area network (LAN), a campus area network (CAN), a metropolitan area network (MAN), a wide area network (WAN), a broadband network (BBN), the Internet, and the like. Further, the communication network can include, but is not limited to, for example, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, or the like. The communications modules can be, for example, modems or Ethernet cards.
-
Computing system 500 can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.Computer system 500 can be, for example, and without limitation, a desktop computer, laptop computer, or tablet computer.Computer system 500 can also be embedded in another device, for example, and without limitation, a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, a video game console, and/or a television set top box. - The term "machine-readable storage medium" or "computer readable medium" as used herein refers to any medium or media that participates in providing instructions to
processor 502 for execution. Such a medium may take many forms, including, but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media include, for example, optical or magnetic disks, such asdata storage device 506. Volatile media include dynamic memory, such asmemory 504. Transmission media include coaxial cables, copper wire, and fiber optics, including the wires that includebus 508. Common forms of machine-readable media include, for example, floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, DVD, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, an EPROM, a FLASH EPROM, any other memory chip or cartridge, or any other medium from which a computer can read. The machine-readable storage medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them. - Systems, methods, and machine-readable media for pre-loading a web page in a mobile web browser have been described. The disclosed web browser receives a partial or complete query from a user and identifies one or many web pages responsive to the query. Before the user has completed and submitted the query, the web browser predicts, downloads, and renders at least one web page responsive to the partial or complete query in the background. When the user completes and submits the query, the responsive web page has already been pre-loaded and pre-rendered in the background by the web browser. Thus, after the query is completed and submitted, the responsive web page is displayed to the user nearly instantly in the web browser when the responsive web page matches the submitted query.
- While this specification contains many specifics, these should not be construed as limitations on the scope of what may be claimed, but rather as descriptions of particular implementations of the subject matter. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the aspects described above should not be understood as requiring such separation in all aspects, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- The subject matter of this specification has been described in terms of particular aspects, but other aspects can be implemented and are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.
- These and other implementations are within the scope of the following claims.
Claims (15)
- A computer-implemented method (300) for pre-loading a web page in a mobile web browser (222), the method comprising:receiving (302) a partial or complete query in a mobile web browser from a mobile device prior to the partial or complete query being submitted by a user;providing (303) the partial or complete query to a server (130);receiving (305), from the server (130), an identification of a predicted web page responsive to the partial or complete query;downloading but not rendering the predicted web page prior to the partial or complete query being submitted by the user; anddisplaying (308) the downloaded and rendered predicted web page in the mobile web browser after the completed query is submitted by the user when the predicted web page is determined to be responsive to the submitted query,wherein the predicted web page is not downloaded prior to the completing and submitting the query if the predicted web page is designated as a web page excluded from pre-loading.
- The computer-implemented method of Claim 1, wherein the predicted web page is rendered after downloading and prior to the completing and submitting the query for downloading and rendering the predicted web page in the mobile web browser (222).
- The computer-implemented method of Claim 1, further comprising:receiving an identification of additional predicted web pages responsive to the partial or complete query; anddownloading at least a subset of the additional predicted web pages prior to the completing and submitting the query for downloading and rendering the predicted web page in the mobile web browser (222).
- The computer-implemented method of Claim 1, wherein the predicted web page is downloaded over a network connection (150), and wherein the predicted web page is downloaded prior to the completing and submitting the query if the network connection comprises a wireless local area network or a predetermined type of mobile data telecommunication network pricing plan.
- The computer-implemented method of Claim 1, wherein the predicted web page being designated as a web page excluded from pre-loading is based on at least one of the web page comprising sensitive information, the web page being designated as malicious, or the web page being indicated by the user as undesired or by an owner of the web page as excluded from pre-loading.
- The computer-implemented method of Claim 1, wherein the predicted web page is downloaded prior to the completing and submitting the query if a memory requirement for downloading the predicted web page is below a pre-determined limit.
- The computer-implemented method of Claim 1, wherein if the predicted web page comprises active content, activation of the active content is delayed until after the predicted web page is displayed.
- A system for pre-loading a web page in a mobile web browser (222), the system comprising:
a memory (220) for storing a predicted web page (224b) responsive to a partial or complete query received in a mobile web browser (222) from a mobile device (110); and
a processor (212) configured to:provide the partial or complete query to a server (130);receive an identification of the predicted web page (224a) as responsive to the partial or complete query from the server (130);download but not render the predicted web page from the server (130) based on the prediction prior to the query being completed and submitted; anddisplay the downloaded and rendered predicted web page (224b) in the mobile web browser (222) after the completed query is submitted by a user when the predicted web page is determined to be responsive to the submitted query,wherein the predicted web page is not downloaded prior to the completing and submitting the query if the predicted web page is designated as a web page excluded from pre-loading. - The system of Claim 8, wherein the processor (212) is further configured to render the predicted web page (224b) after downloading and prior to the completing and submitting the query for downloading and rendering the predicted web page in the mobile web browser (222).
- The system of Claim 8, wherein the processor (212) is further configured to:receive an identification of additional predicted web pages responsive to the partial or complete query; anddownload at least a subset of the additional predicted web pages prior to the completing and submitting the query for downloading and rendering the predicted web page in the mobile web browser (222).
- The system of Claim 8, wherein the processor (212) is further configured to download the predicted web page (224a) from the server (130) over a network connection (150), and wherein the processor (212) being configured to download the predicted web page (224a) prior to the completing and submitting the query comprises the processor (212) being configured to download the predicted web page (224a) prior to the completing and submitting the query if the network connection (150) comprises a wireless local area network or predetermined type of mobile data telecommunication network pricing plan.
- The system of Claim 8, wherein the predicted web page being designated as a web page excluded from pre-loading is based on:
at least one of the web page comprising sensitive information, the web page being designated as malicious, or the web page being indicated by the user as undesired or by an owner of the web page as excluded from pre-loading. - The system of Claim 8, wherein the processor (212) being configured to download the predicted web page (224a) prior to the completing and submitting the query comprises the processor being configured to download the predicted web page (224a) prior to the completing and submitting the query if a memory requirement for downloading the predicted web page is below a pre-determined limit.
- The system of Claim 8, wherein the processor (212) being configured to display the downloaded and rendered web page comprises the processor (212) being configured to delayed activation of active content for the predicted web page until after the predicted web page is displayed if the predicted web page comprises active content.
- A non-transitory machine-readable storage medium comprising machine-readable instructions for causing a processor (212) to execute a method (300) for pre-loading a web page in a mobile web browser (222), the method comprising:receiving (302) a query in a mobile web browser from a mobile device prior to the query being submitted by a user;providing (303) the partial or complete query to a server (130);receiving (305), from the server (130), an identification of at least one predicted web page responsive to the query;downloading (307) and rendering the at least one identified web page based on the prediction prior to the query being completed and submitted; anddisplaying (309) the downloaded and rendered at least one predicted web page in the mobile web browser (222) after the completed query is submitted by the user when the predicted web page is determined to be responsive to the submitted query,wherein the predicted web page is not downloaded prior to the completing and submitting the query when the predicted web page is designated as a web page excluded from pre-loading.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161508006P | 2011-07-14 | 2011-07-14 | |
US13/278,110 US8612418B2 (en) | 2011-07-14 | 2011-10-20 | Mobile web browser for pre-loading web pages |
PCT/US2012/040221 WO2013009405A1 (en) | 2011-07-14 | 2012-05-31 | Mobile web browser for pre-loading web pages |
Publications (3)
Publication Number | Publication Date |
---|---|
EP2732380A1 EP2732380A1 (en) | 2014-05-21 |
EP2732380A4 EP2732380A4 (en) | 2015-03-18 |
EP2732380B1 true EP2732380B1 (en) | 2019-05-08 |
Family
ID=47506394
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12810829.7A Active EP2732380B1 (en) | 2011-07-14 | 2012-05-31 | Mobile web browser for pre-loading web pages |
Country Status (4)
Country | Link |
---|---|
US (1) | US8612418B2 (en) |
EP (1) | EP2732380B1 (en) |
CN (2) | CN103703456B (en) |
WO (1) | WO2013009405A1 (en) |
Families Citing this family (40)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9384711B2 (en) | 2012-02-15 | 2016-07-05 | Microsoft Technology Licensing, Llc | Speculative render ahead and caching in multiple passes |
US9582603B1 (en) * | 2012-02-27 | 2017-02-28 | Amazon Technologies, Inc. | Managing preloading of data on client systems |
US8954524B1 (en) * | 2012-03-14 | 2015-02-10 | Google Inc. | Access to network content |
US9230517B2 (en) | 2012-05-31 | 2016-01-05 | Microsoft Technology Licensing, Llc | Virtual surface gutters |
US9286122B2 (en) | 2012-05-31 | 2016-03-15 | Microsoft Technology Licensing, Llc | Display techniques using virtual surface allocation |
US9235925B2 (en) | 2012-05-31 | 2016-01-12 | Microsoft Technology Licensing, Llc | Virtual surface rendering |
US9177533B2 (en) | 2012-05-31 | 2015-11-03 | Microsoft Technology Licensing, Llc | Virtual surface compaction |
CN103473225B (en) * | 2012-06-06 | 2016-04-06 | 腾讯科技（深圳）有限公司 | Page display method and device |
US10261938B1 (en) * | 2012-08-31 | 2019-04-16 | Amazon Technologies, Inc. | Content preloading using predictive models |
US20140245181A1 (en) * | 2013-02-25 | 2014-08-28 | Sharp Laboratories Of America, Inc. | Methods and systems for interacting with an information display panel |
US9870582B2 (en) * | 2013-03-14 | 2018-01-16 | Mcmaster-Carr Supply Company | System and method for browsing a product catalog and for dynamically generated product paths |
US9307007B2 (en) | 2013-06-14 | 2016-04-05 | Microsoft Technology Licensing, Llc | Content pre-render and pre-fetch techniques |
US9374626B2 (en) * | 2013-07-17 | 2016-06-21 | Intel Corporation | Use of digital TV bandwidth for web cache pre-loading |
KR101491433B1 (en) * | 2013-07-25 | 2015-02-06 | 주식회사 제이투엔 | Method and user device for code-based access to other device |
US9565233B1 (en) * | 2013-08-09 | 2017-02-07 | Google Inc. | Preloading content for requesting applications |
US9710566B2 (en) | 2013-12-16 | 2017-07-18 | Google Inc. | User interface for webpage permission requests |
US20150271044A1 (en) * | 2014-03-24 | 2015-09-24 | International Business Machines Corporation | Browser response optimization |
US11095743B2 (en) | 2014-07-16 | 2021-08-17 | Tensera Networks Ltd. | Optimized content-delivery network (CDN) for the wireless last mile |
WO2016009285A1 (en) | 2014-07-16 | 2016-01-21 | Tensera Networks Ltd. | Efficient content delivery over wireless networks using guaranteed prefetching at selected times-of-day |
US9979796B1 (en) * | 2014-07-16 | 2018-05-22 | Tensera Networks Ltd. | Efficient pre-fetching notifications |
US9811559B2 (en) * | 2014-09-01 | 2017-11-07 | Mapquest, Inc. | Computerized systems and methods for identifying points-of-interest using customized query prediction |
CN104615756B (en) * | 2015-02-12 | 2017-12-01 | 北京航空航天大学 | Webpage loading method |
US10180985B2 (en) | 2015-02-19 | 2019-01-15 | At&T Intellectual Property I, L.P. | Apparatus and method for automatically redirecting a search |
US10044804B2 (en) * | 2015-03-17 | 2018-08-07 | Oracle International Corporation | Enabling users to specify an electronic resource for viewing based on prior accessed electronic resources |
US10706119B1 (en) * | 2015-04-30 | 2020-07-07 | Tensera Networks Ltd. | Content prefetching to user devices based on rendering characteristics |
US10261669B2 (en) * | 2015-07-14 | 2019-04-16 | Adobe Inc. | Publishing electronic documents utilizing navigation information |
US10133821B2 (en) * | 2016-01-06 | 2018-11-20 | Google Llc | Search result prefetching of voice queries |
CN108446279A (en) * | 2016-08-14 | 2018-08-24 | 天脉聚源（北京）科技有限公司 | A kind of mobile terminal shows the method and system of multiple web pages |
US11922187B2 (en) | 2018-03-05 | 2024-03-05 | Tensera Networks Ltd. | Robust application preloading with accurate user experience |
US20220179668A1 (en) * | 2018-03-05 | 2022-06-09 | Tensera Networks Ltd. | Robust Application Preloading with Accurate User Experience |
US11915012B2 (en) * | 2018-03-05 | 2024-02-27 | Tensera Networks Ltd. | Application preloading in the presence of user actions |
US10459609B2 (en) * | 2018-04-03 | 2019-10-29 | Palantir Technologies Inc. | Multi-stage data page rendering |
US10681165B2 (en) | 2018-09-11 | 2020-06-09 | Palantir Technologies Inc. | System architecture for enabling efficient inter-application communications |
US11153285B2 (en) | 2018-11-07 | 2021-10-19 | Citrix Systems, Inc. | Systems and methods for application pre-launch |
EP4004767A4 (en) | 2019-07-30 | 2023-03-08 | Tensera Networks Ltd. | Pre-rendering of application user-interfaces in user devices |
US11366871B2 (en) * | 2020-08-06 | 2022-06-21 | Content Square SAS | System and method for collection of a website in a past state and retroactive analysis thereof |
CN112100481A (en) | 2020-09-25 | 2020-12-18 | 百度国际科技（深圳）有限公司 | Search method, search device, electronic device, and storage medium |
CN116670646A (en) | 2020-12-03 | 2023-08-29 | 腾赛拉网络有限公司 | Preloading applications with existing tasks |
CN112911372B (en) * | 2021-01-29 | 2023-06-27 | 北京达佳互联信息技术有限公司 | Page data processing method and device, electronic equipment and server |
US11676173B1 (en) | 2022-04-27 | 2023-06-13 | Content Square SAS | Webpage zone exposure rate optimization |
Family Cites Families (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7467137B1 (en) * | 1994-09-02 | 2008-12-16 | Wolfe Mark A | System and method for information retrieval employing a preloading procedure |
US6584498B2 (en) * | 1996-09-13 | 2003-06-24 | Planet Web, Inc. | Dynamic preloading of web pages |
US6067565A (en) * | 1998-01-15 | 2000-05-23 | Microsoft Corporation | Technique for prefetching a web page of potential future interest in lieu of continuing a current information download |
US6012052A (en) * | 1998-01-15 | 2000-01-04 | Microsoft Corporation | Methods and apparatus for building resource transition probability models for use in pre-fetching resources, editing resource link topology, building resource link topology templates, and collaborative filtering |
US6704727B1 (en) * | 2000-01-31 | 2004-03-09 | Overture Services, Inc. | Method and system for generating a set of search terms |
US8291007B2 (en) * | 2000-02-22 | 2012-10-16 | Flash Networks Ltd | System and method to accelerate client/server interactions using predictive requests |
US6564213B1 (en) * | 2000-04-18 | 2003-05-13 | Amazon.Com, Inc. | Search query autocompletion |
US6874019B2 (en) * | 2001-03-08 | 2005-03-29 | International Business Machines Corporation | Predictive caching and highlighting of web pages |
US20030145087A1 (en) * | 2002-01-31 | 2003-07-31 | Keller S. Brandon | Generating a list of addresses in a server |
US7174288B2 (en) * | 2002-05-08 | 2007-02-06 | Microsoft Corporation | Multi-modal entry of ideogrammatic languages |
US20030220913A1 (en) * | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US7418494B2 (en) * | 2002-07-25 | 2008-08-26 | Intellectual Ventures Holding 40 Llc | Method and system for background replication of data objects |
CN1635734A (en) * | 2003-12-29 | 2005-07-06 | 北京中视联数字系统有限公司 | A method for receiving network pages by using buffer in digital television data broadcasting system |
US20060155728A1 (en) * | 2004-12-29 | 2006-07-13 | Jason Bosarge | Browser application and search engine integration |
US8370216B2 (en) * | 2005-03-04 | 2013-02-05 | Amazon Technologies, Inc. | Personalized preloading of digital content |
US20060294223A1 (en) * | 2005-06-24 | 2006-12-28 | Microsoft Corporation | Pre-fetching and DNS resolution of hyperlinked content |
GB0517585D0 (en) * | 2005-08-30 | 2005-10-05 | Ramakrishna Madhusudana | Intuitive search which delivers fast results on the mobile phone |
US7747749B1 (en) * | 2006-05-05 | 2010-06-29 | Google Inc. | Systems and methods of efficiently preloading documents to client devices |
US20080201332A1 (en) * | 2007-02-20 | 2008-08-21 | Souders Steven K | System and method for preloading content on the basis of user context |
US20090043741A1 (en) * | 2007-08-09 | 2009-02-12 | Dohyung Kim | Autocompletion and Automatic Input Method Correction for Partially Entered Search Query |
US9002828B2 (en) * | 2007-12-13 | 2015-04-07 | Seven Networks, Inc. | Predictive content delivery |
US8370329B2 (en) * | 2008-09-22 | 2013-02-05 | Microsoft Corporation | Automatic search query suggestions with search result suggestions from user history |
CN101369284B (en) * | 2008-09-28 | 2010-12-22 | 北京搜狗科技发展有限公司 | Method and apparatus for loading web pages |
US8452791B2 (en) * | 2009-01-16 | 2013-05-28 | Google Inc. | Adding new instances to a structured presentation |
CN101807180B (en) * | 2009-02-16 | 2013-06-19 | 宏达国际电子股份有限公司 | Mobile electric device and pretreatment and display method of web page thereof |
CN101877740A (en) * | 2009-04-29 | 2010-11-03 | 宏达国际电子股份有限公司 | Webpage preloading and displaying method and electronic device |
US9436777B2 (en) * | 2009-08-13 | 2016-09-06 | Yahoo! Inc. | Method and system for causing a browser to preload web page components |
-
2011
- 2011-10-20 US US13/278,110 patent/US8612418B2/en active Active
-
2012
- 2012-05-31 WO PCT/US2012/040221 patent/WO2013009405A1/en active Application Filing
- 2012-05-31 CN CN201280034835.8A patent/CN103703456B/en active Active
- 2012-05-31 EP EP12810829.7A patent/EP2732380B1/en active Active
- 2012-05-31 CN CN201610021369.XA patent/CN105701214B/en active Active
Non-Patent Citations (1)
Title |
---|
None * |
Also Published As
Publication number | Publication date |
---|---|
CN103703456B (en) | 2016-02-10 |
CN103703456A (en) | 2014-04-02 |
WO2013009405A1 (en) | 2013-01-17 |
US20130019159A1 (en) | 2013-01-17 |
CN105701214A (en) | 2016-06-22 |
CN105701214B (en) | 2019-07-02 |
EP2732380A1 (en) | 2014-05-21 |
US8612418B2 (en) | 2013-12-17 |
EP2732380A4 (en) | 2015-03-18 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP2732380B1 (en) | Mobile web browser for pre-loading web pages | |
US8386955B1 (en) | User-optimized content for web browsing windows | |
US10812564B1 (en) | Preloading content for requesting applications | |
US20170188213A1 (en) | Message Based Application State and Card Sharing Methods for User Devices | |
US8384726B1 (en) | Selective rendering of off-screen content | |
US10049151B2 (en) | External action suggestions in search results | |
US20130151937A1 (en) | Selective image loading in mobile browsers | |
US8881032B1 (en) | Grouped tab document interface | |
US20150193395A1 (en) | Predictive link pre-loading | |
US20150207854A1 (en) | External application request | |
US10013497B1 (en) | Background reloading of currently displayed content | |
KR20180087456A (en) | Identifying matching applications based on browsing activity | |
US8682851B2 (en) | Device specific folders for bookmark synchronization | |
WO2014023795A1 (en) | Mechanism for adding new search modes to user agent | |
CA2791743C (en) | Private web browsing using encrytion | |
US10082937B2 (en) | Intelligent rendering of webpages | |
US8621381B1 (en) | System and method for adaptive use of keyboard or search term based on recent use | |
TWI519980B (en) | Method and device for displaying web page and computer-readable storage medium | |
KR20140074294A (en) | Efficiently providing data from a virtualized data source | |
EP2998885A1 (en) | Method and device for information search | |
US20180059887A1 (en) | Direct navigation to modal dialogs | |
EP3642727B1 (en) | Resource pre-fetch using age threshold | |
RU2634221C2 (en) | Method and device for drawing presentation of electronic document on screen | |
EP3001311A1 (en) | Method for automatically converting web applications into application that can be installed automatically on a plurality of platforms | |
WO2014062209A1 (en) | System and methods thereof for dynamically updating the contents of a folder on a device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20131223 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20150217 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/30 20060101ALI20150211BHEPIpc: H04L 29/08 20060101ALI20150211BHEPIpc: G06F 17/00 20060101AFI20150211BHEP |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
INTG | Intention to grant announced |
Effective date: 20180627 |
|
GRAJ | Information related to disapproval of communication of intention to grant by the applicant or resumption of examination proceedings by the epo deleted |
Free format text: ORIGINAL CODE: EPIDOSDIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
INTC | Intention to grant announced (deleted) | ||
INTG | Intention to grant announced |
Effective date: 20181130 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EPRef country code: ATRef legal event code: REFRef document number: 1131290Country of ref document: ATKind code of ref document: TEffective date: 20190515 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602012059961Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20190508 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190808Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190908Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190808Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190809 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1131290Country of ref document: ATKind code of ref document: TEffective date: 20190508 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190531Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190531 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20190531 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602012059961Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190531Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508 |
|
26N | No opposition filed |
Effective date: 20200211 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190531 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190531Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190708 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190908 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20120531Ref country code: MTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190508 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230508 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20230530Year of fee payment: 12 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230529Year of fee payment: 12 |
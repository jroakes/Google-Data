KR20150132543A - Estimating visibility of content items - Google Patents
Estimating visibility of content items Download PDFInfo
- Publication number
- KR20150132543A KR20150132543A KR1020157029968A KR20157029968A KR20150132543A KR 20150132543 A KR20150132543 A KR 20150132543A KR 1020157029968 A KR1020157029968 A KR 1020157029968A KR 20157029968 A KR20157029968 A KR 20157029968A KR 20150132543 A KR20150132543 A KR 20150132543A
- Authority
- KR
- South Korea
- Prior art keywords
- determining
- size
- content item
- viewport
- frame
- Prior art date
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G06F17/3089—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
Abstract
방법들, 시스템들 및 컴퓨터 판독가능 저장 매체 상에 인코딩된 컴퓨터 프로그램들을 포함하는 장치로서, 이는 컨텐츠 아이템이 교차-도메인 i프레임(cross-domain iframe)에 포함될 때 컨텐츠 가시성(visibility)을 결정하기 위한 방법을 포함한다. 상기 방법은 뷰포트(viewport)의 사이즈에 대한 외곽 경계(outer bound)를 판독하는 것을 포함하여 브라우져와 관련된 상기 뷰포트의 웹페이지 뷰잉 영역의 사이즈의 제1 추정을 결정하는 단계를 포함한다. 상기 방법은 브라우져로부터 상기 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여 상기 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템의 사이즈에 대한 제2 추정을 결정하는 단계를 더 포함한다. 상기 방법은 스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 판독함으로써 상기 웹페이지 뷰잉 영역에 대한 상기 컨텐츠 아이템의 위치를 결정하는 것을 포함하여 컨텐츠 아이템 가시성을 결정하는 단계를 더 포함한다. 상기 방법은 상기 가시성을 보고하는 단계를 더 포함한다.Apparatus, methods, systems and computer programs encoded on a computer-readable storage medium, the apparatus comprising: means for determining content visibility when a content item is included in a cross-domain iframe; ≪ / RTI > The method includes reading a outer bound for the size of the viewport to determine a first estimate of the size of the web page viewing area of the viewport associated with the browser. The method further includes determining a second estimate of the size of the content item for display in the web page viewing area, including reading i-frame measurements from the browser for the i frame. The method further includes determining content item visibility, including determining the location of the content item for the web page viewing area by reading the location of the viewport and i frame with screen coordinates. The method further includes reporting the visibility.
Description
[관련 출원의 상호 참조][Cross reference of related application]
본 출원은 2013년 3월 18일자로 출원된 미국 가출원 제61/803,060호 및 2013년 3월 28일자로 출원된 미국 출원 제13/852,568호의 우선권을 주장하며, 상기 출원들의 전체 내용은 본 명세서에 참조로서 통합된다.This application claims priority to U.S. Provisional Application No. 61 / 803,060, filed March 18, 2013, and U.S. Serial No. 13 / 852,568, filed March 28, 2013, the entire contents of which are incorporated herein by reference Are incorporated by reference.
[기술분야][TECHNICAL FIELD]
본 명세서는 정보 제시에 관한 것이다.This specification relates to information presentation.
인터넷은 다양한 리소스들 및 다른 컨텐츠로의 액세스를 제공한다. 예를 들어, 비디오 및/또는 오디오 파일들뿐만 아니라 특별한 주제들 또는 특별한 뉴스 기사들에 대한 웹페이지들은 인터넷을 통한 리소스들로서 액세스가능하다. 인터넷으로의 액세스는 또한, 다른 컨텐츠(예컨대, 광고)를 검색하여 사용자에게 제시하기 위한 기회들을 제공한다. 다른 컨텐츠는 개인용 컴퓨터(PC), 스마트폰, 랩탑 컴퓨터, 태블릿 컴퓨터 또는 다른 사용자 디바이스 상에서 사용자에게 제공될 수 있다.The Internet provides access to a variety of resources and other content. For example, web pages for special topics or special news articles as well as video and / or audio files are accessible as resources over the Internet. Access to the Internet also provides opportunities for retrieving and presenting other content (e.g., advertisements) to the user. Other content may be provided to a user on a personal computer (PC), smart phone, laptop computer, tablet computer, or other user device.
사용자 디바이스 상에 제시되는 컨텐츠의 가시성은 사용자 디바이스의 타입 및 컨텐츠가 디스플레이되는 스크린 상의 포지션에 좌우될 수 있다. 가시성은 또한, 컨텐츠가 제시되는 브라우져 또는 다른 어플리케이션의 타입에 좌우될 수 있다.The visibility of the content presented on the user device may depend on the type of user device and the position on the screen where the content is displayed. Visibility may also depend on the type of browser or other application on which the content is presented.
일반적으로, 본 명세서에 기술된 본 발명의 하나의 혁신적인 양상은, 컨텐츠 아이템이 교차-도메인 i프레임에 포함될 때 컨텐츠 가시성을 결정하기 위한 컴퓨터로 구현되는 방법을 포함하는 방법들로 구현될 수 있다. 방법은 뷰포트의 사이즈에 대한 외곽 경계(outer bound)를 판독하는 것을 포함하여 브라우져와 관련된 뷰포트의 웹페이지 뷰잉 영역의 사이즈의 제1 추정을 결정하는 단계를 포함한다. 상기 방법은, 브라우져로부터 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여, 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템의 사이즈에 대한 제2 추정을 결정하는 단계를 더 포함한다. 상기 방법은 스크린 좌표들로 뷰포트 및 i프레임의 위치를 판독함으로써 웹페이지 뷰잉 영역에 대한 컨텐츠 아이템의 위치를 결정하는 것을 포함하여 컨텐츠 아이템 가시성을 결정하는 단계를 더 포함한다. 상기 방법은 상기 가시성을 보고하는 단계를 더 포함한다.In general, one innovative aspect of the invention described herein can be implemented in methods that include a computer-implemented method for determining content visibility when a content item is included in a cross-domain i frame. The method includes determining a first estimate of the size of the web page viewing region of the viewport associated with the browser, including reading the outer bounds of the size of the viewport. The method further includes determining a second estimate of the size of the item of content for display in the web page viewing area, including reading i-frame internal measurements for the i-frame from the browser. The method further includes determining content item visibility, including determining the location of the content item for the web page viewing area by reading the location of the viewport and i frame with screen coordinates. The method further includes reporting the visibility.
이들 및 다른 구현들은 각각 옵션에 따라서는, 다음의 특징들 중 하나 이상을 포함할 수 있다. 상기 제1 추정을 결정하는 단계는 상기 웹페이지 뷰잉 영역의 사이즈로부터 하나 이상의 크롬 요소(chrome element)들의 추정된 사이즈를 감하는 단계(substract)를 포함할 수 있다. 상기 컨텐츠 아이템 가시성을 결정하는 단계는 상기 뷰포트에서 하나 이상의 크롬 요소들의 추정된 사이즈를 보상하는 것을 더 포함할 수 있다. 상기 제1 추정을 결정하는 단계는 상기 뷰포트의 사이즈로부터 브라우져 해더(header)의 추정된 사이즈를 감하는 것을 포함할 수 있다. 상기 제1 추정을 결정하는 단계는 브라우져 해더 및 스크롤바에 대한 추정된 사이즈를 감하는 것을 포함할 수 있다. 상기 제1 추정을 결정하는 단계는 상기 하나 이상의 크롬 요소들의 평균 사이즈를 결정하기 위해 통계적 분석들을 수행하는 것을 더 포함할 수 있다. 상기 제2 추정을 결정하는 단계는 상기 i프레임의 내부 부분과 동일한 사이즈인 것으로 상기 컨텐츠 아이템의 사이즈를 근사화하는 것을 포함할 수 있다. 상기 컨텐츠 아이템의 위치를 결정하는 것은 스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 찾기 위해 상기 브라우져의 API를 이용하는 것을 더 포함할 수 있다. 상기 브라우져는 파이어폭스(firefox) 브라우져이다. 컨텐츠 아이템 가시성을 결정하는 단계는 두 개의 직사각형의 중첩 영역을 결정함으로써 얼마 만큼의 컨텐츠 아이템이 가시적인지를 계산하는 것을 더 포함하는 바, 상기 두 개의 직사각형 중 제1 직사각형은 상기 뷰포트의 위치 및 웹페이지 뷰잉 영역의 추정에 의해 정의되고 제2 직사각형은 i프레임의 위치 및 컨텐츠 아이템의 사이즈에 의해 정의된다. 가시성을 보고하는 단계는 교차-도메인 i프레임에게로의 컨텐츠 아이템의 전달과 관련하여 컨텐츠 아이템이 사용자에게 제시될 때 가시적인지의 여부를 컨텐츠 스폰서에게 보고하는 것을 더 포함할 수 있다. 상기 방법은 컨텐츠 아이템이 교차-도메인 i프레임에 디스플레이되고 있음을 결정하는 것을 더 포함할 수 있다. 상기 컨텐츠 아이템은 광고일 수 있다.These and other implementations may each include one or more of the following features, depending on the option. The determining the first estimate may comprise subtracting an estimated size of one or more chrome elements from the size of the web page viewing region. The step of determining the content item visibility may further comprise compensating for an estimated size of one or more chrome elements in the viewport. The determining the first estimate may include subtracting an estimated size of the browser header from the size of the viewport. The step of determining the first estimate may include subtracting an estimated size for the browser header and the scrollbar. The determining the first estimate may further comprise performing statistical analyzes to determine an average size of the one or more chrome elements. The determining the second estimate may include approximating the size of the content item to be the same size as the inner portion of the i-frame. Determining the location of the content item may further comprise utilizing the browser's API to locate the viewport and i frame with screen coordinates. The browser is a Firefox browser. Wherein the step of determining the content item visibility further comprises calculating how much of the content item is visible by determining the overlap area of the two rectangles, wherein the first one of the two rectangles is located at a position The second rectangle is defined by the estimation of the viewing area and is defined by the position of the i-frame and the size of the content item. Reporting the visibility may further include reporting to the content sponsor whether the content item is visible when presented to the user in connection with the delivery of the content item to the cross-domain i frame. The method may further comprise determining that the content item is being displayed in a cross-domain i frame. The content item may be an advertisement.
일반적으로, 본 명세서에 기술된 본 발명의 다른 혁신적인 양상은, 컴퓨터 판독가능 저장 디바이스에 유형으로 수록되고 명령어들을 포함하는 컴퓨터 프로그램 물을 포함하는 컴퓨터 프로그램 물들로 구현될 수 있다. 명령어들은 하나 이상의 프로세서들에 의해 실행될 때, 프로세서로 하여금, 상기 뷰포트의 사이즈에 대한 외각 경계를 판독하는 것을 포함하여 브라우져와 관련된 뷰포트의 웹페이지 뷰잉 영역의 사이즈의 제1 추정을 결정하고, 브라우져로부터 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여 상기 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템의 사이즈에 대한 제2 추정을 결정하며, 스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 판독함으로써 상기 웹페이지 뷰잉 영역에 대한 컨텐츠 아이템의 위치를 결정하는 것을 포함하여 컨텐츠 아이템 가시성을 결정하고, 그리고 상기 가시성을 보고하도록 한다.In general, other innovative aspects of the invention described herein may be implemented in computer programs, including computer programs, which are typed into a computer readable storage device and include the instructions. The instructions, when executed by one or more processors, cause the processor to determine a first estimate of the size of the web page viewing region of the viewport associated with the browser, including reading the outer bounds for the size of the viewport, determining a second estimate of the size of the content item for display in the web page viewing area, including reading i-frame measurements for the i frame, and reading the position of the viewport and i frame in screen coordinates Determining the location of the content item for the web page viewing area to determine the content item visibility and reporting the visibility.
이들 및 다른 구현들 각각은 옵션에 따라서는, 다음의 특징들 중 하나 이상을 포함할 수 있다. 상기 제1 추정을 결정하는 것은 상기 웹페이지 뷰잉 영역의 사이즈로부터 하나 이상의 크롬 요소들의 추정된 사이즈를 감하는 것을 포함할 수 있다. 컨텐츠 아이템 가시성을 결정하는 것은 상기 뷰포트에서 하나 이상의 크롬 요소들의 추정된 사이즈를 보상하는 것을 더 포함할 수 있다. 상기 제1 추정을 결정하는 것은 상기 뷰포트의 사이즈로부터 브라우져 해더의 추정된 사이즈를 감하는 것을 포함할 수 있다.Each of these and other implementations may, depending on the option, include one or more of the following features. Determining the first estimate may include subtracting an estimated size of one or more chrome elements from a size of the web page viewing region. Determining the content item visibility may further comprise compensating for the estimated size of one or more chrome elements in the viewport. Determining the first estimate may include subtracting an estimated size of the browser header from the size of the viewport.
일반적으로, 본 명세서에 기술된 본 발명의 다른 혁신적인 양상은 하나 이상의 프로세서들, 및 명령어들을 포함하는 하나 이상의 메모리 요소들로 구성된 시스템을 포함하는 시스템들로 구현될 수 있다. 명령어들은 실행될 때, 하나 이상의 프로세서들로 하여금, 뷰포트의 사이즈에 대한 외곽 경계를 판독하는 것을 포함하여 브라우져와 관련된 상기 뷰포트의 웹페이지 뷰잉 영역의 사이즈의 제1 추정을 결정하고, 브라우져로부터 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여 상기 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템의 사이즈에 대한 제2 추정을 결정하며, 스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 판독함으로써 상기 웹페이지 뷰잉 영역에 대한 컨텐츠 아이템의 위치를 결정하는 것을 포함하여 컨텐츠 아이템 가시성을 결정하고, 그리고 상기 가시성을 보고하도록 한다.In general, other innovative aspects of the invention described herein may be implemented in systems comprising one or more processors, and systems comprised of one or more memory elements including instructions. The instructions, when executed, cause the one or more processors to determine a first estimate of the size of the web page viewing region of the viewport associated with the browser, including reading outbound bounds for the size of the viewport, Determining a second estimate of a size of a content item for display in the web page viewing area, including reading the i-frame internal measurements, and reading the position of the viewport and i frame in screen coordinates, Determining the location of the content item for the viewing area, and determining the content item visibility and reporting the visibility.
이들 및 다른 구현들 각각은 옵션에 따라서는, 다음의 특징들 중 하나 이상을 포함할 수 있다. 상기 제1 추정을 결정하는 것은 상기 웹페이지 뷰잉 영역의 사이즈로부터 하나 이상의 크롬 요소들의 추정된 사이즈를 감하는 것을 포함할 수 있다. 컨텐츠 아이템 가시성을 결정하는 것은 상기 뷰포트에서 하나 이상의 크롬 요소들의 추정된 사이즈를 보상하는 것을 더 포함할 수 있다.Each of these and other implementations may, depending on the option, include one or more of the following features. Determining the first estimate may include subtracting an estimated size of one or more chrome elements from a size of the web page viewing region. Determining the content item visibility may further comprise compensating for the estimated size of one or more chrome elements in the viewport.
특별한 구현들이 다음 장점들 중 하나 이상을 실현할 수 있다. 뷰포트 사이즈 및 교차-도메인 프레임(예컨대, i프레임) 내부로부터의 뷰포트 내의 컨텐츠 아이템(예컨대, 광고)이 위치에 대한 추정들 및/또는 측정들이 이루어질 수 있다. 측정들은 탑 윈도우와의 교차-도메인 프레임 통신들이 없이 특정 브라우져들 상에서 이루어질 수 있다. 컨텐츠 아이템들(예컨대, 광고들)이 가시적일 때를 결정하는 것은 시장 효율을 증가시킬 수 있다. 컨텐츠 아이템들의 뷰들에 명백하게 관심있는 브랜드 관련 컨텐츠 스폰서들(예컨대, 광고주들)은 자주 보이는 컨텐츠 아이템 배치(oft-viewed content item placement)들을 위해 기꺼이 더 많이 지불할 용의가 있다. 정보가 직접적으로 결정될 수 있기 때문에, 컨텐츠 아이템들의 가시성을 추정하는 것은 어떤 기술 자체를 자발적으로 전개(deploy)하기 위해 퍼블리셔(publisher)들에 의존함이 없이 이루어질 수 있다. 컨텐츠 아이템 가시성을 추정/측정하는 것과 관련된 계산들은 리소스들 또는 브라우져 성능에 상당히 부담을 줌(taxing)이 없이 그리고 쇠퇴하고 있는(in decline) 기술들(예컨대, 플래시)에 의존함이 없이 발생할 수 있다.Specific implementations may realize one or more of the following advantages. Estimates and / or measurements may be made of the position of the content item (e.g., advertisement) in the viewport from within the viewport size and cross-domain frame (e.g., i frame). Measurements can be made on specific browsers without cross-domain frame communications with the top window. Determining when content items (e.g., advertisements) are visible may increase market efficiency. Brand related content sponsors (e.g., advertisers) who are clearly interested in views of content items are willing to pay more for often-viewed content item placements. Since the information can be determined directly, estimating the visibility of the content items can be done without relying on publishers to spontaneously deploy a technology by itself. The calculations associated with estimating / measuring the content item visibility can occur without taxing the resources or browser performance and without relying on in decline techniques (e.g., Flash) .
본 명세서에 기술된 본 발명의 하나 이상의 구현들의 세부사항들은 첨부 도면들 및 하기 설명에 제시된다. 본 발명의 다른 특징들, 양상들 및 장점들은 설명, 도면들 및 특허청구범위로부터 분명해질 것이다.The details of one or more implementations of the invention described herein are set forth in the accompanying drawings and the description below. Other features, aspects and advantages of the present invention will become apparent from the description, drawings and claims.
도 1은 컨텐츠를 전달하기 위한 예시적인 환경의 블록도이다.
도 2는 예시적인 브라우져 윈도우 및 이에 포함된 요소들을 도시한다.
도 3은 브라우져 윈도우를 포함하는 예시적인 스크린 영역을 도시한다.
도 4는 교차-도메인 i프레임에 포함된 컨텐츠 아이템에 대한 컨텐츠 가시성을 결정하기 위한 예시적인 프로세스의 순서도이다.
도 5는 본 발명에 기술된 방법들, 시스템들 및 프로세스들을 구현하기 위해 이용될 수 있는 예시적인 컴퓨터 시스템의 블록도이다.
다양한 도면들에서 유사한 도면 숫자들 및 부호들은 유사한 요소들을 나타낸다.Figure 1 is a block diagram of an exemplary environment for delivering content.
Figure 2 illustrates an exemplary browser window and the elements involved therein.
Figure 3 illustrates an exemplary screen area including a browser window.
4 is a flowchart of an exemplary process for determining content visibility for a content item included in a cross-domain i frame.
5 is a block diagram of an exemplary computer system that may be utilized to implement the methods, systems, and processes described herein.
Similar reference numerals and symbols in the various figures indicate like elements.
본 명세서는 예컨대, 직접적인 측정들이 가능하지 않을 때 컨텐츠 아이템들의 가시성을 측정하기 위한 방법들, 프로세스들 및 시스템들을 기술한다. 예를 들어, 일부 기존 종래의 기법들은 동일한-도메인 프레임들로부터의 측정들 또는 다른 직접적인 측정 기법들과 같은 직접적인 측정들을 수반할 수 있다. 본 명세서에 기술된 기법들은 예컨대, 직접적인 측정들이 가능하지 않은 시나리오들에서 필요한 추정들을 이용하는 것을 포함하여 직접적인 측정을 시뮬레이션할 수 있다.The present specification describes, for example, methods, processes and systems for measuring the visibility of content items when direct measurements are not possible. For example, some existing conventional techniques may involve direct measurements, such as measurements from the same-domain frames or other direct measurement techniques. The techniques described herein can simulate direct measurements, including, for example, using the necessary estimates in scenarios where direct measurements are not possible.
일부 구현들에서, 컨텐츠 아이템의 가시성의 추정을 결정하는 것이 이루어질 수 있다. 추정은 브라우져의 뷰포트의 사이즈, 컨텐츠 아이템의 사이즈, 및 브라우져의 뷰포트에 대한 컨텐츠 아이템의 위치에 근거할 수 있다. 측정된 그리고 추정된 값들은 컨텐츠 아이템이 뷰 내에 있는지의 여부(그리고 얼마 만큼의 아이템이 뷰 내에 있는지)를 결정하기 위해 이용될 수 있다. 그러나, 컨텐츠 아이템을 렌더링하는 코드가 예컨대, 컨텐츠 아이템을 내장한 웹 페이지로부터 구별되는 도메인을 갖는 프레임(예컨대, i프레임) 내로부터 실행되도록 될 때 이 접근법은 어려울 수 있다. 예를 들어, 일부 브라우져 보안 제약들은 하나 이상의 이들 사이즈들 및 위치들에로의 액세스를 방지할 수 있다.In some implementations, it may be possible to determine an estimate of the visibility of the content item. Estimation may be based on the size of the browser's viewport, the size of the content item, and the location of the content item relative to the browser's viewport. The measured and estimated values can be used to determine whether the content item is in the view (and how many items are in the view). However, this approach may be difficult when the code that renders the content item is to be executed from within a frame (e.g., an i-frame) having a domain that is distinct from a web page that embeds the content item, for example. For example, some browser security constraints may prevent access to one or more of these sizes and locations.
일부 브라우져들은 컨텐츠 아이템 가시성을 측정/추정하기 위해 교차-도메인 프레임 보안 제약들을 피하며 작업하는 데(working around) 유용한 사유 API(proprietary API)들을 포함할 수 있다. 이들이 사유이기 때문에, 이들은 어떤 월드 와이드 웹 컨소시엄(W3C) 사양에 포함되지 않거나 또는 어떤 컴퓨팅 브라우져들에 의해 제공되지 않을 수 있지만, 일부 브라우져들 내의 가시성 추정 해법들을 제공할 수 있다.Some browsers may include proprietary APIs that are useful for working around cross-domain frame security constraints to measure / estimate content item visibility. Because of these reasons, they can provide visibility estimation solutions in some browsers, although they may not be included in any World Wide Web Consortium (W3C) specification or provided by some computing browsers.
일반적으로, 컨텐츠 아이템의 가시성의 추정은 뷰포트의 사이즈, 컨텐츠 아이템의 사이즈 및 뷰포트에 대한 컨텐츠 아이템의 위치의 측정들에 근거할 수 있다. 컨텐츠 아이템의 사이즈는 예컨대, 컨텐츠 아이템 프레임들이 거의 항상 컨텐츠 아이템에 맞추어(fit) 지도록 사이즈화되기 때문에 직접적으로 추정 또는 측정될 수 있다. 예를 들어, 퍼블리셔가 300 x 250 픽셀(300-by-250 pixel) 컨텐츠 아이템을 원하는 경우, 컨텐츠 아이템에 대한 코드는 동일한 규모들을 갖는 직사각형 프레임을 도출(draw)할 수 있다. 일부 구현들에서, 소정 프레임은 가장 현대의 브라우져들에서 이용가능한 표준 WC3-사양 값들일 수 있는 window.innerWidth 및 window.innerHeight와 같은 속성들을 판독함으로써 자신의 사이즈를 측정할 수 있다.In general, the estimation of the visibility of the content item may be based on measurements of the size of the viewport, the size of the content item, and the location of the content item with respect to the viewport. The size of the content item may be estimated or measured directly, for example, since the content item frames are almost always sized to fit the content item. For example, if a publisher desires a 300-by-250 pixel content item, the code for the content item may draw a rectangular frame with the same scales. In some implementations, a given frame may measure its size by reading properties such as window.innerWidth and window.innerHeight, which may be standard WC3-spec values available in most modern browsers.
뷰포트의 사이즈는 다양한 방식들로 추정될 수 있다. 일부 구현들에서, 뷰포트의 사이즈는 예컨대, window.outerWidth 및 window.outerHeight을 측정함으로써 예컨대, 외각 경계에 근거하여 추정될 수 있다. 이 호출들은 가장 현대의 브라우져들에서 이용가능하다. 윈도우 높이 및 폭 값들은 웹 컨텐츠를 제시하기 위해 이용가능한 공간을 감소시킬 수 있는 요소들에 의해 점유되는 영역을 포함할 수 있다. 이들 요소들의 예들은 스크롤바, URL 바들, 북마커 바, 및 다른 브라우져 "크롬" 요소들을 포함한다. 진정한 웹페이지 뷰잉 영역 예컨대, 컨텐츠가 가시적인 영역은 이들 크롬 요소들을 포함하지 않는다.The size of the viewport can be estimated in various ways. In some implementations, the size of the viewport can be estimated, for example, based on the outer boundary by measuring window.outerWidth and window.outerHeight. These calls are available in most modern browsers. The window height and width values may include areas occupied by elements that may reduce the space available to present web content. Examples of these elements include scroll bars, URL bars, bookmark bars, and other browser "chrome" elements. A real web page viewing area, e.g., a content visible area, does not include these chrome elements.
일부 구현들에서, 웹페이지 뷰잉 영역의 더욱 정확한 추정들이 예컨대, 크롬 요소들의 측정 또는 추정된 사이즈들에 근거하여 정정 인자들을 이용함으로써 달성될 수 있다. 예를 들어, 브라우져 해더에 의해 점유되는 영역에 대한 정정들이 이루어질 수 있고, 상기 브라우져 해더는, 종종 에러(예컨대, 웹페이지 뷰잉 영역과 브라우져 윈도우 사이의 불일치)의 가장 큰 소스인 크롬 요소일 수 있다. 일부 구현들에서, 브라우져 해더 사이즈는 window.outerHeight의 측정 이력(historical measurement)에 근거할 수 있는 바, 예컨대 시간에 걸쳐 수집된 통계적 데이터에 근거할 수 있다. 이들 값들은 예컨대, document.documentElement.clientHeight를 이용하여 뷰포트 높이의 직접적인 측정들에 비교될 수 있다. 이 두 값들 사이의 차이는 예컨대, 많은 경우들에서 해더 사이즈를 근사화할 수 있는 에러를 표시할 수 있다.In some implementations, more accurate estimates of the web page viewing area can be achieved, for example, by using correction factors based on measurements or estimated sizes of chrome elements. For example, corrections to the area occupied by the browser header may be made, and the browser header may be a chrome element that is often the largest source of errors (e.g., discrepancies between the web page viewing area and the browser window) . In some implementations, the browser header size may be based on a historical measurement of window.outerHeight, e.g., based on statistical data collected over time. These values can be compared to direct measurements of the viewport height, for example, using document.documentElement.clientHeight. The difference between these two values can indicate, for example, an error that can approximate the header size in many cases.
일부 구현들에서, 해더 사이즈 정보는 운영 체제 및 브라우져 버전의 서로 다른 조합들에 대해 수집 및 저장될 수 있다. 저장되는 값들은 예컨대, 보수적인 추정(conservative estimate)들을 이용하여 결정될 수 있다. 즉, 샘플링된 해더들 중 적어도 80퍼센트의 사이즈를 나타내는 80퍼센타일(80th percentile) 해더 사이즈가 저장될 수 있다. 다른 임계들이 선택될 수 있다. 일부 구현들에서, 퍼센타일들 또는 브라우져 버전 및 운영 체제(OS) 버전의 각각의 주요 조합의 일부 다른 통계적 그룹화에 근거한 값들이 선택될 수 있다. 예를 들어, 저장된 값들은 80퍼센타일 샘플링에 근거할 수 있는 바, 즉 각각의 주요 OS-브라우져 조합에 대해, 측정된 해더들의 80%보다 큰 높이인 높이 값이 선택될 수 있다. window.outerHeight로부터 이 값을 감하는 것은 뷰포트 사이즈의 더욱 양호한 추정을 제공할 수 있고, 이 계산은 컨텐츠 아이템 가시서을 모니터링하는 동안 발생될 수 있다.In some implementations, the header size information may be collected and stored for different combinations of operating system and browser versions. The values to be stored can be determined, for example, using conservative estimates. That is, an 80th percentile header size that represents at least 80 percent of the sampled headers may be stored. Other thresholds may be selected. In some implementations, values based on percentages or some other statistical grouping of each major combination of browser version and operating system (OS) version may be selected. For example, the stored values may be based on 80 percentile sampling, i.e., for each major OS-browser combination, a height value that is greater than 80% of the measured headers may be selected. subtracting this value from window.outerHeight may provide a better estimate of the viewport size and this calculation may occur while monitoring the content item visibility.
예컨대, 뷰포트에 대한 컨텐츠 아이템의 위치는 다양한 방식들로 결정될 수 있다. 일부 구현들에서, 컨텐츠 아이템의 위치가 직접적으로 측정될 수 없을 때, 브라우져로 제공되는 사유 속성들 또는 다른 특징들이 이용될 수 있다. 일례로, 파이어폭스-특정적 API(Firefox-specific API)들은 window.screenX, window.screenY, window.mozInnerScreenX, 및 window.mozInnerScreenY를 계산하기 위해 이용될 수 있다. ScreenX 및 스크린은 모니터 스크린 좌표들로 뷰포트의 위치(예컨대, 좌측 상단 코너)를 제공할 수 있고, mozInnerScreenX/Y은 스크린 자표로 프레임의 위치(예컨대, 좌측 상단 코너)를 제공할 수 있다. 이 값들을 뷰포트 좌표들로 정규화(normalizing)하는 것은 프레임 위치로부터 뷰포트 위치를 감함으로써 행해질 수 있다. 예를 들어, 스크린 좌표들에서 브라우져의 위치가 (200, 500)이고 프레임의 위치가 (250, 510)이면, 컨텐츠 아이템이 뷰포트 좌표들에서 (50, 10)에 위치된다는 결정이 이루어질 수 있다.For example, the location of the content item with respect to the viewport may be determined in various manners. In some implementations, when the location of a content item can not be directly measured, proprietary attributes or other features provided in the browser may be used. For example, Firefox-specific APIs can be used to compute window.screenX, window.screenY, window.mozInnerScreenX, and window.mozInnerScreenY. The ScreenX and the screen may provide the position of the viewport (e.g., the upper left corner) with the monitor screen coordinates and the mozInnerScreenX / Y may provide the position of the frame with the screen index (e.g., the upper left corner). Normalizing these values to the viewport coordinates can be done by subtracting the viewport position from the frame position. For example, if the position of the browser in the screen coordinates is (200, 500) and the position of the frame is (250, 510), then a determination can be made that the content item is located at (50, 10) in the viewport coordinates.
얼마 만큼의 컨텐츠 아이템이 가시적인지를 계산하는 것은 서로 다른 방식들로 달성될 수 있다. 일부 구현들에서, 두 개의 직사각형들(예컨대, 브라우져 윈도우 및 프레임)의 중첩의 영역은 사용자에게 가시적인 컨텐츠 아이템의 부분을 표시할 수 있다. 일부 구현들에서, 이 영역을 전체 컨텐츠 아이템의 영역으로 나누는 것은 가시적인 컨텐츠 아이템의 퍼센티지를 제공할 수 있다.Computing how much content items are visible can be accomplished in different ways. In some implementations, the overlapping area of the two rectangles (e.g., browser window and frame) may display a portion of the content item visible to the user. In some implementations, dividing this region into regions of the entire content item may provide a percentage of the visible content item.
일부 구현들에서, 시간 요소가 가시성을 확립하기 위해 이용될 수 있다. 예를 들어, 일부 시스템들은 컨텐츠 아이템 가시성에 대해 3밀리초 표준 측정을 이용하며, 컨텐츠 아이템의 50%는 보여지는 것으로서 카운트하기 위해 가시적이어야 한다. 일부 구현들에서, 표준은 컨텐츠 아이템이 가시적으로 고려되기 위해 일초 동안 50% 가시적이어야 함을 지정할 수 있다. 이 가시성 표준을 확립하기 위해, 상기 계산은 매초 반복될 수 있다. 어떤 두개의 연속적인 계산들이 컨텐츠 아이템이 적어도 50% 볼수 있음(viewable)을 나타내는 경우, 컨텐츠 아이템이 보인 것으로 가정될 수 있다. In some implementations, a temporal element may be used to establish visibility. For example, some systems may use 3 millisecond standard measurements for content item visibility, and 50% of the content items should be visible to count as being visible. In some implementations, the standard may specify that the content item should be 50% visible for one second to be considered visually. To establish this visibility standard, the calculation can be repeated every second. If any two consecutive calculations indicate that the content item is at least 50% viewable, then the content item may be assumed to be visible.
일부 구현들에서, 본 명세서에 기술된 기법들은 컨텐츠 아이템 가시성을 측정/예측하는 것에 추가적으로 다른 목적들을 위해 이용될 수 있다. 예를 들어, 기법들은 또한, 예컨대, 페이지 로드 시간에서의 가시성 측정들에 근거하여, 페이지의 상단 절반(above the fold) 검출을 위해 이용될 수 있다. 다른 예에서, 기법들은 또한, 예컨대 절대 보여지지 않는 컨텐츠 아이템 배치들을 식별함으로써, 스팸 검출을 위해 이용될 수 있다.In some implementations, the techniques described herein may be used for other purposes in addition to measuring / predicting content item visibility. For example, techniques may also be used for detecting the above half of the page, for example, based on visibility measurements at the page load time. In another example, techniques may also be used for spam detection, e.g., by identifying content item placements that are never seen.
일부 구현들에서, 더욱 정확한 포지션 추정들이, 스크롤바들의 폭을 측정하고 그 다음, 적용가능할 때 그 사이즈를 정정함으로써 달성될 수 있다. 예를 들어, 스크롤바 폭의 측정은 자바스크립트 방법을 이용하여 또는 다른 방식들로 이루어질 수 있다.In some implementations, more accurate position estimates can be achieved by measuring the width of the scroll bars and then correcting the size when applicable. For example, the measurement of scrollbar width can be done using JavaScript methods or in other ways.
일부 구현들에서, 해더 높이는 서로 다른 방식들로 추정될 수 있다. 예를 들어, 추정들은 더욱 보수적인 값들(예컨대, 90퍼센타일), 더욱 진보적인 값들(예컨대, 60퍼센타일), 고정 값(flat value)(예컨대, 150 픽셀들)을 이용할 수 있다. (제한된 스크린 사이즈를 갖는 디바이스들(예컨대, 모바일 디바이스들) 상에 제시하기 위한 것들과 같은) 일부 구현들에서, 사용되는 추정들은 어떤 수 또는 제한된 수의 크롬 특징들을 고려하지(account for) 않을 수 있다.In some implementations, the header heights can be estimated in different ways. For example, estimates may use more conservative values (e.g., 90 percent), more progressive values (e.g., 60 percent), and flat values (e.g., 150 pixels). In some implementations (such as those for presenting on devices with limited screen size (e.g., mobile devices)), the estimates used may not account for any number or a limited number of chrome features have.
도 1은 컨텐츠를 전달하기 위한 예시적이 환경(100)의 블록도이다. 예시적인 환경(100)은 컨텐츠에 대한 요청들에 응답하여 컨텐츠를 선택 및 제공하기 위한 컨텐츠 관리 시스템(110)을 포함한다. 예시적인 환경(100)은 로컬 영역 네트워크(LAN), 광역 네트워크(WAN), 인터넷 또는 이들의 조합과 같은 네트워크(102)를 포함한다. 네트워크(102)는 컨텐츠 소스들(104), 사용자 디바이스들(106), 컨텐츠 스폰서들(108)(예컨대, 광고주들), 퍼블리셔들(109) 및 컨텐츠 관리 시스템(110)을 연결한다. 예시적인 환경(100)은 수 천개의 컨텐츠 소스들(104), 사용자 디바이스들(106), 컨텐츠 스폰서들(108) 및 퍼블리셔들(109)을 포함할 수 있다.1 is a block diagram of an
컨텐츠 소스(104)는 네트워크(102)를 통해 제공될 수 있는 어떤 데이터에 대한 저장소(repository)일 수 있다. 컨텐츠는 단지 몇가지 예를 들어, 광고들, HTML 컨텐츠, 텍스트 컨텐츠, 이미지들 및 비디오와 같은 다양한 형태들의 컨텐츠를 포함할 수 있다. 개별적인 컨텐츠 아이템들은 단어들, 구들, 이미지들, 비디오 및 소리들을 포함할 수 있고, (메타-정보 하이퍼링크들과 같은)내장된 정보 및/또는 (JavaScript™ 스크립트들과 같은) 내장된 명령어들을 포함할 수 있다.The
사용자 디바이스(106)는 사용자의 제어 하에 있고 네트워크(102)를 통해 리소스들을 요청 및 수신할 수 있는 전자 디바이스이다. 예시적인 사용자 디바이스들(106)은 개인용 컴퓨터(PC)들, 하나 이상의 프로세서들이 내장되거나 결합된 텔레비젼들, 셋-탑 박스들, 모바일 통신 디바이스들(예컨대, 스마트폰들), 태블릿 컴퓨터들, 및 네트워크(102)를 통해 데이터를 전송 및 수신할 수 있는 다른 디바이스들을 포함한다. 사용자 디바이스(106)는 전형적으로, 네트워크(102)를 통해 데이터를 전송 및 수신하는 것을 지원하기 위해 웹 브라우져와 같은 하나 이상의 사용자 어플리케이션들을 포함한다.The
사용자 디바이스(106)는 컨텐츠 소스들(104)로부터 컨텐츠를 요청할 수 있다. 또한, 컨텐츠 아이템을 나타내는 데이터는 사용자 디바이스(106)에 의해 제시하기 위해 사용자 디바이스(106)에 제공될 수 있다.The
이 컨텐츠 아이템들의 검색을 지원하기 위해, 환경(100)은, 예컨대 컨텐츠 소스들(104)에 포함된 소정 컨텐츠 아이템과 관련된 선택 기준(예컨대, 키워드들)을 이용하여 컨텐츠 아이템들을 식별하고 컨텐츠 아이템들을 인덱싱하는 검색 시스템(112)을 포함할 수 있다. In order to assist in the retrieval of these content items, the
사용자 디바이스들(106)은 사용자 디바이스(106) 상에 제시하기 위한 컨텐츠 아이템들의 위치를 찾기 위한 질의와 같은 검색 질의들(116)을 네트워크(102)를 통해 검색 시스템(112)에 제출할 수 있다. 이에 응답하여, 검색 시스템(112)은 검색 질의(116)에 관련된 컨텐츠 아이템들을 식별하기 위해 컨텐츠 소스들에 액세스한다. 컨텐츠가 사용자 디바이스(106)에 의해 요청될 때, 컨텐츠 관리 시스템(110)은 컨텐츠에 대한 요청을 수신한다.The
요청에 포함된 데이터에 적어도 부분적으로 근거하여, 컨텐츠 관리 시스템(110)은 종래의 검색 결과들과 함께 요청에 응답하여 제공되기에 적격인 컨텐츠("적격 컨텐츠 아이템(eligible content item)들")를 선택할 수 있다. 예를 들어, 적격 컨텐츠 아이템들은 식별된 공간들의 특성들과 매치하는 특성들을 가지는 적격 광고들을 포함할 수 있다. 일부 구현들에서, 적격 컨텐츠 아이템들의 선택은 인구 학적 신호(demographic signal)들 및 거동 신호(behavioral signal)들과 같은 사용자 신호들에 더 좌우될 수 있다.Based at least in part on the data contained in the request, the content management system 110 may provide content ("eligible content items") that is eligible to be provided in response to the request, along with conventional search results You can choose. For example, the eligible content items may include eligible advertisements having characteristics matching the characteristics of the identified spaces. In some implementations, the selection of eligible content items may be more dependent on user signals, such as demographic signals and behavioral signals.
컨텐츠 관리 시스템(110)은 경매의 결과에 적어도 부분적으로 근거하여 (또는 일부 다른 선택 프로세스에 의해) 제시하기 위해 제공될 적격 컨탠츠 아이템들을 선택할 수 있다. 예를 들어, 적격 컨텐츠 아이템들에 대해, 컨텐츠 관리 시스템(110)은 컨텐츠 스폰서들(108)로부터 오퍼(offer)들을 수신하고, 수신된 오퍼들에 적어도 부분적으로 근거하여(예컨대, 경매의 결과에서 가장 고입찰자에 근거하여 또는 공개 예약(open reservation)들을 만족하는 것과 관계된 기준들과 같은 다른 기준에 근거하여)수신된 요청들에 대응하는 컨텐츠를 할당할 수 있다. 오퍼들은 컨텐츠 스폰서들이 이들의 컨텐츠의 제시(또는 선택 또는 컨텐츠와의 다른 인터랙션)을 위해 기꺼이 지불할 용의가 있는 금액(amount)들을 나타낸다. 예를 들어, 오퍼는 컨텐츠 스폰서가 컨텐츠 아이템의 매 1000개의 임프레션(impression)들(즉, 제시들)에 대해 기꺼이 지불할 용의가 있는 금액(CPM 입찰로 지칭됨)을 특정할 수 있다. 대안적으로는, 오퍼는 컨텐츠 스폰서가 컨텐츠 아이템의 선택(즉, 클릭-스루) 또는 컨텐츠 아이템의 선택을 뒤따르는 변환을 위해 지불할 용의가 있는 금액(예컨대, CPE(cost per engagement))를 특정할 수 있다. 예를 들어, 선택된 컨텐츠 아이템은 오퍼들에 단독으로 근거하여 또는 컨텐츠 성능(performance)으로부터 도출되는 품질 스코어들과 같은 하나 이상의 인자들 및/또는 다른 인자들에 의해 배가되는 각각의 컨텐츠 스폰서의 오퍼들에 근거하여 결정될 수 있다.The content management system 110 may select eligible content items to be provided to present based at least in part on the results of the auction (or by some other selection process). For example, for eligible content items, the content management system 110 may receive offers from the content sponsors 108 and may, based at least in part on the received offers (e.g., It may allocate content corresponding to received requests based on the highest bidder or based on other criteria such as criteria related to satisfying open reservations. Offers represent amounts that content sponsors are willing to pay for presenting their content (or other interaction with the selection or content). For example, an offer may specify an amount (referred to as CPM bid) that the content sponsor is willing to pay for every 1000 impressions (i.e., suggestions) of the content item. Alternatively, the offer may include an amount of money (e.g., cost per engagement) that the content sponsor is willing to pay for a conversion following the selection of the content item (i.e., click-through) Can be specified. For example, the selected content item may be associated with each content sponsor's offerings multiplied by one or more factors and / or other factors, such as quality scores derived solely on the offerings or from content performance . ≪ / RTI >
컨텐츠 관리 시스템(110)은 복수의 엔진들을 포함할 수 있다. 예를 들어, 가시성 추정 엔진(121)은 사용자 디바이스(106) 상에 제시되는 컨텐츠 아이템의 가시성을 추정할 수 있다.The content management system 110 may include a plurality of engines. For example, the
사용자가 제공된 컨텐츠 아이템에 관계된 특별한 거래(transaction) 또는 행동(action)을 수행할 때 변환이 발생되는 것이라 할 수 있다. 변환을 구성하는 것은 경우마다 다양할 수 있고, 다양한 방식들로 결정될 수 있다. 예를 들어, 사용자가 컨텐츠 아이템(예컨대, 광고)을 클릭할 때, 웹페이지에 참조될 때, 그리고 그 웹페이지를 떠나기 전에 그곳에서 구매를 완료(consummate)할 때 변환이 발생할 수 있다. 변환은 또한, 백서(white paper)를 다운로드하는 것, 웹사이트의 적어도 소정 깊이까지 네비게이션하는 것, 적어도 특정한 수의 웹페이지들을 보는 것, 웹 사이트 또는 웹페이지 상에서 적어도 미리 결정된 시간량을 소모하는 것 또는 웹사이트에 등록하는 것 또는 미디어를 경험하는 것과 같은 어떤 측정가능한 또는 관찰가능한 사용자의 행동으로 컨텐츠 제공자에 의해 정의될 수 있다. 변환을 구성하는 다른 행동들이 역시 이용될 수 있다.It can be said that a conversion occurs when a user performs a particular transaction or action related to the provided content item. The composition of the transformations can vary from case to case and can be determined in various ways. For example, a conversion may occur when a user clicks on a content item (e.g., an advertisement), when it is referenced to a web page, and consummates a purchase there before leaving the web page. The conversion may also include downloading a white paper, navigating to at least a predetermined depth of a web site, viewing at least a certain number of web pages, consuming at least a predetermined amount of time on a web site or web page Or may be defined by the content provider in some measurable or observable user behavior, such as registering on a web site or experiencing media. Other behaviors that make up the transformation can also be used.
도 2는 예시적인 브라우져 윈도우(202) 및 이에 포함된 요소들을 도시한다. 예를 들어, 브라우져 윈도우(102)는 (예컨대, 메뉴들, 툴바들 및 다른 해더 요소들을 포함하는) 브라우져 해더(204), 웹페이지 뷰잉 영역(206) 및 스크롤바(208a 및 208b)를 포함한다. 일부 구현들에서, 브라우져 윈도우(202)는, 브라우져 해더(204 및 208a-208b)와 함께 웹페이지 뷰잉 영역(206) 및 따라서 컨텐츠가 제시되는 영역의 사이즈를 감소시킬 수 있는 다른 요소들을 포함할 수 있다. 따라서, 이 예에서, 브라우져 윈도우(202)의 사이즈는 웹페이지 뷰잉 영역(206)의 사이즈의 정확한 표시를 제공하지 않을 수 있다. 도 2의 예가 브라우져들 및 브라우져 뷰잉 영역들과 관련되지만, 동일한 종류의 기법들이 웹페이지들 및 웹페이지 뷰잉 영역들에 대해 이용될 수 있다.FIG. 2 illustrates an exemplary browser window 202 and the elements contained therein. For example, the
웹페이지 뷰잉 영역(206)의 더욱 정확한 사이즈를 결정하기 위해, 예컨대, 브라우져 윈도우(202) 및 다른 정보의 알려진 또는 추정된 사이즈에 관한 조정들이 이루어질 수 있다. 일부 구현들에서, 조정들은 정보가 이용가능한 일반 및/또는 주요 브라우져들에 대한 알려진 메뉴/툴바 및 스크롤바 요소들의 사이즈들에 근거할 수 있다. 예를 들어, 서로 다른 브라우져들 및 운영 체제들의 버전들에 대해 실험들을 실행하고 메뉴들/툴바들 및 스크롤바들의 사이즈들 및 포지션들을 샘플링함으로써, 정보는 웹페이지 뷰잉 영역을 추정하기 위해 브라우져 윈도우 사이즈에 대한 실시간 조정들을 결정할 시 추후 사용하기 위해 저장될 수 있다.Adjustments may be made, for example, to the known or estimated size of the browser window 202 and other information to determine a more accurate size of the web page viewing area 206. In some implementations, adjustments may be based on known menu / toolbar and scrollbar elements sizes for common and / or major browsers for which information is available. For example, by running experiments on versions of different browsers and operating systems and sampling the sizes and positions of the menus / toolbars and scrollbars, the information is stored in a browser window size And may be stored for later use in determining real-time adjustments.
일부 구현들에서, 웹페이지 뷰잉 영역은 브라우져 윈도우 속성들(예컨대, outerWidth 및 outerHeight)을 이용하여 추정될 수 있다. 이는, 심지어 속성들이 교차-도메인 프레임으로부터 비롯되더라도, 모든 인터페이스 요소들(예컨대, 메뉴들, 툴바들, 스크롤바들, 등)을 포함하여 브라우져 윈도우의 외곽 폭 및 높이를 식별할 수 있다. 예를 들어, 많은 주요 부라우져들은 웹페이지 뷰잉 영역을 대략적으로(roughly) 추정하기 위해 브라우져 윈도우의 폭 및 높이를 식별할 수 있는 속성들 또는 다른 정보를 제공할 수 있다. 그러나, 브라우져 윈도우 사이즈는 툴바들, 스크롤바들 및 윈도우 내의 어떤 다른 비컨텐츠 요소들을 포함한다. 이러한 모두를 포괄하는 사이즈는 일반적으로, (예컨대, 광고를 포함하는) 실제 컨텐츠가 렌더링되는 웹페이지 뷰잉 영역보다 크다.In some implementations, the web page viewing area may be estimated using browser window properties (e.g., outerWidth and outerHeight). This can identify the outer width and height of the browser window, including all of the interface elements (e.g., menus, toolbars, scrollbars, etc.), even if the attributes come from a cross-domain frame. For example, many major routers can provide properties or other information that can identify the width and height of the browser window to roughly estimate the web page viewing area. However, the browser window size includes toolbars, scrollbars, and any other non-content elements in the window. The size encompassing all of these is generally larger than the web page viewing area where the actual content (e.g., including the advertisement) is rendered.
컨텐츠 아이템의 가시성을 결정함에 있어서의 다른 인자는 뷰포트 내의 컨텐츠 아이템 포지션이다. 일례에서, 컨텐츠 아이템의 포지션은 컨텐츠 아이템을 포함하는 프레임(예컨대, i프레임)의 x/y 좌표에 근거하여 결정될 수 있다. 예를 들어, 뷰포트 내의 광고의 포지션은 광고와 관련된 프레임의 x,y 좌표를 브라우져 윈도우의 x/y 좌표와 비교함으로써 결정될 수 있다.Another factor in determining the visibility of a content item is the content item position in the viewport. In one example, the position of the content item may be determined based on the x / y coordinates of the frame containing the content item (e.g., i frame). For example, the position of the ad in the viewport can be determined by comparing the x, y coordinates of the frame associated with the ad to the x / y coordinates of the browser window.
도 3은 브라우져 윈도우를 포함하는 예시적인 스크린 영역(302)을 도시한다. 예를 들어, 스크린 영역(302)은 상기에 기술된 브라우져 윈도우(202)를 포함할 수 있다. 일부 구현들에서, 일부 운영 체제들 및/또는 브라우져들은 예컨대, 스크린 좌표들의 관점에서 브라우져 윈도우의 하나 이상의 코너 좌표들을 식별하는 속성들(예컨대, window.screenX 및 window.screenY)을 제공할 수 있다. 예를 들어, 속성들은 브라우져 윈도우(202)의 좌측 상부 코너의 x,y 좌표들(예컨대, 좌표들(xB, yB))로서 브라우져 윈도우 좌표들(304)을 식별할 수 있다.FIG. 3 illustrates an exemplary screen area 302 including a browser window. For example, the screen area 302 may include the browser window 202 described above. In some implementations, some operating systems and / or browsers may provide properties (e.g., window.screenX and window.screenY) that identify, for example, one or more corner coordinates of the browser window in terms of screen coordinates. For example, the attributes may identify browser window coordinates 304 as x, y coordinates (e.g., coordinates (x B , y B )) in the upper left corner of the browser window 202.
일부 구현들에서, 일부 운영 체제들 및/또는 브라우져들에 의해 제공되는 다른 속성들(예컨대, window.mozInnerScreenX/Y)은 예컨대, 또한 스크린 좌표들의 관첨에서 프레임의 하나 이상의 코너 좌표들을 식별할 수 있다. 예를 들어, 속성들은 프레임(308)(예컨대, i프레임)의 좌측 상부 코너의 x,y 좌표들(예컨대, (xF, yF))로서 프레임 좌표들(306)을 식별할 수 있다. 브라우져 윈도우 좌표들(304) 및 프레임 좌표들(306) 각각이 스크린 좌표계에 대한 것이기 때문에, 프레임(308)의 포지션은 브라우져 윈도우(202)에 대하여 결정될 뿐만아니라 웹페이지 뷰잉 영역(206)에 대하여 추정될 수 있다. 이 기법은 예컨대, 브라우져 윈도우 내의 광고의 포지션을 결정하기 위해 이용될 수 있다.In some implementations, some of the operating systems and / or other properties (e.g., window.mozInnerScreenX / Y) provided by the browsers may identify one or more corner coordinates of the frame, for example, . For example, the attributes may identify frame coordinates 306 as x, y coordinates (e.g., (x F , y F )) in the upper left corner of frame 308 (e.g., i frame). The position of the frame 308 is determined not only for the browser window 202 but also for the web page viewing region 206 because the browser window coordinates 304 and the frame coordinates 306 are each for the screen coordinate system . This technique can be used, for example, to determine the position of an advertisement in a browser window.
일부 구현들에서, 브라우져 윈도우(302)에 대한 프레임(308)의 포지션은 브라우져 윈도우 좌표들(304) 및 프레임 좌표들(306)의 차이를 획득함으로써 추론될 수 있다. 예를 들어, 프레임(308)은 차이(예컨대, (xF-xB, yF-yB))로서 계산될 수 있다.In some implementations, the position of the frame 308 relative to the browser window 302 may be inferred by obtaining the difference between the browser window coordinates 304 and the frame coordinates 306. For example, frame 308 may be calculated as a difference (e.g., (x F -x B , y F -y B )).
일부 구현들에서, 프레임(308)의 포지션은 웹페이지 뷰잉 영역(206)의 좌측 상부 코너에 대하여 프레임(308)을 추정하기 위해 상기에 기술된 해더 메뉴/툴바 사이즈들의 추정들에 근거하여 조정될 수 있다. 예를 들어, 웹페이지 뷰잉 영역 좌표들(310)은, 브라우져 윈도우 좌표들(304)을 이용하여 그리고 브라우져 해더(204)의 높이를 감하여 추정될 수 있다.In some implementations, the position of the frame 308 may be adjusted based on estimates of the header menu / toolbar sizes described above to estimate the frame 308 for the upper left corner of the web page viewing area 206 have. For example, web page viewing area coordinates 310 can be estimated using browser window coordinates 304 and by subtracting the height of the
일부 구현들에서, 프레임(308)의 포지션은 프레임 좌표들(306)(예컨대, (xF, yF))을 획득하기 위해 마우스 이벤트를 발생시키는 것(firing)과 같은 다른 기법들을 이용하여 결정될 수 있다. 예를 들어, 청취자(listener)는 addEventListener 대신 attachEvent를 이용하여 프레임의 문서에 첨부될 수 있다. 프레임 내로부터 fireEvent('onmousemove')를 호출하는 것은 새롭게 추가된 청취자를 트리거링할 수 있다. 이벤트의 xCLIENT 및 yCLIENT는 프레임으로부터 마우스의 오프셋일 수 있고, 이벤트의 xSCREEN, ySCREEN은 스크린 상의 자신의 위치이다. 스크린 및 클라이언트 값들의 차이는 결과적으로, 가시성을 결정하기 위해 필요한 예컨대, In some implementations, the position of frame 308 is determined using other techniques, such as firing mouse events to obtain frame coordinates 306 (e.g., (x F , y F )) . For example, a listener can be attached to a document in a frame using attachEvent instead of addEventListener. Calling fireEvent ('onmousemove') from within a frame can trigger a newly added listener. The x CLIENT and y CLIENT of the event can be the offsets of the mouse from the frame, and the x SCREEN and y SCREEN of the event are their positions on the screen. The difference between the screen and client values may result, for example,
xF = xSCREEN - xCLIENT x F = x SCREEN - x CLIENT
yF = ySCREEN - yCLIENT y F = y SCREEN - y CLIENT
가 되게 한다..
도 4는 교차-도메인 i프레임에 포함된 컨텐츠 아이템에 대한 컨텐츠 가시성을 결정하기 위한 예시적인 프로세스(400)의 순서도이다. 일부 구현들에서, 컨텐츠 관리 시스템(110) 및 가시성 추정 엔진(121)은 하나 이상의 프로세서들에 의해 실행되는 명령어들을 이용하여 프로세스(400)의 스테이지들을 수행할 수 있다. 도 1-3은 프로세스(400)의 단계들을 수행하기 위한 예시적인 구조들을 제공하기 위해 이용된다.4 is a flowchart of an
브라우져와 관련된 뷰포트의 웹페이지 뷰잉 영역의 사이즈에 대한 제1 추정이 결정된다(단계(402)). 예를 들어, 컨텐츠 관리 시스템(110)은 웹페이지 뷰잉 영역(206)의 사이즈를 결정할 수 있다. 일부 구현들에서, 제1 추정을 결정하는 것은 웹페이지 뷰잉 영역의 사이즈로부터 하나 이상의 크롬 요소들의 추정된 사이즈를 감하는 것을 포함할 수 있다. 일부 구현들에서, 제1 추정을 결정하는 것은 웹페이지 뷰포트의 사이로부터 브라우져 해더의 추정된 사이즈를 감하는 것을 포함할 수 있다. 일부 구현들에서, 제1 추정을 결정하는 것은 브라우져 해더 및 스크롤바에 대한 추정된 사이즈를 감하는 것을 포함할 수 있다.A first estimate of the size of the web page viewing area of the viewport associated with the browser is determined (step 402). For example, the content management system 110 may determine the size of the web page viewing area 206. In some implementations, determining the first estimate may include subtracting the estimated size of one or more chrome elements from the size of the web page viewing area. In some implementations, determining the first estimate may include subtracting the estimated size of the browser header from between the web page viewports. In some implementations, determining the first estimate may include subtracting the estimated size for the browser header and the scrollbar.
일부 구현들에서, 제1 추정을 결정하는 것은 하나 이상의 크롬 요소들의 평균(average)(또는 평균값(mean)과 같은 다른 수학적 구성) 사이즈를 결정하기 위해 통계적 분석을 수행하는 것을 더 포함할 수 있다. 예를 들어, 브라우져 높이들의 사이즈들을 포함하는 샘플들은 운영 체제들 및 브라우져들의 쌍들에 근거하여 시간에 걸쳐 수집될 수 있고, 정보가 필요할 때까지 저장될 수 있다.In some implementations, determining the first estimate may further comprise performing a statistical analysis to determine an average (or other mathematical configuration, such as an average) of one or more chrome elements. For example, samples containing sizes of browser heights may be collected over time based on operating systems and pairs of browsers, and stored until information is needed.
브라우져로부터 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템(예컨대, 광고)의 사이즈에 대한 제2 추정이 결정된다(단계(404)).A second estimate of the size of a content item (e.g., an advertisement) for display in a web page viewing area is determined (step 404), including reading i-frame internal measurements for i frames from the browser.
일부 구현들에서, 제2 추정을 결정하는 것은 컨텐츠 아이템의 사이즈를 i프레임의 내부 부분과 동일한 사이즈인 것으로서 근사화하는 것을 포함할 수 있다. 일부 구현들에서, 컨텐츠 아이템의 위치를 결정하는 것은 또한, 스크린 좌표들로 뷰포트 및 i프레임의 위치를 찾기 위해 브라우져(예컨대, 파이어폭스)의 API를 이용하는 것을 포함한다.In some implementations, determining the second estimate may include approximating the size of the content item as being the same size as the inner portion of the i frame. In some implementations, determining the location of the content item also involves using a browser (e.g., Firefox) API to locate the viewport and i frame in screen coordinates.
컨텐츠 아이템 가시성이 결정되는 바, 이는 스크린 좌표들로 뷰포트 및 i프레임의 위치를 판독함으로써 웹페이지 뷰잉 영역에 대한 컨텐츠 아이템의 위치를 결정하는 것을 포함한다(단계(406)).Content item visibility is determined, which includes determining the location of the content item for the web page viewing area by reading the location of the viewport and i frame in screen coordinates (step 406).
일부 구현들에서, 컨텐츠 아이템 가시성을 결정하는 것은 또한, 뷰포트 내의 하나 이상의 크롬 요소들의 추정된 사이즈를 포함하고 이를 보상할 수 있다. 예를 들어, 가시성 추정 엔진(121)은 컨텐츠 아이템의 가시성이 브라우져 해더(204) 및 스크롤바들(208a-208b)의 사이즈만큼 감소된 뷰포트의 사이즈임을 결정할 수 있다. In some implementations, determining the content item visibility may also include and compensate for the estimated size of one or more chrome elements in the viewport. For example, the
일부 구현들에서, 컨텐츠 아이템 가시성을 결정하는 것은 또한, 두 개의 직사각형들의 중첩의 영역을 결정함으로써 얼마 만큼의 컨텐츠 아이템이 가시적인지를 계산하는 것을 더 포함하는 바, 상기 두 개의 직사각형 중 제1 직사각형은 브라우져 뷰포트의 위치 및 뷰라우져 뷰잉 영역의 추정에 의해 정의되고, 제2 직사각형은 i프레임의 위치 및 컨텐츠 아이템의 사이즈에 의해 정의된다. In some implementations, determining the content item visibility further includes calculating how much content item is visible by determining the area of overlap of the two rectangles, wherein the first of the two rectangles The position of the browser viewport and the view-through view area estimation, and the second rectangle is defined by the position of the i-frame and the size of the content item.
가시성이 보고된다(단계(408)). 예를 들어, 컨텐츠 관리 시스템(110)은 컨텐츠 아이템과 관련된 컨텐츠 스폰서(108)에 컨텐츠 아이템의 가시성에 관한 정보를 제공할 수 있다.Visibility is reported (step 408). For example, the content management system 110 may provide information about the visibility of the content item to the
일부 구현들에서, 프로세스(400)는 컨텐츠 아이템이 교차-도메인 i프레임에 디스플레이되고 있음을 결정하는 것을 더 포함한다. 예를 들어, 컨텐츠 관리 시스템(110)은 직접적인 측정들이 가능하지 않을 때 컨텐츠의 가시성을 추정하기만 하면 된다.In some implementations, the
일부 구현들에서, 가시성을 보고하는 것은 또한, 컨텐츠 아이템이 교차-도메인 i프레임으로의 컨텐츠 아이템의 전달과 관련하여 사용자에게 제시될 때 가시적인지의 여부를 컨텐츠 스폰서에게 보고하는 것을 포함한다. 예를 들어, 컨텐츠 관리 시스템(110)은 컨텐츠 스폰서의 컨텐츠 아이템(예컨대, 광고)이 가시적이거나 가시적이지 않음을 컨텐츠 스폰서(108)에 보고할 수 있다.In some implementations, reporting the visibility also includes reporting to the content sponsor whether the content item is visible when presented to the user in connection with the delivery of the content item to the cross-domain i frame. For example, the content management system 110 may report to the
도 5는 본 명세서에 기술된 시스템들 및 방법들을 구현하기 위해 클라이언트로서 또는 복수의 서버들 중 서버로서 이용될 수 있는 예시적인 컴퓨팅 디바이스들(500, 550)의 블록도이다. 컴퓨팅 디바이스(500)는 랩탑들, 데스크탑들, 워크스테이션들, 개인용 디지털 단말기(PDA)들, 서버들, 블레이드 서버들, 메인프레임들 및 다른 적절한 컴퓨터들과 같은 다양한 형태의 디지털 컴퓨터들을 나타내는 것으로 의도된다. 컴퓨팅 디바이스(500)는 또한, 텔레비젼들, 또는 하나 이상의 프로세서들이 내장된 또는 부착된 다른 전자 디바이스들과 같은 어떤 다른 전형적인 비모바일 디바이스들을 나타내는 것으로 의도된다. 컴퓨팅 디바이스(550)는 PDA들, 셀룰러 전화기들, 스마트폰들 및 다른 컴퓨팅 디바이스들과 같은 다양한 형태의 모바일 디바이스들을 나타내는 것으로 의도된다. 여기서 보여지는 컴포넌트들, 이들의 연결들 및 관계들, 및 이들의 기능들은 단지 예시로 여겨지며, 본 명세서에서 기술되고 그리고/또는 청구되는 방법들의 구현들을 제한하는 것으로 여겨지지 않는다.5 is a block diagram of
컴퓨팅 디바이스(500)는 프로세서(502), 메모리(504), 저장 디바이스(506), 메모리(504) 및 고속 확장 포트(510)에 연결된 고속 인터페이스(508), 및 저속 버스(514) 및 저장 디바이스(506)에 연결된 저속 인터페이스(512)를 포함한다. 컴포넌트들(502, 504, 506, 508, 510, 및 512) 각각은 다양한 버스들을 이용하여 상호연결되며, 공통 마더보드 상에 또는 다른 방식들로 적절하게 고정될 수 있다. 프로세서(502)는 고속 인터페이스(508)에 결합된 디스플레이(516)와 같은 외부 입력/출력 디바이스 상의 GUI에 대해 그래픽 정보를 디스플레이하기 위해 메모리(504) 또는 저장 디바이스(506)에 저장된 명령어들을 포함하여, 컴퓨팅 디바이스(500) 내에서 실행하기 위한 명령어들을 프로세스할 수 있다. 다른 구현들에서, 복수의 프로세서들 및/또는 복수의 버스들은 복수의 메모리들 및 메모리 타입들과 함께 적절하게 이용될 수 있다. 또한, 복수의 컴퓨팅 디바이스들(500)이 연결되며, 각각의 디바이스는 필요한 동작들의 부분들을 (예컨대, 서버 뱅크, 블레이드 서버들의 그룹 또는 멀티-프로세서 시스템으로서) 제공한다.The
메모리(504)는 컴퓨팅 디바이스(500) 내에 정보를 저장한다. 일 구현에서, 메모리(504)는 컴퓨터 판독가능 매체이다. 일 구현에서, 메모리(504)는 휘발성 메모리 유닛 또는 유닛들이다. 다른 구현에서, 메모리(504)는 비휘발성 메모리 유닛 또는 유닛들이다.The
저장 디바이스(506)는 컴퓨팅 디바이스(500)에 대한 매스 저장을 제공할 수 있다. 일 구현에서, 저장 디바이스(506)는 컴퓨터 판독가능 매체이다. 다양한 서로 다른 구현들에서, 저장 디바이스(506)는 플로피 디스크 디바이스, 하드 디스크 디바이스, 광학 디스크 디바이스 또는 테이프 디바이스, 플래시 메모리 또는 다른 유사한 고체 상태 메모리 디바이스 또는, 저장 영역 네트워크 또는 다른 구성들 내의 디바이스들을 포함하는 디바이스들의 어레이일 수 있다. 일 구현에서, 컴퓨터 프로그램 물은 정보 캐리어에 유형으로 수록된다. 컴퓨터 프로그램 물은 명령어들을 포함하며, 상기 명령어들은 실행될 때 상기 기술된 방법들과 같은 하나 이상의 방법들을 수행한다. 정보 캐리어는 메모리(504), 저장 디바이스(506) 또는 프로세서(502) 상의 메모리와 같은 컴퓨터 또는 머신 판독가능 매체이다.The
고속 제어기(508)는 컴퓨팅 디바이스(500)에 대한 대역폭 집약적 동작들을 관리하며, 저속 제어기(512)는 적은 대역폭 집약적 동작(lower bandwidth-intensive operation)들을 관리한다. 이러한 의무(duty)들의 할당은 단지 예시적일 뿐이다. 일 구현에서, 고속 제어기(508)는 메모리(504), (예컨대, 그래픽 프로세서 또는 가속도계를 통해) 디스플레이(516)에 결합되고 다양한 확장 카드들(미도시)을 받아들일 수 있는 고속 확장 포트들(510)에 결합된다. 상기 구현에서, 저속 제어기(512)는 저장 디바이스(506) 및 저속 확장 포트(514)에 결합된다. 다양한 통신 포트들(예컨대, USB, 블루투스, 이더넷, 무선 이더넷)을 포함하는 저속 확장 포트는 키보드, 포인팅 디바이스, 스캐너와 같은 하나 이상의 입력/출력 디바이스들에 또는, 예컨대 네트워크 어댑터를 통해 스위치 또는 라우터와 같은 네트워킹 디바이스에 결합될 수 있다.The
컴퓨팅 디바이스(500)는 도면에 도시된 바와 같이 다수의 서로 다른 형태들로 구현될 수 있다. 예를 들어, 이는 표준 서버(520)로서 또는 이러한 서버들의 그룹에 복수번 구현될 수 있다. 이는 또한, 랙(rack) 서버 시스템(524)의 일부로서 구현될 수 있다. 추가적으로, 이는 랩탑 컴퓨터(522)와 같은 개인용 컴퓨터로 구현될 수 있다. 대안적으로는, 컴퓨팅 디바이스(500)로부터의 컴포넌트들은 디바이스(500)와 같은 모바일 디바이스(미도시) 내의 다른 컴포넌트들과 결합될 수 있다. 이러한 디바이스들 각각은 컴퓨팅 디바이스(500, 550) 중 하나 이상을 포함할 수 있고, 전체 시스템은 서로와 통신하는 복수의 컴퓨팅 디바이스들(500, 550)로 구성될 수 있다.The
컴퓨팅 디바이스(550)는 다른 컴포넌트들 중에서도 특히, 프로세서(552), 메모리(564), 디스플레이(554)와 같은 입력/출력 디바이스, 통신 인터페이스(566) 및 송수신기(568)를 포함한다. 디바이스(550)에는 또한, 추가적인 저장을 제공하기 위해 마이크로-드라이브 또는 다른 디바이스와 같은 저장 디바이스가 제공될 수 있다. 컴포넌트들(550, 552, 564, 554, 566, 및 568) 각각은 다양한 버스들을 이용하여 상호연결되고, 여러 컴포넌트들은 공통 마더보드 상에 또는 다른 방식들로 적절하게 고정될 수 있다.The
프로세서(552)는 메모리(564)에 저장된 명령어들을 포함하여, 컴퓨팅 디바이스(550) 내에서 실행하기 위한 명령어들을 프로세스할 수 있다. 프로세서는 또한, 별개의 아날로그 및 디지털 프로세서들을 포함할 수 있다. 프로세서는 예컨대, 사용자 인터페이스들, 디바이스(550)에 의해 실행되는 어플리케이션 및 디바이스(550)에 의한 무선 통신의 제어와 같이, 디바이스(550)의 다른 컴포넌트들의 조직화(coordination)를 제공할 수 있다.The
프로세서(552)는 디스플레이(554)에 결합된 제어 인터페이스(558) 및 디스플레이 인터페이스(556)를 통해 사용자와 통신할 수 있다. 디스플레이(554)는 예컨대, TFT LCD 디스플레이 또는 OLED 디스플레이 또는 다른 적절한 디스플레이 기술일 수 있다. 디스플레이 인터페이스(556)는 사용자에게 그래픽 및 다른 정보를 제시하기 위해 디스플레이(554)를 구동하기 위한 적절한 회로망을 포함할 수 있다. 제어 인터페이스(558)는 사용자로부터 커맨드들을 수신하고 이들을 프로세서(552)에 제출하기 위해 변환할 수 있다. 추가적으로, 외부 인터페이스(562)가 다른 디바이스들과의 디바이스(550)의 근거리 통신(near area communication)을 할 수 있게 하도록 프로세서(552)와의 통신에 제공될 수 있다. 외부 인터페이스(562)는 예컨대, (예컨대, 도킹 절차를 통해) 유선 통신을 또는 (예컨대, 블루투스 또는 다른 이러한 기술들을 통해) 무선 통신을 제공할 수 있다.The
메모리(564)는 컴퓨팅 디바이스(550) 내에 정보를 저장한다. 일 구현에서, 메모리(564)는 컴퓨터 판독가능 매체이다. 일 구현에서, 메모리(564)는 휘발성 메모리 유닛 또는 유닛들이다. 다른 구현에서, 메모리(564)는 비휘발성 메모리 유닛 또는 유닛들이다. 확장 메모리(574)가 또한, 제공되며, 예컨대, 가입자 식별 모듈(SIM) 카드 인터페이스를 포함할 수 있는 확장 인터페이스(572)를 통해 디바이스(550)에 연결될 수 있다. 이러한 확장 메모리(574)는 디바이스(550)에 대한 추가적인(extra) 저장 공간을 제공할 수 있거나 또는 디바이스(550)에 대한 어플리케이션들 또는 다른 정보를 또한 저장할 수 있다. 특히, 확장 메모리(574)는 상기에 기술된 프로세스들을 수행 또는 보충하기 위한 명령어들을 포함할 수 있고, 보안 정보 또한 포함할 수 있다. 따라서, 예컨대, 확장 메모리(574)는 디바이스(550)에 대한 보안 모듈로서 제공될 수 있고, 디바이스(550)의 보안 사용을 허가하는 명령어들로 프로그래밍될 수 있다. 추가적으로, 보안 어플리케이션들이, 해킹불가능한 방식으로 SIM 카드 상에 식별 정보를 배치하는 것과 같이, 추가적인 정보와 함께 SIM 카드를 통해 제공될 수 있다.The
메모리는 하기에 논의되는 바와 같이 예컨대, 플래시 메모리 및/또는 MRAM 메모리를 포함할 수 있다. 일 구현에서, 컴퓨터 프로그램 물은 정보 캐리어에 유형으로 수록된다. 컴퓨터 프로그램 물은 명령어들을 포함하며, 상기 명령어들은 실행될 때 상기 기술된 방법들과 같은 하나 이상의 방법들을 수행한다. 정보 캐리어는 메모리(564), 저장 디바이스(576) 또는 프로세서(552) 상의 메모리와 같은 컴퓨터 또는 머신 판독가능 매체이다.The memory may comprise, for example, flash memory and / or MRAM memory as discussed below. In one implementation, the computer program material is typed into an information carrier. The computer program product includes instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer or machine readable medium, such as a
디바이스(550)는 필요한 경우 다지털 신호 프로세싱 회로망을 포함할 수 있는 통신 인터페이스(566)를 통해 무선으로 통신할 수 있다. 통신 인터페이스(566)는 다른 것들 중에서도 특히, GSM 음성 호출들, SMS, EMS 또는 MMS 메시징, CDMA, TDMA, PDC, WCDMA, CDMA2000 또는 GPRS와 같은 다양한 모드들 또는 프로토콜들 하의 통신들을 제공할 수 있다. 이러한 통신은 예컨대, 무선 주파수 송수신기(568)를 통해 발생될 수 있다. 추가적으로, 단거리 통신은 예컨대, 블루투스, 와이파이 또는 다른 이러한 송수신기(미도시)를 이용하여 발생될 수 있다. 추가적으로, GPS 수신기 모듈(570)은 디바이스(550) 상에서 실행되는 어플리케이션들에 의해 적절하게 사용될 수 있는 추가적인 무선 데이터를 디바이스(550)에 제공할 수 있다.The
디바이스(550)는 또한, 사용자로부터 발화 정보를 수신하고 이를 이용가능한 디지털 정보로 변환할 수 있는 오디오 코덱(560)을 이용하여 들을 수 있게(audibly) 통신할 수 있다. 마찬가지로, 오디오 코덱(560)은 예컨대 디바이스(550)의 해드셋에서 가령, 스피커를 통해, 사용자로부터 가청 사운드를 생성할 수 있다. 이러한 사운드는 음성 전화 호출들로부터의 사운드를 포함할 수 있고, 레코딩된 사운드(예컨대, 음성 메시지들, 음악 파일들, 등)를 포함할 수 있고, 그리고 또한, 디바이스(550) 상에서 동작하는 어플리케이션들에 의해 생성되는 사운드를 포함할 수 있다.The
컴퓨팅 디바이스(550)는 도면에 도시된 바와 같이 다수의 서로 다른 형태들로 구현될 수 있다. 예를 들어, 이는 셀룰러 전화기(580)로서 구현될 수 있다. 이는 또한, 스마트폰(582), 개인용 디지털 단말기(PDA) 또는 다른 모바일 디바이스의 일부로서 구현될 수 있다.The
본 명세서에 기술된 시스템들 및 기법들의 다양한 구현들은 디지털 전자 회로망, 집적 회로망, 특별하게 설계된 ASIC(주문형 집적 회로들), 컴퓨터 하드웨어, 펌웨어, 소프트웨어, 및/또는 이들의 조합들로 실현될 수 있다. 이 다양한 구현들은 저장 시스템, 적어도 하나의 입력 디바이스 및 적어도 하나의 출력 디바이스로부터 데이터 및 명령어들을 수신하고 이들에 데이터 및 명령어들을 전송하도록 결합된, 특수용 또는 범용일 수 있는 적어도 하나의 프로그래밍가능 프로세서를 포함하는 프로그래밍가능 시스템 상에서 실행가능 및/또는 해석가능한 하나 이상의 컴퓨터 프로그램들로의 구현을 포함할 수 있다.Various implementations of the systems and techniques described herein may be realized with digital electronic networks, integrated circuits, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and / or combinations thereof . These various implementations include at least one programmable processor, which may be special purpose or general purpose, coupled to receive data and instructions from a storage system, at least one input device, and at least one output device and to transmit data and instructions to them To one or more computer programs that are executable and / or interpretable on a programmable system.
(프로그램들, 소프트웨어, 소프트웨어 어플리케이션들 또는 코드로도 알려진) 이 컴퓨터 프로그램들은 프로그램가능한 프로세서에 대한 머신 명령어들을 포함하며, 상위 계층 절차 및/또는 객체 지향 프로그래밍 언어로 그리고/또는 어셈블리/머신 언어로 구현될 수 있다. 다른 프로그래밍(예컨대, 기능적 프로그래밍, 로직적 프로그램 또는 다른 프로그래밍) 패러다임들이 이용될 수 있다. 본 명세서에 사용된 용어들 "머신 판독가능 매체", "컴퓨터 판독가능 매체"는 머신 판독가능 신호로서 머신 명령어들을 수신하는 머신 판독가능 매체를 포함하여, 프로그램가능 프로세서에 머신 명령어들 및/또는 데이터를 제공하기 위해 사용되는 어떤 컴퓨터 프로그램 물, 장치 및/또는 디바이스(예컨대, 자기 디스크들, 광학 디스크들, 메모리, 프로그램가능 로직 디바이스(PLD)들)를 나타낸다. 용어 "컴퓨터 판독가능 신호"는 프로그램가능 프로세서에 머신 명령어들 및/또는 데이터를 제공하기 위해 사용되는 어떤 신호를 나타낸다.These computer programs (also known as programs, software, software applications, or code) include machine instructions for a programmable processor and may be implemented in higher layer procedures and / or object-oriented programming languages and / or in assembly / . Other programming (e.g., functional programming, logic programming, or other programming) paradigms may be utilized. The terms "machine-readable medium", "computer-readable medium", as used herein, include machine-readable media for receiving machine instructions as a machine-readable signal to cause a machine-readable medium to store machine instructions and / Devices, and / or devices (e.g., magnetic disks, optical disks, memory, programmable logic devices (PLDs)) that are used to provide a computer program product. The term "computer readable signal" refers to any signal that is used to provide machine instructions and / or data to a programmable processor.
사용자와의 인터랙션을 제공하기 위해, 본 명세서에 기술된 시스템들 및 기법들은, 사용자에게 정보를 디스플레이하기 위한 디스플레이 디바이스(예컨대, CRT 또는 LCD 모니터) 및 사용자가 컴퓨터에 입력을 제공할 수 있게 하는 키보드 및 포인팅 디바이스(예컨대, 마우스 또는 트랙볼)를 구비한 컴퓨터 상에서 구현될 수 있다. 다른 종류의 디바이스들이 마찬가지로 사용자와의 인터랙션을 제공하기 위해 사용될 수 있는 바, 예를들어, 사용자에게 제공되는 피드백은 감각적 피드백(예컨대, 시각적 피드백, 청각적 피드백 또는 촉각적 피드백)의 어떤 형태일 수 있고, 사용자로부터의 입력은 음향, 스피치 또는 촉각적 입력을 포함하는 어떤 형태로든 수신될 수 있다.To provide for interaction with a user, the systems and techniques described herein may be implemented as a display device (e.g., a CRT or LCD monitor) for displaying information to a user and a keyboard And a pointing device (e.g., a mouse or trackball). Other types of devices may likewise be used to provide interaction with the user, for example, the feedback provided to the user may be some form of sensory feedback (e.g., visual feedback, auditory feedback or tactile feedback) And the input from the user may be received in any form including acoustic, speech or tactile input.
본 명세서에 기술된 시스템들 및 기법들은 컴퓨팅 시스템으로 구현될 수 있고, 상기 컴퓨팅 시스템은 백 엔드 컴포넌트(예컨대, 데이터 서버)를 포함하거나 또는 미들웨어 컴포넌트(예컨대, 어플리케이션 서버)를 포함하거나 또는 프론트 엔드 컴포넌트(예컨대, 그래픽 사용자 인터페이스 또는 웹 브라우져 - 이를 통해 사용자가 본 명세서에 기술된 시스템들 및 기법들의 구현과 인터랙션할 수 있음 - 를 구비한 클라이언트 컴퓨터)를 포함하거나 또는, 이러한 백 엔드, 미들웨어, 프론트 엔드 컴포넌트들의 어떤 조합을 포함한다. 시스템의 컴포넌트들은 디지털 데이터 통신(예컨대, 통신 네트워크)의 어떤 형태 또는 매체에 의해 상호연결될 수 있다. 통신 네트워크들의 예들은 로컬 영역 네트워크("LAN"), 광역 네트워크("WAN") 및 인터넷을 포함한다.The systems and techniques described herein may be implemented as a computing system, which may include a back-end component (e.g., a data server) or may include a middleware component (e.g., an application server) (E.g., a client computer having a graphical user interface or web browser - through which a user may interact with the implementations of the systems and techniques described herein) - or may include such a back end, middleware, front end Includes any combination of components. The components of the system may be interconnected by some form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN") and the Internet.
컴퓨팅 시스템은 클라이언트들 및 서버들을 포함할 수 있다. 클라이언트 및 서버는 일반적으로, 서로로부터 원격이며, 전형적으로, 통신 네트워크를 통해 인터랙션한다. 클라이언트 및 서버의 관계는 각각의 컴퓨터들 상에서 실행되고 서로에 대해 클라이언트-서버 관계를 가지는 컴퓨터 프로그램들에 의해 발생된다.The computing system may include clients and servers. Clients and servers are typically remote from each other and typically interact through a communication network. The client and server relationships are generated by computer programs that run on each computer and have a client-server relationship to each other.
본 명세서가 많은 특정 구현 세부사항들을 포함하지만, 이들은 어떤 발명 또는 청구될 수 있는 것의 범위에 대한 제한들로 고려되어서는 안되며, 오히려 특별한 발명들의 특별한 구현들에 특정할 수 있는 특징들의 설명들로서 고려되어야 한다. 별개의 구현들의 맥락에서 본 명세서에 기술된 특정 특징들은 또한, 단일 구현에 결합하여 구현될 수 있다. 역으로, 단일 구현의 맥락에서 기술된 다양한 특징들은 또한, 개별적으로 복수의 구현들로 또는 어떤 적절한 서브조합으로 구현될 수 있다. 더욱이, 비록 특징들이 특정 조합들에서 역할하는 것으로 상기에 기술될 수 있고 심지어 초기에 이러하게 청구될 수 있지만, 청구된 조합으로부터의 하나 이상의 특징들은 일부 경우들에서, 상기 조합으로부터 삭제(excise)될 수 있고, 청구된 조합은 서브조합 또는 서브조합의 변형으로 유도될 수 있다.While the specification contains many specific implementation details, they should not be construed as limitations on the scope of what may be claimed or claimed, but rather should be construed as illustrative of features which may be specific to particular implementations of the specific inventions . Certain features described herein in the context of separate implementations may also be implemented in combination in a single implementation. Conversely, various features described in the context of a single implementation may also be implemented individually in multiple implementations or in any suitable subcombination. Moreover, although one or more features from the claimed combination may, in some cases, be excluded from the combination, even though the features may be described above as acting in certain combinations and may even be claimed initially, And the claimed combination may be derived from a variation of the subcombination or subcombination.
유사하게, 동작들이 도면들에서 특별한 순서로 도시되지만, 이는 바람직한 결과들을 달성하기 위해, 이러한 동작들이 도시된 특별한 순서 또는 순차적인 순서로 수행되어야 하거나 또는 모든 예시된 동작들이 수행되어야 함을 요하는 것으로 해석되어서는 안된다. 특정한 상황들에서, 멀티태스킹 및 병렬 프로세싱이 장점적일 수 있다. 더욱이, 상기 기술된 구현들에서의 다양한 시스템 컴포넌트들의 분리가 모든 구현들에서 그러한 분리를 요하는 것으로서 해석되어서는 안되며, 기술된 프로그램 컴포넌트들 및 시스템들은 일반적으로, 단일 소프트웨어 물에 함께 통합되거나 또는 복수의 소프트웨어 물들 내로 패키징될 수 있음이 이해되어야만 한다.Similarly, although operations are shown in a particular order in the figures, it should be understood that these operations may be performed in a particular order or sequential order as shown, or all of the illustrated operations must be performed, in order to achieve the desired results It should not be interpreted. In certain situations, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the above-described implementations should not be interpreted as requiring such separation in all implementations, and the described program components and systems are generally integrated into a single software product, Lt; RTI ID = 0.0 > software. ≪ / RTI >
따라서, 본 발명의 특별한 구현들이 기술되었다. 다른 구현들이 다음의 특허 청구 범위 내에 있다. 일부 경우들에서, 특허 청구 범위에 기재된 동작들은 상이한 순서로 수행될 수 있으며 여전히 바람직한 결과들을 달성할 수 있다. 추가적으로, 첨부 도면들에 도시된 프로세스들은 바람직한 결과들을 달성하기 위해 반드시, 도시된 특별한 순서 또는 순차적인 순서를 요하지 않는다. 특정한 구현들에서, 멀티태스킹 및 병렬 프로세싱이 장점적일 수 있다.Thus, specific embodiments of the present invention have been described. Other implementations are within the scope of the following claims. In some cases, the operations described in the claims may be performed in a different order and still achieve the desired results. Additionally, the processes illustrated in the accompanying drawings do not necessarily require the particular order or sequential order shown to achieve the desired results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (20)
뷰포트(viewport)의 사이즈에 대한 외곽 경계(outer bound)를 판독하는 것을 포함하여 브라우져와 관련된 상기 뷰포트의 웹페이지 뷰잉 영역의 사이즈의 제1 추정을 결정하는 단계와;
브라우져로부터 상기 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여 상기 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템의 사이즈에 대한 제2 추정을 결정하는 단계와;
스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 판독함으로써 상기 웹페이지 뷰잉 영역에 대한 상기 컨텐츠 아이템의 위치를 결정하는 것을 포함하여 컨텐츠 아이템 가시성을 결정하는 단계와; 그리고
상기 가시성을 보고하는 단계를 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.A computer-implemented method for determining content visibility when a content item is included in a cross-domain iframe,
Determining a first estimate of the size of the web page viewing area of the viewport associated with the browser, including reading an outer bound for the size of the viewport;
Determining a second estimate of the size of a content item for display in the web page viewing area, including reading in-frame measurements for the i frame from a browser;
Determining a position of the content item for the web page viewing area by reading the position of the viewport and i frame in screen coordinates; determining content item visibility; And
And reporting the visibility. ≪ Desc / Clms Page number 22 >
상기 제1 추정을 결정하는 단계는 상기 웹페이지 뷰잉 영역의 사이즈로부터 하나 이상의 크롬 요소(chrome element)들의 추정된 사이즈를 감하는 것(subtracting)을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the first estimate comprises subtracting an estimated size of one or more chrome elements from a size of the web page viewing region.
상기 컨텐츠 아이템 가시성을 결정하는 단계는 상기 뷰포트 내의 하나 이상의 크롬 요소들의 추정된 사이즈를 보상하는 것을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the content item visibility comprises compensating for an estimated size of one or more chrome elements in the viewport.
상기 제1 추정을 결정하는 단계는 상기 뷰포트의 사이즈로부터 브라우져 해더의 추정된 사이즈를 감하는 것을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the first estimate comprises subtracting an estimated size of the browser header from the size of the viewport.
상기 제1 추정을 결정하는 단계는 브라우져 해더 및 스크롤바에 대한 추정된 사이즈를 감하는 것을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the first estimate comprises subtracting an estimated size for the browser header and the scroll bar.
상기 제1 추정을 결정하는 단계는 상기 하나 이상의 크롬 요소들의 평균(average) 사이즈를 결정하기 위해 통계적 분석을 수행하는 것을 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein the determining the first estimate further comprises performing a statistical analysis to determine an average size of the one or more chrome elements.
상기 제2 추정을 결정하는 단계는 상기 컨텐츠의 사이즈를 상기 i프레임의 내부 부분과 동일한 사이즈인 것으로 근사화시키는 것을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the second estimate comprises approximating the size of the content to be the same size as the inner portion of the i-frame.
상기 컨텐츠 아이템의 위치를 결정하는 것은 스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 찾기 위해 브라우져의 API를 이용하는 것을 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the location of the content item further comprises using the browser's API to locate the viewport and i-frame in screen coordinates.
상기 브라우져는 파이어폭스(firefox) 브라우져인 것을 특징으로 하는 컴퓨터로 구현되는 방법.9. The method of claim 8,
Wherein the browser is a firefox browser.
상기 컨텐츠 아이템 가시성을 결정하는 단계는, 두 개의 직사각형들의 중첩의 영역을 결정함으로써 얼마 만큼의 컨텐츠 아이템이 가시적인지를 계산하는 것을 더 포함하고, 상기 두 개의 직사각형들 중 제1 직사각형은 상기 뷰포트의 위치 및 상기 웹페이지 뷰잉 영역의 추정에 의해 정의되고, 제2 직사각형은 상기 i프레임의 위치 및 상기 컨텐츠 아이템의 사이즈에 의해 정의되는 것을 특징으로 하는 컴퓨터로 구현되는 방법. The method according to claim 1,
Wherein determining the content item visibility further comprises calculating how much content item is visible by determining an area of overlap of two rectangles, wherein a first one of the two rectangles is located at a position And an estimate of the web page viewing area, and wherein the second rectangle is defined by the location of the i-frame and the size of the content item.
상기 가시성을 보고하는 단계는 상기 컨텐츠 아이템이 상기 교차-도메인 i프레임에게로의 상기 컨텐츠 아이템의 전달과 관련하여 사용자에게 제시될 때 가시적인지의 여부를 컨텐츠 스폰서에게 보고하는 것을 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법. The method according to claim 1,
The reporting of the visibility further comprises reporting to the content sponsor whether the content item is visible when presented to the user in connection with the delivery of the content item to the cross-domain i frame A computer implemented method.
상기 컨텐츠 아이템이 상기 교차-도메인 i프레임에 디스플레이되고 있음을 결정하는 단계를 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법. The method according to claim 1,
Further comprising the step of determining that the content item is being displayed in the cross-domain i < RTI ID = 0.0 > frame. ≪ / RTI >
상기 컨텐츠 아이템은 광고인 것을 특징으로 하는 컴퓨터로 구현되는 방법. The method according to claim 1,
Wherein the content item is an advertisement.
뷰포트의 사이즈에 대한 외곽 경계를 판독하는 것을 포함하여 브라우져와 관련된 상기 뷰포트의 웹페이지 뷰잉 영역의 사이즈의 제1 추정을 결정하고;
브라우져로부터 상기 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여 상기 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템의 사이즈에 대한 제2 추정을 결정하며;
스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 판독함으로써 상기 웹페이지 뷰잉 영역에 대한 상기 컨텐츠 아이템의 위치를 결정하는 것을 포함하여 컨텐츠 아이템 가시성을 결정하고; 그리고
상기 가시성을 보고하도록 하는 것을 특징으로 하는 컴퓨터 프로그램 물.A computer program product in a tangible medium, comprising instructions for causing one or more processors to:
Determining a first estimate of the size of the web page viewing area of the viewport associated with the browser, including reading outline bounds for the size of the viewport;
Determining a second estimate of the size of a content item for display in the web page viewing area, including reading i-frame internal measurements for the i frame from a browser;
Determining the position of the content item with respect to the web page viewing area by reading the position of the viewport and i frame with screen coordinates; And
And to report the visibility.
상기 제1 추정을 결정하는 것은 상기 웹페이지 뷰잉 영역의 사이즈로부터 하나 이상의 크롬 요소들의 추정된 사이즈를 감하는 것을 포함하는 것을 특징으로 하는 컴퓨터 프로그램 물.15. The method of claim 14,
Wherein determining the first estimate comprises subtracting an estimated size of one or more chrome elements from a size of the web page viewing area.
상기 컨텐츠 아이템 가시성을 결정하는 것은 상기 뷰포트 내의 하나 이상의 크롬 요소들의 추정된 사이즈를 보상하는 것을 더 포함하는 것을 특징으로 하는 컴퓨터 프로그램 물.15. The method of claim 14,
Wherein determining the content item visibility further comprises compensating for an estimated size of one or more chrome elements in the viewport.
상기 제1 추정을 결정하는 것은 상기 뷰포트의 사이즈로부터 브라우져 해더의 추정된 사이즈를 감하는 것을 포함하는 것을 특징으로 하는 컴퓨터 프로그램 물.15. The method of claim 14,
Wherein determining the first estimate comprises subtracting an estimated size of the browser header from the size of the viewport.
하나 이상의 프로세서들과; 그리고
명령어들을 포함하는 하나 이상의 메모리 요소들을 포함하며, 상기 명령어들은 실행될 때 상기 하나 이상의 프로세서들로 하여금:
뷰포트의 사이즈에 대한 외곽 경계를 판독하는 것을 포함하여 브라우져와 관련된 상기 뷰포트의 웹페이지 뷰잉 영역의 사이즈의 제1 추정을 결정하고;
브라우져로부터 상기 i프레임에 대한 i프레임 내부 측정들을 판독하는 것을 포함하여 상기 웹페이지 뷰잉 영역에 디스플레이하기 위한 컨텐츠 아이템의 사이즈에 대한 제2 추정을 결정하며;
스크린 좌표들로 상기 뷰포트 및 i프레임의 위치를 판독함으로써 상기 웹페이지 뷰잉 영역에 대한 상기 컨텐츠 아이템의 위치를 결정하는 것을 포함하여 컨텐츠 아이템 가시성을 결정하고; 그리고
상기 가시성을 보고하도록 하는 것을 특징으로 하는 시스템.As a system,
One or more processors; And
Wherein the instructions, when executed, cause the one or more processors to:
Determining a first estimate of the size of the web page viewing area of the viewport associated with the browser, including reading outline bounds for the size of the viewport;
Determining a second estimate of the size of a content item for display in the web page viewing area, including reading i-frame internal measurements for the i frame from a browser;
Determining the position of the content item with respect to the web page viewing area by reading the position of the viewport and i frame with screen coordinates; And
And to report the visibility.
상기 제1 추정을 결정하는 것은 상기 웹페이지 뷰잉 영역의 사이즈로부터 하나 이상의 크롬 요소들의 추정된 사이즈를 감하는 것을 포함하는 것을 특징으로 하는 시스템.19. The method of claim 18,
Wherein determining the first estimate comprises subtracting an estimated size of one or more chrome elements from a size of the web page viewing area.
상기 컨텐츠 아이템 가시성을 결정하는 것은 상기 뷰포트 내의 하나 이상의 크롬 요소들의 추정된 사이즈를 보상하는 것을 더 포함하는 것을 특징으로 하는 시스템.19. The method of claim 18,
Wherein determining the content item visibility further comprises compensating for an estimated size of one or more chrome elements in the viewport.
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201361803060P | 2013-03-18 | 2013-03-18 | |
US61/803,060 | 2013-03-18 | ||
US13/852,568 | 2013-03-28 | ||
US13/852,568 US20140281901A1 (en) | 2013-03-18 | 2013-03-28 | Estimating visibility of content items |
PCT/US2014/025385 WO2014151292A1 (en) | 2013-03-18 | 2014-03-13 | Estimating visibility of content items |
Publications (1)
Publication Number | Publication Date |
---|---|
KR20150132543A true KR20150132543A (en) | 2015-11-25 |
Family
ID=51534310
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
KR1020157029968A KR20150132543A (en) | 2013-03-18 | 2014-03-13 | Estimating visibility of content items |
Country Status (8)
Country | Link |
---|---|
US (1) | US20140281901A1 (en) |
EP (1) | EP2976719B1 (en) |
JP (1) | JP6470735B2 (en) |
KR (1) | KR20150132543A (en) |
CN (1) | CN105210051B (en) |
AU (1) | AU2014235133A1 (en) |
CA (1) | CA2907769A1 (en) |
WO (1) | WO2014151292A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20190059943A (en) * | 2016-09-26 | 2019-05-31 | 더블유피 컴퍼니 엘엘씨 | Method and system for real-time content delivery |
Families Citing this family (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
ES2304882B1 (en) * | 2007-04-10 | 2009-10-23 | Vodafone España, S.A. | METHOD AND SYSTEM OF DETECTION OF THE VISUALIZATION OF OBJECTS INSERTED IN WEB PAGES. |
US10387911B1 (en) | 2012-06-01 | 2019-08-20 | Integral Ad Science, Inc. | Systems, methods, and media for detecting suspicious activity |
US9563927B2 (en) * | 2014-03-25 | 2017-02-07 | Digimarc Corporation | Screen watermarking methods and arrangements |
US10783548B1 (en) | 2015-07-31 | 2020-09-22 | Amazon Technologies, Inc. | Content viewability detection |
US11082738B2 (en) | 2015-08-21 | 2021-08-03 | Microsoft Technology Licensing, Llc | Faster determination of a display element's visibility |
US10289296B1 (en) | 2015-08-21 | 2019-05-14 | Google Llc | Systems and methods for dynamically appending supplemental content to an information resource responsive to scroll activity |
US10585576B2 (en) | 2015-10-26 | 2020-03-10 | Google Llc | Systems and methods for attributing a scroll event in an infinite scroll graphical user interface |
CN105654350A (en) * | 2016-01-06 | 2016-06-08 | 北京齐尔布莱特科技有限公司 | Method for conducting statistics on visual exposure of advertisement |
US20170199888A1 (en) * | 2016-01-13 | 2017-07-13 | Google Inc. | Detecting visibility of a content item in a content item slot on a resource |
US10679244B1 (en) | 2016-03-04 | 2020-06-09 | Amazon Technologies, Inc. | Publisher identity verification through cross-domain barrier |
WO2017192332A1 (en) * | 2016-05-05 | 2017-11-09 | Social Networking Technology, Inc. | Systems and methods for view-based advertisement selection |
WO2018005450A1 (en) * | 2016-06-28 | 2018-01-04 | Optimera, Inc. | Digital content delivery based on measured viewability of a displayed content insertion field |
US10042829B2 (en) * | 2016-06-28 | 2018-08-07 | Google Llc | Measurement of visibility of overlay content |
US10664867B2 (en) | 2016-06-28 | 2020-05-26 | Optimera, Llc | Digital content delivery based on measured viewability of a displayed content insertion field |
US10908804B2 (en) * | 2017-08-30 | 2021-02-02 | Facebook, Inc. | Incremental mount framework |
CN109727051A (en) * | 2017-10-31 | 2019-05-07 | 腾讯科技（深圳）有限公司 | Exposure calculation method, device and readable medium |
US10997261B2 (en) * | 2018-09-06 | 2021-05-04 | Google Llc | System and method that facilitate display responsive message rendering on client device |
CN109814967A (en) * | 2019-01-17 | 2019-05-28 | 平安科技（深圳）有限公司 | Display methods, device, computer equipment and the readable storage medium storing program for executing of face label system |
CN109862412B (en) * | 2019-03-14 | 2021-08-13 | 广州酷狗计算机科技有限公司 | Method and device for video co-shooting and storage medium |
US11074457B2 (en) * | 2019-04-17 | 2021-07-27 | International Business Machines Corporation | Identifying advertisements embedded in videos |
US11210464B2 (en) | 2019-09-03 | 2021-12-28 | Paypal, Inc. | Systems and methods for detecting locations of webpage elements |
CN110851456B (en) * | 2019-11-08 | 2022-03-29 | 北京字节跳动网络技术有限公司 | Information processing method, electronic equipment and storage medium |
CN114138158B (en) * | 2020-09-03 | 2024-02-20 | 腾讯科技（深圳）有限公司 | Method and device for detecting visibility of view and computing equipment |
CN113420201B (en) * | 2021-06-09 | 2023-02-03 | 湖南大学 | Cross-domain element positioning and tree generating method for browser RPA system |
Family Cites Families (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6570595B2 (en) * | 1999-06-24 | 2003-05-27 | Xoucin, Inc. | Exclusive use display surface areas and persistently visible display of contents including advertisements |
AU2001249278A1 (en) * | 2000-03-17 | 2001-10-03 | Xeno Development Inc. | Methods and devices for reconstructing visual stimuli observed through browser-based interfaces over time |
US6957392B2 (en) * | 2002-01-16 | 2005-10-18 | Laszlo Systems, Inc. | Interface engine providing a continuous user interface |
KR20040076649A (en) * | 2003-02-26 | 2004-09-03 | 삼성전자주식회사 | Apparatus and method for displaying browser graphic by aspect ratio |
FI118310B (en) * | 2004-01-22 | 2007-09-28 | Nokia Corp | Presentation of a web page in a browser window and procedure for processing a web page |
ES2304882B1 (en) * | 2007-04-10 | 2009-10-23 | Vodafone España, S.A. | METHOD AND SYSTEM OF DETECTION OF THE VISUALIZATION OF OBJECTS INSERTED IN WEB PAGES. |
US20090327869A1 (en) * | 2008-06-27 | 2009-12-31 | Microsoft Corporation | Online ad serving |
US8145521B2 (en) * | 2008-07-15 | 2012-03-27 | Google Inc. | Geographic and keyword context in embedded applications |
JP2010198181A (en) * | 2009-02-24 | 2010-09-09 | Nec Corp | Device, method and program for html document display |
WO2011005948A1 (en) * | 2009-07-09 | 2011-01-13 | Collective Media, Inc. | Method and system for tracking interaction and view information for online advertising |
US20110035274A1 (en) * | 2009-08-04 | 2011-02-10 | Google Inc. | Determining Impressions for Mobile Devices |
EP2510487A4 (en) * | 2009-12-08 | 2014-11-19 | Comscore Inc | Systems and methods for identification and reporting of ad delivery hierarchy |
US20110196735A1 (en) * | 2010-02-05 | 2011-08-11 | Von Sydow Gustav | System and method for measuring effectiveness of electronically presented advertizing |
US8423901B2 (en) * | 2010-03-15 | 2013-04-16 | International Business Machines Corporation | Displaying content outside IFRAME container |
FR2958762A1 (en) * | 2010-04-12 | 2011-10-14 | Romain Zylik | DEVICE FOR DISSEMINATION ON THE INTERNET OF SERVICES AND / OR WEBSITES WHICH CAN ADAPT DYNAMICALLY THE SENDING OF THEIR CONTENT BASED ON THE RESOLUTION OF THE SCREEN ON WHICH THEY ARE VIEWED |
JP5521037B2 (en) * | 2010-05-28 | 2014-06-11 | 楽天株式会社 | Ad management system |
US8832559B2 (en) * | 2010-06-25 | 2014-09-09 | LeftsnRights, Inc. | Content distribution system and method |
US20120079366A1 (en) * | 2010-09-27 | 2012-03-29 | David Cohen | Measurement of content placement effectiveness over web pages and like media |
US8689099B1 (en) * | 2010-12-23 | 2014-04-01 | Amazon Technologies, Inc. | Cross-domain communication |
WO2013165944A2 (en) * | 2012-05-02 | 2013-11-07 | Zedo, Inc. | Systems, techniques and mechanisms for displaying online advertisements in a viewable area of a web browser |
-
2013
- 2013-03-28 US US13/852,568 patent/US20140281901A1/en not_active Abandoned
-
2014
- 2014-03-13 CN CN201480027146.3A patent/CN105210051B/en active Active
- 2014-03-13 WO PCT/US2014/025385 patent/WO2014151292A1/en active Application Filing
- 2014-03-13 CA CA2907769A patent/CA2907769A1/en not_active Abandoned
- 2014-03-13 KR KR1020157029968A patent/KR20150132543A/en active Search and Examination
- 2014-03-13 JP JP2016504309A patent/JP6470735B2/en active Active
- 2014-03-13 AU AU2014235133A patent/AU2014235133A1/en not_active Abandoned
- 2014-03-13 EP EP14768301.5A patent/EP2976719B1/en active Active
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20190059943A (en) * | 2016-09-26 | 2019-05-31 | 더블유피 컴퍼니 엘엘씨 | Method and system for real-time content delivery |
Also Published As
Publication number | Publication date |
---|---|
CN105210051A (en) | 2015-12-30 |
US20140281901A1 (en) | 2014-09-18 |
AU2014235133A1 (en) | 2015-10-08 |
JP6470735B2 (en) | 2019-02-13 |
CA2907769A1 (en) | 2014-09-25 |
EP2976719B1 (en) | 2022-02-23 |
JP2016532915A (en) | 2016-10-20 |
EP2976719A1 (en) | 2016-01-27 |
EP2976719A4 (en) | 2016-12-21 |
CN105210051B (en) | 2019-05-28 |
WO2014151292A1 (en) | 2014-09-25 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
KR20150132543A (en) | Estimating visibility of content items | |
US9697534B2 (en) | Attribution marketing recommendations | |
US20160103758A1 (en) | Online product testing using bucket tests | |
US20150154632A1 (en) | Determining a number of view-through conversions for an online advertising campaign | |
CN107832409B (en) | Accessing location-based content | |
US20150269615A1 (en) | Predicting Visibility of Content Items | |
US9749669B2 (en) | Method and system for assessing viewing quality of media objects | |
US20230177570A1 (en) | Dynamic insertion of content items into resources | |
US8700465B1 (en) | Determining online advertisement statistics | |
US20140257968A1 (en) | Method and apparatus for determining digital media visibility | |
CA2795376C (en) | Content delivery based on user terminal events | |
US20140114747A1 (en) | Methods and systems for analyzing changes in aggregate ratio metrics | |
US20140173099A1 (en) | Method and apparatus for determining digital media visibility | |
US20150332192A1 (en) | Estimating Future Inventory | |
AU2015298135A1 (en) | Method and system for performing online advertisement monitoring | |
US20170017988A1 (en) | Full value calculator for conversions | |
US20170249658A1 (en) | Displaying estimation of content viewership | |
US20190012681A1 (en) | Determining viewability of content items displayed on client devices based on user interactions | |
US20130346192A1 (en) | Method and system for displaying a theme based advertisement on a search box | |
GB2508877A (en) | Determining digital media visibility on a web page |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A201 | Request for examination | ||
E902 | Notification of reason for refusal | ||
AMND | Amendment | ||
E601 | Decision to refuse application | ||
AMND | Amendment |
US9380323B2 - Cache eviction - Google Patents
Cache eviction Download PDFInfo
- Publication number
- US9380323B2 US9380323B2 US14/850,007 US201514850007A US9380323B2 US 9380323 B2 US9380323 B2 US 9380323B2 US 201514850007 A US201514850007 A US 201514850007A US 9380323 B2 US9380323 B2 US 9380323B2
- Authority
- US
- United States
- Prior art keywords
- server
- content
- cost
- vho
- items
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 claims abstract description 27
- 238000012545 processing Methods 0.000 claims description 9
- 230000004044 response Effects 0.000 claims description 5
- 230000003252 repetitive effect Effects 0.000 claims description 4
- 208000035260 vertebral hypersegmentation and orofacial anomalies Diseases 0.000 abstract 1
- 238000012546 transfer Methods 0.000 description 16
- 238000013459 approach Methods 0.000 description 11
- 230000006870 function Effects 0.000 description 7
- 239000000835 fiber Substances 0.000 description 5
- 230000008569 process Effects 0.000 description 5
- 238000010586 diagram Methods 0.000 description 2
- 230000014509 gene expression Effects 0.000 description 2
- 235000008694 Humulus lupulus Nutrition 0.000 description 1
- ODCKICSDIPVTRM-UHFFFAOYSA-N [4-[2-hydroxy-3-(propan-2-ylazaniumyl)propoxy]naphthalen-1-yl] sulfate Chemical compound C1=CC=C2C(OCC(O)CNC(C)C)=CC=C(OS(O)(=O)=O)C2=C1 ODCKICSDIPVTRM-UHFFFAOYSA-N 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000002457 bidirectional effect Effects 0.000 description 1
- 238000012790 confirmation Methods 0.000 description 1
- 230000003247 decreasing effect Effects 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000002474 experimental method Methods 0.000 description 1
- 239000000284 extract Substances 0.000 description 1
- 238000003780 insertion Methods 0.000 description 1
- 230000037431 insertion Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000010076 replication Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/231—Content storage operation, e.g. caching movies for short term storage, replicating data over plural servers, prioritizing data for deletion
- H04N21/23113—Content storage operation, e.g. caching movies for short term storage, replicating data over plural servers, prioritizing data for deletion involving housekeeping operations for stored content, e.g. prioritizing content for deletion because of storage space restrictions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/21—Server components or server architectures
- H04N21/218—Source of audio or video content, e.g. local disk arrays
- H04N21/2181—Source of audio or video content, e.g. local disk arrays comprising remotely distributed storage units, e.g. when movies are replicated over a plurality of video servers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/21—Server components or server architectures
- H04N21/222—Secondary servers, e.g. proxy server, cable television Head-end
- H04N21/2225—Local VOD servers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/231—Content storage operation, e.g. caching movies for short term storage, replicating data over plural servers, prioritizing data for deletion
- H04N21/23106—Content storage operation, e.g. caching movies for short term storage, replicating data over plural servers, prioritizing data for deletion involving caching operations
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/24—Monitoring of processes or resources, e.g. monitoring of server load, available bandwidth, upstream requests
- H04N21/2402—Monitoring of the downstream path of the transmission network, e.g. bandwidth available
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/63—Control signaling related to video distribution between client, server and network components; Network processes for video distribution between server and clients or between remote clients, e.g. transmitting basic layer and enhancement layers over different transmission paths, setting up a peer-to-peer communication via Internet between remote STB's; Communication protocols; Addressing
- H04N21/647—Control signaling between network components and server or clients; Network processes for video distribution between server and clients, e.g. controlling the quality of the video stream, by dropping packets, protecting content from unauthorised alteration within the network, monitoring of network load, bridging between two different networks, e.g. between IP and wireless
- H04N21/64723—Monitoring of network processes or resources, e.g. monitoring of network load
- H04N21/64738—Monitoring network characteristics, e.g. bandwidth, congestion level
Definitions
- the present invention relates generally to distributed caching for video-on-demand systems, and in particular to a method and apparatus for transferring content within such video-on-demand systems.
- Video on Demand (VoD) systems allow users to select and view video content on demand.
- the content is stored by the VoD operator at various locations in the network.
- the content can be either streamed in real-time to a user set-top-box (STB) or downloaded on a user device (PC or DVR), over a content delivery network (CDN).
- STB user set-top-box
- PC user device
- CDN content delivery network
- VoD systems comprise several components (see FIG. 1 ).
- a video service office (VSO) 101 or headend acting as a master server that has a content library storing all the content in the system.
- the VoD system comprises a streaming server such as a B-1 server available from Motorola Mobility, Inc.
- the VSO is the entry point of all the content in the system, where the content is initially processed and stored.
- the system has several video home offices (VHOs) 102 acting as servers.
- Each VHO 102 consists of caching servers and streaming servers such as a B-3 server available from Motorola Mobility, Inc.
- the streaming servers process and send content requested by users.
- the servers store content at the VHOs prior to being sent to users.
- the VSO 101 and the VHOs 102 are connected over a regional network such as a fiber-optic ring.
- the VHOs 102 provide content to the STBs 103 .
- the VHOs 102 are exact replicas of the VSO 101 in terms of the stored content.
- the VSO 101 uses networking technologies such as the negative acknowledgment (ACK) reliable multicast (NORM) protocol in order to distribute new content across the network to the VHO 102 caches.
- ACK negative acknowledgment
- NVM reliable multicast
- This solution is preferred due to (i) the efficiency of NORM (store-and-forward across the fiber ring) and (ii) lower access latency—requests made to VHO 102 servers are always satisfied locally.
- NORM negative acknowledgment
- NVM reliable multicast
- One solution to this problem is to store a subset of the VSO 101 at each VHO 102 .
- a problem then becomes how to download content that is not stored at the VHO 102 when, or if that content is requested by a user. Therefore a need exists for a method and apparatus for downloading content within a video-on-demand system.
- FIG. 1 is a block diagram of a prior-art VoD system.
- FIG. 2 is a block diagram of a VoD system.
- FIG. 3 shows use-data for a VoD system.
- FIG. 4 illustrates a VoD system of FIG. 2 having bi-directional links.
- FIG. 5 is a flow chart showing operation of the VoD system of FIG. 2 and FIG. 4 .
- FIG. 6 is a flow chart showing operation of the VoD system of FIG. 2 and FIG. 4 .
- references to specific implementation embodiments such as circuitry may equally be accomplished via either on general purpose computing apparatus (e.g., CPU) or specialized processing apparatus (e.g., DSP) executing software instructions stored in non-transitory computer-readable memory.
- general purpose computing apparatus e.g., CPU
- specialized processing apparatus e.g., DSP
- the terms and expressions used herein have the ordinary technical meaning as is accorded to such terms and expressions by persons skilled in the technical field as set forth above except where different specific meanings have otherwise been set forth herein.
- a method and apparatus for downloading content within a video-on-demand system is provided herein.
- a VHO will cache a subset of the VSO content.
- the VHO will request that content from another VHO or the VSO.
- recorded traffic history metrics are used to predict their future or current traffic.
- a VHO or VSO is chosen for fetching the content that will result in the lowest predicted traffic on the interconnecting links.
- the above described technique for operating a VoD system allows for VHOs to reduce the amount of memory since they no longer store a complete replica of the VSO. Additionally, because a VHO will fetch content from the VHO or VSO that will result in the lowest predicted traffic, total network load imposed during item forwarding is reduced and the total load on all the links is better balanced.
- the present invention encompasses a method for receiving content.
- the method comprises the steps of receiving, by the server, a request for the content, determining that the requested content is not stored by the server, determining if a second server has the content, determining if a third server has the content, and requesting the content from the second server when it is determined that a cost associated with retrieving the content from the second server is less than a cost associated with retrieving the content from the third server.
- the server, the second server, and the third server maintain a subset of content available from a master server, and the subset of content maintained on the server, the second server, and the third server is not identical.
- the present invention additionally encompasses, a method comprising the steps of receiving, by a first VHO, a request for content from a STB, determining, by the first VHO, that the requested content is not stored by the first VHO, determining if a second VHO has the content, determining if a third VHO has the content, and requesting the content from the second VHO when it is determined that a cost associated with retrieving the content from the second VHO is less than a cost associated from retrieving the content from the third VHO.
- the first, second, and third VHOs maintain a subset of content available from a video service office (VSO), and the content maintained on the first, second, and third VHOs is not identical.
- VSO video service office
- the present invention encompasses a VHO comprising a server receiving a request for content from a STB, determining that the requested content is not stored by the VHO, determining if a second VHO has the content, determining if a third VHO has the content, and requesting the content from the second VHO when it is determined that a cost associated with retrieving the content from the second VHO is less than a cost associated from retrieving the content from the third VHO.
- the first, second, and third VHOs maintain a subset of content available from a VSO, and the content maintained on the first, second, and third VHOs is not identical.
- the goal is to (i) reduce the additional load imposed during item forwarding while (ii) attempting to balance the total load on all the links in the system.
- the approach to this problem is based on the observation that for large populations the user behavior exhibits repetitive patterns. We then use recorded history of metrics of interest to predict their future values.
- One metric of interest is the number of requests received for an item (i.e., a specific piece of content) per minute. We use this metric to compute the penalty of not storing the item in the cache of a VHO for a future interval and then use this value to decide which items to cache or stream and which items to evict from the cache.
- a network penalty of an item to be proportional to the item's size in bytes, the number of requests expected to be received for the item in the close future (next 10-60 minutes) and the sum of the weights of all the links traversed by the item. That is, if the item is not locally stored, its network penalty defines the load placed on the network when fetching it from a site that stores it. The network penalty or cost of items is used to drive the cache replacement policy and to decide what items to cache locally and what items to stream directly from the VSO to the requesting client.
- Another metric of interest is the number of items simultaneously transferred over any of the ring's links. We use this metric to derive an estimate of the transfer rate over that link for a future interval. The estimate is then used by VHOs to choose to transfer a missed item over the least congested path.
- the system we consider consists of the components shown in FIG. 2 .
- the Video Service Office (VSO) 203 (or master server 203 ) is a central data repository.
- the VSO 203 processes each content item as it enters the system, packages it and stores it in a local content library 201 .
- the VSO 203 also consists of a large streaming server 202 (e.g., Motorola's B-1 Video Server) that can stream items directly to users.
- VHOs 206 The second component is the Video Home Offices (VHOs 206 ) (only one shown in FIG. 2 ).
- VHO 206 serves disjoint geographical sub-regions of the area served by the VSO 203 . All VHOs 206 maintain a subset of content available from a master server (VSO), and the subset of content maintained on each VSO is not identical.
- VSO Video Home Offices
- Each VHO 206 consists of a storage component (cache 204 ) and a smaller capacity streaming server (e.g. Motorola B-3) 205 that processes item requests from users.
- N denote the number of VHOs 206 supported by a VSO 203 .
- the VSO 203 and the VHOs 206 are connected through a high speed fiber ring (e.g., an OC192-9.6 Gbps Metro Ring).
- the VSO 203 uses a multicast algorithm (e.g., NORM) to distribute the item to each VHO 206 .
- Each VHO 206 chooses whether to cache the item or not.
- the last component is the user, browsing the content listing and requesting content over a set-top-box (STB) 207 .
- Requests made by users via an STB are sent to a single VHO 206 server—the one serving the sub-region containing the user.
- a VHO 206 is not connected directly to STBs but instead, to a few tens of hybrid fiber-coax (HFC) nodes. Each such node serves a smaller region (e.g., neighborhood) of up to a few thousand homes. Any user request reaches the VHO 206 through the node serving the user's neighborhood.
- HFC hybrid fiber-coax
- VHO 206 Whenever a miss occurs (i.e., a user requests an item not stored on the VHO 206 cache), the VHO 206 needs to fetch the item.
- the VHO 206 can fetch the item from another VHO 206 site or from the VSO 203 . Let the site that is chosen be identified as the source. The source then streams the item directly to the user (from the B-1 server) or reliably sends the item to the VHO 206 who then caches and streams it to the user.
- the site that is chosen be identified as the source.
- the source then streams the item directly to the user (from the B-1 server) or reliably sends the item to the VHO 206 who then caches and streams it to the user.
- Each data set consists of two types of data.
- the content database contains metadata of all content items stored on the VSO 203 . Each entry in the content database refers to a single item and has the format
- BitRate is the item's encoding rate in bits per second.
- the stream database contains information about requests made by VoD system users. Each entry refers to the request of a user and has the format
- the items in the content database are the ones accessed during the 18 days in the stream database. However, not all items are placed in the VSO 203 storage at the same time.
- VSO 203 some items are already in the VSO 203 at the beginning of the 18 days, some are placed later and some are removed (can no longer be requested by clients) before the end of the 18 day dataset. Knowing the VSO 203 insertion and removal timestamps of items would help improve the performance of the VHO 206 caching decisions. For instance, items newly inserted could have associated popularity hints that could be used to determine their usefulness. Also, items no longer accessible by clients can be immediately removed from the cache (if present). However, the datasets we have do not provide this information. Instead, as we will describe later, the caching algorithms we propose have to infer this information.
- FIG. 3( a ) shows the distribution of the per-item access count for the 18 days.
- the horizontal axis is the item list in decreasing popularity order and the vertical axis is the per-item access count.
- the access count distribution is long-tail, with the most popular item being accessed more than 26000 times but the item ranked 1000 (out of 12625 total items) in the popularity list being accessed only 1100 times.
- FIG. 3( b ) shows the evolution over three days of the total number of users accessing the service in a particular city, with a one minute granularity.
- the largest number of simultaneous users is 7822.
- Each day can be identified as one of the humps in the graph. While nights still impose a load on the VOD server, that load is significantly lower than during the day.
- the shape of the number of simultaneous views for each day is different, since each day has its own viewing pattern.
- FIG. 3( c ) shows the evolution over other three days of the total size (in MB) of the items being viewed at any time, (one minute granularity).
- the maximum size is 4.07 TB. It is interesting to see that the two peaks do not coincide. This is probably because when the peak storage load is reached, the pool of items watched is larger than during the peak user load, when fewer users are consuming more items.
- VHO 206 sites When multiple VHO 206 sites incur misses, they naturally impose a traffic load on the network in order to fetch the items missed. While the design space for algorithms to retrieve the missed items is quite large, we note that not all solutions are good. For instance, in a straightforward approach, each VHO 206 fetches missed items from the VSO 203 . However, in this solution, the VSO 203 and its adjacent links become a system bottleneck. While the VSO 203 has a B1 streaming server well capable of handling all the (miss) traffic, its adjacent links will be unable to handle the traffic. Thus, optimizing the traffic on the system links becomes a problem of paramount importance.
- V ⁇ V 1 , . . . V n ⁇ be the set of VHO 206 s in the system and let L be the set of inter-VoD links in the system. L includes also the links adjacent to the VSO 203 . Note that the links in our system are bidirectional, since each ring component link is full-duplex.
- MISS(V,T) denote the set of items missed on VHO 206 V during time interval T and let Cache(V i ) denote the set of items stored on site V; at a given time.
- dH(A,B) denote the distance in hops between sites A and B (one hop denoting a connection between adjacent sites).
- TMT Total Miss Traffic
- TLT Total Link Traffic
- a first goal is to reduce the TMT.
- TLT-TMT Minimize the value TLT-TMT. This implies that upon a miss for an item I, VHO A should fetch the missing item from the site B (the VSO 203 or another VHO 206 ) that is closest to it. The next metric attempts to capture how well is the TLT traffic balanced on all the links in the system.
- BLT denote the Bottleneck Link Traffic. That is, BLT defines the traffic imposed on the most utilized link in the system.
- MLT denote the Minimum Link Traffic, that is, the link incurring the least traffic in the system.
- SLB System Link Balance
- One way to achieve a small SLB value is to prefer to add traffic on less utilized links, i.e., links that are not regularly used to convey MISS traffic from the VSO 203 to the VHO 206 .
- V 2 should prefer fetching missed item I 2 from V 3 rather than from V 1 . This is because the directed link between V 3 and V 2 is likely to be less congested than the link between V 1 and V 2 . Note however that V 3 may not cache item I 2 , in which case should try fetching it from V 1 . If V 1 does not cache it either, the VSO 203 certainly will.
- each VHO 206 stores only a subset of the items in the system. Since those items are unlikely to be the only ones requested by users of the VHO 206 , misses will occur, in which case the missing item may be fetched and stored at the VHO 206 . If the storage at VHO 206 is already full, then one or more items in storage will need to be evicted to make room for the newly requested item. Thus, replacement policies need to be implemented on each VHO 206 .
- Several caching replacement techniques may be used at the VHO 206 level. We may use one of several techniques, including Least Recently Used (LRU). In a very simple approach, each VHO 206 simply caches the most popular items requested. However, these cache replacement strategies are often not efficient. In a later section, we describe a novel cache replacement strategy based on network awareness.
- LRU Least Recently Used
- a straightforward approach is to fetch all missed items directly from the VSO 203 .
- this approach fails on both our previous goals.
- the TLT-TMT will be high, since the links adjacent to the VSO 203 will need to support all the traffic generated by misses.
- a solution to these issues relies on other VHOs 206 to provide the missed content. That is, the cache and streaming server of a VHO 206 site can be used to provide missing items to other VHO 206 sites. While this approach is likely to relieve some of the traffic incurred by the links adjacent to the VSO 203 , care must be taken on the choice of the site to stream, to avoid introducing new bottlenecks.
- VHO 206 Whenever a miss occurs at a VHO 206 site, the VHO 206 will (i) discover which other sites have the content, (ii) choose the most suitable site and (iii) retrieve the content. In the following we detail each of these steps.
- A be a VHO site at which a request for item I results in a miss.
- VHO site A generates a special packet of format
- Each node upon receiving such a packet from its (counterclockwise) neighbor, verifies if it stores the requested item. If it does, it appends its id to the packet. Otherwise it leaves the packet intact. In both cases it forwards the resulting packet to it clockwise neighbor.
- the source extracts the list of candidate VHO 206 s from the back of the token packet.
- the cost of this approach consists of
- VHO site A generates a special packet of the same format as before. However, instead of sending this packet as before, it duplicates it and sends each copy to one of its neighbors. Each VHO N that receives such a packet remembers the neighbor from which it received it, S. If N stores I, it generates a new response packet of format
- a VHO 206 that receives a RSP packet, forwards it unchanged to the neighbor opposite to the one from which it has received it. Note that in this solution two packets travel the ring simultaneously. In the worst case, each packet stops at the VSO 203 . On average, each packet will travel
- each VHO 206 (including the VSO 203 ) is responsible for storing index information about a set of items in the system. The distribution of this index information is performed based on a hash value of each item. Specifically, each VHO 206 has a unique ID and so does each item. The unique ID of an item is computed for instance as a hash of the item metadata (a hash function is a mathematical procedure that generates a shorter, fixed-length numerical value from a longer, variable length piece of text). Then, for a given item I, a single site (pointer site) is responsible for maintaining information about which other sites are actually storing item I. The pointer site is the VHO 206 whose ID is the closest to the item's ID.
- P(I) denote the ID of the site storing index information for item I.
- index information is used and maintained using a simple example.
- a miss occurs for item I at site A, since A's cache is full, assume A evicts item R from its cache in order to be able to store I. Then, given I and R, A finds their corresponding pointer sites, P(I) and P(R). A contacts I's pointer site with a message of format
- P(I) responds with the list of sites storing item I and also stores Id(A) among the list of sites storing I.
- site P(R) Upon receiving this message, site P(R) removes Id(A) from the list of sites storing item R. Note that the cost of this procedure is 3
- VHO 206 sites can fail and the pointer information they store may become unavailable.
- One solution is to have each node automatically replicate its data to a secondary node determined using a different hash function. Then DHT accessors can use that backup hash function to find the backup node if their initial lookup request goes unanswered.
- the VSO stores a database where for each item I, a list of sites storing I is being maintained. Each time a miss occurs at V, V contacts the VSO with the list of items in its cache, and the missed item I.
- the VSO database can be updated each time a caching decision is made at a VHO site (when an item is stored and some are evicted). This is likely to not be very frequent since we try to minimize the number of writes.
- the VSO database could also be updated only periodically. This may make the database inaccurate, depending on the frequency of the updates.
- C(I) denote the list of candidate sites for item I. Note that C(I) contains at least one site, the VSO 203 . If C(I) contains only the VSO 203 , there is no choice but to obtain the item from the VSO 203 . If C(I) contains more than one site, a choice has to be made.
- the VHO For each site B in C(I), the VHO computes the shortest path connecting B to A.
- L ba be the set of all the directional links connecting B to A on that shortest path.
- T(I,k) For each link k in L ba we compute an estimate of the time it takes to transfer item I over k.
- T(I,k) denote that estimate.
- T(I,k) We first show to compute T(I,k) and then how the circuitry uses it to choose a peer to transfer the item.
- BPM the bytes transferred for item I on link k in one minute (BPM) is the capacity of k, Cap(k), divided equally among all existing flows on k (the ones already there plus 1 for item I).
- BPM(I,k,m) the capacity of k, Cap(k), divided equally among all existing flows on k (the ones already there plus 1 for item I).
- Size(I) the size of item I in bytes.
- T(I,k) T, the total number of minutes computed.
- VHOs use a low pass filter to infer the value FPM(k,m) for a future minute m.
- FPM(k,i) historic (and stored) values
- FPM(k,i) historic (and stored) values
- FPM(k,m) has to be computed iteratively. That is, since p is the last minute where FPM was recorded, we compute first FPM(k,p+1), then FPM(k,p+2) and so on, up to minute m.
- the winner is the one that has the largest bottleneck link.
- Stats(link(N,P)) are the FPM statistics related to the link connecting site N to the next site en route to A. Note that site N has such statistics since it is the one generating or forwarding flows on link(N,P).
- a VHO 206 that receives a RSP packet, appends to it its own statistics for the next link (in A's direction) and forwards the resulting packet on that link. Item Transfer
- site A needs to solve several problems.
- a missed item may be either reliably transferred and cached by A, or streamed directly from B to the user making the request. This is because each site B, has a streaming server (the VSO 203 has a B-1 server and VHO 206 s have B-3 servers).
- the decision whether to transfer or stream is made by a caching algorithm running on site A. Then, the item A needs is requested from B with a message of format
- site B When site B receives this message, it first needs to confirm that it can support this flow for A. Moreover, B needs to mark item I as no evict until the transfer completes, to make sure it will not evict the item before transferring it.
- Site B may also be unable to transfer item Ito site A.
- Reasons for not being able to support this flow include no longer caching the item but may also include changes in the number of flows at site B leading to fewer available resources (both streaming resources and traffic bottlenecks).
- Site B then has to reply with a confirmation of its decision
- a receives an ABORT message it repeats the above process for the next best candidate site from its C(I) list. If A receives a CONFIRM, it transfers the item.
- FIG. 5 is a flow chart showing operation of the VoD system of FIG. 2 and FIG. 4 .
- the logic flow begins at step 501 where VHO 206 receives a request for content from an STB 207 .
- server 205 receives the request.
- server 205 determines if the requested content is stored by the VHO by determining if cache 204 contains the requested content. If so, the logic flow continues to step 505 where the content is provided to the STB 207 . If, however, at step 503 it is determined that cache 204 does not contain the requested content, then server 205 will need to determine a best source for the content. As described above, the source could be VSO or another VHO (second, third, . . . etc. VHO).
- step 507 sources for the content is determined.
- server 205 sends a message to other VHOs identifying the requested content. Messages from other VHOs will be received indicating whether or not they have the content.
- server 205 knows where the content is located (for example, on a second and/or third VHO)
- historical traffic data is analyzed for a plurality of links within the VoD system (step 509 ). More particularly, server 205 determines historical traffic data for links from the VHOs containing the content to itself, and for links from those VHOs to the STB.
- a preferred link for providing the requested content to the STB is determined.
- the preferred link for the requested content is determined by using the historical traffic data to predict a current traffic for the links from VHOs who have the requested content.
- the link with the lowest predicted traffic (cost) is then chosen as the preferred source.
- the content is then provided to STB 207 (step 505 ).
- the content may be provided from a VHO to server 205 , and then from server 205 to STB 207 , or alternatively may be directly from another VHO to STB 207 .
- FIG. 6 is a flow chart showing operation of a VHO.
- the logic flow begins at step 601 where a request for the content is received by the VHO.
- the VHO determines that the requested content is not stored by the VHO (step 603 ).
- the logic flow then continues to step 605 where the VHO determines if a second VHO has the content and if a third VHO has the content.
- the content is then requested from the second VHO (step 607 ) when it is determined that a cost associated with retrieving the content from the second VHO is less than a cost associated with retrieving the content from the third VHO.
- the content may be requested from the VSO (master server) when no other server has the content.
- the second server, and the third server maintain a subset of content available from the master server and may not contain the requested content. Additionally, the subset of content maintained on the server (VHO), the second server (VHO), and the third server (VHO) is not identical.
- the server may determine that there is not enough room to cache the requested content and then determine items to evict from a cache at the server to make room for the requested content, so as to minimize a network penalty associated with evicting the subset of items.
- the network penalty is proportional to a size in bytes, a number of requests expected to be received for the content at some future time, and a fetch cost associated with retrieving the item.
- the fetch cost is based on the sum of link weights in the network path associated with fetching the content.
- a link weight is calculated as a ratio between traffic predicted on a link and a total traffic supported by all links.
- NAC Network Aware Cache Replacement
- NAG is run locally on each VHO site and takes into consideration not only data locally available such as item size or popularity, but also more global information.
- each VHO (or server within each VHO) associates with each item a network penalty value: the cost likely to be imposed on the network if the item is not locally stored.
- S(I) be the size of I
- Reqs(V,I,T) denote the number of requests received for I during interval Ton site V.
- FC(V,I,T) denote the fetch cost of a byte of item I on site V.
- FC is a function of the path traversed by Ito reach V. For instance, it could be hop count between V and the closest site storing I.
- FC For more details on the definition of FC, see below Defining the Fetch Cost.
- the network penalty defines the cost incurred by the network if site V does not store item I during interval T.
- the functions Reqs and FC are predictions for the actual number of requests and the cost of transfer during the future interval T. In the following we first show how to infer Reqs and FC and then show how the network penalty is used to drive the cache replacement strategy.
- RPM Requests Per Minute
- I,T is the number of requests received for an item I at site V during a minute T.
- Reqs(V,I,T) would be the sum of the RPM values over the time interval T.
- An estimation of RPM may be obtained using historic stored values, in a manner similar to the computation of Flows Per Minute (FPM) described earlier.
- PC is defined as the hop count between its two input sites.
- this approach gives all links equal importance.
- the links adjacent to the VSO are likely to incur more traffic.
- PC(Vi,Vj) we define PC(Vi,Vj) to be the sum of all link weights w( 1 ) on the path between Vi and Vj.
- the weight of a link should be a factor of the traffic that link will be likely to incur.
- NAC fetch cost
- the items on a VHO cache belong to one of two categories (i) items that are currently consumed—stored in the viewSet and (ii) items that are not consumed but have not yet been evicted—stored in the stillCached list.
- the VHO will take the following steps. When a miss occurs, for an item I of size S(I), the item is stored in stillCached if S is smaller than the available cache space. If the cache is full, the network penalties of I and of all the items in stillCached are computed. Let NP(I) be the network penalty of I and NP(Ii) be the network penalty of item Ii from stillCached. Then, I is stored in the cache only if there exists a subset R of stillCached such that the sum of all SR from the subset R is greater or equal to S(I), and the sum of all network penalties NP(Ii) of items from the subset R is less than NP(I).
- the item is stored only if stillCached contains a set of items whose total size exceeds S(I) and whose total penalty is below NP(I).
- the set R is called the replacement set and contains items that may be evicted to cache item I.
- the set replacement set prefferably be the one that has the minimum penalty among all subsets of stillCached of size larger than or equal to S. That is, the VHO will evict the set likely to inflict the minimum future penalty on the cache.
- the path cost for a link between two VHO sites, or between a VHO and VSO may be based on some metric other than estimated transfer time.
- the functionality of analyzing historical traffic data takes place within a server located at a VHO, other circuitry, internal or external to the VHO may perform this task. It is intended that such changes come within the scope of the following claims.
Abstract
Description
BPM(I,k,m)=Cap(k)/(FPM(k,m)+1)
FPM(k,m)=Σi=1 . . . m-1 FPM(k,i)/(m−1)
avgFPM=avgFPM×β+FPM(I,p)×(1−β)
where β in [0,1] is a parameter deciding how much weight is given to the old estimate and how much to the new reading in calculating the new estimate. Then, we compute the FPM(k,m) estimate for a future minute m iteratively. First, copy avgFPM into FPM(k,p) of the current minute p and use it as a new reading to compute a new avgFPM value. Then, copy the new avgFPM to FPM(k,p+1) and continue the process until the current minute is m.
Cost(B)=minB in C(I)(maxL T(I,k))
Item Transfer
w(1)=PT(1,T)/sum PT(Link,T) for all Link
where PT(Link,T) denotes the traffic predicted to occur on Link in the interval T. Note that the sum of the weights of all the links in the system is 1. We can use multiple approaches to compute the PT, similar to the case for the RPM above. Each time a miss occurs on an item I at a site V, NAC needs to determine the fetch cost (FC) of I and of all the items in Cache(V), which requires knowledge of all sites where item I may be cached. Methods for determining this are described above in the section on Peer Discovery.
NAC Replacement Strategy
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/850,007 US9380323B2 (en) | 2011-05-25 | 2015-09-10 | Cache eviction |
US15/179,765 US20160286250A1 (en) | 2011-05-25 | 2016-06-10 | Distributed Content Management |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/115,139 US8925022B2 (en) | 2011-05-25 | 2011-05-25 | Method and apparatus for transferring content |
US14/584,909 US9154811B2 (en) | 2011-05-25 | 2014-12-29 | Caching content |
US14/850,007 US9380323B2 (en) | 2011-05-25 | 2015-09-10 | Cache eviction |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/584,909 Continuation US9154811B2 (en) | 2011-05-25 | 2014-12-29 | Caching content |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/179,765 Continuation US20160286250A1 (en) | 2011-05-25 | 2016-06-10 | Distributed Content Management |
Publications (2)
Publication Number | Publication Date |
---|---|
US20150382032A1 US20150382032A1 (en) | 2015-12-31 |
US9380323B2 true US9380323B2 (en) | 2016-06-28 |
Family
ID=46062778
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/115,139 Active 2031-07-31 US8925022B2 (en) | 2011-05-25 | 2011-05-25 | Method and apparatus for transferring content |
US14/584,909 Active US9154811B2 (en) | 2011-05-25 | 2014-12-29 | Caching content |
US14/850,007 Active US9380323B2 (en) | 2011-05-25 | 2015-09-10 | Cache eviction |
US15/179,765 Pending US20160286250A1 (en) | 2011-05-25 | 2016-06-10 | Distributed Content Management |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/115,139 Active 2031-07-31 US8925022B2 (en) | 2011-05-25 | 2011-05-25 | Method and apparatus for transferring content |
US14/584,909 Active US9154811B2 (en) | 2011-05-25 | 2014-12-29 | Caching content |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/179,765 Pending US20160286250A1 (en) | 2011-05-25 | 2016-06-10 | Distributed Content Management |
Country Status (2)
Country | Link |
---|---|
US (4) | US8925022B2 (en) |
WO (1) | WO2012161946A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11363110B2 (en) * | 2019-11-13 | 2022-06-14 | First Canadian Benefits Inc. | Content distribution systems |
Families Citing this family (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8301776B2 (en) * | 2007-11-19 | 2012-10-30 | Arris Solutions, Inc. | Switched stream server architecture |
US8925022B2 (en) | 2011-05-25 | 2014-12-30 | Motorola Mobility Llc | Method and apparatus for transferring content |
US9848213B2 (en) * | 2012-09-20 | 2017-12-19 | The Hong Kong University Of Science And Technology | Linear programming based distributed multimedia storage and retrieval |
US9319458B2 (en) * | 2013-01-07 | 2016-04-19 | Netflix, Inc. | Site-based server selection |
US10015232B2 (en) * | 2013-05-29 | 2018-07-03 | Vmware, Inc. | Systems and methods for transmitting images |
US20150163265A1 (en) * | 2013-12-05 | 2015-06-11 | Cox Communications, Inc. | Video wake-up calls |
US10299006B2 (en) * | 2016-03-22 | 2019-05-21 | Rovi Guides, Inc. | Methods and systems of facilitating sharing of information among service providers |
IL244937A (en) | 2016-04-05 | 2017-07-31 | Musman Lior | Global optimization and load balancing in networks |
US11134283B2 (en) * | 2016-08-17 | 2021-09-28 | Rovi Guides, Inc. | Systems and methods for storing a media asset rescheduled for transmission from a different source |
US10554735B2 (en) | 2017-08-18 | 2020-02-04 | Arris Enterprises Llc | Targeted delivery of download for connected devices |
CN109618174B (en) * | 2018-12-11 | 2021-12-03 | 深圳市网心科技有限公司 | Live broadcast data transmission method, device, system and storage medium |
US11689754B2 (en) * | 2019-09-15 | 2023-06-27 | Comscore, Inc. | Systems and methods for predicting viewership and detecting anomalies |
Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5956716A (en) * | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US20040103437A1 (en) * | 2002-11-26 | 2004-05-27 | Concurrent Computer Corporation, A Delaware Corporation | Video on demand management system |
US20040143850A1 (en) * | 2003-01-16 | 2004-07-22 | Pierre Costa | Video Content distribution architecture |
US20040190524A1 (en) * | 2002-09-26 | 2004-09-30 | Alcatel | Scheduler device for a system having asymmetrically-shared resources |
US7107606B2 (en) | 2000-08-30 | 2006-09-12 | The Chinese University Of Hong Kong | System and method for highly scalable video on demand |
US20070156845A1 (en) | 2005-12-30 | 2007-07-05 | Akamai Technologies, Inc. | Site acceleration with content prefetching enabled through customer-specific configurations |
US20080091840A1 (en) | 2000-03-29 | 2008-04-17 | Guo Katherine H | Method and System for Caching Streaming Multimedia on the Internet |
US7444662B2 (en) | 2001-06-28 | 2008-10-28 | Emc Corporation | Video file server cache management using movie ratings for reservation of memory and bandwidth resources |
US20090083279A1 (en) | 2007-09-26 | 2009-03-26 | Hasek Charles A | Methods and apparatus for content caching in a video network |
US7548948B2 (en) | 2002-06-24 | 2009-06-16 | Microsoft Corporation | Client-side caching of streaming media content |
US20090193485A1 (en) | 2008-01-30 | 2009-07-30 | Remi Rieger | Methods and apparatus for predictive delivery of content over a network |
US7596664B2 (en) | 2002-04-02 | 2009-09-29 | Coppe/Ufrj | Collapsed distributed cooperative memory for interactive and scalable media-on-demand systems |
US7603439B2 (en) | 2002-04-09 | 2009-10-13 | Akamai Technologies, Inc. | System for tiered distribution in a content delivery network |
US20110107030A1 (en) | 2009-10-29 | 2011-05-05 | Simon Borst | Self-organizing methodology for cache cooperation in video distribution networks |
US7991883B1 (en) * | 2008-12-15 | 2011-08-02 | Adobe Systems Incorporated | Server communication in a multi-tier server architecture |
US8028319B2 (en) * | 2006-05-31 | 2011-09-27 | At&T Intellectual Property I, L.P. | Passive video caching for edge aggregation devices |
US8087056B2 (en) * | 2006-11-20 | 2011-12-27 | Alticast Corporation | Operating method of contents on demand system |
WO2012161946A1 (en) | 2011-05-25 | 2012-11-29 | General Instrument Corporation | Method and apparatus for transferring content by distributed caching |
-
2011
- 2011-05-25 US US13/115,139 patent/US8925022B2/en active Active
-
2012
- 2012-05-07 WO PCT/US2012/036717 patent/WO2012161946A1/en active Application Filing
-
2014
- 2014-12-29 US US14/584,909 patent/US9154811B2/en active Active
-
2015
- 2015-09-10 US US14/850,007 patent/US9380323B2/en active Active
-
2016
- 2016-06-10 US US15/179,765 patent/US20160286250A1/en active Pending
Patent Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5956716A (en) * | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US20080091840A1 (en) | 2000-03-29 | 2008-04-17 | Guo Katherine H | Method and System for Caching Streaming Multimedia on the Internet |
US7107606B2 (en) | 2000-08-30 | 2006-09-12 | The Chinese University Of Hong Kong | System and method for highly scalable video on demand |
US7444662B2 (en) | 2001-06-28 | 2008-10-28 | Emc Corporation | Video file server cache management using movie ratings for reservation of memory and bandwidth resources |
US7596664B2 (en) | 2002-04-02 | 2009-09-29 | Coppe/Ufrj | Collapsed distributed cooperative memory for interactive and scalable media-on-demand systems |
US7603439B2 (en) | 2002-04-09 | 2009-10-13 | Akamai Technologies, Inc. | System for tiered distribution in a content delivery network |
US7548948B2 (en) | 2002-06-24 | 2009-06-16 | Microsoft Corporation | Client-side caching of streaming media content |
US20040190524A1 (en) * | 2002-09-26 | 2004-09-30 | Alcatel | Scheduler device for a system having asymmetrically-shared resources |
US20040103437A1 (en) * | 2002-11-26 | 2004-05-27 | Concurrent Computer Corporation, A Delaware Corporation | Video on demand management system |
US20040143850A1 (en) * | 2003-01-16 | 2004-07-22 | Pierre Costa | Video Content distribution architecture |
US20070156845A1 (en) | 2005-12-30 | 2007-07-05 | Akamai Technologies, Inc. | Site acceleration with content prefetching enabled through customer-specific configurations |
US8028319B2 (en) * | 2006-05-31 | 2011-09-27 | At&T Intellectual Property I, L.P. | Passive video caching for edge aggregation devices |
US8087056B2 (en) * | 2006-11-20 | 2011-12-27 | Alticast Corporation | Operating method of contents on demand system |
US20090083279A1 (en) | 2007-09-26 | 2009-03-26 | Hasek Charles A | Methods and apparatus for content caching in a video network |
US20090193485A1 (en) | 2008-01-30 | 2009-07-30 | Remi Rieger | Methods and apparatus for predictive delivery of content over a network |
US7991883B1 (en) * | 2008-12-15 | 2011-08-02 | Adobe Systems Incorporated | Server communication in a multi-tier server architecture |
US20110107030A1 (en) | 2009-10-29 | 2011-05-05 | Simon Borst | Self-organizing methodology for cache cooperation in video distribution networks |
WO2012161946A1 (en) | 2011-05-25 | 2012-11-29 | General Instrument Corporation | Method and apparatus for transferring content by distributed caching |
US8925022B2 (en) | 2011-05-25 | 2014-12-30 | Motorola Mobility Llc | Method and apparatus for transferring content |
US9154811B2 (en) | 2011-05-25 | 2015-10-06 | Google Technology Holdings LLC | Caching content |
Non-Patent Citations (10)
Title |
---|
Chankhunthod, A., et al, "A hierarchical Internet object cache"; Proceedings of the Usenix Annual Technical Conference; Jan. 22, 1996. |
Final Office action mailed on Jan. 14, 2014, on U.S. Appl. No. 13/115,139. |
Non-final Office action mailed on Jul. 18, 2013, on U.S. Appl. No. 13/115,139. |
Non-final Office action mailed on May 20, 2014, on U.S. Appl. No. 13/115,139. |
Non-final Office Action mailed on Sep. 14, 2012, on U.S. Appl. No. 13/115,139. |
Notice of Allowance mailed on Aug. 28, 2014, on U.S. Appl. No. 13/115,139. |
Notice of Allowance mailed on May 29, 2015, on U.S. Appl. No. 14/584,909. |
PCT International Preliminary Report on Patentability for Application No. PCT/US2012/036717; mailed Nov. 26, 2013. |
PCT Search Report for Application No. PCT/US2012/036717; mailed Aug. 7, 2012. |
PCT Written Opinion for Application No. PCT/US2012/036717; mailed Nov. 25, 2013. |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11363110B2 (en) * | 2019-11-13 | 2022-06-14 | First Canadian Benefits Inc. | Content distribution systems |
Also Published As
Publication number | Publication date |
---|---|
US20150121438A1 (en) | 2015-04-30 |
US20150382032A1 (en) | 2015-12-31 |
US20120304234A1 (en) | 2012-11-29 |
US9154811B2 (en) | 2015-10-06 |
US20160286250A1 (en) | 2016-09-29 |
US8925022B2 (en) | 2014-12-30 |
WO2012161946A1 (en) | 2012-11-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9380323B2 (en) | Cache eviction | |
US8745262B2 (en) | Adaptive network content delivery system | |
KR101228230B1 (en) | Methods and apparatus for self-organized caching in a content delivery network | |
JP5068858B2 (en) | Distributing content data packages originated by users of a super peer-to-peer network | |
CN110336843B (en) | Content distribution method for crowdsourcing, central node and edge node | |
US8612668B2 (en) | Storage optimization system based on object size | |
JP5408257B2 (en) | Content distribution system, content distribution method, and content distribution program | |
US20110078230A1 (en) | Method and system for providing a cdn with granular quality of service | |
US20110107030A1 (en) | Self-organizing methodology for cache cooperation in video distribution networks | |
EP2359536A1 (en) | Adaptive network content delivery system | |
US8799967B2 (en) | Using video viewing patterns to determine content placement | |
Mokhtarian et al. | Flexible caching algorithms for video content distribution networks | |
Araldo et al. | Representation selection problem: Optimizing video delivery through caching | |
WO2018049563A1 (en) | Systems and methods for caching | |
Kim et al. | Cache capacity-aware content centric networking under flash crowds | |
KR20140099834A (en) | A method and system for adaptive content discovery for distributed shared caching system | |
JP2009122981A (en) | Cache allocation method | |
Azimdoost et al. | Optimal in-network cache allocation and content placement | |
Carbunar et al. | Predictive caching for video on demand CDNs | |
Wu et al. | Reuse time based caching policy for video streaming | |
Wang et al. | Exploring locality of reference in P2P VoD systems | |
KR20220078244A (en) | Method and edge server for managing cache file for content fragments caching | |
Carbunar et al. | A framework for network aware caching for video on demand systems | |
Mokhtarian | Content management in planet-scale video CDNs | |
Carbunar et al. | Network aware caching for video on demand systems |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CARBUNAR, BOGDAN O.;PEARCE, MICHAEL D.;VASUDEVAN, VENUGOPAL;AND OTHERS;SIGNING DATES FROM 20110518 TO 20110524;REEL/FRAME:049119/0018Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:049122/0505Effective date: 20130415Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:049122/0541Effective date: 20130528Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:049123/0001Effective date: 20141028 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
CN103931197B - It is determined that the method for the binary code word for conversion coefficient - Google Patents
It is determined that the method for the binary code word for conversion coefficient Download PDFInfo
- Publication number
- CN103931197B CN103931197B CN201280054977.0A CN201280054977A CN103931197B CN 103931197 B CN103931197 B CN 103931197B CN 201280054977 A CN201280054977 A CN 201280054977A CN 103931197 B CN103931197 B CN 103931197B
- Authority
- CN
- China
- Prior art keywords
- value
- symbol
- conversion coefficient
- parametric variable
- threshold value
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000006243 chemical reaction Methods 0.000 title claims abstract description 109
- 238000000034 method Methods 0.000 title claims description 31
- 230000008859 change Effects 0.000 claims description 3
- 230000001131 transforming effect Effects 0.000 claims description 2
- 230000006835 compression Effects 0.000 abstract description 12
- 238000007906 compression Methods 0.000 abstract description 12
- 241000209094 Oryza Species 0.000 description 20
- 235000007164 Oryza sativa Nutrition 0.000 description 20
- 238000013139 quantization Methods 0.000 description 20
- 235000009566 rice Nutrition 0.000 description 20
- 238000004891 communication Methods 0.000 description 11
- 230000000670 limiting effect Effects 0.000 description 11
- 230000015654 memory Effects 0.000 description 11
- 238000012545 processing Methods 0.000 description 8
- 241000208340 Araliaceae Species 0.000 description 5
- 235000005035 Panax pseudoginseng ssp. pseudoginseng Nutrition 0.000 description 5
- 235000003140 Panax quinquefolius Nutrition 0.000 description 5
- 235000008434 ginseng Nutrition 0.000 description 5
- 230000011218 segmentation Effects 0.000 description 5
- 239000013598 vector Substances 0.000 description 5
- 230000003044 adaptive effect Effects 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 230000008569 process Effects 0.000 description 4
- 230000002441 reversible effect Effects 0.000 description 4
- 230000009471 action Effects 0.000 description 3
- 230000002829 reductive effect Effects 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 230000009466 transformation Effects 0.000 description 3
- 241000023320 Luma <angiosperm> Species 0.000 description 2
- 238000013500 data storage Methods 0.000 description 2
- 230000003247 decreasing effect Effects 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- OSWPMRLSEDHDFF-UHFFFAOYSA-N methyl salicylate Chemical compound COC(=O)C1=CC=CC=C1O OSWPMRLSEDHDFF-UHFFFAOYSA-N 0.000 description 2
- 230000005012 migration Effects 0.000 description 2
- 238000013508 migration Methods 0.000 description 2
- 238000005070 sampling Methods 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 230000006399 behavior Effects 0.000 description 1
- 229910002056 binary alloy Inorganic materials 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000000903 blocking effect Effects 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 238000005538 encapsulation Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000002068 genetic effect Effects 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 238000002156 mixing Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002265 prevention Effects 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 238000006467 substitution reaction Methods 0.000 description 1
- 238000000844 transformation Methods 0.000 description 1
- 238000011144 upstream manufacturing Methods 0.000 description 1
- 238000012795 verification Methods 0.000 description 1
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/13—Adaptive entropy coding, e.g. adaptive variable length coding [AVLC] or context adaptive binary arithmetic coding [CABAC]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/18—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a set of transform coefficients
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/1887—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a variable length codeword
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/63—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using sub-band based transform, e.g. wavelets
- H04N19/64—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using sub-band based transform, e.g. wavelets characterised by ordering of coefficients or of bits for transmission
- H04N19/645—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using sub-band based transform, e.g. wavelets characterised by ordering of coefficients or of bits for transmission by grouping of coefficients into blocks after the transform
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/70—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by syntax aspects related to video coding, e.g. related to compression standards
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/90—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using coding techniques not provided for in groups H04N19/10-H04N19/85, e.g. fractals
- H04N19/91—Entropy coding, e.g. variable length coding [VLC] or arithmetic coding
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M7/00—Conversion of a code where information is represented by a given sequence or number of digits to a code where the same, similar or subset of information is represented by a different sequence or number of digits
- H03M7/30—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction
- H03M7/40—Conversion to or from variable length codes, e.g. Shannon-Fano code, Huffman code, Morse code
- H03M7/4006—Conversion to or from arithmetic code
- H03M7/4012—Binary arithmetic codes
- H03M7/4018—Context adapative binary arithmetic codes [CABAC]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
Abstract
A kind of system for creating and code word being updated for the level parameters of conversion coefficient is provided, conversion coefficient is used to be related to the converter unit (TU) for being divided into compilation unit (CU) in high efficiency video compiles (HEVC) system.The system provides the binaryzation of code word and removes unnecessary operation to reduce system complexity and increase compression performance.The system generates the conversion coefficient for being related to TU, and is arranged to parametric variable (cRiceParam) beginning of initial value 0 by providing.The value of currency and symbol that parametric variable is then based on parametric variable is converted into binary code word, and is then updated after by the conversion of each symbol using new currency.Renewal can be provided with reference to tabular value, or these values can be provided according to combinational logic.
Description
The cross reference of related application
The application requires following priority according to 35U.S.C. § 119 (e)：In the first submission that on November 8th, 2011 submits
U.S. Provisional Patent Application series No.61/556,826；The first submission U.S. Provisional Application system that on November 26th, 2011 submits
Arrange No.61/563,774；And the U.S. Provisional Patent Application series for the first submission submitted on November 28th, 2011
No.61/564,248, entire contents are incorporated herein by reference.
Technical field
This disclosure relates to field of video compression, is compiled in particular to using the efficient video handled using block
(HEVC) video compress.
Background technology
Fig. 1 descriptions include can be used for launching and receiving the content of the reconciliation code system 140 of compiling system 110 of HEVC data
Compartment system 100.In certain embodiments, compiling system 110 can include input interface 130, controller 111, counter
112nd, frame memory 113, coding unit 114, transmitter buffer 115 and output interface 135.Solution code system 140 can include
Receiver buffer 150, decoding unit 151, frame memory 152 and controller 153.Compiling system 110 is conciliate code system 140 and passed through
By the transmission path of compression bit stream 105 can be carried, can be coupled each other.The controller 111 of compiling system 110 is receiving
The data volume that will be launched can be controlled on the basis of the capacity of device buffer 150, and it is single to include such as each time
The other specification of the number of position.Controller 111 can control coding unit 114 to prevent the reception signal of decoding system 140
The generation of the failure of decoding operate.Controller 111 can be processor or include having by way of non-limiting example
Microcomputer, random access memory and the read-only storage of processor.
By non-limiting example, can include from the source picture 120 of content supplier's supply containing in video sequence
The video sequence of the frame of source picture.Source picture 120 can be uncompressed or be compressed.If source picture 120 is uncompressed, compile
Encoding function can be had by translating system 110.If source picture 120 is compressed, compiling system 110 can have code conversion work(
Energy.Compilation unit can be derived using controller 111 from source picture.Frame memory 113 can have first area and second
Region, first area can be used for storing the inflow frame from source picture 120, second area can be used for reading these frames and
It is output to coding unit 114.Region switch-over control signal 123 can be output to frame memory 113 by controller 111.Area
Domain switch-over control signal 123 can indicate that first area or second area will be utilized.
Coding control signal 124 can be output to coding unit 114 by controller 111.Coding control signal 124 can make
Obtain coding unit 114 and start encoding operation, compilation unit is such as prepared based on source picture.In response to the volume from controller 111
Code control signal 124, the compilation unit that coding unit 114 can start to be prepared read into high efficient coding processing, such as in advance
Process of compilation or conversion process of compilation are surveyed, it is based on the source picture processing generation video compression data associated with compilation unit
Prepare compilation unit.
Coding unit 114 can encapsulate the video compress number of generation in the encapsulation basic flow (PES) including video packets
According to.Coding unit 114 can use control information and program timestamp (PTS) that video packets are mapped into encoded video signal
122, and encoded video signal 122 can be launched into transmitter buffer 115.
The encoded video signal 122 of video compression data including generation can be stored in transmitter buffer 115.
Traffic count device 112 can be incremented by, to indicate the total amount of data in transmitter buffer 115.Because data are retrieved simultaneously
And removed from buffer, so counter 112 can successively decrease to reflect the data volume in transmitter buffer 115.Can will be by
The area information signal 126 accounted for is transmitted into counter 112, to indicate whether the data from coding unit 114 have been added
Or removed from the buffer 115 of transmitting, so counter 112 can be with increasing or decreasing.Controller 111 is in the quilt that can be communicated
The generation of the video packets as caused by coding unit 114 can be controlled on the basis of occupied area domain information 126, to predict, to avoid,
The overflow and underflow that prevention and/or detection occur in transmitter buffer 115.
, can be with reset information batching counter 112 in response to the preset signal 128 for being generated and being exported by controller 111.In weight
After putting information counter 112, it can be counted to the data exported by coding unit 114 and obtain regarding of having generated
The amount of frequency compressed data and/or video packets.Traffic count device 112 can be supplied to controller 111 and represent obtained letter
The information content signal 129 of breath amount.Controller 111 can control coding unit 114 so that not deposited at transmitter buffer 115
In overflow.
In certain embodiments, input interface 170, receiver buffer 150, controller can be included by solving code system 140
153rd, frame memory 152, decoding unit 151 and output interface 175.The receiver buffer 150 for solving code system 140 can be interim
Store compression bit stream 105, including the video compression data received based on the source picture from source picture 120 and video point
Group.Solution code system 140 can read the associated presentation time stamp of video packets in control information and the data with receiving
Information, and export the frame count signal 163 that may apply to controller 153.Controller 153 can supervise these at a predetermined interval
The count number of frame.By non-restrictive example, each decoding unit 151 completes decoding operate, and controller 153 can supervise these
The count number of frame.
In certain embodiments, when frame count signal 163 indicates that receiver buffer 150 is in predetermined volumes, controller
Decoding commencing signal 164 can be output to decoding unit 151 by 153.When frame count signal 163 is indicated at receiver buffer 150
When less than predetermined volumes, controller 153 can wait institute's count number destination frame become equal to scheduled volume situation generation.When
When the situation occurs, controller 153 can export decoding commencing signal 164.By non-limiting example, when frame count signal 163
When instruction receiver buffer 150 is in predetermined volumes, controller 153 can export decoding commencing signal 164.Based on coding
The associated presentation time stamp of video packets, can decode the video packets of coding with monotonic order (increasing or decreasing) and regard
Frequency compressed data.
In response to decoding commencing signal 164, decoding unit 151 will add up into the data associated with frame and be come from associating
The associated compressed video data decoding of the picture of the video packets of receiver buffer 150.Decoding unit 151 will can decode
Vision signal 162 writes frame memory 152.Frame memory 152 can have the first area that the decoding video signal is written into,
With the second area for decoding picture 160 to be read into output interface 175.
In various embodiments, compiling system 110 can be merged or otherwise with head end transcoder or
Code device is associated, and solve code system 140 can be merged or otherwise with such as mobile device, set top box or
The upstream device of transcoder is associated.
Code system 140 can be conciliate using compiling system 110 separately or together, to code and decode according to various compiling lattice
The video data of formula, including efficient video compiling (HEVC).HEVC is block-based blending space and time prediction compilation scheme.
In HEVC, the input picture of such as frame of video can be divided into the square of referred to as maximum compilation unit (LCU) 200, such as Fig. 2
Shown in.LCU200 can be each identical with 128x128 pixels big, different from input picture is divided into the grand of 16x16 pixels
Other compilation schemes of block.As shown in Figure 3, can be split often by the way that LCU200 is split into four compilation units (CU) 202
Individual LCU200.CU202 can be the square of each a quarter size for LCU200.Each CU200 can be further separated into
It is each four smaller CU202 of larger CU202 a quarter.It is as described in Figure 3 by non-limiting example
The CU202 in the LCU200 upper right corner can be divided into four smaller CU202.In certain embodiments, can be by these more
Small CU202 is further separated into even smaller size of a quarter, and the processing that CU202 is divided into smaller CU202 can
It is multiple to complete.
Using higher and higher video data density, what is desired is that further improving compiling CU mode so that can be with
Rapidly, big input picture and/or macro block efficiently and are accurately coded and decoded.
The content of the invention
The invention provides a kind of improved system for HEVC.In the embodiment for the system, there is provided with
The method that effective means determines the binary code word for conversion coefficient.In encoding input image and/or macro block, using as
The code word of conversion coefficient in the converter unit (TU) of CU202 subdivision.
In one embodiment, there is provided a kind of method, this method include：One or more containing conversion coefficient is provided
The converter unit of subset, each conversion coefficient have quantized value；By subtracting threshold value from the quantized value of conversion coefficient, it is determined that being used for
The symbol of each conversion coefficient, the conversion coefficient have the quantized value equal to or more than threshold value；Offer is arranged to initial value 0
Parametric variable；Each symbol is converted into binary code word by the value of currency and symbol based on parametric variable；And
After transforming per symbol, using the value of new currency undated parameter variable, new currency is based at least partially on current or first
The last value of parametric variable in preceding subset and the value for the symbol finally changed.
In another embodiment, the present invention includes the method for determining the binary code word for conversion coefficient, and it is used
Look-up table is to determine conversion coefficient.This method includes：The converter unit for the one or more subsets for including conversion coefficient is provided, often
Individual conversion coefficient has quantized value；By subtracting threshold value from the quantized value of conversion coefficient, it is determined that the symbol for each conversion coefficient
Number, the conversion coefficient has the quantized value equal to or more than threshold value；The parametric variable for being arranged to initial value 0 is provided；Based on ginseng
The currency of number variable and the value of symbol, each symbol is converted into binary code word；Last value based on parametric variable and most
The value for the symbol changed afterwards, new currency is searched from table；And the value using new currency substitution parametric variable.
In another embodiment, the present invention includes the method for determining the binary code word for conversion coefficient, and it is used
Using logic rather than table is required to look up one or more mathematic conditions for performing.This method includes：Offer includes transformation series
The converter unit of several one or more subsets, each conversion coefficient have quantized value；By subtracting from the quantized value of conversion coefficient
Threshold value is gone, it is determined that the symbol for each conversion coefficient, the conversion coefficient has the quantized value equal to or more than threshold value；There is provided
It is arranged to the parametric variable of initial value 0；The value of currency and symbol based on parametric variable, each symbol is converted into binary system
Code word；Whether the last value and the value for the symbol being finally converted for determining parametric variable meet one or more conditions together；And
And integer 1 is mathematically added with the last value of each parametric variable for meeting one or more conditions.
Brief description of the drawings
The details of the present invention is explained further with the help of the attached drawing, in the accompanying drawings：
The embodiment of Fig. 1 description content compartment systems.
Fig. 2 describes for input picture to be divided into the embodiment of big compilation unit.
Fig. 3 describes for big compilation unit to be divided into the embodiment of compilation unit.
Fig. 4 descriptions are divided into the Quadtrees for Representing of the big compilation unit of compilation unit.
Fig. 5 describes the possibility exemplary arrangement of the predicting unit in compilation unit.
Fig. 6 describes the block diagram of the embodiment for encoding and/or decoding predicting unit.
Fig. 7 descriptions are divided into the exemplary embodiment of the compilation unit of predicting unit and converter unit.
Fig. 8 descriptions are divided into the exemplary embodiment of the Quadtrees for Representing of the compilation unit of converter unit.
Fig. 9 descriptions perform the embodiment of the method for the adaptive binary arithmetic compiling based on context.
Figure 10 describes the exemplary embodiment of significance map.
Figure 11 describes the reality of the subset of inverse (zig-zag) the in a zigzag scanning of conversion coefficient and conversion coefficient in converter unit
Apply example.
Figure 12 descriptions obtain the embodiment for the coefficient level of conversion coefficient and the method for symbol.
Figure 13 describes the embodiment of the scanning sequency of conversion coefficient in subset.
Figure 14 describes the exemplary embodiment of the maximum value of symbol of the parametric variable for association.
Figure 15 descriptions convert the symbols into the exemplary embodiment of the table of binary code word based on parametric variable.
Figure 16 describes the embodiment of the method for compiling symbol and undated parameter variable.
The exemplary implementation of low complex degree renewal table of Figure 17 descriptions with 2,4,13,11 and 10 conditional code threshold value
Example.
The exemplary embodiment of low complex degree renewal table of Figure 18 descriptions with 3,6 and 12 conditional code threshold value.
The exemplary embodiment of low complex degree renewal table of Figure 19 descriptions with 2,5 and 11 conditional code threshold value.
Figure 20 describes the exemplary reality that the combinational logic of the condition of the conditional code threshold value for 2,4,13,11 and 10 represents
Apply example.
Figure 21 describes the exemplary embodiment that the combinational logic of the condition of the conditional code threshold value for 3,6 and 12 represents.
Figure 22 describes the exemplary codes that can be used for undated parameter variable based on 2,5 and 11 conditional code threshold value.
The exemplary embodiment of the low complex degree renewal table of conditional code threshold value of Figure 23 descriptions with A, B and C.
Figure 24 describes the exemplary embodiment that the combinational logic of the condition of the conditional code threshold value for A, B and C represents.
The exemplary embodiment of low complex degree renewal table of Figure 25 descriptions with 2,4 and 12 conditional code threshold value.
Figure 26 describes the exemplary embodiment that the combinational logic of the condition of the conditional code threshold value for 2,4 and 12 represents.
The exemplary embodiment of low complex degree renewal table of Figure 27 descriptions with 2,4 and 13 conditional code threshold value.
Figure 28 describes the exemplary embodiment that the combinational logic of the condition of the conditional code threshold value for 2,4 and 13 represents.
The exemplary embodiment of low complex degree renewal table of Figure 29 descriptions with 2,4 and 11 conditional code threshold value.
Figure 30 describes the exemplary embodiment that the combinational logic of the condition of the conditional code threshold value for 2,4 and 11 represents.
The exemplary embodiment of low complex degree renewal table of Figure 31 descriptions with 2,4 and 10 conditional code threshold value.
Figure 32 describes the exemplary embodiment that the combinational logic of the condition of the conditional code threshold value for 2,4 and 10 represents.
Figure 33 describes the exemplary embodiment of computer hardware.
Embodiment
In HEVC, the input picture of such as frame of video is broken down into CU, then CU is identified in the form of code.So
Afterwards, CU further decomposes into the subelement being compiled, as will be described later.
Initially for the compiling, quaternary tree data represent to can be used for the segmentation for describing LCU200.Quadtrees for Representing can be with
With the node corresponding with LCU200 and CU202.At each node of Quadtrees for Representing, if LCU200 or CU202 quilts
It is divided into four CU202, then can assigns mark " 1 ".If the node is not divided into multiple CU202, mark can be assigned
“0”.By non-limiting example, the Quadtrees for Representing shown in Fig. 4 can describe the LCU segmentations shown in Fig. 3, wherein will
LCU200 is divided into four CU202, and second CU202 is divided into four smaller CU202.The binary data table of quaternary tree
Show it can is CU segmentation marks, CU segmentations mark can be used as expense and such as skip mode mark, merging patterns mark and with
The PU pattern compilers described afterwards are compiled and launched together.By non-limiting example, the CU segmentations mark four shown in Fig. 4 is pitched
Tree representation can be compiled as binary data and represent " 10100 ".
In each leaf of quaternary tree, last CU202 can be broken down into one of referred to as predicting unit (PU) 204
Or multiple pieces.PU204 is square or rectangle.CU202 with 2Nx2N sizes can be with the PU204 shown in Fig. 5 four
One of exemplary arrangement, PU204 have 2Nx2N, 2NxN, Nx2N or NxN size.
PU can be obtained by space or time prediction.Time prediction is related to inter-frame mode picture.Spatial prediction and frame
Internal schema picture is related.Therefore, each CU202 PU204 can be compiled in frame mode or inter-frame mode.Will below
The feature of the compiling related to frame mode and inter-frame mode picture described in paragraph.
Frame mode can use the number from current input image in the case of being compiled in without necessarily referring to other pictures
According to compile I pictures.In frame mode, PU204 can spatially be predicted to compiling.CU202 each PU204 can have
There is the spatial prediction direction of its own.Spatial prediction direction can be it is horizontal, vertical, 45 degree it is diagonal, 135 degree diagonally, DC,
Plane or any other direction.Spatial prediction direction for PU204 can be compiled as syntax elements.In some embodiments
In, it can individually predict the monochrome information (brightness) and color information (colourity) for PU204.In certain embodiments, use
In the number of the luma intra prediction modes of 4x4,8x8,16x16,32x32 and 64x64 block can be 18,35,35,35 and respectively
4.In alternative embodiments, the number for the luma intra prediction modes of the block of any size can be 35.Additional modes can
For chroma intra prediction modes.In certain embodiments, prediction mode for chroma can be referred to as " IntraFromLuma ".
Inter-frame mode compiling can use the data from current input image and one or more reference pictures, with compiling
" P " picture and/or " B " picture.In some situations and/or embodiment, inter-frame mode compiling can result in higher than frame mode
The compression of compiling.In inter-frame mode, PU204 can be that compiling is predicted on the time so that CU202 each PU204 can have
There is the reference picture that one or more motion vectors associate with one or more.It is used for by being searched on the reference picture of association
The motion estimation operation of PU204 best match prediction, can be with running time prediction.Pass through motion vector and the reference chart that associates
As best match prediction can be described.P pictures are used from current input image and one or more numbers previously with reference to image
According to.B pictures are used from current input image and previous and subsequent reference images data, and can be at maximum up to two fortune
Dynamic vector.Motion vector and reference picture can be compiled in HEVC bit streams.In certain embodiments, can be by motion vector
Syntax elements " MV " are compiled as, and reference picture can be compiled as to syntax elements " refIdx ".In certain embodiments, frame
Between pattern compiling can allow room and time prediction compiling.
Fig. 6 describes how the block diagram that PU204, x are encoded and/or decoded.606, can from current PU204, x subtract as
Upper described prediction PU206, the x ' such as predicted by the frame mode 602 or the inter-frame mode 604, it is residual to obtain
Stay PU208, e.608, PU208 can will be remained using block conversion, e is transformed into one or more converter units (TU) 210, E.
Each TU210 can include one or more conversion coefficients 212.In certain embodiments, block conversion can be square.Substituting
In embodiment, block conversion can be non-square.
As shown in Figure 7, in HEVC, different size of piece of conversion set can be performed on CU202 so that can incite somebody to action
Some PU204 are divided into smaller TU210, and other PU204 can have the TU210 with PU204 formed objects.Pass through four
Fork tree representation can show CU202 and PU204 to TU210 division.By non-restrictive example, the quaternary tree table that is shown in Fig. 8
Show the TU210 described in the CU202 shown in Fig. 7 arrangement.
, can be by TU210 in step 610 referring back to Fig. 6, E conversion coefficient 212 is quantized into the probable value of Finite Number
One of.In certain embodiments, this is that wherein by quantifying, lost data are expendable to damage operation.It is quantified
After conversion coefficient 212,612, the conversion coefficient 212 of quantization can be compiled by entropy as described below, to obtain final compression
Bit 214.
, can be by conversion coefficient 216E ' that the de-quantization of conversion coefficient 212 of quantization is de-quantization 614.616, then
By the conversion coefficient 216E ' inverse transformations of de-quantization, PU218, e ' are remained to rebuild., then can be by the residual of reconstruction 618
PU218, e ' it is added with the corresponding prediction PU206 that is obtained by the spatial prediction 602 or the time prediction 604, x ',
PU220, x ' ' are rebuild to obtain.620, in the PUs220 of reconstruction, x ' ' can use deblocking filter, to reduce blocking effect.
620, the adaptive migration processing of sampling is also provided, the adaptive migration processing of the sampling can be conditionally executed to compensate weight
Pixel value skew between the pixel and initial pixel built.In addition, 620, can be made in the PU220 of reconstruction, x ' ' with conditional
With auto-adaptive loop filter, to reduce or minimize the compiling distortion between input picture and output image.
If the image rebuild is the reference picture that will be predicted in inter-frame mode compiling for future time, can incite somebody to action
The image of reconstruction is stored in reference buffer 622.Frame mode compiling image can wherein not need extra reconstruction
The possibility point that can start is decoded in the case of image.
HEVC can use entropy compilation scheme, the adaptive binary algorithm such as based on context during step 612
Compile (CABAC).For CABAC process of compilation figure 9 illustrates.902, the last efficient transformation system of converter unit 210
Several positions can be compiled.Referring back to Fig. 6, the conversion coefficient of quantization can be created by quantifying TU210.Conversion coefficient
212 can be important or insignificant.Figure 10 shows the significance map 1002 of conversion coefficient 212.Insignificant conversion coefficient 212
There can be zero quantized value, and important conversion coefficient 212 can have one or more quantized values.In some embodiments
In, important conversion coefficient 212 can also be known as non-zero quantised transform coefficient 212.If TU210 includes one or more weights
Conversion coefficient 212 is wanted, then as shown in Figure 10, the forward direction in the lower right corner along the upper left corner from TU210 to TU210 can be compiled
The coordinate of the last important conversion coefficient 212 of zigzag Compiler scan.In alternative embodiments, scanned, against the current along head sea battle array
Simple scan, inverse vertical scanning or any other scanning sequency, can scan important conversion coefficient 212.In certain embodiments, this
A little coordinates can be compiled as syntax elements " last_significant_coeff_y " and " last_significant_
coeff_x”.By non-restrictive example, the last important conversion in the TU210 that is compiled in Fig. 9 frame 902 of Figure 10 descriptions
212b position.
Frame 904 in fig.9, significance map 1002 can be compiled into instruction TU210 in important conversion coefficient 212 it is every
Individual position.Significance map 1002 can include the binary element for each position being used in TU210.Can be by binary element
" 0 " is compiled as, to indicate that the conversion coefficient 212 in that position is inessential.Binary element can be compiled as " 1 ", to refer to
Show that the conversion coefficient 212 in that position is important.
How the quantization transform coefficient 212 that Figure 11 illustrates TU210 is divided in groups.In certain embodiments, these groups
It can be sub-block.Sub-block can be the square of the conversion coefficient 212 of 16 quantizations.In other embodiments, these groups can be
Subset 1102.Subset 1102 can be included along continuous 16 quantization transform coefficients of scanning sequency scanned in a zigzag backward
212, as shown in Figure 11.First subset can include last important conversion coefficient 212b subset 1102, no matter in subset
Interior last important conversion coefficient 212b is wherein.By non-restrictive example, last important conversion coefficient 212b in the subsets can be with
It is the 14th conversion coefficient 212, there are two insignificant conversion coefficients afterwards.
In some situations and/or embodiment, there may be one or more groups of the conversion coefficient 212 of 16 quantizations,
The conversion coefficient 212 of quantization is not included in the group containing last important conversion coefficient 212b before along the weight of reverse scanning order
Want conversion coefficient.In these situations and/or embodiment, the first subset can be the son containing last important conversion coefficient 212b
Collection 1102, and any group of part for being not intended as subset 1102 before the first subset 1102.By non-restrictive example, scheming
In 11, the first subset 1102 " subset 0 " be along second group of 16 conversion coefficients 212 of reverse zigzag scanning sequency, and
It is not the part of subset 1102 in the group of 16 conversion coefficients 212 in the TU210 lower right corner, because those conversion coefficients 212 are all
It is not important.In certain embodiments, the first subset 1102 can be expressed as " subset 0 ", and additional subset 1102 can
To be expressed as, " subset 1 ", " subset 2 " is until " subset N ".Last subset 1102 can be set to 0 in place with DC conversion coefficients 212
Subset 1102,0 in the TU210 upper left corner.
Referring again to Fig. 9, in most after-frame 906, the conversion coefficient 212 of each quantization can be compiled into binary value,
The last compression bit 214 shown with obtaining in Fig. 6, including the compiling for significant coefficient rank.During compiling, Ke Yiyu
Compile the absolute value of the conversion coefficient 212 each quantified the Symbol division of the conversion coefficient 212 of quantization.Figure 12 diagrams, which are related to, adopts
The compilation step of the absolute value of the conversion coefficient of taken amount.As shown in Figure 12,1202, the conversion coefficient of each quantization is taken
212 absolute value, enable to obtain the coefficient level 222 of the conversion coefficient 212 of the quantization for frame 1204.
Before the coefficient level 222 for it is expected to occur with more low frequency, compiling it is expected with higher frequency generation in frame
1204 coefficient levels obtained.By non-restrictive example, in certain embodiments, it may be desirable that 0,1 or 2 coefficient level 222
Most frequently occur.Coefficient level 222 is compiled in three parts can identify most frequent genetic coefficient rank 222, leave use
In the more complicated calculating for the coefficient level 222 that may expect minimum frequency generation.In certain embodiments, this can pass through
Coefficient level 222 is compiled in three parts to carry out.It is possible, firstly, to check the coefficient level 222 of the conversion coefficient 212 of quantization with
Determine if to be more than 1.If coefficient level 222 is more than 1, coefficient level 222 can be checked to determine if to be more than 2.
In fig. 12 1206, if coefficient level 222 is more than 2, coefficient level 222 subtracts 3 threshold value 224 to obtain
Symbol.By non-limiting example, in certain embodiments, coefficient level 222 can be compiled as to three kinds of variables：“coeff_
Abs_level_greater1_flag ", " coeff_abs_level_greater2_flag " and " coeff_abs_level_
minus3”., can be by " coeff_abs_ for the conversion coefficient 212 of the quantization with 2 or more coefficient level 222
Level_greater1_flag " is arranged to 1." if coeff_abs_level_greater1_flag " be configured to 1 and
The conversion coefficient 212 of quantization also has 3 or more coefficient level 222, then can be by " coeff_abs_level_
Greater2_flag " is arranged to " 1 ".If " coeff_abs_level_greater2_flag " is arranged into " 1 ", 3
Threshold value 224 can be subtracted from coefficient level 222 to obtain the symbol 226 of the conversion coefficient of quantization, be compiled as " coeff_abs_
level_minus3”.In alternative embodiments, coefficient level 222, and/or threshold value can be compiled in different number of part
224 can be the integer except 3.
For identified occurrence frequency in such as Figure 12 frame less and with the amount of 3 or more coefficient level 222
The conversion coefficient 212 of change, as Figure 12 frame in determine, the conversion coefficient symbol 226 of quantization can be converted into binary code
Word 228, binary code word 228 can be the parts of the final compression ratio spy 214 generated as shown in Figure 6.
Figure 13 illustrates how to change by being scanned by each subset 1102 and in order son according to the value of parametric variable 230
Each symbol 226 of collection 1102, and the symbol 226 of next subset 1102 is then moved to compile each symbol 226.It is only sharp
With truncation (truncated) Rice codes or utilize the group for truncating Rice codes and the 0th rank index Columbus (Exp-Golomb) code
Close, can perform to the conversion of binary code word 228.Parametric variable 230 and the acquisition of symbol 226 two can be based on by truncating Rice codes
System code word 228.For subset 0 and 1, show compiling progress figure and Figure 11 zigzag line together figure 13 illustrates.
In certain embodiments, present scanning position can be represented by " n ".
With reference to figure 15, parametric variable 230 can be the global variable that can be updated when each symbol 226 is compiled.Ginseng
Number variable 230 can control the flatness that code word is distributed.In certain embodiments, parametric variable 230 can be between 0 and N
Any integer.By non-limiting example, in certain embodiments, N can be 3 so that parametric variable 230 can be 0,1,2
Or 3.In certain embodiments, parametric variable 230 can be expressed as " cRiceParam ", as shown in Figure 15 and Figure 14.
Again referring to Figure 14, each parametric variable 230, which can have, to be represented to be used for the associated of the truncation for truncating Rice codes point
Maximum value of symbol 232.In certain embodiments, the maximum value of symbol 232 for special parameter variable 230 can be expressed as
" cTRMax " 232 as shown in Figure 14, it describes the maximum value of symbol 232 for parametric variable 230 " cRiceParam "
The exemplary table of " cTRMax ".It is table 1 by Figure 14 list notation, because it is provided relative to maximum symbol cTRMax232's
First list cRiceParam values 230.If Figure 15 symbol 226 is less equal than the maximum symbol for parametric variable 230
Value 232, then truncation Rice codes are used only symbol 226 is converted into binary code word 228.If symbol 226 is more than and is used for parameter
The maximum value of symbol 232 of variable 230, then it can generate binary code word using the combination for truncating Rice codes and Exp-Golomb codes
228, using the truncation Rice code words for maximum value of symbol 232 cascaded with the 0th rank Exp-Golomb codes, so as to symbol 226
Subtract maximum value of symbol 232 and subtract 1.By non-limiting example, Figure 15 is described based on symbol 226 and parametric variable 230
The exemplary table of the binary code word 228 of generation.Because Figure 15 provides the cRiceParam parameters listed relative to other values
Second table of variable 230, it is marked as table 2.
In some situations and/or embodiment, changed using relatively low parametric variable 230 according to the symbol for truncating Rice codes
226, Billy is changed according to the same symbol 226 for truncating Rice codes with compared with senior staff officer's number variable 230, may cause have less bit
Binary code word 228.By non-limiting example, as shown in by the table described in Figure 15,0 parametric variable is used
The symbol 226 of 230 conversions 0, can cause the binary code word 228 of " 0 " with 1 bit, and use 1 parametric variable 230
The symbol 226 of conversion 0, the binary code word 228 of " 00 " with 2 bits can be caused.
In other situations and/or embodiment, changed using compared with senior staff officer's number variable 230 according to the symbol for truncating Rice codes
226, Billy is changed according to the same symbol 226 for truncating Rice codes with relatively low parametric variable 230, can cause have less bit
Binary code word 228.By non-limiting example, shown in table as depicted in fig. 14, changed using 0 parametric variable
6 symbol 226 can cause the binary code word 228 of " 1111110 " with 7 bits, and use 2 230 turns of parametric variable
The binary code word 228 of " 1010 " with 4 bits can be caused by changing 6 symbol 226.
Figure 16 is the flow chart for the method that description is used for entropy compiling symbol 226., can will for each TU210 1602
Parametric variable is initially positioned to 0 value.1604, compiling system 110 can move to following symbol 226.In some situations and/or reality
Apply in example, following symbol 226 can be the first symbol in the first subset 1102 as shown in Figure 11.1606, ginseng is used
The currency of number variable 230, using Rice and/or Exp-Golomb codes are truncated, symbol 226 can be compiled.1608, it is based on
The value of the last value of parametric variable 230 and the last symbol 226 of compiling, can be with undated parameter variable 230.Some situations and/
Or in embodiment, the updated value of parametric variable 230 can be identical with the finally value of parametric variable 230.In other situations and/or reality
Apply in example, the updated value of parametric variable 230 can be more than the last value of parametric variable 230.Based on calculate or from then herein
The value derived in described table, can be with undated parameter variable 230.
After 1608 undated parameter variable 230, compiling system 110 can return to 1604, and move to next symbol
Numbers 226.Following symbol 226 can be in current subnet 1102 or in next subset 1102.Then, parametric variable is used 1606
230 updated value can compile following symbol 226, and can be weighed for all remaining symbols 226 in TU210, the processing
It is multiple.In certain embodiments, when the symbol 226 in subsequent subsets 1102 is compiled, based on the ginseng from previous subset 1102
The last value of number variable 230 can be with undated parameter variable 230 so that first symbol of the parametric variable 230 in each subset 1102
Be not reset at 226 is zero.In alternative embodiments, parametric variable 230 can be with the first symbol 226 of each subset 1102
It is configured to zero.
Figure 15 is typically referenced to, the truncation Rice codes with smaller cRiceParam parameter values 230 can be preferably volume
These symbols with smaller code word are translated, because they need to represent less bit.For example, if symbol 226 is with 0
Value, using the truncation Rice codes with the cRiceParam parameter values 230 equal to 0, then 1 bit is only needed, but work as
, it is necessary to 2,3 or 4 bits when cRiceParam values are 2,3 or 4 respectively.If symbol have 6 value, using with
CRiceParam values are equal to 0 truncation Rice codes, then need 7 bits.But when cRiceParam values are 2,3 or 4 respectively, need
Want 5,4 or 4 bits.
In one embodiment shown by the table with Figure 17, based on table below come derive and update indicate it is variable
Coeff_level_minus3 [n] cRiceParam230.For TU subsets, cRiceParam230 is initially arranged to 0, and
And it is then based on being updated according to the previous cRiceParam and coeff_abs_level_minus3 [n-1] of Figure 17 table.Because
Figure 17 shows that it lists the 3rd table of the value of symbol 226 relative to cRiceParam parameter values 230, and the table is marked as table 3.Together
Sample, by continuously mark show the likelihood ratio compared with rear continued.
It should be noted that in routinely realizing, each subset with initial " 0 " value resets cRiceParam230 every time.
, can be by for coeff_abs_level_minus3's for the TU of a subset more than 16 continuous symbol coefficients 226
CRiceParam is calculated as each subset and is rearranged into 0, and it supports smaller value of symbol compiling.Generally, in each TU, from most
Non-zero quantised transform coefficient starts afterwards, and the absolute value of non-zero quantised conversion coefficient tends to become increasing.Therefore, for every
CRiceParam is rearranged into 0 by individual subset may not give optimal compression performance.
In fig. 13, each circulation represents the conversion coefficient quantified, and each the number in circulation is coeff_abs_
Level_minus3 value.If it is " NA ", mean that the coeff_abs_level_minus3 for the coefficient is not present
Syntax.Follow reverse scanning pattern, coeff_abs_level_minus3 these values tend in each subset and
From subset to subset more it is bigger, as shown in Figure 13 example.In this example, cRiceParam is arranged in subset 0
For the 2 of " 5 ", and using the cRiceParam for being arranged to 2, by the code word of the value two-value chemical conversion " 1001 " of " 5 ", or 4 ratios
Spy, as shown in Figure 15 table 2.Routinely realize in, then cRiceParam is reset in subset 10.At present, 0 is utilized
Replacement cRiceParam, the identical value of " 5 " in subset 1 is binarized into 111110 code word, or 6 bits at present, such as
Shown in table 2.It is apparent that the reset process not only introduces additional verification operation, it is also possible to causes the compilation performance of difference.
Table 4 and 5 as shown in corresponding Figure 18 and 19 describes the alternate embodiment on renewal table.For these and its
His embodiment, cRiceParam parameters 230 draw as follows.First, for TU, cRiceParam is initially positioned to 0, and so
The coeff_abs_level_ of table is updated based on previous cRiceParam and according to such as cRiceParam of table 4 and table 5 afterwards
Minus3 [n-1] is updated.In these embodiments, each TU only resets cRiceParam once, rather than on making
With each subset of the TU indicated by the embodiment of table 3.
By cRiceParam not being rearranged into 0 in each subset, reset for each subset these
Operation is saved, once and cRiceParam reach 3, will always utilize identical setting truncation rice codes (cRiceParam
Equal to these symbols of 3) binaryzation, this can reduce hardware complexity.
It should be noted that by using the bit required for the different each symbols 226 of the analysis of cRiceParam values 230
Number, Figure 19 table 5 can be generated from Figure 15 table 2, while assume that next class value is statistically not less than along reverse
The current level of scanning.For example, if current sign 226 is 2 and cRiceParam when being 0, following symbol is more than 2 possibility
Property it is higher, and truncation Rice code of the application with the cRiceParam equal to 1 is likely to reduced the number of bit.If current symbol
Number it is that 5 and cRiceParam is 1, then following symbol is higher more than 5 possibility, and application is with equal to 2
CRiceParam truncation Rice codes are likely to reduced the number of bit.If current sign is that 11 and cRiceParam is 2,
Following symbol is higher more than 11 possibility and truncation Rice code of the application with the cRiceParam equal to 3 is likely to reduced ratio
Special number.
In certain embodiments, referring back to Figure 16, according to comparing equation rather than table, it may be determined that in 1608 renewal ginsengs
Number variable 230.This relatively in, determine whether the last value of parametric variable 230 and the value of last compiling symbol 226 meet one
Or multiple conditions 1702, as shown in figure 20.In certain embodiments, the value of last compiling symbol 226 can be expressed as such as table
" coeff_abs_level_minus3 [n-1] " in 3-5.According to which condition be satisfied can with undated parameter variable 230, and
And then it can compile current sign using truncation Rice codes and/or Exp-Golomb codes, the parametric variable 230 based on renewal
226 value.
In certain embodiments, each condition 1702 can include two parts, conditional code threshold value and conditional parameter threshold
Value.In these embodiments, if the value of symbol 226 be equal to or more than conditional code threshold value and parametric variable 230 be equal to or
Greater than condition parameter threshold, then it can meet the condition 1702.In alternative embodiments, each condition 1702 can have any
The part of number has any kind of condition for being used for symbol 226 or parametric variable 230 or both.
Because renewal table can need extra memory to store and extract the data and a large amount of places of memory needs
Manage the device cycle, it may be preferred that performed relatively using combinational logic to substitute renewal table, because the logic can with considerably less
Use the processor cycle.Figure 20 illustrates showing for the combinational logic for determining the cRiceParam for the location updating in table 3
Example.Figure 21 illustrates the example of the combinational logic for representing table 4.Combinational logic for representing table 5 is shown in Figure 22
Example.
In certain embodiments, the condition 1702 of the probable value based on parametric variable 230 and last compiling symbol 226 can
Energy result, is stored in memory as the low complex degree renewal table 1704 as shown in the table in Figure 17.In these implementations
In example, the value of last value and last compiling symbol 226 based on parametric variable 230, by being updated from low complex degree in table 1704
Performing table search can be with undated parameter variable 230.
In another embodiment, the low complex degree level parameters renewal table that can be provided in CABAC, in some implementations
Low complex degree level parameters renewal table can more effectively operate than previous table in example, and not need what is shown in Figure 20-22
Logic.Table is updated for these low complex degree level parameters, is hereafter applied：(1) input：Previous cRiceParam and coeff_
abs_level_minus3[n-1].(2) export：cRiceParam.(3) previously cRiceParam and cRiceParam can have
There is 0,1,2 or 3 value.
In addition, in the low complex degree level parameters update table, hereafter further apply：(1) parametric variable 230 can be with：
Keep identical when finally compiling the value of symbol 226 between 0 and A-1；(2) parametric variable 230 can be arranged to 1 or protected
The last value in parametric variable 230 is held, when symbol 226 is between A and B-1, which is bigger；(3) can be by parametric variable 230
It is arranged to 2 or is maintained at the last value of parametric variable 230, when symbol 226 is between B and C-1, which is bigger；Or (4) when
Parametric variable 230 can be arranged to 3 by symbol 226 when being more than C-1.The mark for these conditions 1702 is described in fig 23
Table 1704 is updated for the low complex degree of table 6.The combinational logic expression for table 6 is described in fig. 24.Can be by A, B and C
Value is arranged to any desired value.In this exemplary embodiment, A, B or C can be conditional code threshold value respectively, and 0,1 or 2
Value can be pa-rameter symbols threshold value respectively.
Renewal table 1704 and the combinational logic associated with A, B with they of C particular value are described in Figure 19 to 31
Represent the selection of 1706 non-restrictive example.Figure 19 and 20 describes to update table 1704 and the conditional code for 3,6 and 13 respectively
The combinational logic of threshold value represents.Figure 29 and 30 describes renewal table 9 respectively and the combination for 2,4 and 11 conditional code threshold value is patrolled
Collect and represent.Figure 31 and 32 describes to update table 10 respectively and the combinational logic for 2,4 and 10 conditional code threshold value represents.
Putting into practice the execution of the sequence of the instruction required for these embodiments can be performed by computer system 3300, such as Figure 20
Shown in.In embodiment, by the execution of the sequence of the execute instruction of single computer system 3300.According to other embodiment, by
Two or more computer systems 3300 that communication link 3315 couples can perform the sequence of these instructions with coordinated with each other.Though
So there may be the description of only one computer system 3300 herein, it should be understood that, any number can be used
Purpose computer system 3300.
With reference to Figure 20 descriptions according to the computer system 3300 of embodiment, it is the function group of computer system 3300
The block diagram of part.As used herein, term computer system 3300, which is widely used in description, can store and operate independently from one
Or any computing device of multiple programs.
Computer system 3300 can include the communication interface 3314 for being coupled to bus 3306.Communication interface 3314 is calculating
Two-way communication is provided between machine system 3300.The communication interface 3314 of corresponding computer system 3300 launch and receives it is electric,
Electromagnetism or optical signal, the signal include the data of the various types of signal messages of expression of such as instruction, message and data
Stream.Communication link 3315 links a computer system 3300 and another computer system 3300.For example, communication link 3315
Can be LAN, ISDN (ISDN) card, modem or internet.
Computer system 3300 can launch by its corresponding communication link 3315 and communication interface 3314 and reception disappears
Breath, data and instruction, including such as apply, the program of code.The program code received can be by corresponding by reception with it
Processor (these processors) 3307 performs, and/or is stored in storage device 3310 or other association non-volatile medias, with
Just performed after.
In embodiment, computer system 3300 operates with reference to data-storage system 3331, such as comprising by department of computer science
The data-storage system 3331 for the database 3332 that system 3300 easily accesses.Computer system 3300 passes through data-interface 3333 and number
Communicated according to storage system 3331.
Computer system 3300 can include bus 3306 and for these instruction, message and the data of communicating, and be referred to as letter
Other communication mechanisms of breath, and the one or more processors 3307 coupled with for the bus 3306 of processing information.Calculate
Machine system 3300 also includes being coupled to the main storage 3308 of bus 3306, such as random access memory (RAM) or other are dynamic
State storage device, for storing the dynamic data performed by these processors 3307 and instruction.Computer system 3300 can be with
Further comprise read-only storage (ROM) 3309 or be coupled to other static memories of bus 3306, used for storage
Static data and instruction in processor (multiple processors) 3307.The storage device 3310 of such as disk or CD can also be by
Bus 3306 is provided and coupled to, for storing data and the instruction for processor (these processors) 3307.
Computer system 3300 can be coupled to display apparatus 3311, such as LCD screen via bus 3306.Such as word
Female or other keys input equipments 3312 are coupled to bus 3306, for information and command selection communication are arrived into processor
(multiple processors) 3307.
According to one embodiment, personal computer system 3300 performs specific behaviour by their corresponding processors 3307
Make, processor 3307 performs the one or more sequences for being included in the instruction of one or more of main storage 3308.It can incite somebody to action
These instructions read main storage 3308 from another computer usable medium of such as ROM3309 or storage device 3310.Bag
The execution for the command sequence being contained in main storage 3308 so that processor (multiple processors) 3307 performs described herein
Processing.In alternative embodiments, hardware circuitry is substituted for or combined with software instruction.Therefore, these embodiments are unlimited
In any particular combination of hardware circuit and/or software.
Although having specifically described the present invention above, only instruct how those skilled in the art manufactures and use
The present invention.Many additional modifications will be fallen within the scope of the present invention, as defined by the claims scope.
Claims (14)
1. a kind of method for determining the binary code word for conversion coefficient, including：
The converter unit for the one or more subsets for including the conversion coefficient is provided, each conversion coefficient, which has, to be quantified
Value；
By subtracting threshold value from the quantized value of the conversion coefficient, it is determined that the symbol for each conversion coefficient, institute
Stating conversion coefficient has the quantized value for being equal to or more than the threshold value；
The parametric variable for being arranged to initial value 0 is provided；
The value of currency and the symbol based on the parametric variable, binary code word is converted into by the symbol；And
Meeting one or more together when the last value of the parametric variable and the described value of the symbol finally changed
By being mathematically incremented by the last value of the parametric variable come after transforming per symbol during condition, using for each symbol
Number new currency update the described value of the parametric variable, one or more of conditions include conditional code threshold value and bar
Part parameter threshold, wherein, it is used for one or more of when the described value of the symbol finally changed is more than or equal to
The conditional code threshold value of a condition in part and the last value of the parametric variable, which are less than or equal to, to be used to be somebody's turn to do
During the conditional parameter threshold value of one condition, meet a condition.
2. according to the method for claim 1, wherein the conversion includes：Described value and the parameter based on the symbol
The updated value of variable, the binary code word is searched from table.
3. according to the method for claim 1, wherein, the threshold value is 3.
4. according to the method for claim 1, wherein, updating the parametric variable includes：
Last value based on (1) described parametric variable and the described value of (2) described symbol finally changed are searched from table
New value.
5. according to the method for claim 1, wherein, for each in one or more of conditions, the condition accords with
Number threshold value difference.
6. according to the method for claim 1, wherein, the described value of the parametric variable is configured to 0,1,2 or 3.
7. according to the method for claim 1, wherein, the described value of the parametric variable be configured to 0,1,2 or 2 with
Specify any integer between higher limit.
8. according to the method for claim 1, wherein, the conversion coefficient is provided in converter unit TU, the conversion
Unit provides the subdivision of the compilation unit CU in high efficiency video compiles HEVC signals.
9. according to the method for claim 1, wherein, the conversion coefficient is provided in converter unit TU subset, institute
State the subdivision that converter unit provides the compilation unit CU in high efficiency video compiles HEVC signals.
10. a kind of method for determining the binary code word for conversion coefficient, including：
The converter unit for the one or more subsets for including the conversion coefficient is provided, each conversion coefficient, which has, to be quantified
Value；
By subtracting threshold value from the quantized value of the conversion coefficient, it is determined that the symbol for each conversion coefficient, institute
Stating conversion coefficient has the quantized value for being equal to or more than the threshold value；
The parametric variable for being arranged to initial value 0 is provided；
The value of currency and the symbol based on the parametric variable, binary code word is converted into by the symbol；
The value of last value and the symbol finally changed based on the parametric variable, searches new currency from table；And
The described value of the parametric variable is replaced using the new currency, the new currency is from when the parametric variable
Finally value and the described value of the symbol finally changed meet to be incremented by the parametric variable during one or more conditions together
The value being finally worth to, one or more of conditions include conditional code threshold value and conditional parameter threshold value, and wherein, when
The described value of the symbol finally changed is more than or equal to the institute for a condition being used in one or more of conditions
The last value for stating conditional code threshold value and the parametric variable is less than or equal to the condition for being used for a condition
During parameter threshold, meet a condition.
11. a kind of method for determining the binary code word for conversion coefficient, including：
The converter unit for the one or more subsets for including conversion coefficient is provided, each conversion coefficient has quantized value；
By subtracting threshold value from the quantized value of the conversion coefficient, it is determined that the symbol for each conversion coefficient, the change
Changing coefficient has the quantized value for being equal to or more than the threshold value；
The parametric variable for being arranged to initial value 0 is provided；
The described value of the currency and the symbol based on the parametric variable, binary code is converted into by each symbol
Word；And
Whether the last value and the value for the symbol finally changed for determining the parametric variable meet one or more conditions together,
Each include conditional code threshold value and conditional parameter threshold value in wherein one or more of conditions；And
By integer 1 and the last value arithmetic for meeting each parametric variable in one or more of conditions
Ground is added；
Wherein, when the described value of the symbol finally changed is more than or equal to for one in one or more of conditions
The conditional code threshold value of individual condition and the last value of the parametric variable are less than or equal to the bar for a condition
During part parameter threshold, meet a condition.
12. the method according to claim 11, wherein, for each in one or more of conditions, the condition
Symbol threshold is different.
13. according to the method for claim 11, wherein, the described value of the parametric variable is configured to 0,1,2 or 3.
14. according to the method for claim 11, wherein, the described value of the parametric variable is configured to 0,1,2 or 2
Any integer between specified higher limit.
Applications Claiming Priority (9)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161556826P | 2011-11-08 | 2011-11-08 | |
US61/556,826 | 2011-11-08 | ||
US201161563774P | 2011-11-26 | 2011-11-26 | |
US61/563,774 | 2011-11-26 | ||
US201161564248P | 2011-11-28 | 2011-11-28 | |
US61/564,248 | 2011-11-28 | ||
US13/671,811 US9270988B2 (en) | 2011-11-08 | 2012-11-08 | Method of determining binary codewords for transform coefficients |
US13/671,811 | 2012-11-08 | ||
PCT/US2012/064229 WO2013070970A2 (en) | 2011-11-08 | 2012-11-08 | Method of determining binary codewords for transform coefficients |
Publications (2)
Publication Number | Publication Date |
---|---|
CN103931197A CN103931197A (en) | 2014-07-16 |
CN103931197B true CN103931197B (en) | 2018-01-23 |
Family
ID=48223685
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201280054977.0A Active CN103931197B (en) | 2011-11-08 | 2012-11-08 | It is determined that the method for the binary code word for conversion coefficient |
Country Status (6)
Country | Link |
---|---|
US (1) | US9270988B2 (en) |
EP (1) | EP2777268A2 (en) |
KR (1) | KR101660605B1 (en) |
CN (1) | CN103931197B (en) |
BR (1) | BR112014011150B1 (en) |
WO (1) | WO2013070970A2 (en) |
Families Citing this family (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
BR112014011155B1 (en) | 2011-11-08 | 2023-04-04 | Google Technology Holdings LLC | METHOD OF DETERMINING A BINARY CODE WORD FOR A SYMBOL, VIDEO ENCODER AND COMPUTER READABLE MEDIA |
US9172962B2 (en) * | 2012-01-20 | 2015-10-27 | Blackberry Limited | Methods and systems for pipelining within binary arithmetic coding and decoding |
WO2013109997A1 (en) | 2012-01-21 | 2013-07-25 | General Instrument Corporation | Method of determining binary codewords for transform coefficients |
US9635358B2 (en) | 2012-01-21 | 2017-04-25 | Google Technology Holdings LLC | Method of determining binary codewords for transform coefficients |
US9479780B2 (en) | 2012-02-01 | 2016-10-25 | Google Technology Holdings LLC | Simplification of significance map coding |
EP2810440A1 (en) | 2012-02-04 | 2014-12-10 | General Instrument Corporation | Devices and methods for context reduction in last significant coefficient position coding |
US9167245B2 (en) | 2012-02-05 | 2015-10-20 | Google Technology Holdings LLC | Method of determining binary codewords for transform coefficients |
US9667994B2 (en) | 2012-10-01 | 2017-05-30 | Qualcomm Incorporated | Intra-coding for 4:2:2 sample format in video coding |
US10021419B2 (en) * | 2013-07-12 | 2018-07-10 | Qualcomm Incorported | Rice parameter initialization for coefficient level coding in video coding process |
EP3202150B1 (en) | 2014-09-30 | 2021-07-21 | Microsoft Technology Licensing, LLC | Rules for intra-picture prediction modes when wavefront parallel processing is enabled |
US9781424B2 (en) | 2015-01-19 | 2017-10-03 | Google Inc. | Efficient context handling in arithmetic coding |
CN106664405B (en) * | 2015-06-09 | 2020-06-09 | 微软技术许可有限责任公司 | Robust encoding/decoding of escape-coded pixels with palette mode |
EP3264763A1 (en) * | 2016-06-29 | 2018-01-03 | Thomson Licensing | Method and apparatus for improved significance flag coding using simple local predictor |
WO2018023554A1 (en) * | 2016-08-04 | 2018-02-08 | SZ DJI Technology Co., Ltd. | System and methods for bit rate control |
BR122021008876B1 (en) | 2018-09-11 | 2021-12-21 | Lg Electronics Inc | RESIDUAL CODING METHOD AND DEVICE FOR THE SAME |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101682773A (en) * | 2007-06-14 | 2010-03-24 | 三星电子株式会社 | Be used for video data is carried out the method and apparatus of entropy coding and entropy decoding |
Family Cites Families (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2870515B2 (en) | 1996-12-27 | 1999-03-17 | 日本電気株式会社 | Variable length coding device |
US7158684B2 (en) | 2002-04-25 | 2007-01-02 | Texas Instruments Incoporated | Entropy coding scheme for video coding |
US7379608B2 (en) | 2003-12-04 | 2008-05-27 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung, E.V. | Arithmetic coding for transforming video and picture data units |
US7580585B2 (en) | 2004-10-29 | 2009-08-25 | Microsoft Corporation | Lossless adaptive Golomb/Rice encoding and decoding of integer data using backward-adaptive rules |
CN101167366B (en) | 2005-12-05 | 2010-10-27 | 华为技术有限公司 | Binarizing method and device |
US8275045B2 (en) | 2006-07-12 | 2012-09-25 | Qualcomm Incorporated | Video compression using adaptive variable length codes |
US7813567B2 (en) | 2007-04-26 | 2010-10-12 | Texas Instruments Incorporated | Method of CABAC significance MAP decoding suitable for use on VLIW data processors |
US8891615B2 (en) | 2008-01-08 | 2014-11-18 | Qualcomm Incorporated | Quantization based on rate-distortion modeling for CABAC coders |
KR101375668B1 (en) | 2008-03-17 | 2014-03-18 | 삼성전자주식회사 | Method and apparatus for encoding transformed coefficients and method and apparatus for decoding transformed coefficients |
US8588536B2 (en) | 2010-02-22 | 2013-11-19 | Texas Instruments Incorporated | Guaranteed-rate tiled image data compression |
JP5707412B2 (en) | 2010-09-29 | 2015-04-30 | パナソニック インテレクチュアル プロパティ コーポレーション オブアメリカＰａｎａｓｏｎｉｃ Ｉｎｔｅｌｌｅｃｔｕａｌ Ｐｒｏｐｅｒｔｙ Ｃｏｒｐｏｒａｔｉｏｎ ｏｆ Ａｍｅｒｉｃａ | Image decoding method, image encoding method, image decoding device, image encoding device, program, and integrated circuit |
US8526495B2 (en) | 2010-11-22 | 2013-09-03 | Mediatek Singapore Pte. Ltd. | Apparatus and method of constrained partition size for high efficiency video coding |
CN107317586B (en) | 2011-01-14 | 2020-11-06 | Ge视频压缩有限责任公司 | Entropy encoding apparatus and method, entropy decoding apparatus and method, and storage medium |
US20130016789A1 (en) | 2011-07-15 | 2013-01-17 | General Instrument Corporation | Context modeling techniques for transform coefficient level coding |
WO2013067435A1 (en) * | 2011-11-04 | 2013-05-10 | Huawei Technologies Co., Ltd. | Differential pulse code modulation intra prediction for high efficiency video coding |
US20130114685A1 (en) | 2011-11-07 | 2013-05-09 | Sharp Laboratories Of America, Inc. | Video decoder with constrained dynamic range |
BR112014011155B1 (en) | 2011-11-08 | 2023-04-04 | Google Technology Holdings LLC | METHOD OF DETERMINING A BINARY CODE WORD FOR A SYMBOL, VIDEO ENCODER AND COMPUTER READABLE MEDIA |
WO2013109997A1 (en) | 2012-01-21 | 2013-07-25 | General Instrument Corporation | Method of determining binary codewords for transform coefficients |
US9635358B2 (en) | 2012-01-21 | 2017-04-25 | Google Technology Holdings LLC | Method of determining binary codewords for transform coefficients |
WO2013110000A1 (en) | 2012-01-21 | 2013-07-25 | General Instrument Corporation | Method of determining binary codewords for transform coefficients |
US9479780B2 (en) | 2012-02-01 | 2016-10-25 | Google Technology Holdings LLC | Simplification of significance map coding |
EP2810440A1 (en) | 2012-02-04 | 2014-12-10 | General Instrument Corporation | Devices and methods for context reduction in last significant coefficient position coding |
US9167245B2 (en) | 2012-02-05 | 2015-10-20 | Google Technology Holdings LLC | Method of determining binary codewords for transform coefficients |
-
2012
- 2012-11-08 WO PCT/US2012/064229 patent/WO2013070970A2/en active Application Filing
- 2012-11-08 US US13/671,811 patent/US9270988B2/en active Active - Reinstated
- 2012-11-08 EP EP12791920.7A patent/EP2777268A2/en not_active Ceased
- 2012-11-08 KR KR1020147014978A patent/KR101660605B1/en active IP Right Grant
- 2012-11-08 CN CN201280054977.0A patent/CN103931197B/en active Active
- 2012-11-08 BR BR112014011150-2A patent/BR112014011150B1/en active IP Right Grant
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101682773A (en) * | 2007-06-14 | 2010-03-24 | 三星电子株式会社 | Be used for video data is carried out the method and apparatus of entropy coding and entropy decoding |
Non-Patent Citations (1)
Title |
---|
Reduced-complexity entropy conding of transform coefficient levels using truncated GOLOMB-RICE codes in video compression;Tung Nguyen,Detlev Marpe,Heiko Schwarz,Thomas Wiegand;《IEEE》;20110914;摘要，正文第3.1节第10行，第3.2节、第3章14-19行，表1 * |
Also Published As
Publication number | Publication date |
---|---|
KR101660605B1 (en) | 2016-09-27 |
WO2013070970A3 (en) | 2014-04-10 |
US20130114698A1 (en) | 2013-05-09 |
WO2013070970A2 (en) | 2013-05-16 |
EP2777268A2 (en) | 2014-09-17 |
CN103931197A (en) | 2014-07-16 |
BR112014011150A2 (en) | 2017-05-16 |
US9270988B2 (en) | 2016-02-23 |
BR112014011150B1 (en) | 2022-08-09 |
KR20140098111A (en) | 2014-08-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN103931197B (en) | It is determined that the method for the binary code word for conversion coefficient | |
CN103918273B (en) | It is determined that the method for the binary code word for conversion coefficient | |
US9706226B2 (en) | Image encoding apparatus and image decoding apparatus employing intra preciction and direction transform matrix | |
CN104737542B (en) | Content-adaptive entropy coding for next-generation video | |
CN105120263B (en) | Low-complexity intra prediction for Video coding | |
JP3764458B2 (en) | Image encoding method, image decoding method, image encoding device, image decoding device, and program | |
US10645410B2 (en) | Video decoding apparatus | |
JP6807987B2 (en) | Image coding device, moving image decoding device, moving image coding data and recording medium | |
US20120033731A1 (en) | Video encoding apparatus and video decoding apparatus | |
KR20110066109A (en) | Coding method and apparatus by using tree structure | |
US20210203978A1 (en) | Merge mode-based inter-prediction method and apparatus | |
CN104041040A (en) | Encoding of prediction residuals for lossless video coding | |
CN105027560A (en) | Method of determining binary codewords for transform coefficients | |
KR20220155397A (en) | Method of coding and decoding images, coding and decoding device and computer programs corresponding thereto | |
JPWO2003043346A1 (en) | Image encoding method, image decoding method, image encoding device, image decoding device, program, computer data signal, and image transmission system | |
CN104956674A (en) | Devices and methods for context reduction in last significant coefficient position coding | |
CN104718758A (en) | Transform-domain intra prediction | |
JP2009218742A (en) | Image encoder | |
GB2539211A (en) | Enhanced coding and decoding using intra block copy mode | |
CN109936742A (en) | Method, code device and the storage medium that video sequence is encoded | |
CN110035288A (en) | Method, code device and the storage medium that video sequence is encoded | |
KR20220038520A (en) | Moving image encoding device, moving image encoding method, and moving image encoding computer program | |
CN112237003A (en) | Method for encoding/decoding image signal and apparatus therefor | |
CN107995496A (en) | The method for determining the binary code word for conversion coefficient | |
CN112153385B (en) | Encoding processing method, device, equipment and storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
C06 | Publication | ||
PB01 | Publication | ||
C10 | Entry into substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
C41 | Transfer of patent application or patent right or utility model | ||
TA01 | Transfer of patent application right |
Effective date of registration: 20160311Address after: American CaliforniaApplicant after: Technology Holdings Co., Ltd of GoogleAddress before: Illinois StateApplicant before: Motorola Mobility, Inc. |
|
GR01 | Patent grant | ||
GR01 | Patent grant |
US6269380B1 - Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols - Google Patents
Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols Download PDFInfo
- Publication number
- US6269380B1 US6269380B1 US09/143,778 US14377898A US6269380B1 US 6269380 B1 US6269380 B1 US 6269380B1 US 14377898 A US14377898 A US 14377898A US 6269380 B1 US6269380 B1 US 6269380B1
- Authority
- US
- United States
- Prior art keywords
- document
- properties
- documents
- computer system
- content
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
- 230000007246 mechanism Effects 0.000 title claims abstract description 31
- 238000004891 communication Methods 0.000 title claims description 21
- 230000006399 behavior Effects 0.000 claims description 23
- 238000000034 method Methods 0.000 claims description 14
- 230000008520 organization Effects 0.000 claims description 6
- 230000009471 action Effects 0.000 claims description 4
- 238000013519 translation Methods 0.000 claims description 4
- 230000003213 activating effect Effects 0.000 claims 1
- 230000014616 translation Effects 0.000 claims 1
- 238000000926 separation method Methods 0.000 abstract description 4
- 238000007726 management method Methods 0.000 description 50
- 230000003068 static effect Effects 0.000 description 12
- 230000003993 interaction Effects 0.000 description 11
- 230000008859 change Effects 0.000 description 7
- 230000000694 effects Effects 0.000 description 7
- 230000008901 benefit Effects 0.000 description 4
- 230000010076 replication Effects 0.000 description 4
- 238000013459 approach Methods 0.000 description 3
- 230000007717 exclusion Effects 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 238000012360 testing method Methods 0.000 description 3
- 241000218218 Ficus <angiosperm> Species 0.000 description 2
- 239000008186 active pharmaceutical agent Substances 0.000 description 2
- 230000004075 alteration Effects 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000010354 integration Effects 0.000 description 2
- 230000002452 interceptive effect Effects 0.000 description 2
- 230000002085 persistent effect Effects 0.000 description 2
- 230000004044 response Effects 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 238000012800 visualization Methods 0.000 description 2
- 235000006508 Nelumbo nucifera Nutrition 0.000 description 1
- 240000002853 Nelumbo nucifera Species 0.000 description 1
- 235000006510 Nelumbo pentapetala Nutrition 0.000 description 1
- 230000002730 additional effect Effects 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 239000003795 chemical substances by application Substances 0.000 description 1
- 230000001149 cognitive effect Effects 0.000 description 1
- 150000001875 compounds Chemical class 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 238000013523 data management Methods 0.000 description 1
- 230000007812 deficiency Effects 0.000 description 1
- 238000010586 diagram Methods 0.000 description 1
- 230000004069 differentiation Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000002474 experimental method Methods 0.000 description 1
- 239000012530 fluid Substances 0.000 description 1
- 230000001343 mnemonic effect Effects 0.000 description 1
- 238000012545 processing Methods 0.000 description 1
- 238000011160 research Methods 0.000 description 1
- 238000012384 transportation and delivery Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
- Y10S707/99945—Object-oriented database structure processing
Definitions
- the inventors have recognized that a large amount of a user's interaction with a computer has to do with document management, such as storing, filing, organizing and retrieving information from numerous electronic documents. These documents may be found on a local disc, on a network system file server, an e-mail file server, the world wide web, or a variety of other locations. Modern communication delivery systems have had the effect of greatly increasing the flow of documents which may be incorporated within a user's document space, thereby increasing the need for better tools to visualize and interact with the accumulated documents.
- the present invention is directed to a document management system having a distributed document infrastructure where documents are organized and managed in terms of properties attached to documents.
- the invention is particularly concerned with mechanisms for unifying the instructions received from a variety of sources having different protocols, and unifying the presentation of data retrieved from a variety of storage repositories having different protocols.
- Such mechanisms allow for manipulation of documents within the document management system in a simplified manner, not requiring users to understand specific characteristics of a plurality of different applications and/or storage repositories which interact with the document management system.
- the mechanisms further remove the need for the user and/or documents to know where the contents of documents were retrieved.
- the present invention intends to overcome these deficiencies with a document management system which includes a common document layer where a user has the ability to issue requests for documents from systems having different protocols.
- the document management system includes a mechanism for unifying the receipt of requests for such distinct documents and a retrieval mechanism for unifying the retrieval of the contents for such distinct documents. This system thereby allows for the generation of collections from a variety of storage hierarchies with different protocols in an easy and efficient manner for a user who is unaware of the location from which the document contents were retrieved.
- Hierarchical storage systems wherein documents are treated as files that exist in directories or folders, which are themselves contained in other directories, thereby creating a hierarchy that provides the structure for document space interactions.
- Each directory in a hierarchy of directories will commonly contain a number of individual files.
- files and directories are given alpha-numeric, mnemonic names in large storage volumes shared via a network. In such a network, individual users may be assigned specific directories.
- a file located in a sub-directory is located by its compound path name.
- the character string D: ⁇ TREE ⁇ LIMB ⁇ BRANCH ⁇ TWIG ⁇ LEAF.FIL could describe the location of a file LEAF.FIL whose immediate directory is TWIG and which is located deep in a hierarchy of files on the drive identified by the letter D.
- Each directory is itself a file containing file name, size, location data, and date and time of file creation or changes.
- Navigation through a file system can be considered as navigation through semantic structures that have been mapped onto the file hierarchy. Such navigation is normally accomplished by the use of browsers and dialog boxes.
- This movement can be seen not only as a movement from one file or folder to another, but also as a search procedure that exploits features of the documents to progressively focus on a smaller and smaller set of potential documents.
- the structure of the search is mapped onto the hierarchy provided by the file system, since the hierarchy is essentially the only existing mechanism available to organize files.
- documents and files are not the same thing.
- the inventors are aware that others have studied the area of document management/storage systems.
- DMA is a proposed standard from AIIM designed to allow document management systems from different vendors to interoperate.
- the DMA standard covers both client and server interfaces and supports useful functionality including collections, versioning, renditions, and multiple-repository search.
- a look at the APIs show that DMA objects (documents) can have properties attached to them.
- the properties are strongly typed in DMA and must be chosen from a limited set (string, int, date . . . ).
- one of the allowable property types is another DMA object.
- a list type is allowed to build up big properties. Properties have a unique IDs in DMA.
- the properties are attached to documents without differentiation about which user would like to see them; properties are stored in the document repository that provides the DMA interface, not independently from it. Similarly, DMA does not provide support for active properties.
- WebDAV is another interface designed to allow an extended uniform set of functionality to be attached with documents available through a web server.
- WebDAV is a set of extensions to the HTTP 1.1 protocol that allow Web clients to create and edit documents over the Web. It also defines collections and a mechanism for associating arbitrary properties with resources. WebDAV also provides a means for creating typed links between any two documents, regardless of media type where previously, only HTML documents could contain links.
- WebDAV provides support for collections, these are defined by extension (that is all components have to be explicitly defined); and although it provides arbitrary document properties, these live with the document itself and cannot be independently defined for different users, furthermore there is no support for active properties and are mostly geared toward having ASCII (or XML) values.
- DocuShare is a simple document management system built as a web-server by Xerox Corporation. It supports simple collections of documents, limited sets of properties on documents and support for a few non-traditional document types like calendars and bulletin boards. It is primarily geared toward sharing of documents of small, self-defined groups (for the latter, it has support to dynamically create users and their permissions.) DocuShare has notions of content providers, but these are not exchangeable for a document. Content providers are associated with the type of the document being accessed. In DocuShare properties are static, and the list of properties that can be associated with a document depends on the document type. Users cannot easily extend this list. System administrators must configure the site to extend the list of default properties associated with document types, which is another contrast to the resent invention.
- DocuShare properties can be visible to anyone who has read access for the collection in which the document is in. Properties are tightly bound to documents and it is generally difficult to maintain a personalized set of properties for a document, again a different approach than the one described in the present invention.
- SPIN an operating system “SPIN” from the University of Washington allows users to inject code into the kernel that is invoked when an appropriate system call or system state occurs. (For example, users can inject code that alters paging decisions.) If it has already been done, their technology could be used to make it possible to inject code into the file system to invoke a user's code on read and write.
- code injected into SPIN runs at the kernel level and users can only express their behaviors in a restricted, safe language in which it is not possible to do “bad things.” As such, expressiveness is limited.
- the properties in the present invention run at the user level, and can have GUIs call out to third party libraries and in general be far more expressive than a kernel injected spindle.
- the properties of the present invention are expressed in terms of documents, as in “I attach property X to Document Y.”
- the SPIN system extends a system call such as “read” on all files.
- the example behaviors mentioned above are more easily mapped into a system such as the present invention in which properties are explicitly attached to individual documents.
- the Windows NT (from Microsoft) has a function called “Filter Drivers” which, once installed, can see the accesses made to a file system.
- Installing filter drivers is a privileged operation, not available to normal users.
- a user level mechanism such as the document properties of the present invention and event dispatching architecture would be needed to allow users to express their desired behaviors.
- Tandem e-mail system which has a “screen cobal” language and has hooks to find out when events occur.
- This system allows users to code filters to do custom operations when documents arrive and/or read.
- the Tandem system solves the problem in a specific domain and invokes only the user's behaviors when the documents are accessed via the mail application. In the present invention, the behaviors are invoked regardless of the application and regardless of the interface.
- a system discussed in “Lifestreams: Organizing your Electronic Life”, AAAI Fall Symposium: AI Applications in Knowledge Navigation on Retrieval (Cambridge, Mass.), E. Freeman and S. Fertig, November, 1995, uses a timeline as the major organizational resource for managing document spaces. Lifestreams is inspired by the problems of a standard single-inheritance file hierarchy, and seeks to use contextual information to guide document retrieval. However, Lifestreams replaces one superordinate aspect of the document (its location in the hierarchy) with another (its location in the timeline). The article “Semantic File Systems” by Gifford et al., Proc.
- the present invention is concerned with a more general paradigm based on a distributed, multi-principal property-based system and with how interfaces can be revised and augmented to deal with it; the fact that the present invention can act as a file system is simply in order to support existing file system-based applications, rather than as an end in itself.
- DLITE is the Stanford Digital Libraries Integrated Task Environment, which is a user interface for accessing digital library resources as described in “The Digital Library Integrated Task Environment” Technical Report SIDL-WP-1996-0049, Stanford Digital Libraries Project (Palo Alto, Calif.) 1996, by S. Cousins et al. DLITE explicitly reifies queries and search engines in order to provide users with direct access to dynamic collections.
- the goal of DLITE is to provide a unified interface to a variety of search engines, rather than to create new models of searching and retrieval. So although queries in DLITE are independent of particular search engines, they are not integrated with collections as a uniform organizational mechanism.
- Multivalent documents define documents as comprising multiple “layers” of distinct but intimately-related content.
- Small dynamically-loaded program objects, or “behaviors” activate the content and work in concert with each other and layers of content to support arbitrarily specialized document types.
- a document management infrastructure built around a multivalent perspective can provide an extensible, networked system that supports incremental addition of content, incremental addition of interaction with the user and with other components, reuse of content across behaviors, reuse of behaviors across types of documents, and efficient use of network bandwidth.”
- Multivalent document behaviors extend and parse the content layers, each of which is expressed in some format. Behaviors are tasked with understanding the formats and adding functionality to the document based on this understanding.
- the Multivalent document system is an attempt at creating an infrastructure that can deal with the document format problem by incrementally adding layers of “understanding” of various formats.
- the present invention has an explicit goal of exploring and developing a set of properties that are independent of document format. While properties could be developed that could parse and understand content, it is expected that most will be concerned with underlying storage, replication, security, and ownership attributes of the documents.
- the Multivalent document system focuses on extensibility as a tool for content presentation and new content-based behaviors; the present invention focuses on extensible and incrementally-added properties as a user-visible notion to control document storage and management.
- File systems known as the Andrew File System (AFS), Coda, and Ficus provide a uniform name space for accessing files that may be distributed and replicated across a number of servers. Some distributed file systems support clients that run on a variety of platforms. Some support disconnected file access through caching or replication. For example, Coda provides disconnected access through caching, while Ficus uses replication.
- the immediately described distributed file systems support document (or file) sharing, they have a problem in that a file's hierarchical pathname and its storage location and system behavior are deeply related. The place in the directory hierarchy where a document gets stored generally determines on which servers that file resides.
- Distributed databases such as Oracle, SQL Server, Bayou, and Lotus Notes also support shared, uniform access to data and often provide replication. Like some distributed file systems, many of today's commercial databases provide support for disconnected operation and automatic conflict resolution. They also provide much better query facilities than file systems. However, distributed databases suffer the same problems as file systems in that the properties of the data, such as where it is replicated and how it is indexed and so on, are generally associated with the tables in which that data resides. Thus, these properties cannot be flexibly managed and updated. Also, the set of possible properties is not extensible.
- a digital library system known as the Documentum DocPage repository, creates a document space called a “DocBase.”
- This repository stores a document as an object that encapsulates the document's content along with its attributes, including relationships, associated versions, renditions, formats, workflow characteristics, and security.
- These document objects can be infinitely combined and re-combined on demand to form “Virtual Documents”: dynamic configurations of document objects that can come from any source.
- DocPage supports organization of documents via folder and cabinet metaphors, and allows searching over both document content and attributes.
- the system also provides checkin/checkout-style version control, full version histories of documents, and annotations (each with its own attributes and security rules).
- the system also supports workflow-style features including notification of updates.
- DocBase uses a replicated infrastructure for document storage (see: http://www.documentum.com).
- Documentum DocPage Among the key differences between Documentum DocPage and the present invention are: First, in the present system properties are exposed as a fundamental concept in the infrastructure. Further, the present system provides for a radically extensible document property infrastructure capable of supporting an aftermarket in document attributes. Documentum seems to be rather closed in comparison; the possible attributes a document can acquire are defined a priori by the system for a particular application environment and cannot be easily extended. Additionally, Documentum does not have the vision of universal access to the degree of the present invention which supports near-universal access to document meta-data, if not document content. In comparison, the scope of Documentum narrows to document access within a closed setting (a corporate intranet).
- the present invention contemplates a new and improved document management system for use in a computer system, which includes a storage layer having at least two storage repositories that use protocols different from each other and an application layer having at least two applications which use protocols that are different from each other.
- the document management system is interposed within a communication channel of the computer system to intercept communications between the storage layer and the application layer.
- Translators are provided to facilitate communication between applications and storage repositories with the document management system. Properties which are attached to documents are configured to be initiated upon the interception of operation requests issued by the applications.
- the document management system is configured such that the applications and the storage repositories are unaware of the document management system or the properties.
- the document management system is designed with a bit provider which is given a request from a document to retrieve that document's content stored in one of the storage repositories.
- the bit provider includes a translation mechanism (when the repository being requested uses a protocol different than that of the document management system).
- the bit provider delivers the content to the document in a manner such that the document is unaware of the location from which the content was obtained.
- the user is provided with the ability to attach properties to the documents from a variety of dissimilar repositories, and a plurality of users may attach properties directed to content of the same base document.
- FIG. 1 shows a hierarchical storage mechanism compared to the concept of properties of the present invention
- FIG. 2 is a block diagram of a document management system according to the present invention, interposed within a communication channel between a user and an operating system;
- FIG. 3 is a representation of a document management system of the present invention implemented in a computer system
- FIG. 4 is a flowchart showing retrieval of document content by a bit provider of the present invention.
- FIG. 5 depicts a document collection.
- Action The behavior part of a property.
- Active Property A property in which code allows the use of computational power to either alter the document or effect another change within the document management system.
- Base Document Corresponds to the essential bits of a document. There is only one Base Document per document. It is responsible for determining a document's content and may contain properties of the document, and it is part of every principal's view of the document.
- Base Properties Inherent document properties that are associated with a Base Document.
- Bit Provider A special property of the base document. It provides the content for the document by offering read and write operations. It can also offer additional operations such as fetching various versions of the document, or the encrypted version of the content.
- Browser A user interface which allows a user to locate and organize documents.
- Combined Document A document which includes members of a collection and content.
- Content Document A document which has content.
- Document This refers to a particular content and to any properties attached to the content.
- the content referred to may be a direct referral or an indirect referral.
- Collection Content Document
- No-Content Document Combined Document.
- Document Handle Corresponds to a particular view on a document, either the universal view, or that of one principal.
- DocumentID A unique identifier for each Base Document.
- a Reference Document inherits the DocumentID from its referent. Document identity is thus established via the connections between Reference Document References and Base Documents. Logically, a single document is a Base Document and any Reference Documents that refer to it.
- Kernel Manages all operations on a document.
- a principal may have more than one kernel.
- Multi-Principal Ability for multiple principals to have their own set of properties on a Base Document wherein the properties of each principal may be different.
- Notification Allows properties and external devices to find out about operations and events that occur elsewhere in DMS.
- No Content Document A document which contains only properties.
- Off-the-Shelf Applications Existing applications that use protocols and document storage mechanisms provided by currently existing operating systems.
- Principal A “User” of the document management system. Each person or thing that uses the document management system is a principal. A group of people can also be a principal. Principals are central because each property on a document can be associated with a principal. This allows different principals to have different perspectives on the same document.
- Property Some bit of information or behavior that can be attached to content. Adding properties to content does not change the content's identity. Properties are tags that can be placed on documents, each property has a name and a value (and optionally a set of methods that can be invoked).
- Property Generator Special case application to extract properties from the content of a document.
- Reference Document Corresponds to one principal's view of a document. It contains a reference to a Base Document (Reference Document A refers to Base Document B) and generally also contains additional properties. Properties added by a Reference Document belong only to that reference; for another principal to see these properties, it must explicitly request them. Thus, the view seen by a principal through his Reference Document is the document's content (through the Base Document), and a set of properties (both in the reference and on the Base Document). Even an owner of a Base Document can also have a Reference Document to that base, in which he places personal properties of the document that should not be considered an essential part of the document and placed in all other principal's view.
- Static Property A name-value pair associated with the document. Unlike active properties, static properties have no behavior. Provides searchable meta-data information about a document.
- the structure that file systems provide for managing files becomes the structure by which users organize and interact with documents.
- documents and files are not the same thing.
- the present invention has as an immediate goal to separate management of properties related to the document or concerning the document from the management of the document content. Therefore, user-specific document properties are managed close to the document consumer or user of the document rather than where the document is stored. Separation of the management of user properties from the document content itself provides the ability to move control of document management from a closed file system concept to a user-based methodology.
- the properties need to be presented within the content and/or property read/write path of a computer system, with the ability to both change the results of an operation as well as take other actions.
- the outline of the concept is described in FIG. 2, where once user (U) issues an operation request (O), prior to that operation being performed by operating system (OS), a call is made to document management system (DMS) A of the present invention, which allows DMS A to function so as to achieve the intended concepts of the present invention.
- DMS document management system
- O′ operation request
- the results are returned (R) to DMS A which in turn presents results (R′) to user (U).
- FIG. 3 sets forth the architecture of a document management system (DMS) A of the present invention in greater detail.
- DMS document management system
- Document management system (DMS) A is shown configured for operation with front-end components B, and back-end components C.
- Front-end components B include applications 10 a - 10 n and 11 a - 11 n, such as word processing applications, mail applications among others. Some of the applications are considered DMS aware 10 a - 10 n which means these applications understand DMS protocols for storing, retrieving and otherwise interacting with DMS A. Other components are considered non-DMS aware 11 a - 11 n.
- Browsers 12 a (DMS aware) and 12 b (non-DMS aware) are considered specialized forms of applications.
- front-end translator 13 is provided.
- back-end components C can include a plurality of repositories 14 a - 14 n, where the content of documents are stored.
- repositories can include the hard disc of a principal's computer, a file system server, a web page, a dynamic real time data transmission source, as well as other data repositories.
- bit providers such as bit provider 16 are used. These bit providers are provided with capability to translate appropriate storage protocols.
- Principals 1 - n each have their own kernel 18 a- 18 n for managing documents, such as documents 20 a - 20 n.
- Documents 20 a- 20 n are considered to be documents the corresponding principal 1 - n has brought into its document management space. Particularly, they are documents that a principal considers to be of value and therefore has in some manner marked as a document of the principal.
- the document for example, may be a document which the principal created, it may be an e-mail sent or received by the principal, a web page found by the principal, a real-time data input such as an electronic camera forwarding a continuous stream of images, or any other form of electronic data (including video, audio, text, etc.) brought into the DMS document space.
- Each of the documents 20 a- 20 n have static properties 22 and/or active properties 24 placed thereon.
- Document 20 a is considered to be a base document and is referenced by reference documents 20 b- 20 c. As will be discussed in greater detail below, in addition to base document 20 a having static properties 22 and/or active properties 24 , base document 20 a will also carry base properties 26 which can be static properties 22 and/or active properties 24 (Static properties are shown with a—and active properties are shown with a—o).
- Reference documents 20 b- 20 c are configured to interact with base document 20 a. Both base documents and reference documents can also hold static properties 22 and/or active properties 24 . When principals 2 , 3 access base document 20 a for the first time, corresponding reference documents 20 b- 20 c are created under kernels 18 b- 18 c, respectively. Reference documents 20 b- 20 c store links 28 and 30 to unambiguously identify their base document 20 a. In particular, in the present invention each base document is stored with a document ID which is a unique identifier for that document. When reference documents 20 b- 20 c are created, they generate links to the specific document ID of their base document.
- reference document 20 n is created with a link 32 to reference document 20 b of Principal 3 .
- link principal n will be able to view (i.e. its document handle) the public properties principal 3 has attached to its reference document 20 c as well as the base properties and public reference properties of base document 20 a. This illustrates the concept of chaining.
- DMS A of the present invention does not require the principal to operate within a strict hierarchy such as in file or folder-type environments. Rather, properties 22 , 24 which are attached to documents allows a principal to search and organize documents in accordance with how the principal finds it most useful.
- principal 1 owner of kernel 18 a
- principal 2 owner of kernel 18 b
- principal 2 can place properties on Reference Document 20 b. By placement of these properties, principal 2 can retrieve the base document in a manner different than that envisioned by principal 1 .
- a principal may run a query requesting all documents having a selected property.
- a user may run query language requests over existing properties.
- DMS A manages a document space where properties are attached by different principals such that actions occur which are appropriate for a particular principal, and are not necessarily equivalent to the organizational structure of the original author of a document or even to other principals.
- Another noted aspect of the present invention is that since the use of properties separates a document's inherent identity from its properties, from a principal's perspective, instead of requiring a document to reside on a single machine, documents in essence can reside on multiple machines (base document 20 a can reside on all or any one of kernels 18 a- 18 n ). Further, since properties associated with a document follow the document created by a principal (for example, properties on document 20 b of kernel 18 b, may reference base document 20 a ), properties of document 20 b will run on kernel 18 b, even though the properties of document 20 b are logically associated with base document 20 a.
- kernel 18 b i.e. principal 2
- properties are maintained with the principal who put the properties onto a document.
- a DMS document interface provides access to documents as Java objects. Applications can make use of this interface by importing the relevant package in their Java code, and coding to the API provided for accessing documents, collections and properties. This is the standard means to build new DMS-aware applications and to experiment with new interaction models.
- DMS Browser 12 (of FIG. 3) can be regarded as a DMS application and is built at this level, the DMS document interface provides Document and Property classes, with specialized subclasses supporting all the functionality described here (such as collections, access to WWW documents, etc.). Applications can provide a direct view of DMS documents, perhaps with a content-specific visualization, or can provide a wholly different interface, using DMS as a property-based document service back-end.
- translators such as translator 13 of FIG. 3
- a server implementing the NFS protocol is used as the translator.
- This is a native NFS server implementation in pure Java.
- the translator (or DMS NFS server) provides access to the DMS document space to any NFS client; the server is used to allow existing off-the-shelf applications such as Microsoft Word to make use of DMS documents; on PC's, DMS simply looks like another disk to these applications, while on UNIX machines, DMS A looks like part of the standard network filesystem.
- DMS A is directly in the content and property read/write path for existing or off-the-shelf applications.
- the alternative approach would be to attempt to post-process files written to a traditional filesystem by applications, such as Word, that could not be changed to accommodate DMS A.
- applications such as Word
- relevant properties such as ones which record when the document was last used or modified
- relevant properties are kept up-to-date. Even though the application is written to use filesystem information, the DMS database remains up to date, because DMS A is the filesystem.
- NFS provides access to the query mechanism.
- Appropriately formatted directory names are interpreted as queries, which appear to “contain” the documents returned by the query.
- DMS provides this NFS service
- DMS is not a storage layer. Documents actually live in other repositories.
- using the NFS layer provides uniform access to a variety of other repositories (so that documents available over the Web appear in the same space as documents in a networked file system). The combination of this uniformity along with the ability to update document properties by being in the read and write path makes the NFS service a valuable component for the desired level of integration with familiar applications. It is to be appreciated that while a Java implementation, as well as a server implementing NFS protocol are discussed, these are only potential mechanisms of implementing the present invention, and other options are also available.
- Properties are either directly associated with base documents or else grouped into document references that are associated with principals.
- Properties associated with the base document are base properties and are “published”. The intent with published properties is to represent information inherent in a given document, such as its size or content type. Thus, any principal with access to the base document will be able to see or review the published properties. As such, users should not use published properties for personal information. For instance, if a property used by a principal is the property “interesting” (i.e. a user wishes to collect all documents which he has tagged with a property defined as “interesting”), such a property is rarely inherent.
- the active property mechanism provides a means to provide behaviors such as that required by properties like “private” which affect not only the document's status but also its behavior.
- active properties afford this sort of interactive control in a way that maintains the advantages of a property-based system: document-centric, meaningful to users, and controlled by the document consumer.
- Active properties can be attached to documents just like static properties, but they also contain program code which is involved in performing document operations.
- All active properties have three essential features: a name, a value, and active methods. Thus, any property can be made active by giving it active methods. Even properties thought of as being static are in some ways active since their getValue and setValue methods are provided by their class object. The value of a property can be used by its active methods to store persistent data associated with the property.
- interaction with the document space is based on meaningful properties of documents, rather than the structure in which documents were filed.
- document properties in this manner means that interaction is more strongly connected to the user's immediate concerns and the task at hand rather than an extrinsic structure.
- the structure of the document space reflects changes in the state of documents, rather than simply their state when they were filed.
- collections still appear inside collections, and standard filing information—such as document ownership, modification dates, file types, etc.—are still preserved by the present system, appearing as document properties maintained by the infra-structure.
- standard filing information such as document ownership, modification dates, file types, etc.
- an aspect of the present invention is the separation of a document's properties from a document's content, and that a user is able to retrieve the content of a document existing at a location separate from the properties.
- the DMS A architecture used to implement this retrieval is illustrated in FIG. 3 .
- bit provider 16 acts as a mechanism to retrieve content from external storage repositories 14 a- 14 n.
- Bit providers are also provided with the capability to translate appropriate protocols when necessary.
- the content which a bit provider is instructed to retrieve could be found in a World-Wide-Web page, a file system, e-mail server, or even dynamic data such as an electronic video feed, etc.
- DMS A uses bit providers to manage documents completely independently of how the documents are stored, i.e. where the content of base document 20 a exists. Thus, a user or principal does not need to worry about where the bits of the content are actually existing. Rather, once within DMS A, a user or principal will simply view the content as a DMS A document and will perform management operations exactly the same way regardless of where the content is actually stored. This allows a single document management layer to run over a large variety of storage systems and storage architectures.
- Bit providers work in terms of active properties.
- DMS A assigns responsibility for providing the document content to an active “bit provider” property.
- Code associated with the property handles all requests to read or write the document's content. This gives the property the ability to undertake additional kinds of activities. Among these are caching, meaning it can make a local copy of content that is otherwise stored remotely.
- a further activity is access control, where the bit provider is informed of the requester of each request, and can deny the request based on access control criteria.
- a further activity is configuration management. Particularly, since the bit provider mediates all requests for the document content, you can store the bits (if any) at any accessible place. Part of its decision of where to store them can be in response to configuration management information recorded in properties.
- bit provider Yet another activity of the bit provider is collections - - - specifically collections of documents - - - .
- the “content” is actually a collection of other documents, and a bit provider manages the record of that collection.
- Another feature of bit providers is that they are replaceable, i.e. a particular base document may change from one bit provider, to another having different capabilities.
- FIG. 4 a flow chart of a request issued to DMS A requiring implementation of a bit provider is set forth.
- An application issues a request to read the content of a document to DMS A ( 100 ). If this request is in a non-DMS-protocol, the request is translated ( 102 ). Thereafter the translated request (or the DMS-aware request) is received by the document ( 104 ). The document then forwards a request to its bit provider, asking for the content of the document ( 106 ). The bit provider knows the type of environment (WWW, hard disc, e-mail, etc.) in which the document content is stored and whether the requested document content can be obtained directly or whether a translation to a non-DMS-aware protocol is required ( 108 ). The translation step includes looking up the document content address for the known storage protocol ( 110 ).
- the bit provider then activates an appropriate retrieval mechanism to communicate with a storage system outside of DMS A ( 118 ).
- the storage system then retrieves the content ( 114 ) and returns it to the bit provider ( 116 ).
- the retrieved content is supplied to the document whereby a user may view or otherwise manipulate the content of the document ( 118 ). From the foregoing, the procedures necessary for a request to write content are straightforward.
- bit providers are configured to read/write content of a specific storage repository or system. It is to be appreciated however, that a bit provider which can read/write to a number of different storage systems is also possible.
- bit providers are types of active properties which include at least the capability of knowing how to perform read/write content operations. Since it is in the form of a property, it is possible to attach bit providers to documents.
- the use of bit providers as its mechanism of retrieving data allows for a unified presentation of content to DMS A for document management.
- a powerful aspect of the present invention can be understood by the following example. It is presumed that a new database repository, which has never previously existed, is now developed. If, under existing document management systems, a user wishes to access a document in this database repository through their mail applications, collections, web browser, etc., then it would be necessary to actively change the mail operation, the collections, the word processor, the user is presently operating to understand the new access protocols of the database repository. In other words, the user will have to teach each of its different applications how to access the new database repository. However, once a bit provider for this new database is implemented within the DMS A system, then all other applications, which know how to get content into DMS A can use the new database file without having to be individually reconfigured.
- DMS A an application issues an operation request such as a read operation to a document, and then the document will ask the bit provider to perform an activity necessary to accomplish the requested operation.
- each base document has encapsulated within it (i.e. bit providers) a special way of obtaining the bits which form the contents of its documents. Therefore, the document defers or delegates to the bit provider the actual mechanism for retrieving the bits of the content.
- the content of collection document 200 is therefore the properties of documents 202 a- 202 n which themselves have content in any of a number of different storage repositories 206 a- 206 n retrievable by their bit providers 208 a - 208 n.
- collections are made “universal”, that is, they can contain any type of content (web pages, normal files, mail messages, news postings, stock quotes, etc.), and they can be created by users even when no collection existed in the space created by the document producers.
- DMS A collections are unique in that they can contain documents that reside in any back-end storage repository. This ability is a consequence of two facets of the DMS A architecture. First, DMS A can manage documents independently of the repository used to maintain the content of those documents. Second, DMS A collections are not made manifest in any back-end repository. They exist purely as properties on systems belonging to the document user.
- DMS A documents reference their content through a replaceable bit provider
- collections can contain documents whose content exist in multiple back-end repositories. Therefore users can create an “important” collection containing not only files, but also web pages, mail messages, calendar appointments, etc.
- document collections comprise three elements (each of which can be null).
- the first is a query term.
- Query terms are specified in terms of document properties. Queries can test for the presence or absence of particular properties on a document, can test the specific value of a property, or can perform type-specific value comparisons (for instance, a wide range of date specifications can be provided, such as “changed within 2 hours” and “modified last week”). Query terms in document collections are “live.” The collection contains the matching documents at any moment, so that documents may appear or disappear depending on their immediate state.
- the document collection stores two lists of documents, called the inclusion and exclusion lists. Documents in the inclusion list are returned as members of the collection whether or not they match the query. Documents in the exclusion list are not returned as members of the collection even if they do match the query. When the query is null, the inclusion list effectively determines the collection contents.
- the contents of the collection at any moment are the documents in the inclusion list, plus those matching the query, minus those in the exclusion list.
- the goal of this implementation of document collections is to support a natural style of document organization and retrieval.
- a query can be used to create an initial collection, or to specify the default membership. However, membership can be refined without having to reformulate the query, but by direct manipulation of the document collection contents. Items can be added and removed to override the results of the query, and these changes will be persistent.
- the browser also supports the direct manipulation of query terms, so that reformulating the query is a fairly straightforward operation.
Abstract
Description
Claims (21)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/143,778 US6269380B1 (en) | 1998-08-31 | 1998-08-31 | Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols |
US09/607,676 US7155662B1 (en) | 1998-08-31 | 2000-06-30 | Representing an entity as a document using a data source having active properties |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/143,778 US6269380B1 (en) | 1998-08-31 | 1998-08-31 | Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/144,143 Continuation-In-Part US6370553B1 (en) | 1998-08-31 | 1998-08-31 | Atomic and molecular documents |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/144,032 Continuation-In-Part US6266682B1 (en) | 1998-08-31 | 1998-08-31 | Tagging related files in a document management system |
Publications (1)
Publication Number | Publication Date |
---|---|
US6269380B1 true US6269380B1 (en) | 2001-07-31 |
Family
ID=22505587
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/143,778 Expired - Lifetime US6269380B1 (en) | 1998-08-31 | 1998-08-31 | Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols |
Country Status (1)
Country | Link |
---|---|
US (1) | US6269380B1 (en) |
Cited By (114)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6366934B1 (en) * | 1998-10-08 | 2002-04-02 | International Business Machines Corporation | Method and apparatus for querying structured documents using a database extender |
US6370538B1 (en) * | 1999-11-22 | 2002-04-09 | Xerox Corporation | Direct manipulation interface for document properties |
US20020078068A1 (en) * | 2000-09-07 | 2002-06-20 | Muralidhar Krishnaprasad | Method and apparatus for flexible storage and uniform manipulation of XML data in a relational database system |
US6466983B1 (en) * | 1999-09-30 | 2002-10-15 | Steven Paul Strazza | Systems and methods for controlling access to data maintained in a repository |
US20020154126A1 (en) * | 2001-04-20 | 2002-10-24 | Autodesk Canada Inc. | Graphical image processing with levels of user access |
US20030033285A1 (en) * | 1999-02-18 | 2003-02-13 | Neema Jalali | Mechanism to efficiently index structured data that provides hierarchical access in a relational database system |
US6526406B1 (en) * | 1999-06-07 | 2003-02-25 | Kawasaki Steel Systems R & D Corporation | Database access system to deliver and store information |
US20030055991A1 (en) * | 2001-09-20 | 2003-03-20 | Sun Microsystems, Inc. | Access control for an e-commerce application |
US6539406B1 (en) * | 2000-02-17 | 2003-03-25 | Conectron, Inc. | Method and apparatus to create virtual back space on an electronic document page, or an electronic document element contained therein, and to access, manipulate and transfer information thereon |
US20030065659A1 (en) * | 2001-09-28 | 2003-04-03 | Oracle Corporation | Providing a consistent hierarchical abstraction of relational data |
WO2003067475A1 (en) * | 2002-02-08 | 2003-08-14 | Interwoven | System and method for maintaining componentized content |
US20030160990A1 (en) * | 2002-02-28 | 2003-08-28 | Vincent Wu | Post RIP paper conversion |
US20030169458A1 (en) * | 2002-03-08 | 2003-09-11 | Quach Tony T. | Method for generating a fax cover page |
US20030174365A1 (en) * | 2002-03-07 | 2003-09-18 | Toshiba Tec Kabushiki Kaisha | Automatic facsimile document resizing |
US20040015596A1 (en) * | 2002-07-19 | 2004-01-22 | Commerce One Operations, Inc. | Electronic commerce community networks and intra/inter community secure routing implementation |
US20040019613A1 (en) * | 2002-07-25 | 2004-01-29 | Xerox Corporation | Electronic filing system with file-placeholders |
US20040025117A1 (en) * | 2002-07-19 | 2004-02-05 | Commerce One Operations, Inc. | Registry driven interoperability and exchange of documents |
US6691119B1 (en) * | 1999-07-26 | 2004-02-10 | Microsoft Corporation | Translating property names and name space names according to different naming schemes |
US20040034540A1 (en) * | 2002-08-15 | 2004-02-19 | Commerce One Operations, Inc. | Dynamic interface between BPSS conversation management and local business management |
US20040064473A1 (en) * | 2002-10-01 | 2004-04-01 | Honda Giken Kogyo Kabushiki Kaisha | Storage of selected e-mails including attachments in document management system |
US20040064466A1 (en) * | 2002-09-27 | 2004-04-01 | Oracle International Corporation | Techniques for rewriting XML queries directed to relational database constructs |
US6732157B1 (en) | 2002-12-13 | 2004-05-04 | Networks Associates Technology, Inc. | Comprehensive anti-spam system, method, and computer program product for filtering unwanted e-mail messages |
US6741979B1 (en) * | 2001-07-24 | 2004-05-25 | Thomas W. Tiahrt | System and method for flexible indexing of document content |
US20040103206A1 (en) * | 2002-11-26 | 2004-05-27 | International Business Machines Corporation | System and method for efficiently supporting multiple native network protocol implementations in a single system |
US20040128616A1 (en) * | 2002-12-28 | 2004-07-01 | International Business Machines Corporation | System and method for providing a runtime environment for active web based document resources |
US20040162918A1 (en) * | 2003-02-17 | 2004-08-19 | Richard Freidman | System and method for invoking WebDAV methods via non-WebDAV communication protocols |
US20040162872A1 (en) * | 2003-02-17 | 2004-08-19 | Richard Friedman | System and method for invoking WebDAV methods via component technologies |
US20040163037A1 (en) * | 2003-02-17 | 2004-08-19 | Richard Friedman | System and method for invoking WebDAV methods via non-WebDAV protocols |
US20040163086A1 (en) * | 2003-02-14 | 2004-08-19 | Richard Friedman | WebDAV servlet |
US20040168128A1 (en) * | 2003-02-21 | 2004-08-26 | Richard Friedman | Connecting to WebDAV servers via the Java™ connector architecture |
US20040167983A1 (en) * | 2003-02-21 | 2004-08-26 | Richard Friedman | WebDAV URL connection |
US20040193940A1 (en) * | 2003-02-21 | 2004-09-30 | Snyder Joseph J. | WebDAV unit test framework |
US20040205622A1 (en) * | 2002-07-25 | 2004-10-14 | Xerox Corporation | Electronic filing system with scan-placeholders |
US20040205603A1 (en) * | 2001-10-03 | 2004-10-14 | Nguyen Truc D. | Method to dynamically perform document layout functions |
US20040205047A1 (en) * | 2002-01-02 | 2004-10-14 | International Business Machines Corporation | Method for dynamically generating reference indentifiers in structured information |
US20050080804A1 (en) * | 2001-10-30 | 2005-04-14 | Bradshaw Robert David | System and method for maintaining componentized content |
US20050198072A1 (en) * | 2004-02-18 | 2005-09-08 | Seiko Epson Corporation | Scan file generation system |
US6947991B1 (en) * | 1999-09-13 | 2005-09-20 | Novell, Inc. | Method and apparatus for exposing network administration stored in a directory using HTTP/WebDAV protocol |
US6963866B2 (en) | 1999-04-13 | 2005-11-08 | Mirror Imaging L.L.C. | Method of obtaining an electronically stored financial document |
US20060059423A1 (en) * | 2004-09-13 | 2006-03-16 | Stefan Lehmann | Apparatus, system, and method for creating customized workflow documentation |
US7028037B1 (en) | 2001-09-28 | 2006-04-11 | Oracle International Corporation | Operators for accessing hierarchical data in a relational system |
US7047250B1 (en) | 2001-09-28 | 2006-05-16 | Oracle International Corporation | Indexing to efficiently manage versioned data in a database system |
US7047253B1 (en) | 2001-09-28 | 2006-05-16 | Oracle Interntional Corporation | Mechanisms for storing content and properties of hierarchically organized resources |
US7051042B2 (en) | 2003-05-01 | 2006-05-23 | Oracle International Corporation | Techniques for transferring a serialized image of XML data |
US7051039B1 (en) | 2001-09-28 | 2006-05-23 | Oracle International Corporation | Mechanism for uniform access control in a database system |
US7092967B1 (en) | 2001-09-28 | 2006-08-15 | Oracle International Corporation | Loadable units for lazy manifestation of XML documents |
US20060184551A1 (en) * | 2004-07-02 | 2006-08-17 | Asha Tarachandani | Mechanism for improving performance on XML over XML data using path subsetting |
US20060217999A1 (en) * | 2005-03-15 | 2006-09-28 | Oce-Technologies B.V. | Document management system |
US20060235840A1 (en) * | 2005-04-19 | 2006-10-19 | Anand Manikutty | Optimization of queries over XML views that are based on union all operators |
US20070011167A1 (en) * | 2005-07-08 | 2007-01-11 | Muralidhar Krishnaprasad | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US20070016605A1 (en) * | 2005-07-18 | 2007-01-18 | Ravi Murthy | Mechanism for computing structural summaries of XML document collections in a database system |
US20070038649A1 (en) * | 2005-08-11 | 2007-02-15 | Abhyudaya Agrawal | Flexible handling of datetime XML datatype in a database system |
US20070050512A1 (en) * | 2005-08-31 | 2007-03-01 | Microsoft Corporation | Compounding of HTTP authoring protocol |
US20070083538A1 (en) * | 2005-10-07 | 2007-04-12 | Roy Indroniel D | Generating XML instances from flat files |
US20070083529A1 (en) * | 2005-10-07 | 2007-04-12 | Oracle International Corporation | Managing cyclic constructs of XML schema in a rdbms |
US20070150432A1 (en) * | 2005-12-22 | 2007-06-28 | Sivasankaran Chandrasekar | Method and mechanism for loading XML documents into memory |
US7260585B2 (en) | 2000-09-07 | 2007-08-21 | Oracle International Corporation | Apparatus and method for mapping relational data and metadata to XML |
US20070198545A1 (en) * | 2006-02-22 | 2007-08-23 | Fei Ge | Efficient processing of path related operations on data organized hierarchically in an RDBMS |
US20070223031A1 (en) * | 2006-03-21 | 2007-09-27 | Hiroshi Kitada | Bi-directional status and control between image capture device and backend device |
US20070250527A1 (en) * | 2006-04-19 | 2007-10-25 | Ravi Murthy | Mechanism for abridged indexes over XML document collections |
US20070271306A1 (en) * | 2006-05-17 | 2007-11-22 | Brown Albert C | Active storage and retrieval systems and methods |
US20070276792A1 (en) * | 2006-05-25 | 2007-11-29 | Asha Tarachandani | Isolation for applications working on shared XML data |
US20080005093A1 (en) * | 2006-07-03 | 2008-01-03 | Zhen Hua Liu | Techniques of using a relational caching framework for efficiently handling XML queries in the mid-tier data caching |
US20080040369A1 (en) * | 2006-08-09 | 2008-02-14 | Oracle International Corporation | Using XML for flexible replication of complex types |
US7340508B1 (en) * | 2002-09-18 | 2008-03-04 | Open Invention Network, Llc | Exposing process flows and choreography controllers as web services |
US20080092037A1 (en) * | 2006-10-16 | 2008-04-17 | Oracle International Corporation | Validation of XML content in a streaming fashion |
US20080091714A1 (en) * | 2006-10-16 | 2008-04-17 | Oracle International Corporation | Efficient partitioning technique while managing large XML documents |
US7386567B2 (en) | 2003-05-01 | 2008-06-10 | Oracle International Corporation | Techniques for changing XML content in a relational database |
US20080172390A1 (en) * | 2007-01-16 | 2008-07-17 | Microsoft Corporation | Associating security trimmers with documents in an enterprise search system |
US7440954B2 (en) | 2004-04-09 | 2008-10-21 | Oracle International Corporation | Index maintenance for operations involving indexed XML data |
US7444522B1 (en) | 2002-09-18 | 2008-10-28 | Open Invention Network, Llc | Dynamic negotiation of security arrangements between web services |
US20080288453A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for metadata-driven document management and access control |
US20080288862A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for in-document markup in support of information sharing |
US20090019077A1 (en) * | 2007-07-13 | 2009-01-15 | Oracle International Corporation | Accelerating value-based lookup of XML document in XQuery |
US20090037369A1 (en) * | 2007-07-31 | 2009-02-05 | Oracle International Corporation | Using sibling-count in XML indexes to optimize single-path queries |
US7490093B2 (en) | 2003-08-25 | 2009-02-10 | Oracle International Corporation | Generating a schema-specific load structure to load data into a relational database based on determining whether the schema-specific load structure already exists |
US7523131B2 (en) | 2005-02-10 | 2009-04-21 | Oracle International Corporation | Techniques for efficiently storing and querying in a relational database, XML documents conforming to schemas that contain cyclic constructs |
US20090125693A1 (en) * | 2007-11-09 | 2009-05-14 | Sam Idicula | Techniques for more efficient generation of xml events from xml data sources |
US20090125884A1 (en) * | 2007-11-13 | 2009-05-14 | International Business Machines Corporation | System and method for workflow-driven data storage |
US20090125495A1 (en) * | 2007-11-09 | 2009-05-14 | Ning Zhang | Optimized streaming evaluation of xml queries |
US20090150412A1 (en) * | 2007-12-05 | 2009-06-11 | Sam Idicula | Efficient streaming evaluation of xpaths on binary-encoded xml schema-based documents |
US20090265372A1 (en) * | 2006-03-23 | 2009-10-22 | Arne Esmann-Jensen | Management of Document Attributes in a Document Managing System |
US20090307239A1 (en) * | 2008-06-06 | 2009-12-10 | Oracle International Corporation | Fast extraction of scalar values from binary encoded xml |
US7730032B2 (en) | 2006-01-12 | 2010-06-01 | Oracle International Corporation | Efficient queriability of version histories in a repository |
US7797310B2 (en) | 2006-10-16 | 2010-09-14 | Oracle International Corporation | Technique to estimate the cost of streaming evaluation of XPaths |
US7802180B2 (en) | 2004-06-23 | 2010-09-21 | Oracle International Corporation | Techniques for serialization of instances of the XQuery data model |
US7873649B2 (en) | 2000-09-07 | 2011-01-18 | Oracle International Corporation | Method and mechanism for identifying transaction on a row of data |
US7925246B2 (en) | 2002-12-11 | 2011-04-12 | Leader Technologies, Inc. | Radio/telephony interoperability system |
US7930277B2 (en) | 2004-04-21 | 2011-04-19 | Oracle International Corporation | Cost-based optimizer for an XML data repository within a database |
US7949941B2 (en) | 2005-04-22 | 2011-05-24 | Oracle International Corporation | Optimizing XSLT based on input XML document structure description and translating XSLT into equivalent XQuery expressions |
US7958112B2 (en) | 2008-08-08 | 2011-06-07 | Oracle International Corporation | Interleaving query transformations for XML indexes |
US7991768B2 (en) | 2007-11-08 | 2011-08-02 | Oracle International Corporation | Global query normalization to improve XML index based rewrites for path subsetted index |
US8010850B2 (en) | 2005-08-31 | 2011-08-30 | Microsoft Corporation | Client extended error handling |
US8073841B2 (en) | 2005-10-07 | 2011-12-06 | Oracle International Corporation | Optimizing correlated XML extracts |
US8195714B2 (en) | 2002-12-11 | 2012-06-05 | Leaper Technologies, Inc. | Context instantiated application protocol |
US8200745B2 (en) | 2002-07-15 | 2012-06-12 | Aol Inc. | Handheld client framework system |
US8204945B2 (en) | 2000-06-19 | 2012-06-19 | Stragent, Llc | Hash-based systems and methods for detecting and preventing transmission of unwanted e-mail |
US8229932B2 (en) | 2003-09-04 | 2012-07-24 | Oracle International Corporation | Storing XML documents efficiently in an RDBMS |
US8489649B2 (en) | 2010-12-13 | 2013-07-16 | Oracle International Corporation | Extensible RDF databases |
US8694510B2 (en) | 2003-09-04 | 2014-04-08 | Oracle International Corporation | Indexing XML documents efficiently |
US8775654B2 (en) | 2003-12-19 | 2014-07-08 | Salesforce.Com, Inc. | Apparatus and methods for mediating messages |
US8838833B2 (en) | 2004-08-06 | 2014-09-16 | Salesforce.Com, Inc. | Providing on-demand access to services in a wide area network |
US8949455B2 (en) | 2005-11-21 | 2015-02-03 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US9141612B2 (en) | 1999-04-13 | 2015-09-22 | Mirrior Imaging, LLC | Method of obtaining an electronically-stored financial document |
US9262383B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | System, method, and computer program product for processing a markup document |
US9262384B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | Markup language system, method, and computer program product |
US9268748B2 (en) | 1999-05-21 | 2016-02-23 | E-Numerate Solutions, Inc. | System, method, and computer program product for outputting markup language documents |
US9367642B2 (en) | 2005-10-07 | 2016-06-14 | Oracle International Corporation | Flexible storage of XML collections within an object-relational database |
US9473536B2 (en) | 2003-10-14 | 2016-10-18 | Salesforce.Com, Inc. | Method, system, and computer program product for facilitating communication in an interoperability network |
US9600842B2 (en) | 2001-01-24 | 2017-03-21 | E-Numerate Solutions, Inc. | RDX enhancement of system and method for implementing reusable data markup language (RDL) |
US9645712B2 (en) | 2004-10-01 | 2017-05-09 | Grand Central Communications, Inc. | Multiple stakeholders for a single business process |
US9898475B1 (en) | 2013-02-25 | 2018-02-20 | EMC IP Holding Company LLC | Tiering with pluggable storage system for parallel query engines |
US9984083B1 (en) * | 2013-02-25 | 2018-05-29 | EMC IP Holding Company LLC | Pluggable storage system for parallel query engines across non-native file systems |
US10713305B1 (en) * | 2016-09-29 | 2020-07-14 | EMC IP Holding Company LLC | Method and system for document search in structured document repositories |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5499330A (en) * | 1993-09-17 | 1996-03-12 | Digital Equipment Corp. | Document display system for organizing and displaying documents as screen objects organized along strand paths |
US5528739A (en) * | 1993-09-17 | 1996-06-18 | Digital Equipment Corporation | Documents having executable attributes for active mail and digitized speech to text conversion |
US5544051A (en) * | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5600833A (en) * | 1993-09-17 | 1997-02-04 | Digital Equipment Corp. | Attribute portion based document retrieval system with system query language interface |
US5613134A (en) * | 1993-09-17 | 1997-03-18 | Digital Equipment Corporation | Document display system using documents having ephemeral attributes for sharing information regarding the location of the display of each document on multiple display devices |
US5982891A (en) * | 1995-02-13 | 1999-11-09 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
US6012074A (en) * | 1993-09-17 | 2000-01-04 | Digital Equipment Corporation | Document management system with delimiters defined at run-time |
US6012072A (en) * | 1993-09-17 | 2000-01-04 | Digital Equipment Corporation | Display apparatus for the display of documents in a three-dimensional workspace |
US6112181A (en) * | 1997-11-06 | 2000-08-29 | Intertrust Technologies Corporation | Systems and methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information |
US6144975A (en) * | 1998-05-05 | 2000-11-07 | Fmr Corporation | Computer system for intelligent document management |
-
1998
- 1998-08-31 US US09/143,778 patent/US6269380B1/en not_active Expired - Lifetime
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5499330A (en) * | 1993-09-17 | 1996-03-12 | Digital Equipment Corp. | Document display system for organizing and displaying documents as screen objects organized along strand paths |
US5528739A (en) * | 1993-09-17 | 1996-06-18 | Digital Equipment Corporation | Documents having executable attributes for active mail and digitized speech to text conversion |
US5544051A (en) * | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5600833A (en) * | 1993-09-17 | 1997-02-04 | Digital Equipment Corp. | Attribute portion based document retrieval system with system query language interface |
US5613134A (en) * | 1993-09-17 | 1997-03-18 | Digital Equipment Corporation | Document display system using documents having ephemeral attributes for sharing information regarding the location of the display of each document on multiple display devices |
US5621874A (en) * | 1993-09-17 | 1997-04-15 | Digital Equipment Corporation | Three dimensional document representation using strands |
US5905992A (en) * | 1993-09-17 | 1999-05-18 | Digital Equipment Corporation | Document display system for organizing and displaying documents as screen objects organized along strand paths |
US6012074A (en) * | 1993-09-17 | 2000-01-04 | Digital Equipment Corporation | Document management system with delimiters defined at run-time |
US6012072A (en) * | 1993-09-17 | 2000-01-04 | Digital Equipment Corporation | Display apparatus for the display of documents in a three-dimensional workspace |
US5982891A (en) * | 1995-02-13 | 1999-11-09 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
US6112181A (en) * | 1997-11-06 | 2000-08-29 | Intertrust Technologies Corporation | Systems and methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information |
US6144975A (en) * | 1998-05-05 | 2000-11-07 | Fmr Corporation | Computer system for intelligent document management |
Non-Patent Citations (9)
Title |
---|
A Pile Metaphor for Supporting Casual Organization of Information, Mander et al., (Chi '92, 1992 ACM 0-89791-513-5/92/0005-0627). |
Interposition Agents: Transparently Interposing User Code at the System Interface, Michael B. Jones, (Microsoft Corp.) Proceedings of the 14th ACM Symposium Operating System Principles, pp. 80 -90; 1993. |
Lifestreams: Organizing Your Electronic Life, Freeman et al., (Yale University, Dept of Computer Science) Proceedings of the CHI 96 Conference Companion on Human Factors in Computing Systems, pp. 410 -411; 1995. |
Lifestreams: Organizing Your Electronic Life, Freeman et al., (Yale University, Dept of Computer Science). |
Representing Information About Files, Jeffrey Mogul, (Computer Science Dept., Stanford University, CH2021-4/84/0000/0432$01.00 1984 IEEE). |
Semantic File Systems, Gifford et al., (Programming Systems Research Group, 1991 ACM 0-89791-447-3/91/0009/0016). |
Slic: An Extensible System For Commodity Operating System, Ghormley et al., Feb. 1998 (Computer Science Div., Univ. of CA at Berkley). |
The Digital Library Integrated Task Enironment (DLITE) , Cousins et al., (Stanford University / Xerox PARC) Jul. 1997. |
The Digital Library Integrated Task Enironment (DLITE) , Cousins et al., (Stanford University / Xerox PARC). |
Cited By (194)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6366934B1 (en) * | 1998-10-08 | 2002-04-02 | International Business Machines Corporation | Method and apparatus for querying structured documents using a database extender |
US20030033285A1 (en) * | 1999-02-18 | 2003-02-13 | Neema Jalali | Mechanism to efficiently index structured data that provides hierarchical access in a relational database system |
US7366708B2 (en) | 1999-02-18 | 2008-04-29 | Oracle Corporation | Mechanism to efficiently index structured data that provides hierarchical access in a relational database system |
US7836067B2 (en) | 1999-04-13 | 2010-11-16 | Mirror Imaging, LLC | Method of obtaining electronically-stored financial documents |
US10402447B1 (en) | 1999-04-13 | 2019-09-03 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US10013435B1 (en) | 1999-04-13 | 2018-07-03 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US10262009B2 (en) | 1999-04-13 | 2019-04-16 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US9141612B2 (en) | 1999-04-13 | 2015-09-22 | Mirrior Imaging, LLC | Method of obtaining an electronically-stored financial document |
US6963866B2 (en) | 1999-04-13 | 2005-11-08 | Mirror Imaging L.L.C. | Method of obtaining an electronically stored financial document |
US20060041493A1 (en) * | 1999-04-13 | 2006-02-23 | Mirror Imaging, L.L.C. | Method of obtaining an electronically-stored financial document |
US9928275B2 (en) | 1999-04-13 | 2018-03-27 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US20090259668A1 (en) * | 1999-04-13 | 2009-10-15 | Schulze Michael D | Method of obtaining electronically-stored financial documents |
US7552118B2 (en) | 1999-04-13 | 2009-06-23 | Mirror Imaging Llc | Method of obtaining an electronically-stored financial document |
US9268748B2 (en) | 1999-05-21 | 2016-02-23 | E-Numerate Solutions, Inc. | System, method, and computer program product for outputting markup language documents |
US9262384B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | Markup language system, method, and computer program product |
US9262383B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | System, method, and computer program product for processing a markup document |
US6526406B1 (en) * | 1999-06-07 | 2003-02-25 | Kawasaki Steel Systems R & D Corporation | Database access system to deliver and store information |
US6691119B1 (en) * | 1999-07-26 | 2004-02-10 | Microsoft Corporation | Translating property names and name space names according to different naming schemes |
US6947991B1 (en) * | 1999-09-13 | 2005-09-20 | Novell, Inc. | Method and apparatus for exposing network administration stored in a directory using HTTP/WebDAV protocol |
US6466983B1 (en) * | 1999-09-30 | 2002-10-15 | Steven Paul Strazza | Systems and methods for controlling access to data maintained in a repository |
US6370538B1 (en) * | 1999-11-22 | 2002-04-09 | Xerox Corporation | Direct manipulation interface for document properties |
US6539406B1 (en) * | 2000-02-17 | 2003-03-25 | Conectron, Inc. | Method and apparatus to create virtual back space on an electronic document page, or an electronic document element contained therein, and to access, manipulate and transfer information thereon |
US8204945B2 (en) | 2000-06-19 | 2012-06-19 | Stragent, Llc | Hash-based systems and methods for detecting and preventing transmission of unwanted e-mail |
US8272060B2 (en) | 2000-06-19 | 2012-09-18 | Stragent, Llc | Hash-based systems and methods for detecting and preventing transmission of polymorphic network worms and viruses |
US7260585B2 (en) | 2000-09-07 | 2007-08-21 | Oracle International Corporation | Apparatus and method for mapping relational data and metadata to XML |
US7873649B2 (en) | 2000-09-07 | 2011-01-18 | Oracle International Corporation | Method and mechanism for identifying transaction on a row of data |
US20020078068A1 (en) * | 2000-09-07 | 2002-06-20 | Muralidhar Krishnaprasad | Method and apparatus for flexible storage and uniform manipulation of XML data in a relational database system |
US9600842B2 (en) | 2001-01-24 | 2017-03-21 | E-Numerate Solutions, Inc. | RDX enhancement of system and method for implementing reusable data markup language (RDL) |
US6753864B2 (en) * | 2001-04-20 | 2004-06-22 | Autodesk Canada Inc. | Graphical image processing with levels of user access |
US20020154126A1 (en) * | 2001-04-20 | 2002-10-24 | Autodesk Canada Inc. | Graphical image processing with levels of user access |
US6741979B1 (en) * | 2001-07-24 | 2004-05-25 | Thomas W. Tiahrt | System and method for flexible indexing of document content |
US7120698B2 (en) * | 2001-09-20 | 2006-10-10 | Sun Microsystems, Inc. | Access control for an e-commerce application |
US20030055991A1 (en) * | 2001-09-20 | 2003-03-20 | Sun Microsystems, Inc. | Access control for an e-commerce application |
US7047253B1 (en) | 2001-09-28 | 2006-05-16 | Oracle Interntional Corporation | Mechanisms for storing content and properties of hierarchically organized resources |
US7028037B1 (en) | 2001-09-28 | 2006-04-11 | Oracle International Corporation | Operators for accessing hierarchical data in a relational system |
US7096224B2 (en) * | 2001-09-28 | 2006-08-22 | Oracle International Corporation | Mechanism for mapping XML schemas to object-relational database systems |
US7092967B1 (en) | 2001-09-28 | 2006-08-15 | Oracle International Corporation | Loadable units for lazy manifestation of XML documents |
US7051033B2 (en) | 2001-09-28 | 2006-05-23 | Oracle International Corporation | Providing a consistent hierarchical abstraction of relational data |
US7051039B1 (en) | 2001-09-28 | 2006-05-23 | Oracle International Corporation | Mechanism for uniform access control in a database system |
US20030140308A1 (en) * | 2001-09-28 | 2003-07-24 | Ravi Murthy | Mechanism for mapping XML schemas to object-relational database systems |
US7047250B1 (en) | 2001-09-28 | 2006-05-16 | Oracle International Corporation | Indexing to efficiently manage versioned data in a database system |
US20030065659A1 (en) * | 2001-09-28 | 2003-04-03 | Oracle Corporation | Providing a consistent hierarchical abstraction of relational data |
US7158981B2 (en) | 2001-09-28 | 2007-01-02 | Oracle International Corporation | Providing a consistent hierarchical abstraction of relational data |
US6894804B2 (en) | 2001-10-03 | 2005-05-17 | Toshiba Tec Kabushiki Kaisha | Method to dynamically perform document layout functions |
US20040205603A1 (en) * | 2001-10-03 | 2004-10-14 | Nguyen Truc D. | Method to dynamically perform document layout functions |
US20050080804A1 (en) * | 2001-10-30 | 2005-04-14 | Bradshaw Robert David | System and method for maintaining componentized content |
US7124358B2 (en) * | 2002-01-02 | 2006-10-17 | International Business Machines Corporation | Method for dynamically generating reference identifiers in structured information |
US20040205047A1 (en) * | 2002-01-02 | 2004-10-14 | International Business Machines Corporation | Method for dynamically generating reference indentifiers in structured information |
WO2003067475A1 (en) * | 2002-02-08 | 2003-08-14 | Interwoven | System and method for maintaining componentized content |
US7133152B2 (en) | 2002-02-28 | 2006-11-07 | Kabushiki Kaisha Toshiba | Post RIP paper conversion |
US20030160990A1 (en) * | 2002-02-28 | 2003-08-28 | Vincent Wu | Post RIP paper conversion |
US20030174365A1 (en) * | 2002-03-07 | 2003-09-18 | Toshiba Tec Kabushiki Kaisha | Automatic facsimile document resizing |
US7164492B2 (en) | 2002-03-07 | 2007-01-16 | Kabushiki Kaisha Toshiba | Automatic facsimile document resizing |
US7245392B2 (en) | 2002-03-08 | 2007-07-17 | Kabushiki Kaisha Toshiba | Method for generating a fax cover page |
US20030169458A1 (en) * | 2002-03-08 | 2003-09-11 | Quach Tony T. | Method for generating a fax cover page |
US8200745B2 (en) | 2002-07-15 | 2012-06-12 | Aol Inc. | Handheld client framework system |
US20040025117A1 (en) * | 2002-07-19 | 2004-02-05 | Commerce One Operations, Inc. | Registry driven interoperability and exchange of documents |
US20060150095A1 (en) * | 2002-07-19 | 2006-07-06 | Open Invention Networks | Registry driven interoperability and exchange of documents |
US7703008B2 (en) * | 2002-07-19 | 2010-04-20 | Open Invention Network, Llc | Registry driven interoperability and exchange of documents |
US7200674B2 (en) | 2002-07-19 | 2007-04-03 | Open Invention Network, Llc | Electronic commerce community networks and intra/inter community secure routing implementation |
US7047488B2 (en) * | 2002-07-19 | 2006-05-16 | Open Invention Network | Registry driven interoperability and exchange of documents |
US20100205522A1 (en) * | 2002-07-19 | 2010-08-12 | Open Invention Network, Llc | Registry driven interoperability and exchange of documents |
US20040015596A1 (en) * | 2002-07-19 | 2004-01-22 | Commerce One Operations, Inc. | Electronic commerce community networks and intra/inter community secure routing implementation |
US9792269B2 (en) | 2002-07-19 | 2017-10-17 | Open Invention Network, Llc | Registry driven interoperability and exchange of documents |
US8683321B2 (en) | 2002-07-19 | 2014-03-25 | Open Invention Network | Registry driven interoperability and exchange of documents |
US8245137B2 (en) | 2002-07-25 | 2012-08-14 | Xerox Corporation | Electronic filing system with scan-placeholders |
US20040019613A1 (en) * | 2002-07-25 | 2004-01-29 | Xerox Corporation | Electronic filing system with file-placeholders |
US20040205622A1 (en) * | 2002-07-25 | 2004-10-14 | Xerox Corporation | Electronic filing system with scan-placeholders |
US6868424B2 (en) | 2002-07-25 | 2005-03-15 | Xerox Corporation | Electronic filing system with file-placeholders |
US8655790B2 (en) | 2002-08-15 | 2014-02-18 | Open Invention Network, Llc | Dynamic interface between BPSS conversation management and local business management |
US7729922B2 (en) | 2002-08-15 | 2010-06-01 | Open Invention Network, Llc | Dynamic interface between BPSS conversation management and local business management |
US20100235176A1 (en) * | 2002-08-15 | 2010-09-16 | Open Invention Networks, Llc | Dynamic interface between bpss conversation management and local business management |
US8301573B2 (en) | 2002-08-15 | 2012-10-30 | Open Invention Network | Dynamic interface between BPSS conversation management and local business management |
US20040034540A1 (en) * | 2002-08-15 | 2004-02-19 | Commerce One Operations, Inc. | Dynamic interface between BPSS conversation management and local business management |
US7444522B1 (en) | 2002-09-18 | 2008-10-28 | Open Invention Network, Llc | Dynamic negotiation of security arrangements between web services |
US7340508B1 (en) * | 2002-09-18 | 2008-03-04 | Open Invention Network, Llc | Exposing process flows and choreography controllers as web services |
US20040064466A1 (en) * | 2002-09-27 | 2004-04-01 | Oracle International Corporation | Techniques for rewriting XML queries directed to relational database constructs |
US7120645B2 (en) | 2002-09-27 | 2006-10-10 | Oracle International Corporation | Techniques for rewriting XML queries directed to relational database constructs |
US20040064473A1 (en) * | 2002-10-01 | 2004-04-01 | Honda Giken Kogyo Kabushiki Kaisha | Storage of selected e-mails including attachments in document management system |
US8443045B2 (en) | 2002-10-01 | 2013-05-14 | Honda Motor Co., Ltd. | Storage of selected e-mails including attachments in document management system |
US20040103206A1 (en) * | 2002-11-26 | 2004-05-27 | International Business Machines Corporation | System and method for efficiently supporting multiple native network protocol implementations in a single system |
US7797392B2 (en) | 2002-11-26 | 2010-09-14 | International Business Machines Corporation | System and method for efficiently supporting multiple native network protocol implementations in a single system |
US8195714B2 (en) | 2002-12-11 | 2012-06-05 | Leaper Technologies, Inc. | Context instantiated application protocol |
US7925246B2 (en) | 2002-12-11 | 2011-04-12 | Leader Technologies, Inc. | Radio/telephony interoperability system |
US6732157B1 (en) | 2002-12-13 | 2004-05-04 | Networks Associates Technology, Inc. | Comprehensive anti-spam system, method, and computer program product for filtering unwanted e-mail messages |
US20040128616A1 (en) * | 2002-12-28 | 2004-07-01 | International Business Machines Corporation | System and method for providing a runtime environment for active web based document resources |
US7634728B2 (en) | 2002-12-28 | 2009-12-15 | International Business Machines Corporation | System and method for providing a runtime environment for active web based document resources |
US20040163086A1 (en) * | 2003-02-14 | 2004-08-19 | Richard Friedman | WebDAV servlet |
US20040163037A1 (en) * | 2003-02-17 | 2004-08-19 | Richard Friedman | System and method for invoking WebDAV methods via non-WebDAV protocols |
US20040162872A1 (en) * | 2003-02-17 | 2004-08-19 | Richard Friedman | System and method for invoking WebDAV methods via component technologies |
US20040162918A1 (en) * | 2003-02-17 | 2004-08-19 | Richard Freidman | System and method for invoking WebDAV methods via non-WebDAV communication protocols |
US20040168128A1 (en) * | 2003-02-21 | 2004-08-26 | Richard Friedman | Connecting to WebDAV servers via the Java™ connector architecture |
US20040193940A1 (en) * | 2003-02-21 | 2004-09-30 | Snyder Joseph J. | WebDAV unit test framework |
US20040167983A1 (en) * | 2003-02-21 | 2004-08-26 | Richard Friedman | WebDAV URL connection |
US7386567B2 (en) | 2003-05-01 | 2008-06-10 | Oracle International Corporation | Techniques for changing XML content in a relational database |
US7051042B2 (en) | 2003-05-01 | 2006-05-23 | Oracle International Corporation | Techniques for transferring a serialized image of XML data |
US7490093B2 (en) | 2003-08-25 | 2009-02-10 | Oracle International Corporation | Generating a schema-specific load structure to load data into a relational database based on determining whether the schema-specific load structure already exists |
US8229932B2 (en) | 2003-09-04 | 2012-07-24 | Oracle International Corporation | Storing XML documents efficiently in an RDBMS |
US8694510B2 (en) | 2003-09-04 | 2014-04-08 | Oracle International Corporation | Indexing XML documents efficiently |
US9473536B2 (en) | 2003-10-14 | 2016-10-18 | Salesforce.Com, Inc. | Method, system, and computer program product for facilitating communication in an interoperability network |
US8775654B2 (en) | 2003-12-19 | 2014-07-08 | Salesforce.Com, Inc. | Apparatus and methods for mediating messages |
US20050198072A1 (en) * | 2004-02-18 | 2005-09-08 | Seiko Epson Corporation | Scan file generation system |
US7921101B2 (en) | 2004-04-09 | 2011-04-05 | Oracle International Corporation | Index maintenance for operations involving indexed XML data |
US7440954B2 (en) | 2004-04-09 | 2008-10-21 | Oracle International Corporation | Index maintenance for operations involving indexed XML data |
US7930277B2 (en) | 2004-04-21 | 2011-04-19 | Oracle International Corporation | Cost-based optimizer for an XML data repository within a database |
US7802180B2 (en) | 2004-06-23 | 2010-09-21 | Oracle International Corporation | Techniques for serialization of instances of the XQuery data model |
US20060184551A1 (en) * | 2004-07-02 | 2006-08-17 | Asha Tarachandani | Mechanism for improving performance on XML over XML data using path subsetting |
US7885980B2 (en) | 2004-07-02 | 2011-02-08 | Oracle International Corporation | Mechanism for improving performance on XML over XML data using path subsetting |
US8838833B2 (en) | 2004-08-06 | 2014-09-16 | Salesforce.Com, Inc. | Providing on-demand access to services in a wide area network |
US20060059423A1 (en) * | 2004-09-13 | 2006-03-16 | Stefan Lehmann | Apparatus, system, and method for creating customized workflow documentation |
US11042271B2 (en) | 2004-10-01 | 2021-06-22 | Salesforce.Com, Inc. | Multiple stakeholders for a single business process |
US11941230B2 (en) | 2004-10-01 | 2024-03-26 | Salesforce, Inc. | Multiple stakeholders for a single business process |
US9645712B2 (en) | 2004-10-01 | 2017-05-09 | Grand Central Communications, Inc. | Multiple stakeholders for a single business process |
US7523131B2 (en) | 2005-02-10 | 2009-04-21 | Oracle International Corporation | Techniques for efficiently storing and querying in a relational database, XML documents conforming to schemas that contain cyclic constructs |
US20060217999A1 (en) * | 2005-03-15 | 2006-09-28 | Oce-Technologies B.V. | Document management system |
US20060235840A1 (en) * | 2005-04-19 | 2006-10-19 | Anand Manikutty | Optimization of queries over XML views that are based on union all operators |
US7685150B2 (en) | 2005-04-19 | 2010-03-23 | Oracle International Corporation | Optimization of queries over XML views that are based on union all operators |
US7949941B2 (en) | 2005-04-22 | 2011-05-24 | Oracle International Corporation | Optimizing XSLT based on input XML document structure description and translating XSLT into equivalent XQuery expressions |
US8166059B2 (en) | 2005-07-08 | 2012-04-24 | Oracle International Corporation | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US20070011167A1 (en) * | 2005-07-08 | 2007-01-11 | Muralidhar Krishnaprasad | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US20070016605A1 (en) * | 2005-07-18 | 2007-01-18 | Ravi Murthy | Mechanism for computing structural summaries of XML document collections in a database system |
US20070038649A1 (en) * | 2005-08-11 | 2007-02-15 | Abhyudaya Agrawal | Flexible handling of datetime XML datatype in a database system |
US7406478B2 (en) | 2005-08-11 | 2008-07-29 | Oracle International Corporation | Flexible handling of datetime XML datatype in a database system |
US8010850B2 (en) | 2005-08-31 | 2011-08-30 | Microsoft Corporation | Client extended error handling |
US7600030B2 (en) | 2005-08-31 | 2009-10-06 | Microsoft Corporation | Compounding of HTTP authoring protocol |
US20070050512A1 (en) * | 2005-08-31 | 2007-03-01 | Microsoft Corporation | Compounding of HTTP authoring protocol |
US8554789B2 (en) | 2005-10-07 | 2013-10-08 | Oracle International Corporation | Managing cyclic constructs of XML schema in a rdbms |
US20070083538A1 (en) * | 2005-10-07 | 2007-04-12 | Roy Indroniel D | Generating XML instances from flat files |
US20070083529A1 (en) * | 2005-10-07 | 2007-04-12 | Oracle International Corporation | Managing cyclic constructs of XML schema in a rdbms |
US8024368B2 (en) | 2005-10-07 | 2011-09-20 | Oracle International Corporation | Generating XML instances from flat files |
US8073841B2 (en) | 2005-10-07 | 2011-12-06 | Oracle International Corporation | Optimizing correlated XML extracts |
US9367642B2 (en) | 2005-10-07 | 2016-06-14 | Oracle International Corporation | Flexible storage of XML collections within an object-relational database |
US9898545B2 (en) | 2005-11-21 | 2018-02-20 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US8949455B2 (en) | 2005-11-21 | 2015-02-03 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US7933928B2 (en) | 2005-12-22 | 2011-04-26 | Oracle International Corporation | Method and mechanism for loading XML documents into memory |
US20070150432A1 (en) * | 2005-12-22 | 2007-06-28 | Sivasankaran Chandrasekar | Method and mechanism for loading XML documents into memory |
US7730032B2 (en) | 2006-01-12 | 2010-06-01 | Oracle International Corporation | Efficient queriability of version histories in a repository |
US9229967B2 (en) | 2006-02-22 | 2016-01-05 | Oracle International Corporation | Efficient processing of path related operations on data organized hierarchically in an RDBMS |
US20070198545A1 (en) * | 2006-02-22 | 2007-08-23 | Fei Ge | Efficient processing of path related operations on data organized hierarchically in an RDBMS |
US7940408B2 (en) * | 2006-03-21 | 2011-05-10 | Ricoh Company, Ltd. | Bi-directional status and control between image capture device and backend device |
US20070223031A1 (en) * | 2006-03-21 | 2007-09-27 | Hiroshi Kitada | Bi-directional status and control between image capture device and backend device |
US20090265372A1 (en) * | 2006-03-23 | 2009-10-22 | Arne Esmann-Jensen | Management of Document Attributes in a Document Managing System |
US20070250527A1 (en) * | 2006-04-19 | 2007-10-25 | Ravi Murthy | Mechanism for abridged indexes over XML document collections |
US7831563B2 (en) * | 2006-05-17 | 2010-11-09 | International Business Machines Corporation | Active storage and retrieval systems and methods |
US20070271306A1 (en) * | 2006-05-17 | 2007-11-22 | Brown Albert C | Active storage and retrieval systems and methods |
US8930348B2 (en) * | 2006-05-25 | 2015-01-06 | Oracle International Corporation | Isolation for applications working on shared XML data |
US8510292B2 (en) | 2006-05-25 | 2013-08-13 | Oracle International Coporation | Isolation for applications working on shared XML data |
US20070276792A1 (en) * | 2006-05-25 | 2007-11-29 | Asha Tarachandani | Isolation for applications working on shared XML data |
US20130318109A1 (en) * | 2006-05-25 | 2013-11-28 | Oracle International Corporation | Isolation for applications working on shared xml data |
US7499909B2 (en) | 2006-07-03 | 2009-03-03 | Oracle International Corporation | Techniques of using a relational caching framework for efficiently handling XML queries in the mid-tier data caching |
US20080005093A1 (en) * | 2006-07-03 | 2008-01-03 | Zhen Hua Liu | Techniques of using a relational caching framework for efficiently handling XML queries in the mid-tier data caching |
US7801856B2 (en) | 2006-08-09 | 2010-09-21 | Oracle International Corporation | Using XML for flexible replication of complex types |
US20080040369A1 (en) * | 2006-08-09 | 2008-02-14 | Oracle International Corporation | Using XML for flexible replication of complex types |
US20080091714A1 (en) * | 2006-10-16 | 2008-04-17 | Oracle International Corporation | Efficient partitioning technique while managing large XML documents |
US20080092037A1 (en) * | 2006-10-16 | 2008-04-17 | Oracle International Corporation | Validation of XML content in a streaming fashion |
US7797310B2 (en) | 2006-10-16 | 2010-09-14 | Oracle International Corporation | Technique to estimate the cost of streaming evaluation of XPaths |
US7933935B2 (en) | 2006-10-16 | 2011-04-26 | Oracle International Corporation | Efficient partitioning technique while managing large XML documents |
CN101578604B (en) * | 2007-01-16 | 2012-11-14 | 微软公司 | Associating security trimmers with documents in an enterprise search system |
US8849848B2 (en) | 2007-01-16 | 2014-09-30 | Microsoft Corporation | Associating security trimmers with documents in an enterprise search system |
US20080172390A1 (en) * | 2007-01-16 | 2008-07-17 | Microsoft Corporation | Associating security trimmers with documents in an enterprise search system |
US7979458B2 (en) * | 2007-01-16 | 2011-07-12 | Microsoft Corporation | Associating security trimmers with documents in an enterprise search system |
US20080288453A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for metadata-driven document management and access control |
US20080288862A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for in-document markup in support of information sharing |
US8966362B2 (en) | 2007-05-15 | 2015-02-24 | Palo Alto Research Center Incorporated | Method and system for in-document markup in support of information sharing |
US7933889B2 (en) | 2007-05-15 | 2011-04-26 | Palo Alto Research Center Incorporated | Method and system for metadata-driven document management and access control |
US8131762B2 (en) | 2007-05-15 | 2012-03-06 | Palo Alto Research Center Incorporated | Method and system for metadata-driven document management and access control |
US20110196896A1 (en) * | 2007-05-15 | 2011-08-11 | Palo Alto Research Center Incorporated | Method and system for metadata-driven document management and access control |
US7836098B2 (en) | 2007-07-13 | 2010-11-16 | Oracle International Corporation | Accelerating value-based lookup of XML document in XQuery |
US20090019077A1 (en) * | 2007-07-13 | 2009-01-15 | Oracle International Corporation | Accelerating value-based lookup of XML document in XQuery |
US7840609B2 (en) | 2007-07-31 | 2010-11-23 | Oracle International Corporation | Using sibling-count in XML indexes to optimize single-path queries |
US20090037369A1 (en) * | 2007-07-31 | 2009-02-05 | Oracle International Corporation | Using sibling-count in XML indexes to optimize single-path queries |
US7991768B2 (en) | 2007-11-08 | 2011-08-02 | Oracle International Corporation | Global query normalization to improve XML index based rewrites for path subsetted index |
US20090125693A1 (en) * | 2007-11-09 | 2009-05-14 | Sam Idicula | Techniques for more efficient generation of xml events from xml data sources |
US8250062B2 (en) | 2007-11-09 | 2012-08-21 | Oracle International Corporation | Optimized streaming evaluation of XML queries |
US20090125495A1 (en) * | 2007-11-09 | 2009-05-14 | Ning Zhang | Optimized streaming evaluation of xml queries |
US8543898B2 (en) | 2007-11-09 | 2013-09-24 | Oracle International Corporation | Techniques for more efficient generation of XML events from XML data sources |
US20090125884A1 (en) * | 2007-11-13 | 2009-05-14 | International Business Machines Corporation | System and method for workflow-driven data storage |
US8201145B2 (en) * | 2007-11-13 | 2012-06-12 | International Business Machines Corporation | System and method for workflow-driven data storage |
US9842090B2 (en) | 2007-12-05 | 2017-12-12 | Oracle International Corporation | Efficient streaming evaluation of XPaths on binary-encoded XML schema-based documents |
US20090150412A1 (en) * | 2007-12-05 | 2009-06-11 | Sam Idicula | Efficient streaming evaluation of xpaths on binary-encoded xml schema-based documents |
US8429196B2 (en) | 2008-06-06 | 2013-04-23 | Oracle International Corporation | Fast extraction of scalar values from binary encoded XML |
US20090307239A1 (en) * | 2008-06-06 | 2009-12-10 | Oracle International Corporation | Fast extraction of scalar values from binary encoded xml |
US7958112B2 (en) | 2008-08-08 | 2011-06-07 | Oracle International Corporation | Interleaving query transformations for XML indexes |
US9805076B2 (en) | 2010-12-13 | 2017-10-31 | Oracle International Corporation | Extensible RDF databases |
US8489649B2 (en) | 2010-12-13 | 2013-07-16 | Oracle International Corporation | Extensible RDF databases |
US10459917B2 (en) | 2013-02-25 | 2019-10-29 | EMC IP Holding Company LLC | Pluggable storage system for distributed file systems |
US10719510B2 (en) | 2013-02-25 | 2020-07-21 | EMC IP Holding Company LLC | Tiering with pluggable storage system for parallel query engines |
US10831709B2 (en) | 2013-02-25 | 2020-11-10 | EMC IP Holding Company LLC | Pluggable storage system for parallel query engines across non-native file systems |
US10915528B2 (en) | 2013-02-25 | 2021-02-09 | EMC IP Holding Company LLC | Pluggable storage system for parallel query engines |
US9984083B1 (en) * | 2013-02-25 | 2018-05-29 | EMC IP Holding Company LLC | Pluggable storage system for parallel query engines across non-native file systems |
US11288267B2 (en) | 2013-02-25 | 2022-03-29 | EMC IP Holding Company LLC | Pluggable storage system for distributed file systems |
US11514046B2 (en) | 2013-02-25 | 2022-11-29 | EMC IP Holding Company LLC | Tiering with pluggable storage system for parallel query engines |
US9898475B1 (en) | 2013-02-25 | 2018-02-20 | EMC IP Holding Company LLC | Tiering with pluggable storage system for parallel query engines |
US10713305B1 (en) * | 2016-09-29 | 2020-07-14 | EMC IP Holding Company LLC | Method and system for document search in structured document repositories |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6269380B1 (en) | Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols | |
US6397231B1 (en) | Virtual documents generated via combined documents or portions of documents retrieved from data repositories | |
US6266682B1 (en) | Tagging related files in a document management system | |
US6562076B2 (en) | Extending application behavior through active properties attached to a document in a document management system | |
US6240429B1 (en) | Using attached properties to provide document services | |
US6330573B1 (en) | Maintaining document identity across hierarchy and non-hierarchy file systems | |
US6324551B1 (en) | Self-contained document management based on document properties | |
US6308179B1 (en) | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system | |
US6253217B1 (en) | Active properties for dynamic document management system configuration | |
US6370553B1 (en) | Atomic and molecular documents | |
US7536386B2 (en) | System and method for sharing items in a computer system | |
US7769768B2 (en) | Methods, apparatus and computer programs for visualization and management of data organization within a data processing system | |
JP5787963B2 (en) | Computer platform programming interface | |
US8117226B2 (en) | System and method for virtual folder sharing including utilization of static and dynamic lists | |
US7526483B2 (en) | System and method for virtual folder sharing including utilization of static and dynamic lists | |
US7533115B2 (en) | Method for managing persistent federated folders within a federated content management system | |
US7627583B2 (en) | Methods, apparatus and computer programs for visualization and management of data organisation within a data processing system | |
US6266670B1 (en) | User level accessing of low-level computer system operations. | |
US7155662B1 (en) | Representing an entity as a document using a data source having active properties | |
Chia | Personal multimedia content management | |
KR20070028981A (en) | Knowledge extensible internet document publishing system adopting file object technology |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: XEROX CORPROATION, CONNECTICUTFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:TERRY, DOUGLAS B.;DOURISH, JAMES P.;EDWARDS, WARREN K.;AND OTHERS;REEL/FRAME:009447/0404Effective date: 19980831 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: BANK ONE, NA, AS ADMINISTRATIVE AGENT, ILLINOISFree format text: SECURITY INTEREST;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:013153/0001Effective date: 20020621 |
|
AS | Assignment |
Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT, TEXASFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476Effective date: 20030625Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT, TEXASFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476FEffective date: 20030625Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT,TEXASFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476Effective date: 20030625 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: XEROX CORPORATION, NEW YORKFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:BANK ONE, NA;REEL/FRAME:026954/0348Effective date: 20030625Owner name: XEROX CORPORATION, NEW YORKFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A.;REEL/FRAME:026955/0001Effective date: 20061204 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:027728/0811Effective date: 20111110 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
AS | Assignment |
Owner name: XEROX CORPORATION, CONNECTICUTFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A. AS SUCCESSOR-IN-INTEREST ADMINISTRATIVE AGENT AND COLLATERAL AGENT TO JPMORGAN CHASE BANK;REEL/FRAME:066728/0193Effective date: 20220822 |
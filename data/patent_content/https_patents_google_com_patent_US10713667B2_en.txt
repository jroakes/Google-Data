US10713667B2 - Automated agent for social media systems - Google Patents
Automated agent for social media systems Download PDFInfo
- Publication number
- US10713667B2 US10713667B2 US15/861,397 US201815861397A US10713667B2 US 10713667 B2 US10713667 B2 US 10713667B2 US 201815861397 A US201815861397 A US 201815861397A US 10713667 B2 US10713667 B2 US 10713667B2
- Authority
- US
- United States
- Prior art keywords
- social media
- user
- data
- media platform
- rules
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 230000009471 action Effects 0.000 claims abstract description 81
- 230000000694 effects Effects 0.000 claims abstract description 68
- 238000000034 method Methods 0.000 claims abstract description 42
- 230000006870 function Effects 0.000 claims description 17
- 238000012545 processing Methods 0.000 claims description 11
- 230000002123 temporal effect Effects 0.000 claims description 8
- 230000006399 behavior Effects 0.000 abstract description 79
- 230000008569 process Effects 0.000 abstract description 7
- 239000003795 chemical substances by application Substances 0.000 description 153
- 230000006855 networking Effects 0.000 description 24
- 238000012544 monitoring process Methods 0.000 description 22
- 238000004891 communication Methods 0.000 description 20
- 238000010586 diagram Methods 0.000 description 12
- 230000003993 interaction Effects 0.000 description 9
- 230000015654 memory Effects 0.000 description 9
- 238000013473 artificial intelligence Methods 0.000 description 6
- 238000004590 computer program Methods 0.000 description 6
- 230000007246 mechanism Effects 0.000 description 6
- 230000005540 biological transmission Effects 0.000 description 4
- 238000012546 transfer Methods 0.000 description 4
- 238000013459 approach Methods 0.000 description 3
- 230000007613 environmental effect Effects 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 230000008859 change Effects 0.000 description 2
- 230000001419 dependent effect Effects 0.000 description 2
- 238000011161 development Methods 0.000 description 2
- 230000005291 magnetic effect Effects 0.000 description 2
- 230000002688 persistence Effects 0.000 description 2
- 230000010076 replication Effects 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 230000001953 sensory effect Effects 0.000 description 2
- 238000012549 training Methods 0.000 description 2
- 230000006978 adaptation Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 238000013523 data management Methods 0.000 description 1
- 238000003066 decision tree Methods 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 230000009977 dual effect Effects 0.000 description 1
- 238000000605 extraction Methods 0.000 description 1
- 239000000796 flavoring agent Substances 0.000 description 1
- 235000019634 flavors Nutrition 0.000 description 1
- 230000007274 generation of a signal involved in cell-cell signaling Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 230000000737 periodic effect Effects 0.000 description 1
- 230000035755 proliferation Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000008054 signal transmission Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 238000006467 substitution reaction Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 230000001755 vocal effect Effects 0.000 description 1
- 230000003442 weekly effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0283—Price estimation or determination
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
- H04L51/046—Interoperability with other network applications or services
Definitions
- This patent document pertains generally to data processing systems and methods and more particularly, but not by way of limitation, to methods and systems to process data pertaining to a user across multiple social media.
- social media platforms with which users interact has proliferated over the past few years.
- Examples of such social media platforms include social networking systems (e.g., Facebook), professional networking systems (e.g., LinkedIn), virtual world platforms (e.g., Second Life), messaging systems (e.g., Google email (Gmail), Google Wave, Skype), blogging systems (e.g., Blogspot.com), and review/rating systems (e.g., Yelp.com, Digg.com).
- Social networking platforms such as Facebook, are continuing to gain popularity as platforms on which users interact, communicate and share using multiple types of data and communication channels.
- a number of social networking platforms provide one or more messaging tools, and photo and video sharing capabilities.
- These social networking platforms also allow users to share content located on the internet with each other in a convenient manner, and provide mechanisms by which users can exercise control over with whom they share information, and what information is shared with them (e.g., by source or by content type).
- Virtual worlds similarly host vibrant communities of people who interact, play, do business and even find romance online.
- This proliferation has presented a number of challenges to users, both from a resource perspective (e.g., the time required to manage interactions across multiple social media platforms) and technical perspective (e.g., having to learn user interfaces and privacy controls across multiple platforms).
- managing interactions across multiple social media platforms may require a user to duplicate actions (e.g., the publication of updates or other information).
- a particular user may also be presented with duplicate information from other users, via a number of social media platforms (e.g., when a user publishes the same information on both Facebook and MySpace). Reacting to such communications and events across multiple social media platforms may require more time than a user is willing or able to expend on social networking activities.
- Hattori et al. in their paper entitled “ Socialware: Multiagent Systems for Supporting Network Communities ”, discussed their development of multi-agent systems to assist in various social activities on network communities, which they term “socialware”.
- Hattori et al. described a network community as a collection of personal units, community agent(s) and a set of relationships between them.
- a personal unit is described as consisting of a user and his or her personal agent.
- Each personal agent can help the user by gathering and exchanging information, visualizing contexts, and recommending or assisting the user in making a particular choice.
- the personal agents of a user may cooperate and act as a unit, with the user being the central figure.
- the community of agents has the function of providing shared information, knowledge or context within a community, and act as mediators for informal communications between people.
- An architecture where each user has personal agents that communicate with each other enables the community to spread. Hattori et al. states that it is possible to have some agents be domain-specific (for example, an information retrieval agent specialized for financial news) and others to be more generic (for example, an interface agent for navigating and reading documents).
- Adoption of multiple aspects of a user and the user's changes in interests can be achieved by changing the system dynamically and autonomously.
- a domain-specific agent can clone itself and produce a new agent that makes additional communication channels when the user's interest has changed.
- Hattori et al. furthermore described the development of a prototype application for the purposes of linking people (a “CommunityOrganizer”), which consists of a personal agent for each user, and a community agent.
- a CompunityOrganizer which consists of a personal agent for each user, and a community agent.
- Each personal agent functions to acquire the user profile and to visualize potential communities around a user.
- the community agent functions to collect the user profiles, and to maintain the information on potential communities.
- the relevancies between users are calculated by the community agent from the users' profile data. These profiles can be obtained from each user's input, from archives of mailing lists using keyword extraction techniques, or from user information on the Web.
- Each personal agent is furthermore described as having slide bars which temporarily adjust the weightings of the viewpoints, since a degree of common interest consists of multiples aspects.
- Each personal agent displays structures of discussions according to the user's interests.
- the community agent may have to classify messages according to several criteria, such as topic, time and reputation.
- Partsakoulakis et al. in their paper entitled “ Representative Agents for Reliable Participation in Social Contexts ”, describe a prototype system geared towards empowering humans to deliberately form and manage their social context and position via personal agents that act as their representatives.
- Personal agents are described as representing humans, and form their “digital analog” within organizations. The approach is based on a role-based model concerning consistency and reliability of role playing within a social context. Agents are described as being aware of an overall social context, profile and needs of their users, and may search for, evaluate (e.g., in terms of consistency), and present relevant information to their users.
- Personal agents serve/represent specific humans and populate groups that play organizational roles.
- Personal agents are described as maintaining the profiles of the humans that they represent (e.g., their preferences, their roles, etc.) to help them achieve their goals.
- Personal agents can have managerial responsibilities within an organization, and their architecture is described as comprising a knowledge base, an inference engine, and an interface of the agent with its environment. Two types of interfaces are distinguished, namely the interface between the agent and the user, and the interface between the agent and other agents.
- the knowledge base of personal agent is described as comprising the social context in which the agent operates, the profile of the user, and a cache of addresses of other agents.
- FIG. 1 is a block diagram of a network environment within which a social media agent system, according to some example embodiments, may be deployed.
- FIG. 2 is a block diagram providing an architectural view of a social media agent system, according to some example embodiments.
- FIG. 3 is a block diagram providing a logical view of a social media agent system, according to some example embodiments.
- FIG. 4 is a block diagram illustrating an architecture of a storage and access module, according to some example embodiments, which may in turn form part of a social media agent system.
- FIG. 5 is a block diagram illustrating architecture of a behavior engine, according to some example embodiments, which may in turn form part of a social media agent system.
- FIG. 6 is a flow chart illustrating a method, according to some example embodiments, to process data and interact across multiple social media platforms using an autonomous agent.
- FIG. 7 is a flow chart illustrating a method, according to some example embodiments, to store captured data relating to a user obtained from multiple social media platforms.
- FIG. 8 is a diagrammatic representation of the categorization, according to example embodiments, of captured data.
- FIG. 9 is a block diagram of machine in the example form of a computer system within which a set of instructions for causing the machine to perform any one or more of the methodologies discussed herein may be executed.
- a social media agent hereinafter conveniently referred to as a social media robot or “bot”, which may operate as a user-controlled, semi-autonomous, or fully autonomous representative entity of a user across multiple social media platforms or systems.
- a social media agent may be operated by a user directly, or may act autonomously on behalf of a user in both real-time and offline.
- An autonomous agent may include capture logic that operates to sense and record captured data describing actions relating to a user across one or more social media systems.
- capture logic may operate to sense environmental and contextual data (e.g., within a particular social media platform) pertaining to a social media system in which a user and/or an associated autonomous agent is acting (e.g., to “see” objects in a virtual world environment or “hear” speech in a chat room).
- the sensory input that is detected by the control logic may then be recorded and made available for processing.
- An autonomous agent may also include action logic that operatively controls actions performed by the autonomous agent within the context of one or more social media platforms, based on both real-time and historic data recorded by the capture logic. As such, the autonomous agent's actions may be controlled by the action logic in an autonomous way, rather than always being directly controlled by a human user.
- Various social media platforms e.g., social networking platforms and virtual worlds
- APIs Application Program Interfaces
- Linden Labs provides an extensive set of APIs to the Second Life virtual world.
- the activities performed by an autonomous agent may include processing of input collected by an autonomous agent and transmitted via an API, and controlling of the autonomous agent via such APIs.
- a social media agent system that includes a capture module configured to capture data describing actions related to a user across multiple social media systems or platforms, a storage module configured to store the captured data in a database, and an interface configured to provide access to this captured data.
- the captured data may include user behavior data pertaining to actions performed by (or on behalf of) the user across the plurality of social media systems, or behavior data pertaining to actions relating to the user performed by (or on behalf of) a further user across the plurality of social media systems.
- the captured data may further include attributes relating to actions performed by or on behalf of the user or the further user.
- These attributes may include a media attribute identifying at least one of the multiple social media systems to which a particular action relates, a temporal attribute identifying a date and time at which a particular action occurred, an action entity attribute identifying an entity (e.g., the user or a further user, or representative thereof) as having performed a specific action, a related entity attribute identifying an entity to which the specific action relates, and a type attribute identifying a type of action for the specific action.
- a media attribute identifying at least one of the multiple social media systems to which a particular action relates
- a temporal attribute identifying a date and time at which a particular action occurred
- an action entity attribute identifying an entity (e.g., the user or a further user, or representative thereof) as having performed a specific action
- a related entity attribute identifying an entity to which the specific action relates
- a type attribute identifying a type of action for the specific action.
- the storage module is furthermore configured to deduplicate data items of captured data (e.g., by the comparison of newly-acquired captured data with a previously-stored captured data, or by comparisons of previously-stored captured data with other previously-stored captured data).
- the storage module may furthermore be configured to identify a first data item, relating to a first user, and a second data item, relating to at least one further user, as being duplicate (or at least partially duplicate) data items.
- the captured data may be constituted by data items relating to at least one of: behavior data relating to actions performed in connection with at least one of multiple social media systems, content data for content generated or identified by a user within the context of at least one of multiple social media systems, and entity data identifying an entity with which a user (or autonomous agent acting on behalf of the user) has interacted in the context of at least one of multiple social media systems.
- the storage module may furthermore be configured to store the captured data based on an assessed relevance of the respective data items.
- the storage module may be configured to assess the relevance of data items according to a plurality of relevancy rules, which in turn are based on attributes of a data item.
- the system may further include a charge module to determine a storage charge relating to the storage of captured data, and to charge a determined storage charge to a user.
- the system may further include a rules database configured to store a plurality of social media rules (e.g., behavior rules) associated with a particular user.
- a rules database configured to store a plurality of social media rules (e.g., behavior rules) associated with a particular user.
- the system includes a rules database that is configured to store programmatic controls, in the example form of a plurality of social media rules (e.g., behavior rules) associated with a user.
- the programmatic controls may be primitives, programs, scripts or applets.
- the system may further include an autonomous agent module that is configured to perform autonomous activities, on behalf of the user, relating to at least one social medium of a plurality of social media systems, based on at least one of the multiple social media rules or captured data.
- the autonomous agent module may be configured to perform the autonomous activity in response to a condition expressed by at least one of the multiple social media rules.
- the condition may be dependent on historical events recorded in the captured data, and the condition may relate to at least one of a user activity reflected in a user behavior data, contextual data, a temporal condition, a third-party action relating to a social medium, or an automated action relating to a social medium.
- the autonomous agent may furthermore be configured to perform autonomous activities across two or more of the multiple social media systems.
- the autonomous agent may furthermore be configured to access captured data, stored in the database, via an interface.
- the autonomous agent module may include agent interfaces to facilitate interactions between multiple instantiated autonomous agents that function as representatives of respective users across multiple social media systems.
- the agent interface may be configured to enable a transfer of data items of captured data between a particular instantiated autonomous agent, and a further instantiated autonomous agent, each of the instantiated agents representing a respective user.
- a rule for a particular user may be specific to a social medium of multiple social media systems. Further, a rule may also be applicable across multiple media of multiple media systems.
- the system may, in some example embodiments, further comprise an artificial intelligence module that is configured automatically to modify social media rules based on data captured from one or more social media systems.
- the system may further include a graphical user interface configured to facilitate access to captured data by a user, and/or a programmatic interface configured to facilitate access to the captured data by an automated process or system.
- Example embodiments may find application across many types of different social media systems, including social networking systems, professional networking systems, virtual world systems, messaging systems and blogging systems, to name a few examples.
- FIG. 1 is a block diagram illustrating an environment 100 , within which an example embodiment of a social media agent system 102 may be deployed.
- the social media agent system 102 is communicatively coupled to one or more databases 104 in which are stored captured data, behavior libraries, social law rules, relevancy rules, and storage charges and credits, to name a few examples.
- the social media agent system 102 is coupled via a network 106 (e.g., the Internet) to multiple social media systems. These social media systems include social networking systems 108 , virtual world systems 110 , messaging systems 112 , microblogging systems 114 and blogging systems 116 .
- the social media agent system 102 may of course be connected to other types of social media system, and to any number of social media systems of a particular type.
- Each of the various types of social media systems is shown, in the example embodiment, to include both a web interface to generate webpage interfaces to users, and APIs to enable programmatic access to the relevant system.
- the social media agent system 102 is further communicatively coupled, via the network 106 , to one or more user computer system(s) 118 , which hosts client applications, an example of which is a browser application 120 .
- client applications an example of which is a browser application 120 .
- a user may access the respective web interfaces of any one of a number of social media systems 108 - 116 , as well as a web interface of the social media agent system 102 .
- FIG. 2 is a block diagram providing an architectural view of a social media agent system 200 , according to some example embodiments.
- the social media agent system 200 is communicatively coupled to multiple social media systems 202 , for example of the types discussed above.
- the social media agent system 200 includes operating system 204 , a behavior library 206 and an API library 208 .
- the operating system 204 may support a number of components and modules which may be logically assembled into autonomous agents, as discussed below in further detail with reference to FIG. 3 .
- Each of the autonomous agents may be associated with, and act on behalf of, a specific user of the social media agent system 200 .
- the components of the operating system 204 may include capture modules 210 , behavior engines 212 and control modules 214 .
- a capture module 210 may be configured to operatively identify, capture, store and access historical information in a history database 216 .
- a behavior engine 212 in one example embodiment, is configured to operatively perform autonomous (or semi-autonomous) activities on behalf of a user relating to at least one of the multiple social media systems 202 , based on the historical information stored within the history database 216 and one or more rules, in the example form of behaviors 218 , stored within the behavior library 206 . Actions and activities performed or instructed by the behavior engine 212 may furthermore be constrained by social constraints, expressed in the form of social “laws” stored within a social law database 220 .
- Behaviors 218 within the behavior library 206 may be altered using a behavior definition language 222 , or any one of a number of other well known programming languages 224 .
- the social media agent system 200 additionally provides a number of captured data interfaces 226 to access captured data stored within the history database 216 .
- one or more web interfaces 228 provide browser applications 230 , executing on client machines 232 , with access to the captured data stored within the history database 216 .
- APIs 234 of the captured data interfaces 226 provide programmatic applications 236 , executing on remote devices 238 (e.g., server machines), with access, via the network 106 , to the captured data within the history database 216 .
- the web interfaces 228 may provide a user with a dashboard view that summarizes captured data gleaned from the multiple social media systems 202 .
- This information may include various user-configurable summaries, as well as alerts regarding specific actions or observations.
- the summaries may be summaries of activities with respect to specific applications, functions or locations of any one or more of the social media systems 202 .
- a summary may, for example, be provided of activities (e.g., communications, and other interactions) relating to a further user (e.g., a child) across one or more of the social media systems.
- activities e.g., communications, and other interactions
- Such a summary provides a parent user with a summary of activities of one or more of their children (e.g., child users) across multiple social media systems.
- summaries that are presented to a user may be configured, using the control module 214 , to only include the summarized activities of a particular user with respect to further users (e.g., an entity with which a parent user may not wish a child user to have any interactions), or activities of a certain type (e.g., photo posting activities).
- Other types of filters may be provided by the control module 214 with respect to both summaries and alerts.
- Such filters may include frequency filters (e.g., only a certain frequency of a certain type of activity and/or with respect to a further user may be included in a summary) or time period filters (e.g., only activities of a certain type, or involving a certain further user, which occur within a predetermined time window are included in the summary and report).
- frequency filters e.g., only a certain frequency of a certain type of activity and/or with respect to a further user may be included in a summary
- time period filters e.g., only activities of a certain type, or involving a certain further user, which occur within a predetermined time window are included in the summary and report.
- FIG. 3 is a block diagram providing a logical view of a social media agent system 300 , according to some example embodiments.
- the social media agent system 300 is shown to comprise multiple autonomous agents 330 , 332 and 334 , each of which is communicatively coupled, via an API library 308 , to one or more social media systems 302 .
- Each of the autonomous agents 330 - 334 includes components corresponding to the operating system components described above with reference to FIG. 2 .
- Each of the autonomous agents 330 - 334 is furthermore associated with a user of the social media agent system 300 .
- a single user may have multiple autonomous agents that are representative, and operate across the social media systems 302 , on behalf of the respective user.
- this agent 330 includes a capture module 336 (e.g., corresponding to a capture module 210 in the architectural view of FIG. 2 ), a behavior engine 338 (e.g., corresponding to a behavior engine 212 in the architectural view of FIG. 2 ), and a settings interface 340 (e.g., corresponding to a control module 214 in the architectural view of FIG. 2 ).
- the agent 330 also includes an agent interface 342 via which the autonomous agent 330 can interface with other autonomous agents, such as autonomous agent 332 .
- a social media interface 344 enables the autonomous agent 330 to interface with multiple social media systems 302 , using the API library 308 .
- FIGS. 4 and 5 Further information regarding a capture module and a behavior engine, according to some example embodiments, will now be provided with reference to FIGS. 4 and 5 .
- FIG. 4 is a block diagram illustrating further architectural details of a capture module 400 , according to some example embodiments.
- the capture module 400 provides an infrastructure to enable an autonomous agent to store and access historical information pertaining to a user across one or more social media systems 402 to which the capture module 400 has access via an API library 408 .
- the capture module 400 may be regarded as operatively “shadowing” an autonomous agent, and collecting and organizing information regarding observations, interactions and activities of the respective autonomous agent. It will be appreciated that the recording of historical information pertaining to observations, interactions and actions of an autonomous agent is a non-trivial tasks.
- collective captured data may include a time-stamped list of applications invoked, functions used and locations visited by an autonomous agent across multiple social media systems 402 of varying types.
- the capture module 400 may record and time-stamp the information regarding various communication activities (e.g., chat, messaging, posting), third-party applications hosted on the social networking platform with which the autonomous agent may have interacted (e.g., an online game posted on a social networking platform), or the profiles of other users that were viewed or accessed by the autonomous agent.
- various communication activities e.g., chat, messaging, posting
- third-party applications hosted on the social networking platform with which the autonomous agent may have interacted e.g., an online game posted on a social networking platform
- the profiles of other users that were viewed or accessed by the autonomous agent.
- the data captured may include a time-stamped list of virtual locations visited by the autonomous agent, avatars that were encountered and communicated with, and activities engaged in, and actions performed, by the autonomous agent or user (via an avatar) within a virtual world.
- a time-stamped list may be significant.
- an avatar which is operating under the control of an autonomous agent may be associated with several dozen virtual properties within a virtual world. At each of these properties, the relevant avatar may encounter many other avatars, as well as a large number of virtual objects.
- the details of objects and entities that an avatar may encounter as it traverses a virtual world may be captured as “snapshots” by the capture module on a periodic basis. If one considers the situation in which a large number of avatars are operating with autonomous agents, each of which is capturing environmental and activity snapshots with relative frequency (e.g., every few seconds), it will be appreciated that the amount of data captured is significant. For example, chat records, visual scene representations, etc., need to be stored at every snapshot, and the storage demands in this case may be substantial. For this reason, in one example embodiment, the capture module 400 includes intelligence that focuses storage on “relevant” information, and that seeks to avoid the duplication of information captured by various autonomous agents associated with respective avatars.
- limits may be placed on the amount of information that is captured by a particular capture module 400 associated with a particular autonomous agent. Such limits may allow capture activities to be prioritized (e.g., by focusing on certain virtual properties, or automatically expunging older records).
- the capture module 400 may also be provided with capabilities to support charging for storage beyond a certain capacity, and to allow autonomous agents to trade or negotiate for storage rights.
- the data captured by a capture module 400 may furthermore be spatio-temporal in nature.
- the social media system 402 is a virtual world system
- the indexing and querying of spatio-temporal databases is complex, particularly if the temporal axis is chosen as the primary axis, as the valuation of spatial predicate becomes inefficient, and vice versa.
- a Historical R-tree may be deployed as an index, and in which a collection of spatial indexes (namely R-trees) are used for each time-stamp.
- a further approach may represent a moving object in dual space as a stationary object. For example, a moving object in a 2-D space may be transformed to a point in a 4-D space, where the two additional dimensions correspond to the object's velocity in the x and y axes respectively.
- Queries in spatio-temporal databases may involve captured data (e.g., “find all cars that were in the city center between 2:00 p.m. and 3:00 p.m. yesterday”). Queries may also be predictive, if a motion patent is known (e.g., “find all aircraft expected to appear in Washington's base in 10 minutes from now”), and may involve predicates about topology, distance and direction. More advanced queries may be used to retrieve some of the trajectories, or to mine frequent spatio-temporal patterns.
- Data captured via a capture module 400 may also contain information about events, actions, verbal and textual communications, surroundings, applications, etc., in addition to spatio-temporal data.
- the processing of such additional data may be implemented using indexing methods, meta-data management and query languages.
- An example embodiment records only changes in attribute values, and infers the value of an attribute y at a given time by the most recent value change.
- Such an example embodiment may adopt the use of a so-called “Time Map”, which is a temporal database that embraces default persistence in order to avoid rerecording constant property values.
- a capture module 400 in addition to recording captured data pertaining to actions of an autonomous agent and/or user (or, in a context of a virtual world, an avatar under control of the autonomous agent and/or user), may also capture data regarding the actions and context of other autonomous agents and/or users (e.g., represented by avatars in a virtual world, or acting directly within the context of a social networking system). For example, if a first autonomous agent knows that a second autonomous agent has performed a certain action or visited a specific application/function/location that is unknown to the first autonomous agent, the first autonomous agent may query the second autonomous agent in connection with respect to the unknown application or location.
- an autonomous agent may perform a particular activity, on behalf of a user, with respect to a particular function provided by the social networking platform, or with respect to a particular application hosted by the social networking platform.
- a particular avatar may have visited a virtual application not previously visited by a specific avatar.
- certain example embodiments seek to avoid the replication of data captured by one autonomous agent by another.
- one embodiment may use an efficient hierarchical, multi-agent captured database in order to avoid such replication.
- One example approach is to extend “Time Maps” to a multi-agent environment.
- a monitoring module 440 operatively monitors, senses and/or detects contextual information with respect to a particular activity or action performed by an autonomous agent, such as the agent 330 .
- the contextual information that is monitored and detected via the monitoring module 440 may vary, depending upon the social media system within which the autonomous agent is active.
- a messaging system e.g., web-based email system.
- information regarding the addressees of a message, as well as the content of a particular message may be monitored, parsed and extracted.
- a particular type of interaction may be monitored and detected (e.g., chat, messaging, posting, photo upload, etc.), as well as entities involved in the interaction (e.g., a particular friend, group of friends or network), and the content of the communication.
- a virtual world system a virtual world location, objects and activities related to the virtual location may be sensed and detected.
- contextual information sensed and detected by the monitoring module 440 may be pre-configured within the operating system 204 .
- user controls may be provided (e.g., via the control module 214 ) which allow a user to specify which contextual information should be monitored/sensed/detected for each of multiple social media systems 402 .
- the monitoring module 440 may differentiate between different types of captured data. Specifically, the monitoring module 440 may differentiate between (1) captured data reflecting actions, activities and context for an autonomous agent (or user) with which the capture module 400 is directly associated, and (2) observed captured data pertaining to third-party autonomous agents (users or entities). The monitoring module 440 may detect direct behavior data pertaining to actions performed by, or on behalf of, an associated user across multiple social media systems 402 and third-party behavior data pertaining to actions performed by or on behalf of further users across the multiple social media systems 402 .
- the captured data sensed or detected by the monitoring module 440 may also relate to specific attributes, these attributes again being particular or specific to a particular social media system 402 .
- Example attributes, relating to actions performed by, or on behalf of, an associated user or another user may include the following:
- the captured data sensed and detected by the monitoring module 440 may furthermore be captured as unique data items that are classified broadly into a number of categories, examples being:
- a first user acting directly through an autonomous agent, may generate a message content, which is then transmitted to a second user.
- the behavior data with respect to a sending user, may indicate a “send” action as a behavior.
- the content data relating to this activity may include the content of the message, and entity data may identify the sender and recipient users of the message.
- a recorder module 441 is configured to record information that is monitored, detected and extracted by the monitoring module 440 .
- a deduplication module 442 seeks to avoid the storage of duplicate information within a history database 416 .
- the deduplication module 442 may deploy the “Time Maps” described above, as a form of a temporal database that uses default persistence to avoid the storage of identical property values for various attributes.
- hashes of previously-stored captured data may be compared to hashes of currently received captured data in order to assess whether changes with respect to particular attribute values have occurred.
- the storage of fresh attribute values may be predicated upon detecting a change between successive “snapshots” of attribute values.
- newly received captured data retrieved for one particular agent with respect to a specific social media platform may be compared to historical information previously received from another agent active on the same social media platform. If the relevant captured data (or at least a portion thereof), is determined to have been previously captured by another agent, the previously captured information may be associated with the current autonomous agent, in order to reduce the storage of duplicate information within the history database 416 .
- a relevancy module 444 is configured to operatively assess the relevance of data that has been sensed/detected by the monitoring module 440 , and determined not to be duplicate or redundant data by the deduplication module 442 . In this sense, the relevancy module 444 may seek to prioritize storage of data items comprising captured data within the history database 416 . The relevancy module 444 may assess the relevancy of a particular data item (e.g., a snapshot) based on one or more relevancy rules 447 . Certain relevancy rules, for a particular autonomous agent, may be applied across multiple social media systems 402 , whereas other relevancy rules 447 may be specific to a particular social media platform. Certain relevancy rules 447 may constitute a part of the operating system 204 and may be “built in” relevancy assessments. Other relevancy rules 447 may be user-definable through the control module 214 .
- a charge/credit trading module 446 in one example embodiment, is configured to operatively monitor an amount of storage consumed within the history database 416 , by captured data associated with a particular autonomous agent or user. To this end, predetermined thresholds of storage within the history database 416 may be specified on a per agent/user basis. In the event that storage thresholds are exceeded, the charge/credit trading module 446 may implement a charge against an account (not shown) of a user for the additional storage. To this end, the charge/credit trading module 446 is configured to maintain storage credits 448 for each agent/user indicating a number of storage credits 448 (e.g., purchased additional storage or unused storage capacity) that are attributable to a particular user. In one example embodiment, the module 446 may further enable users to trade storage capacity, using storage credits 448 as a currency.
- predetermined thresholds of storage within the history database 416 may be specified on a per agent/user basis. In the event that storage thresholds are exceeded, the charge/credit trading module 446 may implement a charge against an account
- FIG. 5 is a block diagram illustrating further architectural details of a behavior engine 500 , according to some example embodiments.
- the behavior engine 500 is configured to perform autonomous activity on behalf of a user, relating to at least one of multiple social media systems 502 , based on captured data maintained within a history database 516 , and behaviors 518 stored in a behavior library 520 .
- the autonomous activities may be performed by a collection of autonomous action modules 522 that access the behavior library 520 and the history database 516 via interfaces 524 .
- Example modules that may be included in the autonomous action modules 522 include:
- the behavior engine 500 may further include an intra-agent module 534 to facilitate communications and transfer of data between an autonomous agent (which the behavior engine forms a part) and other autonomous agents (e.g., using an agent interface 342 ).
- an intra-agent module 534 to facilitate communications and transfer of data between an autonomous agent (which the behavior engine forms a part) and other autonomous agents (e.g., using an agent interface 342 ).
- An artificial intelligence module 536 is configured to automatically modify behaviors 518 (as examples of social media rules) based on captured data, either retrieved in real time by the capture module 400 , or retrieved from the history database 516 .
- the autonomous activities or actions performed by the behavior engine 500 may be programmed in one of a number of different ways.
- the interfaces 524 may include one or more programming interfaces 538 (e.g., APIs) using which programs may be written in any one of a number of languages (e.g., Java or C++) to implement behavior on the behavior engine 500 .
- programming interfaces 538 e.g., APIs
- three levels of automation may be provided, including (in order of increasing sophistication), built-in parameters, one or more behavior libraries 520 , and a specialized scripting language.
- the APIs of a social media system 502 may give rise to a basic set of primitive commands that may be issued, for example using an API library 508 .
- These commands may include actions that are generic to a specific social media platform (e.g., go to location X), but also actions that may be specific to a particular social media system 502 (e.g., “grab the treasure”) given a specific location (e.g., by an item at a given price).
- a primitive command may specify conditions under which the API may be invoked. Two example cases may be a condition-response case, and or a time-scoped case.
- An example condition-response may, with respect to a virtual world system, state the following: “If an avatar with XYZ properties arrives at location ABC, greeted with the phrase RST”. In a special case, the condition may be empty (i.e., always satisfied).
- a time-scoped case in addition to a condition, a user may specify a time window during which a particular action is valid. As a special case, the time window may be a specific time. Further, a graphical user interface (GUI) may have a user select the time-scope, the condition and a built-in action, including relevant parameters.
- GUI graphical user interface
- an initial set of behaviors 518 may be supplied as part of the operating system 204 . From a user's perspective, the behaviors 518 may appear to be similar to a bolt-in parameter, although the nature of the behaviors 518 is different from the bolt-in parameters. For example, a set of bolt-in parameters may be finite and fixed, whereas complex behaviors 518 may grow and evolve over time. An operator of a social media agent system 200 may furthermore add behaviors 518 to a behavior library 520 . Furthermore, users may be encouraged to create and add additional behaviors 518 to one or more behavior libraries 520 (e.g., as “plug-ins”) to the behavior engine.
- Example behaviors that may be included in the library are:
- behaviors 518 or behavior library 520 may either be passive (e.g., observing or monitoring) or active (e.g., transmitting a message, posting, negotiating a commercial deal, providing a service (e.g., giving a consent of providing information), etc.).
- the behaviors 518 may also be accessed via a GUI (e.g., as in the case of built-in parameters) or via APIs invoked in a script.
- the interfaces 524 may also include APIs with which the behavior engine 500 may be programmed. For example, a user may write a program in any number of languages (e.g., Java or C++), and link to libraries implementing the built-in behaviors.
- languages e.g., Java or C++
- FIG. 6 is a flow chart illustrating a method 600 , according to some example embodiments, to process data and interact across multiple social media platforms using an autonomous agent.
- the method 600 commences at operation 602 , and proceeds to operation 604 , where the capture module 400 of an autonomous agent captures data describing actions, activities and context across multiple social media systems.
- the capture module 400 may, in some example embodiments, monitor, record, deduplicate, and assess the relevancy of captured data, as described above with reference to FIG. 4 .
- the captured data may comprise action information describing user actions across multiple social media systems, and contextual information across such multiple social media platforms.
- the action information may reflect user actions performed by a user, or performed on behalf of a user by the autonomous agent, or observe actions of other users, again performed by those users directly or performed by autonomous agents acting on behalf of those further users.
- Context information may or may not be coupled to action information and may comprise observations or other sensed and recorded information pertaining to a particular application, function or location within a social media system (e.g., a social networking system, a virtual world system or a messaging system.)
- a social media system e.g., a social networking system, a virtual world system or a messaging system.
- the capture module 400 stores the captured data in the history database 416 , via the storage interface 418 .
- the captured data stored at operation 606 may, in some embodiments, have been subject to deduplication and relevancy assessment operations by the deduplication module 442 and the relevancy module 444 .
- the charge/credit trading module 446 of the capture module 400 may charge the relevant user, associated with an autonomous agent of which the capture module 400 forms a component, for storage of captured data.
- the social media agent system 200 provides interfaces so as to enable access to the captured data stored within a history database.
- the web interface 228 and the API 234 of the captured data interfaces 226 may provide access to browser applications 230 and programmatic applications 236 , respectively.
- certain example embodiments enable a behavior engine 500 , and particularly autonomous action modules 522 of the engine 500 , to perform autonomous activities on behalf of a user across any one or more of the multiple social media systems 502 , based on the captured data and/or social media rules (e.g., behaviors 518 ).
- the behavior engine 500 accesses captured data stored within the history database 516 , as well as real-time activity data captured by the capture module 400 .
- the behavior engine 500 may furthermore access social medial rules, in an example form of behaviors 518 (or the built-in primitives or scripted programs discussed above).
- the behavior engine 500 then performs one or more autonomous activities, on behalf of a respective user, with respect to one or more of the social media systems 502 , based on the captured data (real-time or previously stored), and/or the social media rules. Examples of such autonomous activities are detailed above with reference to FIG. 5 .
- the method 600 then terminates at operation 614 .
- FIG. 7 is a flow chart illustrating a method 700 , according to some example embodiments, to capture captured data describing activity and context across multiple social media systems, on behalf of a particular user.
- the method 700 may, in one example embodiment, be performed as part of the operation 604 of FIG. 6 .
- the method 700 commences at operation 702 , and progresses to operation 704 , where a capture module 400 invokes one or more monitors (e.g., of a monitoring module 440 ) in order to sense/detect activity and context information, and to record such historical information.
- a capture module 400 invokes one or more monitors (e.g., of a monitoring module 440 ) in order to sense/detect activity and context information, and to record such historical information.
- the various monitors may use various mechanisms to monitor activity and context information cross-multiple social media systems 402 .
- the monitors may use a publish-subscribe mechanism, a query mechanism or a listener mechanism, dependent upon monitoring resources provided by the respective social media systems 402 .
- the deduplication module 442 detects duplicate activity and context data, in the manner described above with reference to FIG. 4 , and deduplicates this data.
- the detection of duplicate information may involve a comparison of both real-time and previously stored captured data.
- the relevancy module 444 assesses the relevancy of the captured data, based on relevancy rules 447 , and prioritizes and/or filters the captured data based on these relevancy rules 447 .
- the deduplicated and relevancy-prioritized/filtered captured data is stored, via the storage interface 418 , into the history database 416 .
- the charge/credit trading module 446 may assess charges relating to storage of the captured data within the history database 416 . For example, this operation may include determining an amount of storage consumed by the storage operation performed at 710 , determining a charge or rate applicable on a per unit volume of storage capacity (e.g., a per megabyte charge), and assessing that charge against an account of the user maintained by the social media agent systems 200 .
- the user may have storage credits 448 (e.g., as a result of not having reached a threshold storage volume or having pre-purchased certain storage credits). These storage credits 448 may, at operation 712 , be applied to offset assessed charges.
- a user may trade storage credits 448 with other users for value.
- Such value may, for example, relate to the multiple social media systems 402 .
- storage credits 448 may be traded, via the social media agent system 200 , for a transfer of ownership of the virtual world object.
- FIG. 8 is a diagrammatic representation of the categorization, according to an example embodiments, of captured data that is captured by the capture module 400 described above with reference to FIG. 4 .
- captured data may be classified as being either real-time captured data 802 or a stored captured data 804 .
- Real-time captured data 802 may be a real-time data that is received by a monitor for processing, prior to processing thereof by the capture module 400 and prior to storage within the history database 416 .
- Stored captured data 804 is a data that has been deduplicated, relevancy prioritized (or filtered), and stored within the history database 416 via the storage interface 418 .
- Captured data may furthermore be classified as activity data 806 or context data 808 .
- Activity data 806 may be a captured data that describes activities performed by (or on behalf of) a user associated with autonomous agent that includes a particular capture module 400 , or activities performed by (or on behalf of) a third-party user. Furthermore, the activity data 806 may relate to activities actually performed by the user, or to activities observed to be performed by or on behalf of the user.
- context data 808 is captured data that is contextual to a particular activity, application, function or location that is visited or acted upon by a user, or that is observed to be visited or acted upon by a third-party user. Context data 808 may, for example, comprise identification of a location, actors, virtual objects, time and date information, activity type information, entity type information, media attribute information, etc.
- captured data 800 may also be performed data 810 or observed data 812 .
- performed data 810 may relate to an activity actually performed by, or on behalf of, a specific user.
- Observed data 812 may relate to activities observed to be performed by, or on behalf of, a third-party user across any one of the multiple social media systems 402 .
- Modules may constitute either software modules (e.g., code embodied on a machine-readable medium or in a transmission signal) or hardware modules.
- a hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain manner.
- one or more computer systems e.g., a standalone, client or server computer system
- one or more hardware modules of a computer system e.g., a processor or a group of processors
- software e.g., an application or application portion
- a hardware module may be implemented mechanically or electronically.
- a hardware module may comprise dedicated circuitry or logic that is permanently configured (e.g., as a special-purpose processor, such as a field programmable gate array (FPGA) or an application-specific integrated circuit (ASIC)) to perform certain operations.
- a hardware module may also comprise programmable logic or circuitry (e.g., as encompassed within a general-purpose processor or other programmable processor) that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software) may be driven by cost and time considerations.
- the term “hardware module” should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired) or temporarily configured (e.g., programmed) to operate in a certain manner and/or to perform certain operations described herein.
- hardware modules are temporarily configured (e.g., programmed)
- each of the hardware modules need not be configured or instantiated at any one instance in time.
- the hardware modules comprise a general-purpose processor configured using software
- the general-purpose processor may be configured as respective different hardware modules at different times.
- Software may accordingly configure a processor, for example, to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.
- Hardware modules can provide information to, and receive information from, other hardware modules. Accordingly, the described hardware modules may be regarded as being communicatively coupled. Where multiple of such hardware modules exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times, communications between such hardware modules may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example, one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then, at a later time, access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information).
- a resource e.g., a collection of information
- processors may be temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented modules that operate to perform one or more operations or functions.
- the modules referred to herein may, in some example embodiments, comprise processor-implemented modules.
- the methods described herein may be at least partially processor-implemented. For example, at least some of the operations of a method may be performed by one or processors or processor-implemented modules. The performance of certain of the operations may be distributed among the one or more processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processor or processors may be located in a single location (e.g., within a home environment, an office environment or as a server farm), while in other embodiments the processors may be distributed across a number of locations.
- the one or more processors may also operate to support performance of the relevant operations in a “cloud computing” environment or as a “software as a service” (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., Application Program Interfaces (APIs).)
- SaaS software as a service
- Example embodiments may be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them.
- Example embodiments may be implemented using a computer program product, e.g., a computer program tangibly embodied in an information carrier, e.g., in a machine-readable medium for execution by, or to control the operation of, a data processing apparatus, e.g., a programmable processor, a computer, or multiple computers.
- a computer program can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, subroutine, or other unit suitable for use in a computing environment.
- a computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
- operations may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output.
- Method operations can also be performed by, and apparatus of example embodiments may be implemented as, special purpose logic circuitry, e.g., a field-programmable gate array (FPGA) or an application-specific integrated circuit (ASIC).
- FPGA field-programmable gate array
- ASIC application-specific integrated circuit
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- both hardware and software architectures require consideration. Specifically, it will be appreciated that the choice of whether to implement certain functionality in permanently configured hardware (e.g., an ASIC), in temporarily configured hardware (e.g., a combination of software and a programmable processor), or a combination of permanently and temporarily configured hardware may be a design choice.
- hardware e.g., machine
- software architectures that may be deployed, in various example embodiments.
- FIG. 9 is a block diagram of a machine in the example form of a computer system 900 within which instructions for causing the machine to perform any one or more of the methodologies discussed herein may be executed.
- the machine operates as a standalone device or may be connected (e.g., networked) to other machines.
- the machine may operate in the capacity of a server or a client machine in server-client network environment, or as a peer machine in a peer-to-peer (or distributed) network environment.
- the machine may be a personal computer (PC), a tablet PC, a set-top box (STB), a Personal Digital Assistant (PDA), a cellular telephone, a web appliance, a network router, switch or bridge, or any machine capable of executing instructions (sequential or otherwise) that specify actions to be taken by that machine.
- PC personal computer
- PDA Personal Digital Assistant
- STB set-top box
- WPA Personal Digital Assistant
- a cellular telephone a web appliance
- network router switch or bridge
- machine any machine capable of executing instructions (sequential or otherwise) that specify actions to be taken by that machine.
- machine shall also be taken to include any collection of machines that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein.
- the example computer system 900 includes a processor 902 (e.g., a central processing unit (CPU), a graphics processing unit (GPU) or both), a main memory 904 and a static memory 906 , which communicate with each other via a bus 908 .
- the computer system 900 may further include a video display unit 910 (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)).
- the computer system 900 also includes an alphanumeric input device 912 (e.g., a keyboard), a user interface (UI) navigation device 914 (e.g., a mouse), a disk drive unit 916 , a signal generation device 918 (e.g., a speaker) and a network interface device 920 .
- an alphanumeric input device 912 e.g., a keyboard
- UI user interface
- disk drive unit 916 e.g., a disk drive unit
- signal generation device 918 e.g., a speaker
- the disk drive unit 916 includes a machine-readable medium 922 on which is stored one or more sets of instructions 924 and data structures (e.g., software) embodying or utilized by any one or more of the methodologies or functions described herein.
- the instructions 924 may also reside, completely or at least partially, within the main memory 904 and/or within the processor 902 during execution thereof by the computer system 900 , the main memory 904 and the processor 902 also constituting machine-readable media.
- machine-readable medium 922 is shown in an example embodiment to be a single medium, the term “machine-readable medium” may include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more instructions or data structures.
- the term “machine-readable medium” shall also be taken to include any tangible medium that is capable of storing, encoding or carrying instructions for execution by the machine and that causes the machine to perform any one or more of the methodologies of the present invention, or that is capable of storing, encoding or carrying data structures utilized by or associated with such instructions.
- the term “machine-readable medium” shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media.
- machine-readable media include non-volatile memory, including by way of example semiconductor memory devices, e.g., Erasable Programmable Read-Only Memory (EPROM), Electrically Erasable Programmable Read-Only Memory (EEPROM), and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., Erasable Programmable Read-Only Memory (EPROM), Electrically Erasable Programmable Read-Only Memory (EEPROM), and flash memory devices
- EPROM Erasable Programmable Read-Only Memory
- EEPROM Electrically Erasable Programmable Read-Only Memory
- flash memory devices e.g., electrically Erasable Programmable Read-Only Memory (EEPROM), and flash memory devices
- magnetic disks such as internal hard disks and removable disks
- magneto-optical disks e.g., magneto-optical disks
- the instructions 924 may further be transmitted or received over a communications network 926 using a transmission medium.
- the instructions 924 may be transmitted using the network interface device 920 and any one of a number of well-known transfer protocols (e.g., HTTP). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), the Internet, mobile telephone networks, Plain Old Telephone (POTS) networks, and wireless data networks (e.g., WiFi and WiMax networks).
- POTS Plain Old Telephone
- the term “transmission medium” shall be taken to include any intangible medium that is capable of storing, encoding or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible media to facilitate communication of such software.
- inventive subject matter may be referred to herein, individually and/or collectively, by the term “invention” merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed.
- inventive concept merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed.
Abstract
Description
-
- A media attribute, identifying a particular
social media system 402, or a type ofsocial media system 402 to which a performed or observed action relates; - A temporal attribute, identifying time and date at which a performed or observed action/activity occur
- A user attribute identifying a user (e.g., an associated user or a further user) having performed that action;
- An entity attribute, identifying an entity (e.g., user) or environmental entity (e.g., a virtual world object) to which a particular action relates; and
- A type attribute, indicating a type of action for the observed action (e.g., receive, send, move, collect, block, etc.)
- A media attribute, identifying a particular
-
- Behavior data, relating to actions performed or observed in connection with one or more of the multiple
social media systems 402; - Content data, reflecting content generated or identified (or observed to be generated or identified) by a user within the context of one or more
social media systems 402; and - Entity data, identifying an entity that performed or observed a particular behavior, or generated or observed the generation of a particular content, or with which a user has interacted in the context of one or more social media systems.
- Behavior data, relating to actions performed or observed in connection with one or more of the multiple
-
- A
messaging module 526 that is configured to compose, transmit, receive and process messages (e.g., emails, chat messages, SMS, etc.) on behalf of a user. - A
posting module 528 that is configured to post content (e.g., photographs, advertisements, comments, music, links to internet content, etc.) to appropriate resources made available by one or more of thesocial media systems 502. - A
monitoring module 530 that is configured to automatically and/or autonomously monitor activities across one or more of thesocial media systems 502. To this end, themonitoring module 530 may provide instructions to thecapture module 440 regarding events, activities, entities and other contextual information that should be included in a “snapshot” of contextual information gathered by the capture module 400. Further, themonitoring module 530 may operate, under the direction of rules expressed in one ormore behaviors 518, to instruct a further autonomous action module of themodules 522 to perform a specific autonomous action based on data received from the capture module 400; - A searching
module 532 that is configured operationally to search one or more of thesocial media systems 502 for specific information that may be identified in one ormore behaviors 518. For example, the searchingmodule 532 may periodically search and identify a resource (e.g., an email archive, posting by friends on a social network system, or a virtual world location) in which to locate a specified communication, entity or activity.
- A
-
- Monitor a location: such a behavior may be implemented by the
monitoring module 530, and may be generic to monitoring all events pertaining to a location or function across multiplesocial media systems 502, or any specific events across one or moresocial media systems 502. To this extent, an autonomous agent may leave copies of itself in multiple locations or in multiplesocial media systems 502, if multiple locations or multiplesocial media systems 502 need to be monitored. A monitoring behavior may alert a user in case some pre-defined event occurs (e.g., a message is received, a specific avatar appears, or a lecture begins). Furthermore, theartificial intelligence module 536 may learn over time the types of events, activities or appearances that are of most interest to a particular user, and modify a monitoring behavior accordingly. The learning, by theartificial intelligence module 536, may be based on explicit training by the user, or implicit training based on an analysis of captured data regarding a user's activities. - Track entity: a tracking behavior may track activities of a further entity (e.g., a user or autonomous entity) as it performs the activities with respect to one or more
social media systems 502. For example, a particular tracking behavior may track an avatar as it traverses a virtual world and acts in it, summarize its activities and conversations, and alert a user when a specific event occurs. A further monitoring behavior may monitor activities of a particular user on a social networking system, summarize such activities and communications, and alert a further user regarding specific events. Consider for example that parents may wish to monitor activities of a child on a social networking system, such as the Facebook system. In this case, a monitoring behavior may create a summary of the activities of the child on the social networking system (e.g., on a daily, weekly or monthly basis), provide this summary to the parents, and also alert the parents to specific activities of the child (or the child's friends). - Caller behavior: In one example, a caller behavior may traverse a particular
social media system 502 to identify and extract certain information regarding thatsocial media system 502. For example, considering a social networking system, a caller may traverse the social networking system to identify postings dealing with a particular topic. Within the context of a virtual world system, a caller behavior may map part of a virtual world, and activities that have occurred within that virtual world. - Locate behavior: In an example embodiment, a location behavior may locate further users (e.g., by name or characteristics (e.g., appearance or past behaviors)), and notify a user when such further users are located.
- Categorization behavior: In an example embodiment, a categorization behavior enables a user to specify categories according to which other users of
social media systems 502 may be categorized (e.g., friendly, aggressive, family, close friends, acquaintances), as well as a scale on which these categories take on values (e.g., binary, or continuous on a 0-10 scale). In this case, theartificial intelligence module 536 may apply appropriate machine-learning techniques (e.g., decision-tree for discrete attributes or one of several regression techniques for continuous ones) to estimate categories for unlabelled users. A particular user may supply feedback, responsive to which theartificial intelligence module 536 may update a learned model.
- Monitor a location: such a behavior may be implemented by the
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/861,397 US10713667B2 (en) | 2010-01-22 | 2018-01-03 | Automated agent for social media systems |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US29765110P | 2010-01-22 | 2010-01-22 | |
US12/821,056 US9747604B2 (en) | 2010-01-22 | 2010-06-22 | Automated agent for social media systems |
US13/617,824 US9892416B2 (en) | 2010-01-22 | 2012-09-14 | Automated agent for social media systems |
US15/861,397 US10713667B2 (en) | 2010-01-22 | 2018-01-03 | Automated agent for social media systems |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/617,824 Continuation US9892416B2 (en) | 2010-01-22 | 2012-09-14 | Automated agent for social media systems |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180137519A1 US20180137519A1 (en) | 2018-05-17 |
US10713667B2 true US10713667B2 (en) | 2020-07-14 |
Family
ID=44307573
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/821,056 Expired - Fee Related US9747604B2 (en) | 2010-01-22 | 2010-06-22 | Automated agent for social media systems |
US13/617,824 Expired - Fee Related US9892416B2 (en) | 2010-01-22 | 2012-09-14 | Automated agent for social media systems |
US15/861,397 Active 2031-01-15 US10713667B2 (en) | 2010-01-22 | 2018-01-03 | Automated agent for social media systems |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/821,056 Expired - Fee Related US9747604B2 (en) | 2010-01-22 | 2010-06-22 | Automated agent for social media systems |
US13/617,824 Expired - Fee Related US9892416B2 (en) | 2010-01-22 | 2012-09-14 | Automated agent for social media systems |
Country Status (2)
Country | Link |
---|---|
US (3) | US9747604B2 (en) |
WO (1) | WO2011091116A2 (en) |
Families Citing this family (47)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9747604B2 (en) | 2010-01-22 | 2017-08-29 | Google Inc. | Automated agent for social media systems |
US20120041850A1 (en) * | 2010-08-10 | 2012-02-16 | International Business Machines, Inc. | Incentivizing content-receivers in social networks |
US20120042263A1 (en) * | 2010-08-10 | 2012-02-16 | Seymour Rapaport | Social-topical adaptive networking (stan) system allowing for cooperative inter-coupling with external social networking systems and other content sources |
US9215264B1 (en) * | 2010-08-20 | 2015-12-15 | Symantec Corporation | Techniques for monitoring secure cloud based content |
US8732108B2 (en) * | 2010-10-07 | 2014-05-20 | International Business Machines Corporation | Rule authoring for events in a grid environment |
US9369433B1 (en) * | 2011-03-18 | 2016-06-14 | Zscaler, Inc. | Cloud based social networking policy and compliance systems and methods |
US8676937B2 (en) * | 2011-05-12 | 2014-03-18 | Jeffrey Alan Rapaport | Social-topical adaptive networking (STAN) system allowing for group based contextual transaction offers and acceptances and hot topic watchdogging |
US8838572B2 (en) | 2011-09-13 | 2014-09-16 | Airtime Media, Inc. | Experience Graph |
US20130124192A1 (en) * | 2011-11-14 | 2013-05-16 | Cyber360, Inc. | Alert notifications in an online monitoring system |
US9081777B1 (en) | 2011-11-22 | 2015-07-14 | CMN, Inc. | Systems and methods for searching for media content |
US9448700B2 (en) * | 2012-02-03 | 2016-09-20 | Apple Inc. | Sharing services |
US9742860B2 (en) * | 2012-02-28 | 2017-08-22 | International Business Machines Corporation | Bi-temporal key value cache system |
US8903926B2 (en) | 2012-05-14 | 2014-12-02 | International Business Machines Corporation | Online social network handle type ahead enhancement |
WO2014025990A1 (en) | 2012-08-10 | 2014-02-13 | Nuance Communications, Inc. | Virtual agent communication for electronic devices |
US8595317B1 (en) | 2012-09-14 | 2013-11-26 | Geofeedr, Inc. | System and method for generating, accessing, and updating geofeeds |
US8639767B1 (en) * | 2012-12-07 | 2014-01-28 | Geofeedr, Inc. | System and method for generating and managing geofeed-based alerts |
US8655983B1 (en) | 2012-12-07 | 2014-02-18 | Geofeedr, Inc. | System and method for location monitoring based on organized geofeeds |
US9679300B2 (en) * | 2012-12-11 | 2017-06-13 | Nuance Communications, Inc. | Systems and methods for virtual agent recommendation for multiple persons |
EP2912567A4 (en) * | 2012-12-11 | 2016-05-18 | Nuance Communications Inc | System and methods for virtual agent recommendation for multiple persons |
JP5346417B1 (en) * | 2012-12-27 | 2013-11-20 | 楽天株式会社 | Providing device, providing method, program, and recording medium |
EP2962213A4 (en) * | 2013-02-26 | 2016-09-21 | Hewlett Packard Entpr Dev Lp | Federated social media analysis system and method thereof |
US8612533B1 (en) | 2013-03-07 | 2013-12-17 | Geofeedr, Inc. | System and method for creating and managing geofeeds |
US9307353B2 (en) | 2013-03-07 | 2016-04-05 | Geofeedia, Inc. | System and method for differentially processing a location input for content providers that use different location input formats |
US8850531B1 (en) | 2013-03-07 | 2014-09-30 | Geofeedia, Inc. | System and method for targeted messaging, workflow management, and digital rights management for geofeeds |
US9959579B2 (en) | 2013-03-12 | 2018-05-01 | Microsoft Technology Licensing, Llc | Derivation and presentation of expertise summaries and interests for users |
US9317600B2 (en) | 2013-03-15 | 2016-04-19 | Geofeedia, Inc. | View of a physical space augmented with social media content originating from a geo-location of the physical space |
US8849935B1 (en) | 2013-03-15 | 2014-09-30 | Geofeedia, Inc. | Systems and method for generating three-dimensional geofeeds, orientation-based geofeeds, and geofeeds based on ambient conditions based on content provided by social media content providers |
US8862589B2 (en) | 2013-03-15 | 2014-10-14 | Geofeedia, Inc. | System and method for predicting a geographic origin of content and accuracy of geotags related to content obtained from social media and other content providers |
US9916629B2 (en) | 2013-04-09 | 2018-03-13 | International Business Machines Corporation | Identifying one or more relevant social networks for one or more collaboration artifacts |
US20140337254A1 (en) * | 2013-05-07 | 2014-11-13 | International Business Machines Corporation | Recommending actions for social media engagements |
US20150089397A1 (en) * | 2013-09-21 | 2015-03-26 | Alex Gorod | Social media hats method and system |
US10534623B2 (en) | 2013-12-16 | 2020-01-14 | Nuance Communications, Inc. | Systems and methods for providing a virtual assistant |
US9990440B2 (en) * | 2013-12-30 | 2018-06-05 | Oath Inc. | Smart content pre-loading on client devices |
US9632996B2 (en) | 2014-05-23 | 2017-04-25 | International Business Machines Corporation | System for maintaining conversational cadence in online social relationship or network, involves providing set of fill-in messages that create appearance to another user in social network of no reduction in conversational cadence |
US20160098635A1 (en) * | 2014-10-04 | 2016-04-07 | Michael Toney | System for performing linguistic behavior analysis to detect aggressive social behavior within a specified geography |
US9485318B1 (en) | 2015-07-29 | 2016-11-01 | Geofeedia, Inc. | System and method for identifying influential social media and providing location-based alerts |
US10043221B2 (en) | 2015-11-02 | 2018-08-07 | International Business Machines Corporation | Assigning confidence levels to online profiles |
WO2017130727A1 (en) * | 2016-01-29 | 2017-08-03 | ソニー株式会社 | Information processing device and method, and program |
US10776885B2 (en) * | 2016-02-12 | 2020-09-15 | Fujitsu Limited | Mutually reinforcing ranking of social media accounts and contents |
US11297058B2 (en) | 2016-03-28 | 2022-04-05 | Zscaler, Inc. | Systems and methods using a cloud proxy for mobile device management and policy |
US10438306B2 (en) * | 2016-08-05 | 2019-10-08 | International Business Machines Corporation | Dynamic status update for offline user |
US11122094B2 (en) | 2017-07-28 | 2021-09-14 | Snap Inc. | Software application manager for messaging applications |
US10726843B2 (en) * | 2017-12-20 | 2020-07-28 | Facebook, Inc. | Methods and systems for responding to inquiries based on social graph information |
US10848443B2 (en) | 2018-07-23 | 2020-11-24 | Avaya Inc. | Chatbot socialization |
US11103795B1 (en) | 2018-10-31 | 2021-08-31 | Snap Inc. | Game drawer |
US11356392B2 (en) * | 2020-06-10 | 2022-06-07 | Snap Inc. | Messaging system including an external-resource dock and drawer |
US11140240B1 (en) * | 2020-07-14 | 2021-10-05 | Facebook, Inc. | Generating a dynamic dependent client device activity dashboard and managing contact-control privileges via managing client device interfaces |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060101508A1 (en) * | 2004-06-09 | 2006-05-11 | Taylor John M | Identity verification system |
US20080040474A1 (en) * | 2006-08-11 | 2008-02-14 | Mark Zuckerberg | Systems and methods for providing dynamically selected media content to a user of an electronic device in a social network environment |
US20080091692A1 (en) * | 2006-06-09 | 2008-04-17 | Christopher Keith | Information collection in multi-participant online communities |
US20080228821A1 (en) * | 2007-02-22 | 2008-09-18 | Mick Colin K | Method and apparatus for managing a digital inventory of multimedia files stored across a dynamic distributed network |
US20090006415A1 (en) * | 2007-06-28 | 2009-01-01 | Microsoft Corporation | Publishing work activity to social networks |
US20090144075A1 (en) | 2004-11-04 | 2009-06-04 | Manyworlds Inc. | Adaptive Social Network Management |
US20090204649A1 (en) | 2007-11-12 | 2009-08-13 | Attune Systems, Inc. | File Deduplication Using Storage Tiers |
US20090241160A1 (en) * | 2008-01-22 | 2009-09-24 | Avaya Technology Llc | Open cable application platform set-top box (stb) personal profiles and communications applications |
US20090241035A1 (en) | 2006-08-16 | 2009-09-24 | Tagged, Inc. | User created tags for online social networking |
US20100023506A1 (en) | 2008-07-22 | 2010-01-28 | Yahoo! Inc. | Augmenting online content with additional content relevant to user interests |
US20110145050A1 (en) * | 2009-12-15 | 2011-06-16 | Patricia Jane Gross | Activity-Based Compatibility Testing For Preliminarily Matched Users Via Interactive Social Media |
WO2011091116A2 (en) | 2010-01-22 | 2011-07-28 | Cafebots, Inc. | Automated agent for social media systems |
-
2010
- 2010-06-22 US US12/821,056 patent/US9747604B2/en not_active Expired - Fee Related
-
2011
- 2011-01-20 WO PCT/US2011/021829 patent/WO2011091116A2/en active Application Filing
-
2012
- 2012-09-14 US US13/617,824 patent/US9892416B2/en not_active Expired - Fee Related
-
2018
- 2018-01-03 US US15/861,397 patent/US10713667B2/en active Active
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060101508A1 (en) * | 2004-06-09 | 2006-05-11 | Taylor John M | Identity verification system |
US20090144075A1 (en) | 2004-11-04 | 2009-06-04 | Manyworlds Inc. | Adaptive Social Network Management |
US20080091692A1 (en) * | 2006-06-09 | 2008-04-17 | Christopher Keith | Information collection in multi-participant online communities |
US20080040474A1 (en) * | 2006-08-11 | 2008-02-14 | Mark Zuckerberg | Systems and methods for providing dynamically selected media content to a user of an electronic device in a social network environment |
US20090241035A1 (en) | 2006-08-16 | 2009-09-24 | Tagged, Inc. | User created tags for online social networking |
US20080228821A1 (en) * | 2007-02-22 | 2008-09-18 | Mick Colin K | Method and apparatus for managing a digital inventory of multimedia files stored across a dynamic distributed network |
US20090006415A1 (en) * | 2007-06-28 | 2009-01-01 | Microsoft Corporation | Publishing work activity to social networks |
US20090204649A1 (en) | 2007-11-12 | 2009-08-13 | Attune Systems, Inc. | File Deduplication Using Storage Tiers |
US20090241160A1 (en) * | 2008-01-22 | 2009-09-24 | Avaya Technology Llc | Open cable application platform set-top box (stb) personal profiles and communications applications |
US20100023506A1 (en) | 2008-07-22 | 2010-01-28 | Yahoo! Inc. | Augmenting online content with additional content relevant to user interests |
US20110145050A1 (en) * | 2009-12-15 | 2011-06-16 | Patricia Jane Gross | Activity-Based Compatibility Testing For Preliminarily Matched Users Via Interactive Social Media |
WO2011091116A2 (en) | 2010-01-22 | 2011-07-28 | Cafebots, Inc. | Automated agent for social media systems |
Non-Patent Citations (21)
Title |
---|
Anastassakis et al., "Virtual Agent Societies with the mVITAL Intelligent Agent System", IVA 2001, LNAI 2190, Springer-Verlag Berlin Heidelberg, 2001, pp. 112-125. |
Collectedin, "Welcome to Collectedin.com!" Collectedin Community-Home, retrieved from http://collectedin.com/ on Mar. 24, 2010, 1 pg. |
Collectedin, "Welcome to Collectedin.com!" Collectedin Community—Home, retrieved from http://collectedin.com/ on Mar. 24, 2010, 1 pg. |
Duncan, "Als May Call Virtual Worlds Home," retrieved from http://www.digitaltrends.com/gaming/ais-may-callvirtual-worlds-home.html Jan. 18, 2010, article dated Sep. 13, 2007, 4 pgs. |
Evil Limited, "Goal Oriented Intelligent Agents Evolving in Virtual Worlds," Evil Limited-Research Notes, 2007, pp. 1-5. |
Evil Limited, "Goal Oriented Intelligent Agents Evolving in Virtual Worlds," Evil Limited—Research Notes, 2007, pp. 1-5. |
Friedman et al., "Spatial Social Behavior in Second Life," Intelligent Virtual Agents IVA 2007, Lecture Notes in Computer Science, vol. 4722, ,Sep. 4, 2007, pp. 252-263. |
Goertzel et al., "An Inferential Dynamics Approach to Personality and Emotion Driven Behavior Determination for Virtual Animals," In Proc. of Catz and Dogz 2008 (AISB) Symposium, Apr. 1-4, 2008, 6 pgs. |
Goertzel et al., "The Collective Pet Unconscious: Balancing Intelligence and Individuality in Populations of Learning Enabled Virtual Pets," CHI 2009, Apr. 4-9, 2009), 4 pgs. |
Hattori et al., "Socialware: Multiagent Systems for Supporting Network Communities," Association for Computing Machinery, Inc., Kyoto, Japan, Mar. 1999, pp. 1-5. |
International Search Report and Written Opinion for PCT/US2011/021829, dated Sep. 28, 2011, 9 pgs. |
Iw, "Intelligent Avatars," retrieved from http://inteliwise.blogspot.com/2008/01/intelligent-avatar-insecond-life.html on Jan. 18, 2010, article dated Jan. 23, 2008, 3 pgs. |
Lerman, "Social Networks and Social Information Filtering on Digg," arXiv:cs/0612046v1, Dec. 7, 2006, 8 pgs. |
Ley, "Intelligent Virtual Agents," Computer Science Bibliography retrieved from http://informatik.unitrier.de/˜ley/db/conf/iva/index/.html on Jan. 18, 2010, 2 pgs. |
Partsakoulakis et al., "Agent-Enhanced Collaborative Activity in Organized Settings," International Journal of Cooperative Information Systems, 2006, pp. 1-36. |
Partsakoulakis et al., "Representative Agents for Reliable Participation in Social Contexts," CEAS ECAI 2004 Workshop, Jan. 2004, 7 pgs. |
Pash, "Three Social Media Aggregators That Bring It All Together," PC World, Aug. 3, 2009, 5 pgs. |
Physorg.com, "Bringing Second Life to Life: Researchers Create Character with Reasoning Abilities of a Child," retrieved from http://www.physorg.com/news124368610.html on Jan. 18, 2010, 12 pgs. |
Sawamoto et al., "Evaluation of Multi-Agent Model for Community Formation in Network Society," AINA Archive: Proceedings of the 18th International Conference on Advanced Information Networking and Applications-vol. 2, 2004, p. 131. |
Sawamoto et al., "Evaluation of Multi-Agent Model for Community Formation in Network Society," AINA Archive: Proceedings of the 18th International Conference on Advanced Information Networking and Applications—vol. 2, 2004, p. 131. |
Silverman, "Will artificial intelligence invade Second Life?" HowStuffWorks.com, retrieved from http://electronics.howstuffworks.com/artificial-intelligence-secondlife.htm on Jan. 18, 2010, dated Sep. 21, 2007, 3 pgs. |
Also Published As
Publication number | Publication date |
---|---|
US9892416B2 (en) | 2018-02-13 |
WO2011091116A3 (en) | 2011-11-24 |
US20130013713A1 (en) | 2013-01-10 |
US20110184886A1 (en) | 2011-07-28 |
WO2011091116A2 (en) | 2011-07-28 |
US9747604B2 (en) | 2017-08-29 |
US20180137519A1 (en) | 2018-05-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10713667B2 (en) | Automated agent for social media systems | |
US10735796B2 (en) | Contextual based information aggregation system | |
US9076125B2 (en) | Visualization of participant relationships and sentiment for electronic messaging | |
US11601294B2 (en) | Systems and methods for structuring information in a collaboration environment | |
US20190340554A1 (en) | Engagement levels and roles in projects | |
US11442950B2 (en) | Dynamic presentation of searchable contextual actions and data | |
JP5736477B2 (en) | System and method for selecting relevant users for introduction to a user in an online environment | |
US9049259B2 (en) | System and method for dynamically providing visual action or activity news feed | |
US10970349B1 (en) | Workflow relationship management and contextualization | |
US20220309037A1 (en) | Dynamic presentation of searchable contextual actions and data | |
US20110264531A1 (en) | Watching a user's online world | |
US11409820B1 (en) | Workflow relationship management and contextualization | |
US9787489B2 (en) | Identifying an ideal user network | |
Bozzon et al. | Modeling crowdsourcing scenarios in socially-enabled human computation applications | |
US11314692B1 (en) | Workflow relationship management and contextualization | |
WO2023278089A1 (en) | Intelligent processing and presentation of user-connection data on a computing device | |
US10440133B2 (en) | Inferring a social connection | |
US20110264525A1 (en) | Searching a user's online world | |
WO2017165148A1 (en) | Computerized content recommendation based on container interactions | |
US20160350665A1 (en) | Selecting content to surface via an inferred social connection | |
Burlutskiy | Prediction of user behaviour on the Web. |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:KATANGO, INC.;REEL/FRAME:044829/0974Effective date: 20120202Owner name: CAFEBOTS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:SHOHAM, YOAV;REEL/FRAME:044829/0879Effective date: 20110324Owner name: KATANGO, INC., CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:CAFEBOTS, INC.;REEL/FRAME:045246/0730Effective date: 20110509Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:045245/0390Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
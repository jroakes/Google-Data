CN112243517A - Conditional interpretation of a single style definition identifier on a resource - Google Patents
Conditional interpretation of a single style definition identifier on a resource Download PDFInfo
- Publication number
- CN112243517A CN112243517A CN201980009062.XA CN201980009062A CN112243517A CN 112243517 A CN112243517 A CN 112243517A CN 201980009062 A CN201980009062 A CN 201980009062A CN 112243517 A CN112243517 A CN 112243517A
- Authority
- CN
- China
- Prior art keywords
- party content
- content
- style
- rule
- party
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 30
- 238000012545 processing Methods 0.000 claims description 26
- 230000000694 effects Effects 0.000 claims description 24
- 230000004044 response Effects 0.000 claims description 23
- 238000004590 computer program Methods 0.000 abstract description 14
- 238000013515 script Methods 0.000 description 15
- 238000010586 diagram Methods 0.000 description 12
- 230000008569 process Effects 0.000 description 11
- 238000004891 communication Methods 0.000 description 6
- 239000003795 chemical substances by application Substances 0.000 description 4
- 230000003993 interaction Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 230000009471 action Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000009877 rendering Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000010801 machine learning Methods 0.000 description 2
- 238000010295 mobile communication Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 238000013473 artificial intelligence Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000001143 conditioned effect Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000002708 enhancing effect Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 239000000463 material Substances 0.000 description 1
- 230000005012 migration Effects 0.000 description 1
- 238000013508 migration Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
- G06F40/117—Tagging; Marking up; Designating a block; Setting of attributes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
- G06F40/106—Display of layout of documents; Previewing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
- G06F40/109—Font handling; Temporal or kinetic typography
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/131—Fragmentation of text files, e.g. creating reusable text-blocks; Linking to fragments, e.g. using XInclude; Namespaces
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q50/00—Systems or methods specially adapted for specific business sectors, e.g. utilities or tourism
- G06Q50/10—Services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/53—Network services using third party service providers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/56—Provisioning of proxy services
- H04L67/565—Conversion or adaptation of application format or content
Abstract
A method, system, and computer program encoded on a computer storage medium relate to conditionally interpreting a single style definition within the same page. The method includes receiving a request to present third-party content in a third-party content chunk on a content page provided by a publisher. A single style identifier and one or more attributes are obtained from a content page. Subsequently, a third-party content item is selected from the content source. A first rule is identified from a plurality of rules that specify different styles for a respective plurality of third-party content blocks using a single style identifier and one or more attributes, where the first rule specifies a set of style parameters to select content for presentation in the third-party content blocks. The third-party content item is formatted according to the style parameters of the first rule and provided for presentation within the third-party content block.
Description
Background
This specification relates to data processing and conditionally interpreting a single style definition within the same page.
A user may access content (e.g., news, music, social media) on a content page provided by a publisher (e.g., a search engine, a social media platform, a news platform, a data aggregator platform, etc.). The content on the content page may be provided by the publisher or by one or more content sources that store third-party content. The third-party content is provided for presentation in a third-party content block on a publisher's content page. A publisher may control the type and nature of its own content presented on a content page, but it typically cannot control the type and nature of third party content that is provided for presentation in third party content blocks. For example, the access restrictions may prevent the publisher from modifying the third-party content presented in the third-party content block.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the following operations: receiving a request to present third-party content in a third-party content chunk on a content page provided by a publisher, wherein the third-party content is provided by an entity different from the publisher; obtaining a single style identifier and one or more attributes from a content page; after receiving the request, selecting a third-party content item from a content source storing third-party content; identifying, using the single style identifier and the one or more attributes, a first rule from a plurality of rules that specify different styles for a corresponding plurality of third-party content blocks on the content page, the first rule specifying a set of style parameters to select content selections for presentation in the third-party content blocks; formatting the third-party content item according to a set of style parameters specified in the first rule; and providing the third-party content item for presentation within a third-party content block of the content page. Other embodiments of this aspect include corresponding systems, apparatus, devices, and computer programs configured to perform the actions of the methods. The computer program (e.g., instructions) may be encoded on a computer storage device. These and other embodiments may each optionally include one or more of the following features.
In some implementations, the one or more attributes can include a user agent, a browser screen size, a third-party content chunk name, or a device type.
These methods may include the following operations: modifying a style parameter set specified in a first rule; and wherein formatting the third party content item according to the set of style parameters specified in the first rule comprises formatting the third party content item using the modified set of style parameters specified in the first rule in response to receiving the single style identifier.
The method may include the operations of: determining an amount of user activity of a third-party content item presented within a third-party content block; modifying a style parameter set specified in the first rule in response to an amount of user activity; formatting the third party content item using the modified set of style parameters specified in the first rule in response to receiving the single style identifier; and after formatting the third-party content item using the modified set of style parameters, providing the third-party content item for presentation within a third-party content block of the content page.
The method may include the operations of: obtaining one or more style parameter sets from a content page, wherein each style parameter set specifies a manner in which content is to be formatted for presentation in one or more third-party content blocks; for each of one or more style parameter sets, generating a rule including the style parameter set; and storing each generated rule as a rule for a single style identifier with the plurality of rules.
In some implementations, the style parameter set specified in the first rule may be selected by the publisher.
In some embodiments, the style parameters include at least a maximum number of characters, font color, font type, font size, orientation, or bounding box applicable to the third party content.
In some implementations, the third-party content chunk includes an embeddable display element embedded in the content page.
Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. For example, the innovations described in this specification provide publishers with a convenient and flexible way to specify and/or modify styles (e.g., formatting information) for different third-party content blocks on a publisher's content page without modifying the content page. Traditionally, the publisher had to write code (e.g.,
The innovations described in this specification also enable the operator of the publisher's content page to modify the style information of third-party content blocks on the content page with little or no encoding knowledge. As described herein, the content management system stores different types of style parameters (e.g., font size, color, border, orientation, etc.) and provides a front-end interface with user input fields (e.g., text boxes, drop-down menus, check boxes, etc.) in which an operator can specify or select desired values for these different style parameters. Using the operator's selections, the content management system can generate appropriate code to format the third-party content item and present the formatted content item within an appropriate third-party content block on the content page.
The innovations described in this specification further enable the use of a single style identifier to specify multiple different style rules for different pieces of content and/or devices. Prior art solutions that include a single style identifier within a content page associate only that style identifier with a single set of style parameters. As a result, these prior art solutions generate content for presentation in all content blocks and devices using the same set of style parameters. The innovations described in this specification utilize a single style identifier, but unlike prior art solutions, the style identifier corresponds to different style parameters for different third-party content blocks and devices. This allows the publisher the flexibility to provide different styles/formats for different third party content blocks and different devices. For example, a single style identifier may be embedded in a content page, and the single style identifier may be dynamically interpreted at each presentation of the content page to determine and/or modify the visual appearance of third-party content presented on the page according to the context of the particular presentation of the content page. More specifically, a single style identifier initiates a process by which the context of the presentation of the content page is determined and used to conditionally select a particular style to be used for the content presented in each of the different third-party content blocks defined in the content page. This provides a more flexible style solution relative to conventional systems and allows the publisher of the content page to modify the manner in which third-party content is displayed on the content page without accessing the third-party content to be rendered.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 is a block diagram of an example environment in which content is distributed for presentation.
FIG. 2 is a block diagram illustrating operations performed by the content management system in formatting third-party content items and providing those items for presentation in third-party content blocks on a publisher's content page.
FIG. 3 is a block diagram that illustrates a content management system formatting third-party content items differently based on the context in which the content is presented and the rules specified by the publisher.
FIG. 4 is a flow diagram of an example process for formatting third-party content items and presenting the items for presentation in third-party content blocks on a publisher's content page.
FIG. 5 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
The present specification relates to enhancing a system that supports third-party content styles. As discussed in more detail below, different styles (or formatting) may be specified by a publisher of a content page and applied to third-party content selected for presentation in different third-party content blocks within the content page.
The publisher's content page may include one or more third-party content blocks in which third-party content is presented. These third-party content blocks are typically populated as the content page is presented to the user, such that each presentation of the content page may include a different combination of third-party content. As described further below, and in detail throughout this specification, publishers can select different style rules for presenting content in different third party content blocks. As a result, when a user accesses a publisher's content page, the third-party content presented in these third-party content blocks is formatted differently according to the rules specified by the publisher and the context in which the content is presented. As used throughout this document, various attributes are used to define the context in which content is being presented, including one or more of the type of device that is presenting the content, which third-party piece of content is to present the content, the time of day the content is being presented, the geographic location of the device that is presenting the content, attributes of the user that is being presented the content, the type of browser being used to present the content, or other suitable attributes.
The context in which the content is presented may be determined based on information gathered from the request for third-party content. As described in more detail below, when a user accesses a publisher's content page on a user device, a script on the content page executes and generates a request for third-party content for a third-party piece of content. The script may also collect a style identifier and one or more attributes (e.g., device type, user agent type, screen size, etc.) included in the content page. The style identifier and the one or more attributes are typically included in the request. The user device sends the request to the content management system.
Upon receiving the request, the content management system selects one or more third-party content items from one or more content sources that store third-party content.
The content management system also identifies an appropriate style rule using a data structure storing style rules for the particular content page to format the third content item. In particular, the data structure may include style identifiers associated with different content pages, and for each style identifier, the data structure may include one or more style rules selected by the publisher (or provided by default by the content management system) and a corresponding set of style parameters (e.g., font color, font size, orientation, border, etc.). According to the data structure, the content management system identifies a style rule corresponding to a style identifier included in the user request. From among these style rules associated with the style identifier, the content management system identifies one or more style rules based on one or more attributes included in the request received from the user device. For example, the attributes in the user request may include the names of third-party content blocks (e.g., Top Block (Top) and Bottom Block (Bottom Block)) defined in the content page, and the content management system may use this information to find style rules that apply to content blocks having the same or similar names (as described further below).
The content management system formats the selected third-party content items using the style parameters associated with the identified style rules, and then provides these formatted third-party content items for presentation on the publisher's content page. In the above example, the content management system may provide the top block with embeddable display elements formatted using one style parameter set (as described further below), and the bottom block with separate embedded display elements using a separate style parameter set. As such, a single style identifier embedded in a page may be used to apply different types of styles/formats depending on the third-party content block that is to present the content selected for presentation, without requiring different style definitions to be embedded in the content page for each different third-party content block.
These features and additional features are described in more detail below with reference to fig. 1-4. For the sake of brevity, third party content chunks are also referred to as content chunks.
FIG. 1 is a block diagram of an example environment 100 in which content is distributed for presentation. The example environment 100 includes a network 108, such as a Local Area Network (LAN), Wide Area Network (WAN), the internet, or a combination thereof. Network 108 connects user device 102, content source 104, publisher 106, and content management system 110. The example environment 100 may include many different user devices 102, content sources 104, publishers 106, and content management systems 110.
The user device 102 is an electronic device capable of requesting and receiving content over the network 108. Example user devices 102 include personal computers, mobile communication devices, digital assistant devices, and other devices capable of sending and receiving data over the network 108. The user device 102 typically includes a user application, such as a web browser, to facilitate sending and receiving data over the network 108, but a native application executed by the user device 102 may also facilitate sending and receiving content over the network 108. As used in this specification, content refers to various types of web-based and/or otherwise presented information, such as articles, discussion threads, reports, analytics, financial statements, music, video, graphics, search results, web page listings, information sources (e.g., RSS sources), television broadcasts, radio broadcasts, printed publications, and so forth.
The CMS 110 is a computing platform that may include one or more backend servers that provide various services to publishers 106 and content sources 104. The CMS 110 stores, manages, and/or provides content and other types of material that is stored on a server and retrieved programmatically. The CMS 110 may make these services available to the publishers 106 and content sources 104 through one or more front-end interfaces. In some examples, the front-end interface may be configured as a web application that provides users with access to features provided by the CMS 110.
The CMS 110 selects third party content in response to a content request received from a user device 102. In some implementations, when a user of the user device 102 accesses a content page provided by the publisher 106, a script on the content page may execute to request third party content from the CMS 110. In some implementations, the user of the user device 102 can request third party content, for example, using a search box provided by a search engine on the content page of the publisher 106.
Upon receiving a request for third party content from the user device 102, the CMS 110 selects content in response to the request. In some implementations, the CMS 110 identifies relevant third-party content based on the content on the publisher's 106 content page. For example, the CMS 110 may receive, for example, a URL (uniform resource locator) of a content page from the user device 102 and identify indexed content keywords associated with the URL. The CMS 110 may cross-reference the indexed content keywords against a list including content stored in the content source 104 and keywords associated with each content item on the list. As another example, the CMS 110 may use content keywords and/or other content in the content page to identify third-party content stored by one or more content sources 104. The CMS 110 identifies content by matching content keywords in the publisher's 106 content page with keywords/indexes maintained by the CMS 110 that are associated with third party content stored in a list. As yet another example, the third-party content request received from the user device 102 may specifically identify the type of third-party content, for example, by providing certain keywords that the CMS 110 may cross-reference against the aforementioned list of references to identify appropriate content stored by one or more content sources 104.
Once the CMS 110 identifies the appropriate third-party content items, it requests the content from the appropriate content sources 104 that store the content items. In response, the content source 104 provides one or more third-party content items. As shown in FIG. 1, the CMS 110 is separate from the content sources 104.
Upon receiving these third-party content items from the content sources 104, the CMS 110 may format each of these content items using one or more sets of style parameters, as further described with reference to fig. 2.
As shown in FIG. 1, the content sources 104 may be data processing devices separate from the CMS 110 and each may be managed/maintained by a different entity. In other implementations, the CMS 110 may include one or more content sources 104, all of which may be managed/maintained by the same entity. In such an implementation, when the CMS 110 selects the appropriate third-party content items, it retrieves these third-party content items from its own content sources 104 (rather than having to request content from a separate content source 104 over the network 108).
In some implementations, the CMS 110 may identify the third-party content and the style parameters to be applied to the third-party content and then simply send a response to the user device 102 conveying this information to the user device 102. For example, the CMS 110 may generate a reply to the content request that includes one or more URLs at which the identified third-party content may be obtained and information identifying the style parameters to be applied to each third-party content. When the user device 102 receives the reply, the user device 102 may initiate a request to obtain the identified third-party content from one or more URLs and apply the style parameters to the piece of content as indicated. The following description relates to the CMS 110 performing formatting according to style parameters, but it should be understood that such formatting may be performed at the user device 102.
FIG. 2 is a block diagram illustrating operations performed by the content management system 110 in formatting third-party content items and providing those items for presentation in third-party content blocks on a publisher's content page.
As shown in FIG. 2, a user of the user device 102 accesses a content page 220 provided by the publisher 106 via the network 108. The content page 220 includes content provided by the publisher 106, which is presented in the publisher content blocks 222-A and 222-B, and third party content, which is presented in the third party content blocks 224-A and 224-B.
In some implementations, the content in the third-party content blocks 224-A and 224-B may be provided using embeddable display elements, such as HTML (Hypertext Markup Language) I-frames (inline frames). As used in this specification, an embeddable display element refers to, for example, any element that may be embedded in a location (e.g., the content page 220 of the publisher 106) that allows third-party content from an external source (e.g., the content source 104) to be displayed in the location. As described below, the CMS 110 may provide third party content using the embeddable display element for display on the content page 220 with the publisher's content.
The third-party content presented within the third-party content blocks 224-A and 224-B may include any type of media, including news, video, audio, advertisements, and the like. The content presented in these third-party content blocks 224-A and 224-B is provided by a third party (i.e., an entity other than the publisher 106), and the publisher 106 does not control the type of content presented in these blocks. However, as described below, the publisher 106 may control the style/format of the third-party content within these blocks.
In some implementations, when a user accesses the content page 220 on the user device 102, the script on the content page 220 generates a request 202 for third-party content for the third-party content blocks 224-A and 224-B. The user device 102 sends a request 202 and the CMS 110 receives the request 202.
In some implementations, the script identifies the style identifier 226 and one or more attributes of the content page 220 and/or the user device 102 and includes this information in the request 202. In some implementations, the script collects style identifiers 226 included within the content page 220 (e.g., included in the metadata of the content page 220). In some implementations, the script also identifies one or more attributes (also referred to herein as signals) from the content page, an application rendering the content page (e.g., a browser), or from other aspects of the environment (e.g., data collected from the requested network connection, such as an IP address). As used in this specification, attributes or signals provide information about user activity on a user environment and/or application. For example, the script may collect attributes such as a user agent or application (e.g., browser, native application), screen size, third-party content container or block (e.g., a portion of a page that has been identified in a page structure for rendering third-party content), device type (e.g., mobile device or desktop), and geographic location information (e.g., IP address, language settings, etc.).
The script includes a style identifier and an identified property within the request 202, each of which may be included as a separate tag in the request. For example, the style identifier may be included within a "style ID" tag included in the request, and the Third Party name may be included in a "Third Block (Third Party Block)" tag included in the request.
In some implementations, upon receiving the request 202, the CMS 110 obtains the style identifier and one or more attributes included within the request 202. The CMS 110 obtains the information by searching for tags within the request that correspond to the information and extracting the information from the request. For example, if the style identifier is included within the request 202 using a "style ID" tag, the CMS 110 searches the request 202 for the "style ID" tag to obtain a corresponding style identifier. Similarly, if the request 202 includes a third party name within the "third block" tag, the CMS 110 may search the request 202 for the tag to identify the corresponding third block name.
Alternatively, in some embodiments, the script does not collect or include the style identifier and one or more attributes in the request 202. In such an implementation, upon receiving the request 202, the CMS 110 may send another request to the user device 102 to provide the style identifier and the one or more attributes. In response, the same script or another script collects this information (in the same manner as described above) and provides it to the CMS 110 in a separate message.
Upon receiving the request 202 (and in some cases, the request 202 includes a style identifier and an additional message for one or more attributes), the CMS 110 selects an appropriate third-party content item to provide in response to the request, as described above with reference to FIG. 1. Thus, as described above with reference to FIG. 1, the CMS 110 may identify appropriate third-party content and request the content by sending one or more content requests 204 to one or more content sources 104 that store the content. In response, these content sources 104 provide the requested third-party content items to the CMS 110. Alternatively, as described above with reference to FIG. 1, the CMS 110 retrieves the content from one or more content sources 104 included within the CMS 110.
In addition to retrieving the appropriate third-party content items from the content sources 104, the CMS 110 also identifies a set of style parameters that specify the formatting for each content item, as described further below.
The CMS 110 includes a data structure 208, the data structure 208 storing a style identifier and corresponding rules including a set of style parameters for different conditions. As shown in data structure 208, the style ID 10 includes three rules: a mobile device, a top block, and a bottom block. As used in this specification, a style identifier or style ID is an identifier present in a content page that identifies a set of rules that specify how content is formatted. The style identifier may be represented using, for example, numbers, letters, and/or punctuation marks. Each rule of a particular style identifier includes a set (e.g., one or more) of style parameters. As used in this specification, a style parameter is a formatting feature that describes a particular formatting type of content on a content page. Examples of style parameters include size (e.g., maximum number of characters), shape, color, font, border, and presentation style (e.g., audio, video, graphics, text, etc.). As shown in data structure 208, each rule associated with style ID 10 includes a style parameter set, such as font color, font type, font size, orientation, and border.
For each style identifier, the publisher 106 may use the publisher-specific front end interface of the CMS 110 to select rules and corresponding style parameters. The content management system stores different types of style parameters (e.g., font size, font type, font color, borders, orientation, etc.) and provides a front-end interface with user input fields (e.g., text boxes, drop-down menus, check boxes, etc.) for which a publisher service provider or another operator can specify or select desired values. Using the operator's selections, the content management system may generate appropriate codes, for example,content management system 110 may also generate appropriate code to format third-party content for presentation within applications running on different desktop and mobile devices other than network technologies.
In some implementations, the rules specified by the publisher operate as conditions for applying one or more style parameter sets. For example, an operator of publisher 106 may use a front end interface to generate rules that specify style parameters for formatting content on a mobile device. In this example, any style parameters specified within the rule are only applied when the context of the content presentation (e.g., specified in the request received from the user device) indicates that the content is to be presented on the mobile device.
If the condition of the rule is not satisfied, the style parameter of the rule will not be applied. Continuing with the example above, if the request specifies that the device type that content is to be rendered is a desktop, rather than a mobile device, then the style parameters specified for the mobile device rules are not applied. However, if the style identifier also has a different set of style parameters, conditioned on the device type being "desktop", then the different set of style parameters will be eligible to format the selected third party content.
Within each device type (or other context condition) style definition, the publisher 106 may also use the front-end interface to generate separate formatting rules for each third-party content block of the content page. For example, if a content page includes two blocks of content identified in the page structure as a "bottom block" and a "top block," the publisher may create separate rules for each block. These generated rules may then be stored in a data structure 208 maintained by the CMS 110. In this manner, the publisher 106 may specify different formats for each of these content chunks.
In some implementations, each piece of content may have a different set of style parameters defined for each device type or any other conditional attribute upon which the style of the third party content depends. For example, the "bottom block" discussed above may have one pattern parameter set defined for use when the device type is "mobile device" and a completely different (or partially modified) pattern parameter set defined for use when the device type is "desktop". Similarly, the style parameters may be defined differently based on each geographic area, each time of day, each user type, or any other context. In fact, a number of different conditions (such as device type and geographical area) may be used to decide (condition) the application of a particular style parameter set, so that the publisher 106 may create a number of different condition (conditional) style parameter sets that may be applied depending on the context of the content presentation. Further, all of these different conditional style parameters may be applied using a single style identifier included in the page, and the conditional style parameters may be changed at any time to adjust the format of the third party content without changing the code of the content page.
In some implementations, the CMS 110 may include its own set of default rules and corresponding style parameters. The publisher 106 may use, modify, add, and/or delete these rules using the front end interface of the CMS 110.
As described above, the CMS 110 receives the style identifier and one or more attributes along with the request 202. The CMS 110 uses the style identifier and the one or more attributes to identify the appropriate rules and corresponding style parameters from the data structure 208. The CMS 110 first uses the style identifier to identify a set of rules for a particular content page provided by the publisher 106. For example, if the request 202 includes a style ID of 10, the CMS 110 searches the data structure 208 for the style identifier. Upon finding a match to the style ID 10 in the data structure 208, the CMS 110 identifies the three rules (mobile, top, bottom) for that style identifier shown in the data structure 208.
From these rules, the CMS 110 identifies one or more rules using one or more attributes included in the request 202. In some implementations, the CMS 110 identifies the rule by finding a match between the name of the rule and one or more attributes. For example, one of the attributes extracted from the page structure may be the name of the third-party content block, in this example the top block. The CMS 110 searches for and identifies the "top chunk" in the identified rules. In some implementations, the CMS 110 may use a single attribute or a combination of attributes to make the inference, which may then be compared to the identified rules. The CMS 110 may include a rules-based engine that may use one or more attributes to draw these types of inferences. Alternatively, the CMS 110 may make such inferences using artificial intelligence techniques (such as, for example, a supervised or unsupervised machine learning model trained using a set of inferences for multiple sets of one or more attributes). For example, using rule-based techniques or machine learning techniques, the CMS 110 may determine that a 5-inch screen using a particular browser implies that the user device 102 is a mobile device. The CMS 110 searches for and identifies "mobile devices" in the rules of the style ID 10 in the data structure 208.
The CMS 110 obtains the set of style parameters associated with each identified rule and uses these style parameters to format the received third party content item. For example, if the identified rule is a bottom block, the CMS 110 formats the data using the set of style parameters corresponding to the rule (in the data structure 208). Thus, in this example, the CMS 110 formats the third-party content item in a landscape, content block font size of 12, red border. As described above, the CMS 110 may also send instructions to the user device 102 that cause the user device 102 to format the third-party content according to the appropriate style parameters.
The CMS 110 then provides the formatted content for presentation in the appropriate third-party content blocks 224-A and 224-B of the content page 220. In some implementations, the CMS 110 provides the formatted content to the user device 102 as an embeddable display element. For example, if the CMS 110 formats the received third-party content using the style parameters corresponding to the bottom block rule (in the data structure 208), it then provides the formatted third-party content item 210 for presentation as an embeddable display element at a location on the content page 220 corresponding to the bottom block.
In some implementations, the publisher 106 may change the set of style parameters corresponding to an existing rule. For example, for the top block rule in the data structure 208, the publisher 106 may modify the font size from 8 to 12 using the front end interface of the CMS 110. As a result, when the user subsequently accesses the content page 220, the CMS 110 provides the third-party content block 224-B with an embeddable display element corresponding to the top block rule, where the content is formatted according to the updated rule.
In some implementations, the CMS 110 provides a front-end interface that allows publishers 106 to monitor user activity with respect to particular third-party pieces of content on the content page 220. As used in this specification, user activity refers to any interaction between a user and a piece of third-party content. Examples of user activities include a user click or finger touch on a piece of third-party content and a viewing time of the piece of third-party content. In response to user activity, the publisher 106 may modify the style parameter set of the rule corresponding to the particular third-party content block (as described above). For example, if the user activity is not as high as the publisher 106 desires, the publisher 106 may alter the style parameter to evaluate whether this affects the user activity. Thus, when the user subsequently accesses the content page 220, the CMS 110 formats the third-party content according to the updated style parameters, and then presents the formatted content in the embeddable display element provided to the user device 102 that corresponds to the particular third-party content chunk. In this manner, the publisher 106 may quickly modify the style of a particular piece of content and discern the impact of user activity based on such modifications. This allows the publisher to customize the style of the content chunk to maximize the user activity of the chunk.
In some implementations, as described in this specification, the CMS 110 may facilitate migration of style parameters specified within legacy (legacy) content pages to rules and corresponding style parameters stored by the CMS 110. Typically, content pages include one or more styles included within the code of the pages, e.g.,as reflecting various style parameters (e.g. size, font, color, number of advertisements, display format, etc.)CMS 110 requests embedded code within the page, which is collected from scripts executing on the content page and provided to the CMS 110. The CMS 110 parses the code to identify the style parameters and corresponding third party content blocks to which each style parameter set in the code relates. For example, the CMS 110 may identify the code portions corresponding to particular third-party content blocks by searching the names of these blocks, which may be provided with the request 202. For each piece of code corresponding to a particular piece of content, the CMS 110 searches the code for tags corresponding to different known style parameters (e.g., font, color, size, table, etc.). The CMS 110 generates a separate rule for each style parameter set associated with a particular content block. The CMS 110 stores each of these individual rules and the corresponding style parameter set and style identifier of the content page 220.
The style identifier for the content page may already be present on the content page, in which case it may be provided to the CMS 110 along with the code (as described above). In some cases, the legacy content page may not include a style identifier. In this case, the CMS 110 generates a style identifier for the content page and then provides the style identifier to the publishers 106 of the content page for inclusion in the content page.
Figure 3 is a block diagram that illustrates the CMS 110 formatting third party content items differently based on the context in which the content is presented and the rules specified by the publisher.
As shown in fig. 3, the CMS 110 may receive requests for third party content (similar to the request 202 described above with reference to fig. 2) from different types of user devices 102, such as a desktop 302 and a mobile device 304. Each content request is generated when the users of these respective devices access a content page 306 (e.g., the same content page).
Each request also includes a style identifier for the content page being accessed by the user of the device, as well as attributes defining the context in which the requested third-party content will be presented (as described above with reference to FIG. 2). In the example block diagram of fig. 3, the request from desktop 302 includes style identifier 10. The request from desktop 302 also includes attributes such as, for example, a device type attribute specifying that the user is using a desktop device and a third party content chunk name (CB1, CB2, CB3) specifying the name of the content chunk on the page. Similarly, the request from the mobile device 304 includes the style identifier 10, i.e., the same style identifier received in the request from the desktop 302. The request from the mobile device 304 also includes attributes such as, for example, a device type attribute specifying that the user is using the mobile device and a third party content chunk name (CB1, CB2, CB3) specifying the name of the content chunk on the page.
As described above with reference to FIG. 2, in response to these requests, the CMS selects third-party content from the content sources 104.
The CMS 110 next determines the appropriate formatting for the selected third-party content to be rendered in the third-party content block on the content page. The manner in which the appropriate style rule and its corresponding style parameters are selected is described in detail with reference to fig. 2. For the sake of brevity, only a brief version of these operations is described below.
In the example block diagram of FIG. 3, the CMS 110 uses the style identifier 10 included in each request to identify two rules from the data structure 308, mobile device and desktop, that have been specified by the publisher 106 for the content page 306. The CMS 110 then identifies the appropriate rules and corresponding style parameters using the data structure 308 using the attributes included in the request that specify the third-party content chunk name.
With respect to the request from desktop 302, the device type attribute is desktop, so the CMS 110 selects the desktop pattern rule shown in the data structure 308. More specifically, the CMS 110 may compare the device type attributes in the request to each rule condition to determine which rule applies to the request. In this example, the request from desktop 302 specifies that the device type is "desktop" such that the device type in the request will satisfy the conditions of the desktop rule (which requires device type — desktop), but will not satisfy the conditions of the mobile device rule (which requires device type — mobile).
The CMS 110 also uses attributes specifying the names of third party content blocks to identify rules corresponding to the blocks to determine the particular style parameters to be applied. Using the name of the third-party content block included in the request, the CMS 110 identifies the specific style rules for CB1 and CB2, which specify the style parameters of the third-party content blocks CB1 and CB2, respectively. The CMS 110 uses the style parameters (Param1, Param2, and Param3) of the rule CB1 to format third party content to be presented in the third party content block CB 1. Similarly, the CMS 110 uses the style parameters of the rule CB2 (Param3, Param4, and Param5) to format third party content to be presented in the third party content block CB 2. Because none of the rules for a desktop include any style rules for the third-party content block CB3, the CMS 110 may format the content within the block using default style parameters that may be specified by the publisher 106. In some implementations, the default style parameter may be a null parameter, in which case the CMS 110 does not render CB3 blocks (as shown in fig. 3). Alternatively, the default style parameters may include a standard set of style parameters, in which case the CMS 110 may use these style parameters to format the third-party content in the third-party content block CB3 and then render the block with the formatted third-party content on the content page 306.
With respect to the request from the mobile device 304, the device type attribute is a mobile device, and thus, the CMS 110 selects the mobile device style rule shown in the data structure 308 based on a match between the device type of the "mobile device" specified in the request and a condition that requires the mobile device style rule for the mobile device. The CMS 110 also uses attributes that specify the names of third-party content pieces to identify rules corresponding to the pieces. Using the name of the third-party content chunk included in the request, the CMS 110 identifies a rule CB3 that specifies the style parameters of the third-party content chunk CB 3. The CMS 110 uses the style parameters (Param6, Param7) of the rule CB3 to format third-party content to be presented in the third-party content block CB 3. Because none of the mobile device's rules include any of the style rules for the third-party content blocks CB1 and CB2, the CMS 110 may format content within these third-party content blocks using default style parameters that may be specified by the publisher 106. In some implementations, the default style parameter may be a null parameter, in which case the CMS 110 does not present the third-party content blocks CB1 and CB2 (as shown in fig. 3). Alternatively, the default style parameters may include a standard set of style parameters, in which case the CMS 110 may use these style parameters to format the third-party content in the third-party content blocks CB1 and CB2, and then present these blocks with the formatted third-party content on the content page 306.
As described above with reference to FIG. 2, the CMS 110 then provides these formatted third-party content items for presentation within the appropriate third-party content blocks on the respective devices (desktop 302 and mobile device 304) that initiated the request.
FIG. 4 is a flow diagram of an example process 400 for formatting third-party content items and presenting the items for presentation in third-party content blocks on a publisher's content page. The operations of process 400 are described below as being performed by components of the systems described and depicted in fig. 1-3. The operations of process 400 are described below for illustrative purposes only. The operations of process 400 may be performed by any suitable device or system (e.g., any suitable data processing apparatus). The operations of process 400 may also be implemented as instructions stored on a non-transitory computer-readable medium. Execution of the instructions causes one or more data processing apparatus to perform the operations of process 400.
The CMS 110 receives a request to present third-party content in a third-party content block on a content page provided by a publisher 106 (at 402). As described above with reference to FIGS. 2 and 3, the CMS 110 receives a request 202 for third-party content for one or more third-party content blocks on a publisher's content page accessed by a user on a user device 102.
The CMS 110 obtains (at 404) a single style identifier and one or more attributes from the content page. A single style identifier can be declared either explicitly (alphanumeric string) or implicitly. As described above with reference to fig. 2 and 3, the request includes a single style identifier embedded in the content page (i.e., explicitly declared) and one or more attributes from the content page that define the context in which the content is to be presented (e.g., device type, user agent type, screen size, etc.). In some implementations, a content page may not include a single style identifier, but rather, the publisher may define different style rules and parameters using another type of identifier that need not be included in the page (i.e., implicitly declared). In such an implementation, the CMS 110 may use another identifier (e.g., a Uniform Resource Locator (URL)) that may be provided with the request and use the URL to identify the style rules and parameters corresponding to the URL, which serves as the single style identifier.
The CMS 110 selects (at 406) third-party content items from the content sources 104 that store the third-party content, as described above with reference to FIG. 2.
The CMS 110 uses the single style identifier and the one or more attributes to identify a first rule that specifies a set of style parameters for content selected for presentation in the third-party content block (at 408). As described above with reference to fig. 2 and 3, the CMS 110 uses a single style identifier to identify a set of style rules corresponding to a content page. Using the one or more attributes, the CMS 110 then identifies a first rule that includes a set of style parameters selected for content presented in the third-party content block (as described above with reference to figures 2 and 3).
The CMS 110 formats the third-party content item according to the set of style parameters specified in the first rule (at 410), as described above with reference to figures 2 and 3. Alternatively, as described above with reference to figure 2, the user device 102, rather than the CMS 110, formats the third party content item according to the set of style parameters specified in the first rule.
The CMS 110 provides the third-party content items for presentation within the third-party content blocks of the content page (at 412). As described above with reference to FIG. 2, the CMS 110 provides for the presentation of embeddable display elements including formatted third-party content items within appropriate third-party content blocks on a content page. Alternatively, as described above with reference to FIG. 2, the user device 102, rather than the CMS 110, formats and provides the third-party content items for presentation within the third-party content blocks of the content page.
The content management system 110 determines (at 414) an amount of user activity of the third-party content items presented within the third-party content blocks. As described above with reference to FIG. 2, the CMS 110 maintains a count of all user activities with respect to formatted third-party content items presented within third-party content blocks. The CMS 110 aggregates (i.e., sums) the counts of user activities to determine the amount of user activity.
The content management system 110 modifies (at 416) the style parameter set specified in the first rule in response to the amount of user activity. As described above with reference to fig. 2, if the amount of user activity is less than the threshold amount of user activity, the publisher 106 may select a modified set of style parameters using the front end interface of the CMS 110. The CMS 110 modifies the style parameters corresponding to the first rule based on the style parameters selected by the publisher 106.
The CMS 110 formats the third-party content item according to the modified set of style parameters specified in the first rule in the same manner as described above with reference to operation 410 (and further described with reference to figures 2 and 3). The CMS 110 then provides the formatted third-party content items for presentation within the third-party content blocks of the content page (in the same manner as described above with reference to operation 412 and FIGS. 2 and 3).
As described above with reference to FIG. 2, the CMS 110 provides preformatted embeddable display elements for rendering on the content page 220. Alternatively, in some implementations, the CMS 110 may provide the user device 102 with an unformatted embeddable display element that includes the third-party content item 206. The CMS 110 may also use the style identifier corresponding to the content page to identify the appropriate rules and corresponding style parameters for the user device 102 (in the same manner as described above). The CMS 110 may provide this information to the user device 102. Thus, instead of the CMS 110, the user device 102 formats the received embeddable display element using one or more rules specified within the identified rules, and then renders the element for display on the content page (in the same manner as described above with reference to the CMS 110). Alternatively, instead of the CMS 110 providing a set of rules and corresponding style parameters, the user device 102 may store a data structure similar to the data structure 208 stored by the CMS 110. In such an implementation, the user device 102 receives the third-party content item from the CMS 110 and then performs all subsequent style-based operations described above with reference to the CMS 110.
FIG. 5 is a block diagram of an example computer system 500 that may be used to perform the operations described above. The system 500 includes a processor 510, a memory 520, a storage device 530, and an input/output device 540. Each of the components 510, 520, 530, and 540 may be interconnected, for example, using a system bus 550. Processor 510 is capable of processing instructions for execution within system 500. In some implementations, the processor 510 is a single-threaded processor. In another implementation, the processor 510 is a multi-threaded processor. The processor 510 is capable of processing instructions stored on the memory 520 or the storage device 530.
The storage device 530 is capable of providing mass storage for the system 500. In some implementations, the storage device 530 is a computer-readable medium. In various different embodiments, storage device 530 may comprise, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices (e.g., cloud storage) over a network, or some other mass storage device.
The input/output device 540 provides input/output operations for the system 500. In some implementations, the input/output device 540 can include one or more of a network interface device (e.g., an Ethernet card, a serial communication device, and an RS-232 port), and/or a wireless interface device (e.g., an 802.11 card). In another embodiment, the input/output devices may include driver devices configured to receive input data and transmit output data to other input/output devices, such as a keyboard, a printer, and a display device 560. However, other implementations may also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 5, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage medium (media) for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by the data processing apparatus. The computer storage media may be or be embodied in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple optical, magnetic disks, or other storage devices).
The operations described in this specification may be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple processors or computers or systems on a chip, or combinations thereof. The apparatus can also include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (which may also be referred to as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages; and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a data communication network.
The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be, and are implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program may be, for example, based both on general-purpose and special-purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Furthermore, a computer may be embedded in another device, e.g., a mobile phone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable memory device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Device-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example: semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with the user; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input may be received from the user in any form, including acoustic, speech, or tactile input. In addition, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification), or any combination of one or more such back end, middleware, or front end components. The components of the system can be connected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include Local Area Networks (LANs) and Wide Area Networks (WANs), intranets (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server transmits data (e.g., HTML pages) to the client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the user device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous.
Claims (24)
1. A computer-implemented method, comprising:
receiving a request to present third-party content in a third-party content chunk on a content page provided by a publisher, wherein the third-party content is provided by an entity different from the publisher;
obtaining a single style identifier and one or more attributes from the content page;
selecting, after receiving the request, a third-party content item from a content source storing third-party content;
identifying, using the single style identifier and the one or more attributes, a first rule from a plurality of rules that specify different styles for a respective plurality of third-party content blocks on the content page, the first rule specifying a set of style parameters to select content selections for presentation in the third-party content blocks;
formatting the third-party content item according to a set of style parameters specified in the first rule; and
providing a third-party content item for presentation within a third-party content block of the content page.
2. The computer-implemented method of claim 1, wherein the one or more attributes comprise a user agent, a browser screen size, a third party content chunk name, or a device type.
3. The computer-implemented method of claim 1, further comprising:
modifying a style parameter set specified in the first rule; and is
Wherein formatting a third party content item according to the style parameter set specified in the first rule comprises formatting a third party content item using the modified style parameter set specified in the first rule in response to receiving the single style identifier.
4. The computer-implemented method of claim 1, further comprising:
determining an amount of user activity of a third-party content item presented within a third-party content block;
modifying a set of style parameters specified in the first rule in response to the amount of user activity;
in response to receiving the single style identifier, formatting a third-party content item using the modified set of style parameters specified in the first rule; and
after formatting the third-party content item using the modified set of style parameters, the third-party content item is provided for presentation within a third-party content block of the content page.
5. The computer-implemented method of claim 1, further comprising:
obtaining one or more style parameter sets from the content page, wherein each style parameter set specifies a manner in which content is to be formatted for presentation in one or more third-party content blocks;
generating, for each of one or more style parameter sets, a rule including the style parameter set; and
storing each generated rule as a rule for the single style identifier with the plurality of rules.
6. The computer-implemented method of claim 1, wherein the style parameter set specified in the first rule is selected by the publisher.
7. The computer-implemented method of claim 1, wherein the style parameters include at least a maximum number of characters, font color, font type, font size, orientation, or bounding box applicable to the third-party content.
8. The computer-implemented method of claim 1, wherein the third-party content chunk includes an embeddable display element embedded in the content page.
9. A system, comprising:
one or more memory devices to store instructions; and
one or more data processing apparatus configured to interact with the one or more memory devices and, when the instructions are executed, perform operations comprising:
receiving a request to present third-party content in a third-party content chunk on a content page provided by a publisher, wherein the third-party content is provided by an entity different from the publisher;
obtaining a single style identifier and one or more attributes from the content page;
selecting, after receiving the request, a third-party content item from a content source storing third-party content;
identifying, using the single style identifier and the one or more attributes, a first rule from a plurality of rules that specify different styles for a respective plurality of third-party content blocks on the content page, the first rule specifying a set of style parameters to select content selections for presentation in the third-party content blocks;
formatting the third-party content item according to a set of style parameters specified in the first rule; and
providing a third-party content item for presentation within a third-party content block of the content page.
10. The system of claim 9, wherein the one or more attributes comprise a user agent, a browser screen size, a third party content chunk name, or a device type.
11. The system of claim 9, wherein the one or more data processing apparatus are configured to interact with the one or more memory devices and, when executing the instructions, perform operations further comprising:
modifying a style parameter set specified in the first rule; and is
Wherein formatting a third party content item according to the style parameter set specified in the first rule comprises formatting a third party content item using the modified style parameter set specified in the first rule in response to receiving the single style identifier.
12. The system of claim 9, wherein the one or more data processing apparatus are configured to interact with the one or more memory devices and, when executing the instructions, perform operations further comprising:
determining an amount of user activity of a third-party content item presented within a third-party content block;
modifying a set of style parameters specified in the first rule in response to the amount of user activity;
in response to receiving the single style identifier, formatting a third-party content item using the modified set of style parameters specified in the first rule; and
after formatting a third-party content item using the modified set of style parameters, the third-party content item is provided for presentation within a third-party content block of the content page.
13. The system of claim 9, wherein the one or more data processing apparatus are configured to interact with the one or more memory devices and, when executing the instructions, perform operations further comprising:
obtaining one or more style parameter sets from the content page, wherein each style parameter set specifies a manner in which content is to be formatted for presentation in one or more third-party content blocks;
generating, for each of one or more style parameter sets, a rule including the style parameter set; and
storing each generated rule as a rule for the single style identifier with the plurality of rules.
14. The system of claim 9, wherein the style parameter set specified in the first rule is selected by the publisher.
15. The system of claim 9, wherein the style parameters include at least a maximum number of characters, font color, font type, font size, orientation, or bounding box applicable to the third-party content.
16. The system of claim 9, wherein the third-party content chunk includes an embeddable display element embedded in the content page.
17. A non-transitory computer-readable medium storing instructions that, when executed by one or more data processing apparatus, cause the one or more data processing apparatus to perform operations comprising:
receiving a request to present third-party content in a third-party content chunk on a content page provided by a publisher, wherein the third-party content is provided by an entity different from the publisher;
obtaining a single style identifier and one or more attributes from the content page;
selecting, after receiving the request, a third-party content item from a content source storing third-party content;
identifying, using the single style identifier and the one or more attributes, a first rule from a plurality of rules that specify different styles for a respective plurality of third-party content blocks on the content page, the first rule specifying a set of style parameters to select content selections for presentation in the third-party content blocks;
formatting a third-party content item according to a style parameter set specified in the first rule; and
providing the third-party content item for presentation within a third-party content block of the content page.
18. The non-transitory computer-readable medium of claim 17, wherein the one or more attributes comprise a user agent, a browser screen size, a third party content chunk name, or a device type.
19. The non-transitory computer-readable medium of claim 17, wherein the instructions, when executed by one or more data processing apparatus, cause the one or more data processing apparatus to perform operations comprising:
modifying a style parameter set specified in the first rule; and is
Wherein formatting a third party content item according to the style parameter set specified in the first rule comprises formatting a third party content item using the modified style parameter set specified in the first rule in response to receiving the single style identifier.
20. The non-transitory computer-readable medium of claim 17, wherein the instructions, when executed by one or more data processing apparatus, cause the one or more data processing apparatus to perform operations comprising:
determining an amount of user activity of a third-party content item presented within the third-party content block;
modifying a set of style parameters specified in the first rule in response to the amount of user activity;
in response to receiving the single style identifier, formatting a third-party content item using the modified set of style parameters specified in the first rule; and
after formatting the third-party content item using the modified set of style parameters, the third-party content item is provided for presentation within a third-party content block of the content page.
21. The non-transitory computer-readable medium of claim 17, wherein the instructions, when executed by one or more data processing apparatus, cause the one or more data processing apparatus to perform operations comprising:
obtaining one or more style parameter sets from the content page, wherein each style parameter set specifies a manner in which content is to be formatted for presentation in one or more third-party content blocks;
generating, for each of one or more style parameter sets, a rule including the style parameter set; and
storing each generated rule as a rule for the single style identifier with the plurality of rules.
22. The non-transitory computer-readable medium of claim 17, wherein the style parameter set specified in the first rule is selected by the publisher.
23. The non-transitory computer-readable medium of claim 17, wherein the style parameters include at least a maximum number of characters, a font color, a font type, a font size, an orientation, or a border applicable to third-party content.
24. The non-transitory computer-readable medium of claim 17, wherein the third-party content chunk includes an embeddable display element embedded in the content page.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2019/032910 WO2020236138A1 (en) | 2019-05-17 | 2019-05-17 | Conditional interpretation of a single style definition identifier on a resource |
Publications (1)
Publication Number | Publication Date |
---|---|
CN112243517A true CN112243517A (en) | 2021-01-19 |
Family
ID=66810856
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980009062.XA Pending CN112243517A (en) | 2019-05-17 | 2019-05-17 | Conditional interpretation of a single style definition identifier on a resource |
Country Status (5)
Country | Link |
---|---|
US (1) | US11361048B2 (en) |
JP (1) | JP7066860B2 (en) |
KR (1) | KR102499733B1 (en) |
CN (1) | CN112243517A (en) |
WO (1) | WO2020236138A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20220311776A1 (en) * | 2021-03-25 | 2022-09-29 | International Business Machines Corporation | Injecting risk assessment in user authentication |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070038931A1 (en) * | 2005-08-12 | 2007-02-15 | Jeremy Allaire | Distribution of content |
US20080082911A1 (en) * | 2006-10-03 | 2008-04-03 | Adobe Systems Incorporated | Environment-Constrained Dynamic Page Layout |
US20150134465A1 (en) * | 2013-11-13 | 2015-05-14 | Google Inc. | Dynamic insertion of content items into resources |
US20170213256A1 (en) * | 2013-03-11 | 2017-07-27 | Google Inc. | Providing advertisements using dynamic slot-size-compatible style definitions |
Family Cites Families (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6023714A (en) * | 1997-04-24 | 2000-02-08 | Microsoft Corporation | Method and system for dynamically adapting the layout of a document to an output device |
US20040260767A1 (en) * | 2003-06-19 | 2004-12-23 | David Kedem | Dynamic web advertisement and content display system |
GB2451117A (en) * | 2007-07-20 | 2009-01-21 | Hewlett Packard Development Co | Method of composing a document template in which formatting rules are stored separately from a data content portion |
US20140201623A1 (en) | 2013-01-17 | 2014-07-17 | Bazaarvoice, Inc | Method and system for determining and using style attributes of web content |
EP3522034B1 (en) * | 2013-02-10 | 2023-09-13 | Wix.com Ltd. | Third party application communication api |
US10050849B1 (en) * | 2014-08-07 | 2018-08-14 | Google Llc | Methods and systems for identifying styles of properties of document object model elements of an information resource |
US10963539B2 (en) * | 2014-09-10 | 2021-03-30 | Mk Systems Usa Inc. | Interactive web application editor |
-
2019
- 2019-05-17 WO PCT/US2019/032910 patent/WO2020236138A1/en active Application Filing
- 2019-05-17 CN CN201980009062.XA patent/CN112243517A/en active Pending
- 2019-05-17 JP JP2020539776A patent/JP7066860B2/en active Active
- 2019-05-17 KR KR1020207020401A patent/KR102499733B1/en active IP Right Grant
- 2019-10-28 US US16/665,945 patent/US11361048B2/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070038931A1 (en) * | 2005-08-12 | 2007-02-15 | Jeremy Allaire | Distribution of content |
US20080082911A1 (en) * | 2006-10-03 | 2008-04-03 | Adobe Systems Incorporated | Environment-Constrained Dynamic Page Layout |
US20170213256A1 (en) * | 2013-03-11 | 2017-07-27 | Google Inc. | Providing advertisements using dynamic slot-size-compatible style definitions |
US20150134465A1 (en) * | 2013-11-13 | 2015-05-14 | Google Inc. | Dynamic insertion of content items into resources |
Also Published As
Publication number | Publication date |
---|---|
KR102499733B1 (en) | 2023-02-15 |
WO2020236138A1 (en) | 2020-11-26 |
JP2021526672A (en) | 2021-10-07 |
US20200364276A1 (en) | 2020-11-19 |
JP7066860B2 (en) | 2022-05-13 |
US11361048B2 (en) | 2022-06-14 |
KR20200135290A (en) | 2020-12-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
KR102185864B1 (en) | Server-side rendering method and system of native content for presentation | |
US10693981B2 (en) | Provisioning personalized content recommendations | |
US10089295B2 (en) | Selection of page templates for presenting digital magazine content based on characteristics of additional page templates | |
US20170046328A1 (en) | Page template selection for content presentation in a digital magazine | |
TWI590157B (en) | Compressed serialization of data for communication from a client-side application | |
US9529790B2 (en) | Hierarchical page templates for content presentation in a digital magazine | |
US10230672B2 (en) | Inserting a search box into a mobile terminal dialog messaging protocol | |
EP3019941A1 (en) | Dynamic layout engine for a digital magazine | |
CN112136127A (en) | Action indicator for search operation output element | |
US9979774B2 (en) | Debugging and formatting feeds for presentation based on elements and content items | |
KR102479911B1 (en) | Provision of different pages of content based on various user interactions on a single content item. | |
US11361048B2 (en) | Conditional interpretation of a single style definition identifier on a resource | |
US9959256B1 (en) | Web asset modification based on a user context |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
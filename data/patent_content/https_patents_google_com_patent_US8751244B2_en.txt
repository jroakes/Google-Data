US8751244B2 - Apparatus and method for low complexity combinatorial coding and decoding of signals - Google Patents
Apparatus and method for low complexity combinatorial coding and decoding of signals Download PDFInfo
- Publication number
- US8751244B2 US8751244B2 US13/098,501 US201113098501A US8751244B2 US 8751244 B2 US8751244 B2 US 8751244B2 US 201113098501 A US201113098501 A US 201113098501A US 8751244 B2 US8751244 B2 US 8751244B2
- Authority
- US
- United States
- Prior art keywords
- combinatorial function
- vector
- function output
- combinatorial
- max
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/02—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using spectral analysis, e.g. transform vocoders or subband vocoders
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/04—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using predictive techniques
- G10L19/08—Determination or coding of the excitation function; Determination or coding of the long-term prediction parameters
- G10L19/10—Determination or coding of the excitation function; Determination or coding of the long-term prediction parameters the excitation function being a multipulse excitation
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/02—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using spectral analysis, e.g. transform vocoders or subband vocoders
- G10L19/032—Quantisation or dequantisation of spectral components
- G10L19/038—Vector quantisation, e.g. TwinVQ audio
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M7/00—Conversion of a code where information is represented by a given sequence or number of digits to a code where the same, similar or subset of information is represented by a different sequence or number of digits
- H03M7/30—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction
- H03M7/3082—Vector coding
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M7/00—Conversion of a code where information is represented by a given sequence or number of digits to a code where the same, similar or subset of information is represented by a different sequence or number of digits
- H03M7/30—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction
- H03M7/40—Conversion to or from variable length codes, e.g. Shannon-Fano code, Huffman code, Morse code
Definitions
- the present invention relates generally to a method and apparatus for low complexity combinatorial coding and decoding of signals, and in particular to low-complexity combinational coding and decoding of vectors within electronic audio encoders and decoders.
- the audio In order to transmit or store digitized audio, the audio must be encoded to a digital form. In doing so, the analog audio is digitized to form a vector or matrix. The digitized audio is then encoded in order to reduce the amount of information required to digitally represent the audio.
- Methods for encoding (coding) vector or matrix quantities for speech, audio, image, video, and other signals are well known.
- One such method described in U.S. Pat. No. 6,236,960 by Peng, et.al, (which is incorporated by reference herein) is known as Factorial Pulse Coding (or FPC). If elements of vector x are constrained such that ⁇ m ⁇ x i ⁇ m, and values of x i , are integral, then FPC can produce a codeword for a vector x using a total of M bits, given that:
- F(n,d) is a combinatorial function, having the number of combinations of d non-zero vector elements over n positions given by:
- n comprises a position parameter
- d comprises a pulse index parameter.
- F(144, 28) would require 197 bits of precision in the numerator and 98 bits of precision in the denominator to produce a 99 bit quotient. Since most digital signal processors (DSPs) used in today's handheld devices typically support only 16 bit ⁇ 16 bit multiply operations, special multi-precision multiply/divide routines would need to be employed.
- DSPs digital signal processors
- Such routines require a series of nested multiply/accumulate operations that typically require on the order of k multiple/accumulate (MAC) operations, where k is the number of 16 bit segments in the operand.
- MAC multiple/accumulate
- the denominator term is calculated in a similar manner to produce a 98 bit result.
- a 197/98 bit division is required, which is an extremely complex operation. Thus computation of the entire factorial relation in Eq. 5 would require considerable resources. While prior art methods have addressed these complexity issues to some degree, large values of n and d still may require significant processing resources. Therefore a need exists for a method and apparatus for simplifying the technique utilized for F(n,d).
- FIG. 1 is a block diagram of an encoder.
- FIG. 2 is a flow chart showing operation of the encoder of FIG. 1 .
- FIG. 3 is a block diagram of a decoder.
- FIG. 4 is a flow chart showing operation of the decoder of FIG. 4 .
- FIG. 5 is a detailed view of the Combinatorial Function Generator block in FIG. 1 and FIG. 3 .
- references to specific implementation embodiments such as “circuitry” may equally be accomplished via either on general purpose computing apparatus (e.g., CPU) or specialized processing apparatus (e.g., DSP) executing software instructions stored in non-transitory computer-readable memory. Additionally, the elements within the figures exist within a tangible apparatus or electronic device. It will also be understood that the terms and expressions used herein have the ordinary technical meaning as is accorded to such terms and expressions by persons skilled in the technical field as set forth above except where different specific meanings have otherwise been set forth herein.
- F′(n,d) F ( n ⁇ 1, d ⁇ 1)+ F ( n ⁇ 1, d ), (6) which requires many multi-precision additions.
- F′(n,d) F ( n ⁇ 1, d ⁇ 1)+ F ( n ⁇ 1, d ), (6) which requires many multi-precision additions.
- F′(n,d) F ( n ⁇ 1, d ⁇ 1)+ F ( n ⁇ 1, d ), (6) which requires many multi-precision additions.
- P′(i) are first obtained and stored in memory so that the unique decodability inequality P′(i) are first obtained and stored in memory so that the unique decodability F ′( n, d ) ⁇ F ′( n ⁇ 1 , d )+ F ′( n ⁇ 1 , d ⁇ 1) (8) is satisfied for all values of n and d.
- a partial summation of P′(i) such as:
- the code for pulse positions within the codeword is given by:
- a pseudo floating point representation consisting of a mantissa and an exponent, is used for the representation of the approximate combinatorial function.
- a partial multi-precision codeword is generated by modifying a very small portion of a previously generated multi-precision codeword.
- the small portion of the codeword which is modified is identified from the exponent of the pseudo floating point representation of the approximate combinatorial function. That is, the exponent part identifies a shift factor that is applied to the mantissa part, which is subsequently added to or subtracted from the partial multi-precision codeword. Since much of the resolution of the standard combinatorial expression is lost, we refer to this as an “approximation” of the combinatorial function.
- p k is a value of a k th non-zero vector position
- the respective positions to be coded p k are shown.
- the result of F′(p k , k) can be represented with less than 32 bits of precision and for k>6, more than 32 bits is required.
- F′(p k , k) has a result 74 bits long.
- an encoder and a decoder will utilize a first function in determining a codeword when a non-zero pulse position is small.
- the encoder and the decoder will also utilize a second function in determining the codeword when the non-zero pulse position is large.
- a coder may utilize a factorial pulse coding approach with standard representation of the combinatorial functions F(n,k) (equation 3) when the number of bits needed for representing F(n,k) is small (e.g., less than 32), otherwise the coder may use an approximate combinatorial function (e.g., equation 10) when the bits needed for representing F(n,k) is large.
- the maximum value (p k max ) of p k is stored for which F(p k ,k) is less than a predetermined value.
- the threshold may be predetermined to allow the a lower complexity function to be selected, either the standard combinatorial function F(p k max ,k) or the approximate combinatorial function F′(p k max ,k).
- the standard function F(p k max ,k) may be used if the value of p k ⁇ 49, and the approximate combinatorial function F′(p k max ,k) may be used for coding non-zero vector positions 49 ⁇ p k ⁇ 200.
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v ( 13 ) and using it for encoding and decoding. It can be easily shown that ⁇ circumflex over (F) ⁇ (n,k) also satisfies the unique decodability inequality shown in equation (8).
- the above approach can be easily used at the encoder because the encoder knows the value of p k for each value of k. However, since the decoder (for a particular value of k) does not know which function was used during encoding, it may have to start decoding p k using F′(p k ,k) and then switch to F(p k ,k) when it is sure that the value p k is less than p k max . This may not only increase the decoding complexity but also complicate the decoder implementation.
- the technique used for determining the combinatorial function being used in encoding and decoding the current position of the of the vector is dependent on the value of the previous decoded position of the codeword.
- Codewords are typically decoded from highest position to lowest position. Therefore, the type of combinatorial function should be used for coding of the k th position p k may be based on the value p k+1 of the k+ th coded position. So if F(p k+1 ⁇ 1, k) can be represented in less than 32 bits, then all other possible values of p k can also be represented in less than 32 bits. In such scenario, it is preferred to use a standard combinatorial function, otherwise an approximate combinatorial function is preferred. A mathematical definition of the modified function is given below.
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k + 1 - 1 ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v ( 14 ) It can be further observed that p k max is increasing sequence in k, i.e., p k ⁇ 1 max ⁇ p k max ⁇ p k+1 max
- p k max which is different from that given by equation (15).
- the maximum length of the result of F(p k ,k) may be limited to 40-bits or 64-bits instead of 31 or 32 bits.
- the value of p k max may be upper limited to a value of 64 or 128 irrespective of whether F ( pk,k ) produce results of less than 32 bits, and may also depend on the hardware on which the process is executed.
- FIG. 1 is a block diagram of encoder 100 .
- Encoder 100 comprises vector generator 102 , combinational coding circuitry (coder) 106 , and combinatorial function generator 108 .
- the circuitry in FIG. 1 may be implemented within any hardware device that performs coding. Such devices include, but are not limited to a cellular telephone, landline telephone, music player, cable TV set top box, etc.
- an input signal to be coded is received by vector generator 102 .
- the input signal may comprise such signals as speech, audio, image, video, and other signals.
- Vector generator 102 receives the input signal and creates vector x.
- the input signal comprises an audio input signal such as speech or music, but in alternate embodiments of the present invention the input signal may comprise music, voice, video, or any combination thereof.
- Vector generator 102 may comprise any number of encoding paradigms including, but not limited to, Code-Excited Linear Prediction (CELP) speech coding as described by Peng, et.al, transform domain coding for audio, images and video including Discrete Fourier Transform (DFT), Discrete Cosine Transform (DCT), and Modified Discrete Cosine Transform (MDCT) based methods, wavelet based transform coding, direct time domain pulse code modulation (PCM), differential PCM, adaptive differential PCM (ADPCM), or any one of a family of sub-band coding techniques that are well known in the art. Virtually any signal vector of the form given above may be advantageously processed in accordance with the present invention.
- CELP Code-Excited Linear Prediction
- DFT Discrete Fourier Transform
- DCT Discrete Cosine Transform
- MDCT Modified Discrete Cosine Transform
- PCM direct time domain pulse code modulation
- ADPCM adaptive differential PCM
- Combinatorial coding circuitry 106 receives vector x and uses Factorial Pulse Coding to produce a codeword C.
- the codeword generated is based on the combinatorial function F(n,k). As discussed above, larger values of m and n (and hence F(n,k) can quickly cause problems, especially in mobile handheld devices which need to keep memory and computational complexity as low as possible.
- combinatorial function generator 108 utilizes a low complexity technique for producing F(n,k) when the number of bits needed for representing F(n,k) is small (e.g., less than 32), otherwise the coder 106 uses an approximate combinatorial function (e.g., equation 10) when the bits needed for representing F(n,k) is large. More particularly, combinatorial coding circuitry 106 utilizes
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v or alternatively
- circuitry 108 utilizes relatively low resolution approximations of factorial combinations F′(n,d), which provide only enough precision to allow a valid codeword to be generated. That is, as long as certain properties are maintained, a suitable approximation of the function F(n,d) is sufficient to guarantee that the resulting codeword is uniquely decodable.
- FIG. 2 is a flow chart showing operations performed by electronic encoder 100 .
- the logic flow begins at step 201 where an input signal is received by vector generator 102 .
- generator 202 outputs a digital representation of the input signal as vector x which is received by coding circuitry 106 .
- coding circuitry 106 utilizes either F′(n,k) or F(n,k) to produce a codeword representing vector x.
- the electronic encoder will choose either a first function or a second function in the production of a codeword C from the vector x, wherein the electronic encoder chooses the first or the second function based on a non-zero vector position of the vector x being less than a predetermined value.
- a maximum value of p k exists (and is stored by circuitry 106 ) for which F(p k ,k) is less than a predetermined value (e.g., 32 bits long).
- p k max be the maximum such value. This value is either stored by generator 108 or can be passed to generator 108 by coding circuitry 106 . Regardless of how generator 108 receives p k max at step 205 index value k and n (the vector length of x) is passed to generator 108 .
- combinatorial function generator 108 returns
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v or alternatively
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k + 1 - 1 ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v
- Coding circuitry 106 then produces the appropriate codeword C for vector x based on the returned value of F(p k k) (step 209 ).
- the codeword is generated b circuitry 106 as:
- This codeword can then be transmitted or stored (in storage not shown) by encoder 100 .
- FIG. 3 is a block diagram of decoder 300 .
- decoder 300 comprises combinatorial decoding circuitry 306 , signal reconstruction circuitry 310 , and combinatorial function generator 108 .
- the circuitry in FIG. 3 may be implemented within any hardware device that performs decoding. Such devices include, but are not limited to a cellular telephone, landline telephone, music player, cable TV set top box, etc.
- combinatorial decoding circuitry 306 During operation a combinatorial codeword is received by combinatorial decoding circuitry 306 .
- Combinatorial decoding circuitry 306 provides n and k to combinatorial function generator, and receives ⁇ circumflex over (F) ⁇ (n,k) in response. Decoding circuitry 306 then creates vector x based on ⁇ circumflex over (F) ⁇ (n,k). Circuitry 306 operates in a similar manner as circuitry 106 since ⁇ circumflex over (F) ⁇ (n,k) must be the same for both encoding and decoding. Thus, decoding circuitry 306 will feed n, k, to function generator 308 . The prior value of p k+1 or p k may be provided as well. In return, generator 308 will return
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v or alternatively
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k + 1 - 1 ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v
- Decoder 306 will then decode the current position of the codeword based on the current value of ⁇ circumflex over (F) ⁇ (n,k). This results in the digital representation of the original input signal of FIG. 1 , which is output to signal reconstruction circuitry 310 where digital to analog conversion of the signal may take place to output the original input signal.
- FIG. 4 is a flow chart showing operation of decoder 300 .
- the logic flow begins at step 401 where a codeword is received by decoding circuitry 306 .
- n and k are provided to combinatorial function generator (step 403 ).
- p k max may be provided to function generator 108 at step 403 or may be known beforehand by function generator 108 .
- p k+1 may be provided to function generator 308 at step 403 or may be known beforehand by generator 308 .
- generator provides
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v or alternatively
- F ⁇ ⁇ ( p k , k ) ⁇ F ⁇ ( p k , k ) , p k + 1 - 1 ⁇ p k max F ′ ⁇ ( p k , k ) , otherwise ⁇ ⁇ 1 ⁇ k ⁇ v .
- combinatorial decoding circuitry 306 outputs vector x to signal reconstruction circuitry 310 where the original input signal is reconstructed and output.
- the original input signal may be output as voice over a simple speaker (not shown).
- FIG. 5 is a block diagram showing a combinatorial function generator that can be used in both an encoder and decoder.
- generator 500 comprises both a standard combinatorial function generator 501 and an approximate combinatorial function generator 503 .
- a factorial pulse coding approach with standard representation of ⁇ circumflex over (F) ⁇ may be used when the number of bits needed for representing ⁇ circumflex over (F) ⁇ is small, otherwise an approximation for ⁇ circumflex over (F) ⁇ may be used when the bits needed for representing ⁇ circumflex over (F) ⁇ is large. Stated more specifically,
Abstract
Description
where m is the total number of unit amplitude pulses, and n is the vector length. For the N possibilities for vector x, the total M bits are used to code N combinations of vector x in a maximally efficient manner, such that the following expression, which describes the theoretical minimum number of combinations, holds true:
D(m,d) are the number of combinations of d non-zero vector elements given m total unit pulses given by:
D(m,d)=F(m−1, d−1) (4)
and 2d represents the combinations required to describe the polarity (sign) of the d non-zero vector elements. In the above equations n comprises a position parameter, d comprises a pulse index parameter. A method and apparatus for coding and decoding vectors described above have been fully described in the prior art. Furthermore, a practical implementation of this coding method has been described in 3GPP2 standard C.S0014-B, where the vector length n=54 and the number of unit magnitude pulses m=7 produce an M=35 bit codeword.
F(144, 28) would require 197 bits of precision in the numerator and 98 bits of precision in the denominator to produce a 99 bit quotient. Since most digital signal processors (DSPs) used in today's handheld devices typically support only 16 bit×16 bit multiply operations, special multi-precision multiply/divide routines would need to be employed. Such routines require a series of nested multiply/accumulate operations that typically require on the order of k multiple/accumulate (MAC) operations, where k is the number of 16 bit segments in the operand. For a 197 bit operand, k=┌197/161┐=13. So, execution of a single 197×16 bit multiply would require a minimum of 13 MAC operations plus shifting and store operations. The denominator term is calculated in a similar manner to produce a 98 bit result. In addition, a 197/98 bit division is required, which is an extremely complex operation. Thus computation of the entire factorial relation in Eq. 5 would require considerable resources. While prior art methods have addressed these complexity issues to some degree, large values of n and d still may require significant processing resources. Therefore a need exists for a method and apparatus for simplifying the technique utilized for F(n,d).
F(n,d)=F(n−1,d−1)+F(n−1,d), (6)
which requires many multi-precision additions. To reduce the complexity, various different methods of using an approximation F′(n,d) of F(n,d) are described in described in the prior arts (U.S. Pat. No. 7,461,106 and US20090234642 A1). In prior art methods, the encoder and decoder use relatively low resolution approximations of factorial combinations F′(n,d), which provide only enough precision to allow a valid codeword to be generated. In U.S. Pat. No. 7,461,106, the combinatorial function is replaced by an approximate function F′(n, d) which is given as:
where P(i)≈log2(i), Q(d)≈Σj=1 d log2(j), and R(k)≈2k and where k=ki+kf is broken down into integer and fractional components of k, and Kf=2k
F′(n, d)≧F′(n−1, d)+F′(n−1, d−1) (8)
is satisfied for all values of n and d. To further reduce the complexity of the approximate combinatorial function in (7), instead of pre-storing P′(i), a partial summation of P′(i) such as:
may be used. Now equation (7) can be equivalently computed as:
F′(n,d)=R′(S′(n)−S′(n−d)−Q′(d)) (10)
where in the above equation R′ comprises an estimate of a power function, S′ comprises a log domain estimate of n!, and Q′ comprises a log domain estimate of d!.
and the code for pulse magnitudes within the codeword is given by:
Thus, the formulation of these codeword requires the addition of v and v-1 multi-precision numbers. Similar subtraction operations are needed in the decoder.
TABLE 1 |
Example of function F′(pk, k), for v = 15 |
Significant bits | |||||
k | pk | F′(pk, k) | ┌log2(F′(pk, k))┐ | ||
1 | 5 | 5.00000E+00 | 3 | ||
2 | 15 | 1.05000E+02 | 7 | ||
3 | 35 | 6.54500E+03 | 13 | ||
4 | 40 | 9.13900E+04 | 17 | ||
5 | 50 | 2.11876E+06 | 22 | ||
6 | 65 | 8.25989E+07 | 27 | ||
7 | 89 | 6.89027E+09 | 33 | ||
8 | 100 | 1.86088E+11 | 38 | ||
9 | 112 | 5.49456E+12 | 43 | ||
10 | 120 | 1.16068E+14 | 47 | ||
11 | 140 | 6.77961E+15 | 53 | ||
12 | 145 | 1.12968E+17 | 57 | ||
13 | 150 | 1.83031E+18 | 61 | ||
14 | 171 | 1.21363E+20 | 67 | ||
15 | 198 | 1.25122E+22 | 74 | ||
and using it for encoding and decoding. It can be easily shown that {circumflex over (F)}(n,k) also satisfies the unique decodability inequality shown in equation (8).
TABLE 2 |
Example showing F(pk max, k), for n = 200, v = 15 |
Significant bits | |||||
k | pk max | F(pk max, k) | |log2(F(pk max, k))| | ||
1 | 200 | 200 | 8 | ||
2 | 200 | 19900 | 15 | ||
3 | 200 | 1313400 | 21 | ||
4 | 200 | 64684950 | 26 | ||
5 | 193 | 2118000528 | 31 | ||
6 | 110 | 2141851635 | 31 | ||
7 | 75 | 1984829850 | 31 | ||
8 | 58 | 1916797311 | 31 | ||
9 | 49 | 2054455634 | 31 | ||
10 | 43 | 1917334783 | 31 | ||
11 | 38 | 1203322288 | 31 | ||
12 | 37 | 1852482996 | 31 | ||
13 | 35 | 1476337800 | 31 | ||
14 | 34 | 1391975640 | 31 | ||
15 | 34 | 1855967520 | 31 | ||
It can be further observed that pk max is increasing sequence in k, i.e.,
p k−1 max ≦p k max ≦p k+1 max
p k max=max (p k) s.t. F(p k , k)≦231. (15)
or alternatively
to produce codeword C. Thus, when the bits needed for representing F(n,k) is large,
or alternatively
or alternatively
or alternatively
when the number of bits needed for representing {circumflex over (F)} is small otherwise {circumflex over (F)}=F′(n,d)=R′(S′(n)−S′(n−d)−Q′(d) when the bits needed for representing {circumflex over (F)} is large, wherein n comprises a position parameter, d comprises a pulse index parameter, R′ comprises an estimate of a power function, S′ comprises a log domain estimate of n!, and Q′ comprises a log domain estimate of d!.
Claims (13)
Priority Applications (8)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/098,501 US8751244B2 (en) | 2011-05-02 | 2011-05-02 | Apparatus and method for low complexity combinatorial coding and decoding of signals |
CN201280021516.3A CN103503064B (en) | 2011-05-02 | 2012-04-20 | Low complex degree combined code and the apparatus and method of decoding for signal |
PCT/US2012/034360 WO2012151059A1 (en) | 2011-05-02 | 2012-04-20 | Apparatus and method for low complexity combinatorial coding and decoding of signals |
MX2013012782A MX2013012782A (en) | 2011-05-02 | 2012-04-20 | Apparatus and method for low complexity combinatorial coding and decoding of signals. |
KR1020137028717A KR101578989B1 (en) | 2011-05-02 | 2012-04-20 | Apparatus and method for low complexity combinatorial coding and decoding of signals |
CA2833737A CA2833737C (en) | 2011-05-02 | 2012-04-20 | Apparatus and method for low complexity combinatorial coding and decoding of signals |
BR112013028159A BR112013028159A2 (en) | 2011-05-02 | 2012-04-20 | apparatus and method for low-complexity combinatorial coding and decoding of signals |
EP12717556.0A EP2705517B1 (en) | 2011-05-02 | 2012-04-20 | Methods for combinatorial coding and decoding of speech/audio/image/video signals and corresponding electronic encoder/decoder |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/098,501 US8751244B2 (en) | 2011-05-02 | 2011-05-02 | Apparatus and method for low complexity combinatorial coding and decoding of signals |
Publications (2)
Publication Number | Publication Date |
---|---|
US20120284032A1 US20120284032A1 (en) | 2012-11-08 |
US8751244B2 true US8751244B2 (en) | 2014-06-10 |
Family
ID=46018120
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/098,501 Expired - Fee Related US8751244B2 (en) | 2011-05-02 | 2011-05-02 | Apparatus and method for low complexity combinatorial coding and decoding of signals |
Country Status (8)
Country | Link |
---|---|
US (1) | US8751244B2 (en) |
EP (1) | EP2705517B1 (en) |
KR (1) | KR101578989B1 (en) |
CN (1) | CN103503064B (en) |
BR (1) | BR112013028159A2 (en) |
CA (1) | CA2833737C (en) |
MX (1) | MX2013012782A (en) |
WO (1) | WO2012151059A1 (en) |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6236960B1 (en) | 1999-08-06 | 2001-05-22 | Motorola, Inc. | Factorial packing method and apparatus for information coding |
US20080065374A1 (en) | 2006-09-12 | 2008-03-13 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090100121A1 (en) * | 2007-10-11 | 2009-04-16 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090231169A1 (en) * | 2008-03-13 | 2009-09-17 | Motorola, Inc. | Method and Apparatus for Low Complexity Combinatorial Coding of Signals |
US20090234642A1 (en) * | 2008-03-13 | 2009-09-17 | Motorola, Inc. | Method and Apparatus for Low Complexity Combinatorial Coding of Signals |
-
2011
- 2011-05-02 US US13/098,501 patent/US8751244B2/en not_active Expired - Fee Related
-
2012
- 2012-04-20 CN CN201280021516.3A patent/CN103503064B/en active Active
- 2012-04-20 EP EP12717556.0A patent/EP2705517B1/en not_active Not-in-force
- 2012-04-20 KR KR1020137028717A patent/KR101578989B1/en active IP Right Grant
- 2012-04-20 CA CA2833737A patent/CA2833737C/en active Active
- 2012-04-20 BR BR112013028159A patent/BR112013028159A2/en not_active Application Discontinuation
- 2012-04-20 MX MX2013012782A patent/MX2013012782A/en active IP Right Grant
- 2012-04-20 WO PCT/US2012/034360 patent/WO2012151059A1/en active Application Filing
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6236960B1 (en) | 1999-08-06 | 2001-05-22 | Motorola, Inc. | Factorial packing method and apparatus for information coding |
US20080065374A1 (en) | 2006-09-12 | 2008-03-13 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US7461106B2 (en) | 2006-09-12 | 2008-12-02 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090100121A1 (en) * | 2007-10-11 | 2009-04-16 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090231169A1 (en) * | 2008-03-13 | 2009-09-17 | Motorola, Inc. | Method and Apparatus for Low Complexity Combinatorial Coding of Signals |
US20090234642A1 (en) * | 2008-03-13 | 2009-09-17 | Motorola, Inc. | Method and Apparatus for Low Complexity Combinatorial Coding of Signals |
US7889103B2 (en) | 2008-03-13 | 2011-02-15 | Motorola Mobility, Inc. | Method and apparatus for low complexity combinatorial coding of signals |
Non-Patent Citations (3)
Title |
---|
Mittal U et al: "Low Complexity Factorial Pulse Coding of MDCT Coefficients using Approximation of Combinatorial Functions",2007 IEEE International Conference on Acoustics, Speech, and Signal Processing Apr. 15-20, 2007 Honolulu, HI, USA, IEEE, Piscataway, NJ, USA, Apr. 15, 2007, pp. I-289. |
Mittal, Udar et al.: "Low Complexity Factorial Pulse Coding of MDCT Coefficients Using Approximation of Combinatorial Functions", ICASSP 2007, 1-4244-0728-1/07/IEEE, pp. I-289 to I-292. |
Patent Cooperation Treaty, International Search Report and Written Opinion of the International Searching Authority for International Application No. PCT/US2012/034360, Jun. 28, 2012, 11 pages. |
Also Published As
Publication number | Publication date |
---|---|
CA2833737A1 (en) | 2012-11-08 |
BR112013028159A2 (en) | 2017-09-19 |
EP2705517A1 (en) | 2014-03-12 |
KR20130137237A (en) | 2013-12-16 |
CA2833737C (en) | 2017-10-03 |
CN103503064A (en) | 2014-01-08 |
EP2705517B1 (en) | 2018-02-21 |
CN103503064B (en) | 2016-10-19 |
US20120284032A1 (en) | 2012-11-08 |
KR101578989B1 (en) | 2015-12-18 |
MX2013012782A (en) | 2013-12-06 |
WO2012151059A1 (en) | 2012-11-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8495115B2 (en) | Apparatus and method for low complexity combinatorial coding of signals | |
US8576096B2 (en) | Apparatus and method for low complexity combinatorial coding of signals | |
US7889103B2 (en) | Method and apparatus for low complexity combinatorial coding of signals | |
US9484951B2 (en) | Encoder that optimizes bit allocation for information sub-parts | |
US7978101B2 (en) | Encoder and decoder using arithmetic stage to compress code space that is not fully utilized | |
US20090234642A1 (en) | Method and Apparatus for Low Complexity Combinatorial Coding of Signals | |
KR101790463B1 (en) | Method and apparatus for pyramid vector quantization indexing and de-indexing of audio/video sample vectors | |
US20100088090A1 (en) | Arithmetic encoding for celp speech encoders | |
US8149144B2 (en) | Hybrid arithmetic-combinatorial encoder | |
US10734009B2 (en) | Periodic-combined-envelope-sequence generation device, periodic-combined-envelope-sequence generation method, periodic-combined-envelope-sequence generation program and recording medium | |
US20100017196A1 (en) | Method, system, and apparatus for compression or decompression of digital signals | |
US8751244B2 (en) | Apparatus and method for low complexity combinatorial coding and decoding of signals | |
Mittal et al. | Coding pulse sequences using a combination of factorial pulse coding and arithmetic coding |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MITTAL, UDAR;ASHLEY, JAMES P.;SIGNING DATES FROM 20110427 TO 20110429;REEL/FRAME:026206/0183 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:028441/0265Effective date: 20120622 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034286/0001Effective date: 20141028 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: CORRECTIVE ASSIGNMENT TO CORRECT THE REMOVE INCORRECT PATENT NO. 8577046 AND REPLACE WITH CORRECT PATENT NO. 8577045 PREVIOUSLY RECORDED ON REEL 034286 FRAME 0001. ASSIGNOR(S) HEREBY CONFIRMS THE ASSIGNMENT;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034538/0001Effective date: 20141028 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220610 |
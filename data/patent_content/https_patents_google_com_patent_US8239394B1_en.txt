US8239394B1 - Bloom filters for query simulation - Google Patents
Bloom filters for query simulation Download PDFInfo
- Publication number
- US8239394B1 US8239394B1 US11/097,676 US9767605A US8239394B1 US 8239394 B1 US8239394 B1 US 8239394B1 US 9767605 A US9767605 A US 9767605A US 8239394 B1 US8239394 B1 US 8239394B1
- Authority
- US
- United States
- Prior art keywords
- terms
- access operation
- produce
- output
- record
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000004088 simulation Methods 0.000 title description 8
- 238000000034 method Methods 0.000 claims abstract description 41
- 238000010606 normalization Methods 0.000 claims description 6
- 238000004590 computer program Methods 0.000 claims 11
- 238000012545 processing Methods 0.000 description 52
- 238000010586 diagram Methods 0.000 description 29
- 230000006870 function Effects 0.000 description 24
- 238000004891 communication Methods 0.000 description 14
- 101150117538 Set2 gene Proteins 0.000 description 10
- 102100029768 Histone-lysine N-methyltransferase SETD1A Human genes 0.000 description 8
- 101000865038 Homo sapiens Histone-lysine N-methyltransferase SETD1A Proteins 0.000 description 8
- 230000004044 response Effects 0.000 description 7
- 238000003491 array Methods 0.000 description 3
- 230000001419 dependent effect Effects 0.000 description 3
- 230000008569 process Effects 0.000 description 3
- 238000013468 resource allocation Methods 0.000 description 3
- 239000007787 solid Substances 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000008878 coupling Effects 0.000 description 2
- 238000010168 coupling process Methods 0.000 description 2
- 238000005859 coupling reaction Methods 0.000 description 2
- 238000003780 insertion Methods 0.000 description 2
- 230000037431 insertion Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012544 monitoring process Methods 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000012360 testing method Methods 0.000 description 2
- 238000004458 analytical method Methods 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 238000012216 screening Methods 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/901—Indexing; Data structures therefor; Storage structures
- G06F16/9014—Indexing; Data structures therefor; Storage structures hash tables
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
Definitions
- the present invention relates generally to search queries in search engines, such as Internet and Intranet search engines, and more specifically to restricting a database access operation in a search engine using Bloom filters.
- Search engines provide a powerful tool for locating content in documents in a large database of documents, such as the documents on the Internet or World Wide Web (WWW), or the documents stored on the computers of an Intranet.
- the documents are located using an index of documents in response to a search query, consisting of one or more words, terms, keywords and/or phrases, that is submitted by a user.
- search queries are often free-form.
- the set of queries and the corresponding categories of information and/or content are not pre-defined.
- resources such as memory, available for processing a respective set of operations, such as accessing a database, may be constrained by the sheer number of services that are running on the search engine at a given time.
- Pre-screening or simulating database access operations to determine if it is likely that corresponding information may be present in the database could improve the utilization of resources and the overall performance of search engines. There is a need, therefore, for search engines having such simulation capability.
- a method of restricting a database access operation is disclosed.
- a plurality of Bloom filters corresponding to a plurality of fields in a database are applied to two or more terms in a record to produce a first plurality of outputs.
- the record may correspond to a query. Extraneous terms may be removed from the record.
- the access operation to the database is enabled if the first plurality of outputs correspond to a positive result.
- Two or more terms in the record may be sorted to produce a sorted record.
- a first Bloom filter may be applied to the sorted record to produce a sorted output.
- the access operation to the database may be enabled if the sorted output corresponds to a positive result.
- the database may include factual information.
- the plurality of fields in the database may include objects, attributes and values.
- first and second subsets of the terms in the query are identified.
- a first Bloom filter in the plurality of Bloom filters is applied to the first subset to produce a first output.
- a second Bloom filter in the plurality of Bloom filters is applied to the second subset to produce a second output.
- the access operation is enabled when the first output and the second output both correspond positive results.
- a plurality of subsets of the terms in the query are identified.
- One or more of the Bloom filters are applied to each of the subsets to produce a second plurality of outputs.
- the access operation is enabled when the second plurality of outputs correspond to at least one of a plurality of success patterns.
- a normalization operation is applied to the query to produce a normalized set of terms.
- An additional Bloom filter is applied to each of the terms in the normalized set of terms to produce an additional output.
- the access operation is enabled in further accordance with the additional output corresponding to a positive result.
- the terms in the record are parsed in a plurality of ways to produce a plurality of parsed sets of terms.
- At least two of the Bloom filters in the plurality of Bloom filters are applied to the plurality of parsed sets of terms to produce a third plurality of outputs.
- the access operation is enabled in accordance with the third plurality of outputs corresponding to a positive result.
- the two Bloom filters may respectively correspond to an attribute field and a value field of a database.
- a first Bloom filter in the plurality of Bloom filters is applied to one or more terms in the record to produce a third output. Remaining terms in the record are sorted.
- a second Bloom filter in the plurality of Bloom filters is applied to the sorted remaining terms in the record to produce a fourth output. The access operation is enabled in further accordance with the third output and the fourth output corresponding to positive result.
- a first field corresponding to the first Bloom filter may include attributes.
- a second field corresponding to the second Bloom filter may include values.
- the one or more terms in the record may include a first term, a first two terms, a last term and/or a last two terms.
- FIG. 1 is a flow diagram illustrating an embodiment of interaction between a client and a search engine.
- FIG. 2 is a flow diagram illustrating an embodiment of processing of a search query.
- FIG. 3A is a block diagram illustrating an embodiment of processing of a search query using Bloom filters.
- FIG. 3B is a block diagram illustrating an embodiment of processing of a term using a Bloom filter.
- FIG. 4A is a flow diagram illustrating an embodiment of processing of a record.
- FIG. 4B is a flow diagram illustrating an embodiment of processing of a record.
- FIG. 4C is a flow diagram illustrating an embodiment of processing of a record.
- FIG. 5 is a block diagram illustrating an embodiment of a search engine system.
- FIG. 6 is a block diagram illustrating an embodiment of a search engine.
- FIG. 7 is a block diagram illustrating an embodiment of a client system.
- FIG. 8 is a block diagram illustrating an embodiment of a facts repository.
- FIG. 9 is a block diagram illustrating an embodiment of a Bloom filter.
- FIG. 10 is a block diagram illustrating an embodiment of a lexicography data structure.
- FIG. 11 is a block diagram illustrating an embodiment of processing content in a facts repository using Bloom filters.
- the Bloom filters contain one or more hashing functions and a corresponding filter array.
- a respective filter array contains entries corresponding to outputs from the one or more hashing functions when applied to respective terms input to the respective Bloom filter.
- the Bloom filters characteristics are selected based on a size of the database, a size of the filter array, a number and type of hashing functions and a pre-determined acceptable false positive rate.
- the Bloom filters are used to simulate an access operation based on a record. As explained in more detail below, if an output from one or more of the Bloom filters corresponds to a positive result the access operation is enabled.
- the record is a search query containing two or more words, terms, keywords and/or phrases. Henceforth, contents of a search query are referred to as terms.
- the search query may correspond to content located at one or more document locations.
- the one or more documents locations may correspond to one or more web sites and/or one or more web pages.
- the one or more document locations may include one or more uniform resource locators (URLs).
- the one or more document locations may be on an Intranet and/or the Internet, which is also referred to as the World Wide Web (WWW).
- the search query is a request for factual information, e.g., What is the capital of Spain? Such a request for factual information is henceforth called a fact query.
- a respective fact query may be processed by a regular or generic search engine and/or a facts search engine. Processing by the generic search engine and the facts search engine may occur sequentially or substantially simultaneously, i.e., substantially in parallel.
- the facts search engine may include a facts database or facts repository.
- the facts repository may include a plurality of fields, including a name field, an attribute field and a value field. Attributes and values in the facts repository may be arranged in pairs, i.e., as attribute-value pairs.
- the plurality of Bloom filters may be used to simulate an access operation to the facts repository based on a facts query. This will allow facts queries that do not correspond to content in the facts repository to be dropped, i.e., to block or not enable an access operation to the facts repository for such facts queries. While there is a small probability that outputs from the Bloom filters provide an erroneously positive result for a respective facts query, overall the Bloom filters offer a fast way to pre-screen or simulate access operations to improve resource allocation (for resources such as CPU cycles or search engine bandwidth) and performance of the facts search engine by reducing a number of facts queries that are processed.
- FIG. 1 is a flow diagram illustrating an embodiment 100 of interaction between a client 110 and a search engine 112 .
- User input at the client 110 is monitored ( 114 ).
- a search query is sent ( 116 ).
- the search query is received ( 118 ) by the search engine 112 .
- Search results are generated using a generic search engine ( 120 ).
- Search results may be optionally generated using a facts search engine, if applicable ( 122 ).
- the search results are sent ( 124 ) to the client 110 .
- the client 110 receives the search results ( 126 ).
- the flow diagram 100 may include fewer operations or additional operations. In addition, two or more operations may be combined and/or the order of the operations may be changed.
- FIG. 2 is a flow diagram illustrating an embodiment 200 of processing of a search query.
- the search query is received ( 210 ). If the search query is a facts query ( 212 ), a check to determine if it is likely that a facts repository contains content corresponding to the facts query is performed using Bloom filters ( 214 ). If the outputs from the Bloom filters collectively correspond to a positive result ( 216 ) (the meaning of which will be addressed in more detail below), the facts repository is accessed ( 218 ). If a suitable result is available in the facts repository, it is provided ( 220 ). In parallel, the search query is processed by a generic search engine to obtain generic search results ( 222 ). Search results from facts search engine and/or the generic search engine are returned to the sender of the search query ( 224 ).
- the flow diagram 200 may include fewer operations or additional operations. In addition, two or more operations may be combined and/or the order of the operations may be changed.
- FIG. 3A is a block diagram illustrating an embodiment 300 of processing of a search query using Bloom filters, such as the check using Bloom filters ( 214 ) in FIG. 2 .
- a search query 310 includes two or more terms 312 .
- the terms 312 are processed using Bloom filters 314 to produce outputs 320 .
- Each Bloom filter has two or more hashing functions 316 and a Bloom filter array 318 .
- outputs from the hashing functions 316 - 1 are compared to entries in Bloom filter array 318 - 1 (which were previously generated by applying the Bloom filters 314 to the contents of the facts repository, as is illustrated in FIG.
- output 320 - 1 corresponds to a positive result.
- the access operation to the facts repository corresponding to the search query 310 may be enabled if one of more of the outputs 320 corresponds to the positive result. For instance, the access operation may be enabled if the first output 320 - 1 corresponds to a positive result and at least one of the other outputs corresponds to a positive result. As discussed below, there may be two or more patterns (sometimes herein called “succes patterns”) of output results that indicate that the access operation should enabled.
- FIG. 3A illustrates the processing of each term 312 by each Bloom filter 314
- a respective term such as the term 312 - 1
- FIG. 3A illustrates N terms 312 and three Bloom filters 314
- alternate embodiments may include fewer and/or more terms 312 and/or Bloom filters 314 .
- FIG. 3B is a block diagram illustrating an embodiment 350 of processing of a term 352 using a Bloom filter 354 having a plurality of hashing functions 316 .
- Outputs from all the hashing functions 316 are compared to entries 358 in Bloom filter array 356 to generate output 360 .
- the output 360 corresponds to the positive result if the outputs from all the hashing functions 316 match the corresponding entries 358 in the Bloom filter array 356 .
- the reason for this methodology is that if the term 352 is in the facts repository, or the portion of the facts repository corresponding to this Bloom filter, then all the entries 358 in the Bloom filter identified by applying the hashing functions 316 to the term will have been set when the Bloom filter array was generated. While FIG. 3B illustrates the Bloom filter 354 containing four hashing functions 316 , in alternate embodiments the Bloom filter 354 may contain fewer or more hashing functions 316 .
- FIG. 4A is a flow diagram illustrating an embodiment 400 of a method of processing a record using a plurality of Bloom filters.
- a record is received ( 410 ). If the record is a search query, optionally determine if it is a facts search query ( 412 ). Optionally normalize terms in the record ( 414 ). Normalization includes removal of extraneous terms, which are also referred to as stop words, from the record.
- Extraneous terms may include common words such as articles and/or prepositions, for example, ‘the’, ‘that’, ‘or’ and so forth.
- a plurality of Bloom filters are applied to two or more terms in the record to produce a first plurality of outputs ( 416 ).
- An access operation to a database is enabled if the first plurality of outputs corresponds to a positive result ( 418 ).
- the positive result may include outputs from the plurality of Bloom filters indicating a presence of entries in Bloom filter arrays corresponding to the two or more terms.
- the method 400 may include fewer operations or additional operations.
- two or more operations may be combined and/or the order of the operations may be changed.
- FIG. 4B is a flow diagram illustrating an embodiment 450 of a method of processing of the record using the plurality of Bloom filters.
- the record is received ( 410 ). If the record is a search query, optionally determine if it is a facts search query ( 412 ). Optionally normalize terms in the record ( 414 ). Optionally sort the terms in the record ( 420 ). During sorting, terms in the record may be rearranged, for example, alphabetically. Identify a plurality of subsets of terms in the record ( 422 ). Identification may include associating one or more terms in the record with a respective field in the database. In some embodiments, the identification may be language independent, while in other embodiments it may be based on lexicographical analysis.
- the plurality of Bloom filters are applied to two or more terms in the record to produce the first plurality of outputs ( 416 ).
- One or more of the Bloom filters is applied to the plurality of subsets of terms to produce a second plurality of outputs ( 424 ).
- An access operation to the database is enabled if the first plurality of outputs corresponds to the positive result and the second plurality of outputs correspond to at least one success pattern ( 426 ).
- a success pattern may include one or more positive results in the second plurality of outputs.
- the method 450 may include fewer operations or additional operations.
- two or more operations may be combined and/or the order of the operations may be changed.
- FIG. 4C is a flow diagram illustrating an embodiment 460 of a method of processing of the record using the plurality of Bloom filters.
- the record is received ( 410 ). If the record is a search query, optionally determine if it is a facts search query ( 412 ). Optionally normalize terms in the record ( 414 ).
- the plurality of Bloom filters are applied to two or more terms in the record to produce the first plurality of outputs ( 416 ).
- parse terms in the record in a plurality of ways 428 ). The parsing may result in a variety of patterns that use one or more subsets of the terms in the record.
- each parsed set of terms may correspond to a respective linguistic pattern, where only one of the linguistic patterns accurately represents the linguistic functions of the terms in the record or query.
- Operations 430 , 432 and 434 are applied to each of the parsed sets of terms. Apply a first Bloom filter to at least a first term in the parsed set of terms to produce a first output ( 430 ). Optionally sort remaining terms in the parsed set of terms ( 432 ). Apply a second Bloom filter to the optionally sorted remaining terms to produce a second output ( 434 ).
- An access operation to the database is enabled if both the first output and the second output correspond to a positive result for any one of the parsed sets of terms ( 436 ).
- the method 460 may include fewer operations or additional operations.
- two or more operations may be combined and/or the order of the operations may be changed.
- the database in embodiments 400 , 450 and 460 may include factual information.
- the database may include the facts repository.
- Each of the Bloom filters may correspond to a name or objects field, an attribute field, a value field in the facts repository and/or a term field.
- the term field may include terms that are included in one or more of the other fields in the database.
- the term or terms in the record to which the first Bloom filter is applied may include a first or leading term in the record, the first two terms in the record, the last two terms in the record and/or the last term in the record.
- the first Bloom filter may correspond to an attributes field in the database.
- the second Bloom filter may correspond to a values field.
- the Bloom filters may have a false positive rate of around 2% or less, and the Bloom filters may be allocated up to 20 MB of memory with which to perform simulations of access operations to the facts repository in the facts search engine.
- the Bloom filters may be constructed using 2 bytes (i.e., 16 bits) per entry in a respective Bloom filter.
- this is 2 bytes per distinct term.
- an attribute Bloom filter discussed below, for example, with reference to FIG. 11
- Another design parameter for the Bloom filters may be an expected number of insertions (i.e., items or terms inserted into the Bloom filter).
- an optimal value for the number of hashing functions k in the respective Bloom filter i.e., the number k that minimizes the false positive rate.
- k is 7.
- a bound on the false positive rate may be determined, as is known in the art.
- m/n is 16 bits
- k (the number of hashing functions) is 7, and the false positive rate is less than 0.08%.
- a search query When a search query is received, it is processed by the facts search engine and the generic search engine, or in related support hardware in the system (as discussed below with reference to FIG. 5 ).
- the search query In the facts search engine, the search query is normalized to remove or strip extraneous terms. If the search query only has one term remaining, an access operation to the facts repository may not be enabled.
- Each remaining term in the search query is processed using a term Bloom filter corresponding to the term field in the facts repository. If any of the terms in the search query does not appear in a term Bloom filter array, i.e., if the output from the term Bloom filter does not correspond to the positive result, the access operation to the facts repository may not be enabled.
- the terms in the search query are sorted, for example, alphabetically, and a resulting string is processed using a name Bloom filter that corresponds to the name field in the facts repository. If the output from the name Bloom filter corresponds to the positive result, the access operation to the facts repository may be enabled.
- a first or leading term in the search query is processed using an attribute Bloom filter. Remaining terms in the search query are sorted, for example, alphabetically, and a resulting string is processed using a value Bloom filter. If outputs from the attribute Bloom filter and the value Bloom filter correspond to the positive result, the access operation to the facts repository may be enabled.
- the operations discussed in the preceding paragraph may be repeated a plurality of times, where the attribute Bloom filter during an instance of the operations is applied to the first two terms in the search query, the last two terms in the search query and/or the last term in the search query.
- the value filter may be applied to the remaining terms in the search query.
- the generic search engine provides results in response to the search query. If the access operation is enabled, results from the facts search engine and/or the generic search engine may be provided. Results may include a ranked set of documents, snippets of content in a ranked set of documents and/or a ranked set of document locations or links. Results from the facts search engine and the generic search engine may be displayed in separate lists and/or in a common list.
- Bob,” “Smith,” “date” and “birth” may each be tested against the term Bloom filter. If the output from the term Bloom filter is not a positive result, i.e., if any term produces a negative result, the access operation to the facts repository is not enabled. If all the terms in the normalized search query produce a positive result when tested against the term Bloom filter, simulation of the search query continues.
- the terms of the normalized search query are sorted, for example alphabetically to produce “birth Bob date Smith,” and the resulting string is tested against the name Bloom filter. If the result is positive the access operation is enabled, and if the result is negative and the normalized search query has more than one term (which it does, in this example), simulation of the access operation continues.
- the terms in the normalized search query may be parsed in a variety of ways and processed using two of more of the Bloom filters.
- the terms in the normalized query are parsed in four ways, with each parsing producing two sets of terms: Set1 and Set2.
- the four parsings are: 1) Set1: first term, Set2: remaining terms in sorted order; 2) Sett: first two attribute terms, Set2: remaining terms in sorted order; 3) Set1: last term, Set2: remaining terms in sorted order; and 4) Set1: last two attribute terms, Set2: remaining terms in sorted order.
- the Attribute Bloom filter is applied to Sell to produce a first result and the value Bloom filter is applied to Set2 to produce a second result.
- the application of the value Boom filter to “Bob Smith” and the attribute filter to “birth date” will both produce positive results, and therefore the search query is passed (using parsing option #4 described above) to the facts search engine.
- the search query is passed (using parsing option #4 described above) to the facts search engine.
- none of the other pairs of results are both positive, but only one pair of positive results is required for the search query to be passed to the facts search engine for processing.
- additional parsing patterns and/or additional Bloom filter tests could be used when determining whether to send the search query to a facts search engine for processing.
- the access operation to the facts repository is enabled if two of the Bloom filters in a set of Bloom filters including the name Bloom filter, the attribute Bloom filter and the value Bloom filter have an output corresponding to the positive result.
- the search query is a name query, i.e., the output from the name Bloom filter corresponds to the positive result
- the access operation to the facts repository may be enabled.
- FIG. 5 illustrates an embodiment of a search engine system 500 that generates search results in response to search queries from one or more clients 510 .
- Each client 510 may have a search assistant, such as search assistant 512 .
- search engine system 500 is merely exemplary and may take on any other suitable layout or configuration.
- the search engine system 500 is used to search an index of documents, such as billions of web-pages or other documents indexed by modern search engines.
- search engine system 500 can be used as an Internet search engine, for locating documents on the WWW and/or as an Intranet search engine, for locating documents stored on servers or other hosts within an Intranet.
- the methodology described herein is applicable to implementations where only portions of documents, such as titles and abstracts, are stored in the database of the search engine system 500 .
- the search engine system 500 may include multiple data centers each housing a backend.
- the data centers are generally widely dispersed from one another, such as across the continental United States. Search queries submitted by users at one of the clients 510 to the search engine system 500 are routed to an appropriate backend as part of the Domain Name System (DNS), based on current load, geographic locality and/or whether that data center is operating.
- DNS Domain Name System
- Each backend preferably includes multiple query servers, such as query server 516 , coupled to a communications network 514 via a client communication module 518 .
- the communications network 514 may be the Internet, but may also be any local area network (LAN) and/or wide area network (WAN).
- each query server 516 is a Web server that receives search query requests and delivers search results in the form of web pages via HTTP, XML or similar protocols.
- the query server 516 is used within a LAN, i.e., internally and not by the public, it may be an Intranet server.
- the query servers, such as query server 516 are configured to control the search process, including searching a document index, analyzing and formatting the search results.
- Each backend may also include a query receipt, processing and response module 520 for managing the processing of search queries by multiple query processing controllers, such as query processing controller 522 in the generic search and facts query processing controller 538 in the facts search engine, that are coupled to the query server 516 .
- Each query processing controller 522 may be coupled to a cache 530 , an inverse document index 526 and a document database 528 .
- Each query processing controller 522 is configured to receive requests from one of the query servers, such as the query server 516 , and transmit the requests to the cache 530 , the inverse document index 526 and the document database 528 .
- the cache 530 is used to increase search efficiency by temporarily storing previously located search results.
- the efficiency and cost of performing a search is dependent on a number of factors, such as the various combinations of terms and/or keywords used in the search query, the length of time spent on the search and the number of documents indexed.
- the average response time and cost of a search is lowered by storing the search results of previously requested search queries in the temporary storage or cache 530 of the search engine system 500 .
- One of the benefits of keeping a cache of commonly searched information is that it ensures a fast response to subsequent search queries for the same information, as it takes less time to retrieve the information from local memory.
- Another benefit of caching commonly searched information is to reduce the cost of servicing multiple search queries requesting the same information.
- an index contains a pointer to a cache entry corresponding to a current search query.
- the search rank values for the documents in the search results are conveyed to the query processing controller 522 and/or the query server 516 , and are used to construct an ordered search result list.
- the query processing controller 522 constructs the ordered search result list
- the query processing controller 522 transmits to the document database 528 a request for snippets of an appropriate subset of the documents in the ordered search list. For example, the query processing controller 522 may request snippets for the first fifteen or so of the documents in the ordered search result list.
- the document database 528 constructs snippets based on the search query, and returns the snippets to the query processing controller 522 .
- the query processing controller 522 then returns a list of located documents and snippets back to the query server 516 .
- the snippets are stored in the cache server 530 along with the cached results.
- the query processing controller 522 only requests snippets for documents, if any, for which it is unable to obtain valid cached snippets from the cache server 530 .
- the facts query processing controller 538 may similarly manage the processing of a current search query. Prior to accessing one or more instances of a partitioned facts index 542 , one or more instances of a partitioned facts repository 544 and/or a facts cache 546 , the facts query processing controller 538 may utilize Bloom filters 540 to simulate an access operation using an embodiment of the methods described previously. In this way, the facts query processing controller 538 may improve resource allocation and the efficiency of the facts search engine.
- the Bloom filters 540 are located in the query server 516 , which utilizes the Bloom filters 540 to simulate an access operation using an embodiment of the methods described previously.
- the query server 516 may process results provided by the query processing controller 522 (i.e., results from the generic search engine) and/or the facts query processing controller 538 (i.e., results from the facts search engine). The query server 516 may determine if results from the facts search engine correspond to a respective search query (e.g., by testing the results against reliability criteria and/or relevance criteria) and may determine which results are provided to a client, such as client 510 _ 1 , and a format of the results.
- a client such as client 510 _ 1
- FIG. 6 is block diagram illustrating an embodiment of a search engine 600 .
- the search engine 600 may include at least one data processor or central processing unit (CPU) 610 , one or more optional user interfaces 614 , a communications or network interface 620 for communicating with other computers, servers and/or clients, a memory 622 and one or more signal lines 612 for coupling these components to one another.
- the user interface 614 may have one or more keyboards 616 and/or displays 618 .
- the one or more signal lines 612 may constitute one or more communications busses.
- the memory 622 may include high-speed random access memory, including solid state or integrated circuit memory devices such as dynamic random access memory and/or flash memory devices, and/or non-volatile memory, such as one or more magnetic disk storage devices, optical storage devices, and/or static memory.
- the memory 622 may store an operating system 624 , such as LINUX, UNIX or WINDOWS, that includes procedures (or a set of instructions) for handling basic system services and for performing hardware dependent tasks.
- the memory 622 may also store communication procedures (or a set of instructions) in a network communication module 626 . The communication procedures are used for communicating with clients, such as the clients 510 ( FIG. 5 ), and with other servers and computers in the search engine 600 .
- the memory 622 may also store the query server 516 (or a set of instructions), query processing controller 522 (or a set of instructions), facts processing controller 538 (or a set of instructions), facts index 542 , facts repository 544 and answer identification (or a set of instructions) 636 .
- the query server 516 may include the following elements, or a subset or superset of such elements: the client communication module 518 and the query receipt, processing and response module 520 .
- the facts processing controller 538 may include Bloom filters 540 , a term identification module 630 , a normalization module 632 and a sorting module 634 .
- FIG. 6 shows search engine 600 as a number of discrete items
- FIG. 6 is intended more as a functional description of the various features which may be present in a search engine system rather than as a structural schematic of the embodiments described herein.
- the functions of the search engine 600 may be distributed over a large number of servers or computers, with various groups of the servers performing particular subsets of those functions. Items shown separately in FIG. 6 could be combined and some items could be separated. For example, some items shown separately in FIG. 6 could be implemented on single servers and single items could be implemented by one or more servers.
- the actual number of servers in a search engine system and how features, such as the query processing controller 522 and/or the facts processing controller 538 , are allocated among them will vary from one implementation to another, and may depend in part on the amount of information stored by the system and/or the amount data traffic that the system must handle during peak usage periods as well as during average usage periods.
- FIG. 7 illustrates a block diagram of an embodiment of a client system 700 .
- the client system 700 may include at least one data processor or central processing unit (CPU) 710 , one or more optional user interfaces 714 , a communications or network interface 720 for communicating with other computers, servers and/or clients, a memory 722 and one or more signal lines 712 for coupling these components to one another.
- the user interface 714 may have one or more keyboards 716 and/or one or more displays 718 .
- the one or more signal lines 712 may constitute one or more communications busses.
- the memory 722 may include high-speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices, and may include non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices. Memory 722 may optionally include one or more storage devices remotely located from the CPU(s) 710 .
- the memory 722 may store an operating system 724 , such as LINUX, UNIX or WINDOWS, that includes procedures (or a set of instructions) for handling basic system services and for performing hardware dependent tasks.
- the memory 722 may also store communication procedures (or a set of instructions) in a network communication module 726 . The communication procedures are used for communicating with a search engine.
- the memory may also include a browser or browser tool module 728 (or a set of instructions) and a search assistant module 730 (or a set of instructions).
- the search assistant module 730 may include an entry and selection monitoring module 732 for monitoring user input, a transmission module 734 for sending a search query, a search results receipt module 736 for receiving search results, and a display module 738 for displaying search results as well as web pages, html or XML documents, and/or other documents.
- one or more of the modules and/or applications in the memory 722 may be stored in a server computer at a different location than the user.
- Each of the above identified modules and applications corresponds to a set of instructions for performing one or more functions described above. These modules (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules.
- the various modules and sub-modules may be rearranged and/or combined.
- the memory 722 may include additional modules and/or sub-modules, or fewer modules and/or sub-modules.
- the search assistant module 730 may be integrated into the browser/tool module 728 .
- the memory 722 therefore, may include a subset or a superset of the above identified modules and/or sub-modules.
- FIG. 8 is a block diagram illustrating an embodiment of an object data structure 800 , herein called an object for convenience, stored in 544 ( FIG. 5 ).
- the facts repository 544 may include multiple instances of such objects 800 .
- the object 800 includes an object ID 810 , one or more names 812 of the object, and one or more attribute-value records 830 .
- one or more of the names 812 may have a similar structure to the one or more attribute-value records 830 .
- An attribute-value record 830 includes an attribute 814 associated with the object, one or more corresponding values 816 associated with the object, one or more links 818 to related document and/or content locations, and a list of one or more sources 820 , such as documents, of the attribute-value pair.
- the object name or names 812 are also stored in one or more attribute-value records 830 .
- FIG. 9 is a block diagram illustrating an embodiment of a Bloom filter 900 .
- the Bloom filter 900 includes one or more entries 910 for identifying hashing functions 912 used by the Bloom filter and an array 914 .
- the Bloom filter 900 includes the set of hashing functions 912 .
- the array 914 stores flag values (e.g., bits set to “1”) at array positions identified by applying the hashing functions 912 to a set of terms.
- FIG. 10 is a block diagram illustrating an embodiment of a lexicography data structure 1000 .
- the lexicography data structure 1000 includes multiple entries 1010 , each storing or identifying a lexicography pattern 1012 and a sub-field list 1014 .
- a respective sub-field list may include one or more term types, such as nouns, verbs, adjectives and/or adverbs.
- FIG. 11 is a block diagram illustrating an embodiment 1100 of processing content in a facts repository 1110 using Bloom filters 314 .
- the content may include a name field 1112 , an attribute field 1114 and a value field 1116 .
- outputs from the hashing functions 316 are stored in the Bloom filter array 318 .
- the output of the hashing function 316 - 1 is compared to corresponding entries in the Bloom filter array 318 - 1 to determine if there is a match. If yes, an output from the Bloom filter 314 - 1 corresponds to the positive result.
- one or more of the outputs from the Bloom filters 314 may be used to simulate an access operation to a database, such as the facts repository 1110 , thereby improving the performance and the resource allocation in the facts search engine.
- embodiment 1100 illustrates the processing of a respective field, such as the name field 1112 , by a respective Bloom filter, such as Bloom filter 314 - 1
- content such as one or more of the fields in the facts repository 1110
- Bloom filters 314 are illustrated with one hashing function 316
- Bloom filter 314 - 4 processes two or more of the fields in the facts repository 1110 .
- Bloom filter 314 - 4 corresponds to the term Bloom filter discussed previously.
Abstract
Description
Claims (34)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/097,676 US8239394B1 (en) | 2005-03-31 | 2005-03-31 | Bloom filters for query simulation |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/097,676 US8239394B1 (en) | 2005-03-31 | 2005-03-31 | Bloom filters for query simulation |
Publications (1)
Publication Number | Publication Date |
---|---|
US8239394B1 true US8239394B1 (en) | 2012-08-07 |
Family
ID=46583337
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/097,676 Active 2030-09-04 US8239394B1 (en) | 2005-03-31 | 2005-03-31 | Bloom filters for query simulation |
Country Status (1)
Country | Link |
---|---|
US (1) | US8239394B1 (en) |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110246439A1 (en) * | 2010-04-06 | 2011-10-06 | Microsoft Corporation | Augmented query search |
US20120158756A1 (en) * | 2010-12-20 | 2012-06-21 | Jimenez Jaime | Searching in Peer to Peer Networks |
US20130086355A1 (en) * | 2011-09-30 | 2013-04-04 | International Business Machines Corporation | Distributed Data Scalable Adaptive Map-Reduce Framework |
US20130166576A1 (en) * | 2011-12-22 | 2013-06-27 | Sap Ag | Dynamic, hierarchical bloom filters for network routing |
EP2778982A1 (en) * | 2013-03-14 | 2014-09-17 | Wal-Mart Stores, Inc. | Attribute detection |
US20150379022A1 (en) * | 2014-06-27 | 2015-12-31 | General Electric Company | Integrating Execution of Computing Analytics within a Mapreduce Processing Environment |
US20160267072A1 (en) * | 2015-03-12 | 2016-09-15 | Microsoft Technology Licensing, Llc | Context sensitive phrase identification |
US20170011022A1 (en) * | 2014-05-02 | 2017-01-12 | Palantir Technologies Inc. | Systems and methods for active column filtering |
US20170323199A1 (en) * | 2016-05-05 | 2017-11-09 | Baidu Usa Llc | Method and system for training and neural network models for large number of discrete features for information rertieval |
CN108090125A (en) * | 2017-11-14 | 2018-05-29 | 西北工业大学 | A kind of data de-duplication method and device of non-query formulation |
US11347808B1 (en) * | 2018-12-03 | 2022-05-31 | Amazon Technologies, Inc. | Dynamically-adaptive bloom-filter |
Citations (117)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4888690A (en) | 1985-01-11 | 1989-12-19 | Wang Laboratories, Inc. | Interactive error handling means in database management |
US4899292A (en) | 1988-03-02 | 1990-02-06 | Image Storage/Retrieval Systems, Inc. | System for storing and retrieving text and associated graphics |
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5544051A (en) | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5778378A (en) | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US5815415A (en) | 1996-01-19 | 1998-09-29 | Bentley Systems, Incorporated | Computer system for portable persistent modeling |
US5832479A (en) | 1992-12-08 | 1998-11-03 | Microsoft Corporation | Method for compressing full text indexes with document identifiers and location offsets |
US5870739A (en) | 1996-09-20 | 1999-02-09 | Novell, Inc. | Hybrid query apparatus and method |
US5905980A (en) | 1996-10-31 | 1999-05-18 | Fuji Xerox Co., Ltd. | Document processing apparatus, word extracting apparatus, word extracting method and storage medium for storing word extracting program |
US5946692A (en) | 1997-05-08 | 1999-08-31 | At & T Corp | Compressed representation of a data base that permits AD HOC querying |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6006221A (en) | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US6014661A (en) | 1996-05-06 | 2000-01-11 | Ivee Development Ab | System and method for automatic analysis of data bases and for user-controlled dynamic querying |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6101515A (en) | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US6105020A (en) * | 1999-10-11 | 2000-08-15 | International Business Machines Corporation | System and method for identifying and constructing star joins for execution by bitmap ANDing |
US6105030A (en) | 1998-02-27 | 2000-08-15 | Oracle Corporation | Method and apparatus for copying data that resides in a database |
US6216138B1 (en) | 1994-04-22 | 2001-04-10 | Brooks Automation Inc. | Computer interface system for automatically generating graphical representations of computer operations linked together according to functional relationships |
US6222540B1 (en) | 1997-11-21 | 2001-04-24 | Portola Dimensional Systems, Inc. | User-friendly graphics generator including automatic correlation |
US6263335B1 (en) | 1996-02-09 | 2001-07-17 | Textwise Llc | Information extraction system and method using concept-relation-concept (CRC) triples |
US6263328B1 (en) | 1999-04-09 | 2001-07-17 | International Business Machines Corporation | Object oriented query model and process for complex heterogeneous database queries |
US6304864B1 (en) | 1999-04-20 | 2001-10-16 | Textwise Llc | System for retrieving multimedia information from the internet using multiple evolving intelligent agents |
US6311189B1 (en) | 1998-03-11 | 2001-10-30 | Altavista Company | Technique for matching a query to a portion of media |
US6327574B1 (en) | 1998-07-07 | 2001-12-04 | Encirq Corporation | Hierarchical models of consumer attributes for targeting content in a privacy-preserving manner |
US6326962B1 (en) | 1996-12-23 | 2001-12-04 | Doubleagent Llc | Graphic user interface for database system |
US6377943B1 (en) | 1999-01-20 | 2002-04-23 | Oracle Corp. | Initial ordering of tables for database queries |
US20020055954A1 (en) | 2000-08-01 | 2002-05-09 | Matthias Breuer | Methods and systems for inputting data into spreadsheet documents |
US20020065814A1 (en) | 1997-07-01 | 2002-05-30 | Hitachi, Ltd. | Method and apparatus for searching and displaying structured document |
US20020065815A1 (en) | 2000-10-04 | 2002-05-30 | Xcelerix, Inc. | Systems and methods for searching a database |
JP2002157276A (en) | 2000-11-16 | 2002-05-31 | Hitachi Software Eng Co Ltd | Method and system for supporting solution of problem |
US20020128818A1 (en) | 1996-12-02 | 2002-09-12 | Ho Chi Fai | Method and system to answer a natural-language question |
US20020154175A1 (en) | 2001-01-04 | 2002-10-24 | James Abello | System and method for visualizing massive multi-digraphs |
US6480194B1 (en) | 1996-11-12 | 2002-11-12 | Silicon Graphics, Inc. | Computer-related method, system, and program product for controlling data visualization in external dimension(s) |
US20020173984A1 (en) | 2000-05-22 | 2002-11-21 | Robertson James A. | Method and system for implementing improved containers in a global ecosystem of interrelated services |
JP2002540506A (en) | 1999-03-19 | 2002-11-26 | アスク ジーヴス インコーポレイテッド | Glamor template query system |
US20030005036A1 (en) | 2001-04-06 | 2003-01-02 | Michael Mitzenmacher | Distributed, compressed Bloom filter Web cache server |
US6519631B1 (en) | 1999-08-13 | 2003-02-11 | Atomica Corporation | Web-based information retrieval |
US6529900B1 (en) | 1999-01-14 | 2003-03-04 | International Business Machines Corporation | Method and apparatus for data visualization |
US20030069880A1 (en) | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US20030097357A1 (en) | 2000-05-18 | 2003-05-22 | Ferrari Adam J. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US20030115485A1 (en) * | 2001-12-14 | 2003-06-19 | Milliken Walter Clark | Hash-based systems and methods for detecting, preventing, and tracing network worms and viruses |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US20030120644A1 (en) | 2001-12-17 | 2003-06-26 | International Business Machines Corporation | Method, apparatus, and computer program product for locating data in large datasets |
US20030120659A1 (en) | 2000-03-20 | 2003-06-26 | Sridhar Mandayam Anandampillai | Systems for developing websites and methods therefor |
US20030120373A1 (en) | 2001-12-26 | 2003-06-26 | Eames John D. | System and method for analyzing controlling forming sections of a paper machine in operation |
US6606659B1 (en) | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US6609123B1 (en) | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US6629097B1 (en) | 1999-04-28 | 2003-09-30 | Douglas K. Keith | Displaying implicit associations among items in loosely-structured data sets |
JP2003281173A (en) | 2002-03-22 | 2003-10-03 | Toshiba Corp | Information collection system, information collecting method and program for causing computer to collect information |
US20030195872A1 (en) | 1999-04-12 | 2003-10-16 | Paul Senn | Web-based information content analyzer and information dimension dictionary |
US6643641B1 (en) | 2000-04-27 | 2003-11-04 | Russell Snyder | Web search engine with graphic snapshots |
US20030208665A1 (en) | 2002-05-01 | 2003-11-06 | Jih-Kwon Peir | Reducing data speculation penalty with early cache hit/miss prediction |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US20040015566A1 (en) | 2002-07-19 | 2004-01-22 | Matthew Anderson | Electronic item management and archival system and method of operating the same |
US20040030731A1 (en) * | 2002-04-03 | 2004-02-12 | Liviu Iftode | System and method for accessing files in a network |
US20040107125A1 (en) | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US20040122844A1 (en) | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | Method, system, and program for use of metadata to create multidimensional cubes in a relational database |
US20040125137A1 (en) | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
US20040167909A1 (en) | 2002-12-06 | 2004-08-26 | Attensity Corporation | Methods and products for integrating mixed format data |
US20040220904A1 (en) | 2003-04-30 | 2004-11-04 | International Business Machines Corporation | Information retrieval system and method using index ANDing for improving performance |
US20040236655A1 (en) | 2003-05-19 | 2004-11-25 | Pacific Edge Software, Inc. | Method and system for object-oriented management of multi-dimensional data |
US6832218B1 (en) | 2000-09-22 | 2004-12-14 | International Business Machines Corporation | System and method for associating search results |
US20040255237A1 (en) | 2003-06-10 | 2004-12-16 | Simon Tong | Document search engine including highlighting of confident results |
WO2004114163A2 (en) | 2003-02-19 | 2004-12-29 | Insightful Corporation | Method and system for enhanced data searching |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20050022009A1 (en) * | 2003-06-05 | 2005-01-27 | Aguilera Macros K. | System and method for preventing replay attacks |
US6850896B1 (en) | 1999-10-28 | 2005-02-01 | Market-Touch Corporation | Method and system for managing and providing sales data using world wide web |
US20050033803A1 (en) * | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050039033A1 (en) | 2003-07-25 | 2005-02-17 | Activeviews, Inc. | Method and system for building a report for execution against a data store |
US20050050016A1 (en) | 2003-09-02 | 2005-03-03 | International Business Machines Corporation | Selective path signatures for query processing over a hierarchical tagged data structure |
US20050055327A1 (en) * | 2003-09-08 | 2005-03-10 | International Business Machines Corporation | Uniform search system and method for selectively sharing distributed access-controlled documents |
US20050060277A1 (en) | 2003-09-15 | 2005-03-17 | Zlatanov Teodore Zlatkov | Computer systems and methods for platform independent presentation design |
US20050057566A1 (en) | 2003-09-11 | 2005-03-17 | International Business Machines Corporation | Rich graphic visualization generation from abstract data representation |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20050076012A1 (en) | 2003-09-23 | 2005-04-07 | Udi Manber | Personalized searchable library with highlighting capabilities |
US20050086520A1 (en) * | 2003-08-14 | 2005-04-21 | Sarang Dharmapurikar | Method and apparatus for detecting predefined signatures in packet payload using bloom filters |
US6885990B1 (en) | 1999-05-31 | 2005-04-26 | Nippon Telegraph And Telephone Company | Speech recognition based on interactive information retrieval scheme using dialogue control to reduce user stress |
US20050120004A1 (en) * | 2003-10-17 | 2005-06-02 | Stata Raymond P. | Systems and methods for indexing content for fast and scalable retrieval |
US6928436B2 (en) | 2002-02-28 | 2005-08-09 | Ilog Sa | Interactive generation of graphical visualizations of large data structures |
US20050187898A1 (en) * | 2004-02-05 | 2005-08-25 | Nec Laboratories America, Inc. | Data Lookup architecture |
US20050216464A1 (en) | 2004-03-27 | 2005-09-29 | Microsoft Corporation | Automated authoring tool and method to facilitate inclusion of maps and other geographical data into travelogues |
US20050219929A1 (en) * | 2004-03-30 | 2005-10-06 | Navas Julio C | Method and apparatus achieving memory and transmission overhead reductions in a content routing network |
US6961723B2 (en) | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20050256825A1 (en) | 2003-06-20 | 2005-11-17 | International Business Machines Corporation | Viewing annotations across multiple applications |
US6968343B2 (en) | 2000-09-01 | 2005-11-22 | Borland Software Corporation | Methods and systems for integrating process modeling and project planning |
US20050268212A1 (en) | 2004-05-28 | 2005-12-01 | Michael Dagel | System, apparatus, and method for desktop-based creation and publication of a periodic community newsletter |
US20060004851A1 (en) | 2004-07-02 | 2006-01-05 | Graphlogic Inc. | Object process graph relational database interface |
US20060020582A1 (en) | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | Method and system for processing abstract derived entities defined in a data abstraction model |
US20060047838A1 (en) | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US7013308B1 (en) | 2000-11-28 | 2006-03-14 | Semscript Ltd. | Knowledge storage and retrieval system and method |
US7031955B1 (en) | 2001-04-27 | 2006-04-18 | I2 Technologies Us, Inc. | Optimization using a multi-dimensional data model |
US20060085386A1 (en) | 2004-10-19 | 2006-04-20 | Microsoft Corporation | Two pass calculation to optimize formula calculations for a spreadsheet |
US20060085465A1 (en) | 2004-10-15 | 2006-04-20 | Oracle International Corporation | Method(s) for updating database object metadata |
US7043521B2 (en) | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
US20060149700A1 (en) | 2004-11-11 | 2006-07-06 | Gladish Randolph J | System and method for automatic geospatial web network generation via metadata transformation |
US20060173824A1 (en) | 2005-02-01 | 2006-08-03 | Metalincs Corporation | Electronic communication analysis and visualization |
US7100083B2 (en) | 2000-08-04 | 2006-08-29 | Sun Microsystems, Inc. | Checks for product knowledge management |
US20060206508A1 (en) | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20060224582A1 (en) | 2005-03-31 | 2006-10-05 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US7146538B2 (en) | 2003-03-28 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Bus interface module |
US7158983B2 (en) | 2002-09-23 | 2007-01-02 | Battelle Memorial Institute | Text analysis technique |
US20070022085A1 (en) | 2005-07-22 | 2007-01-25 | Parashuram Kulkarni | Techniques for unsupervised web content discovery and automated query generation for crawling the hidden web |
US20070055656A1 (en) | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
US20070067108A1 (en) * | 2005-03-03 | 2007-03-22 | Buhler Jeremy D | Method and apparatus for performing biosequence similarity searching |
US20070179965A1 (en) | 2006-01-27 | 2007-08-02 | Hogue Andrew W | Designating data objects for analysis |
US20070203868A1 (en) | 2006-01-27 | 2007-08-30 | Betz Jonathan T | Object categorization for information extraction |
US20070203867A1 (en) | 2006-01-27 | 2007-08-30 | Hogue Andrew W | Data object visualization |
US20070271249A1 (en) | 2003-06-20 | 2007-11-22 | Cragun Brian J | Heterogeneous multi-level extendable indexing for general purpose annotation systems |
US20080005064A1 (en) | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20080097958A1 (en) | 2004-06-17 | 2008-04-24 | The Regents Of The University Of California | Method and Apparatus for Retrieving and Indexing Hidden Pages |
US20080209444A1 (en) | 2007-02-27 | 2008-08-28 | Garrett Andrew J | Method, system and program product for defining imports into and exports out from a database system using spread sheets by use of a control language |
US7669115B2 (en) | 2000-05-30 | 2010-02-23 | Outlooksoft Corporation | Method and system for facilitating information exchange |
-
2005
- 2005-03-31 US US11/097,676 patent/US8239394B1/en active Active
Patent Citations (119)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4888690A (en) | 1985-01-11 | 1989-12-19 | Wang Laboratories, Inc. | Interactive error handling means in database management |
US4899292A (en) | 1988-03-02 | 1990-02-06 | Image Storage/Retrieval Systems, Inc. | System for storing and retrieving text and associated graphics |
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5832479A (en) | 1992-12-08 | 1998-11-03 | Microsoft Corporation | Method for compressing full text indexes with document identifiers and location offsets |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5544051A (en) | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US6216138B1 (en) | 1994-04-22 | 2001-04-10 | Brooks Automation Inc. | Computer interface system for automatically generating graphical representations of computer operations linked together according to functional relationships |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US6006221A (en) | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US5815415A (en) | 1996-01-19 | 1998-09-29 | Bentley Systems, Incorporated | Computer system for portable persistent modeling |
US6263335B1 (en) | 1996-02-09 | 2001-07-17 | Textwise Llc | Information extraction system and method using concept-relation-concept (CRC) triples |
US5778378A (en) | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US6014661A (en) | 1996-05-06 | 2000-01-11 | Ivee Development Ab | System and method for automatic analysis of data bases and for user-controlled dynamic querying |
US6101515A (en) | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US5870739A (en) | 1996-09-20 | 1999-02-09 | Novell, Inc. | Hybrid query apparatus and method |
US5905980A (en) | 1996-10-31 | 1999-05-18 | Fuji Xerox Co., Ltd. | Document processing apparatus, word extracting apparatus, word extracting method and storage medium for storing word extracting program |
US6480194B1 (en) | 1996-11-12 | 2002-11-12 | Silicon Graphics, Inc. | Computer-related method, system, and program product for controlling data visualization in external dimension(s) |
US20020128818A1 (en) | 1996-12-02 | 2002-09-12 | Ho Chi Fai | Method and system to answer a natural-language question |
US6326962B1 (en) | 1996-12-23 | 2001-12-04 | Doubleagent Llc | Graphic user interface for database system |
US5946692A (en) | 1997-05-08 | 1999-08-31 | At & T Corp | Compressed representation of a data base that permits AD HOC querying |
US20020065814A1 (en) | 1997-07-01 | 2002-05-30 | Hitachi, Ltd. | Method and apparatus for searching and displaying structured document |
US6222540B1 (en) | 1997-11-21 | 2001-04-24 | Portola Dimensional Systems, Inc. | User-friendly graphics generator including automatic correlation |
US6105030A (en) | 1998-02-27 | 2000-08-15 | Oracle Corporation | Method and apparatus for copying data that resides in a database |
US6311189B1 (en) | 1998-03-11 | 2001-10-30 | Altavista Company | Technique for matching a query to a portion of media |
US6327574B1 (en) | 1998-07-07 | 2001-12-04 | Encirq Corporation | Hierarchical models of consumer attributes for targeting content in a privacy-preserving manner |
US6529900B1 (en) | 1999-01-14 | 2003-03-04 | International Business Machines Corporation | Method and apparatus for data visualization |
US6377943B1 (en) | 1999-01-20 | 2002-04-23 | Oracle Corp. | Initial ordering of tables for database queries |
JP2002540506A (en) | 1999-03-19 | 2002-11-26 | アスク ジーヴス インコーポレイテッド | Glamor template query system |
US6584464B1 (en) | 1999-03-19 | 2003-06-24 | Ask Jeeves, Inc. | Grammar template query system |
US6263328B1 (en) | 1999-04-09 | 2001-07-17 | International Business Machines Corporation | Object oriented query model and process for complex heterogeneous database queries |
US20030195872A1 (en) | 1999-04-12 | 2003-10-16 | Paul Senn | Web-based information content analyzer and information dimension dictionary |
US6304864B1 (en) | 1999-04-20 | 2001-10-16 | Textwise Llc | System for retrieving multimedia information from the internet using multiple evolving intelligent agents |
US6629097B1 (en) | 1999-04-28 | 2003-09-30 | Douglas K. Keith | Displaying implicit associations among items in loosely-structured data sets |
US20040107125A1 (en) | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US6885990B1 (en) | 1999-05-31 | 2005-04-26 | Nippon Telegraph And Telephone Company | Speech recognition based on interactive information retrieval scheme using dialogue control to reduce user stress |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US6519631B1 (en) | 1999-08-13 | 2003-02-11 | Atomica Corporation | Web-based information retrieval |
US6609123B1 (en) | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US6105020A (en) * | 1999-10-11 | 2000-08-15 | International Business Machines Corporation | System and method for identifying and constructing star joins for execution by bitmap ANDing |
US6850896B1 (en) | 1999-10-28 | 2005-02-01 | Market-Touch Corporation | Method and system for managing and providing sales data using world wide web |
US6718324B2 (en) | 2000-01-14 | 2004-04-06 | International Business Machines Corporation | Metadata search results ranking system |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US6606659B1 (en) | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US20030120659A1 (en) | 2000-03-20 | 2003-06-26 | Sridhar Mandayam Anandampillai | Systems for developing websites and methods therefor |
US6643641B1 (en) | 2000-04-27 | 2003-11-04 | Russell Snyder | Web search engine with graphic snapshots |
US20030097357A1 (en) | 2000-05-18 | 2003-05-22 | Ferrari Adam J. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US20020173984A1 (en) | 2000-05-22 | 2002-11-21 | Robertson James A. | Method and system for implementing improved containers in a global ecosystem of interrelated services |
US7669115B2 (en) | 2000-05-30 | 2010-02-23 | Outlooksoft Corporation | Method and system for facilitating information exchange |
US20020055954A1 (en) | 2000-08-01 | 2002-05-09 | Matthias Breuer | Methods and systems for inputting data into spreadsheet documents |
US7100083B2 (en) | 2000-08-04 | 2006-08-29 | Sun Microsystems, Inc. | Checks for product knowledge management |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US6968343B2 (en) | 2000-09-01 | 2005-11-22 | Borland Software Corporation | Methods and systems for integrating process modeling and project planning |
US6832218B1 (en) | 2000-09-22 | 2004-12-14 | International Business Machines Corporation | System and method for associating search results |
US20020065815A1 (en) | 2000-10-04 | 2002-05-30 | Xcelerix, Inc. | Systems and methods for searching a database |
JP2002157276A (en) | 2000-11-16 | 2002-05-31 | Hitachi Software Eng Co Ltd | Method and system for supporting solution of problem |
US7013308B1 (en) | 2000-11-28 | 2006-03-14 | Semscript Ltd. | Knowledge storage and retrieval system and method |
US20020154175A1 (en) | 2001-01-04 | 2002-10-24 | James Abello | System and method for visualizing massive multi-digraphs |
US20030005036A1 (en) | 2001-04-06 | 2003-01-02 | Michael Mitzenmacher | Distributed, compressed Bloom filter Web cache server |
US7031955B1 (en) | 2001-04-27 | 2006-04-18 | I2 Technologies Us, Inc. | Optimization using a multi-dimensional data model |
US6961723B2 (en) | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20030069880A1 (en) | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US20060206508A1 (en) | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20030115485A1 (en) * | 2001-12-14 | 2003-06-19 | Milliken Walter Clark | Hash-based systems and methods for detecting, preventing, and tracing network worms and viruses |
US20030120644A1 (en) | 2001-12-17 | 2003-06-26 | International Business Machines Corporation | Method, apparatus, and computer program product for locating data in large datasets |
US20030120373A1 (en) | 2001-12-26 | 2003-06-26 | Eames John D. | System and method for analyzing controlling forming sections of a paper machine in operation |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US6928436B2 (en) | 2002-02-28 | 2005-08-09 | Ilog Sa | Interactive generation of graphical visualizations of large data structures |
US7043521B2 (en) | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
JP2003281173A (en) | 2002-03-22 | 2003-10-03 | Toshiba Corp | Information collection system, information collecting method and program for causing computer to collect information |
US20040030731A1 (en) * | 2002-04-03 | 2004-02-12 | Liviu Iftode | System and method for accessing files in a network |
US20030208665A1 (en) | 2002-05-01 | 2003-11-06 | Jih-Kwon Peir | Reducing data speculation penalty with early cache hit/miss prediction |
US20040015566A1 (en) | 2002-07-19 | 2004-01-22 | Matthew Anderson | Electronic item management and archival system and method of operating the same |
US7158983B2 (en) | 2002-09-23 | 2007-01-02 | Battelle Memorial Institute | Text analysis technique |
US20040167909A1 (en) | 2002-12-06 | 2004-08-26 | Attensity Corporation | Methods and products for integrating mixed format data |
US20040122844A1 (en) | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | Method, system, and program for use of metadata to create multidimensional cubes in a relational database |
US20040125137A1 (en) | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
WO2004114163A2 (en) | 2003-02-19 | 2004-12-29 | Insightful Corporation | Method and system for enhanced data searching |
US7146538B2 (en) | 2003-03-28 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Bus interface module |
US20040220904A1 (en) | 2003-04-30 | 2004-11-04 | International Business Machines Corporation | Information retrieval system and method using index ANDing for improving performance |
US20040236655A1 (en) | 2003-05-19 | 2004-11-25 | Pacific Edge Software, Inc. | Method and system for object-oriented management of multi-dimensional data |
US20050022009A1 (en) * | 2003-06-05 | 2005-01-27 | Aguilera Macros K. | System and method for preventing replay attacks |
US20040255237A1 (en) | 2003-06-10 | 2004-12-16 | Simon Tong | Document search engine including highlighting of confident results |
US20070271249A1 (en) | 2003-06-20 | 2007-11-22 | Cragun Brian J | Heterogeneous multi-level extendable indexing for general purpose annotation systems |
US20050256825A1 (en) | 2003-06-20 | 2005-11-17 | International Business Machines Corporation | Viewing annotations across multiple applications |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20050033803A1 (en) * | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050039033A1 (en) | 2003-07-25 | 2005-02-17 | Activeviews, Inc. | Method and system for building a report for execution against a data store |
US20050086520A1 (en) * | 2003-08-14 | 2005-04-21 | Sarang Dharmapurikar | Method and apparatus for detecting predefined signatures in packet payload using bloom filters |
US20050050016A1 (en) | 2003-09-02 | 2005-03-03 | International Business Machines Corporation | Selective path signatures for query processing over a hierarchical tagged data structure |
US20050055327A1 (en) * | 2003-09-08 | 2005-03-10 | International Business Machines Corporation | Uniform search system and method for selectively sharing distributed access-controlled documents |
US20050057566A1 (en) | 2003-09-11 | 2005-03-17 | International Business Machines Corporation | Rich graphic visualization generation from abstract data representation |
US20050060277A1 (en) | 2003-09-15 | 2005-03-17 | Zlatanov Teodore Zlatkov | Computer systems and methods for platform independent presentation design |
US20050076012A1 (en) | 2003-09-23 | 2005-04-07 | Udi Manber | Personalized searchable library with highlighting capabilities |
US20050120004A1 (en) * | 2003-10-17 | 2005-06-02 | Stata Raymond P. | Systems and methods for indexing content for fast and scalable retrieval |
US20050187898A1 (en) * | 2004-02-05 | 2005-08-25 | Nec Laboratories America, Inc. | Data Lookup architecture |
US20050216464A1 (en) | 2004-03-27 | 2005-09-29 | Microsoft Corporation | Automated authoring tool and method to facilitate inclusion of maps and other geographical data into travelogues |
US20050219929A1 (en) * | 2004-03-30 | 2005-10-06 | Navas Julio C | Method and apparatus achieving memory and transmission overhead reductions in a content routing network |
US20050268212A1 (en) | 2004-05-28 | 2005-12-01 | Michael Dagel | System, apparatus, and method for desktop-based creation and publication of a periodic community newsletter |
US20080097958A1 (en) | 2004-06-17 | 2008-04-24 | The Regents Of The University Of California | Method and Apparatus for Retrieving and Indexing Hidden Pages |
US20060047838A1 (en) | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US20060004851A1 (en) | 2004-07-02 | 2006-01-05 | Graphlogic Inc. | Object process graph relational database interface |
US20060020582A1 (en) | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | Method and system for processing abstract derived entities defined in a data abstraction model |
US20060085465A1 (en) | 2004-10-15 | 2006-04-20 | Oracle International Corporation | Method(s) for updating database object metadata |
US20060085386A1 (en) | 2004-10-19 | 2006-04-20 | Microsoft Corporation | Two pass calculation to optimize formula calculations for a spreadsheet |
US20060149700A1 (en) | 2004-11-11 | 2006-07-06 | Gladish Randolph J | System and method for automatic geospatial web network generation via metadata transformation |
US20060173824A1 (en) | 2005-02-01 | 2006-08-03 | Metalincs Corporation | Electronic communication analysis and visualization |
US20070067108A1 (en) * | 2005-03-03 | 2007-03-22 | Buhler Jeremy D | Method and apparatus for performing biosequence similarity searching |
US20060224582A1 (en) | 2005-03-31 | 2006-10-05 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US20080005064A1 (en) | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20070022085A1 (en) | 2005-07-22 | 2007-01-25 | Parashuram Kulkarni | Techniques for unsupervised web content discovery and automated query generation for crawling the hidden web |
US20070055656A1 (en) | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
US20070203867A1 (en) | 2006-01-27 | 2007-08-30 | Hogue Andrew W | Data object visualization |
US20070203868A1 (en) | 2006-01-27 | 2007-08-30 | Betz Jonathan T | Object categorization for information extraction |
US20070179965A1 (en) | 2006-01-27 | 2007-08-02 | Hogue Andrew W | Designating data objects for analysis |
US20080209444A1 (en) | 2007-02-27 | 2008-08-28 | Garrett Andrew J | Method, system and program product for defining imports into and exports out from a database system using spread sheets by use of a control language |
Non-Patent Citations (43)
Title |
---|
"Bloom filter", Wikipedia, http://en.wikipedia.org/wiki/Bloom-filter (last modified Feb. 13, 2005). |
"Bloom Filters-the math", http://www.cs.wisc.edu/~cao/papers/summary-cache/node8.html. |
"Bloom Filters—the math", http://www.cs.wisc.edu/˜cao/papers/summary-cache/node8.html. |
Bharat, Personalized, Interactive News on the Web, Georgia Institute of Technology, Atlanta, GA, May 5, 1997, pp. 1-22. |
Brill, An Analysis of the AskMSR Question-Answering System, Proceedings of the Conference of Empirical Methods in Natural Language Processing (EMNLP), Jul. 2002, 8 pages. |
Brin, Extracting Patterns and Relations from the World Wide Web, Computer Science Department, Stanford University, 1999, 12 pages. |
Brin, The Anatomy of a Large-Scale Hypertextual Web Search Engine, 7th International World Wide Web Conference, Brisbane, Australia, Apr. 14-18, 1998, pp. 1-26. |
Burton H. Bloom, "Space/Time Trade-offs in Hash Coding with Allowable Error", Communications of the ACM, vol. 13, No. 7, Jul. 1970, pp. 422-426. |
Chang, IEPAD: Information Extraction Based on Pattern Discovery, WWW10 '01, ACM, Hong Kong, May 1-5, 2001, pp. 681-688. |
Chesnais, The Fishwrap Personalized News System, Community Networking, Integrated Multimedia Services to the Home, Proceedings of the Second International Workshop on, Jun. 20-22, 1995, pp. 275-282. |
Chu-Carroll, A Multi-Strategy with Multi-Source Approach to Question Answering, IBM T.J. Watson Research Center, Yorktown Heights, NY, 2006, 8 pages. |
Clarke, FrontPage 2002 Tutorials-Adding Functionality to your Website with FrontPage 2002 Part II-Navigation, ABC-All 'Bout Computers, Apr. 2002, vol. 11, 8 pages. |
Cowie, MOQA: Meaning-Oriented Question-Answering, Proceedings of RIAO 2004, 15 pages. |
Dean, MapReduce: Simplified Data Processing on Large Clusters, OSDI, 2004, pp. 1-13. |
Etzioni, Web-scale Information Extraction in KnowItAll (Preliminary Results), WWW2004, ACM, New York, NY, May 17-20, 2004, 11 pages. |
Freitag, Boosted Wrapper Induction, American Association for Artificial Intelligence, 2000, 7 pages. |
Google Inc., International Preliminary Report on Patentability, PCT/US2007/061158, Jul. 29, 2008, 7 pages. |
Google Inc., International Search Report/Written Opinion, PCT/US06/07639, Sep. 13, 2006, 5 pages. |
Google Inc., International Search Report/Written Opinion, PCT/US07/061157, Feb. 15, 2008, 10 pages. |
Google Inc., International Search Report/Written Opinion, PCT/US07/61156, Feb. 11, 2008, 5 pages. |
Google Inc., International Search Report/Written Opinion, PCT/US2006/010965, Jul. 5, 2006, 9 pages. |
Google Inc., Office Action, Japanese Patent Application 2008-504204, Oct. 12, 2011, 4 pgs. |
Guha, Disambiguating People in Search, WWW2004, New York, NY, May 17-22, 2004, 9 pages. |
Guha, Object Co-Identification on the Semantic Web, WWW2004, ACM, New York, NY, May 17-22, 2004, 9 pages. |
Hogue, Tree Pattern Inference and Matching for Wrapper Induction on the World Wide Web, Master of Engineering in Electrical Engineering and Computer Science, Massachusetts Institute of Technology, Jun. 2004, pp. 1-106. |
Ilyas, Rank-Aware Query Optimization, ACM SIGMOD 2004, Paris, France, Jun. 13-18, 2004, 12 pages. |
Information Entropy-Wikipedia, the free encyclopedia, retrieved on May 3, 2006, pp. 1-9. |
Information Theory-Wikipedia, the free encyclopedia, retrieved on May 3, 2006, pp. 1-12. |
Jones, Bootstrapping for Text Learning Tasks, Carnegie Mellon University, Pittsburgh, PA, 1999, 12 pages. |
Kamba, The Krakatoa Chronicle, An interactive, Personalized, Newspaper on the Web, Mar. 2, 2008, pp. 1-12. |
Kosseim, Answer Formulation for Question-Answering, Concordia University, Montreal, Quebec, Canada, Oct. 1, 2007, 11 pages. |
Lin, Question Answering from the Web Using Knowledge Annotation and Knowledge Mining Techniques, CIKM'03, New Orleans, LA, Nov. 3-8, 2003, pp. 116-123. |
Liu, Mining Data Records in Web Pages, Conference '00, ACM 2000, pp. 1-10. |
McCallum, Object Consolidation by Graph Partitioning with a Conditionally-Trained Distance Metric, SIGKDD 03, Washington, DC, Aug. 24-27, 2003, 6 pages. |
Mihalcea, PageRank on Semantic Networks, with Application to Word Sense Disambiguation, Proceedings of the 20th International Conference on Computational Linguistics, Aug. 23-27, 2004, 7 pages. |
Mihalcea, TextRank: Bringing Order into Texts, Proceedings of the Conference on Empirical Methods in Natural Language Processing, Jul. 2004, 8 pages. |
Nyberg, The JAVELIN Question-Answering System at TREC2003: A Multi-Strategy Approach With Dynamic Planning, TREC2003, Nov. 18-21, 2003, 9 pages. |
Ogden, Improving Cross-Language Text Retrieval with Human Interactions, Proc. of the 33rd Hawaii International Conference on System Sciences, IEEE 2000, pp. 1-9. |
Prager, IBM's Piquant in TREC2003, Nov. 18-21, 2003, 10 pages. |
Prager, Question Answering Using Constraint Satisfaction: QA-by-Dossier-with-Constraints, 2004, 8 pages. |
Ramakrishnan, Is Question Answering an Acquired Skill?, WWW2004, New York, NY, May 17, 2004, pp. 111-120. |
The MathWorks, Using Matlab Graphics, Version 5, MathWorks, Natick, MA, Dec. 1996, 52 pgs. |
Thompson, Freshman Publishing Experiment Offers Made-to-Order Newspapers, MIT News Office, Mar. 9, 1994, pp. 1-4. |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110246439A1 (en) * | 2010-04-06 | 2011-10-06 | Microsoft Corporation | Augmented query search |
US20120158756A1 (en) * | 2010-12-20 | 2012-06-21 | Jimenez Jaime | Searching in Peer to Peer Networks |
US8959138B2 (en) | 2011-09-30 | 2015-02-17 | International Business Machines Corporation | Distributed data scalable adaptive map-reduce framework |
US20130086355A1 (en) * | 2011-09-30 | 2013-04-04 | International Business Machines Corporation | Distributed Data Scalable Adaptive Map-Reduce Framework |
US9053067B2 (en) * | 2011-09-30 | 2015-06-09 | International Business Machines Corporation | Distributed data scalable adaptive map-reduce framework |
US8762396B2 (en) * | 2011-12-22 | 2014-06-24 | Sap Ag | Dynamic, hierarchical bloom filters for network data routing |
US20130166576A1 (en) * | 2011-12-22 | 2013-06-27 | Sap Ag | Dynamic, hierarchical bloom filters for network routing |
US20140280201A1 (en) * | 2013-03-14 | 2014-09-18 | Wal-Mart Stores, Inc. | Attribute detection |
EP2778982A1 (en) * | 2013-03-14 | 2014-09-17 | Wal-Mart Stores, Inc. | Attribute detection |
US9098543B2 (en) * | 2013-03-14 | 2015-08-04 | Wal-Mart Stores, Inc. | Attribute detection |
US20170011022A1 (en) * | 2014-05-02 | 2017-01-12 | Palantir Technologies Inc. | Systems and methods for active column filtering |
US10019431B2 (en) * | 2014-05-02 | 2018-07-10 | Palantir Technologies Inc. | Systems and methods for active column filtering |
US20150379022A1 (en) * | 2014-06-27 | 2015-12-31 | General Electric Company | Integrating Execution of Computing Analytics within a Mapreduce Processing Environment |
US20160267072A1 (en) * | 2015-03-12 | 2016-09-15 | Microsoft Technology Licensing, Llc | Context sensitive phrase identification |
US20170323199A1 (en) * | 2016-05-05 | 2017-11-09 | Baidu Usa Llc | Method and system for training and neural network models for large number of discrete features for information rertieval |
US11288573B2 (en) * | 2016-05-05 | 2022-03-29 | Baidu Usa Llc | Method and system for training and neural network models for large number of discrete features for information rertieval |
CN108090125A (en) * | 2017-11-14 | 2018-05-29 | 西北工业大学 | A kind of data de-duplication method and device of non-query formulation |
CN108090125B (en) * | 2017-11-14 | 2021-05-25 | 西北工业大学 | Non-query type repeated data deleting method and device |
US11347808B1 (en) * | 2018-12-03 | 2022-05-31 | Amazon Technologies, Inc. | Dynamically-adaptive bloom-filter |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8239394B1 (en) | Bloom filters for query simulation | |
US7440968B1 (en) | Query boosting based on classification | |
US7428530B2 (en) | Dispersing search engine results by using page category information | |
JP4246623B2 (en) | Method and system for improving query response time for partitioned database objects | |
US7693829B1 (en) | Search engine with fill-the-blanks capability | |
Koshman et al. | Web searching on the Vivisimo search engine | |
US7254580B1 (en) | System and method for selectively searching partitions of a database | |
US7966337B2 (en) | System and method for prioritizing websites during a webcrawling process | |
US9081861B2 (en) | Uniform resource locator canonicalization | |
US7356530B2 (en) | Systems and methods of retrieving relevant information | |
US7587387B2 (en) | User interface for facts query engine with snippets from information sources that include query terms and answer terms | |
KR101137147B1 (en) | Query forced indexing | |
US7440964B2 (en) | Method, device and software for querying and presenting search results | |
US8037075B2 (en) | Pattern index | |
US7174346B1 (en) | System and method for searching an extended database | |
US8209325B2 (en) | Search engine cache control | |
CA2369912C (en) | Computerized information search and indexing method, software and device | |
US8438469B1 (en) | Embedded review and rating information | |
US8260766B2 (en) | Embedded communication of link information | |
JP2010508582A (en) | FAQ automatic generation and update device | |
US8392422B2 (en) | Automated boolean expression generation for computerized search and indexing | |
US20040107177A1 (en) | Automated content filter and URL translation for dynamically generated web documents | |
US7630959B2 (en) | System and method for processing database queries | |
EP1101173A1 (en) | Information access | |
Rajaram et al. | Web caching in Semantic Web based multiple search engines |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HOGUE, ANDREW W.;ROHDE, DOUGLAS L.T.;WEINBERGER, PETER J.;REEL/FRAME:023549/0739Effective date: 20050330 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
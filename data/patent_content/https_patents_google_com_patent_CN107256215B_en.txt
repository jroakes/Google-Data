CN107256215B - Loading mobile computing devices with media files - Google Patents
Loading mobile computing devices with media files Download PDFInfo
- Publication number
- CN107256215B CN107256215B CN201710228885.4A CN201710228885A CN107256215B CN 107256215 B CN107256215 B CN 107256215B CN 201710228885 A CN201710228885 A CN 201710228885A CN 107256215 B CN107256215 B CN 107256215B
- Authority
- CN
- China
- Prior art keywords
- computing device
- media files
- media
- user
- previous
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/06—Protocols specially adapted for file transfer, e.g. file transfer protocol [FTP]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/43—Querying
- G06F16/435—Filtering based on additional data, e.g. user or group profiles
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/18—File system types
- G06F16/182—Distributed file systems
- G06F16/1824—Distributed file systems implemented using Network-attached Storage [NAS] architecture
- G06F16/183—Provision of network file services by network file servers, e.g. by using NFS, CIFS
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/48—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/487—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using geographical or spatial information, e.g. location
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/48—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/489—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using time information
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1097—Protocols in which an application is distributed across nodes in the network for distributed storage of data in networks, e.g. transport arrangements for network file system [NFS], storage area networks [SAN] or network attached storage [NAS]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/52—Network services specially adapted for the location of the user terminal
Abstract
The present application relates to loading a mobile computing device with media files. In general, the subject matter described in this specification can be embodied in methods, systems, and program products for loading media files to a mobile computing device. A media library including media files is stored at a server system. Information is accessed indicating a current state of the mobile device, where the current state is based on the device being in a current geographic location at a current time. Information is accessed indicating a previous state of the mobile device, where the previous state is based on the device being in a previous geographic location at a previous time. The selection of the preferred media file is accessed based on the current state and the previous state. The selection of the subset of media files is accessed based on the preferred media files. At least a portion of each media file in the subset is transmitted to the mobile device.
Description
Description of the cases
The application belongs to divisional application of Chinese invention patent application No.201180061088.2 with application date of 2011, 10, month 11.
Cross Reference to Related Applications
The present application claims priority from U.S. application serial No.12/914,635 entitled "load a MOBILE company device WITH MEDIA FILES," filed on 28/10/2010, the disclosure of which is incorporated herein by reference.
Technical Field
This document relates generally to loading a mobile computing device with media files.
Background
Mobile computing devices, such as mobile phones, may include media players that allow a user of the device to play media (e.g., audio books, music, and videos). The media may be stored locally on the mobile computing device. Also, the media may be stored remotely from the mobile computing device. For example, a user of a mobile device may request that a server system stream media to the mobile computing device. A user of the mobile computing device may consume a beginning portion of the media content that has been transferred to the mobile computing device while a later portion of the media content is streamed to the mobile computing device.
Disclosure of Invention
As an alternative to the implementations described in the following description, the present disclosure also includes the following implementations:
implementation 1 relates to a computer-implemented method for loading media files to a mobile computing device. The method includes storing, at a server system, a media library including media files. The method includes accessing information indicative of a current state of the mobile computing device, wherein the current state is determined based on the mobile computing device being at a current geographic location at a current time. The method includes accessing information indicative of a previous state of the mobile computing device, wherein the previous state was determined based on the mobile computing device being at a previous geographic location at a previous time. The method includes accessing a selection of preferred media files from a media library. The preferred media file is selected based on a current state of the mobile computing device and a previous state of the mobile computing device, wherein the preferred media file is output by the mobile computing device during the previous state in response to a request by a user of the mobile computing device to output at least one preferred media file by the mobile computing device. The method includes accessing a selection of a subset of media files, wherein the subset is selected based on a preferred media file. The method includes transmitting, by the server system, at least a portion of each media file in the subset to the mobile computing device.
Implementation 2 is related to the method of implementation 1, wherein transmitting at least a portion of each media file in the subset comprises transmitting at least a portion of each media file in the subset to the mobile computing device before the mobile computing device outputs more than one media file in the subset.
Implementation 3 is related to the method of any of implementations 1-2, wherein the preferred media file is selected based on a determination that a current state of the mobile computing device matches a previous state of the mobile computing device.
Implementation 4 relates to the method of implementation 3, wherein the determination that the current state matches the previous state is based on the determination: (i) the current geographic location is within a predetermined distance of a previous geographic location; and (ii) the current time is within a predetermined time period of the previous time.
Implementation 5 is related to the method of implementation 4, wherein the time period is less than twenty-four hours, and wherein the previous time occurred more than twenty-four hours before the current time.
Implementation 6 is related to the method of implementation 3, wherein the determination that the current state matches the previous state is based on a determination that: (i) the current geographic location is defined within an area that also defines the previous geographic location; and (ii) the current time is within a time period that includes the previous time.
Implementation 7 is related to the method of implementation 3, wherein the determination that the current state matches the previous state is based on a matching calculation in which a match is more easily determined: (i) the first distance is shorter than the second distance when the current geographic location is a first distance from the previous geographic location and when the current geographic location is a second distance from the previous geographic location, and (ii) the first distance is shorter than the second distance when the current time is the first distance from the previous time and when the current time is the second distance from the previous time.
Implementation 8 is related to the method of any of implementations 1-7, wherein the information indicative of the current state of the mobile computing device is further determined based on a statement defined by a user of the mobile computing device at a current time; and wherein the information indicative of the previous state of the mobile computing device is further determined based on statements defined by a user of the mobile computing device at a previous time.
Implementation 9 relates to the method of any one of implementations 1 to 8. The method further includes receiving, at the server system, a request from the mobile computing device for causing the server system to transfer the media file from the media library to the mobile computing device, wherein in response to the request: (i) performing access to information indicative of a current state of a mobile computing device; and (ii) performing the accessing of the information indicative of the previous state of the mobile computing device.
Implementation 10 is related to the method of any of implementations 1-9, wherein the subset of media files includes only preferred media files.
Implementation 11 is related to the method of any of implementations 1-9, wherein selecting the subset of media files comprises selecting additional media files from the media library for inclusion in the subset, the additional media files being selected for inclusion in the subset based on the additional media files and the preferred media files sharing attributes corresponding to musical characteristics of the respective additional media files and preferred media files.
Implementation 12 is related to the method of any of implementations 1-9, wherein selecting the subset of media files includes selecting an additional media file from the media library that is a starting media file in the particular user-generated playlist, wherein the starting media file is a media file that starts the playlist based on the playlist rankings.
Implementation 13 is related to the method of implementation 12, wherein the particular playlist is a subset of the set of user-generated playlists, and wherein the particular playlist is selected as the subset based on the particular playlist including a predetermined number of preferred media files.
Implementation 14 is related to the method of any of implementations 1-9, wherein selecting the subset of media files comprises selecting at least two additional media files from the media library based on the at least two additional media files being starting media files of different ranks for the particular playlist.
Implementation 15 is related to the method of implementation 14, wherein the particular playlist is not played in the at least one of the rankings without a user of the mobile computing device providing user input that causes the particular playlist to be played in the at least one of the rankings.
Another implementation relates to a computer-implemented method for loading media files to a mobile computing device. The method includes determining, by a mobile computing device, a current geographic location of the mobile computing device and transmitting the current geographic location for receipt by a server system. The method includes receiving, at a mobile computing device from a server system, at least a portion of each media file in a subset of media files that have been selected from a media library stored at the server system, the at least a portion of the media file being received in response to the server system: accessing information indicative of a current state of the mobile computing device, wherein the current state is determined based on the mobile computing device being at a current geographic location at a current time; accessing information indicative of a previous state of the mobile computing device, wherein the previous state was determined based on the mobile computing device being at a previous geographic location at a previous time; accessing a selection of preferred media files from a media library, wherein the preferred media files are selected based on a current state of the mobile computing device and a previous state of the mobile computing device, wherein the preferred media files are output by the mobile computing device during the previous state in response to a request by a user of the mobile computing device to output at least one preferred media file by the mobile computing device; accessing a selection of a subset of the media files, wherein the subset is selected based on the preferred media files; and transmitting, by the server system, at least a portion of each media file in the subset to the mobile computing device.
Other aspects of the subject matter described in this specification can be embodied in one or more computer-readable storage devices storing instructions that, when executed by one or more processing devices, perform operations in accordance with the methods described above. Other implementations include systems and apparatus that include the one or more computer-readable storage devices and that are configured to perform operations using one or more processing devices.
In another aspect, the subject matter described in this specification can be embodied in a computer-implemented system. The system includes one or more storage devices. The storage device stores a media library comprising computer-readable media files. The storage device stores instructions that, when executed by the one or more processing devices, cause the one or more processing devices to implement a preferred media determiner, a similar media determiner, and a media loader. The preferred media determiner is configured to: (i) accessing information indicative of a current state of the mobile computing device, wherein the current state is determined based on the mobile computing device being at a current geographic location at a current time; (ii) accessing information indicative of a previous state of the mobile computing device, wherein the previous state was determined based on the mobile computing device being at a previous geographic location at a previous time; (iii) preferred media files are selected from the media library based on the current state of the mobile computing device and a previous state of the mobile computing device, wherein the preferred media files are output by the mobile computing device during the previous state in response to a request by a user of the mobile computing device to output at least one of the preferred media files by the mobile computing device. The similar media determiner is configured to select a subset of the media files in the media library based on the selected preferred media files. The media loader is at the server system and is programmed to transmit at least a portion of each media file in the subset to the mobile computing device.
The instructions, when executed by the one or more processing devices, may cause the processing devices to implement a state determiner at the mobile computing device programmed to periodically transmit to the server system for storage by the media preference database: (i) an indication of a media 15 file currently playing on the mobile computing device, and (ii) a current geographic location of the mobile computing device. The preferred media determiner may access the media preferences database to determine preferred media files. The similar media determiner may be configured to select at least some of the subset of media files based on the at least some media files sharing musical characteristics with the preferred media files.
In certain instances, particular embodiments can be implemented to realize one or more of the following advantages. The mobile computing device, through the limited local memory, may locally store media files that a user of the mobile computing device is most likely to request the mobile device to play. Such media files may be played without buffering over a network connection, and may be played even if the mobile computing device is unable to connect to a network. The local memory space may be used for other applications or may be reduced.
The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the invention will be apparent from the description and drawings, and from the claims.
Drawings
FIG. 1 illustrates an example of a method for loading a mobile computing device with media files.
Fig. 2 illustrates an example of content in a media preferences database.
FIG. 3 illustrates an example of a system for loading a mobile computing device with media files.
Fig. 4 illustrates an example of songs in a media collection and a subset of songs that have been loaded to a mobile computing device.
FIG. 5 is a diagram of a system that may be used to implement the systems and methods described in this document.
FIG. 6 is a block diagram of a computing device, either as a client or as one or more servers, that may be used to implement the systems and methods described in this document.
Like reference symbols in the various drawings indicate like elements.
Detailed Description
This document describes techniques, methods, systems, and mechanisms for loading a mobile computing device with media files. Typically, a user of a mobile computing device may use the device to navigate a media library hosted by a remote server system. The server system may preload the mobile device with at least a beginning portion of some of the media files such that when a user of the mobile device requests one of the preloaded media files to be played on the mobile device, the beginning portion of that media file need not be retrieved from the server system and can be played immediately.
When the mobile device is in a previous state that matches the current state, the media files that were preloaded into the mobile device may be selected based on media files that have been previously played. The previous state and the current state may be based on a location of the mobile computing device, a time at which the mobile computing device is at the location, and a user-defined statement (e.g., a text message, a search query, or an email) submitted by the user at a particular time.
In addition to being based on the selected media file having been played at the time of the match state, other media files may also be selected for preloading into the mobile computing device. These other media files may be media files that have been assigned attributes describing the content of the other media files, where the attributes of the other media files match the attributes of the media files played in the matching state. Other media files may also be selected as the starting media file in the user-generated list ranking.
FIG. 1 illustrates an example of a method for loading a mobile computing device with media files. A user of a mobile computing device may browse a media library using the device. While the user is able to browse and view information about all of the media files in the library, the media content itself may be stored remotely by a server system accessible over the internet. Some of the remotely stored media files, or beginning portions thereof, may be transmitted to the mobile device before the user plays the media file. In this case, when the user plays the loaded media file, the file can immediately play the beginning of the loaded media file without network buffering.
The media files (or portions of files) loaded to the mobile computing device may be automatically determined based on media files previously played by the user while in a similar geographic area and during a similar time period. For example, on weekends a user may stay at his lake house and play blues music while at the lake house. While in the city during the week, the user may listen to hip-hop music. Thus, when the user lingers in his lake house, the mobile device or online media service may determine that blues music should be loaded to the user's mobile device. The blues music may replace hip-hop music that has been previously loaded to the device. In some examples, the playlist is generated based on music that was previously loaded to the mobile device.
In various implementations, determining which media to load to a mobile device may be based on various additional factors. For example, the determination may include whether the media file is displayed in a prominent position in the playlist. For example, when a user views a playlist of media files, the media files may be played in sorted order (e.g., alphabetically by artist). Those media files that are most highlighted by the sort order (e.g., those beginning media files that begin the playlist based on the playlist sort) may be loaded to the mobile computing device because those files are more easily played by the user. In some examples, a user of the mobile device can change the type of playlist sort (e.g., switch from alphabetically by artist to alphabetically by song name). The most highlighted media for each type of ranking may be loaded to the mobile device. In various examples, the most frequently played media files (in the collection or in the playlist) may be loaded to the mobile device.
In various implementations, the determination of which media to load to the mobile device may be based on recent and previous user-defined statements. For example, the system may store user-defined sentences (or keywords extracted from user-defined sentences) that the user used the mobile computing device. The user-defined statements may include the content of text messages, emails, and voice and text queries. If the user recently provided a user-defined statement that matches a previous user-defined statement when the particular media file was played, the particular media file is loaded to the mobile computing device.
As described above, a user of a mobile device is able to browse a media library. For example, a user may select a "media player" graphical interface element on the desktop of their mobile phone, and then a graphical interface for browsing the user's collection of media files may appear. The media player graphical interface may allow a user to view various displays of media files in the media library. For example, a user may choose to view only music media files (rather than video media files, audio book media files, and application media files). When in the music media file "view," the user may choose to view the music files in an artist, album, genre, song name, or playlist order.
The playlist may be a subset of the user-defined media library. For example, a user may create an "exercise" playlist of music that includes songs that the user listens to while exercising. Thus, as the user exercises, he can play (i.e., cause the mobile computing device to output media, e.g., audibly and/or visually, as appropriate) the songs in the list. When playing a song ends, the media player may play the next song from the playlist, and may terminate playing the song when all of the songs in the playlist have been played.
A media library browsed by a user may involve hundreds or even thousands of media files. These media files may require a large amount of memory. In some instances, the media file may require more memory than the mobile device includes, or more memory than the mobile device can use as free space. Furthermore, the user may not desire to locally store the entire media collection using a mobile device that includes the requisite free space (e.g., because of additional cost or size). Thus, while a user may browse a media library using a mobile computing device, the media files themselves may be stored remotely at a server system. Thus, in some implementations, metadata about some or all of the media files is stored locally on the mobile device, while the corresponding media content is stored on the server system. When a user selects a media file to play, the media file may be transferred or streamed from the server system to the mobile computing device.
In various implementations, the mobile computing device may be loaded with certain media files (or portions of media files) in the library such that when the user instructs the mobile computing device to play a loaded media file, the media file plays immediately. This loading process may occur when the user is not using the mobile computing device, for example, when the device is in the user's pocket, docked, or locked such that the screen is closed. When a media file has been loaded onto a mobile device, the mobile device can play the media file or a portion thereof without requiring the user to wait for the file to be transmitted over a network. The mobile device is able to play locally stored media files even when network services are not available.
The mobile computing device (or a server system hosting the music service) may select a subset of media files in the library that are loaded to the mobile computing device. At block 110, a set of preferred media files may be selected based on the current state of the mobile computing device. The preferred media files may include those media files that the mobile device (or another mobile device that the user previously authenticated) has played when it was in the same or similar state. The current state of the mobile device may be identified based on any combination of the mobile device location (block 114), time (block 116), and user-defined statements (not shown). Example location, time, and user-defined statements are discussed with reference to FIG. 2.
The current state may be compared to previous states to identify previous states that match the current state, and media that was played while in these matching previous states. The indication of the media played while in the previous state and the previous state information may be contained in the media preferences database 112.
The two states may match if the current geographic location of the mobile device is near a previous geographic location of the mobile device. Two locations may be proximate to each other if both the current location and the previous location are within the same geographic area (e.g., a predetermined and defined geographic area). Examples of geographic areas may include city communities, cell tower transmission areas, and city blocks.
In some examples, the current location and the previous location are proximate to each other if the two locations are a predetermined distance from each other. For example, in the case where the current position and the previous position are represented by geographical coordinates, if the two positions are within 500 meters, the two positions are close to each other. The predetermined distance may vary based on the area of the location. For example, 500 meters may be used as a threshold for identifying "near" locations in metropolitan areas, but 200 meters may be used as a threshold for identifying "near" locations in rural areas.
In some examples, a "location score" is determined based on a geographic distance between the current location and a previous location, where the score is assigned a greater value the closer the current location and the previous location are to each other. As two locations become closer, the location value becomes "larger," which may refer to the location score increasing or decreasing based on various implementations. The location score may be used alone or with one or more additional scores (e.g., a time score and a user-defined sentence score) to determine whether the two states match. After discussing the temporal scores and the user-defined sentence scores, the combination of these scores to determine whether the current state matches the previous state is discussed in more detail below.
The two states may match if the current time of the mobile computing device is near a previous time of the mobile device. The current time and the previous time may be close to each other if both times are within a similarly defined time period. The time period may be a recurring portion of the day. Examples of time periods include monday afternoon, wednesday morning, weekday evening, weekend, and specific holidays. Each time period may be associated with a start time and an end time (e.g., 3 pm noon).
In some examples, the "time score" is determined based on a distance between the current time and a previous time, wherein the score is assigned a value that is greater the closer the current time and the previous time are to each other. Time may be stored as information identifying the time of day (e.g., hours and minutes) and date (e.g., 1 month, 5 days 2010). However, the distance may not take into account the date. For example, 10:54 am on the first day may be determined to be 16 minutes different from 11:10 am on the second day, regardless of the date.
In various examples, all weekdays can be considered the same and all weekends can be considered the same. Thus, 3:04 PM on Thursday may be considered 10 minutes different from the previous 3:14 PM on Monday. However, 3:14 PM on Monday may be considered to differ from 3:11 PM on Sunday by approximately 24 hours (e.g., because Monday and Sunday are not considered to be the same "day"). In some examples, the distance between times may be increased the longer the past time. For example, a Monday's time of 3:14 six months ago may be considered 55 minutes different from the current time of 3:04 on Thursday to compensate for possible changes in listening preferences over the past six months. After discussing the user-defined sentence scores, the combination of these scores to determine whether the current state matches the previous state is discussed in more detail below, as described below.
The two states may match if the most recent user-defined sentence includes the same content as in the previous user-defined sentence, or if the content in the most recent user-defined sentence is determined to relate to a concept that is related to a concept in the previous user-defined sentence. The user-defined sentence may be a text sentence or a voice sentence provided by the user using the mobile computing device. Examples of statements include text content of a text message, an email, or a note taking program, as well as transcribed spoken content provided by spoken search queries or spoken voice commands.
Previous statements may be evaluated against the most recent statement based on content (e.g., whether and how many keywords in the statement match) and whether the statements occur during times that are "close" to each other (e.g., as described above). Keywords match if they are the same or if they are all associated with the same predefined concept. The longer the "current" statement, the less relevant the statement is to the current state of the mobile phone. The "sentence score" may be calculated based on keyword similarity and temporal distance between sentences.
As described above, various combinations of location, time, and user-defined statements, for example, may be used to determine whether the states match. For example, both current and previous locations and associated times may need to be matched against the current state to match the previous state. In some examples, the location score and the time score may be used to determine whether the states match. For example, the scores may be used in the calculation of the combined score by adding or multiplying the scores, potentially by changing the weighting variables to adjust the overall contribution of the factors, and in some instances additional factors may be included. In some examples, matching states may be identified as those states that exceed a threshold (e.g., those states having a combined score that exceeds the value 352, those states in which a single factor of the score exceeds a corresponding threshold, or those states in which any one of the single factors of the score exceeds a threshold). In some examples, the matching state may be identified as the top N matching states. For example, the current state may be measured against a plurality of other previous states to identify a matching state. The first fifty states may be selected as the matching states.
The media files played during each of the matching, previous states may be selected as a preferred set of media files. Thus, the preferred set of media files may include those media files that were played at similar locations, during similar time periods, and at similar sentences defined by the user. The number of preferred media files selected may be based on predefined requirements (e.g., a specific number of files or amount of disk space to be consumed) or on predefined score requirements (e.g., a specific score that must be exceeded by the status of a previously played media file).
In some examples, the preferred set of media files is based not only on media files previously played by the user, but also on media files previously played by other users. Other users may be related to the user in the social network, and the impact of the other users' music listening habits may be based on the distance of the other users from the user in the social network. For example, if the user's "friends" (e.g., individuals who have agreed to receive all of the user's posts, and the user has provided permission to view their personal details page) listen to a particular song at a time and location similar to the user's current time and location, then the particular song may be selected as the preferred media file. If the song is played by a "friend of a friend," the song may be less popular and may or may not be selected as the preferred media file. The other users may be individuals authenticated to the music service by different user account names and passwords.
As described in more detail below, the selection of a preferred media file may be based not only on the media files that have been played in the matching state, the previous state, but also on the media currently being played by the mobile computing device.
The preferred media may be a "seed" media file to be loaded to the mobile computing device for computer-generated selections of similar media files (block 120). With reference to the above, the user of the mobile phone may be located at his lake house during the weekend, so the preferred media may include a collection of blues songs that the user played while at the lake house on the weekend. However, the mobile device may load more than the blues songs (i.e., preferred media) that the user plays while in the lake house. In fact, the device may load other blues songs that were not previously played while at the lake house, but the online media server determines to include attributes that match attributes of songs played while at the lake house.
For example, the online media server may transmit information identifying the preferred songs and information describing the content of the user's media collection to a system that determines that the media in the user's media catalog is similar to the preferred media. Determining similar media may include accessing a media similarity database 122, the media similarity database 122 including, for each of a plurality of songs in a catalog, an attribute corresponding to a characteristic of the song. Example characteristics include gender of the lead song, degree of electric guitar distortion, type of background sound, genre of media, and the like. Each characteristic may be assigned a value between one and five. Assuming that a set of attributes for the media files is stored, similar media files may be identified based on, for example, a vector distance function.
In various examples, media selected as similar to the preferred media is assigned a relevance score that identifies a degree of similarity. In various examples, media that is not in the user's media catalog (e.g., media that the user has not previously specified to be in the media catalog) may be identified as similar media. Thus, the user's mobile device may be loaded with "suggested" music that the user has not previously heard, where the suggested music is based on the user's past listening preferences while in a similar state.
In various examples, other media is selected for loading to the mobile device (block 130). In some examples, the selection of other media content is based on media content in a user-generated playlist (block 132). By way of illustration, a user may view a list of media files using their mobile device. The playlist may be viewed in sorted order such that certain media files appear more prominent than others (e.g., certain files appear at the top of the list). The mobile computing device may load the most highlighted media file based on the sorted order of the playlist, as the user may play the media file more easily than other media files. In various examples, the top N media files are loaded in sorted order. In various examples, the media files displayed in the initial view of the playlist are loaded after the application is opened (e.g., media files that can be viewed without the user having to scroll down).
In various examples, a user may select a graphical user interface element to change the ordering of the playlist. For example, a user may view a playlist that is currently sorted in alphabetical song name order. The mobile device may include interface elements for reordering playlists based on artist name, album name, genre, length, or date of media files added to the media library. In some examples, the mobile device may load with one or more most highlighted media files for one or more of these other rankings, although the playlist may be currently configured to not be displayed in the other rankings. Thus, if a user views a playlist in chronological order of song names and chooses to view the playlist in chronological order of the added date, the chronologically most relevant media files may have been loaded to the mobile device before the user changes the ranking.
In various examples, the most highlighted media file for one or more of the "other" rankings described above may be loaded based on the popularity of the user using the "other" rankings when used to rank a particular playlist or when used to rank media in a library generally. In some examples, the amount of the most highlighted media file loaded for a particular playlist may be based on the "popularity" of that playlist for the current state of the mobile device. The popularity of a playlist for the current state may be determined based on how many media files in the playlist are "preferred" and how many are "similar".
In various examples, when the playlist is determined to be "popular," the entire playlist is loaded to the mobile device or the most frequently played media in the playlist is loaded to the mobile device, regardless of which media is preferred (see block 110) or similar media (see block 120) when the most frequently played media. Similarly, when a non-playlist grouping of media (e.g., a particular "album," "artist," or "genre") is determined to be popular, additional media may be selected from the non-playlist grouping of media for loading to the mobile device. Selecting preferred media, similar media, and other media for loading to a mobile computing device is discussed in more detail throughout this document, for example, with reference to fig. 4.
At block 140, a selected subset of the media in the collection (e.g., preferred media referenced for block 110, similar media referenced for block 120, and other media referenced for block 130) is loaded to the mobile computing device. Loading the media file may include loading a beginning portion of the media file to the selected subset or loading the entire media file to the selected subset. In various examples, some of the selected subset of media files are fully loaded and some are partially loaded (e.g., preferred media may be fully loaded and similar media and other media may be partially loaded). The mobile computing device may designate a certain amount of memory as available or reserved for loading media. Thus, certain low-score media that have been selected may not be loaded based on these memory constraints.
The selected media may be transferred to the mobile computing device over a network. Media currently stored on the mobile computing device may be removed such that the transferred media replaces the currently stored media. In this manner, the mobile device may include a portion of memory designated for storing media that has been determined to be of interest or likely interest to the user based on the current state of the mobile device. The mobile device may also include more permanently stored media files (i.e., until the user of the mobile device decides to remove or replace the media files).
Media may be transferred to the mobile device without the mobile device providing any audiovisual indication that the media is being transferred. Thus, the mobile device may periodically (e.g., every 10 minutes) determine the current state of the mobile device and the media content most relevant to the determined state. In some examples, determining the state may be triggered by moving the mobile computing device (e.g., after a day of work when the user walks with the mobile device to his car and the mobile device is still in a stationary state). Thus, a user may set their mobile device down for a period of time and a different set of media files has been loaded to the mobile device when they picked up the device without requiring the user to provide user input.
At block 150, the loaded media is visually identified. In some examples, those media files that have been loaded are displayed to the user of the mobile device differently than those media files that have not been loaded. For example, the display of loaded media files in a playlist may be supplemented by icons or a different color may appear if the media files are not loaded to the mobile device. Thus, the user is able to discern which media files have been loaded to the mobile device when browsing their music collection. In some examples, a user may provide input that causes a media file associated with the current state of the mobile device to be loaded but not played.
In some examples, visually identifying the loaded media includes the mobile device visually displaying a playlist generated by the mobile device based on the loaded media. For example, the mobile device may include a "music selected for you" playlist, where music is automatically selected for inclusion in the playlist based on the current state of the mobile device.
At block 160, the mobile device receives user input to play the media file. For example, a user may select a particular song that the user desires to listen to. In response to the selection (and song play), the media preferences database 112 stores an indication of the song and the current state of the mobile computing device so that the song (and similar songs) can be selected for loading when the mobile device is again in a similar state. Playing the media file may cause a portion of the media file stored in local memory on the mobile device to be accessed and transferred to temporary memory (e.g., RAM) for access by an application program or media content therein. The application may output the accessed portion of the media file and request that the remainder of the media file be transferred from the server system. In other words, the mobile device may audibly output the beginning portion of the media file while the remainder of the media file is buffered in transit from the server system.
As described above, the selection of preferred media files (at block 110) may be based not only on media files played during a previous state similar to the current state, but also on those media files that are currently playing or have recently played. For example, a user of a mobile computing device may provide user input to play a blues song after reaching his lake house. Blues songs have been automatically loaded to the mobile device, but the media files selected for loading to the mobile device may be optimized based on the currently playing blues song.
For example, the next song in an album or playlist that includes the currently playing blues song may be loaded to the mobile phone. The currently playing playlist or album may be weighted more heavily and additional media files in the playlist or album may be loaded to the mobile device. In some examples, the entire playlist or album may be loaded to the mobile device. Further, selecting "similar" media may be modified so that more songs are loaded to the mobile device that are similar to the currently playing song. The modification of the loaded media based on the currently playing media may be based on more than the currently playing media file. The modification may be based on a number of most recently played media files (e.g., the last N media files or media files played within the last thirty minutes).
Fig. 2 illustrates an example of content in a media preferences database. The illustrated media preferences database may be the media preferences database 112 illustrated in fig. 1. For each particular user of the plurality of users of the online media service, the database may include an indication of media that the particular user has played and information identifying a state in which the media was played. For purposes of illustration, FIG. 2 illustrates only media content that has been played by a single user of the online media service, although the database may further identify media played by other users of the online media service.
The media preference database illustrates that a particular user has played three songs (i.e., Song A210, Song B240, and Song C260). For each song, the media preferences database has stored a time of song play 282, a starting geographic location for the song to begin playing 284, an ending geographic location for the song to end playing 286, and a user-defined sentence 288 generated during or within a predetermined time of song play.
In this example, Song A210 has been played three times, all on weekday evenings (e.g., Tuesday evening 212, Wednesday evening 222, and Thursday evening 232). For each play of a song, the user begins playing the song in units (e.g., start locations 214, 224, and 234), and the song ends when the user is at home (e.g., end locations 216, 226, and 236). During each instance that Song A210 is played, the user provides a single user-defined content. Specifically, the user edits the text "drive home! 218, e-mail the message including the content "complete work" 228, and submit the voice query "pizza shop" 238.
In this example, Song B240 has been played twice, both on Saturday morning. For example, the user plays the song on 14 am 8:30 on 8/2010 and on 21 am 9:56 on 8/2010. In both examples, the user has moved from a starting location to an ending location that is hundreds of meters away (e.g., because the user is running out). In this example, the geographic location is provided in geographic coordinates. During the 14-2010 instance of the song, 8-month, 2010, the user did not provide any user-defined content. However, during the 2010 8-month 21-day instance of playing the song, the user submitted to the microblog service a statement "run! "microblog posts.
In this example, Song C260 has been played twice, both around noon during the week. In both examples, the user remains at the same zip code 55454. The calendar entry is marked "exercise in gym" during each play of the song.
As shown in this example illustrating a media preferences database, a user of a mobile device may play a particular media file while the mobile device is in a particular state. For example, Song A210 is played every day on the way the user goes home from the unit. Song B240 is played when the user is running on Saturday morning. Song C260 is played during the user's lunch break and while the mobile device is in the gym. Thus, the user's activity may be inferred from the state of the mobile device. Thus, when the mobile device enters a similar state in the future, songs may be selected and loaded to the mobile device based on that state.
The media preference database may store status information in different representations. For example, the play time data 282 may be represented by an absolute time and date (e.g., as with play time 242), or may be represented by a recurring time period during which the media is played (e.g., as with play time 212). The start location 284 and the end location 286 may be represented by user-defined areas (e.g., location 214), geographic coordinates (e.g., location 244), or predefined geographic areas (e.g., location 264). Example predefined geographic areas may include bounded zip code areas, neighbors, cities, and states. Other predetermined geographic regions may include venues where the user has "checked-in" using the microblog messaging service.
FIG. 3 illustrates an example of a system for loading a mobile computing device with media files. The system includes a mobile computing device 300, to which media files are loaded 300. The mobile device 300 includes a state determiner 302 for determining a state of the mobile computing device and for transmitting the current state to the media preferences database 310 for storage. The server system 320 includes a preferred media determiner 322 that accesses the media preferences database 310 to determine media files that have been played during a match of a previous state of the mobile computing device 322 with a current state. The server system 324 also includes an other media determiner 324 for identifying additional media files based on the preferred media files. The media loader 326 transfers the preferred media files and other media files from the collection of media files 330 to the mobile computing device 300 for play by the media player 304.
More specifically, the mobile computing device 300 includes a state determiner 302 that determines a current geographic location of the mobile computing device 300, for example, using signals based on a satellite navigation system or by using cell tower triangulation. Further, the state determiner 302 may identify the sentence defined by the user using the mobile computing device 300, as well as the media currently playing on the mobile computing device. The state determiner 302 may transmit this information to the server system 320 for storage in the media preferences database 310.
The media preferences database 310 includes information describing previous media files played on the mobile computing device 300, the time at which the media files were played, the geographic location of the mobile device 300 when the media files were played, and user-defined statements submitted when the media files were played. The media preferences database 310 may be the same as the database described with reference to fig. 2. The media preferences database 310 is depicted as being located at the server system 320, but may be stored at the mobile device 300.
The preferred media determiner 322 determines the media files that were played while the mobile device 300 was in a previous state that matches the current state. The preferred media determiner 322 performs the determination based at least in part on information in the media preferences database 310.
The other media determiner 324 determines media similar to the preferred media. If the similar media has been assigned a descriptive attribute that matches the descriptive attribute of the preferred media, then the media is determined to be similar to the preferred media. The other media determiner 324 may additionally or alternatively determine media files that are highlighted in a playlist order.
The preferred media determiner 322 and the other media determiner 324 are illustrated as being located at the server system 320. However, in some examples, the preferred media determiner 322 and the other media determiner 324 are located on the mobile computing device 300. For example, the data in the media preferences database 310 may be stored locally on the mobile computing device 300. The mobile computing device 300 may use the locally stored preferred media determiner 322 to determine preferred media files that have been previously displayed during a similar state of the mobile computing device 300. In various examples, the other media determiner 324 is stored locally on the mobile computing device 300 and operates alone or in cooperation with the server system 320 to identify other media files that are similar to the preferred media file. The locally stored preferred media determiner 322 and other media determiner 324 may transmit the identification of preferred media files and other media files to the server system 320 for use by the media loader 326.
The media loader 326 retrieves the preferred media files and other media files from the collection of media files 330 and transmits the retrieved media files to the mobile device 300 for storage in locally accessible memory. In some examples, only a portion of the media file is transferred to the mobile device, rather than the entire media file being transferred to the mobile device 300. The portion may be a beginning portion of the media file or a portion of the media file for playing a first temporal portion of the playable media content of the media file. Thus, the media player 304 is able to begin playing the already loaded media file at the mobile device 300 without requesting the beginning of the media file from the server system 320. Instead, the mobile device 300 may only need to receive the remainder of the playing media file.
The media player 304 may be an application installed on the mobile computing device 300 or use a website that the mobile computing device 300 may access. The media player 304 supports the user of the mobile device 300 browsing a music catalog of the server system 320 stored in the media file collection 330 for the user of the mobile device 300. The user may provide user input that causes the media player 304 to play the selected media. If the selected media file, or a portion thereof, has not been loaded to the mobile device 300 after receiving user input that causes the media file to play, the media player 304 may request that the media loader 326 stream the selected media file to the mobile device 300. If the selected media file or portion thereof has been loaded to the mobile device 300, the media player 304 may play the loaded media file or portion thereof. The remainder may be requested from the server system 320.
Fig. 4 illustrates an example of songs in a media collection and a subset of songs that have been loaded to a mobile computing device. In this example, the media collection stored at the server system for the user of the mobile device includes songs A-Z. Based on the current state of the mobile device, and the previous states during the playing of each of songs A-Z, preferred media determiner 322 selects songs E-Z as preferred songs 402 (e.g., those songs played during the previous states match the current state).
Based on the preferred song 402, the other media determiner 324 selects similar songs 404 and 408. In the illustration of fig. 4, similar songs are separated into two categories, very similar songs 404 and somewhat similar songs 408. Determining a change in similarity may be based at least in part on the number of descriptive attributes that similar songs 404 and 408 match preferred song 402.
Playlist A410, playlist B412, and playlist C414 are user-defined playlists that each include a plurality of songs, some of which have been loaded to the mobile computing device. Songs that have been loaded onto the mobile computing device are masked, while songs that are not masked are not loaded onto the mobile computing device. The close proximity of each song that has been loaded to the mobile computing device is one reason that the song was loaded.
Referring to the songs in playlist A410, songs E, G and L are loaded to the mobile device because the songs are determined to be preferred songs 402. Thus, all preferred songs may be loaded to the mobile computing device. In this example, a somewhat similar song Y and song S are also loaded. As described below, songs that have been determined to be somewhat similar are not always loaded to the mobile device. In some examples, the somewhat similar songs are loaded to the mobile device when included in a playlist that satisfies the relevant criteria. Example correlation criteria include the playlist including a number of preferred songs that exceeds a threshold number of preferred songs, or a percentage of songs in the playlist that exceeds a threshold percentage of songs. Referring to playlist A410, three of the ten songs of the playlist are preferred songs. The three preferred songs may exceed an exemplary threshold of two songs or 25% of the songs in the playlist.
In this example, Song I has been loaded because Song I is the first song in the playlist date ordering (e.g., the songs in the playlist are ordered by the date the song was added to the media library). The date ordering may be an ordering in which playlist A is currently configured for display on the mobile computing device.
In this example, song D is also loaded. Although Song D may not be the preferred song or a similar song, Song D has been selected because it is the first song in the alphabetical ordering of playlist A. While playlist A is not currently configured for display in alphabetical order, the user of the mobile computing device may choose to change the display so that the songs are displayed in alphabetical order. In this example, Song D is loaded as the most highlighted song in the playlist non-current ordering because playlist A exceeds the threshold described above. In examples where the playlist does not exceed the threshold, the most highlighted song in the playlist's non-current ordering may not be loaded.
In this example, Song X has already been loaded because Song X is the most played song in the playlist. When the playlist exceeds the threshold described above, the most played songs in the playlist may be loaded.
Playlist B412 may be another user-defined playlist of songs in the media collection. In this example, song Z has been loaded because this song is the preferred song. Likewise, song P and song M may be loaded because song P and song M are very similar songs. Very similar songs in the playlist may always be loaded, or may be loaded whenever a threshold amount of preferred songs are found in the threshold. In this example, the threshold is one preferred song, so very similar songs Z and M are loaded.
In this example, song J has been loaded because song J is the first song in the date ordering in the playlist (where the date ordering is the current ordering of the playlist). In some examples, the first song in the current ordering of the playlist is always loaded to the mobile device. In other examples, the playlist must include a threshold preferred song (counted alone or with similar songs) so that the first song in the current order is loaded. In this example, Song A is not loaded, even though Song A is the first song in an alphabetical (non-current) ordering in the playlist. Song A may not be loaded because playlist B may not include a threshold amount of preferred songs.
Playlist C414 may be another user-defined playlist of songs in the media collection. In this example, the playlist includes no preferred songs 402, no very similar songs 404, and a single somewhat similar song (Song R). Song R is not loaded because playlist C414 is not determined to include a threshold amount of preferred songs. However, in this example, Song B is loaded because Song B is the first song in the alphabetical (current) ordering of the playlist. In some examples, the top N songs in the current ordering of the playlist will be loaded regardless of whether the playlist includes any preferred songs.
Although the description with respect to fig. 4 refers to selecting songs based on preferred songs present in a playlist, similar concepts may be applied to media files other than songs (e.g., video files) and collections of songs other than user-defined playlists (e.g., computer-generated playlists, lists of songs in an album, lists of songs for an album artist, and lists of songs for a genre).
Referring now to FIG. 5, there is illustrated a conceptual diagram of a system that may be used to implement the systems and methods described in this document. The mobile computing device 510 may be in wireless communication with a base station 540 that may provide the mobile computing device with access to a plurality of services 560 through a network 550.
In this illustration, the mobile computing device 510 is depicted as a handheld mobile phone (e.g., a smartphone or an application phone) that includes a touchscreen display device 512 for presenting content to a user of the mobile computing device 510. The mobile computing device 510 includes various input devices (e.g., a keyboard 514 and a touchscreen display device 512) for receiving user inputs that affect the operation of the mobile computing device 510. In further implementations, the mobile computing device 510 may be a laptop computer, a tablet computer, a personal digital assistant, an embedded system (e.g., a car navigation system), a desktop computer, or a computerized workstation.
The mobile computing device 510 may include various visual, auditory, and tactile user output mechanisms. An example visual output mechanism is a display device 512 that can visually display video, graphics, images, and text that combine to provide a visual user interface. For example, the display device 512 may be a 3.7 inch AMOLED screen. Other visual output mechanisms may include an LED status light (e.g., a light that blinks when a voicemail has been received).
An example tactile output mechanism is a small electric motor that is connected to an unbalanced weight to provide a vibratory alert (e.g., vibrate to alert a user to an incoming phone call or confirm user contact with the touch screen 512). Additionally, the mobile computing device 510 may include one or more speakers 520 that convert electrical signals into sound (e.g., music in a phone call, an audible alert, or a person's voice).
An example mechanism for receiving user input includes a keyboard 514, which may be a full qwerty keyboard or a traditional keypad including the numbers "0-9", "#", and "#". The keypad 514 receives input when a user physically contacts or presses a keypad key. User manipulation of the trackball 516 or interaction with the trackpad enables the user to supply direction and rate of rotation information to the mobile computing device 510 (e.g., to manipulate the position of a cursor on the display device 512).
The mobile computing device 510 may be able to determine the location of physical contact with the touch screen display device 512 (e.g., the location of contact by a finger or stylus). Various "visual" input mechanisms may be generated using the touch screen 512, wherein a user interacts with a graphical user interface element depicted on the touch screen 512 by contacting the graphical user interface element. An example of a "visual" input mechanism is a "software keyboard," where a keyboard is displayed on the touch screen and the user selects a key by pressing an area of the touch screen 512 that corresponds to each key.
The mobile computing device 510 may include mechanical or touch-sensitive buttons 518a-518 d. Further, the mobile computing device may include buttons for adjusting the volume output of the one or more speakers 520 and buttons for turning the mobile computing device on or off. The microphone 522 allows the mobile computing device 510 to convert audible sound into electrical signals that may be digitally encoded and stored in a computer-readable memory or transmitted to another computing device. The mobile computing device 510 may also include a digital compass, an accelerometer, a proximity sensor, and an ambient light sensor.
The operating system may provide an interface between the hardware (e.g., input/output mechanisms and a processor executing instructions retrieved from a computer-readable medium) and software of the mobile computing device. Example operating systems include the ANDROID mobile computing device platform; an APPLE IPHONE/MAC OS X operating system; MICROSOFT WINDOWS 7/WINDOWS MOBILE operating system; a SYMBIAN operating system; the RIM BLACKBERRY operating system; PALM WEB operating system; various operating systems supporting UNIX; or a private operating system for a computerized device. The operating system may provide a platform for executing application programs that facilitate interaction between the computing device and the user.
The mobile computing device 510 may present a graphical user interface with the touchscreen 512. The graphical user interface is a collection of one or more graphical interface elements and may be static (e.g., the display appears to remain the same over a period of time) or may be dynamic (e.g., the graphical user interface includes graphical interface elements that animate without user input).
The graphical interface elements may be text, lines, shapes, graphics, or combinations thereof. For example, the graphical interface element may be an icon and associated text for the icon that is displayed on the desktop. In some examples, a graphical interface element may be selected with user input. For example, a user may select a graphical interface element by pressing a region of the touch screen that corresponds to a display of the graphical interface element. In some examples, a user may manipulate a trackball to highlight a single graphical interface element as having focus. User selection of a graphical interface element may invoke a predefined action of the mobile computing device. In some examples, the selectable graphical interface elements also or alternatively correspond to buttons on the keyboard 504. User selection of a button may invoke a predefined action.
In some examples, the operating system provides a "desktop" user interface that is displayed when the mobile computing device 510 is turned on, when the mobile computing device 510 is activated from a sleep state, when the mobile computing device 510 is "unlocked," or when a user selection of the "home" button 518c is received. The desktop graphical interface may display several icons that invoke corresponding applications when selected with user input. The calling application may present the graphical interface in place of the desktop graphical interface until the application terminates or is hidden from view.
The user input may manipulate a sequence of operations of the mobile computing device 510. For example, a single-action user input (e.g., a single tap of a touch screen, a sweep of the touch screen, a contact with a button, or a simultaneous combination of these actions) may invoke an operation that changes the display of the user interface. Without user input, the user interface may not have changed at a particular time. For example, multi-touch user input with the touch screen 512 may invoke the drawing application to "zoom in" on the location, even though the drawing application may have by default zoomed in after several seconds.
The desktop graphical interface may also display "widgets". Widgets are one or more graphical interface elements associated with an application that has been executed and displayed on desktop content controlled by the executing application. The application of the widget may start with the mobile phone. Additionally, the widget may not focus for full display. Alternatively, the widget may only "own" a small portion of the desktop, displaying content and receiving touchscreen user input within that portion of the desktop.
The mobile computing device 510 may include one or more location identification mechanisms. The location identification mechanism may include a collection of hardware and software that provides an operating system and applications and programs an estimate of the geographic location of the mobile phone. The location identification mechanism may employ satellite-based positioning techniques, base station transmit antenna identification, multi-base station triangulation, internet access point IP location determination, inferential identification of location to use based on search engine queries, and identification of user-supplied location (e.g., by "checking in" to a location).
The mobile computing device 510 may include other application modules and hardware. The call processing unit may receive an indication of an incoming telephone call and provide the user with the ability to answer the incoming telephone call. The media player may allow a user to listen to music or play movies that are stored in local memory of the mobile computing device 510. The mobile phone 510 may include a digital camera sensor and corresponding image and video capture and editing software. An internet browser may enable a user to view content from a web page by typing in an address corresponding to the web page or selecting a link to the web page.
The mobile computing device 510 may include an antenna to wirelessly communicate information to the base station 540. The base station 540 may be one of many base stations in a collection of base stations (e.g., a mobile telephone cellular network) that enables the mobile computing device 510 to maintain communication with the network 550 as the mobile computing device moves geographically. The computing device 510 may alternatively or additionally also communicate with the network 550 through a Wi-Fi router or a wired connection (e.g., ethernet, USB, or FIREWIRE). The computing device 510 may also communicate with other computing devices using the bluetooth protocol or may employ an ad hoc wireless network.
A service provider operating the network of base stations may connect the mobile computing device 510 to the network 550 to enable communication between the mobile computing device 510 and other computerized devices providing the service 560. Although the services 560 may be provided over different networks (e.g., the service provider's internal network, the public switched telephone network, and the internet), the network 550 is illustrated as a single network. The service provider may operate a server system 552 that routes information packets and voice data between the mobile computing device 510 and computing devices associated with the service 560.
The network 550 may connect the mobile computing device 510 to a Public Switched Telephone Network (PSTN)562 in order to establish voice or fax communication between the mobile computing device 510 and another computing device. For example, the service provider server system 552 may receive an indication of an incoming call for the mobile computing device 510 from the PSTN 562. Conversely, the mobile computing device 510 may send a communication to the service provider server system 552 that initiates a telephone call with a telephone number associated with a device accessible 15 through the PSTN 562.
The network 550 may connect the mobile computing device 510 with a voice over internet protocol (VoIP) service 564 that routes voice communications over an IP network, as opposed to the PSTN. For example, a user of the mobile communication device 510 may invoke a VoIP application and use a program to initiate a call. The service provider server system 552 may forward voice data from the call to a VoIP service, which may route the call over the internet to a corresponding computing device, potentially using the PSTN for a final leg of the connection.
The application store 566 may provide the user of the mobile computing device 510 with the ability to browse a list of remotely stored application programs that the user may download and install on the mobile computing device 510 over the network 550. The application store 566 may act as a repository for applications developed by third party application developers 25. Applications installed on the mobile computing device 510 may be able to communicate over the network 550 with server systems assigned for the applications. For example, a VoIP application may be downloaded from the application store 566 to enable the user to communicate with the VoIP service 564.
The mobile computing device 510 may access content on the internet 568 through the network 550. For example, a user of the mobile computing device 510 may invoke a web browser application that requests data from a remote computing device that is accessible at an assigned universal resource location. In various examples, some of the services 560 are accessible over the internet.
The mobile computing device may communicate with a personal computer 570. For example, the personal computer 570 may be a home computer for a user of the mobile computing device 510. Thus, the user may be able to stream media from his personal computer 570. The user may also view the file structure of his personal computer 570 and transfer selected documents between the computerized devices.
The voice recognition service 572 may receive voice communication data recorded with the microphone 522 of the mobile computing device and translate the voice communication into corresponding text data. In some examples, the translated text is provided to a search engine as a web query and responsive search engine search results are transmitted to the mobile computing device 510.
The mobile computing device 510 may communicate with a social network 574. A social network may include a plurality of members, some of which have agreed to be related as acquaintances. An application on the mobile computing device 510 may access the social network 574 to retrieve information based on the acquaintances of the user of the mobile computing device. For example, an "address book" application may retrieve a phone number for the user's acquaintance. In various examples, content may be delivered to the mobile computing device 510 based on social network distance from the user to other members. For example, advertisement and news article content may be selected for a user based on the level of interaction with such content by members that are "close" to the user (e.g., members that are "friends" or "friends of friends").
The mobile computing device 510 may access the personal contact set 576 over the network 550. Each contact may identify an individual and include information about the individual (e.g., a phone number, an email address, and a birthday). Because the set of contacts is hosted remotely from the mobile computing device 510, the user may access and maintain the contacts 576 across several devices as a common set of contacts.
The mobile computing device 510 may access the cloud-based application 578. Cloud computing provides applications (e.g., word processor or email programs) that are hosted remotely from the mobile computing device 510 and may be accessed by the device 510 using a web browser or a dedicated program. Example cloud-based applications include GOOGLE DOCS word processor and spreadsheet services, GOOGLE GMAIL web mail services, and PICASA picture manager.
The split segment service 582 may provide the mobile computing device 510 with split segment directions to a user-supplied destination. For example, the split segment service 582 may stream a street level view of the estimated location of the device to the device 510 along with data for providing audio commands and overlaid arrows that direct a user of the device 510 to a destination.
The mobile computing device 510 may request various forms of streaming media 584. For example, computing device 510 may request a stream for a pre-recorded video file, a live television program, or a live radio program. Example services that provide streaming media include YOUTUBE and PANDORA.
Microblog service 586 may receive a user-entered announcement from mobile computing device 510 that does not identify the recipient of the announcement. The micro-blogging service 586 may disseminate the post to other members of the micro-blogging service 586 who agree to subscribe to the user.
The search engine 588 may receive a user-entered textual or spoken query from the mobile computing device 510, determine a set of internet-accessible documents that are responsive to the query, and provide the device 510 with information for displaying a list of search results for the responsive documents. In examples where a spoken query is received, the voice recognition service 572 may translate the received audio into a text query that is sent to a search engine.
These and other services may be implemented in the server system 590. A server system may be a combination of hardware and software that provides a service or set of services. For example, a collection of physically separate and networked computerized devices may operate together as a logical server system unit to handle the operations necessary to provide services to hundreds of individual computing devices.
In various implementations, an operation performed "in response" to another operation (e.g., a determination or identification) is not performed if the prior operation was not successful (e.g., if the determination was not performed). Features described in conditional language in this document may describe alternative implementations. In some examples, "transmitting" from a first device to a second device includes the first device placing data into a network for receipt by the second device, but may not include the second device receiving the data. Conversely, "receiving" from the first device may include receiving data from the network, but may not include the first device transmitting data.
FIG. 6 is a block diagram of computing devices 600, 650 that may be used to implement the systems and methods described in this document as either a client or as one or more servers. Computing device 600 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Computing device 650 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices. Further, computing device 600 or computing device 650 may include a Universal Serial Bus (USB) flash drive. The USB flash drive may store an operating system and other applications. The USB flash drive may include input/output components such as a wireless transmitter or a USB connector that may be plugged into a USB port of another computing device. The components shown here, their connections and relationships, and their functions, are meant to be illustrative only and are not meant to limit implementations described and/or claimed in this document.
The memory 604 stores information within the computing device 600. In one implementation, the memory 604 is a volatile memory unit or units. In another implementation, the memory 604 is a non-volatile memory unit or units. The memory 604 may also be another form of computer-readable medium, such as a magnetic or optical disk.
The storage device 606 is capable of providing mass storage for the computing device 600. In one implementation, the storage device 606 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. The computer program product may be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods, such as the methods described above. The information carrier is a computer-or machine-readable medium, such as the memory 604, the storage device 606, or memory on processor 602.
The high speed controller 608 manages bandwidth-intensive operations for the computing device 600, while the low speed controller 612 manages lower bandwidth-intensive operations. Such allocation of functions is merely exemplary. In one implementation, the high-speed controller 608 is coupled to memory 604, display 616 (e.g., through a graphics processor or accelerator), and high-speed expansion ports 610, which may accept various expansion cards (not shown). In this implementation, low-speed controller 612 is coupled to storage device 606 and low-speed expansion port 614. The low-speed expansion port, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet), may be coupled to one or more input/output devices (such as a keyboard, a pointing device, a scanner) or networking devices (such as a switch or router), for example, through a network adapter.
The computing device 600 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 620 or multiple times in a group of such servers. It may also be implemented as part of a rack server system 624. It may also be implemented in a personal computer, such as a laptop computer 622. Alternatively, components from computing device 600 may be combined with a mobile device (not shown), such as other components in device 650. Each of such devices may contain one or more of computing device 600, 650, and an entire system may be made up of multiple computing devices 600, 650 communicating with each other.
The processor 652 can execute instructions within the computing device 650, including instructions stored in the memory 664. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. Further, the processor may be implemented using any of a variety of architectures. For example, processor 652 may be a CISC (Complex instruction set computer) processor, RISC (reduced instruction set computer) processor, or MISC (minimal instruction set computer) processor. The processor may, for example, provide for coordinating other components of the device 650, such as controlling user interfaces, applications run by device 650, and wireless communication by device 650.
The memory 664 stores information within the computing device 650. The memory 664 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units. Expansion memory 674 may also be provided and connected to device 650 through expansion interface 672, which may include, for example, a SIMM (Single in line memory Module) card interface. Such expansion memory 674 may provide additional storage space for device 650, or may also store applications or other information for device 650. Specifically, expansion memory 674 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, expansion memory 674 may be provided as a secure module for a device, and expansion memory 674 may be programmed with instructions that permit secure use of device 650. In addition, secure applications may also be provided via the SIMM card along with additional information, such as placing identification information on the SIMM card in a non-hackable manner.
As discussed below, the memory may include, for example, flash memory and/or NVRAM memory. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions which, when executed, perform one or more methods, such as the methods described above. The information carrier is a computer-or machine-readable medium, such as the memory 664, expansion memory 674, or memory on processor 652 that may be received, for example, over transceiver 668 or external interface 662.
The device 650 may also communicate audibly using an audio codec 660 that may receive spoken information from a user and convert it to usable digital information. Audio codec 660 may similarly generate audible sound for a user, such as through a speaker, e.g., in a handset of device 650. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 650.
As shown in the figure, the computing device 650 may be implemented in a number of different forms. For example, it may be implemented as a cellular telephone 680. It may also be implemented as part of a smartphone 682, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or special purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications, or code) include machine instructions for a programmable processor and may be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium," "computer-readable medium" refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, audible feedback, or tactile feedback); and input from the user may be received in any form, including acoustic, voice, or tactile input.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), peer-to-peer networks (with ad hoc or static members), grid computing infrastructure, and the internet.
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Although several implementations have been described in detail above, other modifications are possible. In addition, other mechanisms for performing the systems and methods described in this document may be used. Moreover, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. Other steps may be provided, or steps may be eliminated, from the described processes, and other components may be added to, or removed from, the described systems. Accordingly, other implementations are within the scope of the following claims.
Claims (30)
1. A computer-implemented method, comprising:
storing, at a server system, a media library comprising a set of media files, the set of media files comprising media files in a media collection of a user of a computing device;
accessing information indicative of a current state of the computing device, wherein the current state is determined based on the computing device being in a current geographic location;
accessing information indicative of a previous state of the computing device, wherein the previous state is determined based on the computing device being in a previous geographic location;
determining that the current state of the computing device matches the previous state of the computing device;
in response to determining that the current state of the computing device matches the previous state of the computing device, determining at least one preferred media file associated with the previous state of the computing device;
determining one or more additional media files from the set of media files based on one or more characteristics of the at least one preferred media file corresponding to one or more characteristics of the one or more additional media files in the set of media files;
selecting a group of media files not stored on the computing device to load onto the computing device, the group including the at least one preferred media file and the one or more additional media files; and
transmitting, by the server system to the computing device via the internet, at least a portion of each of the media files in the selected group without receiving input from the user requesting transmission of the media files in the selected group, wherein the computing device is configured to output any of the transmitted portions of the media files in the selected group at a later time without communicating with the server system.
2. The computer-implemented method of claim 1, wherein the determination that the current state matches the previous state is made based on the current geographic location being within a predetermined distance of the previous geographic location.
3. The computer-implemented method of claim 1, wherein the determination that the current state matches the previous state is made based on the current geographic location being defined within an area that also defines the previous geographic location.
4. The computer-implemented method of claim 1, wherein the determination that the current state matches the previous state is made based on a distance between the current geographic location and the previous geographic location; and
wherein the likelihood of a match between the current state and the previous state increases with a shorter distance between the current geographic location and the previous geographic location.
5. The computer-implemented method of claim 1, wherein the information indicative of the current state of the computing device is further determined based on a statement defined by the user of the computing device at the current geographic location; and
wherein the information indicative of the previous state of the computing device is further determined based on statements defined by the user of the computing device at the previous geographic location.
6. The computer-implemented method of claim 1, further comprising receiving, at the server system from the computing device, a request for causing the server system to transmit at least some of the media files from the media library to the computing device, wherein, in response to the request:
(i) performing the accessing of information indicative of the current state of the computing device; and
(ii) performing the accessing of information indicative of the previous state of the computing device.
7. The computer-implemented method of claim 1, wherein the one or more characteristics of the at least one preferred media file identify musical characteristics of the at least one preferred media file and the one or more characteristics of the one or more additional media files identify characteristics of the one or more additional media files.
8. The computer-implemented method of claim 1, wherein selecting the group of media files comprises selecting additional media files from the media library that are beginning media files in a particular user-generated playlist; and
wherein the starting media file is a media file that starts a playlist based on a sorting of the playlist.
9. The computer-implemented method of claim 8, wherein the particular user-generated playlist is a subset of a set of user-generated playlists; and
wherein the particular user-generated playlist is selected as the subset based on the particular user-generated playlist including a predetermined number of the preferred media files.
10. The computer-implemented method of claim 1, wherein selecting the group of the media files comprises selecting at least two additional media files from the media library based on the at least two additional media files being different ordered starting media files for a particular playlist.
11. The computer-implemented method of claim 10, wherein the particular playlist is not displayed by the computing device in at least one of the orderings without the user of the computing device providing user input that causes the particular playlist to be displayed in at least one of the orderings.
12. The computer-implemented method of claim 1, wherein the at least one preferred media file is associated during the previous state of the computing device as a result of the user of the computing device requesting the computing device to output the at least one preferred media file during the previous state of the computing device.
13. A computer-implemented method, the method comprising:
determining, by a computing device, a current geographic location of the computing device and transmitting data indicative of the current geographic location to a server system;
accessing information indicative of a current state of the computing device, wherein the current state is determined based on the computing device being at the current geographic location;
accessing information indicative of a previous state of the computing device, wherein the previous state is determined based on the computing device being in a previous geographic location;
determining that the current state of the computing device matches the previous state of the computing device;
in response to determining that the current state of the computing device matches the previous state of the computing device, determining at least one preferred media file associated with the previous state of the computing device;
determining, for a user of the computing device, one or more additional media files from a set of media files associated with a media library based on one or more characteristics of the at least one preferred media file corresponding to one or more characteristics of the one or more additional media files;
selecting from the media library a group of media files not stored on the computing device to load onto the computing device, the group comprising the at least one preferred media file and the one or more additional media files; and
receiving, by the computing device from the server system over the Internet, a portion of the media files in the selected group without receiving input from the user requesting transmission of the media files in the selected group, wherein the computing device is configured to output any of the received portions of the media files in the selected group at a later time without communicating with the server system.
14. The computer-implemented method of claim 13, further comprising generating, by the computing device, for display on the computing device, a playlist of media files that includes only the media files in the selected group.
15. The computer-implemented method of claim 13, wherein the determination that the current state matches the previous state is made based on a distance between the current geographic location and the previous geographic location; and
wherein the likelihood of a match between the current state and the previous state increases with a shorter distance between the current geographic location and the previous geographic location.
16. A system, comprising:
one or more processors and one or more non-transitory computer storage media storing instructions that are operable and that, when executed by the one or more processors, cause the one or more processors to perform operations comprising:
storing, at a server system, a media library comprising a set of media files, the set of media files comprising media files in a media collection of a user of a computing device;
accessing information indicative of a current state of the computing device, wherein the current state is determined based on the computing device being in a current geographic location;
accessing information indicative of a previous state of the computing device, wherein the previous state is determined based on the computing device being in a previous geographic location;
determining that the current state of the computing device matches the previous state of the computing device;
in response to determining that the current state of the computing device matches the previous state of the computing device, determining at least one preferred media file associated with the previous state of the computing device;
determining one or more additional media files from the set of media files based on one or more characteristics of the at least one preferred media file corresponding to one or more characteristics of the one or more additional media files in the set of media files;
selecting a group of media files not stored on the computing device to load onto the computing device, the group including the at least one preferred media file and the one or more additional media files; and
transmitting, by the server system to the computing device via the internet, at least a portion of each of the media files in the selected group without receiving input from the user requesting transmission of the media files in the selected group, wherein the computing device is configured to output any of the transmitted portions of the media files in the selected group at a later time without communicating with the server system.
17. The system of claim 16, wherein the determination that the current state matches the previous state is made based on the current geographic location being within a predetermined distance of the previous geographic location.
18. The system of claim 16, wherein the determination that the current state matches the previous state is made based on the current geographic location being defined within an area that also defines the previous geographic location.
19. The system of claim 16, wherein the determination that the current state matches the previous state is made based on a distance between the current geographic location and the previous geographic location; and
wherein the likelihood of a match between the current state and the previous state increases with a shorter distance between the current geographic location and the previous geographic location.
20. The system of claim 16, wherein the information indicative of the current state of the computing device is further determined based on a statement defined by the user of the computing device at the current geographic location; and
wherein the information indicative of the previous state of the computing device is further determined based on statements defined by the user of the computing device at the previous geographic location.
21. The system of claim 16, wherein the operations further comprise receiving, at the server system from the computing device, a request to cause the server system to transmit at least some of the media files from the media library to the computing device, wherein, in response to the request:
(i) performing the accessing of information indicative of the current state of the computing device; and
(ii) performing the accessing of information indicative of the previous state of the computing device.
22. The system of claim 16, wherein the one or more characteristics of the at least one preferred media file identify musical characteristics of the at least one preferred media file and the one or more characteristics of the one or more additional media files identify characteristics of the one or more additional media files.
23. The system of claim 16, wherein selecting the group of media files comprises selecting additional media files from the media library that are beginning media files in a particular user-generated playlist; and
wherein the starting media file is a media file that starts a playlist based on a sorting of the playlist.
24. The system of claim 23, wherein the particular user-generated playlist is a subset of a set of user-generated playlists; and
wherein the particular user-generated playlist is selected as the subset based on the particular user-generated playlist including a predetermined number of the preferred media files.
25. The system of claim 16, wherein selecting the group of the media files comprises selecting at least two additional media files from the media library based on the at least two additional media files being differently ordered starting media files for a particular playlist.
26. The system of claim 25, wherein the particular playlist is not displayed by the computing device in at least one of the orderings in the absence of user input provided by the user of the computing device that causes the particular playlist to be displayed in at least one of the orderings.
27. The system of claim 16, wherein the at least one preferred media file is associated with the computing device during the previous state of the computing device as a result of the user of the computing device requesting the computing device to output the at least one preferred media file during the previous state of the computing device.
28. A system, comprising:
one or more processors and one or more non-transitory computer storage media storing instructions that are operable and that, when executed by the one or more processors, cause the one or more processors to perform operations comprising:
determining, by a computing device, a current geographic location of the computing device and transmitting data indicative of the current geographic location to a server system;
accessing information indicative of a current state of the computing device, wherein the current state is determined based on the computing device being at the current geographic location;
accessing information indicative of a previous state of the computing device, wherein the previous state is determined based on the computing device being in a previous geographic location;
determining that the current state of the computing device matches the previous state of the computing device;
in response to determining that the current state of the computing device matches the previous state of the computing device, determining at least one preferred media file associated with the previous state of the computing device;
determining, for a user of the computing device, one or more additional media files from a set of media files associated with a media library based on one or more characteristics of the at least one preferred media file corresponding to one or more characteristics of the one or more additional media files;
selecting from the media library a group of media files not stored on the computing device to load onto the computing device, the group comprising the at least one preferred media file and the one or more additional media files; and
receiving, by the computing device from the server system over the Internet, a portion of the media files in the selected group without receiving input from the user requesting transmission of the media files in the selected group, wherein the computing device is configured to output any of the received portions of the media files in the selected group at a later time without communicating with the server system.
29. The system of claim 28, wherein the operations further comprise generating, by the computing device, for display on the computing device, a playlist of media files including only the media files in the selected group.
30. The system of claim 28, wherein the determination that the current state matches the previous state is made based on a distance between the current geographic location and the previous geographic location; and
wherein the likelihood of a match between the current state and the previous state increases with a shorter distance between the current geographic location and the previous geographic location.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/914,635 | 2010-10-28 | ||
US12/914,635 US9128961B2 (en) | 2010-10-28 | 2010-10-28 | Loading a mobile computing device with media files |
CN201180061088.2A CN103403705B (en) | 2010-10-28 | 2011-10-11 | Loading a mobile computing device with media files |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201180061088.2A Division CN103403705B (en) | 2010-10-28 | 2011-10-11 | Loading a mobile computing device with media files |
Publications (2)
Publication Number | Publication Date |
---|---|
CN107256215A CN107256215A (en) | 2017-10-17 |
CN107256215B true CN107256215B (en) | 2020-09-15 |
Family
ID=44872615
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201710228885.4A Active CN107256215B (en) | 2010-10-28 | 2011-10-11 | Loading mobile computing devices with media files |
CN201180061088.2A Active CN103403705B (en) | 2010-10-28 | 2011-10-11 | Loading a mobile computing device with media files |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201180061088.2A Active CN103403705B (en) | 2010-10-28 | 2011-10-11 | Loading a mobile computing device with media files |
Country Status (5)
Country | Link |
---|---|
US (3) | US9128961B2 (en) |
EP (1) | EP2638483A1 (en) |
KR (2) | KR101885342B1 (en) |
CN (2) | CN107256215B (en) |
WO (1) | WO2012057998A1 (en) |
Families Citing this family (48)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10419722B2 (en) | 2009-04-28 | 2019-09-17 | Whp Workflow Solutions, Inc. | Correlated media source management and response control |
US8311983B2 (en) | 2009-04-28 | 2012-11-13 | Whp Workflow Solutions, Llc | Correlated media for distributed sources |
US10565065B2 (en) | 2009-04-28 | 2020-02-18 | Getac Technology Corporation | Data backup and transfer across multiple cloud computing providers |
US9760573B2 (en) * | 2009-04-28 | 2017-09-12 | Whp Workflow Solutions, Llc | Situational awareness |
US9729352B1 (en) | 2010-02-08 | 2017-08-08 | Google Inc. | Assisting participation in a social network |
US8582801B2 (en) | 2010-02-08 | 2013-11-12 | Google Inc. | Assisting the authoring of posts to an asymmetric social network |
US8825759B1 (en) | 2010-02-08 | 2014-09-02 | Google Inc. | Recommending posts to non-subscribing users |
US8527597B2 (en) * | 2010-12-07 | 2013-09-03 | Google Inc. | Determining message prominence |
US8718536B2 (en) | 2011-01-18 | 2014-05-06 | Marwan Hannon | Apparatus, system, and method for detecting the presence and controlling the operation of mobile devices within a vehicle |
US8686864B2 (en) | 2011-01-18 | 2014-04-01 | Marwan Hannon | Apparatus, system, and method for detecting the presence of an intoxicated driver and controlling the operation of a vehicle |
CN102957731B (en) * | 2011-08-31 | 2015-03-25 | 光宝科技股份有限公司 | Data transmission system and data transmission method |
US9654821B2 (en) | 2011-12-30 | 2017-05-16 | Sonos, Inc. | Systems and methods for networked music playback |
US9674587B2 (en) | 2012-06-26 | 2017-06-06 | Sonos, Inc. | Systems and methods for networked music playback including remote add to queue |
US9693192B2 (en) * | 2012-12-28 | 2017-06-27 | Rakuten, Inc. | Information processing apparatus, information processing method, information processing program, recording medium storing thereon information processing program |
US20140236725A1 (en) * | 2013-02-21 | 2014-08-21 | Moasis Global Inc. | Systems and Methods for Presenting and Delivering Content |
US9247363B2 (en) | 2013-04-16 | 2016-01-26 | Sonos, Inc. | Playback queue transfer in a media playback system |
US9361371B2 (en) | 2013-04-16 | 2016-06-07 | Sonos, Inc. | Playlist update in a media playback system |
US9501533B2 (en) | 2013-04-16 | 2016-11-22 | Sonos, Inc. | Private queue for a media playback system |
US9293138B2 (en) * | 2013-05-14 | 2016-03-22 | Amazon Technologies, Inc. | Storing state information from network-based user devices |
US9684484B2 (en) * | 2013-05-29 | 2017-06-20 | Sonos, Inc. | Playback zone silent connect |
FR3009103A1 (en) * | 2013-07-29 | 2015-01-30 | Orange | GENERATING CUSTOMIZED CONTENT REPRODUCTION LISTS |
DE202013007367U1 (en) * | 2013-08-14 | 2014-11-17 | GM Global Technology Operations LLC (n. d. Ges. d. Staates Delaware) | Audio system for a vehicle |
JP2015091093A (en) * | 2013-11-07 | 2015-05-11 | ソニー株式会社 | Transmission control device, reception control device, transmission control method, and reception control method |
US9471572B1 (en) * | 2013-12-31 | 2016-10-18 | Google Inc. | Recommending candidates for consumption |
EP3111410A4 (en) * | 2014-02-24 | 2017-12-13 | Opanga Networks, Inc. | Playback of content pre-delivered to a user device |
US9454342B2 (en) | 2014-03-04 | 2016-09-27 | Tribune Digital Ventures, Llc | Generating a playlist based on a data generation attribute |
US9431002B2 (en) | 2014-03-04 | 2016-08-30 | Tribune Digital Ventures, Llc | Real time popularity based audible content aquisition |
US10088978B2 (en) * | 2014-09-30 | 2018-10-02 | Pandora Media, Inc. | Country-specific content recommendations in view of sparse country data |
CA2992459A1 (en) | 2015-07-14 | 2017-01-19 | Driving Management Systems, Inc. | Detecting the location of a phone using rf wireless and ultrasonic signals |
US10261964B2 (en) | 2016-01-04 | 2019-04-16 | Gracenote, Inc. | Generating and distributing playlists with music and stories having related moods |
CN107690794A (en) * | 2016-08-16 | 2018-02-13 | 深圳市屹石科技股份有限公司 | The method, apparatus and body-building apparatus that body-building apparatus is communicated with smart machine |
US10019225B1 (en) | 2016-12-21 | 2018-07-10 | Gracenote Digital Ventures, Llc | Audio streaming based on in-automobile detection |
US10419508B1 (en) | 2016-12-21 | 2019-09-17 | Gracenote Digital Ventures, Llc | Saving media for in-automobile playout |
US10565980B1 (en) | 2016-12-21 | 2020-02-18 | Gracenote Digital Ventures, Llc | Audio streaming of text-based articles from newsfeeds |
US10433018B2 (en) * | 2017-03-06 | 2019-10-01 | Tribune Broadcasting Company, Llc | Video production system with dynamic character generator output |
CN107832434B (en) * | 2017-11-15 | 2022-05-06 | 百度在线网络技术（北京）有限公司 | Method and device for generating multimedia play list based on voice interaction |
EP3833756B9 (en) | 2018-08-08 | 2023-10-04 | Archer Daniels Midland Company | Epimerase enzymes and their use |
KR102046411B1 (en) * | 2018-11-27 | 2019-11-19 | 네이버 주식회사 | Method and system for generating playlist using user play log of multimedia content |
US10977306B2 (en) * | 2019-01-10 | 2021-04-13 | Marcelo Alonso MEJIA COBO | Systems and methods of playing media files |
US11079916B2 (en) * | 2019-01-14 | 2021-08-03 | Microsoft Technology Licensing, Llc | Multiple source media management |
US11368991B2 (en) | 2020-06-16 | 2022-06-21 | At&T Intellectual Property I, L.P. | Facilitation of prioritization of accessibility of media |
US11233979B2 (en) | 2020-06-18 | 2022-01-25 | At&T Intellectual Property I, L.P. | Facilitation of collaborative monitoring of an event |
US11037443B1 (en) | 2020-06-26 | 2021-06-15 | At&T Intellectual Property I, L.P. | Facilitation of collaborative vehicle warnings |
US11411757B2 (en) | 2020-06-26 | 2022-08-09 | At&T Intellectual Property I, L.P. | Facilitation of predictive assisted access to content |
US11184517B1 (en) | 2020-06-26 | 2021-11-23 | At&T Intellectual Property I, L.P. | Facilitation of collaborative camera field of view mapping |
US11356349B2 (en) | 2020-07-17 | 2022-06-07 | At&T Intellectual Property I, L.P. | Adaptive resource allocation to facilitate device mobility and management of uncertainty in communications |
US11768082B2 (en) | 2020-07-20 | 2023-09-26 | At&T Intellectual Property I, L.P. | Facilitation of predictive simulation of planned environment |
KR102586797B1 (en) | 2023-06-28 | 2023-10-10 | 주식회사 나인씨엔에프 | chemical materials Distribution system and method based on artificial intelligence model |
Family Cites Families (47)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040255334A1 (en) * | 2000-03-28 | 2004-12-16 | Gotuit Audio, Inc. | Methods and apparatus for seamlessly changing volumes during playback using a compact disk changer |
WO2002001439A2 (en) | 2000-06-29 | 2002-01-03 | Musicgenome.Com Inc. | Using a system for prediction of musical preferences for the distribution of musical content over cellular networks |
US7075000B2 (en) | 2000-06-29 | 2006-07-11 | Musicgenome.Com Inc. | System and method for prediction of musical preferences |
US20020132616A1 (en) * | 2001-03-19 | 2002-09-19 | Ross Lorna R. | Communications system with automatic download capability |
JP4091077B2 (en) | 2003-07-14 | 2008-05-28 | 松下電器産業株式会社 | Content distribution apparatus and content reproduction apparatus |
US20050108303A1 (en) | 2003-10-31 | 2005-05-19 | Carter Richard D. | Remote backup and restore technique |
JP4539115B2 (en) * | 2004-02-25 | 2010-09-08 | ソニー株式会社 | Information processing apparatus, information processing method, and computer program |
US8762578B2 (en) | 2004-05-18 | 2014-06-24 | Koninklijke Philips N.V. | Method of data synchronization |
US8904458B2 (en) * | 2004-07-29 | 2014-12-02 | At&T Intellectual Property I, L.P. | System and method for pre-caching a first portion of a video file on a set-top box |
US7596116B2 (en) * | 2004-12-30 | 2009-09-29 | Motorola, Inc. | Apparatus for transmitting data packets and supporting method and data structure |
US7593782B2 (en) * | 2005-01-07 | 2009-09-22 | Apple Inc. | Highly portable media device |
US7818350B2 (en) | 2005-02-28 | 2010-10-19 | Yahoo! Inc. | System and method for creating a collaborative playlist |
US8108579B2 (en) * | 2005-03-31 | 2012-01-31 | Qualcomm Incorporated | Mechanism and method for managing data storage |
US8271549B2 (en) * | 2005-08-05 | 2012-09-18 | Intel Corporation | System and method for automatically managing media content |
US7678984B1 (en) * | 2005-10-13 | 2010-03-16 | Sun Microsystems, Inc. | Method and apparatus for programmatically generating audio file playlists |
US20070131097A1 (en) | 2005-12-06 | 2007-06-14 | Wei Lu | Method and system for regulating music based on the location of a device |
US7884275B2 (en) * | 2006-01-20 | 2011-02-08 | Take-Two Interactive Software, Inc. | Music creator for a client-server environment |
US8102812B2 (en) * | 2006-03-21 | 2012-01-24 | Motorola Mobility, Inc. | Methods and apparatus for data packet transmission on a network |
US7765192B2 (en) | 2006-03-29 | 2010-07-27 | Abo Enterprises, Llc | System and method for archiving a media collection |
US8677243B2 (en) * | 2006-09-01 | 2014-03-18 | Nokia Corporation | Media recommendation system and method |
US7574574B2 (en) | 2006-09-11 | 2009-08-11 | Apple Inc. | Backup of media libraries |
US7865571B2 (en) | 2007-01-08 | 2011-01-04 | Mspot, Inc. | Method and apparatus for transferring digital content from a personal computer to a mobile handset |
US20080201000A1 (en) | 2007-02-20 | 2008-08-21 | Nokia Corporation | Contextual grouping of media items |
US7881744B2 (en) * | 2007-04-10 | 2011-02-01 | Research In Motion Limited | Media transfer and control system |
US8027977B2 (en) * | 2007-06-20 | 2011-09-27 | Microsoft Corporation | Recommending content using discriminatively trained document similarity |
US20090017799A1 (en) * | 2007-07-13 | 2009-01-15 | Sony Ericsson Mobile Communications Ab | System, device and method for transmitting a file by use of a throwing gesture to a mobile terminal |
US9961296B2 (en) * | 2007-08-03 | 2018-05-01 | Adobe Systems Incorporated | Methods and apparatus for mandatory video viewing |
KR101214167B1 (en) * | 2007-08-06 | 2012-12-21 | 삼성전자주식회사 | VOD service method, VOD receiver and VOD server |
US8156118B2 (en) * | 2007-08-20 | 2012-04-10 | Samsung Electronics Co., Ltd. | Method and system for generating playlists for content items |
US8819553B2 (en) * | 2007-09-04 | 2014-08-26 | Apple Inc. | Generating a playlist using metadata tags |
US7917083B2 (en) | 2007-10-18 | 2011-03-29 | Mspot, Inc. | Method and apparatus for identifying a piece of content |
EP3503008A1 (en) * | 2007-12-12 | 2019-06-26 | III Holdings 2, LLC | System and method for generating a recommendation on a mobile device |
US8161299B2 (en) * | 2007-12-20 | 2012-04-17 | Intel Corporation | Location based policy system and method for changing computing environments |
US8060525B2 (en) * | 2007-12-21 | 2011-11-15 | Napo Enterprises, Llc | Method and system for generating media recommendations in a distributed environment based on tagging play history information with location information |
WO2009124208A1 (en) | 2008-04-03 | 2009-10-08 | Memeo, Inc. | Online-assisted backup and restore |
US8473429B2 (en) | 2008-07-10 | 2013-06-25 | Samsung Electronics Co., Ltd. | Managing personal digital assets over multiple devices |
CN101634987A (en) * | 2008-07-21 | 2010-01-27 | 上海天统电子科技有限公司 | Multimedia player |
US8655820B2 (en) | 2008-08-28 | 2014-02-18 | Empire Technology Development Llc | Real-time lifestyle recommendation system |
US9191625B2 (en) | 2008-09-26 | 2015-11-17 | Janos Redei | System and methods for transmitting and distributing media content |
US8200602B2 (en) * | 2009-02-02 | 2012-06-12 | Napo Enterprises, Llc | System and method for creating thematic listening experiences in a networked peer media recommendation environment |
CN101551825A (en) * | 2009-05-15 | 2009-10-07 | 中国科学技术大学 | Personalized film recommendation system and method based on attribute description |
US8655464B2 (en) | 2009-06-09 | 2014-02-18 | Microsoft Corporation | Adaptive playlist onboard a vehicle |
US8391673B2 (en) * | 2009-06-26 | 2013-03-05 | Intel Corporation | Method, system, and apparatus to derive content related to a multimedia stream and dynamically combine and display the stream with the related content |
CN101630324B (en) * | 2009-08-18 | 2011-12-07 | 北京航空航天大学 | Method for accessing geographic position information in multimedia resource |
US8321905B1 (en) * | 2009-10-02 | 2012-11-27 | Adobe Systems Incorporated | Fast switching of media streams |
US9405841B2 (en) * | 2009-10-15 | 2016-08-02 | A9.Com, Inc. | Dynamic search suggestion and category specific completion |
US20110295843A1 (en) | 2010-05-26 | 2011-12-01 | Apple Inc. | Dynamic generation of contextually aware playlists |
-
2010
- 2010-10-28 US US12/914,635 patent/US9128961B2/en active Active
-
2011
- 2011-09-29 US US13/248,771 patent/US8375106B2/en active Active
- 2011-10-11 CN CN201710228885.4A patent/CN107256215B/en active Active
- 2011-10-11 KR KR1020137013164A patent/KR101885342B1/en active IP Right Grant
- 2011-10-11 CN CN201180061088.2A patent/CN103403705B/en active Active
- 2011-10-11 KR KR1020187022051A patent/KR101958376B1/en active IP Right Grant
- 2011-10-11 WO PCT/US2011/055790 patent/WO2012057998A1/en active Application Filing
- 2011-10-11 EP EP11771373.5A patent/EP2638483A1/en not_active Ceased
-
2015
- 2015-08-14 US US14/826,326 patent/US20150350302A1/en not_active Abandoned
Also Published As
Publication number | Publication date |
---|---|
US20120110135A1 (en) | 2012-05-03 |
EP2638483A1 (en) | 2013-09-18 |
WO2012057998A1 (en) | 2012-05-03 |
US8375106B2 (en) | 2013-02-12 |
US9128961B2 (en) | 2015-09-08 |
KR20130116269A (en) | 2013-10-23 |
US20150350302A1 (en) | 2015-12-03 |
CN107256215A (en) | 2017-10-17 |
CN103403705B (en) | 2017-05-10 |
KR101958376B1 (en) | 2019-03-14 |
CN103403705A (en) | 2013-11-20 |
KR20180089555A (en) | 2018-08-08 |
US20120110126A1 (en) | 2012-05-03 |
KR101885342B1 (en) | 2018-09-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN107256215B (en) | Loading mobile computing devices with media files | |
US20220394442A1 (en) | Routing queries based on carrier phrase registration | |
US9356901B1 (en) | Determining message prominence | |
US9917904B1 (en) | Identifying non-search actions based on a search-query | |
US8346867B2 (en) | Dynamic playlist for mobile computing device | |
US8661151B2 (en) | Dynamic playlist for mobile computing device | |
US10091331B1 (en) | Prioritized download of social network content | |
US9374670B2 (en) | System and method for determining a location-based preferred media file | |
US9195703B1 (en) | Providing context-relevant information to users | |
US20130238727A1 (en) | System and method for context enhanced messaging | |
CA2806485C (en) | System and method for determining a location-based preferred media file |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
CB02 | Change of applicant information |
Address after: American CaliforniaApplicant after: Google limited liability companyAddress before: American CaliforniaApplicant before: Google Inc. |
|
CB02 | Change of applicant information | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
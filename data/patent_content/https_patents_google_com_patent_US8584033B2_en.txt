US8584033B2 - Individualized tab audio controls - Google Patents
Individualized tab audio controls Download PDFInfo
- Publication number
- US8584033B2 US8584033B2 US13/246,848 US201113246848A US8584033B2 US 8584033 B2 US8584033 B2 US 8584033B2 US 201113246848 A US201113246848 A US 201113246848A US 8584033 B2 US8584033 B2 US 8584033B2
- Authority
- US
- United States
- Prior art keywords
- tab
- audio signal
- audio
- expandable
- gui
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0483—Interaction with page-structured environments, e.g. book metaphor
Definitions
- This description relates to multimedia, and more specifically to controlling an audio signal within an application.
- GUI graphical user interface
- TDI tabbed document interface
- MDI multiple document interface
- TDI's and MDI's are interface styles most commonly included with web browsers, web applications, text editors and preference panes.
- a method may include detecting an audio signal configured to be played from a local loudspeaker.
- the method may also include determining which of one or more applications is included with the audio signal, wherein the determined application includes one or more tabs.
- the method may include determining which tab of the one or more tabs of the determined application is included with the audio signal.
- the method may comprise providing a graphical user interface (GUI) included with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user.
- GUI graphical user interface
- the method may include manipulating the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
- an apparatus may include a global audio manager, an audio controller, and an audio user interface (UI) generator.
- the global audio manager may be configured to detect an audio signal configured to be played from a local loudspeaker, and determine which of one or more applications is included with the audio signal, wherein the determined application includes one or more tabs.
- the audio controller may be configured to determine which tab of the one or more tabs of the determined application is included with the audio signal.
- the audio user interface (UI) generator configured to provide a graphical user interface (GUI) included with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user.
- the audio controller may further be configured to manipulate the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
- a computer program product for manipulating an audio signal may include executable code that, when executed, is configured to cause an audio processing apparatus to detect an audio signal configured to be played from a local loudspeaker.
- the code may also cause the apparatus to determine which tab of the one or more tabs of an application is included with the audio signal.
- the code may also cause the apparatus to provide a graphical user interface (GUI) included with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user.
- GUI graphical user interface
- the code may also cause the apparatus to manipulate the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
- a system and/or method for controlling an audio signal substantially as shown in and/or described in connection with at least one of the figures, as set forth more completely in the claims.
- FIG. 1 is a block diagram of an example embodiment of a system in accordance with the disclosed subject matter.
- FIG. 2 is a block diagram of an example embodiment of a system in accordance with the disclosed subject matter.
- FIGS. 3A and 3B are a schematic diagrams of an example embodiment of an application in accordance with the disclosed subject matter.
- FIG. 4 is a schematic diagram of an example embodiment of a graphical user interface in accordance with the disclosed subject matter.
- FIG. 5 is a schematic diagram of an example embodiment of a graphical user interface in accordance with the disclosed subject matter.
- FIG. 6 is a schematic diagram of an example embodiment of a graphical user interface in accordance with the disclosed subject matter.
- FIG. 7 is a block diagram of an example embodiment of a number of messages in accordance with the disclosed subject matter.
- FIG. 8 is a flowchart of an example embodiment of a technique in accordance with the disclosed subject matter.
- the application(s) that is/are determined to be included with the audio signal(s) can include a plurality of tabs, and the individual tab or tabs that is or are included with the audio signal(s) can be determined.
- the audio signal(s) can be controlled through user commands issued to the application(s) included with the audio signals through the user interface in which the tabs are displayed.
- the method may include manipulating the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
- FIG. 1 shows an example of a generic computer device 100 and a generic mobile computer device 150 , which may be used with the techniques described here.
- Computing device 100 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 150 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 100 includes a processor 102 , memory 104 , a storage device 106 , a high-speed interface 108 connecting to memory 104 and high-speed expansion ports 110 , and a low speed interface 112 connecting to low speed bus 114 and storage device 106 .
- Each of the components 102 , 104 , 106 , 108 , 110 , and 112 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 102 can process instructions for execution within the computing device 100 , including instructions stored in the memory 104 or on the storage device 106 to display graphical information for a graphical user interface (GUI) on an external input/output device, such as display 116 coupled to high speed interface 108 .
- GUI graphical user interface
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 100 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system, etc.).
- the memory 104 stores information within the computing device 100 .
- the memory 104 includes a volatile memory unit or units.
- the memory 104 includes a non-volatile memory unit or units.
- the memory 104 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 106 is capable of providing mass storage for the computing device 100 .
- the storage device 106 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 104 , the storage device 106 , or memory on processor 102 .
- the high speed controller 108 manages bandwidth-intensive operations for the computing device 100 , while the low speed controller 112 manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only.
- the high-speed controller 108 is coupled to memory 104 , display 116 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 110 , which may accept various expansion cards (not shown).
- low-speed controller 112 is coupled to storage device 106 and low-speed expansion port 114 .
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 100 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 120 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 124 . In addition, it may be implemented in a personal computer such as a laptop computer 122 . Alternatively, components from computing device 100 may be combined with other components in a mobile device (not shown), such as device 150 . Each of such devices may contain one or more of computing device 100 , 150 , and an entire system may be made up of multiple computing devices 100 , 150 communicating with each other.
- Computing device 150 includes a processor 152 , memory 164 , an input/output (I/O) device such as a display 154 , a communication interface 166 , and a transceiver 168 , among other components.
- the device 150 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the components 150 , 152 , 164 , 154 , 166 , and 168 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 152 can execute instructions within the computing device 150 , including instructions stored in the memory 164 .
- the processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the device 150 , such as control of user interfaces, applications run by device 150 , and wireless communication by device 150 .
- Processor 152 may communicate with a user through control interface 158 and display interface 156 coupled to a display 154 .
- the display 154 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 156 may comprise appropriate circuitry for driving the display 154 to present graphical and other information to a user.
- the control interface 158 may receive commands from a user and convert them for submission to the processor 152 .
- an external interface 162 may be provide in communication with processor 152 , so as to enable near area communication of device 150 with other devices. External interface 162 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 164 stores information within the computing device 150 .
- the memory 164 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 174 may also be provided and connected to device 150 through expansion interface 172 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 174 may provide extra storage space for device 150 , or may also store applications or other information for device 150 .
- expansion memory 174 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 174 may be provide as a security module for device 150 , and may be programmed with instructions that permit secure use of device 150 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 164 , expansion memory 174 , or memory on processor 152 , that may be received, for example, over transceiver 168 or external interface 162 .
- Device 150 may communicate wirelessly through communication interface 166 , which may include digital signal processing circuitry where necessary. Communication interface 166 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 168 . In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 170 may provide additional navigation- and location-related wireless data to device 150 , which may be used as appropriate by applications running on device 150 .
- GPS Global Positioning System
- Device 150 may also communicate audibly using audio codec 160 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 160 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 150 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 150 .
- Audio codec 160 may receive spoken information from a user and convert it to usable digital information. Audio codec 160 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 150 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 150 .
- the computing device 150 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 180 . It may also be implemented as part of a smart phone 182 , personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described herein can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described herein can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described herein can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- FIG. 2 is a block diagram of an example embodiment of a system 200 in accordance with the disclosed subject matter.
- the system 200 may include a computer 201 , which in turn may include a tabbed application 202 , a global audio manager 204 , and a loudspeaker 206 .
- the tabbed application 202 may include a web browser, which may open multiple tabs of content in a window of the browser.
- other tabbed or MDI applications may be included in various embodiments (e.g., text editors, presentation applications, media players, etc.). It is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- the tabbed application 202 may include a renderer 210 configured to render or cause to be displayed a document within the application 202 or a window GUI element thereof.
- the renderer 210 may display multiple documents in a number of tabs 212 .
- the renderer 202 may be configured to work in conjunction with a tab manager 218 .
- the tab manager 218 may be configured to manage the tabs 212 and their creation, deletion, ordering, etc. with the application 202 .
- a document or other content rendered within a tab 212 may include an element (e.g., Hypertext Markup Language (HTML) Audio or Video tag, embedded audio file, etc.) configured to play or generate an audio signal.
- the audio signal may be controlled by the application's 202 audio controller 214 .
- the audio controller 214 may be configured to pass the audio signal onto the global audio manager 204 .
- the tabbed application 202 may include a web browser that may open a plurality of tabs of audiovideo content, and the audiovideo content of each respective tab may generate audio signals for playback over the loudspeaker 206 .
- the global audio manager 204 may be configured to provide an interface between a plurality of applications (e.g., application 202 , etc.) and the loudspeaker 206 .
- the global audio manager 204 may include driver software, firmware, or a combination thereof.
- the global audio manager 204 may include an audio mixer 230 and an audio interface 232 .
- the audio mixer 203 may be configured to receive audio signals from one or more sources, such as the application 202 , its tabs 212 , plug-ins 220 or 222 , or other audio sources 208 included by or executing on the computer 201 , etc.
- the other audio sources 208 may include other applications, pass-through audio signals (e.g., a microphone, etc.), loopbacked signals (e.g., signals generated by one application and then re-routed to a microphone or audio-in port, etc.), or other audio sources.
- the audio mixer 230 may be configured to provide a level of gain or volume control to each of these audio signals and combine them into a single audio signal for consumption by the loudspeaker 206 .
- an audio signal includes multiple channel audio signals (e.g., stereo, surround sound, 8-track, etc.).
- the audio mixer 230 may apply various levels of gain or volume control (including muting, etc.) to the various channels of the audio signals, and that the loudspeaker 206 may include multiple loudspeakers (e.g., right channel speaker, left channel speaker, etc.).
- the resultant audio signal may be output to the audio interface 232 .
- the audio interface 232 may be configured to provide the combined audio signal to the loudspeaker 206 for playing.
- the loudspeaker 206 may be configured to amplify the received combined audio signal (e.g., to a level detectable by human hearing, etc.).
- the loudspeaker 206 may include an electrical transducer configured to convert an electrical signal to sound or sound waves.
- one or more tabs 212 open in the tabbed application 202 may cause an audio signal to be generated.
- the tabbed application 202 may include a web browser that may open a plurality of tabs of audiovideo content, and the audiovideo content of each respective tab may generate audio signals for playback over the loudspeaker 206 .
- the disclosed techniques disclosed herein may be configured to provide a user 290 with a fine granularity of control of the content in the various tabs, which is responsible for the audio signal(s).
- the audio controller 214 may be configured to determine which tab or tabs 212 of the tabbed application 202 contain the content that causes the audio signal(s) to be generated or which respective audio signal is being generated by which tab 212 . In various embodiments, this task may be performed by the global audio manager 204 , in which case, the global audio manager may first determine which application (e.g., tabbed application 202 or other audio sources 208 , etc.) generated the audio signal.
- application e.g., tabbed application 202 or other audio sources 208 , etc.
- the determination of the tab(s) included with the audio signal(s) may be performed in various ways. For example, in the case of a tab 212 that includes an audio element (e.g., the HTML Audio or Video tags, etc.) the renderer 210 may identify the tab 212 as being a source of the audio signal. In another embodiment, the audio signal may be indirectly generated by the tab 212 . In various embodiments, the audio signal may be generated by a plug-in (e.g., plug-ins 220 and 222 ).
- a plug-in e.g., plug-ins 220 and 222 .
- a “plug-in” is generally a component that adds specific capabilities (e.g., the ability to play a certain filetype, the ability to communicate in a secure fashion, etc.) to a larger application 202 .
- a plug-in may not be capable of being executed without the assistance of the larger application 202 .
- a per tab plug-in 220 may include a plug-in configured to be instantiated a single time per tab 212 or per element on the tab 212 . For example, if the renderer 210 detects that the tab 212 includes an element included with the per tab plug-in 220 , the renderer 210 may invoke or cause a version of the per tab plug-in 220 to be instantiated or executed to handle or process the associated element. If multiple tabs 212 include elements included with the plug-in 220 , multiple instantiations of the plug-in 220 may occur. In such an embodiment, the audio controller 214 may easily determine if a per tab plug-in is the source or included with an audio signal.
- the elements included by or included with a tab 212 may include HTML tags, Extensible Markup Language (XML) elements, GUI elements (e.g., buttons, fields, panes, etc.), embedded objects (e.g., Object Linking and Embedding (OLE) objects, Component Object Model (COM) objects, etc.), etc., although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- HTML tags Extensible Markup Language (XML) elements
- GUI elements e.g., buttons, fields, panes, etc.
- embedded objects e.g., Object Linking and Embedding (OLE) objects, Component Object Model (COM) objects, etc.
- the global plug-in 222 may be instantiated or executed once per computer 201 .
- a single version of the global plug-in 222 may process or handle a number of elements or tabs 212 comprising elements included with the global plug-in 222 .
- the global plug-in 222 may handle or process elements regardless of which application (e.g., application 202 or other audio sources 208 ) generates or is included with the element. In such an embodiment, it may be very difficult for the audio controller 214 to determine on its own which tab 212 or application 202 or 208 is included with an audio signal.
- the audio controller 214 may query the global plug-in 222 to determine which application (e.g., application 202 or 208 ) is included with an audio signal.
- the audio mixer 230 or global audio manager 204 may query the global plug-in 222 to determine the application or tab included with the audio signal.
- the audio mixer 230 or global audio manager 204 may inform the application's 202 audio controller 214 of the results and tab's 212 association with the audio signal.
- the global plug-in 222 may proactively inform either the global audio manager 204 or the application's 202 audio controller 214 that the global plug-in 222 is generating or included with an audio signal and which tab 212 and/or element is included with that audio signal.
- the global plug-in 222 may inform the global audio manager 204 or the application's 202 audio controller 214 of a list of commands or other operations (e.g., play, pause, mute, next track, resume, etc.) which may be performed upon the audio signal.
- a number of possible message formats and messaging fields may be used or employed to communicate between the global plug-in 222 and the global audio manager 204 or audio controller 214 . These messages are discussed in more detail below in reference to FIG. 7 .
- the audio user interface (UI) generator 216 may create a graphical UI (GUI) from which the user 290 may manipulate the audio signal or the audio signal's processing by the computer 201 .
- the audio UI generator 216 may be configured to provide the GUI in the context of a handle of the tab 212 , where a “tab” can be the container of all the content of the webpage and a “handle of a tab” can be a UI element that is included with the tab but displays none of the content, or less than the full content, of the tab.
- a “handle of a tab” or a “tab handle” may include a GUI element configured to facilitate the selection of a tab (e.g., to bring the tab into “focus,” as described in more detail in the context of FIGS. 3A and 3B ), or to move the position of a tab's content within a GUI displayed to a user.
- a tab handle may be selected through the action of a mouse and dragged to move the content included with the tab to a new location on a display screen.
- a tag handle may include GUI elements that provide information about the audio content of a tab (e.g., that indicate whether content of the tab is currently responsible for an audio signal that is being played by loudspeaker 206 ) and may provide selectable control elements with which a user may control audio content within the tab (e.g., that may allow a user to mute/unmute or control the volume of audio content of the tab that is or could be responsible for an audio signal played by loudspeaker 206 ).
- tag handles provide a quick way through which a user can understand which one(s) of many tabs that may be open is/are responsible for generating audio signals that are or that may be played over the loudspeaker 206 , without the user having to review the content of each open tab to understand this.
- the tag handles allow the user to adjust (e.g., mute, unmute, change volume, etc.) an audio signal generated by content of a tab when many tags are open, without the user having to review the content of each open tab to make such adjustments.
- a “label handle” 301 (seen in FIGS. 3 & 4 ) is often a small rectangular GUI element protruding from the main rectangular element of the tab itself, and generally shows the label or title (e.g., filename, HTML page title, etc.) of the tab it is included with.
- a label handle is analogous to and often modeled after traditional card tabs inserted in paper files or card indexes.
- An “expandable tab” 512 (seen in FIG.
- GUI 5 may include a reduced-size GUI (e.g., reduced in size to that similar to a label handle) that represents the contents of a tab, but that hides all or the majority of the tab's contents (e.g., hiding the body element of the tab) but that can update the contents of the tab despite the hidden state of the contents.
- An expandable handle frequently includes an icon or other GUI element to expand the tab back to normal size by un-hiding the hidden elements.
- a “thumbnail handle” 606 (seen in FIG. 6 ) often includes a miniature picture or representation of the contents or a subset of the contents of a tab.
- the thumbnail handle may be active or dynamic, in that the miniature picture may change as the contents of the tab change (e.g., as a video is played, etc.).
- the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- the audio UI generator 216 may be configured to provide the GUI in a way that is included with a handle of the tab 212 .
- the audio UI generator 216 may be configured to provide a GUI included with the tab handle that facilitates or allows a user 290 to manipulate the audio signal.
- the tab handle GUI may generate commands, at a user's 290 request or user interaction (e.g., by selecting a button, shaking the device, etc.), that instruct the application 202 or global audio manager 204 to manipulate the audio signal.
- a user 290 may command that the audio be muted, increased in volume, decreased in volume, paused, that the application 202 or other audio controlling component skip to the next rack within a playlist, etc., although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- the audio controller 214 may be configured to process or act upon the received audio command and manipulate the audio signal that is generated based on the contents of a tab.
- the command may be passed, in whole or in, part or essence, to the audio mixer 230 ; although the audio controller 214 may process the command internally to the application 202 .
- the command may be included with a plug-in (e.g., plug-ins 220 and 222 ). In which case, the audio controller 214 may pass the command, in whole, part or essence, to the respective plug-in for processing.
- commands may be passed to the respective application's 202 audio controller 214 , plug-ins 220 & 212 , or handled internally by the audio mixer 230 .
- FIGS. 3A and 3B are diagrams of an example embodiment of an application 300 in accordance with the disclosed subject matter.
- the application 300 may include a web browser, although it is understood that the above is merely one illustrative example to which the disclosed subject matter is not limited.
- the application 300 may include a plurality of tabs, such as tabs 302 , 304 , 306 , and 308 , where the tabs are used as containers to provide different content to a user within the a single window of the application 300 .
- the tab 302 may be in the foreground or have focus, as illustrated by the tab's 302 label handle 301 being highlighted, such that content contained in tab 302 is displayed to a user.
- a UI element is considered to “have focus” if the operating system or computer has selected or identified that UI element as the proper element to receive user input.
- the content of other tabs 304 , 306 , 308 are not in focus and therefore the content of tabs 304 , 306 , 308 is not displayed, and only the label handles of tabs 304 , 306 , and 308 are displayed.
- tab 306 is in focus, while tabs 302 , 304 , 308 are not in focus, and therefore the content of tabs 302 , 304 , 308 is not displayed.
- Tab 306 may contain a number of content elements or portions of a document that include various elements.
- a first content element 310 may not include any audio producing or generating elements, for example, documents, fill-able forms, pictures, etc.
- a second element 312 may include an audio producing or generating content element, for example, an HTML Audio tag, an AdobeTM FlashTM animation, an MP3 audio file, an advertisement, etc.
- this audio element 312 may rudely begin to play the audio (generating the audio signal) automatically once the audio element 312 is loaded by the tab 306 . In some embodiments, this may occur even if the tab 306 is in the background or does not have focus (e.g., if tab 302 has focus, etc.). This may be inconvenient or embarrassing for a user. Further, if the user was not aware that the tab 306 includes an audio element (e.g., an advertisement, dynamically changing element, etc.), the user may not be sure which tab 304 , 306 , or 308 or even which application (if multiple applications are being executed) is generating or included with the audio signal that is being played. Therefore, the user may find it difficult to quickly turn off, mute, or manipulate the audio signal.
- an audio element e.g., an advertisement, dynamically changing element, etc.
- FIG. 4 is a diagram of an example embodiment of a graphical user interface 400 in accordance with the disclosed subject matter.
- the application 300 of FIGS. 3A and 3B is shown with a GUI included with the label handle 406 of the tab 306 , although it is understood that the illustrated is merely one illustrative example to which the disclosed subject matter is not limited.
- a GUI for controlling or manipulating the audio signal may be included with the label handle 406 of tab 306 .
- the GUI may be included with tab handle 406 even if the tab 306 is not in the foreground or given focus.
- the tab 302 is highlighted to show that its content is currently in the foreground and given focus and that tab 306 is in the background and is not given focus.
- the user may manipulate the audio signal generated by content of tab 306 without opening tab 406 and without causing the contents of tab 306 to be displayed or brought to the foreground.
- the GUI included with label handle 406 may include a badge or icon 410 configured to indicate that the tab 306 is included with an audio signal.
- a badge or icon 410 configured to indicate that the tab 306 is included with an audio signal.
- each tab may be included with its own audio manipulation GUI and icon 410 .
- the audio signal may be muted or unmated, in a toggling fashion.
- the icon 410 may be changed (e.g., to a picture of a speaker with a red “X” over it, etc.) to indicate the status of the audio signal.
- a user may hover the mouse or cursor (not shown) over the icon 410 and use a scroll wheel or dynamically displayed slide-bar to control the volume level.
- the icon 410 may dynamically change (e.g., gaining or shedding audio wave bars) to reflect any manipulation of the audio signal.
- the GUI included with the label handle 406 may include a menu 412 .
- a menu 412 may be displayed.
- the menu 412 may include a variety of audio manipulation commands (e.g., play, pause, mute, next, previous, etc.) that may be issued by the user to the application.
- the selection of the GUI included with the label handle 406 to display menu 412 may not cause the tab 306 to have focus and may not cause the content of tab 306 to be brought to the foreground.
- the content of tab 302 may continue to be displayed to the user while menu 412 is also displayed.
- the menu may or may appear in association in association with the tab 306 .
- the audio manipulation commands may vary by the type of audio source (e.g., HTML Audio tag, HTML Video tag, a single MP3 file, a FlashTM file, etc.).
- a plug-in may instruct the audio UI generator which commands are supported for an audio source.
- a plug-in or the file played by the plug-in may only support the minimizing the element or playing the element in a full screen mode (e.g., a video).
- a plug-in or the file played by the plug-in may support skipping or repeating tracks, attempting to buy a song, etc.
- the commands related to volume control may be universally supported and controlled by the audio controller or audio mixer, regardless of the plug-in support, while other commands are supported based upon the plug-in, as described above. It is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- FIG. 5 is a diagram of an example embodiment of a graphical user interface 500 in accordance with the disclosed subject matter.
- the application 300 of FIGS. 3A and 3B is shown with tab handles for tabs 302 , 304 , 306 , 308 displayed in a tab bar 311 .
- Tab 306 is in focus and its contents are displayed to the user.
- handle 512 is an expandable handle of a tab 309 that may have been previously opened in the application 300 and/or whose tab handle may have been previously positioned in tab bar 311 .
- tab 309 may have been minimized and docked (e.g., to a task bar), either within a window included with the application 300 or outside of a window included with the application (e.g., to a task bar or a desktop).
- the application 300 may support shrinking or minimizing a tab, and in the process of shrinking or minimizing a tab, may convert the tab into an expandable tab.
- the shrunken or minimized tab may be accessible or controlled via an expandable tab handle 512 .
- the expandable tab handle 512 may be accessible or visible when any tab in the tab bar 311 is in focus.
- the expandable tab handle 512 may include one or more GUI elements 510 configured to allow the manipulation of an audio signal included with content of the expandable tab 309 .
- the GUI may include an indicator badge or icon 510 , similar to the icon 410 , as described above.
- the GUI may include more complex icons or controls such as those of controls 618 , as described below.
- the expandable tab handle 512 may also include a label or title that describes the contents of the tab (e.g., the audio file playing, the plug-in employed by the element, etc.).
- the expandable tab handle 512 may include a sizing icon or GUI element 514 .
- the sizing GUI element 514 may be used to maximize the expandable tab or return to the tab or element to its original size. Conversely, when in an expanded or maximized state, the sizing GUI element 514 may be used to minimize or shrink the expandable tab or element to its shrunken or minimized state.
- an expandable tab and the expandable tab handle 512 may be employed to give quick access and control to an audio signal regardless of which tab (e.g., 302 ) a user has in the foreground.
- a tab including a media player may be converted into an expandable tab, and the tab's expandable tab handle 512 may be accessed while tab 302 is in focus.
- FIG. 6 is a diagram of an example embodiment of a graphical user interface 600 in accordance with the disclosed subject matter.
- application 300 is shown, however, it is understood that such a UI 600 may be included a part of an operating system or windows manager (e.g., a window switcher, etc.).
- the UI 600 may be included as part of a home screen or initial tab interface of application 300 .
- a generic tab handle 315 can be displayed in the tab bar, and thumbnails of tabs that were previously displayed can be shown.
- the UI 600 may be displayed (e.g., upon user request) while one or more tabs are open in a browser, and thumbnails of the currently open tabs can be shown. It is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- the UI 600 may display thumbnail tab handles of the tabs 302 , 304 , 306 and 308 , which display a representation of, or less than the full content of, tabs 302 , 304 , 306 and 308 .
- These thumbnail tab handles may allow a user to select or manipulate (e.g., close, select, move, rearrange, etc.) the various tabs of the application 300 or, in another embodiment, other applications or windows.
- thumbnail tab handle 606 or the GUI included with the thumbnail handle 606 may include an icon or badge 610 configured to indicate which tab is included with the audio signal, as described above.
- the thumbnail tab handle 606 or the GUI included with the thumbnail handle 606 may include GUI elements 618 configured to facilitate the manipulation of the audio signal.
- GUI elements 618 may include an icon to raise the volume of the audio signal, lower the volume of the audio signal, stop the audio signal, pause the audio signal, or resume or play the audio signal, etc. It is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- FIG. 7 is a block diagram of an example embodiment of a number of messages in accordance with the disclosed subject matter.
- the application, global audio manager, or audio driver may communicate amongst themselves and with various plug-ins.
- Message 702 illustrates that, in one embodiment, an application or an audio controller thereof, may communicate with the global audio manager or driver.
- the application may issue a command to the global audio manager to perform a relatively low-level audio command (e.g., mute an audio signal, alter the volume related to the audio signal, etc.).
- the message may include a process identifier (ID) field 712 configured to identify which process, tab, or application the message 702 is in reference to.
- each tab may be include or be included with a particular process.
- a “process” is an instance of a computing program that is being executed.
- a multi-threaded application may manage a plurality of processes, for example each process included with a tab or plug-in.
- the message 702 may also include an audio command field 714 configured to indicate the audio command the application wishes the global audio manager or driver to perform.
- Message 704 illustrates that, in one embodiment, a plug-in may communicate with an application, audio controller, global audio manager, or driver.
- the plug-in may inform the application or driver, or portions thereof, which tab or element displayed or include by a tab is included with an audio signal.
- this message 704 may be in response to a request to identify the tab or element.
- the message 704 may be initiated by the plug-in when the plug-in identifies an audio signal that is the plug-in's responsibility to play.
- the message 704 may include a tab ID field 716 configured to identify the tab of the application that includes or is included with the audio signal.
- the message 704 may include a command list or field 718 that is configured to identify the audio commands supported by the audio signal or the plug-in (e.g., next track, pervious track, full screen, etc.).
- the message 704 may include an element ID field 720 configured to identify the element (e.g., an HTML Embed tag, etc.) included with the audio signal; although in various embodiments this field 720 may be excluded or not included.
- the message 704 may also include a process ID 712 field, as described above. Although, in various embodiments, the tab ID field 716 may identify the tab via a process ID.
- Message 706 illustrates that, in one embodiment, an application, audio controller, global audio manager, or driver may communicate with a plug-in.
- the message 706 may be configured to issue or request that the plug-in perform an audio command on an audio signal under the control, at least partially, of the plug-in.
- the message 706 may include an element ID field 720 configured to identify the element or tab included with the audio signal such that the plug-in may identify the proper audio signal to which the message 706 applies.
- the element ID field 720 may include a tab or process ID, as described above.
- the message 706 may also include a plug-in audio command field 722 configured to indicate the command the application or other wishes the plug-in to perform. Plug-in audio commands may include, but are not limited to, next track, pervious track, full screen, etc.
- FIG. 8 is a flow chart of an example embodiment of a technique in accordance with the disclosed subject matter.
- the technique 800 may be used or produced by the systems such as those of FIG. 1 or 2 .
- portions of technique 800 may involve or include the use of graphical user interfaces such as those of FIG. 3 , 4 , 5 , or 6
- another portion of technique 800 may include the use or production of the messages of FIG. 7 .
- Block 802 illustrates that, in one embodiment, an audio signal, to be played from a local loudspeaker, may be detected, as described above.
- one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio controller 214 , plug-ins 220 or 222 , or the global audio manager 204 of FIG. 2 , as described above.
- Block 804 illustrates that, in one embodiment, a determination may be made as to which of one or more applications is included with the audio signal, as described above.
- the associated application may include one or more tabs, as described above.
- determining an application may include determining that a plug-in included with an application is included with the audio signal, as described above.
- one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio controller 214 , plug-ins 220 or 222 , or the global audio manager 204 of FIG. 2 , as described above.
- Block 806 illustrates that, in one embodiment, a determination may be made as to which tab of the one or more tabs of the determined application is included with the audio signal, as described above. In various embodiments, determining which tab may include determining which tab of the application is included with the plug-in, as described above. In some embodiments, where the plug-in is included with a plurality of tabs, determining which tab may include receiving an indication from the plug-in which tab is included with the audio signal, as described above. In various embodiments, one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio controller 214 , plug-ins 220 or 222 , or the global audio manager 204 of FIG. 2 , as described above.
- Block 808 illustrates that, in one embodiment, a GUI included with a handle of a tab may be provided, as described above.
- the graphical user interface may be configured to facilitate the manipulation of the audio signal by a user, as described above.
- providing a GUI may include providing an indication on a label handle of a tab that the tab is included with the audio signal, as described above.
- providing a GUI may include providing a GUI substantially on a thumbnail handle of a tab, as described above.
- providing a GUI may include providing a GUI as part of an expandable tab handle, as described above.
- one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio UI generator 216 of FIG. 2 , as described above.
- Block 810 illustrates that, in one embodiment, the audio signal may be manipulated, based upon a command generated by the graphical user interface in response to a user interaction, as described above.
- the command generated by the GUI may include a command to: decrease the volume of the audio signal, increase the volume of the audio signal, mute the volume of the audio signal, pause the audio signal, or move within a playlist included with the audio signal, etc., although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- manipulating may include responding to the command, as described above.
- one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio controller 214 , plug-ins 220 or 222 , or the global audio manager 204 of FIG. 2 , as described above.
- Block 812 illustrates that, in one embodiment, the determined tab may be converted to an expandable tab, as described above.
- providing a GUI as described in Block 808 may include, when the expandable tab is closed, providing a GUI included with the expandable handle of the expandable tab, as described above. Further, when the expandable tab is opened, providing a GUI included with the label handle of the expandable tab, as described above.
- one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio UI generator 216 of FIG. 2 , as described above.
- Block 814 illustrates that, in one embodiment, a determination may be made as to which of a plurality of elements, included by the determined tab, is included with the audio signal, as described above.
- the plurality of elements may include HTML tags, Extensible Markup Language (XML) elements, GUI elements (e.g., buttons, fields, panes, etc.), embedded objects (e.g., Object Linking and Embedding (OLE) objects, Component Object Model (COM) objects, etc.), etc., although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
- one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio controller 214 , plug-ins 220 or 222 , or the global audio manager 204 of FIG. 2 , as described above.
- Block 816 illustrates that, in one embodiment, the determined element may be converted to an expandable tab, as described above.
- providing a GUI as described in Block 808 may include, when the expandable tab is closed, providing a GUI included with the expandable handle of the expandable tab, as described above. Further, when the expandable tab is opened, a GUI included with the label handle of the determined tab may be provided, as described above.
- one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2 , the audio UI generator 216 of FIG. 2 , as described above.
- Implementations of the various techniques described herein may be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Implementations may be implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine-readable storage device or in a propagated signal, for execution by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers.
- data processing apparatus e.g., a programmable processor, a computer, or multiple computers.
- a computer program such as the computer program(s) described above, can be written in any form of programming language, including compiled or interpreted languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
- Method steps may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method steps also may be performed by, and an apparatus may be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- FPGA field programmable gate array
- ASIC application-specific integrated circuit
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- Elements of a computer may include at least one processor for executing instructions and one or more memory devices for storing instructions and data.
- a computer also may include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- Information carriers suitable for embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory may be supplemented by, or incorporated in special purpose logic circuitry.
- implementations may be implemented on a computer having a display device, e.g., a cathode ray tube (CRT) or liquid crystal display (LCD) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a cathode ray tube (CRT) or liquid crystal display (LCD) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- Implementations may be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation, or any combination of such back-end, middleware, or front-end components.
- Components may be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (LAN) and a wide area network (WAN), e.g., the Internet.
- LAN local area network
- WAN wide area network
Abstract
According to one general aspect, a method may include detecting an audio signal configured to be played from a local loudspeaker. The method may also include determining which of one or more applications is included with the audio signal, wherein the determined application includes one or more tabs. The method may include determining which tab of the one or more tabs of the determined application is included with the audio signal. The method may comprise providing a graphical user interface (GUI) included with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user. The method may include manipulating the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
Description
This application is a continuation of, and claims priority under 35 U.S.C. §120 to, application Ser. No. 12/904,135, filed on Oct. 13, 2010, titled “INDIVIDUALIZED TAB AUDIO CONTROLS”, which claims the benefit, under 35 U.S.C. §119(e), of U.S. Provisional Application 61/251,286, filed Oct. 13, 2009, titled “POWER MANAGEMENT AND DATA CACHING IN A COMPUTING PLATFORM,” and of U.S. Provisional Application Ser. No. 61/360,176, entitled “INDIVIDUALIZED TAB AUDIO CONTROLS” filed on Jun. 30, 2010. These prior applications are hereby incorporated by reference.
This description relates to multimedia, and more specifically to controlling an audio signal within an application.
Traditionally, if a computer played an audio signal there was only one point of control for that signal. A user could mute, lower or raise the volume for the computer as a whole. With the introduction of Microsoft™ Windows™ Vista™, a user could control the audio level on a per application basis.
In many applications several documents can be displayed at once in a graphical user interface (GUI). In the area of GUIs, a tabbed document interface (TDI) or multiple document interface (MDI) allows multiple documents to be contained within a single window. Often tabs can be used as containers to provide different content (e.g., documents, webpages, etc.) to a user within the a single window of an application, and to allow the user to easily switch between viewing and interacting with the different content in the different tabs. TDI's and MDI's are interface styles most commonly included with web browsers, web applications, text editors and preference panes.
Conflict may arise when more than one tab wishes to play an audio signal at the same time. For example, advertisements sometimes play jingles or other audio signals. If two or more tabs include advertisements, these advertisements may attempt to play simultaneously resulting in a cacophony of noise. Typically these unwanted sound generators (e.g., advertisements, etc.) will begin playing even if their associated tab is not in the foreground or otherwise visible to the user.
According to one general aspect, a method may include detecting an audio signal configured to be played from a local loudspeaker. The method may also include determining which of one or more applications is included with the audio signal, wherein the determined application includes one or more tabs. The method may include determining which tab of the one or more tabs of the determined application is included with the audio signal. The method may comprise providing a graphical user interface (GUI) included with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user. The method may include manipulating the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
According to another general aspect, an apparatus may include a global audio manager, an audio controller, and an audio user interface (UI) generator. The global audio manager may be configured to detect an audio signal configured to be played from a local loudspeaker, and determine which of one or more applications is included with the audio signal, wherein the determined application includes one or more tabs. The audio controller may be configured to determine which tab of the one or more tabs of the determined application is included with the audio signal. The audio user interface (UI) generator configured to provide a graphical user interface (GUI) included with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user. The audio controller may further be configured to manipulate the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
According to another general aspect, a computer program product for manipulating an audio signal may include executable code that, when executed, is configured to cause an audio processing apparatus to detect an audio signal configured to be played from a local loudspeaker. The code may also cause the apparatus to determine which tab of the one or more tabs of an application is included with the audio signal. The code may also cause the apparatus to provide a graphical user interface (GUI) included with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user. The code may also cause the apparatus to manipulate the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
A system and/or method for controlling an audio signal, substantially as shown in and/or described in connection with at least one of the figures, as set forth more completely in the claims.
Like reference symbols in the various drawings indicate like elements.
Techniques are described herein in which one or more audio signals that are to be output from a local loudspeaker are detected and in which one or more applications running on a computer system are determined to be included with the audio signal(s). In addition, the application(s) that is/are determined to be included with the audio signal(s) can include a plurality of tabs, and the individual tab or tabs that is or are included with the audio signal(s) can be determined. Within a graphical user interface in which the tabs included with the audio signal(s) are displayed to a user, the audio signal(s) can be controlled through user commands issued to the application(s) included with the audio signals through the user interface in which the tabs are displayed. The method may include manipulating the audio signal, based upon a command generated by the graphical user interface in response to a user interaction.
The memory 104 stores information within the computing device 100. In one implementation, the memory 104 includes a volatile memory unit or units. In another implementation, the memory 104 includes a non-volatile memory unit or units. The memory 104 may also be another form of computer-readable medium, such as a magnetic or optical disk.
The storage device 106 is capable of providing mass storage for the computing device 100. In one implementation, the storage device 106 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the memory 104, the storage device 106, or memory on processor 102.
The high speed controller 108 manages bandwidth-intensive operations for the computing device 100, while the low speed controller 112 manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only. In one implementation, the high-speed controller 108 is coupled to memory 104, display 116 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 110, which may accept various expansion cards (not shown). In the implementation, low-speed controller 112 is coupled to storage device 106 and low-speed expansion port 114. The low-speed expansion port, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
The computing device 100 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 120, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 124. In addition, it may be implemented in a personal computer such as a laptop computer 122. Alternatively, components from computing device 100 may be combined with other components in a mobile device (not shown), such as device 150. Each of such devices may contain one or more of computing device 100, 150, and an entire system may be made up of multiple computing devices 100, 150 communicating with each other.
The processor 152 can execute instructions within the computing device 150, including instructions stored in the memory 164. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide, for example, for coordination of the other components of the device 150, such as control of user interfaces, applications run by device 150, and wireless communication by device 150.
The memory 164 stores information within the computing device 150. The memory 164 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units. Expansion memory 174 may also be provided and connected to device 150 through expansion interface 172, which may include, for example, a SIMM (Single In Line Memory Module) card interface. Such expansion memory 174 may provide extra storage space for device 150, or may also store applications or other information for device 150. Specifically, expansion memory 174 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, expansion memory 174 may be provide as a security module for device 150, and may be programmed with instructions that permit secure use of device 150. In addition, secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
The memory may include, for example, flash memory and/or NVRAM memory, as discussed below. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the memory 164, expansion memory 174, or memory on processor 152, that may be received, for example, over transceiver 168 or external interface 162.
The computing device 150 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 180. It may also be implemented as part of a smart phone 182, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described herein can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms “machine-readable medium” “computer-readable medium” refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term “machine-readable signal” refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described herein can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
The systems and techniques described herein can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
In various embodiments, the tabbed application 202 may include a renderer 210 configured to render or cause to be displayed a document within the application 202 or a window GUI element thereof. In the illustrated embodiment, the renderer 210 may display multiple documents in a number of tabs 212. In one embodiment, the renderer 202 may be configured to work in conjunction with a tab manager 218. In such an embodiment, the tab manager 218 may be configured to manage the tabs 212 and their creation, deletion, ordering, etc. with the application 202.
In various embodiments, a document or other content rendered within a tab 212 may include an element (e.g., Hypertext Markup Language (HTML) Audio or Video tag, embedded audio file, etc.) configured to play or generate an audio signal. In such an embodiment, the audio signal may be controlled by the application's 202 audio controller 214. The audio controller 214 may be configured to pass the audio signal onto the global audio manager 204. In one specific example, the tabbed application 202 may include a web browser that may open a plurality of tabs of audiovideo content, and the audiovideo content of each respective tab may generate audio signals for playback over the loudspeaker 206.
In various embodiments, the global audio manager 204 may be configured to provide an interface between a plurality of applications (e.g., application 202, etc.) and the loudspeaker 206. In some embodiments, the global audio manager 204 may include driver software, firmware, or a combination thereof. In one embodiment, the global audio manager 204 may include an audio mixer 230 and an audio interface 232.
In one embodiment, the audio mixer 203 may be configured to receive audio signals from one or more sources, such as the application 202, its tabs 212, plug-ins 220 or 222, or other audio sources 208 included by or executing on the computer 201, etc. In various embodiments, the other audio sources 208 may include other applications, pass-through audio signals (e.g., a microphone, etc.), loopbacked signals (e.g., signals generated by one application and then re-routed to a microphone or audio-in port, etc.), or other audio sources. The audio mixer 230 may be configured to provide a level of gain or volume control to each of these audio signals and combine them into a single audio signal for consumption by the loudspeaker 206.
It is understood that while herein the term “an audio signal” is used in the singular sense, the term includes multiple channel audio signals (e.g., stereo, surround sound, 8-track, etc.). In such an embodiment, the audio mixer 230 may apply various levels of gain or volume control (including muting, etc.) to the various channels of the audio signals, and that the loudspeaker 206 may include multiple loudspeakers (e.g., right channel speaker, left channel speaker, etc.).
In one embodiment, once the audio mixer 230 has combined the various received audio signals, the resultant audio signal may be output to the audio interface 232. The audio interface 232 may be configured to provide the combined audio signal to the loudspeaker 206 for playing. The loudspeaker 206 may be configured to amplify the received combined audio signal (e.g., to a level detectable by human hearing, etc.). The loudspeaker 206 may include an electrical transducer configured to convert an electrical signal to sound or sound waves.
In various embodiments, one or more tabs 212 open in the tabbed application 202 may cause an audio signal to be generated. For example, as explained above, in a specific example, the tabbed application 202 may include a web browser that may open a plurality of tabs of audiovideo content, and the audiovideo content of each respective tab may generate audio signals for playback over the loudspeaker 206. In various embodiments, the disclosed techniques disclosed herein may be configured to provide a user 290 with a fine granularity of control of the content in the various tabs, which is responsible for the audio signal(s).
In various embodiments, the audio controller 214 may be configured to determine which tab or tabs 212 of the tabbed application 202 contain the content that causes the audio signal(s) to be generated or which respective audio signal is being generated by which tab 212. In various embodiments, this task may be performed by the global audio manager 204, in which case, the global audio manager may first determine which application (e.g., tabbed application 202 or other audio sources 208, etc.) generated the audio signal.
The determination of the tab(s) included with the audio signal(s) may be performed in various ways. For example, in the case of a tab 212 that includes an audio element (e.g., the HTML Audio or Video tags, etc.) the renderer 210 may identify the tab 212 as being a source of the audio signal. In another embodiment, the audio signal may be indirectly generated by the tab 212. In various embodiments, the audio signal may be generated by a plug-in (e.g., plug-ins 220 and 222).
In this context, a “plug-in” is generally a component that adds specific capabilities (e.g., the ability to play a certain filetype, the ability to communicate in a secure fashion, etc.) to a larger application 202. In various embodiments, a plug-in may not be capable of being executed without the assistance of the larger application 202. Generally, there are two types of plug-ins, a per tab plug-in 220 and a global plug-in 222, although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
A per tab plug-in 220 may include a plug-in configured to be instantiated a single time per tab 212 or per element on the tab 212. For example, if the renderer 210 detects that the tab 212 includes an element included with the per tab plug-in 220, the renderer 210 may invoke or cause a version of the per tab plug-in 220 to be instantiated or executed to handle or process the associated element. If multiple tabs 212 include elements included with the plug-in 220, multiple instantiations of the plug-in 220 may occur. In such an embodiment, the audio controller 214 may easily determine if a per tab plug-in is the source or included with an audio signal.
In various embodiments, the elements included by or included with a tab 212 may include HTML tags, Extensible Markup Language (XML) elements, GUI elements (e.g., buttons, fields, panes, etc.), embedded objects (e.g., Object Linking and Embedding (OLE) objects, Component Object Model (COM) objects, etc.), etc., although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
In the case of a global plug-in 222, the global plug-in 222 may be instantiated or executed once per computer 201. In such an embodiment, a single version of the global plug-in 222 may process or handle a number of elements or tabs 212 comprising elements included with the global plug-in 222. In various embodiments, the global plug-in 222 may handle or process elements regardless of which application (e.g., application 202 or other audio sources 208) generates or is included with the element. In such an embodiment, it may be very difficult for the audio controller 214 to determine on its own which tab 212 or application 202 or 208 is included with an audio signal.
In one embodiment, the audio controller 214 may query the global plug-in 222 to determine which application (e.g., application 202 or 208) is included with an audio signal. In another embodiment, the audio mixer 230 or global audio manager 204 may query the global plug-in 222 to determine the application or tab included with the audio signal. In such an embodiment, if the audio signal is included with an application 202 that supports fine grain audio control, the audio mixer 230 or global audio manager 204 may inform the application's 202 audio controller 214 of the results and tab's 212 association with the audio signal.
In yet another embodiment, the global plug-in 222 may proactively inform either the global audio manager 204 or the application's 202 audio controller 214 that the global plug-in 222 is generating or included with an audio signal and which tab 212 and/or element is included with that audio signal. In various embodiments, the global plug-in 222 may inform the global audio manager 204 or the application's 202 audio controller 214 of a list of commands or other operations (e.g., play, pause, mute, next track, resume, etc.) which may be performed upon the audio signal.
A number of possible message formats and messaging fields may be used or employed to communicate between the global plug-in 222 and the global audio manager 204 or audio controller 214. These messages are discussed in more detail below in reference to FIG. 7 .
Once the tab(s) 212 included with an audio signal have been determined (e.g., by the audio controller 214 or the global audio manager 204), the audio user interface (UI) generator 216 may create a graphical UI (GUI) from which the user 290 may manipulate the audio signal or the audio signal's processing by the computer 201. The audio UI generator 216 may be configured to provide the GUI in the context of a handle of the tab 212, where a “tab” can be the container of all the content of the webpage and a “handle of a tab” can be a UI element that is included with the tab but displays none of the content, or less than the full content, of the tab.
A “handle of a tab” or a “tab handle” may include a GUI element configured to facilitate the selection of a tab (e.g., to bring the tab into “focus,” as described in more detail in the context of FIGS. 3A and 3B ), or to move the position of a tab's content within a GUI displayed to a user. For example, a tab handle may be selected through the action of a mouse and dragged to move the content included with the tab to a new location on a display screen.
Additionally, by creating the graphical UI (GUI) from which the user 290 may manipulate the audio signal or the audio signal's processing and by providing a tab handle to include the UI, the tab handle may facilitate the control of audio content within the tab. Thus, a tag handle may include GUI elements that provide information about the audio content of a tab (e.g., that indicate whether content of the tab is currently responsible for an audio signal that is being played by loudspeaker 206) and may provide selectable control elements with which a user may control audio content within the tab (e.g., that may allow a user to mute/unmute or control the volume of audio content of the tab that is or could be responsible for an audio signal played by loudspeaker 206). Thus, tag handles provide a quick way through which a user can understand which one(s) of many tabs that may be open is/are responsible for generating audio signals that are or that may be played over the loudspeaker 206, without the user having to review the content of each open tab to understand this. Furthermore, the tag handles allow the user to adjust (e.g., mute, unmute, change volume, etc.) an audio signal generated by content of a tab when many tags are open, without the user having to review the content of each open tab to make such adjustments.
While many types of tab handles may exist and are contemplated within the scope of the disclosed subject matter, three types are described in detail below, each in turn and in reference to their specific figures. A “label handle” 301 (seen in FIGS. 3 & 4 ) is often a small rectangular GUI element protruding from the main rectangular element of the tab itself, and generally shows the label or title (e.g., filename, HTML page title, etc.) of the tab it is included with. A label handle is analogous to and often modeled after traditional card tabs inserted in paper files or card indexes. An “expandable tab” 512 (seen in FIG. 5 ) may include a reduced-size GUI (e.g., reduced in size to that similar to a label handle) that represents the contents of a tab, but that hides all or the majority of the tab's contents (e.g., hiding the body element of the tab) but that can update the contents of the tab despite the hidden state of the contents. An expandable handle frequently includes an icon or other GUI element to expand the tab back to normal size by un-hiding the hidden elements. A “thumbnail handle” 606 (seen in FIG. 6 ) often includes a miniature picture or representation of the contents or a subset of the contents of a tab. In various embodiments, the thumbnail handle may be active or dynamic, in that the miniature picture may change as the contents of the tab change (e.g., as a video is played, etc.). Although, it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
As described above, the audio UI generator 216 may be configured to provide the GUI in a way that is included with a handle of the tab 212. In various embodiments, the audio UI generator 216 may be configured to provide a GUI included with the tab handle that facilitates or allows a user 290 to manipulate the audio signal. In such an embodiment, the tab handle GUI may generate commands, at a user's 290 request or user interaction (e.g., by selecting a button, shaking the device, etc.), that instruct the application 202 or global audio manager 204 to manipulate the audio signal. For example, a user 290 may command that the audio be muted, increased in volume, decreased in volume, paused, that the application 202 or other audio controlling component skip to the next rack within a playlist, etc., although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
In various embodiments, the audio controller 214 may be configured to process or act upon the received audio command and manipulate the audio signal that is generated based on the contents of a tab. In some embodiments, if the command is one that may be performed by the audio mixer 230 (e.g., muting, volume control, etc.) the command may be passed, in whole or in, part or essence, to the audio mixer 230; although the audio controller 214 may process the command internally to the application 202. In another embodiment, the command may be included with a plug-in (e.g., plug-ins 220 and 222). In which case, the audio controller 214 may pass the command, in whole, part or essence, to the respective plug-in for processing. Likewise, in embodiments in which the global audio manager 204 is the controlling component, commands may be passed to the respective application's 202 audio controller 214, plug-ins 220 & 212, or handled internally by the audio mixer 230.
In one embodiment, shown in FIG. 3A , the tab 302 may be in the foreground or have focus, as illustrated by the tab's 302 label handle 301 being highlighted, such that content contained in tab 302 is displayed to a user. In the computing context, a UI element is considered to “have focus” if the operating system or computer has selected or identified that UI element as the proper element to receive user input. The content of other tabs 304, 306, 308 are not in focus and therefore the content of tabs 304, 306, 308 is not displayed, and only the label handles of tabs 304, 306, and 308 are displayed.
In FIG. 3B tab 306 is in focus, while tabs 302, 304, 308 are not in focus, and therefore the content of tabs 302, 304, 308 is not displayed. Tab 306 may contain a number of content elements or portions of a document that include various elements. A first content element 310 may not include any audio producing or generating elements, for example, documents, fill-able forms, pictures, etc., whereas a second element 312 may include an audio producing or generating content element, for example, an HTML Audio tag, an Adobe™ Flash™ animation, an MP3 audio file, an advertisement, etc.
In various embodiments, this audio element 312 may rudely begin to play the audio (generating the audio signal) automatically once the audio element 312 is loaded by the tab 306. In some embodiments, this may occur even if the tab 306 is in the background or does not have focus (e.g., if tab 302 has focus, etc.). This may be inconvenient or embarrassing for a user. Further, if the user was not aware that the tab 306 includes an audio element (e.g., an advertisement, dynamically changing element, etc.), the user may not be sure which tab 304, 306, or 308 or even which application (if multiple applications are being executed) is generating or included with the audio signal that is being played. Therefore, the user may find it difficult to quickly turn off, mute, or manipulate the audio signal.
In one embodiment, once it has been determined that the application 300 and that tab 306 are generating or are included with the audio signal (generated by element 312 of FIGS. 3A and 3B ), a GUI for controlling or manipulating the audio signal may be included with the label handle 406 of tab 306. In the illustrated embodiment, the GUI may be included with tab handle 406 even if the tab 306 is not in the foreground or given focus. In the illustrated embodiment, the tab 302 is highlighted to show that its content is currently in the foreground and given focus and that tab 306 is in the background and is not given focus. In such an embodiment, the user may manipulate the audio signal generated by content of tab 306 without opening tab 406 and without causing the contents of tab 306 to be displayed or brought to the foreground.
In one embodiment, the GUI included with label handle 406 may include a badge or icon 410 configured to indicate that the tab 306 is included with an audio signal. In various embodiments, if a plurality of tabs (e.g., tabs 306 and 308) are both generating audio signals, each tab may be included with its own audio manipulation GUI and icon 410. In one embodiment, if the user selects or clicks on the icon or badge 410, the audio signal may be muted or unmated, in a toggling fashion. In such an embodiment, the icon 410 may be changed (e.g., to a picture of a speaker with a red “X” over it, etc.) to indicate the status of the audio signal. In another embodiment, a user may hover the mouse or cursor (not shown) over the icon 410 and use a scroll wheel or dynamically displayed slide-bar to control the volume level. Once again, the icon 410 may dynamically change (e.g., gaining or shedding audio wave bars) to reflect any manipulation of the audio signal. It is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
In another embodiment, the GUI included with the label handle 406 may include a menu 412. In various embodiments, if a user right-clicks or otherwise selects the label handle 406 in a predetermined fashion, a menu 412 may be displayed. In some embodiments, the menu 412 may include a variety of audio manipulation commands (e.g., play, pause, mute, next, previous, etc.) that may be issued by the user to the application. In such an embodiment, the selection of the GUI included with the label handle 406 to display menu 412 may not cause the tab 306 to have focus and may not cause the content of tab 306 to be brought to the foreground. Thus, the content of tab 302 may continue to be displayed to the user while menu 412 is also displayed. The menu may or may appear in association in association with the tab 306.
In various embodiments, the audio manipulation commands may vary by the type of audio source (e.g., HTML Audio tag, HTML Video tag, a single MP3 file, a Flash™ file, etc.). In such an embodiment, a plug-in may instruct the audio UI generator which commands are supported for an audio source. For example, a plug-in or the file played by the plug-in may only support the minimizing the element or playing the element in a full screen mode (e.g., a video). In another example, a plug-in or the file played by the plug-in may support skipping or repeating tracks, attempting to buy a song, etc. In another embodiment, the commands related to volume control (e.g., muting, quieter, louder, etc.) may be universally supported and controlled by the audio controller or audio mixer, regardless of the plug-in support, while other commands are supported based upon the plug-in, as described above. It is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
The expandable tab handle 512 may include one or more GUI elements 510 configured to allow the manipulation of an audio signal included with content of the expandable tab 309. In the illustrated embodiment, the GUI may include an indicator badge or icon 510, similar to the icon 410, as described above. In another embodiment, the GUI may include more complex icons or controls such as those of controls 618, as described below. Although, it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited. In various embodiments, the expandable tab handle 512 may also include a label or title that describes the contents of the tab (e.g., the audio file playing, the plug-in employed by the element, etc.).
In some embodiments, the expandable tab handle 512 may include a sizing icon or GUI element 514. In the illustrated embodiment, the sizing GUI element 514 may be used to maximize the expandable tab or return to the tab or element to its original size. Conversely, when in an expanded or maximized state, the sizing GUI element 514 may be used to minimize or shrink the expandable tab or element to its shrunken or minimized state.
In such an embodiment, an expandable tab and the expandable tab handle 512 may be employed to give quick access and control to an audio signal regardless of which tab (e.g., 302) a user has in the foreground. For example, a tab including a media player may be converted into an expandable tab, and the tab's expandable tab handle 512 may be accessed while tab 302 is in focus. Although, it is understood that the above is merely one illustrative example to which the disclosed subject matter is not limited.
Thus, in one embodiment, the UI 600 may display thumbnail tab handles of the tabs 302, 304, 306 and 308, which display a representation of, or less than the full content of, tabs 302, 304, 306 and 308. These thumbnail tab handles may allow a user to select or manipulate (e.g., close, select, move, rearrange, etc.) the various tabs of the application 300 or, in another embodiment, other applications or windows.
As shown in FIG. 6 , tab 306 is included with the audio signal, as described above. In various embodiments, the thumbnail tab handle 606 or the GUI included with the thumbnail handle 606 may include an icon or badge 610 configured to indicate which tab is included with the audio signal, as described above.
In various embodiments, the thumbnail tab handle 606 or the GUI included with the thumbnail handle 606 may include GUI elements 618 configured to facilitate the manipulation of the audio signal. For example the GUI elements 618 may include an icon to raise the volume of the audio signal, lower the volume of the audio signal, stop the audio signal, pause the audio signal, or resume or play the audio signal, etc. It is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited.
In one embodiment, the message 704 may include a tab ID field 716 configured to identify the tab of the application that includes or is included with the audio signal. The message 704 may include a command list or field 718 that is configured to identify the audio commands supported by the audio signal or the plug-in (e.g., next track, pervious track, full screen, etc.).
The message 704 may include an element ID field 720 configured to identify the element (e.g., an HTML Embed tag, etc.) included with the audio signal; although in various embodiments this field 720 may be excluded or not included. The message 704 may also include a process ID 712 field, as described above. Although, in various embodiments, the tab ID field 716 may identify the tab via a process ID.
In one embodiment, the message 706 may include an element ID field 720 configured to identify the element or tab included with the audio signal such that the plug-in may identify the proper audio signal to which the message 706 applies. In various embodiments, the element ID field 720 may include a tab or process ID, as described above. The message 706 may also include a plug-in audio command field 722 configured to indicate the command the application or other wishes the plug-in to perform. Plug-in audio commands may include, but are not limited to, next track, pervious track, full screen, etc.
Block 808 illustrates that, in one embodiment, a GUI included with a handle of a tab may be provided, as described above. In various embodiments, the graphical user interface may be configured to facilitate the manipulation of the audio signal by a user, as described above. In some embodiments, providing a GUI may include providing an indication on a label handle of a tab that the tab is included with the audio signal, as described above. In another embodiment, providing a GUI may include providing a GUI substantially on a thumbnail handle of a tab, as described above. In yet another embodiment, providing a GUI may include providing a GUI as part of an expandable tab handle, as described above. In various embodiments, one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2, the audio UI generator 216 of FIG. 2 , as described above.
Block 810 illustrates that, in one embodiment, the audio signal may be manipulated, based upon a command generated by the graphical user interface in response to a user interaction, as described above. In various embodiments, the command generated by the GUI may include a command to: decrease the volume of the audio signal, increase the volume of the audio signal, mute the volume of the audio signal, pause the audio signal, or move within a playlist included with the audio signal, etc., although it is understood that the above are merely a few illustrative examples to which the disclosed subject matter is not limited. Further, in various embodiments, manipulating may include responding to the command, as described above. In various embodiments, one or more of the action(s) illustrated by this Block may be performed by the apparatuses or systems of FIG. 1 , or 2, the audio controller 214, plug-ins 220 or 222, or the global audio manager 204 of FIG. 2 , as described above.
A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosed subject matter.
In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other embodiments are within the scope of the following claims.
Implementations of the various techniques described herein may be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Implementations may be implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine-readable storage device or in a propagated signal, for execution by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers. A computer program, such as the computer program(s) described above, can be written in any form of programming language, including compiled or interpreted languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
Method steps may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method steps also may be performed by, and an apparatus may be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. Elements of a computer may include at least one processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer also may include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory may be supplemented by, or incorporated in special purpose logic circuitry.
To provide for interaction with a user, implementations may be implemented on a computer having a display device, e.g., a cathode ray tube (CRT) or liquid crystal display (LCD) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
Implementations may be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation, or any combination of such back-end, middleware, or front-end components. Components may be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (LAN) and a wide area network (WAN), e.g., the Internet.
While certain features of the described implementations have been illustrated as described herein, many modifications, substitutions, changes and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments.
Claims (20)
1. A method comprising:
detecting, by a processor of one or more computing devices, an audio signal to be played from a local loudspeaker;
determining, by a processor of the one or more computing devices, which tab of a plurality of tabs opened within a window web browser application is associated with the audio signal, wherein the plurality of tabs provide different content to a user of the web browser;
providing a graphical user interface (GUI) associated with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user; and
manipulating the audio signal, based upon a command generated based on a user's interaction with the graphical user interface.
2. The method of claim 1 , wherein manipulating the audio signal includes muting the audio signal.
3. The method of claim 1 , wherein providing the GUI includes providing an indication on a label handle of the determined tab that the determined tab is associated with the audio signal.
4. The method of claim 1 , wherein providing the GUI includes providing a GUI associated with a thumbnail handle of a tab.
5. The method of claim 1 , wherein the command generated based on a user's interaction with the graphical user interface includes a command selected from the group consisting of: decreasing the volume of the audio signal; increasing the volume of the audio signal; muting the volume of the audio signal; and pausing the audio signal.
6. The method of claim 1 , wherein determining the tab includes: determining that a plug-in is associated with the application; and determining which tab of the application is associated with the plug-in.
7. The method of claim 6 , wherein the plug-in is associated with a plurality of tabs, and wherein determining the tab includes receiving an indication from the plug-in as to which tab is associated with the audio signal.
8. The method of claim 1 , further comprising converting the determined tab to an expandable tab; and wherein providing the GUI associated with a handle of the determined tab includes: when the expandable tab is closed, providing a GUI associated with an expandable handle of the expandable tab, and when the expandable tab is opened, providing a GUI associated with the label handle of the expandable tab.
9. The method of claim 1 , further comprising: determining which of a plurality of elements, associated by the determined tab, is associated with the audio signal, and converting the determined element to an expandable tab; and wherein providing the GUI associated with a handle of the determined tab includes: when the expandable tab is closed, providing a GUI associated with the expandable handle of the expandable tab, and when the expandable tab is opened, providing a GUI associated with the label handle of the determined tab.
10. An apparatus comprising:
a global audio manager configured to detect an audio signal configured to be played from a local loudspeaker;
an audio controller configured to determine which tab of a plurality of tabs opened within a window web browser application is associated with the audio signal, wherein the plurality of tabs provide different content to user of the web browser; and
an audio user interface (UI) generator configured to provide a graphical user interface (GUI) associated with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user; and
wherein the audio controller is further configured to manipulate the audio signal, based upon a command generated based on a user's interaction with the graphical user interface.
11. The apparatus of claim 10 , wherein the audio controller is configured to mute the audio signal.
12. The apparatus of claim 10 , wherein the audio user interface (UI) generator is configured to provide an indication on a label handle of the determined tab that the determined tab is associated with the audio signal.
13. The apparatus of claim 10 , wherein the audio user interface (UI) generator is configured to provide a GUI associated with a thumbnail handle of a tab.
14. The apparatus of claim 10 , wherein the command generated based on a user's interaction with the graphical user interface includes a command selected from the group consisting of: decreasing the volume of the audio signal; increasing the volume of the audio signal; muting the volume of the audio signal; and pausing the audio signal.
15. The apparatus of claim 10 , wherein the audio controller is configured to: determine that a plug-in is associated with the application; and determine which tab of the application is associated with the plug-in.
16. The apparatus of claim 15 , wherein the plug-in is associated with the plurality of tabs, and wherein the audio controller is configured to receive an indication from the plug-in as to which tab is associated with the audio signal.
17. The apparatus of claim 10 , further comprising an tab manager configured to convert the determined tab to an expandable tab; and wherein the audio user interface (UI) generator is configured to: when the expandable tab is closed, provide a GUI associated with an expandable handle of the expandable tab, and when the expandable tab is opened, provide a GUI associated with the label handle of the expandable tab.
18. The apparatus of claim 10 , wherein the audio controller is configured to determine which of a plurality of elements, associated with the determined tab, is associated with the audio signal; further comprising an tab manager configured to convert the determined element to an expandable tab; and wherein the audio user interface (UI) generator is configured to: when the expandable tab is closed, provide a GUI associated with an expandable handle of the expandable tab, and when the expandable tab is opened, provide a GUI associated with the label handle of the determined tab.
19. A non-transitory computer-readable medium including executable code of a machine-executable program which, when executed, is configured to cause an audio processing apparatus to manipulating an audio signal by:
detecting, by a processor of one or more computing devices, an audio signal to be played from a local loudspeaker;
determining, by a processor of the one or more computing devices, which tab of a plurality of tabs opened within a window web browser application is associated with the audio signal, wherein the plurality of tabs provide different content to user of the web browser;
providing a graphical user interface (GUI) associated with a handle of the determined tab, wherein the graphical user interface is configured to facilitate the manipulation of the audio signal by a user; and
manipulating the audio signal, based upon a command generated based on a user's interaction with the graphical user interface.
20. A non-transitory computer-readable medium of claim 19 , wherein the executable code, when executed, is configured to cause the audio processing apparatus to: provide the GUI by providing a GUI selected form the following group consisting of: an indication on a label handle of the determined tab, a GUI associated with a thumbnail handle of the determined tab; convert the determined tab to an expandable tab; provide a GUI associated with an expandable handle of the expandable tab.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/246,848 US8584033B2 (en) | 2009-10-13 | 2011-09-27 | Individualized tab audio controls |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US25128609P | 2009-10-13 | 2009-10-13 | |
US36017610P | 2010-06-30 | 2010-06-30 | |
US12/904,135 US8499253B2 (en) | 2009-10-13 | 2010-10-13 | Individualized tab audio controls |
US13/246,848 US8584033B2 (en) | 2009-10-13 | 2011-09-27 | Individualized tab audio controls |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/904,135 Continuation US8499253B2 (en) | 2009-10-13 | 2010-10-13 | Individualized tab audio controls |
Publications (2)
Publication Number | Publication Date |
---|---|
US20120023404A1 US20120023404A1 (en) | 2012-01-26 |
US8584033B2 true US8584033B2 (en) | 2013-11-12 |
Family
ID=43975077
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/904,135 Active 2031-02-24 US8499253B2 (en) | 2009-10-13 | 2010-10-13 | Individualized tab audio controls |
US13/246,848 Active US8584033B2 (en) | 2009-10-13 | 2011-09-27 | Individualized tab audio controls |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/904,135 Active 2031-02-24 US8499253B2 (en) | 2009-10-13 | 2010-10-13 | Individualized tab audio controls |
Country Status (1)
Country | Link |
---|---|
US (2) | US8499253B2 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9496922B2 (en) | 2014-04-21 | 2016-11-15 | Sony Corporation | Presentation of content on companion display device based on content presented on primary display device |
Families Citing this family (66)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8225231B2 (en) | 2005-08-30 | 2012-07-17 | Microsoft Corporation | Aggregation of PC settings |
US8086275B2 (en) | 2008-10-23 | 2011-12-27 | Microsoft Corporation | Alternative inputs of a mobile communications device |
US8411046B2 (en) | 2008-10-23 | 2013-04-02 | Microsoft Corporation | Column organization of content |
US8175653B2 (en) | 2009-03-30 | 2012-05-08 | Microsoft Corporation | Chromeless user interface |
US8238876B2 (en) | 2009-03-30 | 2012-08-07 | Microsoft Corporation | Notifications |
US20110087603A1 (en) * | 2009-10-13 | 2011-04-14 | Google Inc. | Cloud based media player and offline media access |
US8620879B2 (en) * | 2009-10-13 | 2013-12-31 | Google Inc. | Cloud based file storage service |
US8499253B2 (en) | 2009-10-13 | 2013-07-30 | Google Inc. | Individualized tab audio controls |
JP5026556B2 (en) * | 2010-05-12 | 2012-09-12 | レノボ・シンガポール・プライベート・リミテッド | Information processing apparatus, audio output setting method thereof, and computer-executable program |
US20120159395A1 (en) | 2010-12-20 | 2012-06-21 | Microsoft Corporation | Application-launching interface for multiple modes |
US20120159383A1 (en) | 2010-12-20 | 2012-06-21 | Microsoft Corporation | Customization of an immersive environment |
US8689123B2 (en) | 2010-12-23 | 2014-04-01 | Microsoft Corporation | Application reporting in an application-selectable user interface |
US8612874B2 (en) | 2010-12-23 | 2013-12-17 | Microsoft Corporation | Presenting an application change through a tile |
US9423951B2 (en) | 2010-12-31 | 2016-08-23 | Microsoft Technology Licensing, Llc | Content-based snap point |
US9383917B2 (en) | 2011-03-28 | 2016-07-05 | Microsoft Technology Licensing, Llc | Predictive tiling |
US9104440B2 (en) | 2011-05-27 | 2015-08-11 | Microsoft Technology Licensing, Llc | Multi-application environment |
US9658766B2 (en) | 2011-05-27 | 2017-05-23 | Microsoft Technology Licensing, Llc | Edge gesture |
US9104307B2 (en) | 2011-05-27 | 2015-08-11 | Microsoft Technology Licensing, Llc | Multi-application environment |
US9158445B2 (en) | 2011-05-27 | 2015-10-13 | Microsoft Technology Licensing, Llc | Managing an immersive interface in a multi-application immersive environment |
US8893033B2 (en) | 2011-05-27 | 2014-11-18 | Microsoft Corporation | Application notifications |
US20130031490A1 (en) * | 2011-07-26 | 2013-01-31 | Microsoft Corporation | On-demand tab rehydration |
US8687023B2 (en) | 2011-08-02 | 2014-04-01 | Microsoft Corporation | Cross-slide gesture to select and rearrange |
US20130057587A1 (en) | 2011-09-01 | 2013-03-07 | Microsoft Corporation | Arranging tiles |
US9557909B2 (en) | 2011-09-09 | 2017-01-31 | Microsoft Technology Licensing, Llc | Semantic zoom linguistic helpers |
US10353566B2 (en) | 2011-09-09 | 2019-07-16 | Microsoft Technology Licensing, Llc | Semantic zoom animations |
US8922575B2 (en) | 2011-09-09 | 2014-12-30 | Microsoft Corporation | Tile cache |
US9146670B2 (en) | 2011-09-10 | 2015-09-29 | Microsoft Technology Licensing, Llc | Progressively indicating new content in an application-selectable user interface |
US8933952B2 (en) | 2011-09-10 | 2015-01-13 | Microsoft Corporation | Pre-rendering new content for an application-selectable user interface |
US9244802B2 (en) | 2011-09-10 | 2016-01-26 | Microsoft Technology Licensing, Llc | Resource user interface |
US20130086482A1 (en) * | 2011-09-30 | 2013-04-04 | Cbs Interactive, Inc. | Displaying plurality of content items in window |
US11301345B2 (en) * | 2011-11-30 | 2022-04-12 | Red Hat, Inc. | Desktop sound source discovery |
US9223472B2 (en) | 2011-12-22 | 2015-12-29 | Microsoft Technology Licensing, Llc | Closing applications |
JP6065369B2 (en) * | 2012-02-03 | 2017-01-25 | ソニー株式会社 | Information processing apparatus, information processing method, and program |
US9128605B2 (en) | 2012-02-16 | 2015-09-08 | Microsoft Technology Licensing, Llc | Thumbnail-image selection of applications |
CN102915317B (en) * | 2012-03-08 | 2016-01-20 | 北京金山安全软件有限公司 | sound control method and device |
US9158440B1 (en) * | 2012-08-01 | 2015-10-13 | Google Inc. | Display of information areas in a view of a graphical interface |
US9535653B2 (en) | 2012-08-31 | 2017-01-03 | Google Inc. | Adjusting audio volume of multimedia when switching between multiple multimedia content |
US8959438B2 (en) * | 2012-09-06 | 2015-02-17 | Google Inc. | Media control pane in browser |
CN103034695A (en) * | 2012-12-03 | 2013-04-10 | 北京奇虎科技有限公司 | Method and device for sound control in browser |
CN103019710B (en) * | 2012-12-03 | 2016-08-03 | 北京奇虎科技有限公司 | Audio control method and device for browser |
US20140189597A1 (en) * | 2012-12-28 | 2014-07-03 | Samsung Electronics Co., Ltd. | Method and electronic device for presenting icons |
US9395871B2 (en) * | 2013-01-29 | 2016-07-19 | Google Inc. | Detection and control of multimedia applications |
US20150193061A1 (en) * | 2013-01-29 | 2015-07-09 | Google Inc. | User's computing experience based on the user's computing activity |
KR102077505B1 (en) * | 2013-03-15 | 2020-04-07 | 삼성전자주식회사 | Method and apparatus for displaying web page in a electronic device |
US9886160B2 (en) * | 2013-03-15 | 2018-02-06 | Google Llc | Managing audio at the tab level for user notification and control |
US20140278911A1 (en) * | 2013-03-15 | 2014-09-18 | Telemetry Limited | Method and apparatus for determining digital media audibility |
US9450952B2 (en) | 2013-05-29 | 2016-09-20 | Microsoft Technology Licensing, Llc | Live tiles without application-code execution |
US8775965B1 (en) * | 2013-06-27 | 2014-07-08 | Google Inc. | Immersive mode for a web browser |
CN103886057A (en) * | 2014-03-14 | 2014-06-25 | 联想(北京)有限公司 | Method for processing information and electronic equipment |
KR102298602B1 (en) | 2014-04-04 | 2021-09-03 | 마이크로소프트 테크놀로지 라이센싱, 엘엘씨 | Expandable application representation |
WO2015154273A1 (en) | 2014-04-10 | 2015-10-15 | Microsoft Technology Licensing, Llc | Collapsible shell cover for computing device |
KR20160143784A (en) | 2014-04-10 | 2016-12-14 | 마이크로소프트 테크놀로지 라이센싱, 엘엘씨 | Slider cover for computing device |
US10254942B2 (en) | 2014-07-31 | 2019-04-09 | Microsoft Technology Licensing, Llc | Adaptive sizing and positioning of application windows |
US10678412B2 (en) | 2014-07-31 | 2020-06-09 | Microsoft Technology Licensing, Llc | Dynamic joint dividers for application windows |
US10592080B2 (en) | 2014-07-31 | 2020-03-17 | Microsoft Technology Licensing, Llc | Assisted presentation of application windows |
US10642365B2 (en) | 2014-09-09 | 2020-05-05 | Microsoft Technology Licensing, Llc | Parametric inertia and APIs |
CN106662891B (en) | 2014-10-30 | 2019-10-11 | 微软技术许可有限责任公司 | Multi-configuration input equipment |
US10387104B2 (en) * | 2015-06-07 | 2019-08-20 | Apple Inc. | Audio control for web browser |
US10275116B2 (en) | 2015-06-07 | 2019-04-30 | Apple Inc. | Browser with docked tabs |
DK201770423A1 (en) | 2016-06-11 | 2018-01-15 | Apple Inc | Activity and workout updates |
US11216241B2 (en) * | 2016-12-13 | 2022-01-04 | Samsung Electronics Co., Ltd. | Method and device for audio management |
EP4195634A1 (en) * | 2017-11-23 | 2023-06-14 | Huawei Technologies Co., Ltd. | Photographing method and terminal |
DK180171B1 (en) | 2018-05-07 | 2020-07-14 | Apple Inc | USER INTERFACES FOR SHARING CONTEXTUALLY RELEVANT MEDIA CONTENT |
US10901688B2 (en) | 2018-09-12 | 2021-01-26 | International Business Machines Corporation | Natural language command interface for application management |
WO2022245669A1 (en) | 2021-05-15 | 2022-11-24 | Apple Inc. | User interfaces for group workouts |
US11966573B2 (en) * | 2021-06-02 | 2024-04-23 | Microsoft Technology Licensing, Llc | Temporarily hiding user interface elements |
Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6697841B1 (en) * | 1997-06-24 | 2004-02-24 | Dictaphone Corporation | Dictation system employing computer-to-computer transmission of voice files controlled by hand microphone |
US7022075B2 (en) * | 1999-08-20 | 2006-04-04 | Zonare Medical Systems, Inc. | User interface for handheld imaging devices |
US20070204057A1 (en) | 2006-02-28 | 2007-08-30 | Maven Networks, Inc. | Systems and methods for providing a similar offline viewing experience of online web-site content |
US7366757B1 (en) | 1999-06-11 | 2008-04-29 | Canon Kabushiki Kaisha | Communication apparatus, communication method, communication system, and storage medium |
US20080194332A1 (en) | 2007-02-13 | 2008-08-14 | Eyeblaster Ltd. | Method of interacting with an interactive game program |
US20100161759A1 (en) | 2008-12-22 | 2010-06-24 | Ctera Networks Ltd. | Storage device and method thereof for integrating network attached storage with cloud storage services |
US20100191783A1 (en) | 2009-01-23 | 2010-07-29 | Nasuni Corporation | Method and system for interfacing to cloud storage |
US20100211782A1 (en) | 2009-02-16 | 2010-08-19 | Microsoft Corporation | Trusted cloud computing and services framework |
US20100211781A1 (en) | 2009-02-16 | 2010-08-19 | Microsoft Corporation | Trusted cloud computing and services framework |
US7805286B2 (en) * | 2007-11-30 | 2010-09-28 | Bose Corporation | System and method for sound system simulation |
US20100332456A1 (en) | 2009-06-30 | 2010-12-30 | Anand Prahlad | Data object store and server for a cloud storage environment, including data deduplication and data management across multiple cloud storage sites |
US20110072487A1 (en) | 2009-09-23 | 2011-03-24 | Computer Associates Think, Inc. | System, Method, and Software for Providing Access Control Enforcement Capabilities in Cloud Computing Systems |
US20110087690A1 (en) | 2009-10-13 | 2011-04-14 | Google Inc. | Cloud based file storage service |
US20110087603A1 (en) | 2009-10-13 | 2011-04-14 | Google Inc. | Cloud based media player and offline media access |
US20110113337A1 (en) | 2009-10-13 | 2011-05-12 | Google Inc. | Individualized tab audio controls |
US7987289B2 (en) | 2008-06-24 | 2011-07-26 | Microsoft Corporation | Participating in cloud as totally stubby edge |
-
2010
- 2010-10-13 US US12/904,135 patent/US8499253B2/en active Active
-
2011
- 2011-09-27 US US13/246,848 patent/US8584033B2/en active Active
Patent Citations (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6697841B1 (en) * | 1997-06-24 | 2004-02-24 | Dictaphone Corporation | Dictation system employing computer-to-computer transmission of voice files controlled by hand microphone |
US7366767B2 (en) * | 1997-06-24 | 2008-04-29 | Dictaphone Corporation | Dictation system employing computer-to-computer transmission of voice files controlled by hand microphone |
US7366757B1 (en) | 1999-06-11 | 2008-04-29 | Canon Kabushiki Kaisha | Communication apparatus, communication method, communication system, and storage medium |
US7022075B2 (en) * | 1999-08-20 | 2006-04-04 | Zonare Medical Systems, Inc. | User interface for handheld imaging devices |
US20070204057A1 (en) | 2006-02-28 | 2007-08-30 | Maven Networks, Inc. | Systems and methods for providing a similar offline viewing experience of online web-site content |
US20080194332A1 (en) | 2007-02-13 | 2008-08-14 | Eyeblaster Ltd. | Method of interacting with an interactive game program |
US7805286B2 (en) * | 2007-11-30 | 2010-09-28 | Bose Corporation | System and method for sound system simulation |
US7987289B2 (en) | 2008-06-24 | 2011-07-26 | Microsoft Corporation | Participating in cloud as totally stubby edge |
US20100161759A1 (en) | 2008-12-22 | 2010-06-24 | Ctera Networks Ltd. | Storage device and method thereof for integrating network attached storage with cloud storage services |
US20100191783A1 (en) | 2009-01-23 | 2010-07-29 | Nasuni Corporation | Method and system for interfacing to cloud storage |
US20100211782A1 (en) | 2009-02-16 | 2010-08-19 | Microsoft Corporation | Trusted cloud computing and services framework |
US20100211781A1 (en) | 2009-02-16 | 2010-08-19 | Microsoft Corporation | Trusted cloud computing and services framework |
US20100332456A1 (en) | 2009-06-30 | 2010-12-30 | Anand Prahlad | Data object store and server for a cloud storage environment, including data deduplication and data management across multiple cloud storage sites |
US20110072487A1 (en) | 2009-09-23 | 2011-03-24 | Computer Associates Think, Inc. | System, Method, and Software for Providing Access Control Enforcement Capabilities in Cloud Computing Systems |
US20110087690A1 (en) | 2009-10-13 | 2011-04-14 | Google Inc. | Cloud based file storage service |
US20110088039A1 (en) | 2009-10-13 | 2011-04-14 | Google Inc. | Power Monitoring and Control in Cloud Based Computer |
US20110087776A1 (en) | 2009-10-13 | 2011-04-14 | Google Inc. | Cloud based computer power management |
US20110087603A1 (en) | 2009-10-13 | 2011-04-14 | Google Inc. | Cloud based media player and offline media access |
WO2011046931A1 (en) | 2009-10-13 | 2011-04-21 | Google Inc. | Cloud based file storage service |
WO2011047060A1 (en) | 2009-10-13 | 2011-04-21 | Google Inc. | Cloud based media player and offline media access |
US20110113337A1 (en) | 2009-10-13 | 2011-05-12 | Google Inc. | Individualized tab audio controls |
US20110087960A1 (en) | 2009-10-13 | 2011-04-14 | Google Inc. | Power Metering and Control in Cloud Based Computer |
Non-Patent Citations (19)
Title |
---|
Ateniese, et al, "Provable Data Posession at Untrusted Stores", CCS '07, Oct. 29-Nov. 2, 2007, 13 pages. |
Cachin, et al, "Trusting the Cloud", IBM Research Zurich Research Laboratory 2009, 6 pages. |
Cox, et al, Pastiche: Making Backup Cheap and Easy:, Proceedings of the 5th Symposium on Operating Systems Design and Implementation, USENIX Assocation, Dec. 9-11, 2002, 15 pages. |
Curtmola, et al, "Robust Remote Data Checking", StorageSS '08, Oct. 31, 2008, 6 pages. |
Final Office Action for U.S. Appl. No. 12/859,249, mailed Aug. 16, 2012, 21 pages. |
Itani, et al, "Privacy as a Service: Privacy-Aware Data Storage and Processing in Cloud Computing Architectures", 2009 Eighth IEEE International Conference on Dependable, Autonomic and Secure Computing, 6 pages. |
Lee, et al., "Interactive Contents Player for Rich Media Service", IEEE Transactions on Consumer Electronics, vol. 55, No. 1, Feb. 2009, 7 pages. |
Mandagere, et al, "Demystifying Data Deduplication", Middleware '09 Companion, Dec. 1-5, 2008, 6 pages. |
Muthitacharoen, "A Low-Bandwidth Network File System", Proceedings of the ACM Symposium on Operating Systems Principles, Oct. 21, 2002, 14 pages. |
Non-Final Office Action for U.S. Appl. No. 12/859,249, mailed Mar. 9, 2012, 14 pages. |
Non-Final Office Action mailed for U.S. Appl. No. 12/904,135, mailed Aug. 24, 2012, 25 pages. |
Office Action Response and RCE for U.S. Appl. No. 12/859,249, filed Jan. 18, 2013, 3 pages. |
Office Action Response for U.S. Appl. No. 12/859,249, filed Dec. 17, 2012, 9 pages. |
Office Action Response for U.S. Appl. No. 12/859,249, filed May 31, 2012, 10 pages. |
Search Report and Written Opinion for International Application No. PCT/US2010/052320, mailed Feb. 23, 2011, 13 pages. |
Search Report and Written Opinion for International Application No. PCT/US2010/05252, mailed Mar. 7, 2011, 11 pages. |
Ser, "Review: Memopal Online Backup and Storage", Gear Diary, May 5, 2009, 10 pages. |
Wang, et al, "Ensuring Data Storage Security in Cloud Computing", Department of ECE, Illinois Institute of Technology, 2009, 9 pages. |
Wathsala, et al, "Next Generation Proxy Servers", ICACT 2008, Feb. 17-20, 2008, 4 pages. |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9496922B2 (en) | 2014-04-21 | 2016-11-15 | Sony Corporation | Presentation of content on companion display device based on content presented on primary display device |
Also Published As
Publication number | Publication date |
---|---|
US8499253B2 (en) | 2013-07-30 |
US20110113337A1 (en) | 2011-05-12 |
US20120023404A1 (en) | 2012-01-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8584033B2 (en) | Individualized tab audio controls | |
EP2972764B1 (en) | Managing audio at the tab level for user notification and control | |
US11474666B2 (en) | Content presentation and interaction across multiple displays | |
US10205985B2 (en) | Management of the channel bar | |
US8914739B2 (en) | Data processing apparatus and method | |
KR102023801B1 (en) | Systems and methods for displaying notifications received from multiple applications | |
US9348554B2 (en) | Managing playback of supplemental information | |
US20170300151A1 (en) | Management of the channel bar | |
US20080189115A1 (en) | Spatial sound generation for screen navigation | |
AU2011204097A1 (en) | Method and apparatus for setting section of a multimedia file in mobile device | |
KR20140111448A (en) | Method and apparatus for copy and paste in electronic device | |
WO2014200802A2 (en) | Interaction of web content with an electronic application document | |
US20150180998A1 (en) | User terminal apparatus and control method thereof | |
US20150261418A1 (en) | Electronic device and method for displaying content | |
US20130139061A1 (en) | Desktop sound source discovery | |
US9280905B2 (en) | Media outline | |
KR20150029328A (en) | Method for controlling content in mobile electronic device | |
WO2023072251A1 (en) | Interaction method, interaction apparatus, electronic device, and computer-readable storage medium | |
CN117059121A (en) | Audio processing method, device, equipment and storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
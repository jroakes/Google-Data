CN114722316A - Generating deep links for applications based on multi-level referrer data - Google Patents
Generating deep links for applications based on multi-level referrer data Download PDFInfo
- Publication number
- CN114722316A CN114722316A CN202210276676.8A CN202210276676A CN114722316A CN 114722316 A CN114722316 A CN 114722316A CN 202210276676 A CN202210276676 A CN 202210276676A CN 114722316 A CN114722316 A CN 114722316A
- Authority
- CN
- China
- Prior art keywords
- application
- data
- computing device
- resource
- referrer
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9558—Details of hyperlinks; Management of linked annotations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9562—Bookmark management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9566—URL specific, e.g. using aliases, detecting broken or misspelled links
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
- G06F16/972—Access to data in other repository systems, e.g. legacy data or dynamic Web page generation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
- G06F9/547—Remote procedure calls [RPC]; Web services
Abstract
The application relates to generating deep links for applications based on multi-level referrer data. Systems and methods for providing referrer data to an application are provided. A method includes receiving a first set of data packets indicating a command to navigate from a first resource to a second resource. The first set of data packets identifies a first resource and secondary reference data associated with the first resource or a first content item on the first resource. The method includes rendering a second resource and a second content item provided within the second resource. The method includes receiving a selection of a second content item. The method includes generating a second set of data packets including secondary reference data and primary reference data associated with a second resource or a second content item. The method includes transmitting a second set of data packets to a server, receiving a deep link generated by the server, and rendering a content interface using the deep link.
Description
Description of the different cases
The application belongs to divisional application of Chinese patent application 201780002011.5 with application date of 2017, 2, month and 15.
Background
In a networked environment, such as the internet, a first-party content provider may provide information to a user device for presentation on resources, such as web pages, mobile applications, documents, other applications, and/or other resources. Additional third-party content may also be provided by the third-party content provider for presentation on the user device along with information from the first-party content provider. The publisher may provide the first party content and the third party content on his or her resources.
In some implementations, selection of content on a resource can cause an application to open on a user device. For example, selection of content may cause an application to open that includes additional content related to the selected content. One challenge is to provide contextually relevant (contextually reusable) content within an application.
Disclosure of Invention
One illustrative embodiment of the present disclosure is directed to a method. The method includes receiving, at a computing device, a selection of a first content item on a first resource. The method also includes generating, at the computing device, a set of one or more data packets. The data packet includes primary reference (referrer) data associated with at least one of the first content item and the first resource and secondary reference data associated with at least one of a second resource previously viewed by the user on the first application or the second application and a second content item displayed on the second resource. The method also includes transmitting, at the computing device, the set of data packets to a server. The method also includes receiving, from a server of the computing device, a deep link generated by the server using both the primary and secondary reference data. The method also includes rendering, at the computing device, a content interface having content generated from the deep links within the application indicated by the deep links.
The set of one or more data packets generated at the computing device may be a second set of one or more data packets. The method may include receiving, via a first application of a computing device, a first set of one or more data packets indicating a command to navigate from a second resource to a first resource. The first set of data packets may identify a first resource and second level reference data associated with at least one of a second resource or a second content item selected on the second resource to generate a first set of data packets. The method may also include rendering, within a first application of the computing device, the first resource and a first content item provided within the first resource. Secondary reference data for a second set of one or more data packets may be extracted from the first set of one or more data packets. The first and second applications may be the same application or may be different applications.
In some implementations, the deep link includes a Uniform Resource Locator (URL) or a Uniform Resource Identifier (URI) that includes, in part, a referrer field that includes parameters related to primary referrer data and secondary referrer data. The parameter may be one of a Common Gateway Interface (CGI) parameter and a parameter generated from a key-value pair mapping.
In some implementations, rendering the content interface on the application indicated by the deep link includes downloading the application indicated by the deep link from a server. The deep link may include a referrer tag including parameters representing primary referrer data and secondary referrer data.
In some implementations, the secondary reference data includes one or more search terms entered by the user. The secondary reference data may include one or more parameters for selecting a second content item for presentation on the second resource.
The method may further include, at the server: receiving a second set of data packets; analyzing the second set of data packets to identify one or more parameters; determining whether an application indicated by the deep link is installed on the computing device; and an application that provides the deep-link indication in response to determining that the application of the deep-link indication is not installed on the computing device; and determining content to display in the application indicated by the deep link based on the one or more parameters.
Another embodiment relates to a system comprising at least one computing device operatively coupled to at least one memory. The at least one computing device is configured to perform the illustrative method set forth above. In another embodiment, at least one computing device is configured to receive, via a first application, a first set of one or more data packets indicating a command to navigate from a first resource to a second resource. The first set of data packets identifies second resources and second level reference data associated with at least one of the first resource used to generate the first set of data packets or a first content item selected on the first resource. The at least one computing device is further configured to render, within the first application, the second resource and a second content item provided within the second resource. The at least one computing device is further configured to receive, via the first application, a selection of the second content item. The at least one computing device is further configured to generate, in response to selection of the second content item, a second set of one or more data packets including the secondary referrer data extracted from the first set of data packets and primary referrer data associated with at least one of the second resource or the second content item. The at least one computing device is further configured to transmit the second set of data packets to the server. The at least one computing device is further configured to receive, from the server, a deep link generated by the server using both the primary and secondary referrer data. The at least one computing device is further configured to render, within a second application indicated by the deep link, a content interface having content generated according to the deep link.
In some implementations, the deep link includes a Uniform Resource Locator (URL) or a Uniform Resource Identifier (URI) that includes, in part, a referrer field that includes parameters related to primary referrer data and secondary referrer data. The parameter may be one of a Common Gateway Interface (CGI) parameter and a parameter generated from a key-value pair mapping.
In some implementations, rendering the content interface on the second application includes downloading the second application from a server. The deep link may include a referrer tag containing parameters representing primary referrer data and secondary referrer data.
In some implementations, the secondary referrer data includes one or more search terms entered by the user. In some implementations, the secondary referrer data includes one or more parameters for selecting a first content item for presentation on the first resource.
In some embodiments, the server is configured to: the method further includes receiving a second set of data packets, parsing the second set of data packets to identify one or more parameters, determining whether a second application is installed on the computing device, and providing the second application in response to determining that the second application is not installed on the computing device, and determining content to display in the second application based on the one or more parameters.
In some embodiments, the first set of data packets is received from a resource of a third application.
Another embodiment relates to a method. The method includes receiving, via a first application of a computing device, a first set of one or more data packets indicating a command to navigate from a first resource to a second resource. The first set of data packets identifies second resources and second level reference data associated with at least one of the first resource or a first content item selected on the first resource used to generate the first set of data packets. The method also includes rendering, within the first application of the computing device, the second resource and a second content item provided within the second resource. The method also includes receiving, via a first application of the computing device, a selection of a second content item. The method also includes generating, at the computing device, a second set of one or more data packets in response to the selection of the second content item, the second set of one or more data packets including secondary referrer data extracted from the first set of data packets and primary referrer data associated with at least one of the second resource or the second content item. The method also includes transmitting, at the computing device, the second set of data packets to the server. The method also includes receiving, at the computing device from the server, a deep link generated by the server using both the primary and secondary reference data. The method also includes rendering, within a second application on the computing device indicated by the deep link, a content interface having content generated according to the deep link.
In some implementations, the deep link includes a portion that includes a referrer field Uniform Resource Locator (URL) or Uniform Resource Identifier (URI), the referrer field including parameters related to primary referrer data and secondary referrer data. The parameter may be one of a Common Gateway Interface (CGI) parameter and a parameter generated from a key-value pair mapping.
In some implementations, rendering the content interface on the second application includes downloading the second application from a server. The deep link includes a referrer tag including parameters representing primary referrer data and secondary referrer data.
In some implementations, the secondary referrer data includes one or more search terms entered by the user. In some implementations, the secondary referrer data includes one or more parameters for selecting a first content item for presentation on the first resource.
In some embodiments, the method further comprises, at the server: the method includes receiving a second set of data packets, parsing the second set of data packets to identify one or more parameters, determining whether a second application is installed on the computing device, and providing the second application in response to determining that the second application is not installed on the computing device, and determining content to display in the second application based on the one or more parameters.
In some embodiments, the first set of data packets is received from a resource of a third application.
Another embodiment relates to a method. The method includes receiving, at a server, a set of data packets from a computing device. The set of data packets includes secondary referrer data associated with at least one of a first resource or a first content item provided within the first resource from which the computing device has navigated to a second resource after selection of the first content item in the first resource and primary referrer data associated with at least one of a second resource or a second content item provided within the second resource. A set of data packets is received at a server in response to selection of a second content item in a second resource on the computing device. The method also includes parsing the set of data packets to identify one or more parameters. The method also includes determining content to display in an application on the computing device based on the one or more parameters. The method also includes generating a deep link based on the content to be displayed in the application. The method also includes transmitting the deep link to an application on a computing device.
In some implementations, the method further includes determining whether an application to be opened on the computing device is installed on the computing device. In response to determining that the application is not installed on the user device, the server is configured to provide the offer for download by the computing device or cause the application store to provide the offer for download by the computing device.
In some implementations, the deep link includes one of a Uniform Resource Locator (URL) and a Uniform Resource Identifier (URI) that includes, in part, a referrer field that includes parameters related to primary referrer data and secondary referrer data. The parameter may be one of a Common Gateway Interface (CGI) parameter and a parameter generated from a key-value pair mapping. The deep link may include a referrer tag including parameters representing primary referrer data and secondary referrer data.
Drawings
The details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
FIG. 1 is a block diagram of an application server and associated environment in accordance with an illustrative embodiment.
FIG. 2 is a detailed block diagram illustrating a process for transferring secondary and primary referrer data among a plurality of resources and applications on a user device in accordance with an illustrative embodiment.
FIG. 3 is a detailed block diagram illustrating a process by which a user device provides secondary and primary referrer data to an application server in accordance with an illustrative embodiment.
FIG. 4 is a flowchart of a process for providing secondary and primary referrer data to an application in accordance with an illustrative embodiment.
FIG. 5 is a flowchart of a process for providing secondary and primary referrer data to an application installed on a user device in accordance with an illustrative embodiment.
FIG. 6 is a flowchart of a process for installing an application on a user device and providing secondary and primary referrer data to the application in accordance with an illustrative embodiment.
FIG. 7 is a block diagram of a computing system in accordance with an illustrative embodiment.
Detailed Description
The following is a more detailed description of various concepts related to methods, apparatus, and systems for providing information using a computer network and various concepts of implementations thereof. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways, as the described concepts are not limited to any particular implementation. Examples of specific embodiments and applications are provided primarily for illustrative purposes.
Referring generally to the drawings, various illustrative systems and methods are described for generating deep links for an application using referrer data at an application server when a user is directed from a content item to the application. More particularly, systems and methods are described for providing secondary or tertiary referrer data to an application server as part of the referrer data.
When a user selects a content item provided within an application or another resource (e.g., a web page), the selection may cause an application associated with the content item to open on the user device of the user. An application may receive information when the application is opened on a user device, allowing the application to present relevant content to the user. This information may be provided through deep links received from the application server that cause a particular interface within the application to be opened (e.g., a custom interface that includes particular relevant content related to user activity). The deep links represent primary reference data (e.g., information about the web page displaying the content item just selected and the content item itself). This allows the application to provide content related to the content the user is viewing (in some embodiments, without the application itself receiving the primary reference data). However, this approach may be limited based on the limited amount of information the application server uses to create deep links. The primary reference data may not capture content that directs the user to the original application or a resource within the application (e.g., a browser page to which the user is linked to the application). For example, assume that a user performed a search within a search engine (e.g., "country music") and clicked on a result on a first web page that leads to a second web page, and then selected a content item within the second web page that would cause a particular country music video to open within a media player application. The application server will not be aware of the search when generating deep links that would cause the video to open in the application with the additional content, as there is no mechanism for the application server to provide more reference data than just the main reference data (data about the second web page). Thus, when an application is launched using a video, the other content presented may be less relevant to the user because the deep links were not created using information about the search (or other additional context that resulted in selection of a content item). In some implementations, rather than or in addition to being provided to an application server that generates deep links for an application, the primary referrer data may be provided to a client-side application on a user device, and the client application may generate/customize interface elements within the application based on the data.
The present disclosure relates generally to providing mechanisms for providing multi-level referrer data to an application or application server, allowing the application/application server to generate a more contextually relevant user experience within the application (e.g., allowing the application server to provide deep links that provide a more contextually relevant user experience). This allows the application to provide content that is more relevant to the user and more representative of the multiple steps the user takes before opening the application. In some implementations, an additional level of reference data (e.g., secondary reference data) can be provided to the application server when selecting content items.
The application server may typically receive from the user device, upon selection of a content item on the device for use, reference data comprising primary reference data and secondary reference data. In various embodiments, there may be different ways of providing deep links to applications on a user device based on whether the application to be launched on the user device is already installed on the user device. In either case, deep linking techniques may be used to relay the secondary referrer data to the application to be launched. Deep linking techniques allow a destination application (or other resource, such as a web page) to receive information about a referenced resource, thereby speeding up the provision of content by the application. In this way, deep links allow for more efficient navigation to particular resources provided by the destination application by reducing the need to perform additional searches or follow further links within the destination application. Thus, deep linking may improve the efficiency of reaching content related to a user and reduce the computing resources on a user device to reach desired content, as the content is presented in a single step, rather than via a series of interactions of the user within the application. Further, deep linking may help reduce network utilization and increase available bandwidth due to a reduced number of content requests and responses transmitted between a user device and a server in response to multiple user interactions to retrieve desired content.
In some implementations, for an application server that provides deep links to applications, the applications may already be installed on the user device. The endpoints of the deep links may be built by the application server. In some such implementations, the endpoint is represented by a URL with a custom scheme, for example, using CGI parameters or having an intent for key-value pair mapping of parameters. The parameter may represent both secondary and primary reference data. The application uses the endpoint to load content related to the user within the application.
In some implementations, for an application server that provides deep links to applications, the application may not be installed on the user device. In such embodiments, the application server uses the referrer tag to provide information about the secondary referrer data. The reference tag may be provided to the application through an application store (e.g., a location where the application may be downloaded by the user device). The referrer tag may generally be used to identify what activity caused the application to be installed (e.g., the referrer tag may generally include primary referrer data received from a user device identifying the activity, such as selection of a download button). However, as described in this disclosure, additional data, such as secondary referrer data (and additional primary referrer data, if applicable) may be represented within the referrer tag. The application server may modify the referrer tag to include a representation of the secondary referrer data. After installing the application on the user device, the application server or application store may pass the modified reference mark and the application may treat the tag as a navigation endpoint when loading content within the application. Additionally or alternatively, the application server or the referrer application may cause the application to be installed on the device, and the application server may then generate a deep link based on the received primary and secondary referrer data and communicate the deep link to the application.
In either case, after the application receives the navigation endpoint from the application server, the endpoint is used to populate the application with content. The application passes the variables from the endpoint to the content server. The content server may use the endpoint to generally identify how the user reached the original application. For example, a content server may typically use an endpoint to identify whether a user reached the original application via a very specific or narrow topic search. The content server may then respond with appropriate content (e.g., content related to a very specific topic of the user's search, or more general content related to a very broad topic search). This may result in several different experiences for different users selecting the same content item on the resource. If the user initially searches for a particular music video, the server may provide content related to the particular music video or the artist of the music video. If the user performs a general music video search, the server may provide different music videos from different artists of the same genre.
For the cases in which the systems discussed herein collect and/or utilize personal information about a user or may use personal information, the user may be provided with an opportunity to control whether programs or features may collect personal information (e.g., about the user's social network, social actions or activities, the user's preferences, the user's current location, etc.), or whether and/or how to receive content from the content management system that may be more relevant to the user. Additionally, certain data may be anonymized in one or more ways before being stored or used, such that personally identifiable information is removed when generating parameters (e.g., demographic parameters). For example, the identity of the user may be anonymous, such that no personally identifiable information of the user can be determined, or the geographic location of the user may be generalized (such as to a city, zip code, or state level) if location information is obtained, such that a particular location of the user cannot be determined. Thus, the user may control how information about him or her is collected and used by the content server. Furthermore, the personal user information itself is not presented to the content provider, so the content provider cannot discern the interaction associated with a particular user.
Referring now to FIG. 1, and in general terms, a block diagram of an application server 150 and associated environment 100 is shown in accordance with an illustrative embodiment. A user may use one or more user devices 104 to perform various actions and/or access various types of content, some of which may be provided over a network 102 (e.g., the internet, a LAN, a WAN, etc.). For example, user device 104 may be used to access web pages (e.g., using an internet browser), media files, and/or any other type of content. The content management system 108 may be configured to select content for display to a user within a resource (e.g., a web page, an application, etc.) and provide content items 112 from the content database 110 to the user device 104 over the network 102 for display within the resource. The content items from which the content management system 108 selects may be provided by one or more content providers via the network 102 using one or more content provider devices 106. In some implementations, the content management system 108 can select one or more content items from the one or more content providers from among a plurality of content items from a plurality of content providers. In such implementations, the content management system 108 can determine content to publish in one or more content interfaces of resources (e.g., web pages, applications, etc.) shown on the user device 104 based at least in part on metrics or other characteristics of the content item or content provider.
The application server 150 may be configured to receive the referrer data from the user device 104. The referrer data may generally include information related to the user's activities, such as a search performed by the user, the topic or theme of the web page the user is viewing, and so forth. The referrer data may include primary referrer data (e.g., data from a current resource being viewed by the user) and secondary referrer data (e.g., data related to one or more resources previously viewed by the user prior to viewing the current resource). The application server 150 generates a deep link based on the referrer data. A deep link is typically a link to a particular location within an application (e.g., a particular piece of content and/or a content interface served by a media application, a particular web page within a browser application, etc.). For example, deep links can be used to identify content to be presented in an application based on the deep links. In some implementations, the identified content can be searchable or indexable by the content resource providing the content. The application then retrieves, formats, and displays content from the content resource.
As an example of application server 150 activity, the referrer data may relate to user activity viewing country music videos on a web page. The reference data may identify songs or artists, and may also identify activities of the user that result in the user viewing the country music video (e.g., searching for a particular artist or music video). Application server 150 may receive the reference data and generate a deep link that references a particular music video, song, or artist. The deep links may further reference searches or other activities performed by the user in reaching the country music video. The deep link may be received from the application server 150 by an application on the user device 104, and the application may use the deep link to access content ultimately related to the original user activity. The content is then formatted and displayed on an application on the user device 104. Content may be provided from any source via network 102.
Referring in more detail to fig. 1, user device 104 and/or content provider device 106 may be any type of computing device (e.g., having a processor and memory or other type of computer-readable storage medium), such as a television and/or a set-top box, a mobile communication device (e.g., a cellular phone, a smart phone, etc.), a computer and/or media device (desktop computer, laptop or notebook computer, netbook computer, tablet device, gaming system, etc.), or any other type of computing device. In some implementations, one or more of the user devices 104 can be a set-top box or other device for use with a television. In some implementations, the content can be provided via a web-based application and/or an application residing on the user device 104. In some implementations, the user device 104 and/or the content provider device 106 may be designed to use various types of software and/or operating systems. In various illustrative embodiments, user device 104 and/or content provider device 106 may be equipped with and/or associated with one or more user input devices (e.g., keyboard, mouse, remote control, touch screen, etc.) and/or one or more display devices (e.g., television, display, CRT, plasma, LCD, LED, touch screen, etc.).
The user device 104 and/or the content provider device 106 may be configured to receive data from various resources using the network 102. In some implementations, the network 102 can include a computing network (e.g., LAN, WAN, internet, etc.) to which the user devices 104 and/or the content provider devices 106 can connect via any type of network connection (e.g., wired, such as ethernet, telephone lines, power lines, etc., or wireless, such as WiFi, WiMAX, 3G, 4G, satellite, etc.). In some implementations, the network 102 can include a media distribution network, such as a cable (e.g., coaxial metal cable), satellite, fiber optic, and the like configured to distribute media programming and/or data content.
The content management system 108 may be configured to select a third-party content item to be presented on the resource. For example, the content management system 108 may conduct an auction or bidding process. One or more content items of one or more winners of the auction or bidding process may be selected for display on the resource. The content management system 108 may further use the quality score (i.e., a measure of how likely the user of the user device 104 is to interact with or take a conversion action related to the content item) or other measure during the course of selection of the content item. In some implementations, the content provider may create a content campaign (content campaign), or may otherwise provide various settings or guidelines to the content management system 108. Such settings or guidelines may regulate how the content provider participates in the content item selection process (e.g., how many bids are placed in a given auction, the total budget of the content provider (weekly, daily, or otherwise), etc.). Such settings or guidelines may be set based on various metrics of the content item, such as cost per impression (CPM) or cost per thousand impressions (CPM), Cost Per Click (CPC) or Cost Per Acquisition (CPA) or cost per conversion (cost per conversion). Such settings or guidelines may be further set based on the type of platform (e.g., mobile, desktop, etc.) on which the content item should be provided, what type of resource (e.g., search results page) on which the content item should be provided, the geographic location of the user device displaying the resource, and so forth.
The user may be able to interact with content items presented on resources on the user device 104. Such interaction may include a click, a double click, a touch on a touch screen, or any other type of interaction that indicates a selection of a content item. In some implementations, selection of a content item can cause the user device 104 to be directed to open an application on the device. In other implementations, selection of a content item can cause the user device 104 to provide the application server 150 (described below) with the reference data, and receiving back a deep link from the application server 150 can cause the application to open on the user device 104. The application may then retrieve content related to the user and the content item and display the content within the application. In some implementations, the content item can be associated with an application. For example, if the user is currently viewing a web page associated with music, the content item may be associated with an application configured to play back music, to allow the user to view a list of songs that may be consumed by the user, and so forth.
As described above, the application server 150 is configured to receive the reference data from the user device 104. When a user selects a content item that causes an application to open on the user device 104, the application server 150 may receive an indication of the selection of the content item and additional information (e.g., the referrer data) from the user device 104. The application server 150 may generate a deep link that may be sent to the user device 104 and used by the application to retrieve content relevant to the user.
The application server 150 is shown to include a referrer data subsystem 152. The referrer data subsystem 152 may receive the referrer data from the user device 104 and identify data that may be used during generation of the deep link. For example, if the referrer data includes data related to a search performed by the user, the referrer data subsystem 152 may identify the search terms of the search. As another example, the referrer data may include information about a web page on which the content item is presented, and the referrer data subsystem 152 may identify particular content within the web page that may be used to build the deep link.
The application server 150 is shown to include a deep link generation subsystem 154. Deep link generation subsystem 154 may be configured to generate deep links based on the referrer data. In some implementations, the deep link can be a Uniform Resource Locator (URL) or a Uniform Resource Identifier (URI) with an endpoint constructed using the referrer data. For example, for the URL http:// www.example.com of a web page, an endpoint (e.g., "/path/page") may be built for the URL to create a deep link. An endpoint may cause a content server to access indexed content related to the endpoint, thus allowing the user to be presented with the related content via an application through the endpoint.
In some implementations, the endpoints may be built by deep link generation subsystem 154 using Common Gateway Interface (CGI) parameters. Using the CGI parameters, a web server configured to respond to web page requests from a web browser may provide content (e.g., a new web page with related content) based on the identified parameters. In some implementations, the endpoints may be constructed using key-value pair mapping. The key-value pair may generally be a linked data set that includes a key (e.g., an identifier) and a value (e.g., a value that identifies the referrer data). A web server providing content for an application may use a lookup table with key-value pairs to determine the content to be rendered on the application.
In some implementations, the application may already be installed on the user device when the user selects a content item to direct the application to open on the user device 104. In such a case, the user device 104 may provide the reference data to the application server 150, and the application may receive the deep link in the response from the application server 150. The deep links are then used to retrieve content from the web server for display within the application.
In some implementations, the application to be opened on the user device may not be installed on the user device. In such embodiments, the application may be downloaded from the application server 150. The application server 150 is shown to include an application installation subsystem 156 configured to facilitate installation of an application 162 on the user device 104. The application 162 may be retrieved from a local or remote database 160.
If the application is to be downloaded to the user device 104, the deep link may be provided to the application by the application server 150 in the form of a reference tag. The application server 150 is shown to include a referrer tag subsystem 158 configured to generate a referrer tag (or modify an existing referrer tag). The referrer tag may generally be a tag generated by the application server 150 to represent information about what caused the application 162 to be installed on the user device 104. The referrer tag may generally include, for example, primary referrer data. However, the referrer tag subsystem 158 may be configured to also include secondary referrer data received by the application server 150 within the tag. When the application 162 is installed and opened on the user device 104, the reference tag can be used to determine the content to be initially rendered within the application.
In various embodiments, the activities of the application server 150 may be split across multiple servers. For example, the user device 104 may be configured to download an application to be loaded onto the user device from another resource than the application server 150, but may still receive a modified reference tag from the application server 150. It should be understood that the configuration shown in FIG. 1 is not limiting, and that various activities related to the presentation of applications on the user device 104 may be provided to the user device 104 by the application server 150 or another system connected within the environment 100.
Referring to FIG. 2, a detailed block diagram illustrating a process of relaying secondary referrer data from a first resource to a second resource is shown in accordance with one illustrative embodiment. As described above, secondary reference data along with primary reference data may be used to generate deep links. The primary reference data may generally relate to a current resource (e.g., a current web page that the user is currently viewing), while the secondary reference data may generally relate to a previous resource (e.g., a previous web page that the user was viewing before reaching the current web page). With specific reference to FIG. 2, the process of passing secondary referrer data from a previous resource to a current resource is described in more detail.
A user may view the first resource 202 on a first application 204 on the user device 104. The first resource 202 may include any number of content items 206, links, pictures, text, and other content typically found on a resource. The user device 104 may receive a selection from the user to cause the second resource 212 on the second application 214 to be presented on the user device 104. The selection may be, for example, a selection of the content item 206 that caused the new application to open, or a selection of a link to open a new web page in the same application. The second resource 212 may be presented on the second application 214 with any number of content items 216, links, pictures, text, and other content presented based on user selections on the first resource.
It should be understood that although first resource 202 and second resource 212 and first application 204 and second application 214 are distinguished from each other in fig. 2, first resource 202 and second resource 212 may be the same resource and first application 204 and second application 214 may be the same application. In other words, no new applications may be opened or no new resources loaded after the user selects. The embodiment shown in FIG. 2 is shown to distinguish between the two resources and applications to facilitate explanation in the context of loading a new resource or application, but the systems and methods described herein are not limited to such a case.
When navigating from the first resource 202 to the second resource 212, the secondary reference data 220 can be passed to the second resource 212 and the second application 214. The secondary reference data 220 may generally include information related to the first resource 202. For example, if the first resource 202 is a search results web page and the user selection is a selection of a search result, the secondary reference data 220 can identify a search term entered by the user that caused the search result to be generated. As another example, if the user selection is a selection of a content item 206, the secondary reference data 220 may include data related to a decision to provide the content item 206 for display on the first resource 202. If the content item 206 is provided as part of a content item campaign, the secondary reference data 220 may identify information related to the campaign, thereby indicating information that may be relevant to a user viewing the first resource 202.
As another example, a user may shop via the first resource 202 and may be presented with a plurality of content items related to items available for purchase. If the user is shopping (e.g., for a jacket), the secondary reference data 220 may identify one or more search parameters entered by the user (e.g., the type of jacket, the color of the jacket, etc.). When a user selection occurs (e.g., selection of a content item), secondary referrer data 220 is generated based on parameters entered by the user to initiate a shopping process.
The secondary reference data 220 may further be used to identify other information of interest, such as whether the user intends to make a purchase, how the user reaches the first resource 202 and the first application 204, and so forth. The secondary referrer data 220 may inherit from multiple user selections and navigation, i.e., user information may be determined across multiple user selections on multiple resources and applications.
In various embodiments, secondary reference data 220 may be represented within second resource 212, second application 214, and/or content item 216. For example, if second resource 212 or second application 214 is the same as first resource 202 or first application 204, secondary reference data 220 may be stored within the resource or application. As another example, if a resource and/or application changes, secondary referrer data 220 may be associated with the new resource and/or application or may be associated with content item 216.
Referring now to FIG. 3, a detailed block diagram illustrating the process of transferring secondary and primary referrer data to an application server is shown in accordance with an illustrative embodiment. In fig. 3, the user has reached a second resource 212 on a second application 214. The second resource 212 may include any number of content items 216, links, pictures, text, and other content typically found on a resource. The user device 104 may receive a selection of the content item 216 from the user. Selection of the content item 216 may generally cause a third application 224 to open on the user device 104, with a third resource 222 and new content 226 displayed within the resources.
The content item 216 may be a content item specifically associated with the third application 224. For example, referring to the shopping example above, content item 216 may be specifically associated with a shopping-based application that allows a user to purchase a jacket. As another example, referring to the music example above, content item 216 may be specifically associated with a music application configured to play back music on user device 104.
User selection of the content item 216 may cause a third application 224 to be launched or installed on the user device 104. If the third application 224 has been installed, the application may be launched and a deep link 232 (described in detail below) received from the application server 150 is used to generate content for display within the application. If the third application 224 is not installed on the user device 104, the application may be downloaded (e.g., from the application server 150 or another server) and installed on the user device 104. The downloaded-with-reference tag 234 provided by the application server 150 or another server is then used to retrieve the content displayed within the application when the application is first started.
When the user selects content item 216, the reference information is provided to application server 150 by user device 104. The referral information includes secondary referrer data 220 relayed from previous applications and resources viewed by the user as described above. The reference information also includes primary reference data 230 directly related to the second resource 212, the second application 214, and the selected content item 216. For example, the primary reference data 230 may include information related to the selection of the content item 216 for display on the second resource 212. As another example, master reference data 230 may include information about other content displayed on second resource 212 (e.g., using the country music example, master reference data 230 may identify a particular song or artist of a song being played back). As yet another example, primary reference data 230 can identify the type of resource (e.g., a particular web page link) or the type of application (e.g., browser) used to view the content.
As described above, the application server 150 receives the primary and secondary reference data 230, 220 and may be configured to generate a deep link 232 for the third application 224 based on the reference data. In some implementations, the application server 150 can determine whether the third application 224 is already installed on the user device 104 and can provide the application for download if the user device 104 has not already installed the application.
If the user device 104 has installed the third application 224, the application server 150 may be configured to generate the deep link 232 by building an endpoint for the URL or URI. For example, referring to the shopping example, if the referrer data indicates that the user is purchasing all types of jackets, the endpoint may reference a jacket (e.g., "/jacket" or "/clothing/jacket"). As another example, referring to the country music example, an endpoint may reference a particular song if the referrer data indicates that the user is interested in the particular song. As yet another example, if the reference data indicates a general interest in music, the endpoints may generally reference music content without identifying country music as a particular genre. In some implementations, the endpoint can be constructed using CGI parameters. In other implementations, the endpoints may be constructed using key-value pair mapping. In yet other embodiments, any method of generating endpoints for deep links may be used. The third application 224 may receive the deep link 232 and use the deep link 232 to retrieve content relevant to the user.
If the user device 104 does not have the third application 224 installed, the application server 150 (or another system) may provide the application for download by the user device. Further, the application server 150 may be configured to generate a referrer tag 234 for the application (or modify an existing referrer tag accompanying the download). The referrer tag 234 may generally include information indicating one or more actions that result in installation of the application on the user device 104. For example, the referrer tag 234 may identify the particular content item 216 selected by the user to initiate the process. The referrer tag 234 may also include information regarding the selection of the content item 216 for display on the second resource 212. In other words, the referrer tag 234 may include information that is typically included as part of the primary referrer data 230.
The application server 150 may further use the referrer tag 234 to provide information to the third application 224 regarding the secondary referrer data 220. For example, the referrer tag 234 may generally include information regarding the selection of one or more content items 206 in the first resource 202 of the first application 204. Further, the referrer tag 234 may identify the topic or other content of the first resource 202 or of previous content viewed by the user.
The application server 150 may communicate the referrer tag 234 to the user device 104. Upon first launch on the user device 104, the third application 224 may receive the reference tag 234 and use the tag to determine content to display within the application. The referrer tag 234 may be in any format. For example, the referrer tag 234 may be an HTTP header field.
The third application 224 may be configured to retrieve content for display on the application upon receiving the deep link 232 or the referrer tag 234. The type of content retrieved may vary based on the referrer data identified via the deep link 232 or the referrer tag 234. For example, using the country music video example, the third application 224 may provide a particular music video as a primary recommendation on the application home page. A particular music video may be selected based on one or more particular songs or artists identified by the deep links 232 or the reference tags 234, or may be selected based on more general search terms identified by the deep links 232 or the reference tags 234. As another example, the third application 224 may provide a list of music videos (e.g., a recommended playlist), each music video in the list being selected based on information identified by the deep link 232 or the referrer tag 234. Some items in the list may relate to primary reference data (e.g., a particular artist or song), while other items in the list may relate to secondary reference data (e.g., other country music artists and songs, or songs from other genres that may be related to country music). As yet another example, the third application 224 may open a channel page, the channel relating to a particular artist or genre.
Referring now to FIG. 4, a flow diagram of a process 400 for providing secondary and primary referrer data to an application is shown. As described above, process 400 may be performed by user device 104 communicating information to application server 150.
Referring now to FIG. 5, a flow diagram of a process 500 for providing secondary and primary referrer data to an application is shown. In the example of fig. 5, the application has been installed on the user device of the user. As described above, process 500 may be performed by application server 150.
The process 500 also includes determining an application to launch on the user device based on the user's selection of the content item (515). Process 500 also includes determining whether an application is already installed on the user device (520). After verifying that the application is installed on the user device, process 500 includes generating a deep link for the application based on one or more parameters (525) and providing the deep link to the user device (530). Deep linking may then be applied to retrieve content related to the primary and secondary reference data.
Referring now to FIG. 6, a flow diagram of a process 600 for providing secondary and primary referrer data to an application is shown. In the example of fig. 6, the application is not installed on the user device of the user. As described above, process 600 may be performed by application server 150.
The process 600 also includes determining an application to launch on the user device based on the user's selection of the content item (615). Process 600 also includes determining whether an application is already installed on the user device (620). After verifying that the application is not installed on the user device, process 600 includes providing the application for download by the user device (625).
The process 600 also includes generating a referrer tag for the application based on the one or more parameters (630) and providing the referrer tag to the user device (635). The application may then use the reference tag to retrieve content related to the primary and secondary reference data.
FIG. 7 illustrates a depiction of a computing system 700 that may be used to implement, for example, illustrative user device 104, illustrative content management system 108, illustrative content provider device 106, illustrative application server 150, and/or various other illustrative systems described in this disclosure. Computing system 700 includes a bus 705 or other communication component for communicating information, and a processor 710 coupled to bus 705 for processing information. Computing system 700 also includes main memory 715, such as a Random Access Memory (RAM) or other dynamic storage device, coupled to bus 705 for storing information and instructions to be executed by processor 710. Main memory 715 also may be used for storing location information, temporary variables, or other intermediate information during execution of instructions by processor 710. Computing system 700 may also include a Read Only Memory (ROM)1220 or other static storage device coupled to bus 705 for storing static information and instructions for processor 710. A storage device 725, such as a solid state device, magnetic disk or optical disk, is coupled to bus 705 for persistently storing information and instructions.
In some implementations, the computing system 700 may include a communications adapter 740, such as a network adapter. A communication adapter 740 may be coupled to the bus 705 and may be configured to enable communication with a computing or communication network 745 and/or other computing systems. In various illustrative embodiments, a communications adapter 740, such as wired (e.g., via Ethernet), wireless (e.g., via Ethernet), may be used
According to various embodiments, the processes for implementing the illustrative embodiments described herein may be implemented by the computing system 700 in response to the processor 710 executing an arrangement of instructions contained in main memory 715. Such instructions may be read into main memory 715 from another computer-readable medium, such as storage device 725. Execution of the arrangement of instructions contained in main memory 715 causes computing system 700 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 715. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the illustrative embodiments. Thus, implementations are not limited to any specific combination of hardware circuitry and software.
Systems and methods as described in this disclosure may be implementable for any type of third-party content item (i.e., for any type of content item to be displayed on a resource). In one implementation, the content item may include an advertisement. In one implementation, the content items may include any text, images, videos, stories (e.g., news stories), social media content, links, or any other type of content provided by a third party for display on the first party content provider's resources. The type of content item for which the methods herein are used is not limiting.
Although an example processing system has been described in fig. 7, implementations of the subject matter and the functional operations described in this specification can be implemented using other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter and the operations described in this specification can be implemented using digital electronic circuitry, or in computer software implemented in tangible media, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more subsystems of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium may be or may be included in: a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). Thus, computer storage media is both tangible and non-transitory.
The operations described in this specification can be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" or "computing device" encompasses all types of apparatus, devices, and machines for processing data, including by way of example one or more programmable processors, computers, systems on a chip, or combinations of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement various different computing model infrastructures, such as Web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more subsystems, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Further, the computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, implementations of the subject matter described in this specification can be implemented on a computer having: a display device such as a CRT (cathode ray tube), plasma, or LCD (liquid crystal display) monitor for displaying information to a user; and a keyboard and a pointing device, such as a mouse or a trackball, by which a user can provide input to the computer. Other types of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. In addition, the computer may interact with the user by sending and receiving documents to and from the device used by the user; such as by transmitting a web page to a web browser on the user's client device in response to receiving a request from the web browser.
Implementations of the subject matter described in this specification can be performed with a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), internetworks (e.g., the internet), and peer-to-peer networks (e.g., ad hoc, peer-to-peer networks).
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., HTML pages) to the client device (e.g., for the purpose of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
In some demonstrative embodiments, the features disclosed herein may be implemented on a smart television module (or a connected television module, a hybrid television module, etc.), which may include processing circuitry configured to integrate an internet connection with a more traditional television program source (e.g., via cable, satellite, over-the-air, or other signal reception). The smart television module may be physically incorporated into a television set or may comprise a separate device such as a set-top box, blu-ray or other digital media player, game console, hotel television system, and other companion devices. The smart television module may be configured to allow viewers to search for and find videos, movies, photos, and other content on the web, on local cable channels, on satellite television channels, or stored on local hard drives. A Set Top Box (STB) or Set Top Unit (STU) may include an information appliance device that may contain a tuner and connect to a television and an external signal source, tune the signal to content, which is then displayed on a television screen or other display device. The smart television module may be configured to provide a primary screen or top level screen that includes icons for a plurality of different applications, such as a web browser and a plurality of streaming media services, connected cable or satellite media sources, other web "channels," and so forth. The smart television module may also be configured to provide an electronic program guide to the user. A companion application for the smart television module may operate on the mobile computing device to provide additional information to the user about available programming, to allow the user to control the smart television module, and so forth. In alternative implementations, the features may be implemented on a laptop or other personal computer, smart phone, other mobile phone, handheld computer, tablet computer, or other computing device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be combined or performed in a single implementation. Conversely, various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination. In addition, features described with respect to a particular title may be used with respect to and/or in combination with other illustrative embodiments described under other titles; the headings provided are included for readability purposes only, and should not be construed as limiting any of the features provided in relation to the headings.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products embodied on tangible media.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
Claims (20)
1. A method, comprising:
selecting, by a computing device, a first content item within a first resource of a first application;
in response to selecting the first content item within the first resource of the first application, generating, at the computing device, a set of data packets including first referrer data associated with the first resource rendered by the computing device and second referrer data associated with a second resource rendered by the computing device prior to rendering the first resource, the first content item including data for causing the computing device to navigate from the first application to a second application associated with the first content item;
transmitting, by the computing device to a server, the set of data packets including the first referrer data and the second referrer data in response to generating the set of data packets;
receiving, on the computing device, at the second application from the server, the first and second referrer data included in the set of data packets; and
providing, by the computing device, a content interface for display within the second application on the computing device, the content interface including a second content item selected using the first and second referrer data.
2. The method of claim 1, wherein the first resource and the second resource comprise at least one of a web page, a third content item, a keyword, or an interface, wherein the first application and the second application comprise at least one of a browser, a media player, software, or a program.
3. The method of claim 1, further comprising:
transmitting, by the computing device to the server, the set of data packets including the first and second reference data to generate a deep link; and
receiving, by the computing device from the server, the deep link generated by the server using the first and second referrer data.
4. The method of claim 3, wherein receiving the first and second referrer data comprises:
receiving, at the second application on the computing device, the second content item selected using the first and second reference data included in the set of data packets from the server; and
providing the content interface including the second content item selected using the first and second referrer data for display within the second application on the computing device.
5. The method of claim 1, further comprising downloading, at the computing device, the second application from a second server.
6. The method of claim 1, further comprising:
receiving, at the computing device from the server, an indication to install the second application on the computing device;
installing the second application on the computing device;
in response to installing the second application, receiving, on the computing device, the first and second referrer data included in the set of data packets at the second application from the server.
7. The method of claim 1, further comprising:
receiving, at the computing device from the server, a deep link generated using the first and second referrer data included in the set of data packets, the deep link indicating the second application on the computing device;
in response to receiving the deep link, launching, by the computing device, the second application on the computing device; and
in response to launching the second application, receiving, on the computing device, the first and second referrer data included in the set of data packets at the second application from the server.
8. The method of claim 1, wherein the second content item comprises at least one of a link, an image, text, or a media item based on the selection of the first content item within a first resource of the first application, wherein the first and second referrer data comprise at least one of a search term entered at the computing device and a parameter for selecting the first content item for presentation on the first resource.
9. The method of claim 1, wherein the second referrer data is generated at the computing device in response to selection of a third content item within the second resource of a third application, wherein the computing device accesses the first resource of the first application in response to selection of a third content item within the second resource of the third application.
10. The method of claim 1, wherein receiving the first and second referrer data further comprises:
receiving, at the second application on the computing device, a referrer tag generated by the server from the server, the referrer tag including the first referrer data and the second referrer data contained in the set of data packets and historical data of a plurality of computing devices, the historical data identifying performance metrics of the second content item.
11. A system, comprising:
a computing device operatively coupled to at least one memory and configured to:
selecting a first content item within a first resource of a first application;
in response to selecting the first content item within the first resource of the first application, generating a set of data packets comprising first referrer data associated with the first resource rendered by the computing device and second referrer data associated with a second resource rendered by the computing device prior to rendering the first resource, the first content item comprising data for causing the computing device to navigate from the first application to a second application associated with the first content item;
in response to generating the set of data packets, transmitting the set of data packets including the first and second reference data to a server;
receiving, at the second application from the server, the first and second referrer data included in the set of data packets; and
providing a content interface for display within the second application, the content interface including a second content item selected using the first and second referrer data.
12. The system of claim 11, wherein the first and second resources comprise at least one of a web page, a third content item, a keyword, or an interface, wherein the first and second applications comprise at least one of a browser, a media player, software, or a program.
13. The system of claim 11, wherein the computing device is further configured to:
transmitting the set of data packets including the first and second referrer data to the server to generate a deep link; and
receiving, from the server, the deep link generated by the server using the first and second reference data.
14. The system of claim 13, wherein to receive the first and second referrer data, the computing device is further configured to:
receiving, at the second application from the server, the second content item selected using the first and second referrer data included in the set of data packets; and
providing the content interface including the second content item selected using the first and second referrer data for display within the second application.
15. The system of claim 11, wherein the computing device is further configured to download the second application from the server to provide the content interface for display.
16. The system of claim 11, wherein the computing device is further configured to:
receiving, from the server, an indication to install the second application on the computing device;
installing the second application retrieval via the server;
receiving, at the second application from the server, the first and second referrer data included in the set of data packets in response to installing the second application.
17. The system of claim 11, wherein the computing device is further configured to:
receiving, from the server, a deep link generated using the first and second referrer data included in the set of data packets, the deep link indicating the second application on the computing device;
in response to receiving the deep link, launching the second application on the computing device; and
receiving, at the second application from the server, the first and second referrer data included in the set of data packets in response to launching the second application.
18. The system of claim 11, wherein the second content item includes at least one of a link, an image, text, or a media item based on the selection of the first content item within a first resource of the first application, wherein the first and second referrer data include at least one of a search term entered at the computing device and a parameter for selecting the first content item for presentation on the first resource.
19. The system of claim 11, wherein the second referrer data is generated at the computing device in response to selection of a third content item within the second resource of a third application, wherein the computing device accesses the first resource of the first application in response to selection of a third content item within the second resource of the third application.
20. The system of claim 11, wherein the computing device is further configured to receive, at the second application, from the server, a referrer tag generated by the server, the referrer tag including the first and second referrer data contained in the set of data packets and historical data of a plurality of computing devices, the historical data identifying performance metrics of the second content item.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202210276676.8A CN114722316A (en) | 2017-02-15 | 2017-02-15 | Generating deep links for applications based on multi-level referrer data |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202210276676.8A CN114722316A (en) | 2017-02-15 | 2017-02-15 | Generating deep links for applications based on multi-level referrer data |
PCT/US2017/017970 WO2018151722A1 (en) | 2017-02-15 | 2017-02-15 | Generating deeplinks for applications based on multi-level referrer data |
CN201780002011.5A CN108738362B (en) | 2017-02-15 | 2017-02-15 | Generating deep links for applications based on multi-level referrer data |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780002011.5A Division CN108738362B (en) | 2017-02-15 | 2017-02-15 | Generating deep links for applications based on multi-level referrer data |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114722316A true CN114722316A (en) | 2022-07-08 |
Family
ID=58228561
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202210276676.8A Pending CN114722316A (en) | 2017-02-15 | 2017-02-15 | Generating deep links for applications based on multi-level referrer data |
CN201780002011.5A Active CN108738362B (en) | 2017-02-15 | 2017-02-15 | Generating deep links for applications based on multi-level referrer data |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780002011.5A Active CN108738362B (en) | 2017-02-15 | 2017-02-15 | Generating deep links for applications based on multi-level referrer data |
Country Status (5)
Country | Link |
---|---|
US (4) | US10795741B2 (en) |
CN (2) | CN114722316A (en) |
DE (2) | DE212017000297U1 (en) |
GB (1) | GB2565609B (en) |
WO (1) | WO2018151722A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
DE212017000297U1 (en) | 2017-02-15 | 2019-10-25 | Google Llc | Create deeplinks for applications based on multi-level reference data |
CN112534771B (en) * | 2019-07-17 | 2024-04-19 | 谷歌有限责任公司 | System and method for verifying trigger keywords in an acoustic-based digital assistant application |
Family Cites Families (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7600014B2 (en) * | 2000-11-16 | 2009-10-06 | Symantec Corporation | Method and system for monitoring the performance of a distributed application |
US7069562B2 (en) * | 2001-12-12 | 2006-06-27 | Sun Microsystems, Inc. | Application programming interface for connecting a platform independent plug-in to a web browser |
GB0603463D0 (en) * | 2006-02-21 | 2006-04-05 | Instant Access Technologies Lt | Accessing information |
US20110239103A1 (en) | 2010-03-23 | 2011-09-29 | Microsoft Corporation | Detecting virality paths and supporting referral monetization |
CN103425705B (en) * | 2012-05-24 | 2017-07-14 | 阿里巴巴集团控股有限公司 | The acquisition methods and device and searching method and device of a kind of negative keyword |
US9195477B1 (en) | 2012-10-09 | 2015-11-24 | Sencha, Inc. | Device profiles, deep linking, and browser history support for web applications |
DE102013017085A1 (en) | 2012-10-15 | 2014-04-17 | Wixpress Ltd. | System for deep linking and search engine support for websites integrating a third-party application and components |
CN103778156A (en) * | 2012-10-24 | 2014-05-07 | 阿里巴巴集团控股有限公司 | Method and device for searching for data and server for data search |
US9491223B2 (en) * | 2013-02-17 | 2016-11-08 | Onavo Mobile Ltd. | Techniques for determining a mobile application download attribution |
US9806942B2 (en) | 2013-12-02 | 2017-10-31 | Yahoo Holdings, Inc. | Deep linking to mobile applications |
US9697290B2 (en) | 2014-01-16 | 2017-07-04 | International Business Machines Corporation | Providing relevant information to a user based upon monitored user activities in one or more contexts |
US10510093B2 (en) | 2015-04-02 | 2019-12-17 | Vungle, Inc. | Systems and methods for providing advertising services to devices with dynamic ad creative deep linking |
CN105450516B (en) * | 2015-12-25 | 2018-10-16 | 精硕科技（北京）股份有限公司 | Link method for routing, electronic system and its electronic equipment and server |
DE212017000297U1 (en) | 2017-02-15 | 2019-10-25 | Google Llc | Create deeplinks for applications based on multi-level reference data |
-
2017
- 2017-02-15 DE DE212017000297.2U patent/DE212017000297U1/en active Active
- 2017-02-15 GB GB1721012.1A patent/GB2565609B/en active Active
- 2017-02-15 US US16/346,471 patent/US10795741B2/en active Active
- 2017-02-15 DE DE112017000039.4T patent/DE112017000039T5/en active Pending
- 2017-02-15 CN CN202210276676.8A patent/CN114722316A/en active Pending
- 2017-02-15 WO PCT/US2017/017970 patent/WO2018151722A1/en active Application Filing
- 2017-02-15 CN CN201780002011.5A patent/CN108738362B/en active Active
-
2020
- 2020-10-06 US US17/063,983 patent/US11442797B2/en active Active
-
2022
- 2022-09-13 US US17/944,179 patent/US11782776B2/en active Active
-
2023
- 2023-09-07 US US18/243,385 patent/US20230418698A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US10795741B2 (en) | 2020-10-06 |
GB2565609A (en) | 2019-02-20 |
US11442797B2 (en) | 2022-09-13 |
GB2565609B (en) | 2022-06-15 |
DE112017000039T5 (en) | 2018-10-25 |
DE212017000297U1 (en) | 2019-10-25 |
GB201721012D0 (en) | 2018-01-31 |
WO2018151722A1 (en) | 2018-08-23 |
CN108738362A (en) | 2018-11-02 |
US20230418698A1 (en) | 2023-12-28 |
US20210019204A1 (en) | 2021-01-21 |
US20230008181A1 (en) | 2023-01-12 |
US20190278641A1 (en) | 2019-09-12 |
CN108738362B (en) | 2022-04-08 |
US11782776B2 (en) | 2023-10-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10664509B1 (en) | Processing non-uniform datasets | |
CN108027839B (en) | System and method for identifying non-canonical sessions | |
US11086892B1 (en) | Search result content item enhancement | |
US11276076B2 (en) | Method and system for generating a digital content recommendation | |
US9262405B1 (en) | Systems and methods of serving a content item to a user in a specific language | |
US11496603B2 (en) | Providing content based on event related information | |
US9959192B1 (en) | Debugging interface for inserted elements in a resource | |
CN108140196B (en) | System and method for reducing latency of content item interactions using client-generated click identifiers | |
US11782776B2 (en) | Generating deeplinks for applications based on multi-level referrer data | |
US20190164069A1 (en) | Method and server for selecting recommendation items for a user | |
US10614079B1 (en) | Identifying a level of relevancy of a keyword cluster related to an event category for a given time period relative to the event | |
US20170228768A1 (en) | Attributing conversions relating to content items | |
CN107924413B (en) | Bifurcation searching | |
TW200937330A (en) | System for providing advertisements across multiple channels | |
US9514220B1 (en) | Generating content placement criteria based on a search query | |
US10674215B2 (en) | Method and system for determining a relevancy parameter for content item | |
US8984091B1 (en) | Providing content based on timestamp of last request for content | |
US10229164B1 (en) | Adjusting a relevancy score of a keyword cluster—time period—event category combination based on event related information | |
US11463541B2 (en) | Providing content based on event related information | |
US10311472B1 (en) | Expansion of high performing placement criteria | |
US20220292144A1 (en) | Provision of different content pages based on varying user interactions with a single content item | |
US10037310B1 (en) | Evaluating content in a computer networked environment | |
GB2605885A (en) | Generating deeplinks for applications based on multi-level referrer data | |
WO2020122943A1 (en) | Systems and methods for a query handling engine for processing queries to provide a diverse set of query results |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
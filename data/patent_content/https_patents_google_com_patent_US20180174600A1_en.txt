US20180174600A1 - Associating faces with voices for speaker diarization within videos - Google Patents
Associating faces with voices for speaker diarization within videos Download PDFInfo
- Publication number
- US20180174600A1 US20180174600A1 US15/497,497 US201715497497A US2018174600A1 US 20180174600 A1 US20180174600 A1 US 20180174600A1 US 201715497497 A US201715497497 A US 201715497497A US 2018174600 A1 US2018174600 A1 US 2018174600A1
- Authority
- US
- United States
- Prior art keywords
- separate
- face
- voice
- video
- faces
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/48—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use
- G10L25/51—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use for comparison or discrimination
- G10L25/57—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use for comparison or discrimination for processing of video signals
-
- G06K9/00288—
-
- G06K9/00744—
-
- G06K9/66—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/46—Extracting features or characteristics from the video content, e.g. video fingerprints, representative shots or key frames
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/49—Segmenting video sequences, i.e. computational techniques such as parsing or cutting the sequence, low-level clustering or determining units such as shots or scenes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/16—Human faces, e.g. facial parts, sketches or expressions
- G06V40/172—Classification, e.g. identification
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/06—Creation of reference templates; Training of speech recognition systems, e.g. adaptation to the characteristics of the speaker's voice
- G10L15/063—Training
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/26—Speech to text systems
-
- G10L15/265—
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
-
- G10L17/005—
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
- G10L17/04—Training, enrolment or model building
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
- G10L17/06—Decision making techniques; Pattern matching strategies
- G10L17/10—Multimodal systems, i.e. based on the integration of multiple recognition engines or fusion of expert systems
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/03—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 characterised by the type of extracted parameters
- G10L25/21—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 characterised by the type of extracted parameters the extracted parameters being power information
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/93—Discriminating between voiced and unvoiced parts of speech signals
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
- G11B27/02—Editing, e.g. varying the order of information signals recorded on, or reproduced from, record carriers
- G11B27/031—Electronic editing of digitised analogue information signals, e.g. audio or video signals
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
- G11B27/10—Indexing; Addressing; Timing or synchronising; Measuring tape travel
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
- G11B27/10—Indexing; Addressing; Timing or synchronising; Measuring tape travel
- G11B27/19—Indexing; Addressing; Timing or synchronising; Measuring tape travel by using information detectable on the record carrier
- G11B27/28—Indexing; Addressing; Timing or synchronising; Measuring tape travel by using information detectable on the record carrier by using information signals recorded by the same method as the main recording
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/233—Processing of audio elementary streams
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/234—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs
- H04N21/23418—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs involving operations for analysing video streams, e.g. detecting features or characteristics
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/439—Processing of audio elementary streams
- H04N21/4394—Processing of audio elementary streams involving operations for analysing the audio stream, e.g. detecting features or characteristics in audio streams
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/44—Processing of video elementary streams, e.g. splicing a video clip retrieved from local storage with an incoming video stream, rendering scenes according to MPEG-4 scene graphs
- H04N21/44008—Processing of video elementary streams, e.g. splicing a video clip retrieved from local storage with an incoming video stream, rendering scenes according to MPEG-4 scene graphs involving operations for analysing video streams, e.g. detecting features or characteristics in the video stream
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/45—Management operations performed by the client for facilitating the reception of or the interaction with the content or administrating data related to the end-user or to the client device itself, e.g. learning user preferences for recommending movies, resolving scheduling conflicts
- H04N21/466—Learning process for intelligent management, e.g. learning user preferences for recommending movies
- H04N21/4662—Learning process for intelligent management, e.g. learning user preferences for recommending movies characterized by learning algorithms
- H04N21/4666—Learning process for intelligent management, e.g. learning user preferences for recommending movies characterized by learning algorithms using neural networks, e.g. processing the feedback provided by the user
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/488—Data services, e.g. news ticker
- H04N21/4884—Data services, e.g. news ticker for displaying subtitles
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/85—Assembly of content; Generation of multimedia applications
- H04N21/854—Content authoring
- H04N21/8549—Creating video summaries, e.g. movie trailer
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
- G10L21/0272—Voice signal separating
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/27—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 characterised by the analysis technique
- G10L25/30—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 characterised by the analysis technique using neural networks
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/78—Detection of presence or absence of voice signals
Definitions
- the disclosed embodiments relate generally to computer-implemented methods for speaker diarization, and more specifically, to automatic speaker diarization and face identification in videos using video and audio input data.
- a very large number (e.g., millions) of videos may be uploaded and distributed by and to users of the content system every day. Many of these videos may be associated with captions, which may be created by the uploading user or other individuals. These captions are used in order to present a video to a user who is unable to hear or play the audio accompanying the video.
- many more videos uploaded to the content system may not be accompanied with captions.
- the content system may attempt to generate captions automatically using various automated captioning systems.
- a video may typically have more than one speaker, with the multiple speakers speaking in different orders and for different durations. This type of scenario may be especially challenging for a traditional captioning system.
- the captioning system may recognize this duration of speech in the video as a single caption, and combine the recognized speech from both speakers in a single caption, implying a single speaker.
- a caption does not accurately reflect the speech in the video, and thus reduces the accuracy of the captioning system, resulting in a poorer user experience.
- a more robust and accurate system is desirable.
- a computer-implemented method for speech diarization comprises determining temporal positions of separate faces in a video using face detection and clustering. Voice features are extracted from the speech sections of the video. The method further includes determining temporal positions of separate voices in the video using clusters of voice features having a threshold similarity. A correlation is generated between the determined separate faces and separate voices based at least on the temporal positions of the separate faces and the separate voices in the video. This correlation is stored in a content store with the video and speaker label data for the video is generated based on the correlation, with the speaker label data indicating a temporal position of unique speakers in the video
- FIG. 1 is a high-level block diagram of an environment for automatic speaker diarization and face identification, according to an embodiment.
- FIG. 2 is a high-level diagram of an exemplary process for voice-face correlation, according to one embodiment.
- FIG. 3 illustrates an exemplary illustration of voice detection and processing, according to an embodiment.
- FIG. 4 illustrates an exemplary illustration of voice clustering, according to an embodiment.
- FIG. 5 illustrates an exemplary illustration of face detection and clustering, according to an embodiment.
- FIG. 6 illustrates an exemplary overlay of the separate voices and faces detected by the voice detection subsystem and the face detection subsystem, according to an embodiment.
- FIG. 7 illustrates an exemplary clustering of voices and faces, according to an embodiment.
- FIG. 8 illustrates an exemplary captioning based on the automatic speaker detection, according to an embodiment.
- FIG. 9 is a data flow diagram illustrating the actions of the content system 105 for speaker diarization using face and voice data, according to an embodiment.
- the content system described herein provides the advantage of automatically associating the speakers in a video with the speech for each respective speaker. Furthermore, the content system described herein is able to identify the location of speakers in the video, whether the speaker is on-screen or off-screen. The content system detects speech sounds in the audio track of the video, and clusters these speech sounds by individual distinct voice. The content system further identifies faces in the video, and clusters these faces by individual distinct faces. The content system correlates the identified voices and faces to match each voice to each face. By correlating voices with faces, the content system is able to provide captions that accurately represent on-screen and off-screen speakers.
- the content system is able to identify each speaker's speech and provide separate captions that accurately identify each speaker, rather than having a single caption that combines the speech from both speakers into a single caption.
- Such a system may also be useful for automated camera selection in a multi camera setup, such as when filming multiple speakers, or in a video conference.
- the system may also be useful in crowd-sourced captioning/translation of speech in videos, as users who provide captions will not need to manually time the caption start and stop positions, and will not need to indicate which speaker is speaking, as the system will automatically determine these factors.
- Other applications where such a system may provide an advantage may include, but are not limited to, cinematography, a conversation analyzer (e.g., to determine how natural a conversation is), and so on.
- FIG. 1 is a high-level block diagram of an environment 100 for automatic speaker diarization and face identification, according to an embodiment.
- FIG. 1 illustrates a content system 105 with a content store 110 , a content subsystem 150 , a caption subsystem 160 , a face detection subsystem 120 , a voice detection subsystem 130 , and a voice-face correlation subsystem 140 .
- the content system 105 is connected to a network 190 , which is also connected to client devices 170 . While certain elements are shown in FIG. 1 , in other embodiments the environment may have different elements. Furthermore, the functionalities between elements may be distributed in a different manner in other embodiments, to different or multiple modules.
- the client device 170 is a computing device that may access content from the content system 105 .
- a user of the client device 170 can access a video from the content system 105 by using the client device 170 to browse a catalog of content, conduct searches using keywords, review play lists from other users or the system administrator (e.g., collections of content forming channels), or view content associated with particular user groups (e.g., communities). Additionally, in some embodiments, the client device 170 may also be used to upload content to the content system 105 .
- the client device 170 may be a desktop, laptop, smart phone, tablet, wearable device, television, set top box, and the like.
- FIG. 1 illustrates only a single client device 170 , it should be understood that many client devices 170 (e.g., millions) can communicate with the content system 105 at any time.
- the client device 170 accesses content from the content system 105 and presents the content to the user via a content presenter 175 .
- the content presenter 175 is accessed through a web browser includes a video player (e.g., an HTML5-compliant player).
- the content presenter 175 may be able to present to the user the content concurrently with captions received from the content system 105 (e.g., via the content subsystem 160 ). These captions may be for speech and/or non-speech sounds in the content.
- the content presenter 175 may be a web browser that allows the user to view web pages and content provided by the content subsystem 150 .
- the client device 170 may upload content items to the content system 105 (e.g., via the content presenter 175 ). Furthermore, a user using the client device 170 may be able to contribute caption data to content items that have already been uploaded to the content system 105 . This may be facilitated using a user interface provided by the content presenter 175 .
- the content system 105 may provide timings for captions for a video, and the content presenter 175 presents a user interface with a caption entry field for each timing provided by the content system 105 .
- the network 190 represents the communication pathways between the client device 170 and the content system 105 .
- the network 190 is the Internet, but may also be any network, including but not limited to a LAN, a MAN, a WAN, a mobile, wired or wireless network, a cloud computing network, a private network, or a virtual private network, and any combination thereof.
- all or some of links of the network 190 can be encrypted using conventional encryption technologies such as the secure sockets layer (SSL), Secure HTTP and/or virtual private networks (VPNs).
- the entities can use custom and/or dedicated data communications technologies instead of, or in addition to, the ones described above.
- the content system 105 provides content items to users of the client devices 170 and also receives content uploaded from the client devices 170 .
- the content system 105 includes a content store 110 , a content subsystem 150 , a face detection subsystem 120 , a voice detection subsystem 130 , a voice-face correlation subsystem 140 , and a caption subsystem 160 .
- the content system 105 may also include additional elements, subsystems, and servers, such as a load balancing sub-system, a content distribution network, and so on. These and other additional elements are excluded from the illustration in FIG. 1 in order to improve the ease of understanding.
- the functionality of each of the illustrated subsystems, and components within each subsystem may be divided amongst more than one hardware device.
- the functionality of the content subsystem 150 as described herein may be split across multiple individual servers.
- the content store 110 of the content system 105 stores content items 115 .
- the content items 115 may include video and/or audio content items of various durations, resolutions, and so on.
- a content item 115 may include a 4K video file, a 360-degree video file, a saved copy of a live video stream, or a stereoscopic video file.
- Each content item may include an audio portion.
- the content store 110 may also store associated metadata for the content items 115 , such as speech captions associated with the content items 115 .
- Each content item 115 that is stored in the content store 110 may also be stored with and associated with metadata, such as a title, description, responsive comments, ratings, and so on.
- the speech captions include transcribed text of the speech sounds in a number of content items 115 in the content store 110 .
- Speech sounds may include any type of audio that may be intelligible as language. This may include spoken dialogue, rhythmic spoken words, sung words, and so on.
- the timing window includes a start timestamp and an end timestamp, and the text includes a transcription of the speech sound present in a content item between the start timestamp and end timestamp.
- the content subsystem 150 provides access to, viewing and listening of, and allows the uploading of the content items 115 (process not shown).
- the content subsystem 150 allows users to access the content items 115 in the content store 110 via searching and/or browsing interfaces.
- the content items 115 can be sourced from user uploads of content, from searches or crawls of other websites or databases of content, or the like, or any combination thereof.
- the content subsystem 150 can be configured to allow for user uploads of content.
- the content subsystem 150 stores these uploaded content items in the content store 110 .
- the content subsystem 150 may retrieve content from other content databases over the network 190 .
- the content subsystem 150 processes search queries received from a user.
- a search query may include search criteria, such as keywords that may identify videos the user is interested in viewing.
- the search criteria may also specify various filtering and sorting criteria.
- the content subsystem 150 may use the search criteria, for example, to query the metadata of and/or entities associated with all the content items 115 stored in the content store 110 .
- the search results from the query are transmitted by the content subsystem 150 to the client device 170 .
- the content subsystem 150 may receive content from client devices 170 (process not shown).
- the processing of the received content may include assigning an identification number to the newly received content.
- Other steps of processing the received content may include formatting (e.g., transcoding), compressing, metadata tagging, content analysis, and/or other data processing methods.
- the content subsystem 150 may receive, in addition to the content, accompanying caption data.
- the caption data may indicate the start and end times of captions corresponding to speech (and non-speech sounds) in the content.
- the content may also be associated with other information, such as title, description, content type, author, ratings, and so on.
- the content subsystem 150 stores the content (and any associated metadata) in the content store 110 .
- the content subsystem 150 may serve content in a similar fashion to YouTubeTM; other video hosting websites are known as well, and can be adapted to operate according to the teaching disclosed herein.
- the face detection subsystem 120 detects separate faces in a video and may also indicate the temporal position of these faces in the video.
- the face detection subsystem 120 may also indicate the location of the faces in the video frame when the face appears in the video frame.
- the face detection subsystem 120 in one embodiment, includes a face detector 122 and a face clusterer 124 .
- the functionality of the face detection subsystem 120 is distributed among different components. For example, the components described here for the face detection subsystem 120 may be performed in a single module.
- the face detector 122 detects faces in the video and indicates the temporal positions of the detected faces.
- the face detector 122 may use multiple different methods of face detection to detect faces in the video, or may use a single method. If multiple methods are used, the face detector 122 may detect a face in a portion of the video where a threshold number or majority of the methods indicate a detected face.
- the face detector 122 uses a method to detected the existence of faces for each video frame of the video.
- the face detector 122 may initially detect face candidates in the frame, which are potential element in the video that may be a face.
- the face detector 122 may give each face candidate a fitness score, and those face candidates with a fitness score above a certain threshold may be detected by the face detector 122 to be a face.
- the face detector 122 may also determine the location of the detected face in the video frame.
- the face detector 122 may also perform other operations, such as transforming the video frames with the detected faces in order to align and crop the frames so that the output image with the face is made to look similar to all other outputs (e.g., facial features appear in similar positions in all output images). These outputs may be fed into a face clustering process, such as face clusterer 124 , to cluster the detected faces.
- face clustering process such as face clusterer 124
- the face clusterer 124 performs face clustering, i.e., groups detected faces together that are determined to belong to the same speaker.
- the face clusterer 124 receives detected faces from the face detector 122 , and determines which of these faces belong to the same speaker, i.e., the face clusterer 124 clusters the detected faces.
- the face clusterer 124 determines facial features shared by the different detected faces in order to determine whether any of the faces belong to the same speaker. For example, the face clusterer 124 may measure the distance between various facial features, such as the eyes in two transformed images, to determine the similarity of two detected faces. The face clusterer 124 may perform various image transformation techniques, such as edge detection, convolution with a filter, and so on, in order to manipulate the transformed images and compare the values in the results to see if a threshold value or multiple threshold values are met, indicating a that the two detected faces are likely of the same speaker. The face clusterer 124 may also utilize a trained model, such as a convolutional neural network, to determine similarity between detected faces.
- a trained model such as a convolutional neural network
- the face clusterer 124 is able to indicate the segments of the video in which similar faces appear.
- the segments may be indicated by the face clusterer 124 using temporal positions, e.g., start and stop timestamps of the segments. For example, if a face A appears in the first 5 minutes of a video, and later appears again for 3 minutes after a 10 minute gap, then the temporal positions for face A in the video may correspond to 0:00-5:00 and 15:00-18:00.
- the face clusterer 124 may store these temporal positions for each separate detected face in a video in the content store 110 and associate this information with the video content item 115 in the content store 110 as metadata for the video.
- the voice detection subsystem 130 detects separate voices (i.e., those voices that belong to separate speakers/persons) in a video and indicates the temporal positions of these voices in the video.
- the voice detection subsystem 130 includes a speech detector 132 and a voice clusterer 134 .
- the functionality of the voice detection subsystem 130 is distributed among different components.
- the components described here for the face detection subsystem 130 may be performed in a single module.
- the speech detector 132 detects speech in the audio portion of a video.
- the speech detector 132 generates raw scores indicating a probability that a segment of audio for a video includes a speech sound, i.e., any sound that may resemble human speech.
- the speech detector 132 splits or divides the audio portion into multiple segments and analyzes each segment using a trained model or classifier to determine the likelihood value indicating whether the segment of the audio exhibits speech sounds.
- the model may be trained using features extracted from a corpus of data comprised of existing caption labels for speech sounds in audio streams.
- the speech detector 132 generates a binary score from the raw scores by smoothing the raw scores. To do this, the speech detector 132 aggregates a series of raw scores over consecutive segments of the audio portion to generate an aggregate value.
- the score smoother 120 may aggregate the raw scores from segments of the audio totaling 1000 ms of time. The aggregation may be a mathematical or statistical operation such as an average or median. If the aggregate value exceeds a threshold, then the binary score for that series of consecutive segments may be set to 1 (i.e., on or high, indicating the presence of speech). Otherwise the binary score for that series of consecutive segments may be set to 0 (i.e., off or low, indicating the absence of speech).
- the speech detector 132 determines timestamps for those segments of the audio that include speech (e.g., a binary score of 1).
- the speech detector 132 may store these along with the video content item 115 in the content store 110 .
- the speech detector 132 may also transmit the timestamps, along with the features extracted from the audio segments as well using the trained model to the voice clusterer 134 .
- the voice clusterer 134 performs voice clustering, i.e., groups detected voices together that are determined to belong to the same speaker. Similarly to the face clusterer 124 , the voice clusterer 134 determines which segments of speech in the audio for a video belong to the same speaker. The voice clusterer 134 receives the feature vectors for the detected speech segments from the speech detector 132 , and iterates through the feature vectors to combine those that are similar beyond a threshold value. At each iteration, the voice clusterer 134 analyzes the similarity of the voice features for the remaining segments of voices, and combines those that are within a threshold level of similarity.
- the voice clusterer 134 arrives at a set of candidate voices (i.e., voice clusters) that are most likely to be unique and from separate speakers, although in some cases the voice clusterer may overestimate and determine that there are more candidate voices than actual voices in the video, as described in further detail below.
- candidate voices i.e., voice clusters
- the voice clusterer 134 may use VLAD, or Vector of Locally Aggregated Descriptors, to determine the similarity between two voice segments using the features extracted from these segments of audio.
- the separate voices determined by the voice clusterer 134 may be stored in the content store 110 for a video content item 115 .
- the voice-face correlation subsystem 140 determines a correlation between the separate faces determined by the face detection subsystem 120 and the voices detected by the detection subsystem 130 . In other words, the voice-face correlation subsystem 140 determines which voices belong to which faces.
- the voice-face correlation subsystem 140 analyzes for each speech segment in the video, the number of times each separate face (as determined by the face detection subsystem 120 ) appears during the segment. The voice-face correlation subsystem 140 selects the face that appears most frequently during the speech segment as the face to be associated with the voice in that speech segment (and all other speech segments with that voice). In another embodiment, the voice-face correlation subsystem 140 determines for each separate voice the number of times each separate face appears in the video when the voice is detected. The face that appears most often is determined by the voice-face correlation subsystem 140 to be the face associated with voice.
- the voice detection subsystem 130 may be configured with a threshold that likely identifies a higher number of candidate voices in the video than the number of faces in the video. In such a case, more than one voice may be associated with a single face. As the face detection subsystem 120 may be more accurate, a more accurate result may be achieved by correlating multiple voices with a few number of faces.
- the voice-face correlation subsystem 140 may store this association in the content store 110 for each video.
- the content store 110 may store the temporal positions of voices, faces, the positions of detected faces, as well as the correlation between faces and voices in the video.
- the caption subsystem 150 provides captions to client devices 170 for presentation with associated content items 115 , and may also provide an interface for users to provide captions for content items 115 that may not have captions associated with them.
- the caption subsystem 150 may provide the captions for the content item 115 to the client device 170 for presentation alongside the content item 115 .
- the caption subsystem 150 may select the captions associated with the content item 115 and transmit these captions to the client device 170 with instructions to present the captions at certain times during the playback of the content item 115 such that the captions are presented according to timing information.
- the instructions may cause the client device 170 to present the text for a caption entry during playback between the start timestamp and the end timestamp of the timing window associated with a caption entry.
- the instructions may also instruct the client device 170 on how to visually format the text for presentation (e.g., font style, font type, font size, text position on screen, etc.).
- the caption subsystem 150 in addition to speech captions 140 , the caption subsystem 150 also retrieves a set of non-speech captions describing non-speech sounds in the content item (e.g., laughter) and transmits these non-speech captions to the client device 170 along with instructions on how to present them.
- the caption subsystem 150 receives user-generated entries for captions from client devices 170 for content items 115 that do not have caption information or have incomplete or inaccurate caption information (e.g., automatic captioning using speech recognition may not produce accurate results).
- the users of the client devices 170 can transcribe the speech sounds (e.g., spoken dialogue) in the content items 115 into text and submit this transcribed text to the caption subsystem 150 , which may store them as part of caption entries.
- the caption subsystem 150 provides captions based upon the speakers identified by the face detection subsystem 120 , the voice detection subsystem 130 , and the voice-face correlation subsystem 140 , as described below. Additional details regarding this process are described below with reference to FIG. 8
- FIG. 2 is a high-level diagram of an exemplary process for voice-face correlation, according to one embodiment.
- the process described here is performed by the content system 105 described above.
- the processes 220 - 224 are performed by the face detection subsystem 120
- the processes 230 - 236 are performed by the voice detection subsystem 130
- the process 240 is performed by the voice-face correlation subsystem 140 .
- the functionality of the face detection subsystem 120 is distributed among different components.
- the components described here for the face detection subsystem 120 may be performed in a single module.
- the example process described here begins with a video 210 .
- the video 210 may be stored in the content store 110 , may be uploaded by users, and may be associated with various metadata, such as captions.
- Many videos, such as the video 210 include spoken audio in the audio portion of the video, which may be from multiple speakers.
- a video may be of an interview between a talk show host and a guest.
- the video 210 may also be a live stream that is delivered substantially in real time from a host (e.g., a client device 170 ) to the content system 105 and presented by the content system substantially in real time to different client devices 170 .
- the video 210 may be a combination of multiple live streams, such as in a video conference, where multiple users capture live video which is combined, e.g., by the content system 105 , into a single live video that is delivered back to the multiple users and/or to other users.
- the face detection subsystem 120 performs the process of face detection 220 on the video.
- the face detection 220 process detects the existence of any faces in the video. As described above, multiple methods of face detection may be used to determine whether faces exist as well as the temporal positions of these faces in the video. Additionally, the face detection 220 process may also determine the location of faces in the video frame (e.g., via a bounding box around a detected face).
- the face detection 220 process detects a face in a frame of the video using a method that first detects a high contrast or easily detectable portion of a face, e.g., eye regions (where the image may be darker). The method may then determine multiple face candidates based on the features identified in the video frame. These candidate faces may be normalized according to lighting and other factors and compared to a set of standard faces (e.g., “eigen-faces”). This comparison may occur by determining the difference, or distance, in the facial features in the detected face candidates compared to the standard faces.
- a method that first detects a high contrast or easily detectable portion of a face, e.g., eye regions (where the image may be darker). The method may then determine multiple face candidates based on the features identified in the video frame. These candidate faces may be normalized according to lighting and other factors and compared to a set of standard faces (e.g., “eigen-faces”). This comparison may occur by determining the difference, or distance, in the facial features in the detected
- Another method that may be used in the face detection 220 process is to statistically analyze the pixel values and corresponding pixel locations in the video frame (instead of facial features) and compare these to template values (e.g., from a sample set of data) to determine whether a face exists.
- Other methods may also be employed, alone or in combination, such as using a hidden Markov model, linear discriminant analysis, bunch graph matching, and so on.
- the face detection 220 process detects faces based on a cascade of regression trees, which works in part by estimating an initial shape of a face in a video frame, and then iteratively updates the initial shape to match the actual face (if any) in the video frame according to the pixel values in the video frame and the learned weights in the regression trees.
- the face detection 220 process may utilize the fact that a face is likely to appear over more than a single frame in the video, and that it may move, and that the camera may move. For example, the movement of the camera in relation to a face candidate, along with detected landmarks in the video, may allow the face detection 220 process to generate an approximate 3D reconstruction of the face candidate.
- the face detection 220 process detects camera motion by determining that the camera is moving in relation to detected fixed landmarks in the video frame. This allows the face detection 220 process to determine the approximate position of the camera of the video in relation to the face candidate. By knowing the approximate position of a camera, the face detection 220 process can generate a 3D representation of the face candidate (e.g., using stereophotogrammetry).
- This may be compared to standardized 3D face templates to determine a score for the face candidate (e.g., by determining how far the face candidate deviates from the template), and if the score exceeds a threshold, the face detection 220 process determines that the face candidate is a face.
- the face detection 220 process may transform the images of the faces (in the video frame) using various transformation methods, such as affine transformations, based on the detected location of facial features of the detected face, such that the each detected face is presented in a standardized fashion.
- the face detection 220 process may transmit to the face recognition 222 process a transformed image for each video frame in which a face was detected or may transmit a sampling of transformed images.
- the face detection 220 process may perform rudimentary tracking of faces in the video. This allows the face detection 220 process to determine that a detected face has been continuously on screen for a particular duration of time. For example, if the facial features in a frame match within a threshold value in position, orientation, and size with the facial feature in the previous frame, the face detection 220 process may determine that the two faces are the same. For multiple frames where the face detector 122 detects that the same face on-screen, the face detector 122 may only transmit a sample of transformed images for that detected face.
- the face detector 124 may also transmit any 3D generated facial data to the face recognition 222 process, as well as the facial feature data that it generated for each detected face.
- the face detection subsystem 120 performs the process of face recognition 222 on the video to determine which of the faces in the video belong to the same person/speaker.
- the face recognition 222 process receives the transformed images of the detected faces from the face detection 220 process. These transformed images may have faces with facial features in similar locations in the image over all the transformed images. For example, the face, eyes, nose, mouth, and other features of the detected faces in the transformed images may all be in similar locations.
- the face recognition 222 process may also receive any feature extracted by the face detection 220 process from the detected faces, such as the distance between the facial features of the detected faces to a “standard” face.
- the face recognition 222 process may generate features from the received transformed images by detecting the location of facial features in the transformed images, similar to the method described above for the face detection 220 process.
- the face recognition 222 process may also receive 3D data from the face detection 220 process. This information may also be used to determine similarity between detected faces.
- the face recognition 222 process may compare the facial features in the detected faces with a standard face. The difference between a feature in a detected face and the corresponding feature in the standard face may be represented by a distance score. If two detected faces have similar distance scores (within a threshold value), they may be the same face. This distance score is output to the face clustering 224 process.
- the face recognition 222 process uses a VI Viola-Jones object detection framework to recognize faces based on Haar Features.
- the face recognition 222 process learns a mapping from the transformed images of the detected faces to an embedding representation (i.e., a numerical representation of the faces) using triplets of matching and non-matching examples (i.e., two faces in the triplet may be similar, while one is not) where the closeness in Euclidean space represents the similarity between the images.
- the face recognition 222 process embeds each face in a 128-dimensional space, providing a compact representation whereby two faces can be compared directly using Euclidean distance to determine if they correspond to the same identity or not.
- the embedding and Euclidian distance computation may be determined by a trained convolutional neural network (CNN).
- the CNN may be trained using a large training set of images of faces, such as a set of labeled faces from video frames stored in the content system 105 .
- the training set may be arranged such that inputs into the CNN when performing the training include sets of images. Each set may include two images that identify the same face, but one that does not (i.e., the triplet). In this way, the CNN may be trained to distinguish between those similar and dissimilar faces in images.
- the CNN may be trained to filter on many different aspects of the images. Once trained, the CNN is capable of receiving two images of faces from the video and indicate a distance score between these two. The distance score indicates the differences between the faces captured in these two images.
- the face recognition 222 process may compare the faces received from the face detection 220 process to a standard face (e.g., an “eigen-face”) that has been generated from an average or combination of a large number of faces.
- the large number of faces may be extracted from faces in videos stored in the content store 110 .
- one or more faces in the current video may be used as comparison faces for the faces received from the face detection 220 process.
- the process described here uses the FaceNet system developed by Google, Inc.
- the distance score may include multiple components, e.g., a vector of values. Each value may indicate a distance between different features in two faces.
- the face recognition 222 process may generate a distance score for all transformed images that it receives, or it may do so only for transformed images that are indicated to be from different portions of the video separated by at least a minimum time period. For example, the face recognition 222 process may not determine the similarity between two transformed images of two adjacent video frames, but may instead compare these to transformed images in video frames that are separated by at least a minimum time period.
- the face detection subsystem 120 performs the process of face clustering 224 on the video to determine the list of separate faces in the video as well as the temporal positions of the separate faces.
- the face clustering 224 process receives the distance scores from the face recognition 222 process for the transformed images containing detected faces for the video. From these, the face clustering 224 process determines which faces belong to the same speaker or person.
- the face clustering 224 process may determine that a set of transformed images are of the same person as the distance scores for these transformed images are similar or within a threshold value.
- the face clustering 224 process may also perform a statistical analysis on these scores, such as determining the standard deviation of the scores, and determining that the transformed images have faces that are the same person when the statistical analysis results are within a threshold amount.
- the face clustering 224 process uses hierarchical clustering to cluster the distance scores for each detected face together.
- the face clustering 224 process uses single-linkage clustering on the distance scores of each face.
- the face clustering 224 process determines the temporal position that each separate face of each person appears on-screen in the video.
- the face clustering 224 process may determine that when a transformed image of the separate face of a particular person first appears in the video, the temporal position of the video frame from which the transformed image was extracted indicates a start timestamp for the separate face, and when the face is no longer detected, the current temporal position is the stop timestamp for that separate face. Such a period of time where a face is detected is one segment for that face.
- Each separate face of a person in the video may have multiple segments, each with start and stop timestamps, where the separate face appears on-screen in the video.
- the face clustering 224 process generates this information and may store it (e.g., in the content store 110 ).
- the face clustering 224 process may perform a smoothing process.
- the face clustering 224 process may not consider these frames to be a gap and end the current segment for that face at that point. Instead, the face clustering 224 process includes the gap within the current segment for the face. The segment for the face ends when a larger gap greater than threshold value is encountered, where the face for that person is no longer detected.
- the voice detection subsystem 130 passes the audio portion of the video 210 through a sound filter bank 230 .
- the voice detection subsystem 130 may split the audio portion into multiple segments of particular duration, each segment offset from the previous by an interval. These segments are passed through sound filter bank 230 , which extracts features from each segment.
- the sound filter bank 230 may divide the input sound into multiple frequency channels, and include a cascade of multiple filters to filter out different ranges of frequencies, with the output from these various filters being used as the basis for the features.
- the sound filter bank 230 uses a Cascade of Asymmetric Resonators with Fast-Acting Compression (CARFAC) model to extract the features.
- CARFAC Cascade of Asymmetric Resonators with Fast-Acting Compression
- the CARFAC model is based on a pole-zero filter cascade (PZFC) model of auditory filtering, in combination with a multi-time-scale coupled automatic-gain-control (AGC) network. This mimics features of auditory physiology.
- the features may be extracted using another model, such as a spectrogram modified by a mel filter bank.
- Other methods of extracting features such as using the raw spectrograms of the audio segments themselves as features, or mel filters, may also be used.
- the voice detection subsystem 130 uses the features generated by the sound filter bank 230 in a speech detection 232 process to determine whether any of the segments in the audio portion include speech.
- the speech detection 232 process may utilize a machine learning model, such as a deep neural network, a Bayesian network, a support vector machine, or other machine learning model, which accepts as input the values of the features for a segment of the audio and generates a raw score for that segment indicating the likelihood that the segment includes a speech sound.
- This raw score may be scaled from 0 (0% likelihood) to 1 (100% likelihood).
- the classifier model 225 may indicate for a segment of the audio that the raw score (i.e., likelihood) of a speech sound occurring in the segment is 0.6 (60%).
- the machine learning model may be trained using features extracted from a training data set that includes a ground truth of corresponding caption labels indicating where speech occurs in the training data audio.
- the training data may be sourced from videos in the content store 110 that include caption data.
- the speech detection 232 process may further smooth the raw scores over the multiple segments that are generated by the machine learning model.
- the goal of the smoothing process is to create a set of binary scores (“speech” or “no speech”) that do not fluctuate at a high frequency.
- the speech detection 232 process generates an aggregate value for each of a series of consecutive segments in the audio stream based on the raw scores of the segments in each series.
- the aggregate value is computed using an aggregation function, which may be any statistical or mathematical operation that generates a single value from multiple values of a similar type, such as an average.
- the output from this process is a set of binary values indicating the temporal positions in the audio portion of the video where speech occurs, and where speech does not occur. In the output, while small gaps of lower raw scores in the audio may be smoothed away and the binary score for such a gap indicates speech, larger gaps will still indicate segments of no speech.
- the speech detection 232 process After smoothing, the speech detection 232 process outputs the various speech segments for which speech was detected (i.e., where the binary score indicates speech) to the voice feature encoding 234 process.
- the speech detection 232 process also includes speaker turn detection. While in many cases each speech segment corresponds to a different speaker, as there is likely to be a gap between different speakers, in some cases two speakers may speak without any noticeable gap, or with a very small gap in-between the two speakers such that the two speakers' speech is placed in a single speech segment by the speech detection 232 process. To avoid this issue, the speech detection 232 process performs speaker turn detection on the speech segments to determine whether any speech segments include more than one speaker.
- the speech detection 232 process performs speaker turn detection by training a machine learning model.
- the machine learning model receives as input features audio features extracted from sliding windows of data of a specified duration (e.g., one second) over the speech segment that is being analyzed and determines whether a speaker turn has occurred.
- the output labels for training the machine learning model indicate whether a speaker turn occurred at a particular window or set of windows. In one case, a single window is moved over the speech segment, and the machine learning model is trained to determine whether a speaker turn occurs within the window as it is slid over the speech segment.
- two contiguous windows are slid over the speech segment, and the machine learning model is trained to determine if the speaker changes between the two windows (i.e., the left window has one speaker, and the right window has another speaker).
- the windows may be “slid” over the speech segment in specified intervals, e.g., 0.1 seconds.
- the speech segment may be split at the determination point into separate speech segments. A single speech segment may be split more than one time depending on how many speaker turns are detected.
- the voice detection subsystem 130 extracts an embedding from the detected speech segments of the audio portion of the video in the voice feature encoding 234 process.
- the embedding is a numerical representation of the speech segment, and may be a vector of numerical values that is equal in length (dimension) for any speech segment.
- the embedding is generated using a Vector of Locally Aggregated Descriptors (VLAD) technique.
- VLAD Vector of Locally Aggregated Descriptors
- the VLAD technique here uses a Gaussian Mixture Model (GMM) which clusters groups of speech patterns. A set of clusters for a standard speech pattern is compared with a cluster of speech patterns of a speech segment of the video to determine a distance value between the two, which is then transmitted to the voice clustering 236 process.
- GMM Gaussian Mixture Model
- the speech patterns comprise repeatable speech sounds in the language under analysis. For example, if the language is English, then the speech patterns may be 44 different phonemes. Each phoneme may be divided into 3 sub-phones, and this may be generalized into a set of 128 features. A set of these features may be extracted from a standard or average set of English speech sounds the standard speech pattern. The features may be extracted in the same fashion as described above for the sound filter bank 230 process, or may be extracted using a different process, such as via a Mel Frequency Cepstral Coefficients technique (which involves converting the sounds into the frequency domain to derive numeric values). The data set from which the features are extracted for the standard speech pattern may include a large corpus of videos from the content store 110 .
- the features are then modeled using a GMM by the voice feature encoding 234 process.
- the features are clustered, e.g., by using a k-means process, and the GMM may further be trained, e.g., by using expectation-maximization algorithm over multiple iterations (e.g., 30 iterations), to generate the parameters of the GMM.
- the voice feature encoding 234 process For each speech segment, the voice feature encoding 234 process extracts the features from the speech segment in a similar fashion as the generation of the features for the standard speech pattern, but with the audio from the speech segment.
- the voice feature encoding process 234 generates a segment speech pattern for that speech segment.
- the voice feature encoding 234 process also models the segment speech pattern in the GMM.
- a new set of clusters is generated by the voice feature encoding 234 process for the segment speech pattern, and this is compared to the clusters for the standard speech segment.
- the voice feature encoding 234 process determines the difference values (e.g., Euclidian distance) between the clusters of the different speech patterns and these difference values are used as the embedding.
- the voice feature encoding 234 process may generate a residual vector for each cluster, which is used in the difference computation. Note that the number of clusters in the two patterns is the same and so each segment speech pattern will have an embedding with the same number of values.
- the voice feature encoding 234 process uses an i-vector approach, linear discriminant analysis, support vector machines, or any other process capable of deriving an embedding of fixed dimensions from a speech segment.
- the voice detection subsystem 130 takes the embedding generated in the voice feature encoding 234 process and uses the voice clustering 236 process to determine which voices belong to the same speaker.
- the voice clustering 236 process compares each embedding for each speech segment with the other embeddings for the other speech segments in the video.
- a clustering of two embeddings means that the voice clustering 236 process has determined that two embeddings are likely from speech segments belonging to the same speaker.
- the voice clustering 236 process may compare the components in each embedding with the same components in another embedding according to some metric. This metric represents a distance value between the component values of two embeddings, such as an Euclidian distance. For example, with Euclidian distance, the voice clustering 236 process may compute the square root of the sum of the differences for the like components in the two embeddings.
- the voice clustering 236 process may use other metrics as well, such as Manhattan distance, maximum distance, Mahalanobis distance.
- the voice clustering 236 process may cluster the embeddings over multiple iterations in a hierarchical clustering process.
- the voice clustering 236 process may use complete-linkage clustering over the multiple iterations.
- the embeddings are at the beginning treated as a cluster of its own.
- those clusters with the closest distance are clustered together.
- the distance between two clusters is defined by the maximum metric value that can be computed between an embedding in one cluster and an embedding in the other cluster, i.e., the distance between two clusters is the distance between the two most dissimilar embeddings between the two clusters.
- the remaining clusters are further clustered to form new clusters.
- the voice clustering 236 process may in another embodiment determine a distance between the sums of the same component of each embedding in one cluster with the sum of the same component in another cluster.
- the voice clustering 236 process may determine the distance between all like components in this way to compute a total distance.
- the voice clustering 236 process may compute the average of the embeddings in one cluster, and compare this with the average of the embeddings in another cluster.
- Other clustering methods such as single-linkage clustering, mean clustering, centroid linkage clustering, or minimum energy clustering, may be used.
- the voice clustering 236 process may use a different clustering process, such as centroid-based clustering (e.g., k-means), distribution-based clustering (e.g., EM clustering), density-based clustering, graph models, and so on.
- centroid-based clustering e.g., k-means
- distribution-based clustering e.g., EM clustering
- density-based clustering graph models, and so on.
- the voice clustering 236 process stops the clustering process at a threshold level. This threshold level indicates a minimum similarity value. Thus, when the closest distance between two clusters falls below the minimum similarity value, the voice clustering 236 process does not cluster the two clusters together. Thus, after the clustering process is completed, the voice clustering 236 process is left with a set of clusters that all have distances to each other that are below the minimum similarity value. Typically, the minimum similarity value is set to be relatively high, such that the number of separate clusters that ultimately results from the clustering process exceeds the number of separate faces detected in the face clustering 224 process. If the voice clustering 236 process determines that the number of clusters is fewer than the number of separate faces, the voice clustering 236 process may increase the minimum similarity value until the number of clusters is equal to or greater than the number of separate faces.
- the voice clustering 236 process transmits these clusters (or an indication of these clusters) to the voice face correlation 240 process, along with the temporal positions of the speech segments associated with each cluster.
- the voice-face correlation subsystem 140 performs the voice face correlation 240 process on the clustered faces and voices from the face clustering 224 process and the voice clustering 236 process.
- the voice face correlation 240 process receives a list of faces and a list of voices, along with the temporal positions of each face and voice. For example, the temporal position of a face indicates the timestamp positions where the face appears on the screen. Using these lists, the voice clustering 236 process correlates, or associates, different faces with different voices.
- the voice face correlation 240 process may any one of a variety of methods for correlating voices and faces.
- the voice face correlation 240 process counts the number of times each separate face appears during (i.e., is coincident with) the temporal positions (e.g., between the start and stop timestamps) for that speech segment.
- the voice face correlation 240 process correlates the face with the most frequent number of appearances with the voice for that speech segment.
- the voice face correlation 240 process determines, for each voice (not each speech segment), the number of times each separate face appears for the temporal positions for the voice. In other words, the voice face correlation 240 process determines the number of times each separate face has temporal positions coincident with the temporal positions of the separate voice. The voice face correlation 240 process correlates the face with the most frequent number of appearances with the voice.
- the voice associated with the most number of speech segments i.e., having the largest cluster
- those with fewer numbers of segments are processed in descending order.
- the voice face correlation 240 process may feed data back to the face clustering 224 and voice clustering 236 processes when for one voice, two different faces have a similar number (within a threshold) or the same number of occurrences during segments where the voice appears.
- the voice face correlation 240 process may request additional clustering steps from the voice clustering 236 process, after it performs an initial correlation.
- the voice face correlation 240 process may request to determine whether the voice is closer in distance to other voices that are now correlated with the one face or with voices correlated with the other face.
- the voice face correlation 240 process may associate the voice with the face having the voices that are closer in distance to the voice.
- the voice face correlation 240 process may generate a speaker label data 250 based on the computed correlation as described above.
- the speaker label data 250 includes the detected faces and voices along with the temporal positions where each appears at.
- the speaker label data 250 may also include the locations in the frame where faces appear.
- the speaker label data 250 may be stored by the voice face correlation 240 process alongside each corresponding video in the content store 110 .
- the output from the process described above may be verified using a verification data set with pre-prepared outputs associating voices with faces and temporal locations, or using human verifiers on a set of videos.
- the parameters of the system such as the parameters of the neural networks, GMMs, clustering parameters (e.g., threshold values), and so on, may be modified so that the system produces a more accurate result.
- Using such a method overcomes the shortcomings of traditional systems and allows for the derivation of signals to understand various aspects of human interaction, such as the appearance of new characters and the topical shifts that may result (e.g., for use in topic-based segmentation), or the relative voice/screen times of participants for meeting effectiveness, etc.
- overlapping sounds may cause failures in speech detection.
- heuristics processes which may be inaccurate, may be needed to determine when to stop clustering in traditional systems.
- the method described here by utilizing both audio and video data, a much more accurate and complete identification of speakers may be achieved. Additionally, this provides an advantage of being able to identify the locations speakers on-screen (and off-screen), and whether they are off-screen. This is useful during captioning, where a caption can be placed near a speaker, and the caption text can include only the speech made by that speaker and does not include speech from a speaker who speaks before or after. Moreover, the method can generally work for any type of video, and does not need to be customized for a specific type (e.g., speech, interview, etc.)
- Additional applications may include using the location of speakers on screen to assist in the placement of content overlays on the screen (e.g., so that the content does not overlay against the current speaker).
- the process described here may be useful for scene understanding.
- the process here may be employed in a device that may determine which speaker is speaking and perform some action (e.g., point an additional camera at the speaker) upon this detection.
- FIGS. 3-9 Additional details regarding the process described here are shown below in FIGS. 3-9 .
- FIG. 3 illustrates an exemplary illustration of voice detection and processing, according to an embodiment. The process in FIG. 3 may be performed by the voice detection subsystem 130 .
- the voice detection subsystem 130 extracts the audio portion of the video 305 from the video 210 itself.
- the first step is a speech detection 350 operation, where speech is detected 310 at different portions of the audio, and no speech is detected 315 at other portions. This operation may be performed by the sound filter bank 230 process and speech detection 232 process as described above.
- the voice detection subsystem 130 extracts voice features 331 - 336 from each of the segments 321 - 236 for which speech was detected at the voice feature encoding 352 operation. Note that between each segment, there may be a small gap where no speech is detected (although the gap is not shown). This is how the voice detection subsystem 130 may be able to determine the separation between different segments. Note that each segment is assumed to be a different speaker during this phase.
- the voice features 331 - 336 i.e., the embeddings
- the voice detection subsystem 130 clusters the voice features to determine the number of voices in the audio portion in the voice clustering 354 operation. Here, four voices 341 - 346 are determined. Additional details regarding clustering are described below with regards to FIG. 4 .
- FIG. 4 illustrates an exemplary illustration of voice clustering, according to an embodiment. The process in FIG. 4 may be performed by the voice detection subsystem 130 .
- the voice detection subsystem 130 computes the voice features 331 - 336 for the segments 321 - 326 of the audio portion 305 . These are passed through a voice clustering process, such as the voice clustering 236 process described above. At each iteration of the process (represented by the levels 411 - 414 ), pairs of clusters with the shortest distances are combined. Once the distances between two clusters exceeds the minimum similarity threshold, represented by the dotted line 430 , clustering is completed for those clusters. Note that while the minimum similarity threshold 430 is shown as a line in FIG. 3 , it may be the case that different clusters exceed the minimum similarity threshold at different levels of the iteration. Thus, some clusters may not be combined at an iteration, while other clusters are still combined at that same iteration.
- voice features 331 and 332 are combined, voice features 333 and 336 are combined, and voice features 334 and 335 are not combined as their distance exceeds the minimum similarity threshold. Note that if no threshold existed, these two voice features may have been combined. Furthermore, without the minimum similarity threshold, the clustering process would eventually combine all the voice features into a single cluster at level 414 . However, due to the threshold, the voice detection subsystem 130 determines the set 440 of four different voices A, B, C, and D, as shown.
- FIG. 5 illustrates an exemplary illustration of face detection and clustering, according to an embodiment. The process in FIG. 5 may be performed by the face detection subsystem 120 .
- the face detection subsystem 120 extracts the video portion 505 of the video 210 .
- the face detection subsystem 120 determines if faces exist in various temporal locations of the video portion 505 in the face detection operation 552 .
- faces are detected, for example, at 510 and no faces are detected at 515 .
- the face detection subsystem 120 may perform the face detection operation 552 similarly to the face detection 220 process described above.
- the face detection subsystem 120 detects five faces in segments 521 - 525 in the video portion as illustrated in FIG. 5 . Note that these faces may be of the same person. As noted above, the face detection subsystem 120 may perform rudimentary comparison of facial features, or rely on the continuity of a face shown on screen, to determine that within a segment, the displayed face is the same face (and from the same person).
- the face detection subsystem 120 generates face distance values 531 - 535 for the different faces in the face recognition 554 operation. This operation may be performed by the face detection subsystem 120 similarly to the face recognition 222 process. Each set of face distance values 531 for each segment may indicate a distance of that face to a standard face, or to the other detected faces.
- the face detection subsystem 120 clusters the faces based on the face distance values, as described above in the face clustering 224 process. Here, the face distance values are compared against each other, and those with short distances are clustered together. In FIG. 5 , the face detection subsystem 120 determines three separate faces A-C from the clustering process.
- FIG. 6 illustrates an exemplary overlay of the separate voices and faces detected by the voice detection subsystem 130 and the face detection subsystem 120 , according to an embodiment.
- the detected faces do not always correlate with the detected voices in temporal position.
- the temporal positions 658 and 660 for Face C 545 do not specifically correlate to one detected voice, instead overlapping with Voice C 345 and Voice B 346 . This may be due to Face C 545 not speaking during some portion in which Face C 545 appears.
- the content system 105 may identify another speaker, such as Face A 544 , as the speaker. Because the content system 105 can detect faces and associate them with voices, the content system 105 can distinguish between persons that are not speaking with persons that are speaking.
- Voice D 344 appears at temporal position 656 but no face is detected at that point. Assuming no errors in the face detection process, this may indicate an off-screen speaker, i.e., a person that is speaking but who is not being shown in the video. As described below, in such a situation, the content system 105 may be able to indicate that the speaker is off-screen.
- FIG. 7 illustrates an exemplary clustering of voices and faces, according to an embodiment.
- the clustering process described here is performed by the voice-face correlation subsystem 140 in accordance with the voice face correlation 240 process described above.
- the voice-face correlation subsystem 140 determines the voice with the most occurrences in the video. In the illustrated example, this could be Voice A or Voice B. In this case, the voice-face correlation subsystem 140 may randomly select one of the voices or select the one first encountered. In the illustrated example, the voice-face correlation subsystem 140 selects Voice A. For all speech segments where Voice A is detected, the most encountered face is Face A. Thus, the voice-face correlation subsystem 140 correlates Face A with Voice A.
- both Face A and Face B are tied for the number of occurrences. In a real-world scenario, this may be unlikely due to the larger number of faces and instances of faces that may be detected, resulting in few ties. However, if a tie were to occur, the voice-face correlation subsystem 140 may select the face that most corresponds in temporal position to the voice. Alternatively, as described above, voice-face correlation subsystem 140 may perform an initial correlation, and adjust the correlation subsequently based on the distances between the voices that have been associated with faces with each other. Here, referring back to FIG. 6 , Face B corresponds exactly to Voice B between temporal positions 654 and 655 . Thus, the voice-face correlation subsystem 140 may correlate Face B with Voice B.
- the voice-face correlation subsystem 140 correlates Face A, as Face A appears in the segment for Voice D.
- the voice-face correlation subsystem 140 may choose Face C, as the temporal position 658 lines up between the segment for Face C and Voice C.
- the voice-face correlation subsystem 140 does not correlate Voice C with Face A as Face C would not have an associated voice.
- the voice-face correlation subsystem 140 may select the face that has no associated voice.
- the final correlation is Voice A and D to Face A, Voice C to Face C, and Voice B to Face B. Note that four voices were detected but only three faces.
- the voice-face correlation subsystem 140 assumes that the facial detection process is more robust and accurate, and thus there will likely be more voices detected versus faces.
- FIG. 8 illustrates an exemplary captioning based on the automatic speaker detection process described above, according to an embodiment.
- the captioning process described here is performed by the caption subsystem 160 .
- Frame 810 illustrates an example of a single speaker.
- the caption subsystem 160 may in some cases bound the speaker with a bounding box based on the location of the speaker as generated by the face detection subsystem 120 as described above. Furthermore, the caption subsystem 160 may add the captions for the speaker temporally adjacent to the speaker (e.g., vertically above or below the speaker's detected face).
- the caption subsystem 160 may also include a “speaker” label or other label in the bounding box to indicate that the person is speaking. Alternatively, or in conjunction, the caption subsystem 160 may also indicate somewhere else in the frame that speech is detected.
- Frame 820 illustrates a scenario with two faces, but a single speaker.
- the caption subsystem 160 may include bounding boxes around both faces, and indicate in the bounding box having the speaker a label (e.g., “speaker”) indicating that the person is speaking.
- the caption subsystem 160 may also provide the captions for the speaker adjacent to that speaker.
- Frame 840 illustrates a change in speaker from the person on the left to the person on the right.
- the caption subsystem 160 changes the speaker label to the person on the right, and also move the caption window to be adjacent to the person on the left.
- the caption subsystem 160 creates a new caption box that is discontinuous with the previous caption box for the previous speaker.
- Frame 840 illustrates an example of an off-screen speaker.
- the caption subsystem 160 shows a bounding box around the face of the person appearing on screen, but since the voice and face clustering information received from the voice-face correlation subsystem 140 indicates that this face is not correlated with the current voice, the caption subsystem 160 instead indicates that the speaker is off screen, possibly with the use of the “off-screen speaker” label, or with the user of “[off-screen]” in the provided caption box.
- caption subsystem 160 may not in all instances indicate a bounding box or “speaker” label for faces. Instead, the caption subsystem 160 may only provide the captions at the appropriate locations in the frame as shown here.
- FIG. 9 is a data flow diagram illustrating the actions of the content system 105 for speaker diarization using face and voice data, according to an embodiment. In one embodiment, the operations in the flow diagram are attributed to the content system 105 .
- the content system 105 determines 905 temporal positions and locations of separate faces in a video using face detection and clustering. As described above, this process may be performed by the face detection subsystem 120 .
- the content system 105 extracts 910 voice features from speech segments of the video.
- the content system 105 also determines 915 temporal positions of separate voices in the video using clusters of voice features having a threshold similarity. As noted, this may be performed by the voice detection subsystem 130 .
- the content system 105 generates 920 a correlation between the determined separate faces and separate voices based at least on the temporal positions of the separate faces and the separate voices in the video. This may be performed by the voice-face correlation subsystem.
- the content system 105 stores 925 the correlation in the content store for the video.
- the content system 105 may also generate 930 speaker label data for the video based on the generated correlation, the speaker label data indicating a temporal position and location of unique speakers in the video.
- process steps and instructions are embodied in software, firmware or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
Abstract
Description
- This application claims the benefit of U.S. Provisional Application No. 62/435,710, filed Dec. 16, 2016.
- The disclosed embodiments relate generally to computer-implemented methods for speaker diarization, and more specifically, to automatic speaker diarization and face identification in videos using video and audio input data.
- In modern content systems, a very large number (e.g., millions) of videos may be uploaded and distributed by and to users of the content system every day. Many of these videos may be associated with captions, which may be created by the uploading user or other individuals. These captions are used in order to present a video to a user who is unable to hear or play the audio accompanying the video. However, many more videos uploaded to the content system may not be accompanied with captions. For these videos, the content system may attempt to generate captions automatically using various automated captioning systems. However, a video may typically have more than one speaker, with the multiple speakers speaking in different orders and for different durations. This type of scenario may be especially challenging for a traditional captioning system. For example, when two speakers in the video speak in close succession to each other, the captioning system may recognize this duration of speech in the video as a single caption, and combine the recognized speech from both speakers in a single caption, implying a single speaker. Such a caption does not accurately reflect the speech in the video, and thus reduces the accuracy of the captioning system, resulting in a poorer user experience. Hence, a more robust and accurate system is desirable.
- In one embodiment, a computer-implemented method for speech diarization is described. The method comprises determining temporal positions of separate faces in a video using face detection and clustering. Voice features are extracted from the speech sections of the video. The method further includes determining temporal positions of separate voices in the video using clusters of voice features having a threshold similarity. A correlation is generated between the determined separate faces and separate voices based at least on the temporal positions of the separate faces and the separate voices in the video. This correlation is stored in a content store with the video and speaker label data for the video is generated based on the correlation, with the speaker label data indicating a temporal position of unique speakers in the video
- The features and advantages described in this summary and the following detailed description are not all-inclusive. Many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims hereof.
-
FIG. 1 is a high-level block diagram of an environment for automatic speaker diarization and face identification, according to an embodiment. -
FIG. 2 is a high-level diagram of an exemplary process for voice-face correlation, according to one embodiment. -
FIG. 3 illustrates an exemplary illustration of voice detection and processing, according to an embodiment. -
FIG. 4 illustrates an exemplary illustration of voice clustering, according to an embodiment. -
FIG. 5 illustrates an exemplary illustration of face detection and clustering, according to an embodiment. -
FIG. 6 illustrates an exemplary overlay of the separate voices and faces detected by the voice detection subsystem and the face detection subsystem, according to an embodiment. -
FIG. 7 illustrates an exemplary clustering of voices and faces, according to an embodiment. -
FIG. 8 illustrates an exemplary captioning based on the automatic speaker detection, according to an embodiment. -
FIG. 9 is a data flow diagram illustrating the actions of thecontent system 105 for speaker diarization using face and voice data, according to an embodiment. - The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.
- The content system described herein provides the advantage of automatically associating the speakers in a video with the speech for each respective speaker. Furthermore, the content system described herein is able to identify the location of speakers in the video, whether the speaker is on-screen or off-screen. The content system detects speech sounds in the audio track of the video, and clusters these speech sounds by individual distinct voice. The content system further identifies faces in the video, and clusters these faces by individual distinct faces. The content system correlates the identified voices and faces to match each voice to each face. By correlating voices with faces, the content system is able to provide captions that accurately represent on-screen and off-screen speakers. For example, if two speakers in a video are having a conversation, the content system is able to identify each speaker's speech and provide separate captions that accurately identify each speaker, rather than having a single caption that combines the speech from both speakers into a single caption. Such a system may also be useful for automated camera selection in a multi camera setup, such as when filming multiple speakers, or in a video conference. The system may also be useful in crowd-sourced captioning/translation of speech in videos, as users who provide captions will not need to manually time the caption start and stop positions, and will not need to indicate which speaker is speaking, as the system will automatically determine these factors. Other applications where such a system may provide an advantage may include, but are not limited to, cinematography, a conversation analyzer (e.g., to determine how natural a conversation is), and so on.
-
FIG. 1 is a high-level block diagram of anenvironment 100 for automatic speaker diarization and face identification, according to an embodiment.FIG. 1 illustrates acontent system 105 with acontent store 110, acontent subsystem 150, acaption subsystem 160, aface detection subsystem 120, avoice detection subsystem 130, and a voice-face correlation subsystem 140. Thecontent system 105 is connected to anetwork 190, which is also connected to client devices 170. While certain elements are shown inFIG. 1 , in other embodiments the environment may have different elements. Furthermore, the functionalities between elements may be distributed in a different manner in other embodiments, to different or multiple modules. - The client device 170 is a computing device that may access content from the
content system 105. A user of the client device 170 can access a video from thecontent system 105 by using the client device 170 to browse a catalog of content, conduct searches using keywords, review play lists from other users or the system administrator (e.g., collections of content forming channels), or view content associated with particular user groups (e.g., communities). Additionally, in some embodiments, the client device 170 may also be used to upload content to thecontent system 105. The client device 170 may be a desktop, laptop, smart phone, tablet, wearable device, television, set top box, and the like. AlthoughFIG. 1 illustrates only a single client device 170, it should be understood that many client devices 170 (e.g., millions) can communicate with thecontent system 105 at any time. - In one embodiment, the client device 170 accesses content from the
content system 105 and presents the content to the user via acontent presenter 175. In one embodiment, thecontent presenter 175 is accessed through a web browser includes a video player (e.g., an HTML5-compliant player). Furthermore, thecontent presenter 175 may be able to present to the user the content concurrently with captions received from the content system 105 (e.g., via the content subsystem 160). These captions may be for speech and/or non-speech sounds in the content. Thecontent presenter 175 may be a web browser that allows the user to view web pages and content provided by thecontent subsystem 150. - In one embodiment, the client device 170 may upload content items to the content system 105 (e.g., via the content presenter 175). Furthermore, a user using the client device 170 may be able to contribute caption data to content items that have already been uploaded to the
content system 105. This may be facilitated using a user interface provided by thecontent presenter 175. For example, thecontent system 105 may provide timings for captions for a video, and thecontent presenter 175 presents a user interface with a caption entry field for each timing provided by thecontent system 105. - The
network 190 represents the communication pathways between the client device 170 and thecontent system 105. In one embodiment, thenetwork 190 is the Internet, but may also be any network, including but not limited to a LAN, a MAN, a WAN, a mobile, wired or wireless network, a cloud computing network, a private network, or a virtual private network, and any combination thereof. In addition, all or some of links of thenetwork 190 can be encrypted using conventional encryption technologies such as the secure sockets layer (SSL), Secure HTTP and/or virtual private networks (VPNs). In another embodiment, the entities can use custom and/or dedicated data communications technologies instead of, or in addition to, the ones described above. - The
content system 105 provides content items to users of the client devices 170 and also receives content uploaded from the client devices 170. Thecontent system 105 includes acontent store 110, acontent subsystem 150, aface detection subsystem 120, avoice detection subsystem 130, a voice-face correlation subsystem 140, and acaption subsystem 160. Thecontent system 105 may also include additional elements, subsystems, and servers, such as a load balancing sub-system, a content distribution network, and so on. These and other additional elements are excluded from the illustration inFIG. 1 in order to improve the ease of understanding. In addition, the functionality of each of the illustrated subsystems, and components within each subsystem, may be divided amongst more than one hardware device. For example, the functionality of thecontent subsystem 150 as described herein may be split across multiple individual servers. - The
content store 110 of thecontent system 105 storescontent items 115. Thecontent items 115 may include video and/or audio content items of various durations, resolutions, and so on. For example, acontent item 115 may include a 4K video file, a 360-degree video file, a saved copy of a live video stream, or a stereoscopic video file. Each content item may include an audio portion. Thecontent store 110 may also store associated metadata for thecontent items 115, such as speech captions associated with thecontent items 115. Eachcontent item 115 that is stored in thecontent store 110 may also be stored with and associated with metadata, such as a title, description, responsive comments, ratings, and so on. - The speech captions include transcribed text of the speech sounds in a number of
content items 115 in thecontent store 110. Speech sounds may include any type of audio that may be intelligible as language. This may include spoken dialogue, rhythmic spoken words, sung words, and so on. The timing window includes a start timestamp and an end timestamp, and the text includes a transcription of the speech sound present in a content item between the start timestamp and end timestamp. - The
content subsystem 150 provides access to, viewing and listening of, and allows the uploading of the content items 115 (process not shown). Thecontent subsystem 150 allows users to access thecontent items 115 in thecontent store 110 via searching and/or browsing interfaces. Thecontent items 115 can be sourced from user uploads of content, from searches or crawls of other websites or databases of content, or the like, or any combination thereof. For example, in one embodiment thecontent subsystem 150 can be configured to allow for user uploads of content. Thecontent subsystem 150 stores these uploaded content items in thecontent store 110. As another example, thecontent subsystem 150 may retrieve content from other content databases over thenetwork 190. - The
content subsystem 150 processes search queries received from a user. A search query may include search criteria, such as keywords that may identify videos the user is interested in viewing. The search criteria may also specify various filtering and sorting criteria. Thecontent subsystem 150 may use the search criteria, for example, to query the metadata of and/or entities associated with all thecontent items 115 stored in thecontent store 110. The search results from the query are transmitted by thecontent subsystem 150 to the client device 170. - The
content subsystem 150 may receive content from client devices 170 (process not shown). The processing of the received content may include assigning an identification number to the newly received content. Other steps of processing the received content may include formatting (e.g., transcoding), compressing, metadata tagging, content analysis, and/or other data processing methods. - The
content subsystem 150 may receive, in addition to the content, accompanying caption data. The caption data may indicate the start and end times of captions corresponding to speech (and non-speech sounds) in the content. The content may also be associated with other information, such as title, description, content type, author, ratings, and so on. Thecontent subsystem 150 stores the content (and any associated metadata) in thecontent store 110. - The
content subsystem 150 may serve content in a similar fashion to YouTube™; other video hosting websites are known as well, and can be adapted to operate according to the teaching disclosed herein. - The
face detection subsystem 120 detects separate faces in a video and may also indicate the temporal position of these faces in the video. Theface detection subsystem 120 may also indicate the location of the faces in the video frame when the face appears in the video frame. Theface detection subsystem 120, in one embodiment, includes aface detector 122 and a face clusterer 124. Although particular components are described here, in other embodiments the functionality of theface detection subsystem 120 is distributed among different components. For example, the components described here for theface detection subsystem 120 may be performed in a single module. - The
face detector 122 detects faces in the video and indicates the temporal positions of the detected faces. Theface detector 122 may use multiple different methods of face detection to detect faces in the video, or may use a single method. If multiple methods are used, theface detector 122 may detect a face in a portion of the video where a threshold number or majority of the methods indicate a detected face. In one embodiment, theface detector 122 uses a method to detected the existence of faces for each video frame of the video. Theface detector 122 may initially detect face candidates in the frame, which are potential element in the video that may be a face. Theface detector 122 may give each face candidate a fitness score, and those face candidates with a fitness score above a certain threshold may be detected by theface detector 122 to be a face. Theface detector 122 may also determine the location of the detected face in the video frame. - The
face detector 122 may also perform other operations, such as transforming the video frames with the detected faces in order to align and crop the frames so that the output image with the face is made to look similar to all other outputs (e.g., facial features appear in similar positions in all output images). These outputs may be fed into a face clustering process, such as face clusterer 124, to cluster the detected faces. - The face clusterer 124 performs face clustering, i.e., groups detected faces together that are determined to belong to the same speaker. The face clusterer 124 receives detected faces from the
face detector 122, and determines which of these faces belong to the same speaker, i.e., the face clusterer 124 clusters the detected faces. - In general, the face clusterer 124 determines facial features shared by the different detected faces in order to determine whether any of the faces belong to the same speaker. For example, the face clusterer 124 may measure the distance between various facial features, such as the eyes in two transformed images, to determine the similarity of two detected faces. The face clusterer 124 may perform various image transformation techniques, such as edge detection, convolution with a filter, and so on, in order to manipulate the transformed images and compare the values in the results to see if a threshold value or multiple threshold values are met, indicating a that the two detected faces are likely of the same speaker. The face clusterer 124 may also utilize a trained model, such as a convolutional neural network, to determine similarity between detected faces.
- After determining which images have faces that are similar, the face clusterer 124 is able to indicate the segments of the video in which similar faces appear. The segments may be indicated by the face clusterer 124 using temporal positions, e.g., start and stop timestamps of the segments. For example, if a face A appears in the first 5 minutes of a video, and later appears again for 3 minutes after a 10 minute gap, then the temporal positions for face A in the video may correspond to 0:00-5:00 and 15:00-18:00.
- The face clusterer 124 may store these temporal positions for each separate detected face in a video in the
content store 110 and associate this information with thevideo content item 115 in thecontent store 110 as metadata for the video. - Additional details regarding the
face detection subsystem 120 are described below with reference toFIGS. 2-9 . - The
voice detection subsystem 130 detects separate voices (i.e., those voices that belong to separate speakers/persons) in a video and indicates the temporal positions of these voices in the video. Thevoice detection subsystem 130, in one embodiment, includes aspeech detector 132 and avoice clusterer 134. Although particular components are described here, in other embodiments the functionality of thevoice detection subsystem 130 is distributed among different components. For example, the components described here for theface detection subsystem 130 may be performed in a single module. - The
speech detector 132 detects speech in the audio portion of a video. Thespeech detector 132 generates raw scores indicating a probability that a segment of audio for a video includes a speech sound, i.e., any sound that may resemble human speech. To generate these raw scores, thespeech detector 132 splits or divides the audio portion into multiple segments and analyzes each segment using a trained model or classifier to determine the likelihood value indicating whether the segment of the audio exhibits speech sounds. The model may be trained using features extracted from a corpus of data comprised of existing caption labels for speech sounds in audio streams. - The
speech detector 132 generates a binary score from the raw scores by smoothing the raw scores. To do this, thespeech detector 132 aggregates a series of raw scores over consecutive segments of the audio portion to generate an aggregate value. For example, the score smoother 120 may aggregate the raw scores from segments of the audio totaling 1000 ms of time. The aggregation may be a mathematical or statistical operation such as an average or median. If the aggregate value exceeds a threshold, then the binary score for that series of consecutive segments may be set to 1 (i.e., on or high, indicating the presence of speech). Otherwise the binary score for that series of consecutive segments may be set to 0 (i.e., off or low, indicating the absence of speech). - After determining these binary scores, the
speech detector 132 determines timestamps for those segments of the audio that include speech (e.g., a binary score of 1). Thespeech detector 132 may store these along with thevideo content item 115 in thecontent store 110. Thespeech detector 132 may also transmit the timestamps, along with the features extracted from the audio segments as well using the trained model to thevoice clusterer 134. - The
voice clusterer 134 performs voice clustering, i.e., groups detected voices together that are determined to belong to the same speaker. Similarly to the face clusterer 124, thevoice clusterer 134 determines which segments of speech in the audio for a video belong to the same speaker. Thevoice clusterer 134 receives the feature vectors for the detected speech segments from thespeech detector 132, and iterates through the feature vectors to combine those that are similar beyond a threshold value. At each iteration, thevoice clusterer 134 analyzes the similarity of the voice features for the remaining segments of voices, and combines those that are within a threshold level of similarity. After a specified number of iterations, thevoice clusterer 134 arrives at a set of candidate voices (i.e., voice clusters) that are most likely to be unique and from separate speakers, although in some cases the voice clusterer may overestimate and determine that there are more candidate voices than actual voices in the video, as described in further detail below. - In one embodiment, the
voice clusterer 134 may use VLAD, or Vector of Locally Aggregated Descriptors, to determine the similarity between two voice segments using the features extracted from these segments of audio. - The separate voices determined by the
voice clusterer 134 may be stored in thecontent store 110 for avideo content item 115. - Additional details regarding the
face detection subsystem 120 are described below with reference toFIGS. 2-9 . - The voice-
face correlation subsystem 140 determines a correlation between the separate faces determined by theface detection subsystem 120 and the voices detected by thedetection subsystem 130. In other words, the voice-face correlation subsystem 140 determines which voices belong to which faces. - In one embodiment, the voice-
face correlation subsystem 140 analyzes for each speech segment in the video, the number of times each separate face (as determined by the face detection subsystem 120) appears during the segment. The voice-face correlation subsystem 140 selects the face that appears most frequently during the speech segment as the face to be associated with the voice in that speech segment (and all other speech segments with that voice). In another embodiment, the voice-face correlation subsystem 140 determines for each separate voice the number of times each separate face appears in the video when the voice is detected. The face that appears most often is determined by the voice-face correlation subsystem 140 to be the face associated with voice. - In some cases, there may be more detected voices than faces. Due to the inaccuracy in the
voice detection subsystem 130, thevoice detection subsystem 130 may be configured with a threshold that likely identifies a higher number of candidate voices in the video than the number of faces in the video. In such a case, more than one voice may be associated with a single face. As theface detection subsystem 120 may be more accurate, a more accurate result may be achieved by correlating multiple voices with a few number of faces. - The voice-
face correlation subsystem 140 may store this association in thecontent store 110 for each video. Thus, after computing the voice-face correlation for a video, thecontent store 110 may store the temporal positions of voices, faces, the positions of detected faces, as well as the correlation between faces and voices in the video. - The
caption subsystem 150 provides captions to client devices 170 for presentation with associatedcontent items 115, and may also provide an interface for users to provide captions forcontent items 115 that may not have captions associated with them. - When a client device 170 requests, and is presented with a
content item 115, if that client device 170 also requests captions for thecontent item 115, thecaption subsystem 150 may provide the captions for thecontent item 115 to the client device 170 for presentation alongside thecontent item 115. Thecaption subsystem 150 may select the captions associated with thecontent item 115 and transmit these captions to the client device 170 with instructions to present the captions at certain times during the playback of thecontent item 115 such that the captions are presented according to timing information. For example, the instructions may cause the client device 170 to present the text for a caption entry during playback between the start timestamp and the end timestamp of the timing window associated with a caption entry. In addition, the instructions may also instruct the client device 170 on how to visually format the text for presentation (e.g., font style, font type, font size, text position on screen, etc.). In one embodiment, in addition tospeech captions 140, thecaption subsystem 150 also retrieves a set of non-speech captions describing non-speech sounds in the content item (e.g., laughter) and transmits these non-speech captions to the client device 170 along with instructions on how to present them. - The
caption subsystem 150 receives user-generated entries for captions from client devices 170 forcontent items 115 that do not have caption information or have incomplete or inaccurate caption information (e.g., automatic captioning using speech recognition may not produce accurate results). The users of the client devices 170 can transcribe the speech sounds (e.g., spoken dialogue) in thecontent items 115 into text and submit this transcribed text to thecaption subsystem 150, which may store them as part of caption entries. - In one embodiment, the
caption subsystem 150 provides captions based upon the speakers identified by theface detection subsystem 120, thevoice detection subsystem 130, and the voice-face correlation subsystem 140, as described below. Additional details regarding this process are described below with reference toFIG. 8 -
FIG. 2 is a high-level diagram of an exemplary process for voice-face correlation, according to one embodiment. In one embodiment, the process described here is performed by thecontent system 105 described above. For example, the processes 220-224 are performed by theface detection subsystem 120, the processes 230-236 are performed by thevoice detection subsystem 130, and theprocess 240 is performed by the voice-face correlation subsystem 140. Although particular components are described here, in other embodiments the functionality of theface detection subsystem 120 is distributed among different components. For example, the components described here for theface detection subsystem 120 may be performed in a single module. - The example process described here begins with a
video 210. Thevideo 210 may be stored in thecontent store 110, may be uploaded by users, and may be associated with various metadata, such as captions. Many videos, such as thevideo 210, include spoken audio in the audio portion of the video, which may be from multiple speakers. For example, a video may be of an interview between a talk show host and a guest. Thevideo 210 may also be a live stream that is delivered substantially in real time from a host (e.g., a client device 170) to thecontent system 105 and presented by the content system substantially in real time to different client devices 170. Thevideo 210 may be a combination of multiple live streams, such as in a video conference, where multiple users capture live video which is combined, e.g., by thecontent system 105, into a single live video that is delivered back to the multiple users and/or to other users. - The
face detection subsystem 120 performs the process offace detection 220 on the video. Theface detection 220 process detects the existence of any faces in the video. As described above, multiple methods of face detection may be used to determine whether faces exist as well as the temporal positions of these faces in the video. Additionally, theface detection 220 process may also determine the location of faces in the video frame (e.g., via a bounding box around a detected face). - In one embodiment, the
face detection 220 process detects a face in a frame of the video using a method that first detects a high contrast or easily detectable portion of a face, e.g., eye regions (where the image may be darker). The method may then determine multiple face candidates based on the features identified in the video frame. These candidate faces may be normalized according to lighting and other factors and compared to a set of standard faces (e.g., “eigen-faces”). This comparison may occur by determining the difference, or distance, in the facial features in the detected face candidates compared to the standard faces. - Another method that may be used in the
face detection 220 process is to statistically analyze the pixel values and corresponding pixel locations in the video frame (instead of facial features) and compare these to template values (e.g., from a sample set of data) to determine whether a face exists. Other methods may also be employed, alone or in combination, such as using a hidden Markov model, linear discriminant analysis, bunch graph matching, and so on. - In one embodiment, the
face detection 220 process detects faces based on a cascade of regression trees, which works in part by estimating an initial shape of a face in a video frame, and then iteratively updates the initial shape to match the actual face (if any) in the video frame according to the pixel values in the video frame and the learned weights in the regression trees. - The
face detection 220 process may utilize the fact that a face is likely to appear over more than a single frame in the video, and that it may move, and that the camera may move. For example, the movement of the camera in relation to a face candidate, along with detected landmarks in the video, may allow theface detection 220 process to generate an approximate 3D reconstruction of the face candidate. In more detail, theface detection 220 process detects camera motion by determining that the camera is moving in relation to detected fixed landmarks in the video frame. This allows theface detection 220 process to determine the approximate position of the camera of the video in relation to the face candidate. By knowing the approximate position of a camera, theface detection 220 process can generate a 3D representation of the face candidate (e.g., using stereophotogrammetry). This may be compared to standardized 3D face templates to determine a score for the face candidate (e.g., by determining how far the face candidate deviates from the template), and if the score exceeds a threshold, theface detection 220 process determines that the face candidate is a face. - After detecting the faces in the video, the
face detection 220 process may transform the images of the faces (in the video frame) using various transformation methods, such as affine transformations, based on the detected location of facial features of the detected face, such that the each detected face is presented in a standardized fashion. - The
face detection 220 process may transmit to theface recognition 222 process a transformed image for each video frame in which a face was detected or may transmit a sampling of transformed images. Theface detection 220 process may perform rudimentary tracking of faces in the video. This allows theface detection 220 process to determine that a detected face has been continuously on screen for a particular duration of time. For example, if the facial features in a frame match within a threshold value in position, orientation, and size with the facial feature in the previous frame, theface detection 220 process may determine that the two faces are the same. For multiple frames where theface detector 122 detects that the same face on-screen, theface detector 122 may only transmit a sample of transformed images for that detected face. The face detector 124 may also transmit any 3D generated facial data to theface recognition 222 process, as well as the facial feature data that it generated for each detected face. - The
face detection subsystem 120 performs the process offace recognition 222 on the video to determine which of the faces in the video belong to the same person/speaker. Theface recognition 222 process receives the transformed images of the detected faces from theface detection 220 process. These transformed images may have faces with facial features in similar locations in the image over all the transformed images. For example, the face, eyes, nose, mouth, and other features of the detected faces in the transformed images may all be in similar locations. - The
face recognition 222 process may also receive any feature extracted by theface detection 220 process from the detected faces, such as the distance between the facial features of the detected faces to a “standard” face. Alternatively, theface recognition 222 process may generate features from the received transformed images by detecting the location of facial features in the transformed images, similar to the method described above for theface detection 220 process. - Additionally, the
face recognition 222 process may also receive 3D data from theface detection 220 process. This information may also be used to determine similarity between detected faces. - To determine whether detected faces are similar, the
face recognition 222 process may compare the facial features in the detected faces with a standard face. The difference between a feature in a detected face and the corresponding feature in the standard face may be represented by a distance score. If two detected faces have similar distance scores (within a threshold value), they may be the same face. This distance score is output to the face clustering 224 process. - In one embodiment, the
face recognition 222 process uses a VI Viola-Jones object detection framework to recognize faces based on Haar Features. - In one embodiment, the
face recognition 222 process learns a mapping from the transformed images of the detected faces to an embedding representation (i.e., a numerical representation of the faces) using triplets of matching and non-matching examples (i.e., two faces in the triplet may be similar, while one is not) where the closeness in Euclidean space represents the similarity between the images. Theface recognition 222 process embeds each face in a 128-dimensional space, providing a compact representation whereby two faces can be compared directly using Euclidean distance to determine if they correspond to the same identity or not. The embedding and Euclidian distance computation may be determined by a trained convolutional neural network (CNN). - The CNN may be trained using a large training set of images of faces, such as a set of labeled faces from video frames stored in the
content system 105. The training set may be arranged such that inputs into the CNN when performing the training include sets of images. Each set may include two images that identify the same face, but one that does not (i.e., the triplet). In this way, the CNN may be trained to distinguish between those similar and dissimilar faces in images. The CNN may be trained to filter on many different aspects of the images. Once trained, the CNN is capable of receiving two images of faces from the video and indicate a distance score between these two. The distance score indicates the differences between the faces captured in these two images. Theface recognition 222 process may compare the faces received from theface detection 220 process to a standard face (e.g., an “eigen-face”) that has been generated from an average or combination of a large number of faces. The large number of faces may be extracted from faces in videos stored in thecontent store 110. Alternatively, one or more faces in the current video may be used as comparison faces for the faces received from theface detection 220 process. In one embodiment, the process described here uses the FaceNet system developed by Google, Inc. Note that the distance score may include multiple components, e.g., a vector of values. Each value may indicate a distance between different features in two faces. - The
face recognition 222 process may generate a distance score for all transformed images that it receives, or it may do so only for transformed images that are indicated to be from different portions of the video separated by at least a minimum time period. For example, theface recognition 222 process may not determine the similarity between two transformed images of two adjacent video frames, but may instead compare these to transformed images in video frames that are separated by at least a minimum time period. - The
face detection subsystem 120 performs the process of face clustering 224 on the video to determine the list of separate faces in the video as well as the temporal positions of the separate faces. The face clustering 224 process receives the distance scores from theface recognition 222 process for the transformed images containing detected faces for the video. From these, the face clustering 224 process determines which faces belong to the same speaker or person. - The face clustering 224 process may determine that a set of transformed images are of the same person as the distance scores for these transformed images are similar or within a threshold value. The face clustering 224 process may also perform a statistical analysis on these scores, such as determining the standard deviation of the scores, and determining that the transformed images have faces that are the same person when the statistical analysis results are within a threshold amount.
- In one embodiment, the face clustering 224 process uses hierarchical clustering to cluster the distance scores for each detected face together. In particular, the face clustering 224 process uses single-linkage clustering on the distance scores of each face.
- After determining which transformed images have detected faces of the same person, the face clustering 224 process determines the temporal position that each separate face of each person appears on-screen in the video. The face clustering 224 process may determine that when a transformed image of the separate face of a particular person first appears in the video, the temporal position of the video frame from which the transformed image was extracted indicates a start timestamp for the separate face, and when the face is no longer detected, the current temporal position is the stop timestamp for that separate face. Such a period of time where a face is detected is one segment for that face. Each separate face of a person in the video may have multiple segments, each with start and stop timestamps, where the separate face appears on-screen in the video. The face clustering 224 process generates this information and may store it (e.g., in the content store 110).
- In one embodiment the face clustering 224 process may perform a smoothing process. When face of a person is not detected for a small number of video frames below a maximum, the face clustering 224 process may not consider these frames to be a gap and end the current segment for that face at that point. Instead, the face clustering 224 process includes the gap within the current segment for the face. The segment for the face ends when a larger gap greater than threshold value is encountered, where the face for that person is no longer detected.
- In a process that may run in parallel to the face clustering process, the
voice detection subsystem 130 passes the audio portion of thevideo 210 through asound filter bank 230. Thevoice detection subsystem 130 may split the audio portion into multiple segments of particular duration, each segment offset from the previous by an interval. These segments are passed throughsound filter bank 230, which extracts features from each segment. Thesound filter bank 230 may divide the input sound into multiple frequency channels, and include a cascade of multiple filters to filter out different ranges of frequencies, with the output from these various filters being used as the basis for the features. - In one embodiment, the
sound filter bank 230 uses a Cascade of Asymmetric Resonators with Fast-Acting Compression (CARFAC) model to extract the features. The CARFAC model is based on a pole-zero filter cascade (PZFC) model of auditory filtering, in combination with a multi-time-scale coupled automatic-gain-control (AGC) network. This mimics features of auditory physiology. In other embodiments, the features may be extracted using another model, such as a spectrogram modified by a mel filter bank. Other methods of extracting features, such as using the raw spectrograms of the audio segments themselves as features, or mel filters, may also be used. - The
voice detection subsystem 130 uses the features generated by thesound filter bank 230 in aspeech detection 232 process to determine whether any of the segments in the audio portion include speech. - The
speech detection 232 process may utilize a machine learning model, such as a deep neural network, a Bayesian network, a support vector machine, or other machine learning model, which accepts as input the values of the features for a segment of the audio and generates a raw score for that segment indicating the likelihood that the segment includes a speech sound. This raw score may be scaled from 0 (0% likelihood) to 1 (100% likelihood). For example, the classifier model 225 may indicate for a segment of the audio that the raw score (i.e., likelihood) of a speech sound occurring in the segment is 0.6 (60%). - The machine learning model may be trained using features extracted from a training data set that includes a ground truth of corresponding caption labels indicating where speech occurs in the training data audio. The training data may be sourced from videos in the
content store 110 that include caption data. - The
speech detection 232 process may further smooth the raw scores over the multiple segments that are generated by the machine learning model. The goal of the smoothing process is to create a set of binary scores (“speech” or “no speech”) that do not fluctuate at a high frequency. To generate the binary scores, thespeech detection 232 process generates an aggregate value for each of a series of consecutive segments in the audio stream based on the raw scores of the segments in each series. The aggregate value is computed using an aggregation function, which may be any statistical or mathematical operation that generates a single value from multiple values of a similar type, such as an average. The output from this process is a set of binary values indicating the temporal positions in the audio portion of the video where speech occurs, and where speech does not occur. In the output, while small gaps of lower raw scores in the audio may be smoothed away and the binary score for such a gap indicates speech, larger gaps will still indicate segments of no speech. - After smoothing, the
speech detection 232 process outputs the various speech segments for which speech was detected (i.e., where the binary score indicates speech) to thevoice feature encoding 234 process. - In one embodiment, the
speech detection 232 process also includes speaker turn detection. While in many cases each speech segment corresponds to a different speaker, as there is likely to be a gap between different speakers, in some cases two speakers may speak without any noticeable gap, or with a very small gap in-between the two speakers such that the two speakers' speech is placed in a single speech segment by thespeech detection 232 process. To avoid this issue, thespeech detection 232 process performs speaker turn detection on the speech segments to determine whether any speech segments include more than one speaker. - In one embodiment, the
speech detection 232 process performs speaker turn detection by training a machine learning model. The machine learning model receives as input features audio features extracted from sliding windows of data of a specified duration (e.g., one second) over the speech segment that is being analyzed and determines whether a speaker turn has occurred. The output labels for training the machine learning model indicate whether a speaker turn occurred at a particular window or set of windows. In one case, a single window is moved over the speech segment, and the machine learning model is trained to determine whether a speaker turn occurs within the window as it is slid over the speech segment. In another case, two contiguous windows are slid over the speech segment, and the machine learning model is trained to determine if the speaker changes between the two windows (i.e., the left window has one speaker, and the right window has another speaker). The windows may be “slid” over the speech segment in specified intervals, e.g., 0.1 seconds. After determining that a speaker turn has occurred or has likely occurred (e.g., with a determination above a threshold amount), the speech segment may be split at the determination point into separate speech segments. A single speech segment may be split more than one time depending on how many speaker turns are detected. - The
voice detection subsystem 130 extracts an embedding from the detected speech segments of the audio portion of the video in thevoice feature encoding 234 process. The embedding is a numerical representation of the speech segment, and may be a vector of numerical values that is equal in length (dimension) for any speech segment. In one embodiment, the embedding is generated using a Vector of Locally Aggregated Descriptors (VLAD) technique. The VLAD technique here uses a Gaussian Mixture Model (GMM) which clusters groups of speech patterns. A set of clusters for a standard speech pattern is compared with a cluster of speech patterns of a speech segment of the video to determine a distance value between the two, which is then transmitted to thevoice clustering 236 process. - The speech patterns comprise repeatable speech sounds in the language under analysis. For example, if the language is English, then the speech patterns may be 44 different phonemes. Each phoneme may be divided into 3 sub-phones, and this may be generalized into a set of 128 features. A set of these features may be extracted from a standard or average set of English speech sounds the standard speech pattern. The features may be extracted in the same fashion as described above for the
sound filter bank 230 process, or may be extracted using a different process, such as via a Mel Frequency Cepstral Coefficients technique (which involves converting the sounds into the frequency domain to derive numeric values). The data set from which the features are extracted for the standard speech pattern may include a large corpus of videos from thecontent store 110. The features are then modeled using a GMM by thevoice feature encoding 234 process. In the GMM, the features are clustered, e.g., by using a k-means process, and the GMM may further be trained, e.g., by using expectation-maximization algorithm over multiple iterations (e.g., 30 iterations), to generate the parameters of the GMM. - For each speech segment, the
voice feature encoding 234 process extracts the features from the speech segment in a similar fashion as the generation of the features for the standard speech pattern, but with the audio from the speech segment. The voicefeature encoding process 234 generates a segment speech pattern for that speech segment. Thevoice feature encoding 234 process also models the segment speech pattern in the GMM. A new set of clusters is generated by thevoice feature encoding 234 process for the segment speech pattern, and this is compared to the clusters for the standard speech segment. Thevoice feature encoding 234 process determines the difference values (e.g., Euclidian distance) between the clusters of the different speech patterns and these difference values are used as the embedding. For example, thevoice feature encoding 234 process may generate a residual vector for each cluster, which is used in the difference computation. Note that the number of clusters in the two patterns is the same and so each segment speech pattern will have an embedding with the same number of values. - In an alternative embodiment, instead of using a GMM, the
voice feature encoding 234 process uses an i-vector approach, linear discriminant analysis, support vector machines, or any other process capable of deriving an embedding of fixed dimensions from a speech segment. - The
voice detection subsystem 130 takes the embedding generated in thevoice feature encoding 234 process and uses thevoice clustering 236 process to determine which voices belong to the same speaker. - The
voice clustering 236 process compares each embedding for each speech segment with the other embeddings for the other speech segments in the video. A clustering of two embeddings means that thevoice clustering 236 process has determined that two embeddings are likely from speech segments belonging to the same speaker. Thevoice clustering 236 process may compare the components in each embedding with the same components in another embedding according to some metric. This metric represents a distance value between the component values of two embeddings, such as an Euclidian distance. For example, with Euclidian distance, thevoice clustering 236 process may compute the square root of the sum of the differences for the like components in the two embeddings. Thevoice clustering 236 process may use other metrics as well, such as Manhattan distance, maximum distance, Mahalanobis distance. - The
voice clustering 236 process may cluster the embeddings over multiple iterations in a hierarchical clustering process. Thevoice clustering 236 process may use complete-linkage clustering over the multiple iterations. In this process, the embeddings are at the beginning treated as a cluster of its own. At each iteration, those clusters with the closest distance are clustered together. In particular, the distance between two clusters is defined by the maximum metric value that can be computed between an embedding in one cluster and an embedding in the other cluster, i.e., the distance between two clusters is the distance between the two most dissimilar embeddings between the two clusters. At subsequent embeddings, the remaining clusters are further clustered to form new clusters. - Instead of comparing based on the most dissimilar embeddings, the
voice clustering 236 process may in another embodiment determine a distance between the sums of the same component of each embedding in one cluster with the sum of the same component in another cluster. Thevoice clustering 236 process may determine the distance between all like components in this way to compute a total distance. In an alternative embodiment, thevoice clustering 236 process may compute the average of the embeddings in one cluster, and compare this with the average of the embeddings in another cluster. Other clustering methods, such as single-linkage clustering, mean clustering, centroid linkage clustering, or minimum energy clustering, may be used. - In addition to hierarchical clustering, the
voice clustering 236 process may use a different clustering process, such as centroid-based clustering (e.g., k-means), distribution-based clustering (e.g., EM clustering), density-based clustering, graph models, and so on. - The
voice clustering 236 process stops the clustering process at a threshold level. This threshold level indicates a minimum similarity value. Thus, when the closest distance between two clusters falls below the minimum similarity value, thevoice clustering 236 process does not cluster the two clusters together. Thus, after the clustering process is completed, thevoice clustering 236 process is left with a set of clusters that all have distances to each other that are below the minimum similarity value. Typically, the minimum similarity value is set to be relatively high, such that the number of separate clusters that ultimately results from the clustering process exceeds the number of separate faces detected in the face clustering 224 process. If thevoice clustering 236 process determines that the number of clusters is fewer than the number of separate faces, thevoice clustering 236 process may increase the minimum similarity value until the number of clusters is equal to or greater than the number of separate faces. - The
voice clustering 236 process transmits these clusters (or an indication of these clusters) to thevoice face correlation 240 process, along with the temporal positions of the speech segments associated with each cluster. - The voice-
face correlation subsystem 140 performs thevoice face correlation 240 process on the clustered faces and voices from the face clustering 224 process and thevoice clustering 236 process. - The
voice face correlation 240 process receives a list of faces and a list of voices, along with the temporal positions of each face and voice. For example, the temporal position of a face indicates the timestamp positions where the face appears on the screen. Using these lists, thevoice clustering 236 process correlates, or associates, different faces with different voices. - The
voice face correlation 240 process may any one of a variety of methods for correlating voices and faces. In one method, for each speech segment, which is associated with a voice, thevoice face correlation 240 process counts the number of times each separate face appears during (i.e., is coincident with) the temporal positions (e.g., between the start and stop timestamps) for that speech segment. Thevoice face correlation 240 process correlates the face with the most frequent number of appearances with the voice for that speech segment. - In another method, the
voice face correlation 240 process, determines, for each voice (not each speech segment), the number of times each separate face appears for the temporal positions for the voice. In other words, thevoice face correlation 240 process determines the number of times each separate face has temporal positions coincident with the temporal positions of the separate voice. Thevoice face correlation 240 process correlates the face with the most frequent number of appearances with the voice. In this alternative method, the voice associated with the most number of speech segments (i.e., having the largest cluster) is processed first, and those with fewer numbers of segments are processed in descending order. - Note that as there may be more voices detected than faces, more than one voice may associate with a single face.
- In one embodiment, the
voice face correlation 240 process may feed data back to the face clustering 224 andvoice clustering 236 processes when for one voice, two different faces have a similar number (within a threshold) or the same number of occurrences during segments where the voice appears. In this case, thevoice face correlation 240 process may request additional clustering steps from thevoice clustering 236 process, after it performs an initial correlation. Thevoice face correlation 240 process may request to determine whether the voice is closer in distance to other voices that are now correlated with the one face or with voices correlated with the other face. Thevoice face correlation 240 process may associate the voice with the face having the voices that are closer in distance to the voice. - The
voice face correlation 240 process may generate aspeaker label data 250 based on the computed correlation as described above. Thespeaker label data 250 includes the detected faces and voices along with the temporal positions where each appears at. Thespeaker label data 250 may also include the locations in the frame where faces appear. Thespeaker label data 250 may be stored by thevoice face correlation 240 process alongside each corresponding video in thecontent store 110. - In some embodiments, the output from the process described above may be verified using a verification data set with pre-prepared outputs associating voices with faces and temporal locations, or using human verifiers on a set of videos. Based on the results of the verification, the parameters of the system, such as the parameters of the neural networks, GMMs, clustering parameters (e.g., threshold values), and so on, may be modified so that the system produces a more accurate result.
- Using such a method overcomes the shortcomings of traditional systems and allows for the derivation of signals to understand various aspects of human interaction, such as the appearance of new characters and the topical shifts that may result (e.g., for use in topic-based segmentation), or the relative voice/screen times of participants for meeting effectiveness, etc. In particular, in a traditional system using speaker diarization, overlapping sounds may cause failures in speech detection. Furthermore, heuristics processes, which may be inaccurate, may be needed to determine when to stop clustering in traditional systems.
- Instead, using the method described here, by utilizing both audio and video data, a much more accurate and complete identification of speakers may be achieved. Additionally, this provides an advantage of being able to identify the locations speakers on-screen (and off-screen), and whether they are off-screen. This is useful during captioning, where a caption can be placed near a speaker, and the caption text can include only the speech made by that speaker and does not include speech from a speaker who speaks before or after. Moreover, the method can generally work for any type of video, and does not need to be customized for a specific type (e.g., speech, interview, etc.)
- Additional applications may include using the location of speakers on screen to assist in the placement of content overlays on the screen (e.g., so that the content does not overlay against the current speaker). The process described here may be useful for scene understanding. For example, the process here may be employed in a device that may determine which speaker is speaking and perform some action (e.g., point an additional camera at the speaker) upon this detection.
- Additional details regarding the process described here are shown below in
FIGS. 3-9 . -
FIG. 3 illustrates an exemplary illustration of voice detection and processing, according to an embodiment. The process inFIG. 3 may be performed by thevoice detection subsystem 130. - The
voice detection subsystem 130 extracts the audio portion of thevideo 305 from thevideo 210 itself. The first step is aspeech detection 350 operation, where speech is detected 310 at different portions of the audio, and no speech is detected 315 at other portions. This operation may be performed by thesound filter bank 230 process andspeech detection 232 process as described above. - The
voice detection subsystem 130 extracts voice features 331-336 from each of the segments 321-236 for which speech was detected at thevoice feature encoding 352 operation. Note that between each segment, there may be a small gap where no speech is detected (although the gap is not shown). This is how thevoice detection subsystem 130 may be able to determine the separation between different segments. Note that each segment is assumed to be a different speaker during this phase. The voice features 331-336 (i.e., the embeddings) are extracted from the speech segments in the process described above for thevoice feature encoding 234 process. - After the voice features 331-336 are extracted, the
voice detection subsystem 130 clusters the voice features to determine the number of voices in the audio portion in thevoice clustering 354 operation. Here, four voices 341-346 are determined. Additional details regarding clustering are described below with regards toFIG. 4 . -
FIG. 4 illustrates an exemplary illustration of voice clustering, according to an embodiment. The process inFIG. 4 may be performed by thevoice detection subsystem 130. - The
voice detection subsystem 130 computes the voice features 331-336 for the segments 321-326 of theaudio portion 305. These are passed through a voice clustering process, such as thevoice clustering 236 process described above. At each iteration of the process (represented by the levels 411-414), pairs of clusters with the shortest distances are combined. Once the distances between two clusters exceeds the minimum similarity threshold, represented by the dottedline 430, clustering is completed for those clusters. Note that while theminimum similarity threshold 430 is shown as a line inFIG. 3 , it may be the case that different clusters exceed the minimum similarity threshold at different levels of the iteration. Thus, some clusters may not be combined at an iteration, while other clusters are still combined at that same iteration. - Here, at the
first iteration 450, voice features 331 and 332 are combined, voice features 333 and 336 are combined, and voice features 334 and 335 are not combined as their distance exceeds the minimum similarity threshold. Note that if no threshold existed, these two voice features may have been combined. Furthermore, without the minimum similarity threshold, the clustering process would eventually combine all the voice features into a single cluster at level 414. However, due to the threshold, thevoice detection subsystem 130 determines theset 440 of four different voices A, B, C, and D, as shown. -
FIG. 5 illustrates an exemplary illustration of face detection and clustering, according to an embodiment. The process inFIG. 5 may be performed by theface detection subsystem 120. - The
face detection subsystem 120 extracts thevideo portion 505 of thevideo 210. Theface detection subsystem 120 determines if faces exist in various temporal locations of thevideo portion 505 in theface detection operation 552. Here, faces are detected, for example, at 510 and no faces are detected at 515. Theface detection subsystem 120 may perform theface detection operation 552 similarly to theface detection 220 process described above. - The
face detection subsystem 120 detects five faces in segments 521-525 in the video portion as illustrated inFIG. 5 . Note that these faces may be of the same person. As noted above, theface detection subsystem 120 may perform rudimentary comparison of facial features, or rely on the continuity of a face shown on screen, to determine that within a segment, the displayed face is the same face (and from the same person). - The
face detection subsystem 120 generates face distance values 531-535 for the different faces in theface recognition 554 operation. This operation may be performed by theface detection subsystem 120 similarly to theface recognition 222 process. Each set of face distance values 531 for each segment may indicate a distance of that face to a standard face, or to the other detected faces. - The
face detection subsystem 120 clusters the faces based on the face distance values, as described above in the face clustering 224 process. Here, the face distance values are compared against each other, and those with short distances are clustered together. InFIG. 5 , theface detection subsystem 120 determines three separate faces A-C from the clustering process. -
FIG. 6 illustrates an exemplary overlay of the separate voices and faces detected by thevoice detection subsystem 130 and theface detection subsystem 120, according to an embodiment. - Note that the detected faces do not always correlate with the detected voices in temporal position. For example, while
Face A 541 andVoice A 341 correlate in the first segment betweentemporal positions temporal positions Face C 545 do not specifically correlate to one detected voice, instead overlapping withVoice C 345 andVoice B 346. This may be due toFace C 545 not speaking during some portion in whichFace C 545 appears. In such a case, thecontent system 105 may identify another speaker, such asFace A 544, as the speaker. Because thecontent system 105 can detect faces and associate them with voices, thecontent system 105 can distinguish between persons that are not speaking with persons that are speaking. - In another case, note that
Voice D 344 appears at temporal position 656 but no face is detected at that point. Assuming no errors in the face detection process, this may indicate an off-screen speaker, i.e., a person that is speaking but who is not being shown in the video. As described below, in such a situation, thecontent system 105 may be able to indicate that the speaker is off-screen. -
FIG. 7 illustrates an exemplary clustering of voices and faces, according to an embodiment. In one embodiment, the clustering process described here is performed by the voice-face correlation subsystem 140 in accordance with thevoice face correlation 240 process described above. - Here, the voice-
face correlation subsystem 140 determines the voice with the most occurrences in the video. In the illustrated example, this could be Voice A or Voice B. In this case, the voice-face correlation subsystem 140 may randomly select one of the voices or select the one first encountered. In the illustrated example, the voice-face correlation subsystem 140 selects Voice A. For all speech segments where Voice A is detected, the most encountered face is Face A. Thus, the voice-face correlation subsystem 140 correlates Face A with Voice A. - For Voice B, both Face A and Face B are tied for the number of occurrences. In a real-world scenario, this may be unlikely due to the larger number of faces and instances of faces that may be detected, resulting in few ties. However, if a tie were to occur, the voice-
face correlation subsystem 140 may select the face that most corresponds in temporal position to the voice. Alternatively, as described above, voice-face correlation subsystem 140 may perform an initial correlation, and adjust the correlation subsequently based on the distances between the voices that have been associated with faces with each other. Here, referring back toFIG. 6 , Face B corresponds exactly to Voice B betweentemporal positions face correlation subsystem 140 may correlate Face B with Voice B. For Voice D, the voice-face correlation subsystem 140 correlates Face A, as Face A appears in the segment for Voice D. Finally, for Voice C, the voice-face correlation subsystem 140 may choose Face C, as thetemporal position 658 lines up between the segment for Face C and Voice C. Alternatively, in such a case, the voice-face correlation subsystem 140 does not correlate Voice C with Face A as Face C would not have an associated voice. Thus, between the choice of a face with associated voice(s) and a face without, the voice-face correlation subsystem 140, all other factors being equal, the voice-face correlation subsystem 140 may select the face that has no associated voice. - The final correlation is Voice A and D to Face A, Voice C to Face C, and Voice B to Face B. Note that four voices were detected but only three faces. The voice-
face correlation subsystem 140 assumes that the facial detection process is more robust and accurate, and thus there will likely be more voices detected versus faces. -
FIG. 8 illustrates an exemplary captioning based on the automatic speaker detection process described above, according to an embodiment. In one embodiment, the captioning process described here is performed by thecaption subsystem 160. -
Frame 810 illustrates an example of a single speaker. Thecaption subsystem 160 may in some cases bound the speaker with a bounding box based on the location of the speaker as generated by theface detection subsystem 120 as described above. Furthermore, thecaption subsystem 160 may add the captions for the speaker temporally adjacent to the speaker (e.g., vertically above or below the speaker's detected face). Thecaption subsystem 160 may also include a “speaker” label or other label in the bounding box to indicate that the person is speaking. Alternatively, or in conjunction, thecaption subsystem 160 may also indicate somewhere else in the frame that speech is detected. -
Frame 820 illustrates a scenario with two faces, but a single speaker. In this case, thecaption subsystem 160 may include bounding boxes around both faces, and indicate in the bounding box having the speaker a label (e.g., “speaker”) indicating that the person is speaking. Thecaption subsystem 160 may also provide the captions for the speaker adjacent to that speaker. -
Frame 840 illustrates a change in speaker from the person on the left to the person on the right. In this case, thecaption subsystem 160 changes the speaker label to the person on the right, and also move the caption window to be adjacent to the person on the left. When the person on the right begins to speak, as thecaption subsystem 160 has received information about the voices and speakers, thecaption subsystem 160 creates a new caption box that is discontinuous with the previous caption box for the previous speaker. -
Frame 840 illustrates an example of an off-screen speaker. In this case, thecaption subsystem 160 shows a bounding box around the face of the person appearing on screen, but since the voice and face clustering information received from the voice-face correlation subsystem 140 indicates that this face is not correlated with the current voice, thecaption subsystem 160 instead indicates that the speaker is off screen, possibly with the use of the “off-screen speaker” label, or with the user of “[off-screen]” in the provided caption box. - Note that the
caption subsystem 160 may not in all instances indicate a bounding box or “speaker” label for faces. Instead, thecaption subsystem 160 may only provide the captions at the appropriate locations in the frame as shown here. -
FIG. 9 is a data flow diagram illustrating the actions of thecontent system 105 for speaker diarization using face and voice data, according to an embodiment. In one embodiment, the operations in the flow diagram are attributed to thecontent system 105. - Initially, the
content system 105 determines 905 temporal positions and locations of separate faces in a video using face detection and clustering. As described above, this process may be performed by theface detection subsystem 120. - The
content system 105extracts 910 voice features from speech segments of the video. Thecontent system 105 also determines 915 temporal positions of separate voices in the video using clusters of voice features having a threshold similarity. As noted, this may be performed by thevoice detection subsystem 130. - The
content system 105 generates 920 a correlation between the determined separate faces and separate voices based at least on the temporal positions of the separate faces and the separate voices in the video. This may be performed by the voice-face correlation subsystem. - The
content system 105stores 925 the correlation in the content store for the video. Thecontent system 105 may also generate 930 speaker label data for the video based on the generated correlation, the speaker label data indicating a temporal position and location of unique speakers in the video. - Reference in the specification to “one embodiment” or to “an embodiment” means that a particular feature, structure, or characteristic described in connection with the embodiments is included in at least one embodiment. The appearances of the phrase “in one embodiment” in various places in the specification are not necessarily all referring to the same embodiment.
- It should be noted that the process steps and instructions are embodied in software, firmware or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
- The operations herein may also be performed by an apparatus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability. It will be appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references below to specific languages are provided for disclosure of enablement and best mode of the present invention.
- While the invention has been particularly shown and described with reference to a preferred embodiment and several alternate embodiments, it will be understood by persons skilled in the relevant art that various changes in form and details can be made therein without departing from the spirit and scope of the invention.
- Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention, which are set forth in the following claims.
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/497,497 US10497382B2 (en) | 2016-12-16 | 2017-04-26 | Associating faces with voices for speaker diarization within videos |
PCT/US2017/053727 WO2018111374A1 (en) | 2016-12-16 | 2017-09-27 | Associating faces with voices for speaker diarization within videos |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201662435710P | 2016-12-16 | 2016-12-16 | |
US15/497,497 US10497382B2 (en) | 2016-12-16 | 2017-04-26 | Associating faces with voices for speaker diarization within videos |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180174600A1 true US20180174600A1 (en) | 2018-06-21 |
US10497382B2 US10497382B2 (en) | 2019-12-03 |
Family
ID=62559099
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/497,497 Active US10497382B2 (en) | 2016-12-16 | 2017-04-26 | Associating faces with voices for speaker diarization within videos |
Country Status (2)
Country | Link |
---|---|
US (1) | US10497382B2 (en) |
WO (1) | WO2018111374A1 (en) |
Cited By (73)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180218738A1 (en) * | 2015-01-26 | 2018-08-02 | Verint Systems Ltd. | Word-level blind diarization of recorded calls with arbitrary number of speakers |
US20180261228A1 (en) * | 2017-03-08 | 2018-09-13 | Nxp B.V. | Method and system for facilitating reliable pattern detection |
CN109308731A (en) * | 2018-08-24 | 2019-02-05 | 浙江大学 | The synchronous face video composition algorithm of the voice-driven lip of concatenated convolutional LSTM |
US20190114496A1 (en) * | 2017-10-13 | 2019-04-18 | Cirrus Logic International Semiconductor Ltd. | Detection of liveness |
US20190114497A1 (en) * | 2017-10-13 | 2019-04-18 | Cirrus Logic International Semiconductor Ltd. | Detection of liveness |
US10311913B1 (en) * | 2018-02-22 | 2019-06-04 | Adobe Inc. | Summarizing video content based on memorability of the video content |
CN109905757A (en) * | 2019-02-13 | 2019-06-18 | 安徽励图信息科技股份有限公司 | The method that video caption broadcasts is controlled by recognition of face |
US20190198044A1 (en) * | 2017-12-25 | 2019-06-27 | Casio Computer Co., Ltd. | Voice recognition device, robot, voice recognition method, and storage medium |
US10380428B2 (en) | 2015-11-20 | 2019-08-13 | Adobe Inc. | Techniques for enhancing content memorability of user generated video content |
CN110246512A (en) * | 2019-05-30 | 2019-09-17 | 平安科技（深圳）有限公司 | Sound separation method, device and computer readable storage medium |
CN110287949A (en) * | 2019-07-30 | 2019-09-27 | 腾讯音乐娱乐科技（深圳）有限公司 | Video clip extracting method, device, equipment and storage medium |
US20190304472A1 (en) * | 2018-03-30 | 2019-10-03 | Qualcomm Incorporated | User authentication |
US10490209B2 (en) * | 2016-05-02 | 2019-11-26 | Google Llc | Automatic determination of timing windows for speech captions in an audio stream |
US10506285B2 (en) * | 2015-03-02 | 2019-12-10 | The Nielsen Company (Us), Llc | Method and apparatus to count people |
US10551846B1 (en) * | 2019-01-25 | 2020-02-04 | StradVision, Inc. | Learning method and learning device for improving segmentation performance to be used for detecting road user events using double embedding configuration in multi-camera system and testing method and testing device using the same |
US10643607B2 (en) * | 2018-09-28 | 2020-05-05 | Dish Network L.L.C. | Vocal triggering of presentation transitions |
CN111274955A (en) * | 2020-01-20 | 2020-06-12 | 中国地质大学（武汉） | Emotion recognition method and system based on audio-visual feature correlation fusion |
US10720166B2 (en) * | 2018-04-09 | 2020-07-21 | Synaptics Incorporated | Voice biometrics systems and methods |
CN111629267A (en) * | 2020-04-30 | 2020-09-04 | 腾讯科技（深圳）有限公司 | Audio labeling method, device, equipment and computer readable storage medium |
US10770076B2 (en) | 2017-06-28 | 2020-09-08 | Cirrus Logic, Inc. | Magnetic detection of replay attack |
US10778939B2 (en) * | 2017-09-22 | 2020-09-15 | Facebook, Inc. | Media effects using predicted facial feature locations |
CN111708999A (en) * | 2020-05-22 | 2020-09-25 | 湖南映客互娱网络信息有限公司 | Live broadcast customer service authentication method and system based on image comparison |
WO2020206487A1 (en) * | 2019-04-12 | 2020-10-15 | Pinch Labs Pty Ltd | Methods and apparatus for displaying, compressing and/or indexing information relating to a meeting |
CN111833884A (en) * | 2020-05-27 | 2020-10-27 | 北京三快在线科技有限公司 | Voiceprint feature extraction method and device, electronic equipment and storage medium |
US10818296B2 (en) * | 2018-06-21 | 2020-10-27 | Intel Corporation | Method and system of robust speaker recognition activation |
CN111899743A (en) * | 2020-07-31 | 2020-11-06 | 斑马网络技术有限公司 | Method and device for acquiring target sound, electronic equipment and storage medium |
US10832702B2 (en) | 2017-10-13 | 2020-11-10 | Cirrus Logic, Inc. | Robustness of speech processing system against ultrasound and dolphin attacks |
US10839808B2 (en) | 2017-10-13 | 2020-11-17 | Cirrus Logic, Inc. | Detection of replay attack |
US10847165B2 (en) | 2017-10-13 | 2020-11-24 | Cirrus Logic, Inc. | Detection of liveness |
US10853464B2 (en) | 2017-06-28 | 2020-12-01 | Cirrus Logic, Inc. | Detection of replay attack |
US20200401768A1 (en) * | 2019-06-18 | 2020-12-24 | Verint Americas Inc. | Detecting anomolies in textual items using cross-entropies |
EP3767624A1 (en) * | 2019-07-15 | 2021-01-20 | Beijing Xiaomi Mobile Software Co., Ltd. | Method and apparatus for obtaining audio-visual information |
CN112270361A (en) * | 2020-10-30 | 2021-01-26 | 重庆紫光华山智安科技有限公司 | Face data processing method, system, storage medium and equipment |
US10915614B2 (en) | 2018-08-31 | 2021-02-09 | Cirrus Logic, Inc. | Biometric authentication |
US10922570B1 (en) * | 2019-07-29 | 2021-02-16 | NextVPU (Shanghai) Co., Ltd. | Entering of human face information into database |
US10984083B2 (en) | 2017-07-07 | 2021-04-20 | Cirrus Logic, Inc. | Authentication of user using ear biometric data |
US11017783B2 (en) * | 2019-03-08 | 2021-05-25 | Qualcomm Incorporated | Speaker template update with embedding vectors based on distance metric |
US11036996B2 (en) * | 2019-07-02 | 2021-06-15 | Baidu Usa Llc | Method and apparatus for determining (raw) video materials for news |
US11037574B2 (en) | 2018-09-05 | 2021-06-15 | Cirrus Logic, Inc. | Speaker recognition and speaker change detection |
US11042618B2 (en) | 2017-07-07 | 2021-06-22 | Cirrus Logic, Inc. | Methods, apparatus and systems for biometric processes |
US11042617B2 (en) | 2017-07-07 | 2021-06-22 | Cirrus Logic, Inc. | Methods, apparatus and systems for biometric processes |
US11042616B2 (en) | 2017-06-27 | 2021-06-22 | Cirrus Logic, Inc. | Detection of replay attack |
US11051117B2 (en) | 2017-11-14 | 2021-06-29 | Cirrus Logic, Inc. | Detection of loudspeaker playback |
US11062455B2 (en) * | 2019-10-01 | 2021-07-13 | Volvo Car Corporation | Data filtering of image stacks and video streams |
US11107476B2 (en) * | 2018-03-02 | 2021-08-31 | Hitachi, Ltd. | Speaker estimation method and speaker estimation device |
WO2021183142A1 (en) * | 2020-03-13 | 2021-09-16 | Google Llc | Context-based speaker counter for a speaker diarization system |
US11158324B2 (en) * | 2018-05-28 | 2021-10-26 | Ping An Technology (Shenzhen) Co., Ltd. | Speaker separation model training method, two-speaker separation method and computing device |
US11210850B2 (en) | 2018-11-27 | 2021-12-28 | Snap Inc. | Rendering 3D captions within real-world environments |
US11227602B2 (en) * | 2019-11-20 | 2022-01-18 | Facebook Technologies, Llc | Speech transcription using multiple data sources |
US11227442B1 (en) * | 2019-12-19 | 2022-01-18 | Snap Inc. | 3D captions with semantic graphical elements |
US11232646B2 (en) | 2019-09-06 | 2022-01-25 | Snap Inc. | Context-based virtual object rendering |
US11264037B2 (en) | 2018-01-23 | 2022-03-01 | Cirrus Logic, Inc. | Speaker identification |
US11263817B1 (en) | 2019-12-19 | 2022-03-01 | Snap Inc. | 3D captions with face tracking |
US11270707B2 (en) | 2017-10-13 | 2022-03-08 | Cirrus Logic, Inc. | Analysing speech signals |
US11270101B2 (en) * | 2019-11-01 | 2022-03-08 | Industrial Technology Research Institute | Imaginary face generation method and system, and face recognition method and system using the same |
US11276409B2 (en) | 2017-11-14 | 2022-03-15 | Cirrus Logic, Inc. | Detection of replay attack |
US11315545B2 (en) | 2020-07-09 | 2022-04-26 | Raytheon Applied Signal Technology, Inc. | System and method for language identification in audio data |
US20220147722A1 (en) * | 2020-11-10 | 2022-05-12 | Electronics And Telecommunications Research Institute | System and method for automatic speech translation based on zero user interface |
US11334832B2 (en) | 2018-10-03 | 2022-05-17 | Verint Americas Inc. | Risk assessment using Poisson Shelves |
US11373657B2 (en) * | 2020-05-01 | 2022-06-28 | Raytheon Applied Signal Technology, Inc. | System and method for speaker identification in audio data |
US11475899B2 (en) | 2018-01-23 | 2022-10-18 | Cirrus Logic, Inc. | Speaker identification |
US11540078B1 (en) | 2021-06-04 | 2022-12-27 | Google Llc | Spatial audio in video conference calls based on content type or participant role |
US11567914B2 (en) | 2018-09-14 | 2023-01-31 | Verint Americas Inc. | Framework and method for the automated determination of classes and anomaly detection methods for time series |
US11610580B2 (en) | 2019-03-07 | 2023-03-21 | Verint Americas Inc. | System and method for determining reasons for anomalies using cross entropy ranking of textual items |
US11631402B2 (en) | 2018-07-31 | 2023-04-18 | Cirrus Logic, Inc. | Detection of replay attack |
US11704878B2 (en) | 2017-01-09 | 2023-07-18 | Snap Inc. | Surface aware lens |
US20230260520A1 (en) * | 2022-02-15 | 2023-08-17 | Gong.Io Ltd | Method for uniquely identifying participants in a recorded streaming teleconference |
US11735189B2 (en) | 2018-01-23 | 2023-08-22 | Cirrus Logic, Inc. | Speaker identification |
US11755701B2 (en) | 2017-07-07 | 2023-09-12 | Cirrus Logic Inc. | Methods, apparatus and systems for authentication |
US11823341B2 (en) | 2019-06-28 | 2023-11-21 | Snap Inc. | 3D object camera customization system |
US11829461B2 (en) | 2017-07-07 | 2023-11-28 | Cirrus Logic Inc. | Methods, apparatus and systems for audio playback |
WO2023229623A1 (en) * | 2022-05-27 | 2023-11-30 | Tencent America LLC | Techniques for end-to-end speaker diarization with generalized neural speaker clustering |
GB2623617A (en) * | 2022-10-17 | 2024-04-24 | Adobe Inc | Face-aware speaker diarization for transcripts and text-based video editing |
Families Citing this family (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20220157322A1 (en) * | 2018-04-17 | 2022-05-19 | Gong.Io Ltd. | Metadata-based diarization of teleconferences |
EP3855358A4 (en) * | 2018-10-16 | 2021-10-27 | Huawei Technologies Co., Ltd. | Object recognition method and terminal device |
CN110265060B (en) * | 2019-06-04 | 2021-05-11 | 广东工业大学 | Speaker number automatic detection method based on density clustering |
US11659217B1 (en) * | 2021-03-29 | 2023-05-23 | Amazon Technologies, Inc. | Event based audio-video sync detection |
US20230215440A1 (en) * | 2022-01-05 | 2023-07-06 | CLIPr Co. | System and method for speaker verification |
Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030154084A1 (en) * | 2002-02-14 | 2003-08-14 | Koninklijke Philips Electronics N.V. | Method and system for person identification using video-speech matching |
US20060288291A1 (en) * | 2005-05-27 | 2006-12-21 | Lee Shih-Hung | Anchor person detection for television news segmentation based on audiovisual features |
US20070011012A1 (en) * | 2005-07-11 | 2007-01-11 | Steve Yurick | Method, system, and apparatus for facilitating captioning of multi-media content |
US20080306995A1 (en) * | 2007-06-05 | 2008-12-11 | Newell Catherine D | Automatic story creation using semantic classifiers for images and associated meta data |
US20090089056A1 (en) * | 2007-09-27 | 2009-04-02 | Kabushiki Kaisha Toshiba | Electronic apparatus and display process method |
US20090222258A1 (en) * | 2008-02-29 | 2009-09-03 | Takashi Fukuda | Voice activity detection system, method, and program product |
US20100074590A1 (en) * | 2008-09-25 | 2010-03-25 | Kabushiki Kaisha Toshiba | Electronic apparatus and image data management method |
US20120010884A1 (en) * | 2010-06-10 | 2012-01-12 | AOL, Inc. | Systems And Methods for Manipulating Electronic Content Based On Speech Recognition |
US20130080916A1 (en) * | 2011-09-27 | 2013-03-28 | Flickintel, Llc | Method, system and processor-readable media for bidirectional communications and data sharing between wireless hand held devices and multimedia display systems |
US20150098690A1 (en) * | 2013-10-09 | 2015-04-09 | Mindset Systems | Method of and System for Automatic Compilation of Crowdsourced Digital Media Productions |
US20160203818A1 (en) * | 2015-01-14 | 2016-07-14 | Miracom USA, Inc. | Wireless caption communication service system |
US20160227282A1 (en) * | 2013-10-10 | 2016-08-04 | The Trustees Of Columbia University In The City Of New York | Methods and systems for aggregation and organization of multimedia data acquired from a plurality of sources |
US20170150193A1 (en) * | 2003-09-17 | 2017-05-25 | Lg Electronics Inc. | Digital broadcast receiver and method for processing caption thereof |
US20170148444A1 (en) * | 2015-11-24 | 2017-05-25 | Intel IP Corporation | Low resource key phrase detection for wake on voice |
US20170243582A1 (en) * | 2016-02-19 | 2017-08-24 | Microsoft Technology Licensing, Llc | Hearing assistance with automated speech transcription |
US9852736B2 (en) * | 2012-10-15 | 2017-12-26 | Digimarc Corporation | Multi-mode audio recognition and auxiliary data encoding and decoding |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6925197B2 (en) | 2001-12-27 | 2005-08-02 | Koninklijke Philips Electronics N.V. | Method and system for name-face/voice-role association |
EP2271089B1 (en) * | 2003-02-21 | 2016-09-28 | Panasonic Intellectual Property Management Co., Ltd. | Apparatus and method for simultaneously utilizing audio visual data |
JP4934090B2 (en) | 2008-04-09 | 2012-05-16 | 日本放送協会 | Program character extraction device and program character extraction program |
-
2017
- 2017-04-26 US US15/497,497 patent/US10497382B2/en active Active
- 2017-09-27 WO PCT/US2017/053727 patent/WO2018111374A1/en active Application Filing
Patent Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030154084A1 (en) * | 2002-02-14 | 2003-08-14 | Koninklijke Philips Electronics N.V. | Method and system for person identification using video-speech matching |
US20170150193A1 (en) * | 2003-09-17 | 2017-05-25 | Lg Electronics Inc. | Digital broadcast receiver and method for processing caption thereof |
US20060288291A1 (en) * | 2005-05-27 | 2006-12-21 | Lee Shih-Hung | Anchor person detection for television news segmentation based on audiovisual features |
US20070011012A1 (en) * | 2005-07-11 | 2007-01-11 | Steve Yurick | Method, system, and apparatus for facilitating captioning of multi-media content |
US20080306995A1 (en) * | 2007-06-05 | 2008-12-11 | Newell Catherine D | Automatic story creation using semantic classifiers for images and associated meta data |
US20090089056A1 (en) * | 2007-09-27 | 2009-04-02 | Kabushiki Kaisha Toshiba | Electronic apparatus and display process method |
US20090222258A1 (en) * | 2008-02-29 | 2009-09-03 | Takashi Fukuda | Voice activity detection system, method, and program product |
US20100074590A1 (en) * | 2008-09-25 | 2010-03-25 | Kabushiki Kaisha Toshiba | Electronic apparatus and image data management method |
US20120010884A1 (en) * | 2010-06-10 | 2012-01-12 | AOL, Inc. | Systems And Methods for Manipulating Electronic Content Based On Speech Recognition |
US20130080916A1 (en) * | 2011-09-27 | 2013-03-28 | Flickintel, Llc | Method, system and processor-readable media for bidirectional communications and data sharing between wireless hand held devices and multimedia display systems |
US9852736B2 (en) * | 2012-10-15 | 2017-12-26 | Digimarc Corporation | Multi-mode audio recognition and auxiliary data encoding and decoding |
US20150098690A1 (en) * | 2013-10-09 | 2015-04-09 | Mindset Systems | Method of and System for Automatic Compilation of Crowdsourced Digital Media Productions |
US20160227282A1 (en) * | 2013-10-10 | 2016-08-04 | The Trustees Of Columbia University In The City Of New York | Methods and systems for aggregation and organization of multimedia data acquired from a plurality of sources |
US20160203818A1 (en) * | 2015-01-14 | 2016-07-14 | Miracom USA, Inc. | Wireless caption communication service system |
US20170148444A1 (en) * | 2015-11-24 | 2017-05-25 | Intel IP Corporation | Low resource key phrase detection for wake on voice |
US20170243582A1 (en) * | 2016-02-19 | 2017-08-24 | Microsoft Technology Licensing, Llc | Hearing assistance with automated speech transcription |
Cited By (109)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180218738A1 (en) * | 2015-01-26 | 2018-08-02 | Verint Systems Ltd. | Word-level blind diarization of recorded calls with arbitrary number of speakers |
US10726848B2 (en) * | 2015-01-26 | 2020-07-28 | Verint Systems Ltd. | Word-level blind diarization of recorded calls with arbitrary number of speakers |
US11636860B2 (en) * | 2015-01-26 | 2023-04-25 | Verint Systems Ltd. | Word-level blind diarization of recorded calls with arbitrary number of speakers |
US10827218B2 (en) | 2015-03-02 | 2020-11-03 | The Nielsen Company (Us), Llc | Methods and apparatus to count people |
US11303960B2 (en) | 2015-03-02 | 2022-04-12 | The Nielsen Company (Us), Llc | Methods and apparatus to count people |
US10506285B2 (en) * | 2015-03-02 | 2019-12-10 | The Nielsen Company (Us), Llc | Method and apparatus to count people |
US11558665B2 (en) | 2015-03-02 | 2023-01-17 | The Nielsen Company (Us), Llc | Methods and apparatus to count people |
US10380428B2 (en) | 2015-11-20 | 2019-08-13 | Adobe Inc. | Techniques for enhancing content memorability of user generated video content |
US10490209B2 (en) * | 2016-05-02 | 2019-11-26 | Google Llc | Automatic determination of timing windows for speech captions in an audio stream |
US11011184B2 (en) | 2016-05-02 | 2021-05-18 | Google Llc | Automatic determination of timing windows for speech captions in an audio stream |
US11704878B2 (en) | 2017-01-09 | 2023-07-18 | Snap Inc. | Surface aware lens |
US10529339B2 (en) * | 2017-03-08 | 2020-01-07 | Nxp B.V. | Method and system for facilitating reliable pattern detection |
US20180261228A1 (en) * | 2017-03-08 | 2018-09-13 | Nxp B.V. | Method and system for facilitating reliable pattern detection |
US11042616B2 (en) | 2017-06-27 | 2021-06-22 | Cirrus Logic, Inc. | Detection of replay attack |
US10853464B2 (en) | 2017-06-28 | 2020-12-01 | Cirrus Logic, Inc. | Detection of replay attack |
US11164588B2 (en) | 2017-06-28 | 2021-11-02 | Cirrus Logic, Inc. | Magnetic detection of replay attack |
US11704397B2 (en) | 2017-06-28 | 2023-07-18 | Cirrus Logic, Inc. | Detection of replay attack |
US10770076B2 (en) | 2017-06-28 | 2020-09-08 | Cirrus Logic, Inc. | Magnetic detection of replay attack |
US11829461B2 (en) | 2017-07-07 | 2023-11-28 | Cirrus Logic Inc. | Methods, apparatus and systems for audio playback |
US11042617B2 (en) | 2017-07-07 | 2021-06-22 | Cirrus Logic, Inc. | Methods, apparatus and systems for biometric processes |
US11755701B2 (en) | 2017-07-07 | 2023-09-12 | Cirrus Logic Inc. | Methods, apparatus and systems for authentication |
US11714888B2 (en) | 2017-07-07 | 2023-08-01 | Cirrus Logic Inc. | Methods, apparatus and systems for biometric processes |
US10984083B2 (en) | 2017-07-07 | 2021-04-20 | Cirrus Logic, Inc. | Authentication of user using ear biometric data |
US11042618B2 (en) | 2017-07-07 | 2021-06-22 | Cirrus Logic, Inc. | Methods, apparatus and systems for biometric processes |
US10778939B2 (en) * | 2017-09-22 | 2020-09-15 | Facebook, Inc. | Media effects using predicted facial feature locations |
US10832702B2 (en) | 2017-10-13 | 2020-11-10 | Cirrus Logic, Inc. | Robustness of speech processing system against ultrasound and dolphin attacks |
US20190114496A1 (en) * | 2017-10-13 | 2019-04-18 | Cirrus Logic International Semiconductor Ltd. | Detection of liveness |
US11270707B2 (en) | 2017-10-13 | 2022-03-08 | Cirrus Logic, Inc. | Analysing speech signals |
US11017252B2 (en) * | 2017-10-13 | 2021-05-25 | Cirrus Logic, Inc. | Detection of liveness |
US20190114497A1 (en) * | 2017-10-13 | 2019-04-18 | Cirrus Logic International Semiconductor Ltd. | Detection of liveness |
US11023755B2 (en) * | 2017-10-13 | 2021-06-01 | Cirrus Logic, Inc. | Detection of liveness |
US10839808B2 (en) | 2017-10-13 | 2020-11-17 | Cirrus Logic, Inc. | Detection of replay attack |
US10847165B2 (en) | 2017-10-13 | 2020-11-24 | Cirrus Logic, Inc. | Detection of liveness |
US11705135B2 (en) | 2017-10-13 | 2023-07-18 | Cirrus Logic, Inc. | Detection of liveness |
US11051117B2 (en) | 2017-11-14 | 2021-06-29 | Cirrus Logic, Inc. | Detection of loudspeaker playback |
US11276409B2 (en) | 2017-11-14 | 2022-03-15 | Cirrus Logic, Inc. | Detection of replay attack |
US10910001B2 (en) * | 2017-12-25 | 2021-02-02 | Casio Computer Co., Ltd. | Voice recognition device, robot, voice recognition method, and storage medium |
US20190198044A1 (en) * | 2017-12-25 | 2019-06-27 | Casio Computer Co., Ltd. | Voice recognition device, robot, voice recognition method, and storage medium |
US11694695B2 (en) | 2018-01-23 | 2023-07-04 | Cirrus Logic, Inc. | Speaker identification |
US11264037B2 (en) | 2018-01-23 | 2022-03-01 | Cirrus Logic, Inc. | Speaker identification |
US11475899B2 (en) | 2018-01-23 | 2022-10-18 | Cirrus Logic, Inc. | Speaker identification |
US11735189B2 (en) | 2018-01-23 | 2023-08-22 | Cirrus Logic, Inc. | Speaker identification |
US10311913B1 (en) * | 2018-02-22 | 2019-06-04 | Adobe Inc. | Summarizing video content based on memorability of the video content |
US11107476B2 (en) * | 2018-03-02 | 2021-08-31 | Hitachi, Ltd. | Speaker estimation method and speaker estimation device |
US10733996B2 (en) * | 2018-03-30 | 2020-08-04 | Qualcomm Incorporated | User authentication |
US20190304472A1 (en) * | 2018-03-30 | 2019-10-03 | Qualcomm Incorporated | User authentication |
US10720166B2 (en) * | 2018-04-09 | 2020-07-21 | Synaptics Incorporated | Voice biometrics systems and methods |
US11158324B2 (en) * | 2018-05-28 | 2021-10-26 | Ping An Technology (Shenzhen) Co., Ltd. | Speaker separation model training method, two-speaker separation method and computing device |
US10818296B2 (en) * | 2018-06-21 | 2020-10-27 | Intel Corporation | Method and system of robust speaker recognition activation |
US11631402B2 (en) | 2018-07-31 | 2023-04-18 | Cirrus Logic, Inc. | Detection of replay attack |
CN109308731A (en) * | 2018-08-24 | 2019-02-05 | 浙江大学 | The synchronous face video composition algorithm of the voice-driven lip of concatenated convolutional LSTM |
US11748462B2 (en) | 2018-08-31 | 2023-09-05 | Cirrus Logic Inc. | Biometric authentication |
US10915614B2 (en) | 2018-08-31 | 2021-02-09 | Cirrus Logic, Inc. | Biometric authentication |
US11037574B2 (en) | 2018-09-05 | 2021-06-15 | Cirrus Logic, Inc. | Speaker recognition and speaker change detection |
US11567914B2 (en) | 2018-09-14 | 2023-01-31 | Verint Americas Inc. | Framework and method for the automated determination of classes and anomaly detection methods for time series |
US11195519B2 (en) | 2018-09-28 | 2021-12-07 | Dish Network L.L.C. | Vocal triggering of presentation transitions |
US10643607B2 (en) * | 2018-09-28 | 2020-05-05 | Dish Network L.L.C. | Vocal triggering of presentation transitions |
US11842312B2 (en) | 2018-10-03 | 2023-12-12 | Verint Americas Inc. | Multivariate risk assessment via Poisson shelves |
US11334832B2 (en) | 2018-10-03 | 2022-05-17 | Verint Americas Inc. | Risk assessment using Poisson Shelves |
US11842311B2 (en) | 2018-10-03 | 2023-12-12 | Verint Americas Inc. | Multivariate risk assessment via Poisson Shelves |
US11928634B2 (en) | 2018-10-03 | 2024-03-12 | Verint Americas Inc. | Multivariate risk assessment via poisson shelves |
US11620791B2 (en) | 2018-11-27 | 2023-04-04 | Snap Inc. | Rendering 3D captions within real-world environments |
US11210850B2 (en) | 2018-11-27 | 2021-12-28 | Snap Inc. | Rendering 3D captions within real-world environments |
US20220044479A1 (en) | 2018-11-27 | 2022-02-10 | Snap Inc. | Textured mesh building |
US11836859B2 (en) | 2018-11-27 | 2023-12-05 | Snap Inc. | Textured mesh building |
US10551846B1 (en) * | 2019-01-25 | 2020-02-04 | StradVision, Inc. | Learning method and learning device for improving segmentation performance to be used for detecting road user events using double embedding configuration in multi-camera system and testing method and testing device using the same |
CN109905757A (en) * | 2019-02-13 | 2019-06-18 | 安徽励图信息科技股份有限公司 | The method that video caption broadcasts is controlled by recognition of face |
US11610580B2 (en) | 2019-03-07 | 2023-03-21 | Verint Americas Inc. | System and method for determining reasons for anomalies using cross entropy ranking of textual items |
US11017783B2 (en) * | 2019-03-08 | 2021-05-25 | Qualcomm Incorporated | Speaker template update with embedding vectors based on distance metric |
US11950020B2 (en) | 2019-04-12 | 2024-04-02 | Pinch Labs Pty Ltd | Methods and apparatus for displaying, compressing and/or indexing information relating to a meeting |
WO2020206487A1 (en) * | 2019-04-12 | 2020-10-15 | Pinch Labs Pty Ltd | Methods and apparatus for displaying, compressing and/or indexing information relating to a meeting |
CN110246512A (en) * | 2019-05-30 | 2019-09-17 | 平安科技（深圳）有限公司 | Sound separation method, device and computer readable storage medium |
US11514251B2 (en) * | 2019-06-18 | 2022-11-29 | Verint Americas Inc. | Detecting anomalies in textual items using cross-entropies |
US20200401768A1 (en) * | 2019-06-18 | 2020-12-24 | Verint Americas Inc. | Detecting anomolies in textual items using cross-entropies |
US11823341B2 (en) | 2019-06-28 | 2023-11-21 | Snap Inc. | 3D object camera customization system |
US11036996B2 (en) * | 2019-07-02 | 2021-06-15 | Baidu Usa Llc | Method and apparatus for determining (raw) video materials for news |
EP3767624A1 (en) * | 2019-07-15 | 2021-01-20 | Beijing Xiaomi Mobile Software Co., Ltd. | Method and apparatus for obtaining audio-visual information |
US10950272B2 (en) | 2019-07-15 | 2021-03-16 | Beijing Xiaomi Mobile Software Co., Ltd. | Method and apparatus for obtaining audio-visual information, device, and storage medium |
CN112312039A (en) * | 2019-07-15 | 2021-02-02 | 北京小米移动软件有限公司 | Audio and video information acquisition method, device, equipment and storage medium |
US10922570B1 (en) * | 2019-07-29 | 2021-02-16 | NextVPU (Shanghai) Co., Ltd. | Entering of human face information into database |
CN110287949A (en) * | 2019-07-30 | 2019-09-27 | 腾讯音乐娱乐科技（深圳）有限公司 | Video clip extracting method, device, equipment and storage medium |
US11232646B2 (en) | 2019-09-06 | 2022-01-25 | Snap Inc. | Context-based virtual object rendering |
US11062455B2 (en) * | 2019-10-01 | 2021-07-13 | Volvo Car Corporation | Data filtering of image stacks and video streams |
US11270101B2 (en) * | 2019-11-01 | 2022-03-08 | Industrial Technology Research Institute | Imaginary face generation method and system, and face recognition method and system using the same |
US11227602B2 (en) * | 2019-11-20 | 2022-01-18 | Facebook Technologies, Llc | Speech transcription using multiple data sources |
US20220139400A1 (en) * | 2019-11-20 | 2022-05-05 | Facebook Technologies, Llc | Speech transcription using multiple data sources |
US11749285B2 (en) * | 2019-11-20 | 2023-09-05 | Meta Platforms Technologies, Llc | Speech transcription using multiple data sources |
US11636657B2 (en) | 2019-12-19 | 2023-04-25 | Snap Inc. | 3D captions with semantic graphical elements |
US11227442B1 (en) * | 2019-12-19 | 2022-01-18 | Snap Inc. | 3D captions with semantic graphical elements |
US11263817B1 (en) | 2019-12-19 | 2022-03-01 | Snap Inc. | 3D captions with face tracking |
US11908093B2 (en) | 2019-12-19 | 2024-02-20 | Snap Inc. | 3D captions with semantic graphical elements |
US11810220B2 (en) | 2019-12-19 | 2023-11-07 | Snap Inc. | 3D captions with face tracking |
CN111274955A (en) * | 2020-01-20 | 2020-06-12 | 中国地质大学（武汉） | Emotion recognition method and system based on audio-visual feature correlation fusion |
WO2021183142A1 (en) * | 2020-03-13 | 2021-09-16 | Google Llc | Context-based speaker counter for a speaker diarization system |
CN111629267A (en) * | 2020-04-30 | 2020-09-04 | 腾讯科技（深圳）有限公司 | Audio labeling method, device, equipment and computer readable storage medium |
US11373657B2 (en) * | 2020-05-01 | 2022-06-28 | Raytheon Applied Signal Technology, Inc. | System and method for speaker identification in audio data |
CN111708999A (en) * | 2020-05-22 | 2020-09-25 | 湖南映客互娱网络信息有限公司 | Live broadcast customer service authentication method and system based on image comparison |
CN111833884A (en) * | 2020-05-27 | 2020-10-27 | 北京三快在线科技有限公司 | Voiceprint feature extraction method and device, electronic equipment and storage medium |
US11315545B2 (en) | 2020-07-09 | 2022-04-26 | Raytheon Applied Signal Technology, Inc. | System and method for language identification in audio data |
CN111899743A (en) * | 2020-07-31 | 2020-11-06 | 斑马网络技术有限公司 | Method and device for acquiring target sound, electronic equipment and storage medium |
CN112270361A (en) * | 2020-10-30 | 2021-01-26 | 重庆紫光华山智安科技有限公司 | Face data processing method, system, storage medium and equipment |
US20220147722A1 (en) * | 2020-11-10 | 2022-05-12 | Electronics And Telecommunications Research Institute | System and method for automatic speech translation based on zero user interface |
US11977855B2 (en) * | 2020-11-10 | 2024-05-07 | Electronics And Telecommunications Research Institute | System and method for automatic speech translation based on zero user interface |
WO2022256585A3 (en) * | 2021-06-04 | 2023-01-12 | Google Llc | Spatial audio in video conference calls based on content type or participant role |
US11540078B1 (en) | 2021-06-04 | 2022-12-27 | Google Llc | Spatial audio in video conference calls based on content type or participant role |
US20230260520A1 (en) * | 2022-02-15 | 2023-08-17 | Gong.Io Ltd | Method for uniquely identifying participants in a recorded streaming teleconference |
US11978457B2 (en) * | 2022-02-15 | 2024-05-07 | Gong.Io Ltd | Method for uniquely identifying participants in a recorded streaming teleconference |
WO2023229623A1 (en) * | 2022-05-27 | 2023-11-30 | Tencent America LLC | Techniques for end-to-end speaker diarization with generalized neural speaker clustering |
GB2623617A (en) * | 2022-10-17 | 2024-04-24 | Adobe Inc | Face-aware speaker diarization for transcripts and text-based video editing |
Also Published As
Publication number | Publication date |
---|---|
WO2018111374A1 (en) | 2018-06-21 |
US10497382B2 (en) | 2019-12-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10497382B2 (en) | Associating faces with voices for speaker diarization within videos | |
US10621991B2 (en) | Joint neural network for speaker recognition | |
Chung et al. | Spot the conversation: speaker diarisation in the wild | |
Makino et al. | Recurrent neural network transducer for audio-visual speech recognition | |
US11126853B2 (en) | Video to data | |
US10133538B2 (en) | Semi-supervised speaker diarization | |
US9548048B1 (en) | On-the-fly speech learning and computer model generation using audio-visual synchronization | |
US9123330B1 (en) | Large-scale speaker identification | |
US10218954B2 (en) | Video to data | |
US20190043500A1 (en) | Voice based realtime event logging | |
US10037313B2 (en) | Automatic smoothed captioning of non-speech sounds from audio | |
CN108604455B (en) | Automatic determination of timing window for speech captions in an audio stream | |
Nagrani et al. | From benedict cumberbatch to sherlock holmes: Character identification in tv series without a script | |
US9230547B2 (en) | Metadata extraction of non-transcribed video and audio streams | |
CN108648746A (en) | A kind of open field video natural language description generation method based on multi-modal Fusion Features | |
US11790271B2 (en) | Automated evaluation of acting performance using cloud services | |
Minotto et al. | Multimodal multi-channel on-line speaker diarization using sensor fusion through SVM | |
CN114465737B (en) | Data processing method and device, computer equipment and storage medium | |
Ellis et al. | Why we watch the news: a dataset for exploring sentiment in broadcast video news | |
Xu et al. | Ava-avd: Audio-visual speaker diarization in the wild | |
CN113392273A (en) | Video playing method and device, computer equipment and storage medium | |
Tapu et al. | DEEP-HEAR: A multimodal subtitle positioning system dedicated to deaf and hearing-impaired people | |
Azab et al. | Speaker naming in movies | |
CN116708055A (en) | Intelligent multimedia audiovisual image processing method, system and storage medium | |
CA2920795C (en) | Video to data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHAUDHURI, SOURISH;HOOVER, KENNETH;SIGNING DATES FROM 20170428 TO 20170429;REEL/FRAME:042242/0867 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
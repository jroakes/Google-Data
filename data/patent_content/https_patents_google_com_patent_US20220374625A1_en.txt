US20220374625A1 - Machine-Learned Models for Unsupervised Image Transformation and Retrieval - Google Patents
Machine-Learned Models for Unsupervised Image Transformation and Retrieval Download PDFInfo
- Publication number
- US20220374625A1 US20220374625A1 US17/314,738 US202117314738A US2022374625A1 US 20220374625 A1 US20220374625 A1 US 20220374625A1 US 202117314738 A US202117314738 A US 202117314738A US 2022374625 A1 US2022374625 A1 US 2022374625A1
- Authority
- US
- United States
- Prior art keywords
- image
- features
- feature
- feature set
- machine
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000009466 transformation Effects 0.000 title claims abstract description 153
- 238000013507 mapping Methods 0.000 claims abstract description 146
- 239000013598 vector Substances 0.000 claims abstract description 139
- 238000000034 method Methods 0.000 claims abstract description 73
- 238000012545 processing Methods 0.000 claims abstract description 43
- 238000013528 artificial neural network Methods 0.000 claims description 14
- 230000001815 facial effect Effects 0.000 claims description 11
- 230000037237 body shape Effects 0.000 claims description 4
- 230000008569 process Effects 0.000 description 22
- 238000010586 diagram Methods 0.000 description 18
- 238000012549 training Methods 0.000 description 18
- 230000015654 memory Effects 0.000 description 14
- 230000004913 activation Effects 0.000 description 6
- 238000001994 activation Methods 0.000 description 6
- 239000000203 mixture Substances 0.000 description 6
- 238000012935 Averaging Methods 0.000 description 4
- 230000008901 benefit Effects 0.000 description 4
- 238000004891 communication Methods 0.000 description 4
- 238000007796 conventional method Methods 0.000 description 4
- 230000006870 function Effects 0.000 description 4
- 230000000694 effects Effects 0.000 description 3
- 238000013213 extrapolation Methods 0.000 description 3
- 238000009472 formulation Methods 0.000 description 3
- 230000037308 hair color Effects 0.000 description 3
- 210000003128 head Anatomy 0.000 description 3
- 239000003973 paint Substances 0.000 description 3
- 230000000306 recurrent effect Effects 0.000 description 3
- 230000004075 alteration Effects 0.000 description 2
- 238000013459 approach Methods 0.000 description 2
- 238000013527 convolutional neural network Methods 0.000 description 2
- 238000003064 k means clustering Methods 0.000 description 2
- 238000002372 labelling Methods 0.000 description 2
- 238000010801 machine learning Methods 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000009467 reduction Effects 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 238000000844 transformation Methods 0.000 description 2
- 230000009471 action Effects 0.000 description 1
- 238000007792 addition Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 210000000887 face Anatomy 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/16—Human faces, e.g. facial parts, sketches or expressions
- G06V40/168—Feature extraction; Face representation
- G06V40/171—Local features and components; Facial parts ; Occluding parts, e.g. glasses; Geometrical relationships
-
- G06K9/00201—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/60—Type of objects
- G06V20/64—Three-dimensional objects
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/214—Generating training patterns; Bootstrap methods, e.g. bagging or boosting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/23—Clustering techniques
-
- G06K9/00281—
-
- G06K9/00369—
-
- G06K9/6218—
-
- G06K9/6256—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
- G06N20/10—Machine learning using kernel methods, e.g. support vector machines [SVM]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/047—Probabilistic or stochastic networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/088—Non-supervised learning, e.g. competitive learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/70—Determining position or orientation of objects or cameras
- G06T7/73—Determining position or orientation of objects or cameras using feature-based methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/44—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components
- G06V10/443—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components by matching or filtering
- G06V10/449—Biologically inspired filters, e.g. difference of Gaussians [DoG] or Gabor filters
- G06V10/451—Biologically inspired filters, e.g. difference of Gaussians [DoG] or Gabor filters with interaction between the filter responses, e.g. cortical complex cells
- G06V10/454—Integrating the filters into a hierarchical structure, e.g. convolutional neural networks [CNN]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/82—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/103—Static body considered as a whole, e.g. static pedestrian or occupant recognition
Definitions
- the present disclosure relates generally to image transformation and retrieval. More particularly, the present disclosure relates to machine-learned models for image transformation and retrieval in an unsupervised fashion.
- One example aspect of the present disclosure is directed to a computer-implemented method for generation of interpolation vectors for image transformation and retrieval tasks.
- the method can include obtaining, by a computing system comprising one or more computing devices, a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set.
- the method can include processing, by the computing system, the first image with a machine-learned image transformation model comprising a plurality of model channels to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features.
- the method can include processing, by the computing system, the second image with the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features.
- the method can include generating, by the computing system based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
- the computing system can include one or more processors.
- the computing system can include a machine-learned image transformation model trained to perform image transformation tasks, wherein the machine-learned image transformation model comprises an encoding portion, a decoding portion, and a plurality of model channels.
- the computing system can include one or more tangible, non-transitory, computer readable media that collectively store instructions that when executed by the one or more processors cause the one or more processors to perform operations.
- the operations can include obtaining a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set.
- the operations can include processing the first image with the encoding portion of the machine-learned image transformation model to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features.
- the operations can include processing the second image with the encoding portion of the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features.
- the operations can include generating, based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
- Another aspect of the present disclosure is directed to One or more tangible, non-transitory, computer readable media that collectively store instructions that when executed by one or more processors cause the one or more processors to perform operations.
- the operations can include obtaining a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set.
- the operations can include processing the first image with a machine-learned image transformation model to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features.
- the operations can include processing the second image with the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features.
- the operations can include generating, based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
- FIG. 1A depicts a block diagram of an example computing system that performs image transformation and/or image retrieval according to example embodiments of the present disclosure.
- FIG. 1B depicts a block diagram of an example computing device that performs image transformation and/or image retrieval according to example embodiments of the present disclosure.
- FIG. 1C depicts a block diagram of an example computing device that performs training and/or utilization of a machine-learned image transformation model according to example embodiments of the present disclosure.
- FIG. 2 depicts a block diagram of an example machine-learned image transformation model according to example embodiments of the present disclosure.
- FIG. 3 depicts a block diagram of an example machine-learned image transformation model according to example embodiments of the present disclosure.
- FIG. 4A depicts a data flow diagram for generating an interpolation vector according to example embodiments of the present disclosure.
- FIG. 4B depicts a data flow diagram for generating a transformed image with interpolated features according to example embodiments of the present disclosure.
- FIG. 4C depicts a data flow diagram for clustering a plurality of images according to example embodiments of the present disclosure.
- FIG. 5 depicts an example latent direction image transformation according to example embodiments of the present disclosure.
- FIG. 6 depicts an example image transformation with pose interpolation from a reference image to a source image according to example embodiments of the present disclosure.
- FIG. 7 depicts an example image retrieval based on feature-channel mapping according to example embodiments of the present disclosure.
- FIG. 8 depicts a flow chart diagram of an example method to perform generation and utilization of an interpolation vector according to example embodiments of the present disclosure.
- the present disclosure is directed to image transformation and retrieval. More particularly, the present disclosure relates to machine-learned models for image transformation and retrieval in an unsupervised fashion.
- a first image and a second image can be obtained.
- the first and second images can respectively depict a first object and a second object (e.g., a first face and a second face, etc.).
- the first and second objects can be of an object type (e.g., a human face object type, etc.), which can include a plurality of object features (e.g., eye features, nose features, mouth features, pose, etc.).
- the first and second images can be processed with a machine-learned image transformation model that includes a plurality of model channels (e.g., a pre-trained image transformation model, etc.).
- a machine-learned image transformation model that includes a plurality of model channels (e.g., a pre-trained image transformation model, etc.).
- first and second channel mappings can be obtained.
- the first channel mapping can indicate a mapping between the model channels and the first object features
- the second channel mapping can indicate a mapping between the model channels and the second object features.
- an interpolation vector can be generated for a selected feature of the plurality of object features (e.g., a vector for a nose feature of a face object, etc.).
- the interpolation vector can be configured to interpolate the selected feature from the first image to the selected feature of the second image (e.g., interpolating the nose feature from the face of the first image to the face of the second image, etc.). Additionally, or alternatively, in some implementations the interpolation vector can be configured to indicate a similarity between the selected feature from the first object and the selected feature from the second object (e.g., indicating a similarity between the nose of the first face and the nose of the second face, etc.). In such fashion, the interpolation vector can be generated for selective, fine-grained image transformation and/or retrieval without necessitating the complex annotation of training datasets.
- a first image and a second image can be obtained.
- the first image can depict a first object of an object type (e.g., a human face, a room that includes furniture, a vehicle, etc.), and the second image can depict a second object of the object type.
- the first object may be a first face of a human face object type and the second object can be a second human face of the human face object type.
- the first object may be a pickup truck of a vehicle object type and the second object may be a sedan of the vehicle object type.
- the object type can include a plurality of object features.
- a human face object type can include a plurality of facial features (e.g., eye feature(s), nose feature(s), mouth feature(s), feature(s) for a region including a portion of the face, hair feature(s), pose feature(s), head shape feature(s), etc.).
- a vehicle object type can include a plurality of vehicular features (e.g., roof feature(s), wheel feature(s), vehicle shape feature(s), cabin feature(s), etc.).
- a room object type can include a plurality of room features (e.g., furniture objects feature(s), wall feature(s), accessory feature(s), paint feature(s), etc.).
- a human body object type can include a plurality of body features (e.g., body composition feature(s), body shape feature(s), clothing items feature(s), facial feature(s), pose feature(s), etc.).
- body features e.g., body composition feature(s), body shape feature(s), clothing items feature(s), facial feature(s), pose feature(s), etc.
- object type can be any sort of object, and can include any manner of object features that correspond to the object type.
- the first image can be processed with a machine-learned image transformation model.
- the machine-learned image transformation model can include a plurality of model channels.
- the machine-learned image transformation model may include a plurality of channels that are respectively configured to detect a feature of the plurality of object features.
- the object can be a human face object that includes a nose feature, an eyes feature, and a mouth feature.
- the machine-learned image transformation model can include a channel configured to detect nose features, a channel configured to detect eyes features, and a channel configured to detect mouth features.
- the first channel mapping can indicate that two channels from the plurality of model channels are mapped to a nose feature of the first feature set, while three other model channels the plurality of model channels are mapped to a pose feature of the first feature set.
- each model channel of the plurality of model channels can be mapped to a single respective feature of the plurality of features
- conventional transformation models generally assume that the channels of models that make high contributions for particular feature(s) are always the same for each image that includes an object of a specific object type. For example, conventional models assume that for each image including a human face, the channels that contribute to the eyes feature(s) of the face will be the same for each image of a face. Based on this assumption, conventional models generally generate channel contribution scores for a large collection of images N, and then average the scores. However, this conventional method ignores the significant variance in high contribution channels between images.
- averaging contribution scores over a large number of images N can destroy feature aspects that are specific to source images and reference images, therefore significantly reducing the quality of image transformations, while also necessitating the significantly inefficient processing of the large number of images N.
- systems and methods of the present disclosure instead process a source image (e.g., the first image, etc.), and a reference image (e.g., the second image, etc.), therefore avoiding the computational inefficiencies and reduction in quality inherent to conventional image transformation techniques.
- the top active model channels for each image cluster are unique to the feature associated with the image cluster. Therefore, high contribution model channels for a specific semantic feature are not common across images, and instead can include multiple rich semantic meanings. More particularly, within each feature k, there can be multiple subgroups that each image can belong to.
- the machine-learned image transformation model can process the first image (e.g., a reference image r, etc.) to obtain first channel mapping ⁇ h,w A[r] c,h,w 2 ⁇ U[r] k,h,w , where A ⁇ C ⁇ H ⁇ W can be the activation tensor at a particular layer of the machine-learned image transformation model, and C can represent the number of channels, H can represent the height, and W can represent the width. Additionally, each spatial location of A can be associated with cluster memberships U ⁇ 0,1 ⁇ K ⁇ H ⁇ w .
- the first channel mapping can indicate how much the c-th channel of style coefficients ⁇ C can contribute to the generation for a certain feature k of the first feature set of the plurality of object features.
- ⁇ can directly scale the activations A in the modulation module, thus, the larger the activations, the more k is affected by the channel c.
- the machine-learned image transformation model can process the second image (e.g., a source image s, etc.) to obtain second channel mapping ⁇ h,w A[s] c,h,w 2 ⁇ U[s] k,h,w , which can be represented in the same manner as previously discussed with regards to the first channel mapping, and can be indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features. More particularly, the second channel mapping can indicate how much the c-th channel of style coefficients ⁇ C can contribute to the generation for a certain feature k of the second feature set of the plurality of object features.
- An interpolation vector for a selected feature of the plurality of object features can be generated based at least in part on the first channel mapping and the second feature mapping. More particularly, in some implementations, an additional channel mapping can be determined based on the first channel mapping and the second channel mapping as represented by:
- M k , c max ⁇ ( ⁇ h , w A [ s ] c , h , w 2 ⁇ U [ s ] k , h , w , ⁇ h , w A [ r ] c , h , w 2 ⁇ U [ r ] k , h , w )
- each channel of the plurality of model channels can correspond to a respective object feature of the plurality of object features.
- a soft class assignment for each feature channel can be obtained based on a softmax of all features, as represented by:
- M ⁇ [0,1] K ⁇ C can represent the stacked contribution score of all of the plurality of object features
- i can represent the temperature
- q ⁇ [0,1] K ⁇ C can represent the interpolation vector.
- the interpolation vector for a particular feature k, q k can be indexed from the row of q.
- the generated interpolation vector q ⁇ [0,1] K ⁇ c can include a separate interpolation vector q k for each object feature k of the plurality of object features K.
- the interpolation vector can be generated as q k for a selected feature k of the plurality of object features K.
- the interpolation vector can be configured to interpolate the selected feature of the plurality of object features from the first feature set for the plurality of object features to the second feature set for the plurality of object features.
- the interpolation vector q k can be generated for a specific feature k.
- the interpolation vector q k can then be utilized as a mask for k that allows interpolation between the first feature set ⁇ R and the second feature set ⁇ S .
- the interpolation vector q k can be utilized to interpolate the selected feature from the first feature set to the second feature set by processing the first image, the second image, and the interpolation vector with the machine-learned image transformation model to obtain an interpolated image.
- the interpolated image can depict a third object of the object type that includes a third feature set for the plurality of object features.
- the third feature set can include the selected feature from the first feature set and one or more features from the second feature set.
- the third image ⁇ k G can be obtained by processing the first image (e.g., the first feature set ⁇ R , etc.), the second image (e.g., the second feature set ⁇ S , etc.) and the interpolation vector q k with the machine-learned image transformation model as represented by:
- ⁇ k G (1 ⁇ q k ) ⁇ S +q k ⁇ S
- the object type can be a human face object type
- the selected feature can be a pose feature.
- the first image e.g., the reference image, etc.
- the second image e.g., the source image, etc.
- the interpolation vector can map the model channel(s) of the machine-learned image transformation model that correspond to the pose feature.
- the interpolation vector may map the first 4 layers of the machine-learned image transformation model (e.g., 2048 style coefficient channels, etc.) to the pose feature q pose and a hair feature q hair .
- the machine-learned image transformation model e.g., 2048 style coefficient channels, etc.
- data for the pose feature can be derived as represented by:
- the pose feature of the first feature set (e.g., the reference image) can be interpolated to be the pose feature of the second feature set without interpolation of any other features of the first feature set to generate a third image that depicts a third object.
- the third object can include the pose of the first feature set (e.g., looking to the left side of the image) instead of the pose of the second feature set (e.g., looking to the right side of the image, etc.) while maintaining the other features of the second feature set for the plurality of object features (e.g., eye features, mouth features, nose features, etc.).
- data for a feature different than the pose feature can be derived in the same manner.
- the model channels of the first 4 layer(s) mapped to the hair and pose features can be zeroed out or otherwise ignored.
- systems and methods of the present disclosure obviate the need for data labeling or manual tuning of parameters and/or hyperparameters; processes that are required by conventional image transformation techniques for pose interpolation.
- the systems and methods of the present disclosure represent a significant increase in efficiency in comparison to conventional methods, and furthermore substantially reduce the computational resources required to facilitate pose transfer for image transformation (e.g., processing cycles, memory, storage, power, etc.).
- the interpolation vector can be configured to be indicative of a similarity between the selected feature from the first feature set and the selected feature from the second feature set (e.g., a similarity between a hair feature of the first feature set and the hair feature of the second feature set, etc.).
- the interpolation vector can be utilized to retrieve the top-k closest images k ⁇ with respect to a facial feature (e.g., eye features, etc.).
- the first channel mapping and second channel mapping can be utilized to identify the channels that mediate the various features of a specific object type.
- the channel mappings, and/or the interpolation vector can be utilized to retrieve images that depict objects with features (e.g., appearance, etc.) that are similar to the features of the interpolation vector and/or the channel mappings.
- q k ⁇ [0,1] 1 ⁇ C can be encoded, for a particular image, how much that channel contributes to that feature. Since q k can be considered to be a mask, a feature specific representation can be constructed as represented by:
- the interpolation of features from the first feature set to the second feature set using the interpolation vector can be formulated as a latent direction. More particularly, the formulation as a latent direction can be formulated as:
- ⁇ k G ⁇ S + ⁇ q k ⁇ ( ⁇ R ⁇ S )
- scalar step ⁇ is restricted such that ⁇ [0,1]
- ⁇ R can be utilized to allow for style extrapolation (e.g., smooth pose interpolation, etc.).
- a plurality of additional images can be obtained.
- Each of the plurality of images can depict a respective plurality of objects of the object type.
- each of the additional can include a feature set for the plurality of object features.
- a respective additional image can be processed with the machine-learned image transformation model to obtain a respective channel mapping.
- the respective channel mapping can be indicative of a mapping between the plurality of model channels and the feature set of the respective additional image.
- the distance between the features of the two images (e.g., the first image, the second image, the respective additional image, etc.) can be defined as:
- interpolation vector and/or query image ⁇ Q and retrieved image ⁇ R can be normalized using layer-wise mean and standard deviation from ⁇ .
- the first image, the second image, and the plurality of additional images can be clustered based at least in part on the interpolation vector and each of the additional interpolation vectors.
- the machine-learned image transformation model can include multiple model portions.
- the machine-learned image transformation model can include an encoding portion, a decoding portion, and a discriminator portion (e.g., a generative adversarial network (GAN), etc.).
- the encoding portion can be configured to encode an image
- the first image can be processed with the encoding portion of the machine-learned image transformation model to obtain the first channel mapping indicative of the mapping between the model channels and the first feature set for the plurality of object features.
- the decoding portion of the machine-learned image transformation model can be configured to process an encoding of an image (e.g., and/or an interpolation vector, etc.) to generate the third image.
- the machine-learned image transformation model can be or otherwise include one or more neural networks pre-trained for image transformation tasks.
- the machine-learned image transformation model can be or otherwise include a generative adversarial network for realistic image transformation.
- Systems and methods of the present disclosure provide a number of technical effects and benefits.
- the systems and methods of the present disclosure enable a significant advancement in image transformation quality and efficiency in comparison to other approaches.
- conventional image transformation techniques e.g., interpolation of feature(s) from a first image to a second, etc.
- process a large number of images N that depict objects of the same object type to obtain a respective number N of channel contribution scores, and then averaging the channel contribution scores.
- the processing of this large number of images N presents a significant cost in computational resources (e.g., processor cycles, memory, storage, power, etc.).
- this conventional approach ignores that channel contributions for a particular object feature can vary substantially between images, which can destroy the specific effects unique to source and/or reference images and therefore significantly reduce the quality of the image transformation.
- systems and methods of the present disclosure determine channel mappings only for the source image and the reference image, therefore significantly reducing the utilization of computational resources, while also significantly increasing the quality of the image transformation.
- FIG. 1A depicts a block diagram of an example computing system 100 that performs image transformation and/or image retrieval according to example embodiments of the present disclosure.
- the system 100 includes a user computing device 102 , a server computing system 130 , and a training computing system 150 that are communicatively coupled over a network 180 .
- the user computing device 102 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
- a personal computing device e.g., laptop or desktop
- a mobile computing device e.g., smartphone or tablet
- a gaming console or controller e.g., a gaming console or controller
- a wearable computing device e.g., an embedded computing device, or any other type of computing device.
- the user computing device 102 includes one or more processors 112 and a memory 114 .
- the one or more processors 112 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 114 can include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 114 can store data 116 and instructions 118 which are executed by the processor 112 to cause the user computing device 102 to perform operations.
- the user computing device 102 can store or include one or more machine-learned image transformation models 120 .
- the machine-learned image transformation models 120 can be or can otherwise include various machine-learned models such as neural networks (e.g., deep neural networks) or other types of machine-learned models, including non-linear models and/or linear models.
- Neural networks can include feed-forward neural networks, recurrent neural networks (e.g., long short-term memory recurrent neural networks), convolutional neural networks or other forms of neural networks.
- Some example machine-learned models can leverage an attention mechanism such as self-attention.
- some example machine-learned models can include multi-headed self-attention models (e.g., transformer models).
- Example machine-learned image transformation models 120 are discussed with reference to FIGS. 2-4C .
- the one or more machine-learned image transformation models 120 can be received from the server computing system 130 over network 180 , stored in the user computing device memory 114 , and then used or otherwise implemented by the one or more processors 112 .
- the user computing device 102 can implement multiple parallel instances of a single machine-learned image transformation model 120 (e.g., to perform parallel image transformation across multiple instances of the machine-learned image transformation model).
- the machine-learned image transformation model 120 can be utilized at the user computing device 102 for image transformation and retrieval in an unsupervised fashion.
- a first image and a second image can be obtained at the user computing device 102 (e.g., via the network 180 , via image sensor(s) of the user computing device 102 , etc.).
- the first and second images can respectively depict a first object and a second object (e.g., a first face and a second face, etc.).
- the first and second objects can be of an object type (e.g., a human face object type, etc.), which can include a plurality of object features (e.g., eye features, nose features, mouth features, pose, etc.).
- the first and second images can be processed with the machine-learned image transformation model 120 , which can include a plurality of model channels (e.g., a pre-trained image transformation model 120 , etc.).
- the machine-learned image transformation model 120 can include a plurality of model channels (e.g., a pre-trained image transformation model 120 , etc.).
- first and second channel mappings can be obtained.
- the first channel mapping can indicate a mapping between the model channels of the machine-learned image transformation model 120 and the first object features
- the second channel mapping can indicate a mapping between the model channels of the machine-learned image transformation model 120 and the second object features.
- an interpolation vector can be generated using the user computing device 102 for a selected feature of the plurality of object features (e.g., a vector for a nose feature of a face object, etc.).
- the interpolation vector can be configured to interpolate the selected feature from the first image to the selected feature of the second image (e.g., interpolating the nose feature from the face of the first image to the face of the second image, etc.).
- the interpolation vector can be configured to indicate a similarity between the selected feature from the first object and the selected feature from the second object (e.g., indicating a similarity between the nose of the first face and the nose of the second face, etc.). In such fashion, the interpolation vector can be generated for selective, fine-grained image transformation and/or retrieval without necessitating the complex annotation of training datasets.
- one or more machine-learned image transformation models 140 can be included in or otherwise stored and implemented by the server computing system 130 that communicates with the user computing device 102 according to a client-server relationship.
- the machine-learned image transformation models 140 can be implemented by the server computing system 130 as a portion of a web service (e.g., an image transformation and/or image retrieval service).
- a web service e.g., an image transformation and/or image retrieval service.
- one or more models 120 can be stored and implemented at the user computing device 102 and/or one or more models 140 can be stored and implemented at the server computing system 130 .
- the user computing device 102 can also include one or more user input components 122 that receives user input.
- the user input component 122 can be a touch-sensitive component (e.g., a touch-sensitive display screen or a touch pad) that is sensitive to the touch of a user input object (e.g., a finger or a stylus).
- the touch-sensitive component can serve to implement a virtual keyboard.
- Other example user input components include a microphone, a traditional keyboard, or other means by which a user can provide user input.
- the user computing device 102 can include one or more image sensors (e.g., smartphone camera sensors, etc.) that are configured to capture images (e.g., the first image, the second image, etc.).
- the server computing system 130 includes one or more processors 132 and a memory 134 .
- the one or more processors 132 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 134 can include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 134 can store data 136 and instructions 138 which are executed by the processor 132 to cause the server computing system 130 to perform operations.
- the server computing system 130 includes or is otherwise implemented by one or more server computing devices. In instances in which the server computing system 130 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof.
- the server computing system 130 can store or otherwise include one or more machine-learned image transformation models 140 .
- the models 140 can be or can otherwise include various machine-learned models.
- Example machine-learned models include neural networks or other multi-layer non-linear models.
- Example neural networks include feed forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks.
- Some example machine-learned models can leverage an attention mechanism such as self-attention.
- some example machine-learned models can include multi-headed self-attention models (e.g., transformer models).
- Example models 140 are discussed with reference to FIGS. 2-4C .
- the user computing device 102 and/or the server computing system 130 can train the models 120 and/or 140 via interaction with the training computing system 150 that is communicatively coupled over the network 180 .
- the training computing system 150 can be separate from the server computing system 130 or can be a portion of the server computing system 130 .
- the training computing system 150 includes one or more processors 152 and a memory 154 .
- the one or more processors 152 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 154 can include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 154 can store data 156 and instructions 158 which are executed by the processor 152 to cause the training computing system 150 to perform operations.
- the training computing system 150 includes or is otherwise implemented by one or more server computing devices.
- the training computing system 150 can include a model trainer 160 that trains the machine-learned models 120 and/or 140 stored at the user computing device 102 and/or the server computing system 130 using various training or learning techniques, such as, for example, backwards propagation of errors.
- a loss function can be backpropagated through the model(s) to update one or more parameters of the model(s) (e.g., based on a gradient of the loss function).
- Various loss functions can be used such as mean squared error, likelihood loss, cross entropy loss, hinge loss, and/or various other loss functions.
- Gradient descent techniques can be used to iteratively update the parameters over a number of training iterations.
- performing backwards propagation of errors can include performing truncated backpropagation through time.
- the model trainer 160 can perform a number of generalization techniques (e.g., weight decays, dropouts, etc.) to improve the generalization capability of the models being trained.
- the model trainer 160 can train the machine-learned image transformation models 120 and/or 140 based on a set of training data 162 .
- machine-learned image transformation models 120 and/or 140 can be or otherwise include pre-trained image transformation models.
- machine-learned image transformation models 120 and/or 140 can be or otherwise include pre-trained image transformation model(s) configured to perform image transformation tasks (e.g., interpolation of a feature from a first image to a second image, etc.).
- the training examples can be provided by the user computing device 102 .
- the model 120 provided to the user computing device 102 can be trained by the training computing system 150 on user-specific data received from the user computing device 102 . In some instances, this process can be referred to as personalizing the model.
- the model trainer 160 includes computer logic utilized to provide desired functionality.
- the model trainer 160 can be implemented in hardware, firmware, and/or software controlling a general purpose processor.
- the model trainer 160 includes program files stored on a storage device, loaded into a memory and executed by one or more processors.
- the model trainer 160 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM, hard disk, or optical or magnetic media.
- the network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links.
- communication over the network 180 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- FIG. 1A illustrates one example computing system that can be used to implement the present disclosure.
- the user computing device 102 can include the model trainer 160 and the training dataset 162 .
- the models 120 can be both trained and used locally at the user computing device 102 .
- the user computing device 102 can implement the model trainer 160 to personalize the models 120 based on user-specific data.
- FIG. 1B depicts a block diagram of an example computing device 10 that performs image transformation and/or image retrieval according to example embodiments of the present disclosure.
- the computing device 10 can be a user computing device or a server computing device.
- the computing device 10 includes a number of applications (e.g., applications 1 through N). Each application contains its own machine learning library and machine-learned model(s). For example, each application can include a machine-learned model.
- Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc.
- each application can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components.
- each application can communicate with each device component using an API (e.g., a public API).
- the API used by each application is specific to that application.
- FIG. 1C depicts a block diagram of an example computing device 50 that performs training and/or utilization of a machine-learned image transformation model according to example embodiments of the present disclosure.
- the computing device 50 can be a user computing device or a server computing device.
- the computing device 50 includes a number of applications (e.g., applications 1 through N). Each application is in communication with a central intelligence layer.
- Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc.
- each application can communicate with the central intelligence layer (and model(s) stored therein) using an API (e.g., a common API across all applications).
- the central intelligence layer includes a number of machine-learned models. For example, as illustrated in FIG. 1C , a respective machine-learned model can be provided for each application and managed by the central intelligence layer. In other implementations, two or more applications can share a single machine-learned model. For example, in some implementations, the central intelligence layer can provide a single model for all of the applications. In some implementations, the central intelligence layer is included within or otherwise implemented by an operating system of the computing device 50 .
- the central intelligence layer can communicate with a central device data layer.
- the central device data layer can be a centralized repository of data for the computing device 50 . As illustrated in FIG. 1C , the central device data layer can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, the central device data layer can communicate with each device component using an API (e.g., a private API).
- an API e.g., a private API
- FIG. 2 depicts a block diagram of an example machine-learned image transformation model 200 according to example embodiments of the present disclosure.
- the machine-learned image transformation model 200 is trained to receive a set of input data 204 descriptive of an image that depicts an object including a plurality of object features. Additionally, the input data 204 can include a first feature set for the plurality of object features. As a result of receipt of the input data 204 , the machine-learned image transformation model 200 can provide output data 206 that includes a channel mapping indicative of a mapping between a plurality of channels of the machine-learned image transformation model 200 and a feature set of the first image.
- FIG. 3 depicts a block diagram of an example machine-learned image transformation model 300 according to example embodiments of the present disclosure.
- the machine-learned image transformation model 300 is similar to machine-learned image transformation model 200 of FIG. 2 except that machine-learned image transformation model 300 further includes an encoding portion 302 and a decoding portion 306 .
- the encoding portion 302 of the machine-learned image transformation model 300 can process the image data 204 to obtain output data 304 .
- the output data 304 can include the channel mapping as described with regards to FIG. 2 . Additionally, the output data 304 can include an embedding of the image included in the input data 204 .
- the decoding portion 305 of the machine-learned image transformation model 300 can process the embedding included in the output data 304 to generate output data 308 , which can include a transformation of the image included in the input data 204 .
- FIG. 4A depicts a data flow diagram 400 for generating an interpolation vector according to example embodiments of the present disclosure. More particularly, a first image 402 and a second image 404 can be obtained.
- the first image 402 can depict a first object of an object type (e.g., a human face, a room that includes furniture, a vehicle, etc.), and the second image 404 can depict a second object of the object type.
- the first object may be a first face of a human face object type and the second object can be a second human face of the human face object type.
- the first object may be a pickup truck of a vehicle object type and the second object may be a sedan of the vehicle object type.
- the object type can include a plurality of object features.
- a human face object type can include a plurality of facial features (e.g., eye feature(s), nose feature(s), mouth feature(s), feature(s) for a region including a portion of the face, hair feature(s), pose feature(s), head shape feature(s), etc.).
- a vehicle object type can include a plurality of vehicular features (e.g., roof feature(s), wheel feature(s), vehicle shape feature(s), cabin feature(s), etc.).
- a room object type can include a plurality of room features (e.g., furniture feature(s), wall feature(s), accessory feature(s), paint feature(s), etc.).
- a human body object type can include a plurality of body features (e.g., body composition feature(s), body shape feature(s), clothing feature(s), facial feature(s), pose feature(s), etc.).
- body features e.g., body composition feature(s), body shape feature(s), clothing feature(s), facial feature(s), pose feature(s), etc.
- object type can be any sort of object, and can include any manner of object features that correspond to the object type.
- the first image 402 can include a first feature set 402 A for the plurality of object features of the object type
- the second image 404 can include a second feature set 404 A for the plurality of object features of the object type.
- the object type of the objects included in first image 402 and the second image 404 can be a human face, and can include a hair color feature.
- the first feature set 402 A for the plurality of object features can include a brown hair color feature.
- the second feature set 404 A for the plurality of object features can include a blonde hair color feature.
- the feature sets 402 A/ 404 A can be or otherwise include a set of features specific to plurality of object features of the object type.
- the first image 402 can be processed with a machine-learned image transformation model 406 .
- the machine-learned image transformation model 406 can include a plurality of model channels 406 A configured to process images (e.g., first image 402 , second image 404 , etc.).
- the machine-learned image transformation model 406 may include a plurality of model channels 406 A that are respectively configured to detect a feature of the plurality of object features.
- the object can be a human face object that includes a nose feature, an eyes feature, and a mouth feature.
- the machine-learned image transformation model 406 can include a channel 406 A configured to detect nose features, a channel 406 A configured to detect eyes features, and a channel 406 A configured to detect mouth features.
- a first channel mapping 408 can be obtained that is indicative of a mapping between the plurality of model channels 406 A and the first feature set 402 A for the plurality of object features.
- the first channel mapping 408 can indicate that two channels from the plurality of model channels 406 A are mapped to a nose feature of the first feature set 402 A, while three other model channels the plurality of model channels 406 A are mapped to a pose feature of the first feature set 402 A.
- the second image 404 can be processed with the machine to obtain a second channel mapping 410 that is indicative of a mapping between the plurality of model channels 406 A and the second feature set 402 B for the plurality of object features.
- the interpolation vector generator 412 (e.g., a hardware component and/or software component configured to generate an interpolation vector based on channel mappings, etc.) can generate interpolation vector 414 based at least in part on the first channel mapping 408 and the second channel mapping 410 .
- the interpolation vector 414 can be generated for a selected feature from the plurality of object features.
- the interpolation vector 414 can be configured to interpolate the selected feature of the plurality of object features from the first feature set 402 A for the plurality of object features to the second feature set 404 A.
- the interpolation vector 414 can indicate a similarity between the selected feature from the first object of the first image 402 and the selected feature from the second object of the second image 404 .
- FIG. 4B depicts a data flow diagram 401 for generating a transformed image with interpolated features according to example embodiments of the present disclosure.
- the interpolation vector 414 q k can be generated for a specific feature k of the plurality of object features K, which correspond to the first feature set 402 A of first image 402 and the second feature set 402 B of second image 404 .
- the interpolation vector 414 q k can then be utilized as a mask for k that allows interpolation between the first feature set 402 A ⁇ R and the second feature set 404 A ⁇ S .
- the interpolation vector 414 q k can be utilized to interpolate a selected feature from the first feature set 402 A of the first image 402 to the second feature set 404 B of the second image 404 by processing the first image 402 , the second image 404 , and the interpolation vector 414 with the machine-learned image transformation model 406 to obtain an interpolated third image 416 .
- the third image 416 can depict a third object of the object type, and can include a third feature set 416 A for the plurality of object features.
- the third feature set 416 A can include the selected feature from the first feature set 402 A and one or more features from the second feature set 404 A for the plurality of object features.
- the third image 416 ⁇ k G can be obtained by processing the first image 402 (e.g., the first feature set 402 A ⁇ R , etc.), the second image 404 (e.g., the second feature set 404 A ⁇ S , etc.) and the interpolation vector 414 q k with the machine-learned image transformation model 406 as represented by:
- the object type can be a human face object type
- the selected feature can be a pose feature.
- the first image 402 e.g., the reference image, etc.
- the second image 404 e.g., the source image, etc.
- the interpolation vector 414 can map the model channel(s) 406 A of the machine-learned image transformation model 406 that correspond to the pose feature.
- the interpolation vector may map the first 4 layers of the machine-learned image transformation model 406 (e.g., 2048 style coefficient channels, etc.) to the pose feature q pose and a hair feature q hair .
- data for the pose feature can be derived as represented by:
- the pose feature of the first feature set 402 A (e.g., the reference image) can be interpolated to be the pose feature of the second feature set 404 A without interpolation of any other features of the first feature set 402 A to generate the third image 416 that depicts a third object with a third feature set 416 A.
- the third object can include the pose of the first feature set 402 A (e.g., looking to the left side of the image) instead of the pose of the second feature set 404 A (e.g., looking to the right side of the image, etc.) while maintaining the other features of the second feature set for the plurality of object features within the third feature set 416 A (e.g., eye features, mouth features, nose features, etc.).
- FIG. 4C depicts a data flow diagram 403 for clustering a plurality of images according to example embodiments of the present disclosure. More particularly, first image 402 can be processed with the machine-learned image transformation model 406 to obtain the first channel mapping as previously described with regards to FIG. 4A .
- the interpolation vector 414 can be based at least in part on the first channel mapping 408 as previously described with regards to FIG. 4A .
- a plurality of additional images 418 can be obtained.
- Each of the additional images 418 can depict a respective plurality of objects of the object type (e.g., the type of first image 402 , etc.).
- the additional images 418 can include feature sets 418 A for the plurality of object features.
- a respective additional image 418 can be processed with the machine-learned image transformation model 406 to obtain a respective plurality of additional channel mapping 420 .
- the plurality of additional channel mappings 420 can be indicative of mappings between the plurality of model channels 406 A and the feature sets 418 A of the additional images 418 .
- the first channel mapping 408 (e.g., a query mapping, etc.) and each of the additional channel mappings 420 can be processed with the interpolation vector generator 422 to obtain a respective plurality of additional interpolation vectors 424 for the plurality of additional channel mappings 420 .
- the distance between the features of the first image 402 and each of the additional images 418 can be defined as:
- d can represent the additional interpolation vectors 424 , which each can indicate a distance metric.
- the image cluster determinator can receive the interpolation vector 414 and the additional interpolation vectors 424 , and can rank the vectors 414 / 424 for nearest neighbor search for feature k.
- an additional interpolation vector 424 can be generated for the first image 402 and a particular additional image 418 . If there is a M k and consequently, a q k mismatch between the first image 402 and the particular additional image 418 , the distance indicated by the additional interpolation vector 424 will be large. As discussed previously, similar features can generally express similar M k . As such, it follows that smaller distance under the distance metric d of the additional interpolation vectors 424 will reflect more similar features.
- the image cluster determinator 426 can cluster the first image 402 and the additional images 418 in image cluster(s) 428 .
- the selected feature can be or otherwise include a hair feature for a human face object type.
- the plurality of additional images can depict a respective plurality of human face object types.
- the additional interpolation vectors can be generated for each of the additional images.
- the additional images can be clustered to obtain one or more submembership clusters.
- Each of the one or more submembership clusters can be associated with an aspect of the selected feature. For example, a submembership cluster can be associated with a blonde color aspect of the selected hair feature. As another example, a submembership cluster can be associated with a long length aspect of the selected hair feature. As yet another example, a submembership cluster can be associated with a frizzled texture aspect of the selected hair feature.
- aspects of a mouth feature can include lipstick aspects, mouth size aspects, mouth positioning aspects, etc.
- aspects of an eyes feature can include color aspects, positioning aspects, eye spacing aspects, eye size aspects, etc.
- aspects of a vehicle shape feature can include color aspects, a reflectance aspect, wheel spacing aspects, tire offset aspects, height aspects, width aspects, profile aspects, etc.
- aspects of a selected feature can be or otherwise include any describable aspect of the selected feature.
- FIG. 5 depicts an example latent direction image transformation 500 according to example embodiments of the present disclosure. More particularly, source image 504 and reference image 502 can be interposed such that the pose feature of reference image 502 can be interpolated to the pose of source image 504 . As depicted, the interpolation of features from the feature set of the reference image to the feature set of the source image using an interpolation vector can be formulated as a latent direction.
- the formulation as a latent direction can be formulated as:
- ⁇ k G ⁇ S + ⁇ q k ⁇ ( ⁇ R ⁇ S )
- scalar step ⁇ is restricted such that ⁇ [0,1]
- ⁇ R can be utilized to allow for style extrapolation (e.g., smooth pose interpolation, etc.).
- the latent direction step size A 503 can be set at a relatively low step size (e.g., 0.25, etc.) to facilitate a relatively low interpolation of the pose feature from reference image 502 to source image 504 .
- the level of feature interpolation applied to the source image 504 can be adjusted to latent direction step size A 503 , which can implement a relatively minor pose feature transformation to generate transformed image 506 .
- the latent direction step size B 505 can be set at a moderate step size (e.g., 0.5, etc.) to facilitate a moderate interpolation of the pose feature from reference image 502 to source image 504 .
- the latent direction step size C 507 can be set at a relatively high step size (e.g., 0.75, etc.) to facilitate a relatively high interpolation of the pose feature from reference image 502 to source image 504 .
- the latent direction step size D 509 can be set at a full step size (e.g., 1.0, etc.) to facilitate a full interpolation of the pose feature from reference image 502 to source image 504 .
- FIG. 6 depicts an example image transformation 600 with pose interpolation from a reference image to a source image according to example embodiments of the present disclosure. More particularly, one or more features can be interpolated from a reference image 604 to a source image 602 .
- an interpolation vector can be generated as previously described with regards to FIG. 4A .
- the interpolation vector can be processed alongside the source image 602 and the 604 to interpolate one or more features from the reference image to the source image.
- the interpolation vector can be generated for a selected eyes feature.
- the vector can be processed alongside images 602 and 604 to generate transformed image 606 , which includes the eye features of reference image 604 and the remaining features of source image 602 .
- the interpolation vector can be generated for a selected nose feature.
- the vector can be processed alongside images 602 and 604 to generate transformed image 608 , which includes the nose features of reference image 604 and the remaining features of source image 602 .
- the interpolation vector can be generated for a selected mouth feature.
- the vector can be processed alongside images 602 and 604 to generate transformed image 610 , which includes the mouth features of reference image 604 and the remaining features of source image 602 .
- the interpolation vector can be selectively utilized to facilitate an efficient, high-quality interpolation of one or more features from a reference image to a source image while retaining the remaining features of the source image.
- FIG. 7 depicts an example image retrieval 700 based on feature-channel mapping according to example embodiments of the present disclosure.
- a channel mapping can be generated using a machine-learned image transformation model for the query image 702 .
- Additional channel mappings can be generated similarly for a plurality of additional images (e.g., result images 704 , etc.).
- An interpolation vector can be generated for each of the additional images based on the first channel mapping and a respective channel mapping of each of the additional images.
- the interpolation vectors can indicate a similarity between a selected feature of the query image 702 and the additional images.
- the selected feature can be a mouth feature of a human face object type.
- Result images 704 can be retrieved based on the similarity indicated by their respective interpolation vectors. In such fashion, the interpolation vector generated for the additional images can be utilized to retrieve result images 704 with a substantially similar feature appearance to the query image 702 .
- a channel mapping can be generated for query image 706 .
- Interpolation vectors can be generated for each of the additional images based on the channel mappings of the query image 706 and the additional images.
- the interpolation vector generated for query image 706 can be generated for the mouth feature of a human face object type.
- Result images 708 can be retrieved based on the feature similarity indicated by their respective interpolation vectors.
- FIG. 8 depicts a flow chart diagram of an example method 800 to perform generation and utilization of an interpolation vector according to example embodiments of the present disclosure.
- FIG. 8 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement.
- the various steps of the method 800 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
- a computing system can obtain a first image depicting a first object and a second image depicting a second object. More particularly, the computing system can obtain a first image and a second image.
- the first image can depict a first object of an object type (e.g., a human face, a room that includes furniture, a vehicle, etc.), and the second image can depict a second object of the object type.
- the first object may be a first face of a human face object type and the second object can be a second human face of the human face object type.
- the first object may be a pickup truck of a vehicle object type and the second object may be a sedan of the vehicle object type.
- the object type can include a plurality of object features.
- a human face object type can include a plurality of facial features (e.g., eye feature(s), nose feature(s), mouth feature(s), feature(s) for a region including a portion of the face, hair feature(s), pose feature(s), head shape feature(s), etc.).
- a vehicle object type can include a plurality of vehicular features (e.g., roof feature(s), wheel feature(s), vehicle shape feature(s), cabin feature(s), etc.).
- a room object type can include a plurality of room features (e.g., furniture feature(s), wall feature(s), accessory feature(s), paint feature(s), etc.).
- a human body object type can include a plurality of body features (e.g., body composition feature(s), body shape feature(s), clothing feature(s), facial feature(s), pose feature(s), etc.).
- body features e.g., body composition feature(s), body shape feature(s), clothing feature(s), facial feature(s), pose feature(s), etc.
- object type can be any sort of object, and can include any manner of object features that correspond to the object type.
- the computing system can process the first image to obtain a first channel mapping. More particularly, the computing system can process the first image with a machine-learned image transformation model.
- the machine-learned image transformation model can include a plurality of model channels.
- the machine-learned image transformation model may include a plurality of channels that are respectively configured to detect a feature of the plurality of object features.
- the object can be a human face object that includes a nose feature, an eyes feature, and a mouth feature.
- the machine-learned image transformation model can include a channel configured to detect nose features, a channel configured to detect eyes features, and a channel configured to detect mouth features.
- a first channel mapping can be obtained that is indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features.
- the first channel mapping can indicate that two channels from the plurality of model channels are mapped to a nose feature of the first feature set, while three other model channels the plurality of model channels are mapped to a pose feature of the first feature set.
- each model channel of the plurality of model channels can be mapped to a single respective feature of the plurality of features
- conventional transformation models generally assume that the channels of models that make high contributions for particular feature(s) are always the same for each image that includes an object of a specific object type. For example, conventional models assume that for each image including a human face, the channels that contribute to the eyes feature(s) of the face will be the same for each image of a face. Based on this assumption, conventional models generally generate channel contribution scores for a large collection of images N, and then average the scores. However, this conventional method ignores the significant variance in high contribution channels between images.
- averaging contribution scores over a large number of images N can destroy feature aspects that are specific to source images and reference images, therefore significantly reducing the quality of image transformations, while also necessitating the significantly inefficient processing of the large number of images N.
- systems and methods of the present disclosure instead process a source image (e.g., the first image, etc.), and a reference image (e.g., the second image, etc.), therefore avoiding the computational inefficiencies and reduction in quality inherent to conventional image transformation techniques.
- the top active model channels for each image cluster are unique to the feature associated with the image cluster. Therefore, high contribution model channels for a specific semantic feature are not common across images, and instead can include multiple rich semantic meanings. More particularly, within each feature k, there can be multiple subgroups that each image can belong to.
- the machine-learned image transformation model can process the first image (e.g., a reference image r, etc.) to obtain first channel mapping ⁇ h,w A[r] c,h,w 2 ⁇ U[r] k,h,w , where A ⁇ C ⁇ H ⁇ W can be the activation tensor at a particular layer of the machine-learned image transformation model, and C can represent the number of channels, H can represent the height, and W can represent the width. Additionally, each spatial location of A can be associated with cluster memberships U ⁇ 0,1 ⁇ K ⁇ H ⁇ W .
- the first channel mapping can indicate how much the c-th channel of style coefficients ⁇ C can contribute to the generation for a certain feature k of the first feature set of the plurality of object features.
- ⁇ can directly scale the activations A in the modulation module, thus, the larger the activations, the more k is affected by the channel c.
- the computing system can process the second image to obtain a second channel mapping. More particularly, the computing system can process the second image (e.g., a source image s, etc.) with the machine-learned image transformation model to obtain second channel mapping ⁇ h,w A[s] c,h,w 2 ⁇ U[s] k,h,w , which can be represented in the same manner as previously discussed with regards to the first channel mapping, and can be indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features. More particularly, the second channel mapping can indicate how much the c-th channel of style coefficients a ⁇ C can contribute to the generation for a certain feature k of the second feature set of the plurality of object features.
- the second image e.g., a source image s, etc.
- the computing system can generate an interpolation vector. More particularly, the computing system can generate an interpolation vector for a selected feature of the plurality of object features based at least in part on the first channel mapping and the second feature mapping. In some implementations, an additional channel mapping can be determined based on the first channel mapping and the second channel mapping as represented by:
- M k , c max ⁇ ( ⁇ h , w A [ s ] c , h , w 2 ⁇ U [ s ] k , h , w , ⁇ h , w A [ r ] c , h , w 2 ⁇ U [ r ] k , h , w )
- each channel of the plurality of model channels can correspond to a respective object feature of the plurality of object features.
- a soft class assignment for each feature channel can be obtained based on a softmax of all features, as represented by:
- M ⁇ [0,1] K ⁇ C can represent the stacked contribution score of all of the plurality of object features
- i can represent the temperature
- q ⁇ [0,1] K ⁇ C can represent the interpolation vector.
- the interpolation vector for a particular feature k, q k can be indexed from the row of q.
- the generated interpolation vector q ⁇ [0,1] K ⁇ C can include a separate interpolation vector q k for each object feature k of the plurality of object features K.
- the interpolation vector can be generated as q k for a selected feature k of the plurality of object features K.
- the computing system can, in some implementations, process the first and second image and the interpolation vector to obtain an interpolated image. More particularly, in some implementations, the interpolation vector can be configured to interpolate the selected feature of the plurality of object features from the first feature set for the plurality of object features to the second feature set for the plurality of object features.
- the interpolation vector q k can be generated for a specific feature k. The interpolation vector q k can then be utilized as a mask for k that allows interpolation between the first feature set ⁇ R and the second feature set ⁇ S .
- the interpolation vector q k can be utilized to interpolate the selected feature from the first feature set to the second feature set by processing the first image, the second image, and the interpolation vector with the machine-learned image transformation model to obtain an interpolated image.
- the interpolated image can depict a third object of the object type that includes a third feature set for the plurality of object features.
- the third feature set can include the selected feature from the first feature set and one or more features from the second feature set.
- the third image ⁇ k G can be obtained by processing the first image (e.g., the first feature set ⁇ R , etc.), the second image (e.g., the second feature set ⁇ S , etc.) and the interpolation vector q k with the machine-learned image transformation model as represented by:
- the object type can be a human face object type
- the selected feature can be a pose feature.
- the first image e.g., the reference image, etc.
- the second image e.g., the source image, etc.
- the interpolation vector can map the model channel(s) of the machine-learned image transformation model that correspond to the pose feature.
- the interpolation vector may map the first 4 layers of the machine-learned image transformation model (e.g., 2048 style coefficient channels, etc.) to the pose feature q pose and a hair feature q hair .
- the machine-learned image transformation model e.g., 2048 style coefficient channels, etc.
- data for the pose feature can be derived as represented by:
- the pose feature of the first feature set (e.g., the reference image) can be interpolated to be the pose feature of the second feature set without interpolation of any other features of the first feature set to generate a third image that depicts a third object.
- the third object can include the pose of the first feature set (e.g., looking to the left side of the image) instead of the pose of the second feature set (e.g., looking to the right side of the image, etc.) while maintaining the other features of the second feature set for the plurality of object features (e.g., eye features, mouth features, nose features, etc.).
- data for a feature different than the pose feature can be derived in the same manner.
- the model channels of the first 4 layer(s) mapped to the hair and pose features can be zeroed out or otherwise ignored.
- systems and methods of the present disclosure obviate the need for data labeling or manual tuning of parameters and/or hyperparameters; processes that are required by conventional image transformation techniques for pose interpolation.
- the systems and methods of the present disclosure represent a significant increase in efficiency in comparison to conventional methods, and furthermore substantially reduce the computational resources required to facilitate pose transfer for image transformation (e.g., processing cycles, memory, storage, power, etc.).
- the computing system can, in some implementations, obtain a plurality of additional images. More particularly, the computing system can obtain a plurality of additional images. Each of the plurality of images can depict a respective plurality of objects of the object type. Additionally, each of the additional can include a feature set for the plurality of object features.
- the computing system can, in some implementations, process the additional images to obtain channel mappings and generate additional interpolation vectors. More particularly, the computing system can, for each of the plurality of additional images, process a respective additional image with the machine-learned image transformation model to obtain a respective channel mapping.
- the respective channel mapping can be indicative of a mapping between the plurality of model channels and the feature set of the respective additional image.
- the computing system can cluster the first image, the second image, and the plurality of additional images.
- the interpolation vector can be configured to be indicative of a similarity between the selected feature from the first feature set and the selected feature from the second feature set (e.g., a similarity between a hair feature of the first feature set and the hair feature of the second feature set, etc.).
- the interpolation vector can be utilized to retrieve the top-k closest images ⁇ with respect to a facial feature (e.g., eye features, etc.).
- the first channel mapping and second channel mapping can be utilized to identify the channels that mediate the various features of a specific object type.
- the channel mappings, and/or the interpolation vector can be utilized to retrieve images that depict objects with features (e.g., appearance, etc.) that are similar to the features of the interpolation vector and/or the channel mappings.
- q k ⁇ [0,1] 1 ⁇ C can be encoded, for a particular image, how much that channel contributes to that feature. Since q k can be considered to be a mask, a feature specific representation can be constructed as represented by:
- the interpolation of features from the first feature set to the second feature set using the interpolation vector can be formulated as a latent direction. More particularly, the formulation as a latent direction can be formulated as:
- ⁇ k G ⁇ S + ⁇ q k ⁇ ( ⁇ R ⁇ S )
- scalar step ⁇ is restricted such that ⁇ [0,1]
- ⁇ R can be utilized to allow for style extrapolation (e.g., smooth pose interpolation, etc.).
- the computing system can cluster the images based at least in part on the distances between the images indicated by the additional interpolation vectors.
- the distance between the features of the two images e.g., the first image, the second image, the respective additional image, etc.
- the distance between the features of the two images can be defined as:
- interpolation vector and/or query image ⁇ Q and retrieved image ⁇ R can be normalized using layer-wise mean and standard deviation from E.
- the first image, the second image, and the plurality of additional images can be clustered based at least in part on the interpolation vector and each of the additional interpolation vectors.
- the technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems.
- the inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components.
- processes discussed herein can be implemented using a single device or component or multiple devices or components working in combination.
- Databases and applications can be implemented on a single system or distributed across multiple systems. Distributed components can operate sequentially or in parallel.
Abstract
Systems and methods of the present disclosure are directed to a computer-implemented method. The method can include obtaining a first image depicting a first object and a second image depicting a second object, wherein the first object comprises a first feature set and the second object comprises a second feature set. The method can include processing the first image with a machine-learned image transformation model comprising a plurality of model channels to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set. The method can include processing the second image with the model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set. The method can include generating an interpolation vector for a selected feature.
Description
- The present disclosure relates generally to image transformation and retrieval. More particularly, the present disclosure relates to machine-learned models for image transformation and retrieval in an unsupervised fashion.
- Recent advancements in machine learning have allowed for the generation of realistic high resolution images, particularly for certain types of entities (e.g., faces, etc.). However, the outputs of these machine-learned models are generally considered to be difficult or impossible to control. More particularly, fine-tuned control of specific features of a transformed entity (e.g., eyes, mouth, nose, pose, etc.) generally necessitates in-depth annotation of training datasets to a degree of specificity that is prohibitively difficult. As such, machine-learned models capable of unsupervised, fine-tuned transformation of specific features are desired.
- Aspects and advantages of embodiments of the present disclosure will be set forth in part in the following description, or can be learned from the description, or can be learned through practice of the embodiments.
- One example aspect of the present disclosure is directed to a computer-implemented method for generation of interpolation vectors for image transformation and retrieval tasks. The method can include obtaining, by a computing system comprising one or more computing devices, a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set. The method can include processing, by the computing system, the first image with a machine-learned image transformation model comprising a plurality of model channels to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features. The method can include processing, by the computing system, the second image with the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features. The method can include generating, by the computing system based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features. Another aspect of the present disclosure is directed to A computing system for generation of interpolation vectors for image transformation and retrieval tasks. The computing system can include one or more processors. The computing system can include a machine-learned image transformation model trained to perform image transformation tasks, wherein the machine-learned image transformation model comprises an encoding portion, a decoding portion, and a plurality of model channels. The computing system can include one or more tangible, non-transitory, computer readable media that collectively store instructions that when executed by the one or more processors cause the one or more processors to perform operations. The operations can include obtaining a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set. The operations can include processing the first image with the encoding portion of the machine-learned image transformation model to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features. The operations can include processing the second image with the encoding portion of the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features. The operations can include generating, based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
- Another aspect of the present disclosure is directed to One or more tangible, non-transitory, computer readable media that collectively store instructions that when executed by one or more processors cause the one or more processors to perform operations. The operations can include obtaining a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set. The operations can include processing the first image with a machine-learned image transformation model to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features. The operations can include processing the second image with the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features. The operations can include generating, based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
- Other aspects of the present disclosure are directed to various systems, apparatuses, non-transitory computer-readable media, user interfaces, and electronic devices.
- These and other features, aspects, and advantages of various embodiments of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate example embodiments of the present disclosure and, together with the description, serve to explain the related principles.
- Detailed discussion of embodiments directed to one of ordinary skill in the art is set forth in the specification, which makes reference to the appended figures, in which:
-
FIG. 1A depicts a block diagram of an example computing system that performs image transformation and/or image retrieval according to example embodiments of the present disclosure. -
FIG. 1B depicts a block diagram of an example computing device that performs image transformation and/or image retrieval according to example embodiments of the present disclosure. -
FIG. 1C depicts a block diagram of an example computing device that performs training and/or utilization of a machine-learned image transformation model according to example embodiments of the present disclosure. -
FIG. 2 depicts a block diagram of an example machine-learned image transformation model according to example embodiments of the present disclosure. -
FIG. 3 depicts a block diagram of an example machine-learned image transformation model according to example embodiments of the present disclosure. -
FIG. 4A depicts a data flow diagram for generating an interpolation vector according to example embodiments of the present disclosure. -
FIG. 4B depicts a data flow diagram for generating a transformed image with interpolated features according to example embodiments of the present disclosure. -
FIG. 4C depicts a data flow diagram for clustering a plurality of images according to example embodiments of the present disclosure. -
FIG. 5 depicts an example latent direction image transformation according to example embodiments of the present disclosure. -
FIG. 6 depicts an example image transformation with pose interpolation from a reference image to a source image according to example embodiments of the present disclosure. -
FIG. 7 depicts an example image retrieval based on feature-channel mapping according to example embodiments of the present disclosure. -
FIG. 8 depicts a flow chart diagram of an example method to perform generation and utilization of an interpolation vector according to example embodiments of the present disclosure. - Reference numerals that are repeated across plural figures are intended to identify the same features in various implementations.
- Generally, the present disclosure is directed to image transformation and retrieval. More particularly, the present disclosure relates to machine-learned models for image transformation and retrieval in an unsupervised fashion. As an example, a first image and a second image can be obtained. The first and second images can respectively depict a first object and a second object (e.g., a first face and a second face, etc.). The first and second objects can be of an object type (e.g., a human face object type, etc.), which can include a plurality of object features (e.g., eye features, nose features, mouth features, pose, etc.). The first and second images can be processed with a machine-learned image transformation model that includes a plurality of model channels (e.g., a pre-trained image transformation model, etc.). By processing the first and second images, first and second channel mappings can be obtained. The first channel mapping can indicate a mapping between the model channels and the first object features, and the second channel mapping can indicate a mapping between the model channels and the second object features. Based on the first and second channel mappings, an interpolation vector can be generated for a selected feature of the plurality of object features (e.g., a vector for a nose feature of a face object, etc.). In some implementations, the interpolation vector can be configured to interpolate the selected feature from the first image to the selected feature of the second image (e.g., interpolating the nose feature from the face of the first image to the face of the second image, etc.). Additionally, or alternatively, in some implementations the interpolation vector can be configured to indicate a similarity between the selected feature from the first object and the selected feature from the second object (e.g., indicating a similarity between the nose of the first face and the nose of the second face, etc.). In such fashion, the interpolation vector can be generated for selective, fine-grained image transformation and/or retrieval without necessitating the complex annotation of training datasets.
- More particularly, a first image and a second image can be obtained. The first image can depict a first object of an object type (e.g., a human face, a room that includes furniture, a vehicle, etc.), and the second image can depict a second object of the object type. As an example, the first object may be a first face of a human face object type and the second object can be a second human face of the human face object type. As another example, the first object may be a pickup truck of a vehicle object type and the second object may be a sedan of the vehicle object type. The object type can include a plurality of object features. As an example, a human face object type can include a plurality of facial features (e.g., eye feature(s), nose feature(s), mouth feature(s), feature(s) for a region including a portion of the face, hair feature(s), pose feature(s), head shape feature(s), etc.). As another example, a vehicle object type can include a plurality of vehicular features (e.g., roof feature(s), wheel feature(s), vehicle shape feature(s), cabin feature(s), etc.). As another example, a room object type can include a plurality of room features (e.g., furniture objects feature(s), wall feature(s), accessory feature(s), paint feature(s), etc.). As yet another example, a human body object type can include a plurality of body features (e.g., body composition feature(s), body shape feature(s), clothing items feature(s), facial feature(s), pose feature(s), etc.). As such, it should be broadly understood that the object type can be any sort of object, and can include any manner of object features that correspond to the object type.
- The first image can be processed with a machine-learned image transformation model. The machine-learned image transformation model can include a plurality of model channels. As an example, the machine-learned image transformation model may include a plurality of channels that are respectively configured to detect a feature of the plurality of object features. For example, the object can be a human face object that includes a nose feature, an eyes feature, and a mouth feature. The machine-learned image transformation model can include a channel configured to detect nose features, a channel configured to detect eyes features, and a channel configured to detect mouth features. By processing the first image, a first channel mapping can be obtained that is indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features. As an example, the first channel mapping can indicate that two channels from the plurality of model channels are mapped to a nose feature of the first feature set, while three other model channels the plurality of model channels are mapped to a pose feature of the first feature set. Alternatively, in some implementations, each model channel of the plurality of model channels can be mapped to a single respective feature of the plurality of features
- As a more particular example, conventional transformation models generally assume that the channels of models that make high contributions for particular feature(s) are always the same for each image that includes an object of a specific object type. For example, conventional models assume that for each image including a human face, the channels that contribute to the eyes feature(s) of the face will be the same for each image of a face. Based on this assumption, conventional models generally generate channel contribution scores for a large collection of images N, and then average the scores. However, this conventional method ignores the significant variance in high contribution channels between images. More particularly, averaging contribution scores over a large number of images N can destroy feature aspects that are specific to source images and reference images, therefore significantly reducing the quality of image transformations, while also necessitating the significantly inefficient processing of the large number of images N. As such, As such, systems and methods of the present disclosure instead process a source image (e.g., the first image, etc.), and a reference image (e.g., the second image, etc.), therefore avoiding the computational inefficiencies and reduction in quality inherent to conventional image transformation techniques.
- More particularly, it can be assumed that performance of k-means clustering over a specific feature of a plurality of images of the same object type (e.g., clustering over hair Mhair (N=1) for images that depict a human face object type, etc.) can lead to semantically meaningful clusters of images. As such, it can also be assumed that the top active model channels for each image cluster are unique to the feature associated with the image cluster. Therefore, high contribution model channels for a specific semantic feature are not common across images, and instead can include multiple rich semantic meanings. More particularly, within each feature k, there can be multiple subgroups that each image can belong to. As such, unlike conventional models which process a large number of images N and average contribution scores, systems and methods of the present disclosure can facilitate more accurate, more efficient, and more realistic image transformation and/or retrieval by processing channel mappings for only the source image and the reference image N=2 (e.g., the first image, the second image, etc.).
- As an example, the machine-learned image transformation model can process the first image (e.g., a reference image r, etc.) to obtain first channel mapping Σh,wA[r]c,h,w 2⊙U[r]k,h,w, where A∈
- Additionally, the machine-learned image transformation model can process the second image (e.g., a source image s, etc.) to obtain second channel mapping Σh,wA[s]c,h,w 2⊙U[s]k,h,w, which can be represented in the same manner as previously discussed with regards to the first channel mapping, and can be indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features. More particularly, the second channel mapping can indicate how much the c-th channel of style coefficients σ∈
- An interpolation vector for a selected feature of the plurality of object features can be generated based at least in part on the first channel mapping and the second feature mapping. More particularly, in some implementations, an additional channel mapping can be determined based on the first channel mapping and the second channel mapping as represented by:
-
- Where Mk,c can represent the additional channel mapping. In some implementations, each channel of the plurality of model channels can correspond to a respective object feature of the plurality of object features. A soft class assignment for each feature channel can be obtained based on a softmax of all features, as represented by:
-
- where M∈[0,1]K×C can represent the stacked contribution score of all of the plurality of object features, i can represent the temperature, and q∈[0,1]K×C can represent the interpolation vector. The interpolation vector for a particular feature k, qk can be indexed from the row of q. As such, in some implementations, the generated interpolation vector q∈[0,1]K×c can include a separate interpolation vector qk for each object feature k of the plurality of object features K. Alternatively, in some implementations, the interpolation vector can be generated as qk for a selected feature k of the plurality of object features K.
- In some implementations, the interpolation vector can be configured to interpolate the selected feature of the plurality of object features from the first feature set for the plurality of object features to the second feature set for the plurality of object features. To follow the previous examples, the interpolation vector qk can be generated for a specific feature k. The interpolation vector qk can then be utilized as a mask for k that allows interpolation between the first feature set σR and the second feature set σS. In some implementations, the interpolation vector qk can can be utilized to interpolate the selected feature from the first feature set to the second feature set by processing the first image, the second image, and the interpolation vector with the machine-learned image transformation model to obtain an interpolated image. The interpolated image can depict a third object of the object type that includes a third feature set for the plurality of object features. The third feature set can include the selected feature from the first feature set and one or more features from the second feature set. To follow the previously described example, the third image σk G can be obtained by processing the first image (e.g., the first feature set σR, etc.), the second image (e.g., the second feature set σS, etc.) and the interpolation vector qk with the machine-learned image transformation model as represented by:
-
σk G=(1−q k)⊙σS +q k⊙σS - In some implementations, the object type can be a human face object type, and the selected feature can be a pose feature. As an example, the first image (e.g., the reference image, etc.) can depict a human face at a pose in which the face is looking to the left side of the image, and the second image (e.g., the source image, etc.) can depict a human face at a pose in which the face is looking to the right side of the image. The interpolation vector can map the model channel(s) of the machine-learned image transformation model that correspond to the pose feature. For example, the interpolation vector may map the first 4 layers of the machine-learned image transformation model (e.g., 2048 style coefficient channels, etc.) to the pose feature qpose and a hair feature qhair. For these 4 layers, data for the pose feature can be derived as represented by:
-
q pose=1−q hair - for the first 4 layers, while the rest of the model channels of the machine-learned image transformation model are zeroed out or otherwise ignored. In such fashion, the pose feature of the first feature set (e.g., the reference image) can be interpolated to be the pose feature of the second feature set without interpolation of any other features of the first feature set to generate a third image that depicts a third object. The third object can include the pose of the first feature set (e.g., looking to the left side of the image) instead of the pose of the second feature set (e.g., looking to the right side of the image, etc.) while maintaining the other features of the second feature set for the plurality of object features (e.g., eye features, mouth features, nose features, etc.).
- Similarly, data for a feature different than the pose feature can be derived in the same manner. To follow the previous example, to derive the data for the feature, the model channels of the first 4 layer(s) mapped to the hair and pose features can be zeroed out or otherwise ignored. It should be noted that by transferring pose feature(s) using the interpolation vector, systems and methods of the present disclosure obviate the need for data labeling or manual tuning of parameters and/or hyperparameters; processes that are required by conventional image transformation techniques for pose interpolation. As such, the systems and methods of the present disclosure represent a significant increase in efficiency in comparison to conventional methods, and furthermore substantially reduce the computational resources required to facilitate pose transfer for image transformation (e.g., processing cycles, memory, storage, power, etc.).
- In some implementations, the interpolation vector can be configured to be indicative of a similarity between the selected feature from the first feature set and the selected feature from the second feature set (e.g., a similarity between a hair feature of the first feature set and the hair feature of the second feature set, etc.). For example, given a retrieval dataset
- As an example, given a feature k, qk∈[0,1]1×C can be encoded, for a particular image, how much that channel contributes to that feature. Since qk can be considered to be a mask, a feature specific representation can be constructed as represented by:
-
v k Q =q k Q⊙σQ. - where feature retrieval can be performed by matching vk, as two images with similar vk suggest a lookalike feature k.
- In some implementations, the interpolation of features from the first feature set to the second feature set using the interpolation vector can be formulated as a latent direction. More particularly, the formulation as a latent direction can be formulated as:
-
σk G=σS +αq k⊙(σR−σS) - where the latent direction can be represented as n=qk ⊙(σR−σSs) and the scalar step can be represented as α. In some implementations, if scalar step α is restricted such that α∈[0,1], a style interpolation will be performed. More particularly, under the property of vector arithmetic, α∈R can be utilized to allow for style extrapolation (e.g., smooth pose interpolation, etc.).
- In some implementations, a plurality of additional images can be obtained. Each of the plurality of images can depict a respective plurality of objects of the object type. Additionally, each of the additional can include a feature set for the plurality of object features. For each of the plurality of additional images, a respective additional image can be processed with the machine-learned image transformation model to obtain a respective channel mapping. The respective channel mapping can be indicative of a mapping between the plurality of model channels and the feature set of the respective additional image.
- In some implementations, for each of the plurality of additional images, an additional interpolation vector can be generated based at least in part on the first channel mapping and the respective channel mapping. More particularly, the representations vk R=qk R⊙σR can be computed where σR∈Σ and Σ are the style coefficients for the images of the plurality of additional images
-
Distancek(I Q ,I R)=d(v k Q ,v k R) - where d can represent a distance metric. The distances can be ranked for nearest neighbor search for facial feature k. For example, if there is a Mk and consequently, a qk mismatch between two images, their distance will be large. As discussed previously, similar features can generally express similar Mk. As such, it follows that smaller distance under the distance metric d will reflect more similar features. In some implementations, interpolation vector and/or query image σQ and retrieved image σR can be normalized using layer-wise mean and standard deviation from Σ. In some implementations, the first image, the second image, and the plurality of additional images can be clustered based at least in part on the interpolation vector and each of the additional interpolation vectors.
- In some implementations, the machine-learned image transformation model can include multiple model portions. As an example, the machine-learned image transformation model can include an encoding portion, a decoding portion, and a discriminator portion (e.g., a generative adversarial network (GAN), etc.). For example, in some implementations, the encoding portion can be configured to encode an image, and the first image can be processed with the encoding portion of the machine-learned image transformation model to obtain the first channel mapping indicative of the mapping between the model channels and the first feature set for the plurality of object features. Similarly, in some implementations, the decoding portion of the machine-learned image transformation model can be configured to process an encoding of an image (e.g., and/or an interpolation vector, etc.) to generate the third image. Additionally, or alternatively, in some implementations, the machine-learned image transformation model can be or otherwise include one or more neural networks pre-trained for image transformation tasks. For example, the machine-learned image transformation model can be or otherwise include a generative adversarial network for realistic image transformation.
- Systems and methods of the present disclosure provide a number of technical effects and benefits. As one example technical effect and benefit, the systems and methods of the present disclosure enable a significant advancement in image transformation quality and efficiency in comparison to other approaches. As an example, conventional image transformation techniques (e.g., interpolation of feature(s) from a first image to a second, etc.) operate by processing a large number of images N that depict objects of the same object type to obtain a respective number N of channel contribution scores, and then averaging the channel contribution scores. However, the processing of this large number of images N presents a significant cost in computational resources (e.g., processor cycles, memory, storage, power, etc.). Additionally, by averaging the contribution scores, this conventional approach ignores that channel contributions for a particular object feature can vary substantially between images, which can destroy the specific effects unique to source and/or reference images and therefore significantly reduce the quality of the image transformation. As such, systems and methods of the present disclosure determine channel mappings only for the source image and the reference image, therefore significantly reducing the utilization of computational resources, while also significantly increasing the quality of the image transformation.
- With reference now to the Figures, example embodiments of the present disclosure will be discussed in further detail.
-
FIG. 1A depicts a block diagram of anexample computing system 100 that performs image transformation and/or image retrieval according to example embodiments of the present disclosure. Thesystem 100 includes auser computing device 102, aserver computing system 130, and atraining computing system 150 that are communicatively coupled over anetwork 180. - The
user computing device 102 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device. - The
user computing device 102 includes one ormore processors 112 and amemory 114. The one ormore processors 112 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 114 can include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 114 can storedata 116 andinstructions 118 which are executed by theprocessor 112 to cause theuser computing device 102 to perform operations. - In some implementations, the
user computing device 102 can store or include one or more machine-learnedimage transformation models 120. For example, the machine-learnedimage transformation models 120 can be or can otherwise include various machine-learned models such as neural networks (e.g., deep neural networks) or other types of machine-learned models, including non-linear models and/or linear models. Neural networks can include feed-forward neural networks, recurrent neural networks (e.g., long short-term memory recurrent neural networks), convolutional neural networks or other forms of neural networks. Some example machine-learned models can leverage an attention mechanism such as self-attention. For example, some example machine-learned models can include multi-headed self-attention models (e.g., transformer models). Example machine-learnedimage transformation models 120 are discussed with reference toFIGS. 2-4C . - In some implementations, the one or more machine-learned
image transformation models 120 can be received from theserver computing system 130 overnetwork 180, stored in the usercomputing device memory 114, and then used or otherwise implemented by the one ormore processors 112. In some implementations, theuser computing device 102 can implement multiple parallel instances of a single machine-learned image transformation model 120 (e.g., to perform parallel image transformation across multiple instances of the machine-learned image transformation model). - More particularly, the machine-learned
image transformation model 120 can be utilized at theuser computing device 102 for image transformation and retrieval in an unsupervised fashion. As an example, a first image and a second image can be obtained at the user computing device 102 (e.g., via thenetwork 180, via image sensor(s) of theuser computing device 102, etc.). The first and second images can respectively depict a first object and a second object (e.g., a first face and a second face, etc.). The first and second objects can be of an object type (e.g., a human face object type, etc.), which can include a plurality of object features (e.g., eye features, nose features, mouth features, pose, etc.). The first and second images can be processed with the machine-learnedimage transformation model 120, which can include a plurality of model channels (e.g., a pre-trainedimage transformation model 120, etc.). By processing the first and second images, first and second channel mappings can be obtained. The first channel mapping can indicate a mapping between the model channels of the machine-learnedimage transformation model 120 and the first object features, and the second channel mapping can indicate a mapping between the model channels of the machine-learnedimage transformation model 120 and the second object features. - Based on the first and second channel mappings, an interpolation vector can be generated using the
user computing device 102 for a selected feature of the plurality of object features (e.g., a vector for a nose feature of a face object, etc.). In some implementations, the interpolation vector can be configured to interpolate the selected feature from the first image to the selected feature of the second image (e.g., interpolating the nose feature from the face of the first image to the face of the second image, etc.). Additionally, or alternatively, in some implementations the interpolation vector can be configured to indicate a similarity between the selected feature from the first object and the selected feature from the second object (e.g., indicating a similarity between the nose of the first face and the nose of the second face, etc.). In such fashion, the interpolation vector can be generated for selective, fine-grained image transformation and/or retrieval without necessitating the complex annotation of training datasets. - Additionally, or alternatively, one or more machine-learned
image transformation models 140 can be included in or otherwise stored and implemented by theserver computing system 130 that communicates with theuser computing device 102 according to a client-server relationship. For example, the machine-learnedimage transformation models 140 can be implemented by theserver computing system 130 as a portion of a web service (e.g., an image transformation and/or image retrieval service). Thus, one ormore models 120 can be stored and implemented at theuser computing device 102 and/or one ormore models 140 can be stored and implemented at theserver computing system 130. - The
user computing device 102 can also include one or moreuser input components 122 that receives user input. For example, theuser input component 122 can be a touch-sensitive component (e.g., a touch-sensitive display screen or a touch pad) that is sensitive to the touch of a user input object (e.g., a finger or a stylus). The touch-sensitive component can serve to implement a virtual keyboard. Other example user input components include a microphone, a traditional keyboard, or other means by which a user can provide user input. As another example, theuser computing device 102 can include one or more image sensors (e.g., smartphone camera sensors, etc.) that are configured to capture images (e.g., the first image, the second image, etc.). - The
server computing system 130 includes one ormore processors 132 and amemory 134. The one ormore processors 132 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 134 can include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 134 can storedata 136 andinstructions 138 which are executed by theprocessor 132 to cause theserver computing system 130 to perform operations. - In some implementations, the
server computing system 130 includes or is otherwise implemented by one or more server computing devices. In instances in which theserver computing system 130 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof. - As described above, the
server computing system 130 can store or otherwise include one or more machine-learnedimage transformation models 140. For example, themodels 140 can be or can otherwise include various machine-learned models. Example machine-learned models include neural networks or other multi-layer non-linear models. Example neural networks include feed forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks. Some example machine-learned models can leverage an attention mechanism such as self-attention. For example, some example machine-learned models can include multi-headed self-attention models (e.g., transformer models).Example models 140 are discussed with reference toFIGS. 2-4C . - The
user computing device 102 and/or theserver computing system 130 can train themodels 120 and/or 140 via interaction with thetraining computing system 150 that is communicatively coupled over thenetwork 180. Thetraining computing system 150 can be separate from theserver computing system 130 or can be a portion of theserver computing system 130. - The
training computing system 150 includes one ormore processors 152 and amemory 154. The one ormore processors 152 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 154 can include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 154 can storedata 156 andinstructions 158 which are executed by theprocessor 152 to cause thetraining computing system 150 to perform operations. In some implementations, thetraining computing system 150 includes or is otherwise implemented by one or more server computing devices. - The
training computing system 150 can include amodel trainer 160 that trains the machine-learnedmodels 120 and/or 140 stored at theuser computing device 102 and/or theserver computing system 130 using various training or learning techniques, such as, for example, backwards propagation of errors. For example, a loss function can be backpropagated through the model(s) to update one or more parameters of the model(s) (e.g., based on a gradient of the loss function). Various loss functions can be used such as mean squared error, likelihood loss, cross entropy loss, hinge loss, and/or various other loss functions. Gradient descent techniques can be used to iteratively update the parameters over a number of training iterations. - In some implementations, performing backwards propagation of errors can include performing truncated backpropagation through time. The
model trainer 160 can perform a number of generalization techniques (e.g., weight decays, dropouts, etc.) to improve the generalization capability of the models being trained. - In particular, the
model trainer 160 can train the machine-learnedimage transformation models 120 and/or 140 based on a set oftraining data 162. Alternatively, in some implementations, machine-learnedimage transformation models 120 and/or 140 can be or otherwise include pre-trained image transformation models. For example, machine-learnedimage transformation models 120 and/or 140 can be or otherwise include pre-trained image transformation model(s) configured to perform image transformation tasks (e.g., interpolation of a feature from a first image to a second image, etc.). In some implementations, if the user has provided consent, the training examples can be provided by theuser computing device 102. Thus, in such implementations, themodel 120 provided to theuser computing device 102 can be trained by thetraining computing system 150 on user-specific data received from theuser computing device 102. In some instances, this process can be referred to as personalizing the model. - The
model trainer 160 includes computer logic utilized to provide desired functionality. Themodel trainer 160 can be implemented in hardware, firmware, and/or software controlling a general purpose processor. For example, in some implementations, themodel trainer 160 includes program files stored on a storage device, loaded into a memory and executed by one or more processors. In other implementations, themodel trainer 160 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM, hard disk, or optical or magnetic media. - The
network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links. In general, communication over thenetwork 180 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL). -
FIG. 1A illustrates one example computing system that can be used to implement the present disclosure. Other computing systems can be used as well. For example, in some implementations, theuser computing device 102 can include themodel trainer 160 and thetraining dataset 162. In such implementations, themodels 120 can be both trained and used locally at theuser computing device 102. In some of such implementations, theuser computing device 102 can implement themodel trainer 160 to personalize themodels 120 based on user-specific data. -
FIG. 1B depicts a block diagram of anexample computing device 10 that performs image transformation and/or image retrieval according to example embodiments of the present disclosure. Thecomputing device 10 can be a user computing device or a server computing device. - The
computing device 10 includes a number of applications (e.g.,applications 1 through N). Each application contains its own machine learning library and machine-learned model(s). For example, each application can include a machine-learned model. Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc. - As illustrated in
FIG. 1B , each application can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, each application can communicate with each device component using an API (e.g., a public API). In some implementations, the API used by each application is specific to that application. -
FIG. 1C depicts a block diagram of anexample computing device 50 that performs training and/or utilization of a machine-learned image transformation model according to example embodiments of the present disclosure. Thecomputing device 50 can be a user computing device or a server computing device. - The
computing device 50 includes a number of applications (e.g.,applications 1 through N). Each application is in communication with a central intelligence layer. Example applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc. In some implementations, each application can communicate with the central intelligence layer (and model(s) stored therein) using an API (e.g., a common API across all applications). - The central intelligence layer includes a number of machine-learned models. For example, as illustrated in
FIG. 1C , a respective machine-learned model can be provided for each application and managed by the central intelligence layer. In other implementations, two or more applications can share a single machine-learned model. For example, in some implementations, the central intelligence layer can provide a single model for all of the applications. In some implementations, the central intelligence layer is included within or otherwise implemented by an operating system of thecomputing device 50. - The central intelligence layer can communicate with a central device data layer. The central device data layer can be a centralized repository of data for the
computing device 50. As illustrated inFIG. 1C , the central device data layer can communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, the central device data layer can communicate with each device component using an API (e.g., a private API). -
FIG. 2 depicts a block diagram of an example machine-learnedimage transformation model 200 according to example embodiments of the present disclosure. In some implementations, the machine-learnedimage transformation model 200 is trained to receive a set ofinput data 204 descriptive of an image that depicts an object including a plurality of object features. Additionally, theinput data 204 can include a first feature set for the plurality of object features. As a result of receipt of theinput data 204, the machine-learnedimage transformation model 200 can provideoutput data 206 that includes a channel mapping indicative of a mapping between a plurality of channels of the machine-learnedimage transformation model 200 and a feature set of the first image. -
FIG. 3 depicts a block diagram of an example machine-learnedimage transformation model 300 according to example embodiments of the present disclosure. The machine-learnedimage transformation model 300 is similar to machine-learnedimage transformation model 200 ofFIG. 2 except that machine-learnedimage transformation model 300 further includes anencoding portion 302 and a decoding portion 306. - More particularly, the
encoding portion 302 of the machine-learnedimage transformation model 300 can process theimage data 204 to obtainoutput data 304. Theoutput data 304 can include the channel mapping as described with regards toFIG. 2 . Additionally, theoutput data 304 can include an embedding of the image included in theinput data 204. Thedecoding portion 305 of the machine-learnedimage transformation model 300 can process the embedding included in theoutput data 304 to generateoutput data 308, which can include a transformation of the image included in theinput data 204. -
FIG. 4A depicts a data flow diagram 400 for generating an interpolation vector according to example embodiments of the present disclosure. More particularly, afirst image 402 and asecond image 404 can be obtained. Thefirst image 402 can depict a first object of an object type (e.g., a human face, a room that includes furniture, a vehicle, etc.), and thesecond image 404 can depict a second object of the object type. As an example, the first object may be a first face of a human face object type and the second object can be a second human face of the human face object type. As another example, the first object may be a pickup truck of a vehicle object type and the second object may be a sedan of the vehicle object type. The object type can include a plurality of object features. As an example, a human face object type can include a plurality of facial features (e.g., eye feature(s), nose feature(s), mouth feature(s), feature(s) for a region including a portion of the face, hair feature(s), pose feature(s), head shape feature(s), etc.). As another example, a vehicle object type can include a plurality of vehicular features (e.g., roof feature(s), wheel feature(s), vehicle shape feature(s), cabin feature(s), etc.). As another example, a room object type can include a plurality of room features (e.g., furniture feature(s), wall feature(s), accessory feature(s), paint feature(s), etc.). As yet another example, a human body object type can include a plurality of body features (e.g., body composition feature(s), body shape feature(s), clothing feature(s), facial feature(s), pose feature(s), etc.). As such, it should be broadly understood that the object type can be any sort of object, and can include any manner of object features that correspond to the object type. - Additionally, the
first image 402 can include a first feature set 402A for the plurality of object features of the object type, and thesecond image 404 can include a second feature set 404A for the plurality of object features of the object type. As an example, the object type of the objects included infirst image 402 and thesecond image 404 can be a human face, and can include a hair color feature. The first feature set 402A for the plurality of object features can include a brown hair color feature. The second feature set 404A for the plurality of object features can include a blonde hair color feature. As such, the feature sets 402A/404A can be or otherwise include a set of features specific to plurality of object features of the object type. - The
first image 402 can be processed with a machine-learnedimage transformation model 406. The machine-learnedimage transformation model 406 can include a plurality ofmodel channels 406A configured to process images (e.g.,first image 402,second image 404, etc.). As an example, the machine-learnedimage transformation model 406 may include a plurality ofmodel channels 406A that are respectively configured to detect a feature of the plurality of object features. For example, the object can be a human face object that includes a nose feature, an eyes feature, and a mouth feature. The machine-learnedimage transformation model 406 can include achannel 406A configured to detect nose features, achannel 406A configured to detect eyes features, and achannel 406A configured to detect mouth features. By processing thefirst image 402, afirst channel mapping 408 can be obtained that is indicative of a mapping between the plurality ofmodel channels 406A and the first feature set 402A for the plurality of object features. As an example, thefirst channel mapping 408 can indicate that two channels from the plurality ofmodel channels 406A are mapped to a nose feature of the first feature set 402A, while three other model channels the plurality ofmodel channels 406A are mapped to a pose feature of the first feature set 402A. Similarly, thesecond image 404 can be processed with the machine to obtain asecond channel mapping 410 that is indicative of a mapping between the plurality ofmodel channels 406A and the second feature set 402B for the plurality of object features. - The interpolation vector generator 412 (e.g., a hardware component and/or software component configured to generate an interpolation vector based on channel mappings, etc.) can generate
interpolation vector 414 based at least in part on thefirst channel mapping 408 and thesecond channel mapping 410. Theinterpolation vector 414 can be generated for a selected feature from the plurality of object features. In some implementations, theinterpolation vector 414 can be configured to interpolate the selected feature of the plurality of object features from the first feature set 402A for the plurality of object features to the second feature set 404A. Additionally, or alternatively, in some implementations, theinterpolation vector 414 can indicate a similarity between the selected feature from the first object of thefirst image 402 and the selected feature from the second object of thesecond image 404. -
FIG. 4B depicts a data flow diagram 401 for generating a transformed image with interpolated features according to example embodiments of the present disclosure. The interpolation vector 414 qk can be generated for a specific feature k of the plurality of object features K, which correspond to the first feature set 402A offirst image 402 and the second feature set 402B ofsecond image 404. The interpolation vector 414 qk can then be utilized as a mask for k that allows interpolation between the first feature set 402A σR and the second feature set 404A σS. The interpolation vector 414 qk can can be utilized to interpolate a selected feature from the first feature set 402A of thefirst image 402 to the second feature set 404B of thesecond image 404 by processing thefirst image 402, thesecond image 404, and theinterpolation vector 414 with the machine-learnedimage transformation model 406 to obtain an interpolatedthird image 416. Thethird image 416 can depict a third object of the object type, and can include a third feature set 416A for the plurality of object features. The third feature set 416A can include the selected feature from the first feature set 402A and one or more features from the second feature set 404A for the plurality of object features. To follow the previously described example, thethird image 416 σk G can be obtained by processing the first image 402 (e.g., the first feature set 402A σR, etc.), the second image 404 (e.g., the second feature set 404A σS, etc.) and the interpolation vector 414 qk with the machine-learnedimage transformation model 406 as represented by: -
σk G=(1−q k)⊙σS +q k⊙σR - In some implementations, the object type can be a human face object type, and the selected feature can be a pose feature. As an example, the first image 402 (e.g., the reference image, etc.) can depict a human face at a pose in which the face is looking to the left side of the image, and the second image 404 (e.g., the source image, etc.) can depict a human face at a pose in which the face is looking to the right side of the image. The
interpolation vector 414 can map the model channel(s) 406A of the machine-learnedimage transformation model 406 that correspond to the pose feature. For example, the interpolation vector may map the first 4 layers of the machine-learned image transformation model 406 (e.g., 2048 style coefficient channels, etc.) to the pose feature qpose and a hair feature qhair. For these 4 layers, data for the pose feature can be derived as represented by: -
q pose=1−q hair - for the first 4 layers, while the rest of the
model channels 406A of the machine-learnedimage transformation model 406 are zeroed out or otherwise ignored. In such fashion, the pose feature of the first feature set 402A (e.g., the reference image) can be interpolated to be the pose feature of the second feature set 404A without interpolation of any other features of the first feature set 402A to generate thethird image 416 that depicts a third object with a third feature set 416A. The third object can include the pose of the first feature set 402A (e.g., looking to the left side of the image) instead of the pose of the second feature set 404A (e.g., looking to the right side of the image, etc.) while maintaining the other features of the second feature set for the plurality of object features within the third feature set 416A (e.g., eye features, mouth features, nose features, etc.). -
FIG. 4C depicts a data flow diagram 403 for clustering a plurality of images according to example embodiments of the present disclosure. More particularly,first image 402 can be processed with the machine-learnedimage transformation model 406 to obtain the first channel mapping as previously described with regards toFIG. 4A . Theinterpolation vector 414 can be based at least in part on thefirst channel mapping 408 as previously described with regards toFIG. 4A . - A plurality of additional images 418 can be obtained. Each of the additional images 418 can depict a respective plurality of objects of the object type (e.g., the type of
first image 402, etc.). Additionally, the additional images 418 can include feature sets 418A for the plurality of object features. For each of the plurality of additional images 418, a respective additional image 418 can be processed with the machine-learnedimage transformation model 406 to obtain a respective plurality ofadditional channel mapping 420. The plurality ofadditional channel mappings 420 can be indicative of mappings between the plurality ofmodel channels 406A and the feature sets 418A of the additional images 418. - The first channel mapping 408 (e.g., a query mapping, etc.) and each of the
additional channel mappings 420 can be processed with theinterpolation vector generator 422 to obtain a respective plurality ofadditional interpolation vectors 424 for the plurality ofadditional channel mappings 420. More particularly, the representations vk R=qk R⊙σR can be computed where σR∈Σ and Σ are the style coefficients for the images of the plurality of additional images 418first image 402 and each of the additional images 418 can be defined as: -
Distancek(I Q ,I R)=d(v k Q ,v k R) - where d can represent the
additional interpolation vectors 424, which each can indicate a distance metric. - To cluster the images, the image cluster determinator can receive the
interpolation vector 414 and theadditional interpolation vectors 424, and can rank thevectors 414/424 for nearest neighbor search for feature k. For example, anadditional interpolation vector 424 can be generated for thefirst image 402 and a particular additional image 418. If there is a Mk and consequently, a qk mismatch between thefirst image 402 and the particular additional image 418, the distance indicated by theadditional interpolation vector 424 will be large. As discussed previously, similar features can generally express similar Mk. As such, it follows that smaller distance under the distance metric d of theadditional interpolation vectors 424 will reflect more similar features. By ranking theadditional interpolation vectors 424 by their respective distances, theimage cluster determinator 426 can cluster thefirst image 402 and the additional images 418 in image cluster(s) 428. - As an example, the selected feature can be or otherwise include a hair feature for a human face object type. The plurality of additional images can depict a respective plurality of human face object types. The additional interpolation vectors can be generated for each of the additional images. Based on the additional interpolation vectors, the additional images can be clustered to obtain one or more submembership clusters. Each of the one or more submembership clusters can be associated with an aspect of the selected feature. For example, a submembership cluster can be associated with a blonde color aspect of the selected hair feature. As another example, a submembership cluster can be associated with a long length aspect of the selected hair feature. As yet another example, a submembership cluster can be associated with a frizzled texture aspect of the selected hair feature.
- It should be noted that the submembership cluster can be associated with any particular aspect of a selected feature. For example, aspects of a mouth feature can include lipstick aspects, mouth size aspects, mouth positioning aspects, etc. For another example, aspects of an eyes feature can include color aspects, positioning aspects, eye spacing aspects, eye size aspects, etc. For yet another example, aspects of a vehicle shape feature can include color aspects, a reflectance aspect, wheel spacing aspects, tire offset aspects, height aspects, width aspects, profile aspects, etc. As such, it should be broadly understood that the aspects of a selected feature can be or otherwise include any describable aspect of the selected feature.
-
FIG. 5 depicts an example latentdirection image transformation 500 according to example embodiments of the present disclosure. More particularly,source image 504 andreference image 502 can be interposed such that the pose feature ofreference image 502 can be interpolated to the pose ofsource image 504. As depicted, the interpolation of features from the feature set of the reference image to the feature set of the source image using an interpolation vector can be formulated as a latent direction. The formulation as a latent direction can be formulated as: -
σk G=σS +αq k⊙(σR−σS) - where the latent direction can be represented as n=qk⊙(σR−σS) and the scalar step can be represented as α. In some implementations, if scalar step α is restricted such that α∈[0,1], a style interpolation will be performed. More particularly, under the property of vector arithmetic, α∈R can be utilized to allow for style extrapolation (e.g., smooth pose interpolation, etc.).
- As an example, the latent direction
step size A 503 can be set at a relatively low step size (e.g., 0.25, etc.) to facilitate a relatively low interpolation of the pose feature fromreference image 502 to sourceimage 504. In such fashion, the level of feature interpolation applied to thesource image 504 can be adjusted to latent directionstep size A 503, which can implement a relatively minor pose feature transformation to generate transformedimage 506. As another example, the latent directionstep size B 505 can be set at a moderate step size (e.g., 0.5, etc.) to facilitate a moderate interpolation of the pose feature fromreference image 502 to sourceimage 504. As another example, the latent directionstep size C 507 can be set at a relatively high step size (e.g., 0.75, etc.) to facilitate a relatively high interpolation of the pose feature fromreference image 502 to sourceimage 504. As yet another example, the latent directionstep size D 509 can be set at a full step size (e.g., 1.0, etc.) to facilitate a full interpolation of the pose feature fromreference image 502 to sourceimage 504. -
FIG. 6 depicts anexample image transformation 600 with pose interpolation from a reference image to a source image according to example embodiments of the present disclosure. More particularly, one or more features can be interpolated from areference image 604 to asource image 602. As an example, an interpolation vector can be generated as previously described with regards toFIG. 4A . The interpolation vector can be processed alongside thesource image 602 and the 604 to interpolate one or more features from the reference image to the source image. As an example, the interpolation vector can be generated for a selected eyes feature. The vector can be processed alongsideimages image 606, which includes the eye features ofreference image 604 and the remaining features ofsource image 602. - As another example, the interpolation vector can be generated for a selected nose feature. The vector can be processed alongside
images image 608, which includes the nose features ofreference image 604 and the remaining features ofsource image 602. As yet another example, the interpolation vector can be generated for a selected mouth feature. The vector can be processed alongsideimages image 610, which includes the mouth features ofreference image 604 and the remaining features ofsource image 602. In such fashion, the interpolation vector can be selectively utilized to facilitate an efficient, high-quality interpolation of one or more features from a reference image to a source image while retaining the remaining features of the source image. -
FIG. 7 depicts anexample image retrieval 700 based on feature-channel mapping according to example embodiments of the present disclosure. More particularly, a channel mapping can be generated using a machine-learned image transformation model for thequery image 702. Additional channel mappings can be generated similarly for a plurality of additional images (e.g., resultimages 704, etc.). An interpolation vector can be generated for each of the additional images based on the first channel mapping and a respective channel mapping of each of the additional images. The interpolation vectors can indicate a similarity between a selected feature of thequery image 702 and the additional images. To follow the depicted example, the selected feature can be a mouth feature of a human face object type.Result images 704 can be retrieved based on the similarity indicated by their respective interpolation vectors. In such fashion, the interpolation vector generated for the additional images can be utilized to retrieveresult images 704 with a substantially similar feature appearance to thequery image 702. - Similarly, a channel mapping can be generated for
query image 706. Interpolation vectors can be generated for each of the additional images based on the channel mappings of thequery image 706 and the additional images. Unlike the interpolation vector generated forquery image 702, the interpolation vector generated forquery image 706 can be generated for the mouth feature of a human face object type.Result images 708 can be retrieved based on the feature similarity indicated by their respective interpolation vectors. -
FIG. 8 depicts a flow chart diagram of anexample method 800 to perform generation and utilization of an interpolation vector according to example embodiments of the present disclosure. AlthoughFIG. 8 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement. The various steps of themethod 800 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure. - At 802, a computing system can obtain a first image depicting a first object and a second image depicting a second object. More particularly, the computing system can obtain a first image and a second image. The first image can depict a first object of an object type (e.g., a human face, a room that includes furniture, a vehicle, etc.), and the second image can depict a second object of the object type. As an example, the first object may be a first face of a human face object type and the second object can be a second human face of the human face object type. As another example, the first object may be a pickup truck of a vehicle object type and the second object may be a sedan of the vehicle object type. The object type can include a plurality of object features. As an example, a human face object type can include a plurality of facial features (e.g., eye feature(s), nose feature(s), mouth feature(s), feature(s) for a region including a portion of the face, hair feature(s), pose feature(s), head shape feature(s), etc.). As another example, a vehicle object type can include a plurality of vehicular features (e.g., roof feature(s), wheel feature(s), vehicle shape feature(s), cabin feature(s), etc.). As another example, a room object type can include a plurality of room features (e.g., furniture feature(s), wall feature(s), accessory feature(s), paint feature(s), etc.). As yet another example, a human body object type can include a plurality of body features (e.g., body composition feature(s), body shape feature(s), clothing feature(s), facial feature(s), pose feature(s), etc.). As such, it should be broadly understood that the object type can be any sort of object, and can include any manner of object features that correspond to the object type.
- At 804, the computing system can process the first image to obtain a first channel mapping. More particularly, the computing system can process the first image with a machine-learned image transformation model. The machine-learned image transformation model can include a plurality of model channels. As an example, the machine-learned image transformation model may include a plurality of channels that are respectively configured to detect a feature of the plurality of object features. For example, the object can be a human face object that includes a nose feature, an eyes feature, and a mouth feature. The machine-learned image transformation model can include a channel configured to detect nose features, a channel configured to detect eyes features, and a channel configured to detect mouth features. By processing the first image, a first channel mapping can be obtained that is indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features. As an example, the first channel mapping can indicate that two channels from the plurality of model channels are mapped to a nose feature of the first feature set, while three other model channels the plurality of model channels are mapped to a pose feature of the first feature set. Alternatively, in some implementations, each model channel of the plurality of model channels can be mapped to a single respective feature of the plurality of features
- As a more particular example, conventional transformation models generally assume that the channels of models that make high contributions for particular feature(s) are always the same for each image that includes an object of a specific object type. For example, conventional models assume that for each image including a human face, the channels that contribute to the eyes feature(s) of the face will be the same for each image of a face. Based on this assumption, conventional models generally generate channel contribution scores for a large collection of images N, and then average the scores. However, this conventional method ignores the significant variance in high contribution channels between images. More particularly, averaging contribution scores over a large number of images N can destroy feature aspects that are specific to source images and reference images, therefore significantly reducing the quality of image transformations, while also necessitating the significantly inefficient processing of the large number of images N. As such, As such, systems and methods of the present disclosure instead process a source image (e.g., the first image, etc.), and a reference image (e.g., the second image, etc.), therefore avoiding the computational inefficiencies and reduction in quality inherent to conventional image transformation techniques.
- More particularly, it can be assumed that performance of k-means clustering over a specific feature of a plurality of images of the same object type (e.g., clustering over hair Mhair (N=1) for images that depict a human face object type, etc.) can lead to semantically meaningful clusters of images. As such, it can also be assumed that the top active model channels for each image cluster are unique to the feature associated with the image cluster. Therefore, high contribution model channels for a specific semantic feature are not common across images, and instead can include multiple rich semantic meanings. More particularly, within each feature k, there can be multiple subgroups that each image can belong to. As such, unlike conventional models which process a large number of images N and average contribution scores, systems and methods of the present disclosure can facilitate more accurate, more efficient, and more realistic image transformation and/or retrieval by processing channel mappings for only the source image and the reference image N=2 (e.g., the first image, the second image, etc.).
- As an example, the machine-learned image transformation model can process the first image (e.g., a reference image r, etc.) to obtain first channel mapping Σh,wA[r]c,h,w 2⊙U[r]k,h,w, where A∈
- At 806, the computing system can process the second image to obtain a second channel mapping. More particularly, the computing system can process the second image (e.g., a source image s, etc.) with the machine-learned image transformation model to obtain second channel mapping Σh,wA[s]c,h,w 2⊙U[s]k,h,w, which can be represented in the same manner as previously discussed with regards to the first channel mapping, and can be indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features. More particularly, the second channel mapping can indicate how much the c-th channel of style coefficients a ∈
- At 808, the computing system can generate an interpolation vector. More particularly, the computing system can generate an interpolation vector for a selected feature of the plurality of object features based at least in part on the first channel mapping and the second feature mapping. In some implementations, an additional channel mapping can be determined based on the first channel mapping and the second channel mapping as represented by:
-
- Where Mk,c can represent the additional channel mapping. In some implementations, each channel of the plurality of model channels can correspond to a respective object feature of the plurality of object features. A soft class assignment for each feature channel can be obtained based on a softmax of all features, as represented by:
-
- where M∈[0,1]K×C can represent the stacked contribution score of all of the plurality of object features, i can represent the temperature, and q∈[0,1]K×C can represent the interpolation vector. The interpolation vector for a particular feature k, qk can be indexed from the row of q. As such, in some implementations, the generated interpolation vector q∈[0,1]K×C can include a separate interpolation vector qk for each object feature k of the plurality of object features K. Alternatively, in some implementations, the interpolation vector can be generated as qk for a selected feature k of the plurality of object features K.
- At 810A, the computing system can, in some implementations, process the first and second image and the interpolation vector to obtain an interpolated image. More particularly, in some implementations, the interpolation vector can be configured to interpolate the selected feature of the plurality of object features from the first feature set for the plurality of object features to the second feature set for the plurality of object features. To follow the previous examples, the interpolation vector qk can be generated for a specific feature k. The interpolation vector qk can then be utilized as a mask for k that allows interpolation between the first feature set σR and the second feature set σS. In some implementations, the interpolation vector qk can can be utilized to interpolate the selected feature from the first feature set to the second feature set by processing the first image, the second image, and the interpolation vector with the machine-learned image transformation model to obtain an interpolated image. The interpolated image can depict a third object of the object type that includes a third feature set for the plurality of object features. The third feature set can include the selected feature from the first feature set and one or more features from the second feature set. To follow the previously described example, the third image σk G can be obtained by processing the first image (e.g., the first feature set σR, etc.), the second image (e.g., the second feature set σS, etc.) and the interpolation vector qk with the machine-learned image transformation model as represented by:
-
σk G=(1−q k)⊙σS +q k⊙σR - In some implementations, the object type can be a human face object type, and the selected feature can be a pose feature. As an example, the first image (e.g., the reference image, etc.) can depict a human face at a pose in which the face is looking to the left side of the image, and the second image (e.g., the source image, etc.) can depict a human face at a pose in which the face is looking to the right side of the image. The interpolation vector can map the model channel(s) of the machine-learned image transformation model that correspond to the pose feature. For example, the interpolation vector may map the first 4 layers of the machine-learned image transformation model (e.g., 2048 style coefficient channels, etc.) to the pose feature qpose and a hair feature qhair. For these 4 layers, data for the pose feature can be derived as represented by:
-
q pose=1−q hair - for the first 4 layers, while the rest of the model channels of the machine-learned image transformation model are zeroed out or otherwise ignored. In such fashion, the pose feature of the first feature set (e.g., the reference image) can be interpolated to be the pose feature of the second feature set without interpolation of any other features of the first feature set to generate a third image that depicts a third object. The third object can include the pose of the first feature set (e.g., looking to the left side of the image) instead of the pose of the second feature set (e.g., looking to the right side of the image, etc.) while maintaining the other features of the second feature set for the plurality of object features (e.g., eye features, mouth features, nose features, etc.).
- Similarly, data for a feature different than the pose feature can be derived in the same manner. To follow the previous example, to derive the data for the feature, the model channels of the first 4 layer(s) mapped to the hair and pose features can be zeroed out or otherwise ignored. It should be noted that by transferring pose feature(s) using the interpolation vector, systems and methods of the present disclosure obviate the need for data labeling or manual tuning of parameters and/or hyperparameters; processes that are required by conventional image transformation techniques for pose interpolation. As such, the systems and methods of the present disclosure represent a significant increase in efficiency in comparison to conventional methods, and furthermore substantially reduce the computational resources required to facilitate pose transfer for image transformation (e.g., processing cycles, memory, storage, power, etc.).
- At 810B, the computing system can, in some implementations, obtain a plurality of additional images. More particularly, the computing system can obtain a plurality of additional images. Each of the plurality of images can depict a respective plurality of objects of the object type. Additionally, each of the additional can include a feature set for the plurality of object features.
- At 812B, the computing system can, in some implementations, process the additional images to obtain channel mappings and generate additional interpolation vectors. More particularly, the computing system can, for each of the plurality of additional images, process a respective additional image with the machine-learned image transformation model to obtain a respective channel mapping. The respective channel mapping can be indicative of a mapping between the plurality of model channels and the feature set of the respective additional image.
- In some implementations, for each of the plurality of additional images, an additional interpolation vector can be generated based at least in part on the first channel mapping and the respective channel mapping. More particularly, the representations vk R=qk R⊙σR can be computed where σR∈Σ and Σ are the style coefficients for the images of the plurality of additional images
- At 814B, the computing system can cluster the first image, the second image, and the plurality of additional images. More particularly, in some implementations, the interpolation vector can be configured to be indicative of a similarity between the selected feature from the first feature set and the selected feature from the second feature set (e.g., a similarity between a hair feature of the first feature set and the hair feature of the second feature set, etc.). For example, given a retrieval dataset
- As an example, given a feature k, qk∈[0,1]1×C can be encoded, for a particular image, how much that channel contributes to that feature. Since qk can be considered to be a mask, a feature specific representation can be constructed as represented by:
-
v k Q =q k Q⊙σQ. - where feature retrieval can be performed by matching vk, as two images with similar vk suggest a lookalike feature k.
- In some implementations, the interpolation of features from the first feature set to the second feature set using the interpolation vector can be formulated as a latent direction. More particularly, the formulation as a latent direction can be formulated as:
-
σk G=σS +αq k⊙(σR−σS) - where the latent direction can be represented as n=qk⊙(σR−σS) and the scalar step can be represented as a. In some implementations, if scalar step α is restricted such that α∈[0,1], a style interpolation will be performed. More particularly, under the property of vector arithmetic, α∈R can be utilized to allow for style extrapolation (e.g., smooth pose interpolation, etc.).
- More particularly, the computing system can cluster the images based at least in part on the distances between the images indicated by the additional interpolation vectors. The distance between the features of the two images (e.g., the first image, the second image, the respective additional image, etc.) can be defined as:
-
Distancek(I Q ,I R)=d(v k Q ,v k R) - where d can represent a distance metric. The distances can be ranked for nearest neighbor search for facial feature k. For example, if there is a Mk and consequently, a qk mismatch between two images, their distance will be large. As discussed previously, similar features can generally express similar Mk. As such, it follows that smaller distance under the distance metric d will reflect more similar features. In some implementations, interpolation vector and/or query image σQ and retrieved image σR can be normalized using layer-wise mean and standard deviation from E. In some implementations, the first image, the second image, and the plurality of additional images can be clustered based at least in part on the interpolation vector and each of the additional interpolation vectors.
- The technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems. The inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components. For instance, processes discussed herein can be implemented using a single device or component or multiple devices or components working in combination. Databases and applications can be implemented on a single system or distributed across multiple systems. Distributed components can operate sequentially or in parallel.
- While the present subject matter has been described in detail with respect to various specific example embodiments thereof, each example is provided by way of explanation, not limitation of the disclosure. Those skilled in the art, upon attaining an understanding of the foregoing, can readily produce alterations to, variations of, and equivalents to such embodiments. Accordingly, the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art. For instance, features illustrated or described as part of one embodiment can be used with another embodiment to yield a still further embodiment. Thus, it is intended that the present disclosure cover such alterations, variations, and equivalents.
Claims (20)
1. A computer-implemented method for generation of interpolation vectors for image transformation and retrieval tasks, comprising:
obtaining, by a computing system comprising one or more computing devices, a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set;
processing, by the computing system, the first image with a machine-learned image transformation model comprising a plurality of model channels to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features;
processing, by the computing system, the second image with the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features; and
generating, by the computing system based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
2. The computer-implemented method of claim 1 , wherein:
the interpolation vector is indicative of a similarity between the selected feature from the first object and the selected feature from the second object.
3. The computer-implemented method of claim 2 , wherein the method further comprises:
obtaining, by the computing system, a plurality of additional images, wherein the plurality of additional images depict a respective plurality of objects of the object type, wherein each of the respective plurality of objects comprises a feature set for the plurality of object features; and
for each of the plurality of additional images:
processing, by the computing system, a respective additional image of the plurality of additional images with the machine-learned image transformation model to obtain a respective channel mapping indicative of a mapping between the plurality of model channels and the feature set of the respective additional image for the plurality of object features; and
generating, by the computing system based at least in part on the first channel mapping and the respective channel mapping, an additional interpolation vector for the selected feature of the plurality of object features.
4. The computer-implemented method of claim 4 , wherein the method further comprises:
clustering, by the computing system, the first image, the second image, and the plurality of additional images based at least in part on the interpolation vector and each of the additional interpolation vectors to obtain one or more submembership clusters respectively associated with one or more aspects of the selected feature.
5. The computer-implemented method of claim 1 , wherein:
the interpolation vector is configured to interpolate the selected feature of the plurality of object features from the first feature set for the plurality of object features to the second feature set for the plurality of object features; and
wherein the method further comprises:
processing, by the computing system, the first image, the second image, and the interpolation vector with the machine-learned image transformation model to obtain an interpolated image, wherein the interpolated image depicts a third object of the object type comprising a third feature set for the plurality of object features, wherein the third feature set comprises the selected feature from the first feature set and one or more second features for the second feature set for the plurality of object features.
6. The computer-implemented method of claim 1 , wherein the selected feature comprises one or more selected features selected from the plurality of object features.
7. The computer-implemented method of claim 1 , wherein the object type comprises a face, and wherein the plurality of object features comprise one or more of:
one or more eye features;
one or more mouth features;
one or more nose features;
one or more features for a region comprising a portion of the face;
one or more hair features;
one or more pose features; and
one or more head shape features.
8. The computer-implemented method of claim 7 , wherein:
the selected feature comprises the one or more pose features,
the plurality of object features comprises the one or more nose features; and
wherein third object comprises the one or more pose features from the first object and the one or more nose features from the second object.
9. The computer-implemented method of claim 1 , wherein the object type comprises a room, and wherein the plurality of object features comprises a plurality of furniture objects.
10. The computer-implemented method of claim 1 , wherein the object type comprises a human body, and wherein the plurality of object features comprises one or more of:
one or more clothing items;
one or more body shape features;
one or more facial features; or
one or more body pose features.
11. The computer-implemented method of claim 1 , wherein the machine-learned image transformation model comprises an encoding portion, a decoding portion, and a discriminator portion.
12. The computer-implemented method of claim 11 , wherein:
the encoding portion of the machine-learned image transformation model is configured to encode an image; and
wherein processing the first image with the machine-learned image transformation model comprises processing, by the computing system, the first image with the encoding portion of the machine-learned image transformation model to obtain an image encoding and the first channel mapping indicative of the mapping between the plurality of model channels and the first feature set for the plurality of object features.
13. The computer-implemented method of claim 11 , wherein the machine-learned image transformation model comprises one or more neural networks pre-trained for image transformation tasks.
14. A computing system for generation of interpolation vectors for image transformation and retrieval tasks, comprising:
one or more processors;
a machine-learned image transformation model trained to perform image transformation tasks, wherein the machine-learned image transformation model comprises an encoding portion, a decoding portion, and a plurality of model channels;
one or more tangible, non-transitory, computer readable media that collectively store instructions that when executed by the one or more processors cause the one or more processors to perform operations, the operations comprising:
obtaining a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set;
processing the first image with the encoding portion of the machine-learned image transformation model to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features;
processing the second image with the encoding portion of the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features; and
generating, based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
15. The computing system of claim 14 , wherein the interpolation vector is configured to interpolate the selected feature of the plurality of object features from the first feature set for the plurality of object features to the second feature set for the plurality of object features; and
wherein the operations further comprise:
processing the first image, the second image, and the interpolation vector with the machine-learned image transformation model to obtain an interpolated image, wherein the interpolated image depicts a third object of the object type comprising a third feature set for the plurality of object features, wherein the third feature set comprises the selected feature from the first feature set and one or more second features for the second feature set for the plurality of object features.
16. The computing system of claim 14 , wherein:
the interpolation vector is indicative of a similarity between the selected feature from the first object and the selected feature from the second object; and
wherein the operations further comprise:
obtaining a plurality of additional images, wherein each of the plurality of additional images depicts an object of a respective plurality of objects of the object type, wherein each of the plurality of additional images comprises a plurality of channels; and
for each of the plurality of additional images:
processing a respective additional image of the plurality of additional images with the machine-learned image transformation model to obtain a respective channel mapping indicative of a mapping between the plurality of model channels and the feature set of the respective additional image for the plurality of object features; and
generating, based at least in part on the first channel mapping and the respective channel mapping, an additional interpolation vector for the selected feature of the plurality of object features.
17. The computing system of claim 16 , wherein the operations further comprise:
clustering the first image, the second image, and the plurality of additional images based at least in part on the interpolation vector and each of the additional interpolation vectors to obtain one or more submembership clusters respectively associated with one or more aspects of the selected feature.
18. The computing system of claim 14 , wherein the object type comprises a face, and wherein the plurality of object features comprise one or more of:
one or more eye features;
one or more mouth features;
one or more nose features;
one or more features for a region comprising a portion of the face;
one or more hair features;
one or more pose features; and
one or more head shape features.
19. One or more tangible, non-transitory, computer readable media that collectively store instructions that when executed by one or more processors cause the one or more processors to perform operations, the operations comprising:
obtaining a first image depicting a first object of an object type and a second image depicting a second object of the object type, wherein objects of the object type comprise a plurality of object features, and wherein the first object comprises a first feature set for the plurality of object features and the second object comprises a second feature set for the plurality of object features different than the first feature set;
processing the first image with a machine-learned image transformation model to obtain a first channel mapping indicative of a mapping between the plurality of model channels and the first feature set for the plurality of object features;
processing the second image with the machine-learned image transformation model to obtain a second channel mapping indicative of a mapping between the plurality of model channels and the second feature set for the plurality of object features; and
generating, based at least in part on the first channel mapping and the second channel mapping, an interpolation vector for a selected feature of the plurality of object features.
20. The one or more tangible, non-transitory, computer-readable media of claim 19 , wherein:
the interpolation vector is configured to interpolate the selected feature of the plurality of object features from the first feature set for the plurality of object features to the second feature set for the plurality of object features; and
wherein the operations further comprise:
processing the first image, the second image, and the interpolation vector with the machine-learned image transformation model to obtain an interpolated image, wherein the interpolated image depicts a third object of the object type comprising a third feature set for the plurality of object features, wherein the third feature set comprises the selected feature from the first feature set and one or more second features for the second feature set for the plurality of object features.
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/314,738 US20220374625A1 (en) | 2021-05-07 | 2021-05-07 | Machine-Learned Models for Unsupervised Image Transformation and Retrieval |
PCT/US2022/028160 WO2022236115A1 (en) | 2021-05-07 | 2022-05-06 | Machine-learned models for unsupervised image transformation and retrieval |
EP22731840.9A EP4334916A1 (en) | 2021-05-07 | 2022-05-06 | Machine-learned models for unsupervised image transformation and retrieval |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/314,738 US20220374625A1 (en) | 2021-05-07 | 2021-05-07 | Machine-Learned Models for Unsupervised Image Transformation and Retrieval |
Publications (1)
Publication Number | Publication Date |
---|---|
US20220374625A1 true US20220374625A1 (en) | 2022-11-24 |
Family
ID=82115660
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/314,738 Pending US20220374625A1 (en) | 2021-05-07 | 2021-05-07 | Machine-Learned Models for Unsupervised Image Transformation and Retrieval |
Country Status (3)
Country | Link |
---|---|
US (1) | US20220374625A1 (en) |
EP (1) | EP4334916A1 (en) |
WO (1) | WO2022236115A1 (en) |
Citations (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110091113A1 (en) * | 2009-10-19 | 2011-04-21 | Canon Kabushiki Kaisha | Image processing apparatus and method, and computer-readable storage medium |
CN110830848A (en) * | 2019-11-04 | 2020-02-21 | 上海眼控科技股份有限公司 | Image interpolation method, image interpolation device, computer equipment and storage medium |
US20200265239A1 (en) * | 2019-02-14 | 2020-08-20 | Alibaba Group Holding Limited | Method and apparatus for processing video stream |
US20200265219A1 (en) * | 2017-09-18 | 2020-08-20 | Board Of Trustees Of Michigan State University | Disentangled representation learning generative adversarial network for pose-invariant face recognition |
US10861213B1 (en) * | 2019-12-23 | 2020-12-08 | Fyusion, Inc. | System and method for automatic generation of artificial motion blur |
US20200402284A1 (en) * | 2019-06-21 | 2020-12-24 | Facebook Technologies, Llc | Animating avatars from headset cameras |
US20210150197A1 (en) * | 2019-11-15 | 2021-05-20 | Ariel Al Ltd | Image generation using surface-based neural synthesis |
US20210192186A1 (en) * | 2019-12-18 | 2021-06-24 | Lg Electronics Inc. | Method for recognizing face using intelligent electronic device |
US20210209388A1 (en) * | 2020-01-06 | 2021-07-08 | The Research Foundation For The State University Of New York | Fakecatcher: detection of synthetic portrait videos using biological signals |
US20210248355A1 (en) * | 2019-04-02 | 2021-08-12 | Tencent Technology (Shenzhen) Company Limited | Face key point detection method and apparatus, storage medium, and electronic device |
US20210248983A1 (en) * | 2020-02-11 | 2021-08-12 | Aimi Inc. | Music Content Generation Using Image Representations of Audio Files |
US20210264236A1 (en) * | 2020-02-26 | 2021-08-26 | Adobe Inc. | Controlled style-content image generation based on disentangling content and style |
US20210279950A1 (en) * | 2020-03-04 | 2021-09-09 | Magic Leap, Inc. | Systems and methods for efficient floorplan generation from 3d scans of indoor scenes |
US20210281814A1 (en) * | 2020-03-04 | 2021-09-09 | Toyota Research Institute, Inc. | Systems and methods for self-supervised depth estimation according to an arbitrary camera |
US20210279852A1 (en) * | 2020-03-06 | 2021-09-09 | Yembo, Inc. | Identifying flood damage to an indoor environment using a virtual representation |
US20210327038A1 (en) * | 2020-04-16 | 2021-10-21 | Disney Enterprises, Inc. | Tunable models for changing faces in images |
US20210327431A1 (en) * | 2018-08-30 | 2021-10-21 | Liopa Ltd. | 'liveness' detection system |
US20210358177A1 (en) * | 2020-05-14 | 2021-11-18 | Adobe Inc. | Generating modified digital images utilizing a global and spatial autoencoder |
US20220058420A1 (en) * | 2020-08-22 | 2022-02-24 | Tsinghua University | Scene text detection method and system based on sequential deformation |
US20220148184A1 (en) * | 2020-11-10 | 2022-05-12 | Here Global B.V. | Method, apparatus, and system using a machine learning model to segment planar regions |
US20220153262A1 (en) * | 2020-11-19 | 2022-05-19 | Nvidia Corporation | Object detection and collision avoidance using a neural network |
US20220156530A1 (en) * | 2020-11-13 | 2022-05-19 | Salesforce.Com, Inc. | Systems and methods for interpolative centroid contrastive learning |
US20220198830A1 (en) * | 2020-12-23 | 2022-06-23 | L'oreal | Applying a continuous effect via model-estimated class embeddings |
US11580395B2 (en) * | 2018-11-14 | 2023-02-14 | Nvidia Corporation | Generative adversarial neural network assisted video reconstruction |
US20230087526A1 (en) * | 2020-05-26 | 2023-03-23 | Huawei Technologies Co., Ltd. | Neural network training method, image classification system, and related device |
US20230095182A1 (en) * | 2021-03-08 | 2023-03-30 | Tencent Technology (Shenzhen) Company Limited | Method and apparatus for extracting biological features, device, medium, and program product |
US11640684B2 (en) * | 2020-07-21 | 2023-05-02 | Adobe Inc. | Attribute conditioned image generation |
US20230144209A1 (en) * | 2020-06-12 | 2023-05-11 | Huawei Technologies Co., Ltd. | Lane line detection method and related device |
US20230214976A1 (en) * | 2020-08-31 | 2023-07-06 | Huawei Technologies Co., Ltd. | Image fusion method and apparatus and training method and apparatus for image fusion model |
US20230252662A1 (en) * | 2018-12-04 | 2023-08-10 | Yoti Holding Limited | Extracting information from images |
CN111915693B (en) * | 2020-05-22 | 2023-10-24 | 中国科学院计算技术研究所 | Sketch-based face image generation method and sketch-based face image generation system |
US11809520B1 (en) * | 2021-03-29 | 2023-11-07 | Amazon Technologies, Inc. | Localized visual similarity |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN110399849B (en) * | 2019-07-30 | 2021-07-27 | 北京市商汤科技开发有限公司 | Image processing method and device, processor, electronic device and storage medium |
-
2021
- 2021-05-07 US US17/314,738 patent/US20220374625A1/en active Pending
-
2022
- 2022-05-06 EP EP22731840.9A patent/EP4334916A1/en active Pending
- 2022-05-06 WO PCT/US2022/028160 patent/WO2022236115A1/en active Application Filing
Patent Citations (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110091113A1 (en) * | 2009-10-19 | 2011-04-21 | Canon Kabushiki Kaisha | Image processing apparatus and method, and computer-readable storage medium |
US20200265219A1 (en) * | 2017-09-18 | 2020-08-20 | Board Of Trustees Of Michigan State University | Disentangled representation learning generative adversarial network for pose-invariant face recognition |
US20210327431A1 (en) * | 2018-08-30 | 2021-10-21 | Liopa Ltd. | 'liveness' detection system |
US11580395B2 (en) * | 2018-11-14 | 2023-02-14 | Nvidia Corporation | Generative adversarial neural network assisted video reconstruction |
US20230252662A1 (en) * | 2018-12-04 | 2023-08-10 | Yoti Holding Limited | Extracting information from images |
US20200265239A1 (en) * | 2019-02-14 | 2020-08-20 | Alibaba Group Holding Limited | Method and apparatus for processing video stream |
US20210248355A1 (en) * | 2019-04-02 | 2021-08-12 | Tencent Technology (Shenzhen) Company Limited | Face key point detection method and apparatus, storage medium, and electronic device |
US20200402284A1 (en) * | 2019-06-21 | 2020-12-24 | Facebook Technologies, Llc | Animating avatars from headset cameras |
CN110830848A (en) * | 2019-11-04 | 2020-02-21 | 上海眼控科技股份有限公司 | Image interpolation method, image interpolation device, computer equipment and storage medium |
US20210150197A1 (en) * | 2019-11-15 | 2021-05-20 | Ariel Al Ltd | Image generation using surface-based neural synthesis |
US20210192186A1 (en) * | 2019-12-18 | 2021-06-24 | Lg Electronics Inc. | Method for recognizing face using intelligent electronic device |
US10861213B1 (en) * | 2019-12-23 | 2020-12-08 | Fyusion, Inc. | System and method for automatic generation of artificial motion blur |
US20210209388A1 (en) * | 2020-01-06 | 2021-07-08 | The Research Foundation For The State University Of New York | Fakecatcher: detection of synthetic portrait videos using biological signals |
US20210248983A1 (en) * | 2020-02-11 | 2021-08-12 | Aimi Inc. | Music Content Generation Using Image Representations of Audio Files |
US20210264236A1 (en) * | 2020-02-26 | 2021-08-26 | Adobe Inc. | Controlled style-content image generation based on disentangling content and style |
US20210279950A1 (en) * | 2020-03-04 | 2021-09-09 | Magic Leap, Inc. | Systems and methods for efficient floorplan generation from 3d scans of indoor scenes |
US20210281814A1 (en) * | 2020-03-04 | 2021-09-09 | Toyota Research Institute, Inc. | Systems and methods for self-supervised depth estimation according to an arbitrary camera |
US20210279852A1 (en) * | 2020-03-06 | 2021-09-09 | Yembo, Inc. | Identifying flood damage to an indoor environment using a virtual representation |
US20210327038A1 (en) * | 2020-04-16 | 2021-10-21 | Disney Enterprises, Inc. | Tunable models for changing faces in images |
US20210358177A1 (en) * | 2020-05-14 | 2021-11-18 | Adobe Inc. | Generating modified digital images utilizing a global and spatial autoencoder |
CN111915693B (en) * | 2020-05-22 | 2023-10-24 | 中国科学院计算技术研究所 | Sketch-based face image generation method and sketch-based face image generation system |
US20230087526A1 (en) * | 2020-05-26 | 2023-03-23 | Huawei Technologies Co., Ltd. | Neural network training method, image classification system, and related device |
US20230144209A1 (en) * | 2020-06-12 | 2023-05-11 | Huawei Technologies Co., Ltd. | Lane line detection method and related device |
US11640684B2 (en) * | 2020-07-21 | 2023-05-02 | Adobe Inc. | Attribute conditioned image generation |
US20220058420A1 (en) * | 2020-08-22 | 2022-02-24 | Tsinghua University | Scene text detection method and system based on sequential deformation |
US20230214976A1 (en) * | 2020-08-31 | 2023-07-06 | Huawei Technologies Co., Ltd. | Image fusion method and apparatus and training method and apparatus for image fusion model |
US20220148184A1 (en) * | 2020-11-10 | 2022-05-12 | Here Global B.V. | Method, apparatus, and system using a machine learning model to segment planar regions |
US20220156530A1 (en) * | 2020-11-13 | 2022-05-19 | Salesforce.Com, Inc. | Systems and methods for interpolative centroid contrastive learning |
US20220153262A1 (en) * | 2020-11-19 | 2022-05-19 | Nvidia Corporation | Object detection and collision avoidance using a neural network |
US20220198830A1 (en) * | 2020-12-23 | 2022-06-23 | L'oreal | Applying a continuous effect via model-estimated class embeddings |
US20230095182A1 (en) * | 2021-03-08 | 2023-03-30 | Tencent Technology (Shenzhen) Company Limited | Method and apparatus for extracting biological features, device, medium, and program product |
US11809520B1 (en) * | 2021-03-29 | 2023-11-07 | Amazon Technologies, Inc. | Localized visual similarity |
Also Published As
Publication number | Publication date |
---|---|
EP4334916A1 (en) | 2024-03-13 |
WO2022236115A1 (en) | 2022-11-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10248664B1 (en) | Zero-shot sketch-based image retrieval techniques using neural networks for sketch-image recognition and retrieval | |
US11508169B2 (en) | System and method for synthetic image generation with localized editing | |
Oh et al. | Time-series data augmentation based on interpolation | |
Nogneng et al. | Informative descriptor preservation via commutativity for shape matching | |
CN110796190B (en) | Exponential modeling with deep learning features | |
US20230359865A1 (en) | Modeling Dependencies with Global Self-Attention Neural Networks | |
CN114048331A (en) | Knowledge graph recommendation method and system based on improved KGAT model | |
CN110110122A (en) | Image based on multilayer semanteme depth hash algorithm-text cross-module state retrieval | |
CN111373417A (en) | Apparatus related to data classification based on metric learning and method thereof | |
CN111126574A (en) | Method and device for training machine learning model based on endoscopic image and storage medium | |
Deshpande et al. | Computational creativity via assisted variational synthesis of mechanisms using deep generative models | |
Kusy et al. | Probabilistic neural network training procedure based on Q (0)-learning algorithm in medical data classification | |
Li et al. | Product innovation concept generation based on deep learning and Kansei engineering | |
WO2019154411A1 (en) | Word vector retrofitting method and device | |
Deshpande et al. | An image-based approach to variational path synthesis of linkages | |
Domingues et al. | Deep Gaussian Process autoencoders for novelty detection | |
Forest et al. | Deep architectures for joint clustering and visualization with self-organizing maps | |
Murrugarra-Llerena et al. | Image retrieval with mixed initiative and multimodal feedback | |
CN111027681A (en) | Time sequence data processing model training method, data processing device and storage medium | |
Ullah et al. | 2-D canonical correlation analysis based image super-resolution scheme for facial emotion recognition | |
US20220374625A1 (en) | Machine-Learned Models for Unsupervised Image Transformation and Retrieval | |
Cao et al. | Emotional modelling and classification of a large-scale collection of scene images in a cluster environment | |
CN117132650A (en) | Category-level 6D object pose estimation method based on point cloud image attention network | |
Marik et al. | A hybrid deep feature selection framework for emotion recognition from human speeches | |
US20230022151A1 (en) | Full Attention with Sparse Computation Cost |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHU, WEN-SHENG;KUMAR, ABHISHEK;CHONG, MIN JIN;SIGNING DATES FROM 20210511 TO 20210529;REEL/FRAME:056471/0755 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
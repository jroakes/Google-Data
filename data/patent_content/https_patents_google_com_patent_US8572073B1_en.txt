US8572073B1 - Spam detection for user-generated multimedia items based on appearance in popular queries - Google Patents
Spam detection for user-generated multimedia items based on appearance in popular queries Download PDFInfo
- Publication number
- US8572073B1 US8572073B1 US13/438,767 US201213438767A US8572073B1 US 8572073 B1 US8572073 B1 US 8572073B1 US 201213438767 A US201213438767 A US 201213438767A US 8572073 B1 US8572073 B1 US 8572073B1
- Authority
- US
- United States
- Prior art keywords
- video
- multimedia
- queries
- spam
- item
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000001514 detection method Methods 0.000 title abstract description 10
- 238000000034 method Methods 0.000 claims abstract description 32
- 230000008569 process Effects 0.000 description 9
- 238000012545 processing Methods 0.000 description 6
- 238000010586 diagram Methods 0.000 description 5
- 230000015654 memory Effects 0.000 description 5
- 230000003287 optical effect Effects 0.000 description 4
- 238000004590 computer program Methods 0.000 description 3
- 238000004891 communication Methods 0.000 description 2
- 230000009471 action Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000000903 blocking effect Effects 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 230000006835 compression Effects 0.000 description 1
- 238000007906 compression Methods 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 230000003203 everyday effect Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
Definitions
- the present disclosure relates generally to web-based video display and specifically to software tools and methods for spam detection for online user-generated videos.
- Sharing of video content on websites has become a worldwide phenomenon, supported by dozens of websites. On average, hundreds of thousands of new videos are posted every day to various video hosting websites, and this number is increasing, as the tools and opportunities for capturing video become easy to use and more widespread. Many of these video-hosting websites also provide viewers with the ability to search for a video of interest. It is estimated that in 2006, there were over 30 billion views of user generated video content worldwide.
- Metadata is indexed, and thus allows viewers to search for videos of interest by entering keywords and phrases into a search engine on the video hosting website.
- Some users attempt to intentionally misrepresent the content of their video, so that their videos appear more often in the search results, and thus are seen by more viewers.
- These users employ various methods—sometimes called “spamdexing” or “keyword stuffing”—to manipulate the relevancy or prominence of their video in the search results, for example, by stuffing their descriptions with popular words or phrase in order to target these popular queries. This results in making it more difficult for viewers to find videos that actually related to the viewer's interests, as expressed in their keyword searches.
- a system, a method, and various software tools enable a video hosting website to automatically identify posted video items that contain spam in the metadata associated with a respective video item.
- a spam detection tool for user-generated video items is provided that facilitates the detection of spam in the metadata associated with a video item.
- a video item along with its associated metadata, is stored in a video database.
- the metadata is examined and a number of unique words in the metadata associated with a video item is determined. If the number of unique words exceeds a predetermined threshold, the video item is removed from the video database. Alternately, the video item remains and portions of metadata identified as spam are used to adjust ranking.
- a video item is stored in a video database and the metadata associated with the video items is processed by a concept clustering algorithm to determine the number of concepts in the associated metadata.
- the determination of whether the item contains spam is based on the number of concepts contained in the metadata. Additionally, the determination of whether the item contains spam can be based on the combination of unrelated concepts contained in the metadata.
- a video item is stored in a video database and a process determines how many times the video item appears as a search result in the most frequent search queries received by the video hosting site.
- a set of most frequent search queries is established.
- the frequency of the appearance of the video item as a result of the set of top queries is also determined.
- the video item is removed from the video database.
- the video item remains and portions of metadata identified as spam are used to adjust ranking.
- FIG. 1 is a block diagram of a system architecture for providing spam detection for uploaded video content in accordance with one embodiment.
- FIG. 2 is a flowchart illustrating a method of processing video items to be displayed on a video hosting website in accordance with one embodiment.
- FIG. 3 is a block diagram illustrating a process for detecting spam on user-generated videos in accordance with one embodiment.
- FIG. 1 is a block diagram of a system architecture in accordance with one embodiment of the present invention.
- a video hosting server 100 includes a front end server 140 , a video search server 145 , a user database 150 , a video server 110 , an ingest server 115 , a video database 190 , a spam filter module 120 , and an indexing server 130 .
- Many conventional features, such firewalls, load balancers, application servers, failover servers, site management tools, and so forth are not shown so as not obscure the features of the system.
- a suitable server 100 for implementation of the system is a server or servers of the YOUTUBETM website, found at www.youtube.com; other video hosting sites are known as well, and can be adapted to operate according the teaching disclosed herein.
- web site and “server” represent any method of uploading and downloading content and is not intended to be limited to content uploaded or downloaded via the Internet or the HTTP protocol.
- functions described in one embodiment as being performed on the server side can also be performed on the client side in other embodiments if appropriate.
- the functionality attributed to a particular component can be performed by different or multiple components operating together.
- Each of the various servers is implemented as server program executing on server-class computer comprising a CPU, memory, network interface, peripheral interfaces, and other well known components.
- the computers themselves preferably run an open-source operating system such as LINUX, have generally high performance CPUs, 1 G or more of memory, and 100 G or more of disk storage.
- LINUX open-source operating system
- other types of computers can be used, and it is expected that as more powerful computers are developed in the future, they can be configured in accordance with the teachings here.
- the functionality implemented by any of the elements can be provided from computer program products that are stored in tangible computer accessible storage mediums (e.g., RAM, hard disk, or optical/magnetic media).
- a client 170 executes a browser 171 , and can connect to the front end server 140 via a network 180 , which is typically the Internet, but may also be any network, including but not limited to any combination of a LAN, a MAN, a WAN, a mobile, wired or wireless network, a private network, or a virtual private network. While only a single client 170 and browser 171 are shown, it is understood that very large numbers (e.g., millions) of clients are supported and can be in communication with the website 100 at any time.
- the browser 171 can include a video player (e.g., FlashTM from Adobe Systems, Inc.), or any other player adapted for the video file formats used in the site 100 .
- a user can access a video from the site 100 by browsing a catalog of videos, conducting searches on keywords, reviewing playlists from other users or the system administrator (e.g., collections of videos forming channels), or viewing videos associated with particular user group (e.g., communities).
- a browser 171 can also access a video file indirectly, via an embedded video 177 that is accessed via an embedded hyperlink in a third party website 175 .
- Users of clients 170 can also search for videos based on keywords, tags or other metadata. These requests are received as queries by the front end server 140 and provided to the video search server 145 , which then searches the video database 190 for videos that satisfy the queries.
- the video search server 145 supports searching on any fielded data for a video, including its title, description, tags, author, category, and so forth.
- Users of the client 170 and browser 171 can upload content (which can include, for example, video, audio, or a combination of video and audio) to site 100 via network 180 .
- the uploaded content is processed by an ingest server 115 , which processes the video for storage in the video database 190 . This processing can include format conversion (transcoding), compression, metadata tagging, and other data processing.
- An uploaded content file is associated with the uploading user, and so the user's account record is updated in the user database 150 as needed.
- each uploaded video is assigned a video identifier (id) when it is processed by the ingest server 115 .
- the video database 190 is used to store the ingested videos.
- the video database 190 stores video content and associated metadata, provided by their respective content owners.
- the audio files are can be encoded at .mp3 files at 64 kbps, mono, 22.1 KHz, or better quality (e.g., 128 kbps, stereo, 44.2 KHz).
- the metadata for each audio files includes an ISRC (or custom identifier), artist, song title, album, label, genre, time length, and optionally geo-restrictions that can be used for data collection or content blocking on a geographic basis.
- the spam filter module 120 processes metadata associated with each video stored in the video database 190 . Metadata associated with each stored video is analyzed in order to determine whether the video and/or its related description contains spam. Various methods to detect spam are further described below.
- the spam filter module 120 is part of the indexing server 130 and prepares the data for a given video to be uploaded.
- the indexing server 130 indexes the video and its metadata into an index.
- to the indexing server 130 acts with the spam filter module 120 to check for spam in the metadata of the video.
- the ingest server 115 acts with the spam filter module to check for spam in the metadata of the video.
- FIG. 2 is a data flow diagram illustrating a method of processing video items uploaded to a video hosting website in accordance with one embodiment.
- a video item 202 is uploaded by a user on a video hosting website.
- the video item 202 contains video content and associated metadata, such as a description of the video content, tags, keywords or phrases, and tokens.
- the video item 202 and its related metadata is uploaded into a video database 190 .
- the video item 202 can also stored in a second video database 210 to be processed for spam detection.
- the video is pre-processed and the associated metadata is processed, wherein the tags, description, title, and other information associated with the video and included in the metadata is combined 220 .
- the metadata is processed for the presence of spam by the spam filter module 120 . If it is determined that the video item's metadata contains spam, the video may be removed from the video database 190 . If it is determined that the video item is free of spam, the video is indexed 130 . In some embodiments, if it is determined that the video item contains spam, the video is marked for removal at a later time. In some embodiments, if it is determined that the video item contains spam, the portion(s) of metadata identified as spam are recorded.
- the method includes an indexing server 130 that indexes the video and its metadata.
- the spam detection process is performed at the time of indexing.
- the spam filter module 120 is part of the indexing server 130 and is processed for the presence of spam content before being stored in the video database 190 .
- a video item is initially stored in video database 190 , but is removed if the video's metadata is later determined to contain spam.
- the video item is not added to the video database, and is not available for viewing, until it has been checked for spam.
- the video item is first added to the index and made available for viewing and is later checked for spam. This situation occurs, for example, when existing videos on a video viewing website are spam-checked after the are made available.
- FIG. 3 is a block diagram illustrating a process for detecting spam on user-generated videos in accordance one embodiment.
- some number of video items are stored in the video database being operated upon (either database 190 or 210 ).
- the metadata for a video item is stored 302 in the database.
- the video item includes metadata data such as a description of the video item, which may further include one or more tokens, keywords, key phrases or tags.
- the process looks at a set of most frequently made queries and determines a number of instances that the video appears in a search result for the top set 304 of queries. In other words, the process determines how many times the video would be a “hit” in the most frequent queries made on the video hosting website. If the number of instances exceeds a predetermined threshold ( 306 —Yes), then the video item is removed from the video database 308 (or marked for subsequent removal). In one embodiment, the threshold is determined as discussed in the following paragraph.
- the most frequent queries for a given period can be determined from the query logs of the video search server 145 . From these logs, a set of the most frequent, e.g., 10,000 most frequent, queries can be identified. In some embodiments, the most frequent queries for a given week are determined from the query logs of the video search server 145 . In other embodiments, the most frequent queries for a given month are determined from the query logs of the video search server 145 . The results of these queries can be accumulated with respect to the video items, so as to determine the number of times a video item appears in the search results for a set of popular queries. For example, the results of the 10,000 most frequent queries may be analyzed to determine which video items appears most often.
- Some videos may appear only a few times as a result of the most frequent queries, while others may appear hundreds or thousands of times as a result of the most frequent queries.
- the average number of appearances (“hits”) for all of these video items, as well as the distribution of appearances can then be determined for a given set of queries.
- the threshold for identifying a spam video item can then be set based on this average number of hits per video per a given set of queries, for example as multiple of this value the average number of hits per video or some number of standard deviations above the average, or some particular percentile (e.g., 90 th ) in the distribution.
- Certain aspects of the present invention include process steps and instructions described herein in the form of a method. It should be noted that the process steps and instructions of the present invention can be embodied in software, firmware or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
- the present invention also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
Abstract
A system, a method, and various software tools enable a video hosting website to automatically identify posted video items that contain spam in the metadata associated with a respective video item. A spam detection tool for user-generated video items based on appearance in popular queries is provided that facilitates the detection of spam in the metadata associated with a video item.
Description
This application is a continuation application of, and claims priority under 35 U.S.C. §120 from, co-pending U.S. patent application Ser. No. 12/059,143, entitled “Spam Detection for User-Generated Multimedia Items Based on Appearance in Popular Queries,” filed on Mar. 31, 2008, the subject matter of which is incorporated by reference herein in its entirety.
1. Field of Art
The present disclosure relates generally to web-based video display and specifically to software tools and methods for spam detection for online user-generated videos.
2. Description of the Related Art
Sharing of video content on websites has become a worldwide phenomenon, supported by dozens of websites. On average, hundreds of thousands of new videos are posted every day to various video hosting websites, and this number is increasing, as the tools and opportunities for capturing video become easy to use and more widespread. Many of these video-hosting websites also provide viewers with the ability to search for a video of interest. It is estimated that in 2006, there were over 30 billion views of user generated video content worldwide.
Users who upload videos onto the video hosting websites are able to add descriptions and keywords (also called tags) related to their video. These descriptions and keywords are stored as metadata associated with the video. The metadata is indexed, and thus allows viewers to search for videos of interest by entering keywords and phrases into a search engine on the video hosting website. Some users attempt to intentionally misrepresent the content of their video, so that their videos appear more often in the search results, and thus are seen by more viewers. These users employ various methods—sometimes called “spamdexing” or “keyword stuffing”—to manipulate the relevancy or prominence of their video in the search results, for example, by stuffing their descriptions with popular words or phrase in order to target these popular queries. This results in making it more difficult for viewers to find videos that actually related to the viewer's interests, as expressed in their keyword searches.
A system, a method, and various software tools enable a video hosting website to automatically identify posted video items that contain spam in the metadata associated with a respective video item. A spam detection tool for user-generated video items is provided that facilitates the detection of spam in the metadata associated with a video item.
In one embodiment, a video item, along with its associated metadata, is stored in a video database. The metadata is examined and a number of unique words in the metadata associated with a video item is determined. If the number of unique words exceeds a predetermined threshold, the video item is removed from the video database. Alternately, the video item remains and portions of metadata identified as spam are used to adjust ranking.
In another embodiment, a video item is stored in a video database and the metadata associated with the video items is processed by a concept clustering algorithm to determine the number of concepts in the associated metadata. The determination of whether the item contains spam is based on the number of concepts contained in the metadata. Additionally, the determination of whether the item contains spam can be based on the combination of unrelated concepts contained in the metadata.
In another embodiment, a video item is stored in a video database and a process determines how many times the video item appears as a search result in the most frequent search queries received by the video hosting site. A set of most frequent search queries is established. The frequency of the appearance of the video item as a result of the set of top queries is also determined. When the number or frequency of instances of a given video item exceeds a predetermined threshold, the video item is removed from the video database. Alternately, the video item remains and portions of metadata identified as spam are used to adjust ranking.
The features and advantages described in the specification are not all inclusive and, in particular, many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the disclosed subject matter.
The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the instructions and methods illustrated herein may be employed without departing from the principles of the invention described herein.
It is to be understood that the figures and descriptions of the present invention have been simplified to illustrate elements that are relevant for a clear understanding of the present invention, while eliminating, for the purpose of clarity, many other elements found in typical communication system and method of using the same. Those of ordinary skill in the art may recognize that other elements and/or steps are desirable and/or required in implementing the present invention. However, because such elements and steps are well known in the art, and because they do not facilitate a better understanding of the present invention, a discussion of such elements and steps is not provided herein. The disclosure herein is directed to all such variations and modifications to such elements and methods known to those skilled in the art.
Each of the various servers is implemented as server program executing on server-class computer comprising a CPU, memory, network interface, peripheral interfaces, and other well known components. The computers themselves preferably run an open-source operating system such as LINUX, have generally high performance CPUs, 1 G or more of memory, and 100 G or more of disk storage. Of course, other types of computers can be used, and it is expected that as more powerful computers are developed in the future, they can be configured in accordance with the teachings here. The functionality implemented by any of the elements can be provided from computer program products that are stored in tangible computer accessible storage mediums (e.g., RAM, hard disk, or optical/magnetic media).
A client 170 executes a browser 171, and can connect to the front end server 140 via a network 180, which is typically the Internet, but may also be any network, including but not limited to any combination of a LAN, a MAN, a WAN, a mobile, wired or wireless network, a private network, or a virtual private network. While only a single client 170 and browser 171 are shown, it is understood that very large numbers (e.g., millions) of clients are supported and can be in communication with the website 100 at any time. The browser 171 can include a video player (e.g., Flash™ from Adobe Systems, Inc.), or any other player adapted for the video file formats used in the site 100. A user can access a video from the site 100 by browsing a catalog of videos, conducting searches on keywords, reviewing playlists from other users or the system administrator (e.g., collections of videos forming channels), or viewing videos associated with particular user group (e.g., communities). A browser 171 can also access a video file indirectly, via an embedded video 177 that is accessed via an embedded hyperlink in a third party website 175.
Users of clients 170 can also search for videos based on keywords, tags or other metadata. These requests are received as queries by the front end server 140 and provided to the video search server 145, which then searches the video database 190 for videos that satisfy the queries. The video search server 145 supports searching on any fielded data for a video, including its title, description, tags, author, category, and so forth.
Users of the client 170 and browser 171 can upload content (which can include, for example, video, audio, or a combination of video and audio) to site 100 via network 180. The uploaded content is processed by an ingest server 115, which processes the video for storage in the video database 190. This processing can include format conversion (transcoding), compression, metadata tagging, and other data processing. An uploaded content file is associated with the uploading user, and so the user's account record is updated in the user database 150 as needed.
For purposes of convenience and the description of one embodiment, the uploaded content will be referred to a “videos”, “video files”, or “video items”, but no limitation on the types of content that can be uploaded are intended by this terminology. Each uploaded video is assigned a video identifier (id) when it is processed by the ingest server 115.
The video database 190 is used to store the ingested videos. The video database 190 stores video content and associated metadata, provided by their respective content owners. The audio files are can be encoded at .mp3 files at 64 kbps, mono, 22.1 KHz, or better quality (e.g., 128 kbps, stereo, 44.2 KHz). The metadata for each audio files includes an ISRC (or custom identifier), artist, song title, album, label, genre, time length, and optionally geo-restrictions that can be used for data collection or content blocking on a geographic basis.
The spam filter module 120 processes metadata associated with each video stored in the video database 190. Metadata associated with each stored video is analyzed in order to determine whether the video and/or its related description contains spam. Various methods to detect spam are further described below. In some embodiments, the spam filter module 120 is part of the indexing server 130 and prepares the data for a given video to be uploaded.
The indexing server 130 indexes the video and its metadata into an index. In some embodiments, to the indexing server 130 acts with the spam filter module 120 to check for spam in the metadata of the video. In some embodiments, the ingest server 115 acts with the spam filter module to check for spam in the metadata of the video.
In some embodiments, as shown in FIG. 2 , the video item 202 can also stored in a second video database 210 to be processed for spam detection. The video is pre-processed and the associated metadata is processed, wherein the tags, description, title, and other information associated with the video and included in the metadata is combined 220. The metadata is processed for the presence of spam by the spam filter module 120. If it is determined that the video item's metadata contains spam, the video may be removed from the video database 190. If it is determined that the video item is free of spam, the video is indexed 130. In some embodiments, if it is determined that the video item contains spam, the video is marked for removal at a later time. In some embodiments, if it is determined that the video item contains spam, the portion(s) of metadata identified as spam are recorded.
In other embodiments, the method includes an indexing server 130 that indexes the video and its metadata. In some embodiments, the spam detection process is performed at the time of indexing. In such embodiments, the spam filter module 120 is part of the indexing server 130 and is processed for the presence of spam content before being stored in the video database 190. As shown in FIG. 2 , in one embodiment, a video item is initially stored in video database 190, but is removed if the video's metadata is later determined to contain spam. In other embodiments, the video item is not added to the video database, and is not available for viewing, until it has been checked for spam. In other embodiments, the video item is first added to the index and made available for viewing and is later checked for spam. This situation occurs, for example, when existing videos on a video viewing website are spam-checked after the are made available.
For a given video item, the process looks at a set of most frequently made queries and determines a number of instances that the video appears in a search result for the top set 304 of queries. In other words, the process determines how many times the video would be a “hit” in the most frequent queries made on the video hosting website. If the number of instances exceeds a predetermined threshold (306—Yes), then the video item is removed from the video database 308 (or marked for subsequent removal). In one embodiment, the threshold is determined as discussed in the following paragraph.
The most frequent queries for a given period (e.g., current week or month) can be determined from the query logs of the video search server 145. From these logs, a set of the most frequent, e.g., 10,000 most frequent, queries can be identified. In some embodiments, the most frequent queries for a given week are determined from the query logs of the video search server 145. In other embodiments, the most frequent queries for a given month are determined from the query logs of the video search server 145. The results of these queries can be accumulated with respect to the video items, so as to determine the number of times a video item appears in the search results for a set of popular queries. For example, the results of the 10,000 most frequent queries may be analyzed to determine which video items appears most often. Some videos may appear only a few times as a result of the most frequent queries, while others may appear hundreds or thousands of times as a result of the most frequent queries. The average number of appearances (“hits”) for all of these video items, as well as the distribution of appearances can then be determined for a given set of queries. The threshold for identifying a spam video item can then be set based on this average number of hits per video per a given set of queries, for example as multiple of this value the average number of hits per video or some number of standard deviations above the average, or some particular percentile (e.g., 90th) in the distribution.
Reference in the specification to “one embodiment” or to “an embodiment” means that a particular feature, structure, or characteristic described in connection with the embodiments is included in at least one embodiment of the invention. The appearances of the phrase “in one embodiment” in various places in the specification are not necessarily all referring to the same embodiment.
Some portions of the above are presented in terms of methods and symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. A method is here, and generally, conceived to be a self-consistent sequence of steps (instructions) leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical, magnetic or optical signals capable of being stored, transferred, combined, compared and otherwise manipulated. It is convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like. Furthermore, it is also convenient at times, to refer to certain arrangements of steps requiring physical manipulations of physical quantities as modules or code devices, without loss of generality.
It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as “processing” or “computing” or “calculating” or “determining” or “displaying” or “determining” or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.
Certain aspects of the present invention include process steps and instructions described herein in the form of a method. It should be noted that the process steps and instructions of the present invention can be embodied in software, firmware or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
The methods and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references below to specific languages are provided for disclosure of enablement and best mode of the present invention.
While the invention has been particularly shown and described with reference to a preferred embodiment and several alternate embodiments, it will be understood by persons skilled in the relevant art that various changes in form and details can be made therein without departing from the spirit and scope of the invention.
Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention.
Claims (15)
1. A computer-implemented method of identifying spam in a collection of multimedia items, comprising:
storing the collection of multimedia items;
establishing a set of top queries for the multimedia items in the collection, wherein the set of top queries comprises a plurality of frequently made queries for the multimedia items in the collection;
identifying results of each query in the set of top queries, wherein the results comprise one or more of the multimedia items from the collection;
for a multimedia item in the collection, counting a number of times that the item appears in the results of the set of top queries; and
responsive to the number of times that the multimedia item appears in the results of the set of top queries exceeding a predetermined threshold, marking the multimedia item as spam.
2. The computer-implemented method of claim 1 , wherein the multimedia items are videos.
3. The computer-implemented method of claim 1 , wherein the plurality of frequently made queries comprises at least ten thousand frequently made queries.
4. The computer-implemented method of claim 1 , further comprising:
responsive to the multimedia item being marked as spam, removing the multimedia item from the collection.
5. The computer-implemented method of claim 1 , further comprising:
responsive to the multimedia item being marked as spam, removing the multimedia item from an index.
6. A system, comprising:
a non-transitory computer-readable storage medium storing computer instructions for:
storing a collection of multimedia items;
establishing a set of top queries for the multimedia items in the collection, wherein the set of top queries comprises a plurality of frequently made queries for the multimedia items in the collection;
identifying results of each query in the set of top queries, wherein the results comprise one or more of the multimedia items from the collection;
for a multimedia item in the collection, counting a number of times that the item appears in the results of the set of top queries; and
responsive to the number of times that the multimedia item appears in the results of the set of top queries exceeding a predetermined threshold,
marking the multimedia item as spam; and
a processor for executing the computer instructions.
7. The system of claim 6 , wherein the multimedia items are videos.
8. The system of claim 6 , wherein the plurality of frequently made queries comprises at least ten thousand frequently made queries.
9. The system of claim 6 , wherein the storage medium further stores computer instructions for:
responsive to the multimedia item being marked as spam, removing the multimedia item from the collection.
10. The system of claim 6 , wherein the storage medium further stores computer instructions for:
responsive to the multimedia item being marked as spam, removing the multimedia item from an index.
11. A non-transitory computer-readable storage medium storing computer instructions for:
storing a collection of multimedia items;
establishing a set of top queries for the multimedia items in the collection, wherein the set of top queries comprises a plurality of frequently made queries for the multimedia items in the collection;
identifying results of each query in the set of top queries, wherein the results comprise one or more of the multimedia items from the collection;
for a multimedia item in the collection, counting a number of times that the item appears in the results of the set of top queries; and
responsive to the number of times that the multimedia item appears in the results of the set of top queries exceeding a predetermined threshold, marking the multimedia item as spam.
12. The storage medium of claim 11 , wherein the multimedia items are videos.
13. The storage medium of claim 11 , wherein the plurality of frequently made queries comprises at least ten thousand frequently made queries.
14. The storage medium of claim 11 , wherein the storage medium further stores computer instructions for:
responsive to the multimedia item being marked as spam, removing the multimedia item from the collection.
15. The storage medium of claim 11 , wherein the storage medium further stores computer instructions for:
responsive to the multimedia item being marked as spam, removing the multimedia item from an index.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/438,767 US8572073B1 (en) | 2008-03-31 | 2012-04-03 | Spam detection for user-generated multimedia items based on appearance in popular queries |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/059,143 US8171020B1 (en) | 2008-03-31 | 2008-03-31 | Spam detection for user-generated multimedia items based on appearance in popular queries |
US13/438,767 US8572073B1 (en) | 2008-03-31 | 2012-04-03 | Spam detection for user-generated multimedia items based on appearance in popular queries |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/059,143 Continuation US8171020B1 (en) | 2008-03-31 | 2008-03-31 | Spam detection for user-generated multimedia items based on appearance in popular queries |
Publications (1)
Publication Number | Publication Date |
---|---|
US8572073B1 true US8572073B1 (en) | 2013-10-29 |
Family
ID=45990945
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/059,143 Active 2029-10-03 US8171020B1 (en) | 2008-03-31 | 2008-03-31 | Spam detection for user-generated multimedia items based on appearance in popular queries |
US13/438,767 Active US8572073B1 (en) | 2008-03-31 | 2012-04-03 | Spam detection for user-generated multimedia items based on appearance in popular queries |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/059,143 Active 2029-10-03 US8171020B1 (en) | 2008-03-31 | 2008-03-31 | Spam detection for user-generated multimedia items based on appearance in popular queries |
Country Status (1)
Country | Link |
---|---|
US (2) | US8171020B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2015167999A1 (en) * | 2014-04-28 | 2015-11-05 | Quixey, Inc. | Application spam detector |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8131708B2 (en) * | 2008-06-30 | 2012-03-06 | Vobile, Inc. | Methods and systems for monitoring and tracking videos on the internet |
US8788514B1 (en) * | 2009-10-28 | 2014-07-22 | Google Inc. | Triggering music answer boxes relevant to user search queries |
US8473491B1 (en) | 2010-12-03 | 2013-06-25 | Google Inc. | Systems and methods of detecting keyword-stuffed business titles |
CN104050195B (en) * | 2013-03-15 | 2017-11-03 | 暴风集团股份有限公司 | A kind of advertisement sticker processing method and system |
US10387576B2 (en) * | 2017-11-30 | 2019-08-20 | International Business Machines Corporation | Document preparation with argumentation support from a deep question answering system |
CN110019954A (en) * | 2017-12-13 | 2019-07-16 | 优酷网络技术（北京）有限公司 | A kind of recognition methods and system of the user that practises fraud |
Citations (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6078866A (en) | 1998-09-14 | 2000-06-20 | Searchup, Inc. | Internet site searching and listing service based on monetary ranking of site listings |
US6442606B1 (en) | 1999-08-12 | 2002-08-27 | Inktomi Corporation | Method and apparatus for identifying spoof documents |
US20040148330A1 (en) * | 2003-01-24 | 2004-07-29 | Joshua Alspector | Group based spam classification |
US20050060643A1 (en) | 2003-08-25 | 2005-03-17 | Miavia, Inc. | Document similarity detection and classification system |
US20050071741A1 (en) | 2003-09-30 | 2005-03-31 | Anurag Acharya | Information retrieval based on historical data |
US20050188023A1 (en) * | 2004-01-08 | 2005-08-25 | International Business Machines Corporation | Method and apparatus for filtering spam email |
US7016939B1 (en) | 2001-07-26 | 2006-03-21 | Mcafee, Inc. | Intelligent SPAM detection system using statistical analysis |
US20060168032A1 (en) | 2004-12-21 | 2006-07-27 | Lucent Technologies, Inc. | Unwanted message (spam) detection based on message content |
US20060184500A1 (en) | 2005-02-11 | 2006-08-17 | Microsoft Corporation | Using content analysis to detect spam web pages |
US7124149B2 (en) | 2002-12-13 | 2006-10-17 | International Business Machines Corporation | Method and apparatus for content representation and retrieval in concept model space |
US20060294155A1 (en) | 2004-07-26 | 2006-12-28 | Patterson Anna L | Detecting spam documents in a phrase based information retrieval system |
US20070043707A1 (en) | 2005-08-17 | 2007-02-22 | Parashuram Kulkarni | Unsupervised learning tool for feature correction |
US20070129997A1 (en) * | 2005-10-28 | 2007-06-07 | Winton Davies | Systems and methods for assigning monetary values to search terms |
US20070179943A1 (en) | 2006-02-01 | 2007-08-02 | Yahoo! Inc. | Method for node classification and scoring by combining parallel iterative scoring calculation |
US20070198498A1 (en) | 2006-02-09 | 2007-08-23 | Ebay Inc. | Method and system to analyze rules based on aspect coverage |
US20080082528A1 (en) * | 2006-10-03 | 2008-04-03 | Pointer S.R.L. | Systems and methods for ranking search engine results |
US20080091708A1 (en) * | 2006-10-16 | 2008-04-17 | Idalis Software, Inc. | Enhanced Detection of Search Engine Spam |
US20080104032A1 (en) | 2004-09-29 | 2008-05-01 | Sarkar Pte Ltd. | Method and System for Organizing Items |
US20080102799A1 (en) | 2006-10-31 | 2008-05-01 | International Business Machines Corporation | Method and apparatus for message identification |
US7392262B1 (en) | 2004-02-11 | 2008-06-24 | Aol Llc | Reliability of duplicate document detection algorithms |
US20080154847A1 (en) | 2006-12-20 | 2008-06-26 | Microsoft Corporation | Cloaking detection utilizing popularity and market value |
US20080168053A1 (en) | 2007-01-10 | 2008-07-10 | Garg Priyank S | Method for improving quality of search results by avoiding indexing sections of pages |
US20080263022A1 (en) | 2007-04-19 | 2008-10-23 | Blueshift Innovations, Inc. | System and method for searching and displaying text-based information contained within documents on a database |
US20080301281A1 (en) | 2007-05-31 | 2008-12-04 | Microsoft Corporation | Search Ranger System and Double-Funnel Model for Search Spam Analyses and Browser Protection |
US20090006368A1 (en) * | 2007-06-29 | 2009-01-01 | Microsoft Corporation | Automatic Video Recommendation |
US20090106202A1 (en) | 2007-10-05 | 2009-04-23 | Aharon Mizrahi | System And Method For Enabling Search Of Content |
US20090157714A1 (en) | 2007-12-18 | 2009-06-18 | Aaron Stanton | System and method for analyzing and categorizing text |
US20090222917A1 (en) | 2008-02-28 | 2009-09-03 | Microsoft Corporation | Detecting spam from metafeatures of an email message |
US7624274B1 (en) | 2004-02-11 | 2009-11-24 | AOL LLC, a Delaware Limited Company | Decreasing the fragility of duplicate document detecting algorithms |
US7644127B2 (en) | 2004-03-09 | 2010-01-05 | Gozoom.Com, Inc. | Email analysis using fuzzy matching of text |
US20110035345A1 (en) | 2009-08-10 | 2011-02-10 | Yahoo! Inc. | Automatic classification of segmented portions of web pages |
-
2008
- 2008-03-31 US US12/059,143 patent/US8171020B1/en active Active
-
2012
- 2012-04-03 US US13/438,767 patent/US8572073B1/en active Active
Patent Citations (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6078866A (en) | 1998-09-14 | 2000-06-20 | Searchup, Inc. | Internet site searching and listing service based on monetary ranking of site listings |
US6442606B1 (en) | 1999-08-12 | 2002-08-27 | Inktomi Corporation | Method and apparatus for identifying spoof documents |
US7016939B1 (en) | 2001-07-26 | 2006-03-21 | Mcafee, Inc. | Intelligent SPAM detection system using statistical analysis |
US7124149B2 (en) | 2002-12-13 | 2006-10-17 | International Business Machines Corporation | Method and apparatus for content representation and retrieval in concept model space |
US20040148330A1 (en) * | 2003-01-24 | 2004-07-29 | Joshua Alspector | Group based spam classification |
US20050060643A1 (en) | 2003-08-25 | 2005-03-17 | Miavia, Inc. | Document similarity detection and classification system |
US20050071741A1 (en) | 2003-09-30 | 2005-03-31 | Anurag Acharya | Information retrieval based on historical data |
US20050188023A1 (en) * | 2004-01-08 | 2005-08-25 | International Business Machines Corporation | Method and apparatus for filtering spam email |
US7392262B1 (en) | 2004-02-11 | 2008-06-24 | Aol Llc | Reliability of duplicate document detection algorithms |
US7624274B1 (en) | 2004-02-11 | 2009-11-24 | AOL LLC, a Delaware Limited Company | Decreasing the fragility of duplicate document detecting algorithms |
US7644127B2 (en) | 2004-03-09 | 2010-01-05 | Gozoom.Com, Inc. | Email analysis using fuzzy matching of text |
US20060294155A1 (en) | 2004-07-26 | 2006-12-28 | Patterson Anna L | Detecting spam documents in a phrase based information retrieval system |
US20080104032A1 (en) | 2004-09-29 | 2008-05-01 | Sarkar Pte Ltd. | Method and System for Organizing Items |
US20060168032A1 (en) | 2004-12-21 | 2006-07-27 | Lucent Technologies, Inc. | Unwanted message (spam) detection based on message content |
US20060184500A1 (en) | 2005-02-11 | 2006-08-17 | Microsoft Corporation | Using content analysis to detect spam web pages |
US20070043707A1 (en) | 2005-08-17 | 2007-02-22 | Parashuram Kulkarni | Unsupervised learning tool for feature correction |
US20070129997A1 (en) * | 2005-10-28 | 2007-06-07 | Winton Davies | Systems and methods for assigning monetary values to search terms |
US20070179943A1 (en) | 2006-02-01 | 2007-08-02 | Yahoo! Inc. | Method for node classification and scoring by combining parallel iterative scoring calculation |
US20070198498A1 (en) | 2006-02-09 | 2007-08-23 | Ebay Inc. | Method and system to analyze rules based on aspect coverage |
US20080082528A1 (en) * | 2006-10-03 | 2008-04-03 | Pointer S.R.L. | Systems and methods for ranking search engine results |
US20080091708A1 (en) * | 2006-10-16 | 2008-04-17 | Idalis Software, Inc. | Enhanced Detection of Search Engine Spam |
US20080102799A1 (en) | 2006-10-31 | 2008-05-01 | International Business Machines Corporation | Method and apparatus for message identification |
US20080154847A1 (en) | 2006-12-20 | 2008-06-26 | Microsoft Corporation | Cloaking detection utilizing popularity and market value |
US20080168053A1 (en) | 2007-01-10 | 2008-07-10 | Garg Priyank S | Method for improving quality of search results by avoiding indexing sections of pages |
US20080263022A1 (en) | 2007-04-19 | 2008-10-23 | Blueshift Innovations, Inc. | System and method for searching and displaying text-based information contained within documents on a database |
US20080301281A1 (en) | 2007-05-31 | 2008-12-04 | Microsoft Corporation | Search Ranger System and Double-Funnel Model for Search Spam Analyses and Browser Protection |
US20090006368A1 (en) * | 2007-06-29 | 2009-01-01 | Microsoft Corporation | Automatic Video Recommendation |
US20090106202A1 (en) | 2007-10-05 | 2009-04-23 | Aharon Mizrahi | System And Method For Enabling Search Of Content |
US20090157714A1 (en) | 2007-12-18 | 2009-06-18 | Aaron Stanton | System and method for analyzing and categorizing text |
US20090222917A1 (en) | 2008-02-28 | 2009-09-03 | Microsoft Corporation | Detecting spam from metafeatures of an email message |
US20110035345A1 (en) | 2009-08-10 | 2011-02-10 | Yahoo! Inc. | Automatic classification of segmented portions of web pages |
Non-Patent Citations (28)
Title |
---|
Anderson, R., A local algorithm for finding dense subgraphs, In Proc. 19th Annual ACM-SIAM Symposium on Discrete Algorithms, 2008, pp. 1003-1009. |
Blum, A. et al., "Combining labeled and unlabeled data with co-training," In Proc. 11th Annual Conference on Computational Learning Theory, COLT, Jul. 1998, pp. 92-100. |
Davison, B. D., "Topical locality in the web," In Proc. 23rd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, 2004, pp. 272-279. |
Dekel, O., et al., "Large margin hierarchical classification," Proceedings of the 21 st International Conference on Machine Learning, Banff, Canada, 2004, 8 pages. |
Deng, J., et al., "ImageNet: A Large-Scale Hierarchical Image Database," IEEE Computer Society Conference on Computer Vision and Pattern Recognition, Jun. 22, 2009, pp. 248-255. |
Dumais, S., et al., "Hierarchical classification of web content," In SIGIR '00: Proceedings of the 23rd annual international ACM SIGIR conference on Research and development in information retrieval, pp. 256-263, New York, NY, USA, 2000. ACM. |
Fan, R.-E., et al., "Liblinear: A library for large linear classification," Journal of Machine Learning Research, 2008, pp. 1871-1874, vol. 9. |
Freund, Y., et al., "A decision-theoretic generalization of on-line learning and an application to Boosting," Journal of Computer and System Sciences, 1997, pp. 119-139, vol. 55, article No. SS971504. |
Goldman, S., et al., "Enhancing supervised learning with unlabeled data," In Proc. 17th International Conference on Machine Learning, 2000, pp. 327-334. |
Guillaumin, M., et al., "Multimodal semi-supervised learning for image classification," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 902-909. |
Gupta, S., et al., "Watch, listen & learn: Co-training on captioned images and videos," In Proc. ECML PKDD, 2008, Part I, LNAI 5211, pp. 457-472. |
Halevy, A., et al., "The unreasonable effectiveness of data," Intelligent Systems, IEEE, Mar. 2009, pp. 8-12, vol. 24, No. 2. |
Huang, J., et al., "Exploring web scale language models for search query processing," In Proc. 19th international conference on World wide web, Apr. 26-30, 2010, pp. 451-460. |
Koller, D., et al., "Hierarchically classifying documents using very few words," In the Proceedings of the Fourteenth International Conference on Machine Learning, ICML, Jul. 8-12, 1997, pp. 170-178. |
Li, L.-J., et al., "Optimol: automatic object picture collection via incremental model learning," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, 2007, 8 Pages. |
Li, L.-J., et al., "Towards total scene understanding: Classification, annotation and segmentation in an automatic framework," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, 2009, pp. 2036-2043. |
Liu, T.-Y., et al., "Support vector machines classification with a very large-scale taxonomy," In SIGKDD Explorations, 2005, pp. 36-43, vol. 7, Issue 1. |
Mahajan, D., et al., "Image classification using the web graph," In Proc. Multimedia, Oct. 25-29, 2010, pp. 991-994. |
Neapolitan, R. E., et al., "Learning Bayesian Networks," Prentice-Hall, Inc., Upper Saddle River, NJ, USA, 2003, Cover page and Table of Contents, 7 Pages. |
Niebles, J. C., et al., "Extracting moving people from internet videos," In ECCV '08: Proceedings of the 10th European Conference on Computer Vision, 2008, pp. 527-540, Part IV, LNCS 5305. |
Schapire, R. E., "The boosting approach to machine learning: An overview," In MSRI Workshop on Non-linear Estimation and Classification, 2002, pp. 1-23. |
Schindler, G., et al., Internet video category recognition. In Proc. First IEEE Workshop on Internet Vision, in CVPR, 2008, pp. 1-7. |
Song, Y., et al., "Taxonomic classification for web-based videos," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 871-878. |
Sun, A., et al., "Hierarchical text classification and evaluation," In ICDM, 2001, pp. 521-528. |
Tang, L., et al., "Large scale multi-label classification via metalabeler," In Proc. 18th International Conference on World Wide Web, Apr. 20-24, 2009, pp. 211-220. |
Wang, Z., et al., "Youtubecat: Learning to categorize wild web videos," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 879-886. |
Zanetti, S., et al., "A walk through the web's video clips," In Proc. First IEEE Workshop on Internet Vision, in CVPR, 2008, 8 pages. |
Zhu, X., Semi-supervised learning literature survey. In Tech Report. University of Wisconsin-Madison, Jul. 2008, pp. 1-60. |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2015167999A1 (en) * | 2014-04-28 | 2015-11-05 | Quixey, Inc. | Application spam detector |
US9432395B2 (en) | 2014-04-28 | 2016-08-30 | Quixey, Inc. | Application spam detector |
US9794284B2 (en) | 2014-04-28 | 2017-10-17 | Quixey, Inc. | Application spam detector |
Also Published As
Publication number | Publication date |
---|---|
US8171020B1 (en) | 2012-05-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8806000B1 (en) | Identifying viral videos | |
US8572073B1 (en) | Spam detection for user-generated multimedia items based on appearance in popular queries | |
US8713618B1 (en) | Segmenting video based on timestamps in comments | |
US8572647B2 (en) | Online ad placement based on user metrics for hosted media | |
US8181197B2 (en) | System and method for voting on popular video intervals | |
US10089402B1 (en) | Display of videos based on referrers | |
US7620551B2 (en) | Method and apparatus for providing search capability and targeted advertising for audio, image, and video content over the internet | |
US8788925B1 (en) | Authorized syndicated descriptions of linked web content displayed with links in user-generated content | |
US8856111B1 (en) | Cross media type recommendations for media items based on identified entities | |
US11188591B2 (en) | Video matching service to offline counterpart | |
US9088808B1 (en) | User interaction based related videos | |
US20110296452A1 (en) | System and method for providing content-aware persistent advertisements | |
US7962523B2 (en) | System and method for detecting templates of a website using hyperlink analysis | |
WO2012141655A1 (en) | In-video product annotation with web information mining | |
CN111008321A (en) | Recommendation method and device based on logistic regression, computing equipment and readable storage medium | |
US8612409B2 (en) | Method and apparatus for detecting and explaining bursty stream events in targeted groups | |
US20100057695A1 (en) | Post-processing search results on a client computer | |
KR20120087058A (en) | Apparatus, method and computer readable recording medium for providibg related contents | |
US9058329B1 (en) | Deriving associations between assets | |
US8650488B1 (en) | Identifying classic videos | |
US9208157B1 (en) | Spam detection for user-generated multimedia items based on concept clustering | |
US9361198B1 (en) | Detecting compromised resources | |
US8752184B1 (en) | Spam detection for user-generated multimedia items based on keyword stuffing | |
WO2015012714A1 (en) | Method for checking websites for real-time target audio and/or video (av) content | |
US8161065B2 (en) | Facilitating advertisement selection using advertisable units |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
US8386078B1 - Methods and systems for providing a data library for robotic devices - Google Patents
Methods and systems for providing a data library for robotic devices Download PDFInfo
- Publication number
- US8386078B1 US8386078B1 US13/463,345 US201213463345A US8386078B1 US 8386078 B1 US8386078 B1 US 8386078B1 US 201213463345 A US201213463345 A US 201213463345A US 8386078 B1 US8386078 B1 US 8386078B1
- Authority
- US
- United States
- Prior art keywords
- robotic device
- robot
- data elements
- perform
- data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D1/00—Control of position, course or altitude of land, water, air, or space vehicles, e.g. automatic pilot
- G05D1/02—Control of position or course in two dimensions
- G05D1/021—Control of position or course in two dimensions specially adapted to land vehicles
- G05D1/0268—Control of position or course in two dimensions specially adapted to land vehicles using internal positioning means
- G05D1/0274—Control of position or course in two dimensions specially adapted to land vehicles using internal positioning means using mapping information stored in a memory device
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/20—Instruments for performing navigational calculations
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D1/00—Control of position, course or altitude of land, water, air, or space vehicles, e.g. automatic pilot
- G05D1/02—Control of position or course in two dimensions
- G05D1/021—Control of position or course in two dimensions specially adapted to land vehicles
- G05D1/0231—Control of position or course in two dimensions specially adapted to land vehicles using optical position detecting means
- G05D1/0246—Control of position or course in two dimensions specially adapted to land vehicles using optical position detecting means using a video camera in combination with image processing means
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/18—File system types
- G06F16/182—Distributed file systems
Definitions
- Cloud computing refers to provision of computational resources via a computer network.
- both data and software are fully contained on a user's computer.
- the user's computer may contain relatively little software or data (perhaps a minimal operating system and web browser, for example), and may serve as a display terminal for processes occurring on a network of computers.
- a common shorthand provided for a cloud computing service is “the cloud”.
- Cloud computing has been referred to as “client-server computing”, however, there may be distinctions between general cloud computing and client-server computing.
- client-server computing may include a distributed application structure that partitions tasks or workloads between providers of a resource or service (e.g., servers), and service requesters (e.g., clients).
- Client-server computing generally involves a one-to-one relationship between the server and the client, whereas cloud computing includes generic services that can be accessed by generic clients (e.g., a one-to-one relationship or connection may not be required).
- cloud computing generally includes client-server computing, and additional services and functionality.
- Cloud computing may free users from certain hardware and software installation and maintenance tasks through use of simpler hardware on the user's computer that accesses a vast network of computing resources (e.g., processors, hard drives, etc.). Sharing of resources may reduce cost to individuals.
- any computer connected to the cloud may be connected to the same pool of computing power, applications, and files. Users can store and access personal files such as music, pictures, videos, and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium, such as a DVD or thumb drive.
- a user may open a browser and connect to a host of web servers that run user interface software that collect commands from the user and interpret the commands into commands on the servers.
- the servers may handle the computing, and can either store or retrieve information from database servers or file servers and display an updated page to the user.
- cloud computing data across multiple servers can be synchronized around the world allowing for collaborative work on one file or project, from multiple users around the world, for example.
- This disclosure may disclose, inter alia, methods and systems for robot cloud computing.
- a method in one example, includes receiving a request from a robotic device for access to a data library to receive a data element stored in the data library.
- the request may include information associated with a task of the robotic device.
- the data library stores data elements that include information configured for use by a given robotic device and that are associated with instructions executable by the given robotic device to perform a heuristic for interaction with an environment.
- the data elements are further associated with respective metadata that is indicative of a requirement of the given robotic device for using a given data element to perform at least a portion of an associated heuristic for interaction with the environment.
- the method also comprises determining the data element from among the data elements stored in the data library that is executable by the robotic device to perform at least a portion of the task of the robotic device.
- the method further comprises causing the data element to be conveyed to the robotic device.
- a method in another example, includes a robotic device performing an activity, and the robotic device determining a heuristic for interaction with an environment during performance of the activity. The method also includes in response, the robotic device sharing with a second device in substantially real-time at least a portion of information associated with the heuristic for interaction with the environment.
- the portion of information associated with the heuristic for interaction with the environment comprises information associated with a state of the robotic device and a function performed by the robotic device to carry out at least a portion of the activity.
- Any of the methods described herein may be provided in a form of instructions stored on a non-transitory, computer readable medium, that when executed by a computing device, cause the computing device to perform functions of the method. Further examples may also include articles of manufacture including tangible computer-readable media that have computer-readable instructions encoded thereon, and the instructions may comprise instructions to perform functions of the methods described herein.
- the computer readable medium may include non-transitory computer readable medium, for example, such as computer-readable media that stores data for short periods of time like register memory, processor cache and Random Access Memory (RAM).
- the computer readable medium may also include non-transitory media, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example.
- the computer readable media may also be any other volatile or non-volatile storage systems.
- the computer readable medium may be considered a computer readable storage medium, for example, or a tangible storage medium.
- circuitry may be provided that is wired to perform logical functions in any processes or methods described herein.
- a system may be provided that includes an interface, a control unit, and an update unit.
- the interface may be configured to provide communication between a robotic device and a data library.
- the data library stores data elements including information configured for use by a given robotic device and that are associated with instructions executable by the given robotic device to perform a heuristic for interaction with an environment, and the data elements stored in the data library are further associated with respective metadata that is indicative of a requirement of the given robotic device for using a given data element to perform at least a portion of an associated heuristic for interaction with the environment.
- the control unit may be configured to determine a data element from among the data elements stored in the data library that is executable by the robotic device to perform at least a portion of a task of the robotic device, and to cause the data element to be conveyed to the robotic device via the interface.
- the update unit may be configured to provide to the robotic device via the interface an update of application-specific instructions for use in a corresponding data element stored on the robotic device.
- any type of devices may be used or configured as means for performing functions of any of the methods described herein (or any portions of the methods described herein).
- FIG. 1 is an example system for cloud-based computing
- FIG. 2A illustrates an example client device
- FIG. 2B illustrates a graphical example of a robot
- FIG. 2C illustrates another example of a robot
- FIG. 3 illustrates an example of a conceptual robot-cloud interaction
- FIG. 4A is an example system in which robots may interact with the cloud and share information with other cloud computing devices;
- FIG. 4B is a block diagram of an example system configured to provide access to a data library.
- FIG. 5 is a block diagram of an example method of providing a robot app store.
- FIG. 6 is a block diagram of an example method of sharing information between devices.
- FIG. 7 is a block diagram of an example method of a robot interaction with the cloud to facilitate object recognition
- FIG. 8 is an example conceptual illustration of a robot interacting with a cloud to perform object recognition and interaction
- FIG. 9 is an example conceptual illustration of a mapping function
- FIG. 10 is a block diagram of an example method for mapping of objects in an area or mapping an area
- FIGS. 11A-11B are example interfaces illustrating a map of an area, and objects in the map
- FIG. 12 is a block diagram of an example method for mapping of objects in an area and performing inventory of objects.
- FIG. 13 is a block diagram of an example method for performing voice recognition/control by a robot
- cloud-based computing generally refers to networked computer architectures in which application execution and storage may be divided, to some extent, between client and server devices.
- a robot may be any device that has a computing ability and interacts with its surroundings with an actuation capability (e.g., electromechanical capabilities).
- a client device may be configured as a robot including various sensors and devices in the forms of modules, and different modules may be added or removed from robot depending on requirements.
- a robot may be configured to receive a second device, such as mobile phone, that may be configured to function as an accessory or a “brain” of the robot.
- a robot may interact with the cloud to perform any number of actions, such as to share information with other cloud computing devices.
- a robot may interact with the cloud to facilitate object recognition, to perform a mapping function, or to perform navigational functions (i.e., receive a map/navigation pathway previously traversed by another robot).
- a robot may interact with the cloud to perform mapping of objects in an area, to perform inventory of objects, and to perform voice recognition/control by a robot.
- a robot may perform any actions or queries to the cloud as described herein based on contextual or situational information.
- FIG. 1 is an example system 100 for cloud-based computing.
- Cloud-based computing generally refers to networked computer architectures in which application execution and storage may be divided, to some extent, between client and server devices.
- a “cloud” may refer to a service or a group of services accessible over a network (e.g., Internet) by client and server devices, for example.
- any computer connected to the cloud may be connected to the same pool of computing power, applications, and files.
- cloud computing enables a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be provisioned and released with minimal management effort or service provider interaction. Users can store and access personal files such as music, pictures, videos, and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium.
- a cloud-based application may store copies of data and/or executable program logic at remote server devices, while allowing client devices to download at least some of this data and program logic as needed for execution at the client devices.
- downloaded data and program logic can be tailored to capabilities of specific client devices (e.g., a personal computer, tablet, or mobile phone, or robot) accessing the cloud based application.
- client devices e.g., a personal computer, tablet, or mobile phone, or robot
- dividing application execution and storage between the client and server devices allows more processing to be performed by the server devices taking advantage of server devices processing power and capability, for example.
- Cloud-based computing can also refer to distributed computing architectures in which data and program logic for a cloud-based application are shared between one or more client devices and/or server devices on a near real-time basis. Parts of this data and program logic may be dynamically delivered, as needed or otherwise, to various clients accessing the cloud-based application. Details of the architecture may be transparent to users of client devices. Thus, a PC user or robot client device accessing a cloud-based application may not be aware that the PC or robot downloads program logic and/or data from the server devices, or that the PC or robot offloads processing or storage functions to the server devices, for example.
- a cloud 102 includes a cloud service 104 , a cloud platform 106 , a cloud infrastructure 108 , and a database 110 .
- the cloud 102 may include more of fewer components, and each of the cloud service 104 , the cloud platform 106 , the cloud infrastructure 108 , and the database 110 may comprise multiple elements as well.
- one or more of the described functions of the system 100 may be divided up into additional functional or physical components, or combined into fewer functional or physical components.
- the cloud 102 may represent a networked computer architecture, and in one example, the cloud service 104 represents a queue for handling requests from client devices.
- the cloud platform 106 may include a frontend of the cloud and may be coupled to the cloud service 104 to perform functions to interact with client devices.
- the cloud platform 106 may include applications used to access the cloud 102 via a user interface, such as a web browser.
- the cloud infrastructure 108 may include service application of billing components of the cloud 102 , and thus, may interact with the cloud service 104 .
- the database 110 may represent storage capabilities by the cloud 102 , and thus, may be accessed by any of the cloud service 104 , the cloud platform 106 , and/or the infrastructure 108 .
- the system 100 includes a number of client devices coupled to or configured to be capable of communicating with components of the cloud 102 .
- client devices coupled to or configured to be capable of communicating with components of the cloud 102 .
- a computer 112 a mobile device 114 , a host 116 , and a robot client 118 are shown coupled to the cloud 102 .
- more or fewer client devices may be coupled to the cloud 102 .
- different types of client devices may be coupled to the cloud 102 .
- any of the client devices may generally comprise a display system, memory, and a processor.
- the computer 112 may be any type of computing device (e.g., PC, laptop computer, etc.), and the mobile device 114 may be any type of mobile computing device (e.g., laptop, mobile telephone, cellular telephone, etc.).
- the host 116 may be any type of computing device or transmitter including a laptop computer, a mobile telephone, etc., that is configured to transmit data to the cloud 102 .
- the robot client 118 may comprise any computing device that has connection abilities to the cloud 102 and that has an actuation capability (e.g., electromechanical capabilities). A robot may further be a combination of computing devices. In some examples, the robot 118 may collect data and upload the data to the cloud 102 . The cloud 102 may be configured to perform calculations or analysis on the data and return processed data to the robot client 118 . In some examples, as shown in FIG. 1 , the cloud 102 may include a computer that is not co-located with the robot client 118 . In other examples, the robot client 118 may send data to a second client (e.g., computer 112 ) for processing.
- a second client e.g., computer 112
- the robot client 118 may include one or more sensors, such as a gyroscope or an accelerometer to measure movement of the robot client 118 .
- Other sensors may further include any of Global Positioning System (GPS) receivers, infrared sensors, optical sensors, biosensors, Radio Frequency identification (RFID) systems, wireless sensors, and/or compasses, among others, for example.
- GPS Global Positioning System
- RFID Radio Frequency identification
- any of the client devices may include an integrated user-interface (UI) that allows a user to interact with the device.
- UI user-interface
- the robot client 118 may include various buttons and/or a touchscreen interface that allow a user to provide input.
- the robot client device 118 may include a microphone configured to receive voice commands from a user.
- the robot client 118 may include one or more interfaces that allow various types of user-interface devices to be connected to the robot client 118 .
- communication links between client devices and the cloud 102 may include wired connections, such as a serial or parallel bus.
- Communication links may also be wireless links, such as link 120 , which may include Bluetooth, IEEE 802.11 (IEEE 802.11 may refer to IEEE 802.11-2007, IEEE 802.11n-2009, or any other IEEE 802.11 revision), or other wireless based communication links.
- IEEE 802.11 may refer to IEEE 802.11-2007, IEEE 802.11n-2009, or any other IEEE 802.11 revision
- the system 100 may include access points through which the client devices may communicate with the cloud 102 .
- Access points may take various forms, for example, an access point may take the form of a wireless access point (WAP) or wireless router.
- WAP wireless access point
- an access point may be a base station in a cellular network that provides Internet connectivity via the cellular network.
- the client devices may include a wired or wireless network interface through which the client devices can connect to the cloud 102 (or access points).
- the client devices may be configured use one or more protocols such as 802.11, 802.16 (WiMAX), LTE, GSM, GPRS, CDMA, EV-DO, and/or HSPDA, among others.
- the client devices may be configured use multiple wired and/or wireless protocols, such as “3G” or “4G” data connectivity using a cellular communication protocol (e.g., CDMA, GSM, or WiMAX, as well as for “WiFi” connectivity using 802.11).
- a cellular communication protocol e.g., CDMA, GSM, or WiMAX, as well as for “WiFi” connectivity using 802.11).
- Other examples are also possible.
- FIG. 2A illustrates an example client device 200 .
- the client device 200 is configured as a robot.
- a robot may be contain computer hardware, such as a processor 202 , memory or storage 204 , and sensors 206 .
- a robot controller e.g., processor 202 , computing system, and sensors 206
- the robot may have a link by which the link can access cloud servers (as shown in FIG. 1 ).
- a wired link may include, for example, a parallel bus or a serial bus such as a Universal Serial Bus (USB).
- a wireless link may include, for example, Bluetooth, IEEE 802.11, Cellular (such as GSM, CDMA, UMTS, EV-DO, WiMAX, or LTE), or Zigbee, among other possibilities.
- the storage 204 may be used for compiling data from various sensors 206 of the robot and storing program instructions.
- the processor 202 may be coupled to the storage 204 and may be configured to control the robot based on the program instructions.
- the processor 202 may also be able to interpret data from the various sensors 206 on the robot.
- Example sensors may include, smoke sensors, light sensors, radio sensors, infrared sensors, microphones, speakers, gyroscope, accelerometer, a camera, radar, capacitive sensors and touch sensors, etc.
- the client device 200 may also have components or devices that allow the client device 200 to interact with its environment.
- the client device 200 may have mechanical actuators 208 , such as motors, wheels, movable arms, etc., that enable the client device 200 to move or interact with the environment.
- various sensors and devices on the client device 200 may be modules. Different modules may be added or removed from a client device 200 depending on requirements. For example, in a low power situation, a robot may have fewer modules to reduce power usages. However, additional sensors may be added as needed. To increase an amount of data a robot may be able to collect, additional sensors may be added, for example.
- the client device 200 may be configured to receive a device, such as device 210 , that includes the processor 202 , the storage 204 , and the sensors 206 .
- the client device 200 may be a robot that have a number of mechanical actuators (e.g., a movable base), and the robot may be configured to receive a mobile telephone to function as the “brains” or control components of the robot.
- the device 210 may be considered a module of the robot.
- the device 210 may be physically attached to the robot. For example, a mobile phone may sit on a robot's “chest” and form an interactive display.
- the device 210 may provide a robot with sensors, a wireless link, and processing capabilities, for example.
- the device 210 may allow a user to download new routines for his or her robot from the cloud.
- a laundry folding routine may be stored on the cloud, and a user may be able to select this routine using a mobile phone to download the routine from the cloud, and when the mobile phone is placed into or coupled to the robot, the robot would be able to perform the downloaded action.
- the client device 200 may be coupled to a mobile or cellular telephone to provide additional sensing capabilities.
- the cellular phone may not be physically attached to the robot, but may be coupled to the robot wirelessly.
- a low cost robot may omit a direct connection to the internet.
- This robot may be able to connect to a user's cellular phone via a wireless technology (e.g., Bluetooth) to be able to access the internet.
- the robot may be able to access various sensors and communication means of the cellular phone.
- the robot may not need as many sensors to be physically provided on the robot, however, the robot may be able to keep the same or similar functionality.
- the client device 200 may include mechanical robot features, and may be configured to receive the device 210 (e.g., a mobile phone), which can provide additional peripheral components to the device 200 , such as any of an accelerometer, gyroscope, compass, GPS, camera, WiFi connection, a touch screen, etc., that are included within the device 210 .
- the device 210 e.g., a mobile phone
- additional peripheral components such as any of an accelerometer, gyroscope, compass, GPS, camera, WiFi connection, a touch screen, etc.
- FIG. 2B illustrates a graphical example of a robot 212 .
- the robot 212 is shown as a mechanical form of a person including arms, legs, and a head.
- the robot 212 may be configured to receive any number of modules or components, such a mobile phone, which may be configured to operate the robot.
- a device e.g., robot 212
- a mobile phone e.g., device 210
- Other types of devices that have connectivity to the Internet can be coupled to robot 212 to provide additional functions on the robot 212 .
- the device 210 may be separate from the robot 212 and can be attached or coupled to the robot 212 .
- the robot 212 may be a toy with only limited mechanical functionality, and by connecting device 210 to the robot 212 , the toy robot 212 may now be capable of performing a number of functions with the aid of the device 210 and/or the cloud.
- the robot 212 (or components of a robot) can be attached to a mobile phone to transform the mobile phone into a robot (e.g., with legs/arms) that is connected to a server to cause operation/functions of the robot.
- the mountable device 210 may further be configured to maximize runtime usage of the robot 212 (e.g., if the robot 212 could learn what happens to cause the user to turn the toy off or set the toy down, the device 210 may be configured to perform functions to counteract such occurrences).
- FIG. 2C illustrates another example of a robot 214 .
- the robot 214 includes a computing device 216 , sensors 218 , and a mechanical actuator 220 .
- the computing device 216 may be a laptop computer, which may be coupled to the sensors 218 .
- the sensors 218 may include a camera, infrared projectors, and other motion sensing or vision sensing elements.
- the mechanical actuator 220 may include a base, wheels, and a motor upon which the computing device 216 and the sensors 218 can be positioned, for example.
- Any of the robots illustrated in FIGS. 2A-2C may be configured to operate according to a robot operating system (e.g., an operating system designed for specific functions of the robot).
- a robot operating system may provide libraries and tools (e.g., hardware abstraction, device drivers, visualizers, message-passing, package management, etc.) to enable robot applications.
- robot operating systems include open source software such as ROS (robot operating system), DROS, or ARCOS (advanced robotics control operating system); proprietary software such as the robotic development platform ESRP from Evolution Robotics® and MRDS (Microsoft® Robotics Developer Studio), and other examples also include ROSJAVA.
- a robot operating system may include publish and subscribe functionality, and may also include functionality to control components of the robot, such as head tracking, base movement (e.g., velocity control, navigation framework), etc.
- FIG. 3 illustrates an example of a conceptual robot-cloud interaction.
- a robot such as a robot described and illustrated in FIG. 2 , may connect to a network of computers (e.g., the cloud), and may request data or processing to be performed by the cloud.
- the robot may include a number of sensors and mechanical actuators that may generally provide motor control for the robot.
- Outputs of the sensors such as camera feeds, vision sensors, etc., may be provided to the cloud, which can process the outputs to enable the robot to perform functions.
- the cloud may process a camera feed, for example, to determine a location of a robot, perform object recognition, or to indicate a navigation pathway for the robot.
- FIG. 3 generally illustrates motor controllers in which each module may conceptually represent a computer or node on the cloud that performs processing using motor controller inputs or data from the robot.
- FIG. 3 also generally illustrates sensors in which each module may conceptually represent a computer or node on the cloud that performs processing using sensor inputs or data from the robot.
- FIG. 3 further generally illustrates applications in which each module may conceptually represent a computer or node on the cloud that performs specific functions of a number of applications, e.g., navigation application, mapping application, etc.
- FIG. 3 further generally illustrates planning in which each module may conceptually represent a computer or node on the cloud that performs processing for the robot, such as general planning or computing processing.
- any of the modules may be interconnected, and/or may communicate to receive data or instructions from each other so as to provide a specific output or functionality for the robot.
- the robot may send data to a cloud for data processing, and in another example the robot may receive data from the cloud.
- the data received from the cloud may be in many different forms.
- the received data may be a processed form of data the robot sent to the cloud.
- the received data may also come from sources other than the robot.
- the cloud may have access to other sensors, other robots, and the internet.
- FIG. 4A is an example system 400 in which robots may interact with the cloud and share information with other cloud computing devices.
- the system 400 illustrates robots 402 , 404 , 406 , and 408 (e.g., as conceptual graphical representations) each coupled to a cloud 410 .
- Each robot 402 , 404 , 406 , and 408 may interact with the cloud 410 , and may further interact with each other through the cloud 410 , or through other access points and possibly directly (e.g., as shown between robots 406 and 408 ).
- the cloud 410 may receive input from several robots. Data from each robot may be complied into a larger data set. For example, the robot 402 may take a picture of an object and upload the picture to the cloud 410 .
- An object recognition program on the cloud 410 may be configured to identify the object in the picture and provide data to all the robots connected to the cloud 410 about the recognized object, as well as possibly about other characteristics (e.g., metadata) of the recognized object, such as a location, size, weight, color, etc.
- every robot may be able to know attributes of an object in a photo uploaded by the robot 402 .
- the robots 402 , 404 , 406 and 408 may perform any number of actions with an area, people, other robots, etc.
- each robot 402 , 404 , 406 and 408 has WiFi or other network based connectivity and will upload/publish data to the cloud 410 that can then be shared with any other robot.
- each robot 402 , 404 , 406 and 408 shares experiences with each other to enable learned behaviors.
- the robot 402 may traverse a pathway and encounter an obstacle, and can inform the other robots 404 , 406 , and 408 (through the cloud 410 ) of a location of the obstacle.
- Each robot 402 , 404 , 406 , and 408 will have access to real-time up to date data.
- the robot 404 can download data indicating images seen by the other robots 402 , 406 , and 408 to help the robot 404 identify an object using various views (e.g., in instances in which the robots 402 , 406 , and 408 have captured images of the objects from a different perspective).
- the robot 408 may build a map of an area, and the robot 402 can download the map to have knowledge of the area. Similarly, the robot 402 could update the map created by the robot 408 with new information about the area (e.g., the hallway now has boxes or other obstacles), or with new information collected from sensors that the robot 408 may not have had (e.g., the robot 402 may record and add temperature data to the map if the robot 408 did not have a temperature sensor).
- the robots 402 , 404 , 406 , and 408 may be configured to share data that is collected to enable faster adaptation, such that each robot 402 , 404 , 406 , and 408 can build upon a learned experience of a previous robot.
- Sharing and adaptation capabilities enable a variety of applications based on a variety of inputs/data received from the robots 402 , 404 , 406 , and 408 .
- mapping of a physical location such as providing data regarding a history of where a robot has been, can be provided.
- Another number or type of indicators may be recorded to facilitate mapping/navigational functionality of the robots 402 , 404 , 406 , and 408 (e.g., a scuff mark on a wall can be one of many cues that a robot may record and then rely upon later to orient itself).
- the cloud 410 may include, store, or provide access to a database 412 of information related to objects, and the database 412 may be accessible by all the robots 402 , 404 , 406 , and 408 .
- the database 412 may include information identifying objects, and details of the objects (e.g., mass, properties, shape, instructions for use, etc., any detail that may be associated with the object) that can be accessed by the robots 402 , 404 , 406 , and 408 to perform object recognition.
- information regarding use of an object can include, e.g., such as for a phone, how to pick up a handset, how to answer the phone, location of buttons, how to dial, etc.
- the database 412 may include information about objects that can be used to distinguish objects.
- the database 412 may include general information regarding an object (e.g., such as a computer), and additionally, information regarding a specific computer (e.g., a model number, details or technical specifications of a specific model, etc.).
- Each object may include information in the database 412 including an object name, object details, object distinguishing characteristics, etc., or a tuple space for objects that can be accessed.
- Each object may further include information in the database in an ordered list, for example.
- the database 412 may include a global unique identifier (GUID) for objects identified in the database 412 (e.g., to enable distinguishing between specific objects), and the GUID may be associated with any characteristics or information describing the object.
- GUID global unique identifier
- a robot may be configured to access the database 412 to receive information generally distinguishing objects (e.g., a baseball vs. a computer), and to receive information that may distinguish between specific objects (e.g., two different computers).
- the database 412 may be accessible by all robots through the cloud 410 (or alternatively directly accessible by all robots without communication through the cloud 410 ).
- the database 412 may thus be a shared knowledge-base stored in the cloud 410 .
- robots may share learned behaviors through the cloud 410 .
- the cloud 410 may have a server that stores robot learned activities or behaviors resulting in a shared knowledge-base of behaviors and heuristics for object interactions (e.g., a robot “app store”).
- a given robot may perform actions and build a map of an area, and then the robot can upload the data to the cloud 410 to share this knowledge with all other robots.
- a transportation of the given robot's “consciousness” can be made through the cloud 410 from one robot to another (e.g., robot “Bob” builds a map, and the knowledge of “Bob” can be downloaded onto another robot to receive knowledge of the map).
- the system 400 enables sharing learned behaviors between robotic devices in real-time. For example, a given robotic device may determine actions to perform to pick up a cup, and information associated with the actions can be published to the cloud 410 and shared with all cloud-connected robotic devices. Other robotic devices may receive a notification of the shared information during performance of a task and can utilize the shared information to continue performance of the task, for example.
- shared learning enables less complex robotic devices to take advantage of information collected by more complex robotic devices that may include more sensors, etc.
- the shared learning may be associated with a process used to determine a model for an unknown or partially known system with unknown input trajectories to achieve a desired output behavior.
- the robotic devices may store or maintain the shared state in the cloud, for example.
- the shared information may further include information about an area, for example, a robotic device may traverse a pathway and encounter an obstacle and can inform other robotic devices (through a server, e.g., “the cloud”) of a location of the obstacle.
- a server e.g., “the cloud”
- Each robotic device may have access to real-time up to date data.
- sharing of information enables real-time or temporal learning that a door is closed, for example, and that the robotic device may adjust a navigation pathway according.
- the shared information may include a state of the robotic device and a function performed.
- a server may determine the state of the robotic device and can identify information to share with the robotic device to perform a function based on the state.
- a robotic device may be configured to localize and identify a state (e.g., using simultaneous localization and mapping (SLAM) techniques).
- SLAM simultaneous localization and mapping
- the robotic device can query a server to receive shared information on an as-needed basis.
- FIG. 4B is a block diagram of an example system 420 configured to provide access to a data library 422 .
- the system 420 may include an interface 424 , a control unit 426 , and an update unit 428 each in communication with the other or coupled to each other.
- the system 420 may take the form of a computing device residing in the cloud 410 (as shown in FIG. 4B ) or coupled to the cloud 410 , for example.
- the system 420 and/or components of the system 420 may have functions that are executable via executing instructions stored in memory.
- the data library 422 may be or include the database 412 of FIG. 4B .
- the data library 422 is configured to store data elements that include information configured for use by a robotic device 430 .
- the data library 422 may store any number of data elements, and may be configured as an “app store” for robotic devices.
- the data elements may be or include instructions executable by the robotic device 430 to perform a heuristic for interaction with an environment.
- the data elements may be considered applications that can be executed by the robotic device 430 to perform a function.
- a data element may be a “coffee making app”, and the robotic device 430 may access the system 420 to receive the coffee making app data element, which can be executed by the robotic device 430 to perform functions associated with making coffee.
- Any number and variety of data elements/applications may be provided in the data library 422 , and the data elements can be configured for use by robotic devices.
- the data elements may be or include data packages that can be downloaded by the robotic device 430 .
- a data element may include a geographical or navigational maps package for the robotic device 430 , which the robotic device 430 can utilize to make determinations for traversing through an area.
- the data elements may be or include application-specific instructions.
- the robotic device 430 may include an application configured to receive application-specific instructions, and the robotic device 430 may download an update of a set of application-specific instructions for use in the application.
- the robotic device 430 may include a general cooking application, and the robotic device 430 may access the data library 422 to receive additional recipes for the cooking application.
- the data elements may be or include remote teleoperation applications.
- the remote teleoperation application may be executed by the robotic device 430 to enable the robotic device 430 to be remotely operated by a user to perform a function.
- a remote teleoperation application may include the robotic device executing an application to enable a cook to remotely control the robotic device to prepare a meal.
- the data elements may be or include videos accessible by the robotic device 430 or from which the robotic device 430 can determine a heuristic for interaction with an environment.
- a data element may include a video that illustrates a person interacting with an object (e.g., vacuuming a room with a vacuum).
- the robotic device 430 may determining semantic information from the video by comparing a robot model of a human to a human interaction with the object in the video, and determine information associated with emulating the human interaction based on a mapping between the robot model and the human interaction.
- videos including humans interacting with the object may be indexed and made available as data elements that can be provided to the robotic device 430 , which may utilize the videos to determine heuristics for interaction with an environment or object (e.g., an image matching or recognition process may be used to determine how the human interacts with the object and based on a mapping between the robot model and the human interaction, the robotic device may hold the handle of the vacuum while attempting to vacuum a surface).
- heuristics for interaction with an environment or object e.g., an image matching or recognition process may be used to determine how the human interacts with the object and based on a mapping between the robot model and the human interaction
- the data library 422 may store data elements that include information configured for use by a robotic device to interact with an environment.
- the data elements may be further associated with respective metadata that is indicative of a requirement of the robotic device 430 for using a given data element to perform at least a portion of an associated heuristic for interaction with the environment.
- the data elements may be labeled with information that indicates specific requirements of a given robotic device to execute an application associated with the data elements to or to perform a function associated with the data elements.
- Example requirements may include indicating a model number of compatible robots (e.g., robots including necessary mechanical actuators, processing power, etc.), or specific hardware/software requirements of the robotic device.
- the data elements may be further associated with respective metadata that indicates information that can be updated.
- a data element may include information about a specific computer printer (e.g., a location, instructions for use, amount of paper in a printer tray), and the metadata may be updated to indicate an amount of available paper in the printer tray or a new location if the printer is moved.
- the interface 424 may be configured to provide communication between the robotic device 430 and the data library 422 .
- the interface 424 may include a wired or wireless interface, and may include a networked interface as well.
- the control unit 426 may be configured to determine a data element from among the data elements stored in the data library 422 that is executable by the robotic device to perform at least a portion of a task of the robotic device 430 .
- the control unit 426 may determine a task of the robotic device 430 through information received in a request from the robotic device 430 , or via a query to the robotic device 430 .
- the control unit 426 may determine a general action of the robotic device 430 (e.g., making coffee), and may determine a task of the action (e.g., place coffee grounds into coffee maker) via access to a data store that maps actions to tasks.
- the control unit 426 may be further configured to cause the data element to be conveyed to the robotic device 430 via the interface 424 .
- the data element can be sent to the robotic device 430 at any time, such as during a down period of the robotic device 430 or on an as-needed basis.
- the control unit 426 may be in communication with the robotic device 430 continually or periodically, determine a task of the robotic device 430 , and provide a data element to the robotic device 430 to enable the robotic device 430 to perform the task, for example, so as to provide an on-demand app store to the robotic device 430 .
- the control unit 426 may be configured to determine the data element based on one or more of user preferences for the robotic device 430 (e.g., pre-stored preferences), an environment in which the robotic device 430 resides, capabilities of the robotic device 430 , or a software developer of the data element. Thus, the control unit 426 may filter which data elements are provided to the robotic device 430 based on many factors.
- the control unit 426 may be configured to receive from the robotic device 430 feedback indicating information associated with a rating of the data element.
- the rating may be indicative of an amount of success by the robotic device 430 to perform at least a portion of the task via execution of the data element. For example, if the robotic device 430 was able to successfully make a cup of coffee using the coffee making app, the robotic device 430 may provide a positive feedback to the control unit 426 .
- the update unit 428 may be configured to provide to the robotic device 430 via the interface 424 an update of application-specific instructions for use in a corresponding data element stored on the robotic device 430 .
- the robotic device 430 may include a cooking application, and the update unit 428 may determine recipe updates to provide to the robotic device 430 for use in the cooking application.
- the robots 402 , 404 , 406 , and 408 may share information through the cloud 410 , and may access the database 412 .
- FIG. 5 is a block diagram of an example method of providing a robot app store.
- Method 500 shown in FIG. 5 presents an embodiment of a method that, for example, could be used with the systems 100 , 400 , and 420 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- Method 500 may include one or more operations, functions, or actions as illustrated by one or more of blocks 502 - 508 . Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a storage device including a disk or hard drive.
- the computer readable medium may include non-transitory computer readable medium, for example, such as computer-readable media that stores data for short periods of time like register memory, processor cache and Random Access Memory (RAM).
- the method 500 includes receiving a request from a robotic device for access to a data library to receive a data element stored in the data library.
- the request may include information associated with a task of the robotic device.
- the robotic device may begin an action and may not be able to complete the action due to lack of instructions/software to execute to perform the action.
- the robotic device may then responsively send a request to a server to receive a given data element that may correspond to the task to be performed.
- the data library may store a number of data elements that each include information configured for use by a given robotic device and that are each associated with instructions executable by the given robotic device to perform a heuristic for interaction with an environment.
- the heuristic for interaction with the environment may include a physical interaction with the environment, for example.
- the data elements may be further associated with respective metadata that is indicative of a requirement of the given robotic device for using a given data element to perform at least a portion of an associated heuristic for interaction with the environment.
- the requirement may be for the robotic device to include or have access to a specific sensor to perform a function of the data element (e.g., a weight sensor if the function of the data element requires determining a weight of an object) or a mechanical actuator required to perform a given task via execution of the given data element.
- the method 500 includes determining the data element from among the data elements stored in the data library that is executable by the robotic device to perform at least a portion of the task of the robotic device.
- a search of the data library is performed to identify the data element that matches to the task.
- a search of the library is performed to identify the data element that additionally matches to capabilities of the robotic device by reviewing metadata information of the data elements. In this manner, the data element that may be executed by the requesting robotic device to perform a task of the requesting robotic device may be identified.
- Data elements may further be selected or identified based on other factors as well, such as based on user preferences for the robotic device, an environment in which the robotic device resides (e.g., for aquatic robotic devices, filter out land-based applications), or a software developer of the data element (e.g., filter out untrusted software developers based on preferences).
- data elements have include or be associated with an algorithm for determining whether the data elements are a match to a robotic device or to a certain task.
- the algorithm may query the robotic device to determine capabilities of the robotic device or to determine more information regarding the ask to determine whether the data element is a match.
- the method 500 includes causing the data element to be conveyed to the robotic device.
- the data element may be sent via wired or wireless communication links to the robotic device.
- the data element may be provided to the robotic device via a network connection or over the cloud.
- the data element may be sent at any time, and in some examples, the data element may be sent during a downtime of the robotic device. For instance, a time when the robotic device is in a standby mode that indicates that the robotic device is not in operation can be determined, and the data element can be conveyed to the robotic device during the time when the robotic device is in the standby mode.
- data elements may be conveyed to the robotic device after a payment is received for the data element.
- all data elements may be provided for purchase, and after the payment is received, the data element can be sent to the robotic device.
- Data elements may also be conveyed to the robotic device based on user constraints, based on preset rules (e.g., during downtime of the robotic device), or based on a category of the data element (e.g., a security robotic device may be configured to receive security applications).
- the method 500 includes receiving from the robotic device feedback indicating information associated with a rating of the data element.
- the rating may be indicative of an amount of success by the robotic device to perform at least a portion of the task via execution of the data element.
- a manner in which the robotic device makes a determination success of performing the task using the data element may depend on the task being performed. As one example, if the task is to make a cup of coffee for a user, success can be determined by the robotic device querying the user to ask whether the task was completed successfully.
- the robotic device can capture an image of a scene (e.g., take a picture of the cup of coffee), and send the image to a server that can process the image to determine whether the image indicates that the task has been completed successfully (e.g., compare the image of the cup of coffee with stored images of known successful completions of the task for making a cup of coffee).
- success can be determined based on an outcome of execution of the data element (e.g., if the task is to pick up an object, after execution of the data element, success can be determined by the robotic device determining whether the robotic device currently holds the object).
- the robotic device can make a determination about success of performing the task using the data element based on querying a user, querying a server or other local device, or making the determination itself.
- the feedback received for a data element can be stored or associated with the data element in the data library.
- the data library may store information associated with data elements that is derived from information received from robotic devices and determined by the robotic devices during performance of given tasks.
- a rating of the data element may be determined based on feedback received for the data element. The rating may be indicative of an amount of success by robotic devices to perform at least a portion of a task via execution of the data element. For example, a data element may receive a high rating when feedback has been positive (e.g., indicates success), or a low rating when feedback has been negative (e.g., indicates failure). Ratings may be high, low, or any level in between.
- Feedback may be received from all robotic devices that have used a data element.
- a mis-calibrated robotic device may use a data element, and due to mis-calibrations, may not be successful in performing the task.
- Feedback received from the robotic devices can be monitored (e.g., by tracking robotic device identifiers (ID)), such that continual negative feedback received from the same robotic device can be removed.
- ID robotic device identifiers
- the method 500 may further include determining the data element from among the data elements stored in the data library based also on the rating of the data element. Data elements that have poor ratings may not be conveyed to robotic devices. Alternatively, in some instances, more than one data element may be useful to perform a portion of the task of the robotic device, and the data element with the highest rating may be selected and conveyed to the robotic device.
- the method 500 may further include determining a second data element that is relevant to an activity of the robotic device, and in response, causing the second data element to be offered for purchase to the robotic device.
- a server may query a robotic device to determine a task or activity of the robotic device, and the server may then determine if any data elements stored in the data library would be useful for the robotic device to perform any portion of the activity. When useful data elements are found, the server may offer the data elements to the robotic device, such as to offer for purchase or possibly to offer with no request for payment.
- an application may be matched to a task of a robotic device, and also to the robotic device itself.
- Applications may be matched to robotic devices and to tasks based on user's preferences, environment of the robotic device, capabilities of the robotic device, rating/scoring of the application so as to identify a correct application for the task, for example.
- Access to and dissemination of the applications or data elements can be performed using intelligence of the cloud.
- FIG. 6 is a block diagram of an example method of sharing information between devices.
- Method 600 shown in FIG. 6 presents an embodiment of a method that, for example, could be used with the systems 100 , 400 , and 420 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- Method 600 may include one or more operations, functions, or actions as illustrated by one or more of blocks 602 - 606 . Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a storage device including a disk or hard drive.
- the method 600 includes a robotic device performing an activity.
- the activity may include a number of tasks, and may be any type of activity.
- the method 600 includes the robotic device determining a heuristic for interaction with an environment during performance of the activity.
- the robotic device may determine the heuristic for interaction with the environment during performance of the activity through trial and error. If the activity includes picking up an object, the robotic device may use sensors to determine a distance to the object, an amount to move a mechanical actuator to grasp the object, etc.
- the robotic device may further determine the heuristic for interaction with the environment during performance of the activity by determining a partially unknown model of functions to execute so as to perform a portion of the activity to achieve a desired output behavior.
- the robotic device may also access a database or server to determine information or functions to perform.
- the method 600 includes in response, the robotic device sharing with a second device in substantially real-time at least a portion of information associated with the heuristic for interaction with the environment.
- the portion of information associated with the heuristic for interaction with the environment may include information associated with a state of the robotic device (e.g., a configuration of components such as positions or locations of mechanical actuators) and a function performed by the robotic device to carry out a portion of the activity.
- the information may further be applicable for a limited amount of time, and thus, may expire.
- the configuration of the robotic device to perform the function may be reliant upon a position of objects, etc., and if the position of the objects is modified, the configuration may no longer be appropriate.
- the second device may include another robotic device, or the second device may include a server that maintains a data library of shared information.
- the method 600 may include modifying a data library to store the information shared by the robotic device so as to generate a database of shared information.
- the database of shared information may be or include information such as within the data library of FIG. 4B .
- the method 600 may include a number of robotic devices sharing information that can be stored and compiled within the data library, and functions based on the information can be determined and made available for access by robotic devices.
- the robotic device may store existing heuristics for interaction with a given environment, and may determine a refinement to one of the existing heuristics for interaction with a given environment during performance of the activity. The robotic device may then share with the second device in substantially real-time information associated with the refinement to the existing heuristic for interaction with the given environment.
- robots may interact with the cloud to perform any number of functions. Additional example functions are described below.
- FIG. 7 is a block diagram of an example method of a robot interaction with the cloud to facilitate object recognition, in accordance with at least some embodiments described herein.
- Method 700 shown in FIG. 7 presents an embodiment of a method that, for example, could be used with the systems 100 , 400 , and 420 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- Method 700 may include one or more operations, functions, or actions as illustrated by one or more of blocks 702 - 712 . Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a storage device including a disk or hard drive.
- the computer readable medium may include non-transitory computer readable medium, for example, such as computer-readable media that stores data for short periods of time like register memory, processor cache and Random Access Memory (RAM).
- the computer readable medium may also include non-transitory media, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example.
- the computer readable media may also be any other volatile or non-volatile storage systems.
- the computer readable medium may be considered a computer readable storage medium, for example, or a tangible storage device.
- each block in FIG. 7 may represent circuitry that is wired to perform the specific logical functions in the process.
- the method 700 includes capture an image of an object.
- a robot may capture many images of objects using any number of sensors, such as a camera (still pictures or video feeds), infrared projectors, etc.
- the method 700 includes capture information associated with characteristics about the object.
- a robot may optionally determine or record a weight, dimensions, a texture, color, or any type of physical attribute of the object.
- the robot may capture additional data of the object, such as by accessing memory of the object. For instance, if the object has communication capabilities (such as WiFi, Bluetooth, infrared or other wireless or wired methods), the robot may communicate with the object to determine any type of data. Additionally, the object may have serial/parallel ports through which the robot may communicate with the object.
- the object may have communication capabilities (such as WiFi, Bluetooth, infrared or other wireless or wired methods)
- the robot may communicate with the object to determine any type of data.
- the object may have serial/parallel ports through which the robot may communicate with the object.
- the method 700 includes query a computing device with the captured image and/or information.
- the robot may query the cloud with a captured image by sending the captured image to the cloud and requesting information about the image, such as an identity of the image or information associated with characteristics of objects in the image.
- the robot may query another robot directly to request information about the object, such as an image of an alternate view of the object.
- the method 700 includes receive information associated with the object.
- the robot may receive data from the cloud indicating an identity of an object in the image, or other information related to or associated with characteristics about the object.
- the cloud may perform object recognition on the uploaded image or video. For example, if a picture was taken in a living room, the cloud may be able to identify a television. The cloud may even be able to recognize an exact model of television, and provide information regarding instructions for use of the television.
- the method 700 includes store the received information for future recognitions. For example, after receiving the information from the cloud, the robot would be able to recognize the object in the future enabling the robot to learn and adapt.
- the method 700 includes perform an action based on the received information.
- the action may vary based on a type of received information, or the query that is presented by the robot.
- a robot may capture an image of a coffee maker, provide the image to the cloud, and in response receive details about the coffee maker including an identity, model number, and instructions for use. The robot may then perform actions according to the instructions for use to use the coffee maker.
- a robot may open a refrigerator, take inventory of objects inside (e.g., capture images, identify objects), determine/receive recipes for possible meals based on the determined inventory, and suggest a meal based on items in the refrigerator.
- the robot may query the cloud to identify an object and details of the object to enable the robot to interact with the object. If the received information is not fully accurate (e.g., the robot determines a different weight of the object), the robot can share this information with the cloud to update/modify a shared database in the cloud.
- objects may be tagged with a type of identifier (e.g., radio frequency identification (RFID) chip, near field communication chip (NFC), bar code, etc.), so that a robot may include an application enabling the robot to identify the object based on the identifier.
- RFID radio frequency identification
- NFC near field communication chip
- the identifier may provide information about the object including an identification, details of the object (mass, color, type, brand, etc.), a location of the object, etc.
- objects may emit beacons that can be received by the robots to determine existence/identification/location of the object.
- a physical environment may be instrumented with beacons in forms of NFC, RFID, QR codes, etc. to enable a robot to localize and identify objects.
- Beacons may be stationary beacons or moving beacons (RFID in an employee's ID badge) to perform tracking of objects.
- FIG. 8 is an example conceptual illustration of a robot 800 interacting with a cloud 802 to perform object recognition and interaction, or other functions as described in FIG. 7 .
- the robot 800 may interact with an object (such as any of objects 804 ), and interact with the cloud 802 as described above to further interact with the object.
- an object such as any of objects 804
- the method 700 to facilitate object recognition may be a higher-level service (e.g., higher in a software stack), such that details and specifics for how to recognize an object may be performed by the cloud.
- the robot may be configured to perform actions/functions based on a result of object recognition, rather than or in addition to, performing functions regarding recognizing an object.
- the robot may execute software to perform function calls, such as GetObject( ) which may return information associated with an object (e.g., a cereal box), or PickUpObject( ) which may cause the robot to pick up the object.
- function calls such as GetObject( ) which may return information associated with an object (e.g., a cereal box), or PickUpObject( ) which may cause the robot to pick up the object.
- Enabling function calls and operation of robots through the cloud facilitates control and operation of the robot without having to control or operate various sensors/mechanical aspects of the robot, for example.
- FIG. 9 is an example conceptual illustration of a mapping function.
- a robot 900 may interact with a cloud 902 to perform functions as described in FIG. 7 , for example, such as to perform object recognition queries of objects 904 .
- the robot 900 may traverse through an area 906 in any number of pathways so as to map the area.
- the robot 900 may be configured to roam around an area in which the robot 900 is located to create a map of the area 906 (e.g., room of a house) with the aid of cloud processing.
- the robot 900 may relay data collected from various sensors to the cloud 902 .
- the robot 900 may use sensors to return still pictures, video, location information, and distance information to the cloud computing system.
- the robot 900 may traverse through the area 906 capturing images using a range camera, video camera, etc., and send the data to the cloud 902 .
- the robot 900 (or servers in the cloud 902 ) may identify objects within the data and provide annotations (such as mass, shape, material, etc.) of the objects.
- a computerized map may be generated to represent the area 906 , and computer graphics (e.g., low resolution graphics) can be used to represent identified objects.
- computer graphics within the generated map of the area 906 may be replaced with high resolution images of the objects.
- the robot 900 may capture an image of a couch, and the cloud 902 may identify a specific model of the couch, and perform a search within a database to locate/identify a retailer that manufactures/sells the couch.
- a server in the cloud 902 may query a retailer's server to receive a high resolution image of the couch that may also include other metadata indicating characteristics of the couch (e.g., style, material, price, availability, etc.).
- the high resolution image of the identified couch may be inserted into the computer generated map to replace the computer graphics representing the couch.
- an annotated mapping of objects in an area can be generated.
- FIG. 10 is a block diagram of an example method for mapping of objects in an area or mapping an area, in accordance with at least some embodiments described herein.
- Method 1000 shown in FIG. 10 presents an embodiment of a method that, for example, could be used with the systems 100 , 400 , and 420 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- the various blocks of method 1000 may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a non-transitory storage device including a disk or hard drive.
- the method 1000 includes receive data gathered by a computing device associated with objects in an area.
- a robot may traverse an area and capture raw data (e.g., such as point map data) and images (e.g., still or video feed) using a range camera, video camera, still camera, etc.
- the robot may provide the gathered data to the cloud, which may receive the gathered data.
- the cloud may receive gathered metadata associated with the objects in the area, such as a time the data was collected, a location (e.g., GPS location) at which the data was collected, or other characteristics regarding when/how the data was collected.
- the method 1000 includes perform object recognition on the gathered data.
- a server on the cloud may interpret objects, and further, shapes can be matched with a three-dimensional warehouse or database of objects to identify representations of the point maps.
- the server may use any type of object recognition methods, such as by matching edges, colors, variances, etc., of the gathered data to known objects within a database.
- the objects within the database may have associated metadata indicating characteristics of the objects.
- the server can perform object extraction to identify and extract objects from the received data.
- the server can further localize the objects precisely in a map and provide annotations for the objects.
- Example annotations include mass, shape, material, etc. of the object.
- Annotated objects may be stored and shared through a global object database, such as, the database 412 in FIG. 4A .
- the method 1000 includes generate a map of the area based on the gathered data.
- the server may use locations of the data collected as well as times the data was collected to interpret a path traversed by the robot and to create a conceptual map.
- the map may be further generated based on circumstantial data of the recognized objects, such as size and shape of the object. If an object has a known size and shape, and the location of the object is known, an estimated area at which the object is present can be determined.
- the method 1000 includes insert computer images of the objects into the map.
- the server may retrieve a computer image of the recognized object (e.g., television), and insert the object into the location on the generated map at which the object is present.
- the method 1000 includes associate data with the computer images.
- the server may associate any number of metadata with the computer image, or may alternatively, retrieve metadata or other high resolution images representing the object from a retailer's database for insertion into the computer generated map.
- an image of a couch may be captured, and the server may identify a specific model of the couch, and perform a search within a database to locate/identify a retailer that manufactures/sells the couch.
- a server in the cloud may query a retailer's server to receive a high resolution image of the couch that may also include other metadata indicating characteristics of the couch (e.g., style, material, price, availability, etc.).
- the high resolution image of the identified couch may be inserted into the computer generated map to replace the computer graphics representing the couch.
- an annotated mapping of objects in an area can be generated.
- a robot builds shapes and appearances of all objects in a scene and performs object recognition as possible (with the help of the cloud) to provide an annotated map of objects.
- Raw data is gathered (e.g., point map) and used with camera data (e.g., indicates color/texture of objects) to interpret objects, and further, shapes can be matched with a 3D warehouse of objects to identify representations of the point clouds.
- FIGS. 11A-11B are example interfaces illustrating a map of an area, and objects in the map.
- a home has been outlined (e.g., in a blueprint format) to show different rooms in the home. Items in the home may also have been mapped.
- FIG. 11B illustrates an example interface illustrating mapping of objects in a room.
- the interfaces in FIGS. 11A-11B , and methods described herein may enable a user to determine configurations of rooms, and objects in the rooms.
- a user may be in a store and identify a few television stands that the user would like to purchase; however, the user would like to see how the television stands look/fit into the room configuration.
- the user may capture some images of the television stands using a device, cause the device to perform object recognition (e.g., using the method 700 in FIG. 7 ), access the interface in FIG. 11A to select a room in which to place the television stand, and access the interface in FIG. 11B to insert the new television stand in place of an old television stand (e.g., swap out the old television stand with the new television stand and place the television and peripherals into a desired configuration).
- the example interfaces in FIGS. 11A-11B may be used to maneuver computer generated objects in a room, for example.
- the interfaces in FIGS. 11A-11B may provide information (e.g., metadata) regarding rooms or objects in the rooms as determined during a mapping of the room.
- the interface in FIG. 11A may indicate details regarding a ceiling light, such as a brand name, a model number, details regarding light bulbs used by the ceiling light, etc.
- the metadata may provide links to purchase the ceiling light or accessories online, or a link to see the ceiling light in the room, such as a link to the example interface in FIG. 11B .
- the robot 900 may receive instructions to navigate from point A to point B across the area 906 .
- the robot 908 may have completed this navigation previously, and may have uploaded information regarding a possible navigation pathway to the cloud.
- the robot 908 may have documented objects along the pathway, and also, possible obstructions as well.
- the robot 900 may query the cloud requesting navigation instructions to traverse from point A to point B (e.g., a map), and may receive in response, the navigation pathway shown in FIG. 9 as previously traveled by the robot 908 . In this manner, the robots may share information to enable learning of the area 906 .
- the robot 900 may have limited memory, and in one example, to enable and manage updates, a server may include or store data to be provided to the robot 900 .
- a server may include or store data to be provided to the robot 900 .
- the robot 900 may not download “the entire world” of data, but rather, may download data representing immediate surroundings into a local cache to perform actions, such as to traverse through a portion of the area 906 .
- the robot 900 may download additional data when needed.
- downloads can occur from the server to the robot 900 , or through peer-to-peer sharing (e.g., from the robot 908 to the robot 900 ).
- basic instructions for mobility, safety, and general robot operation can be stored on-board the robot 900 , while instructions for higher-level functionality may be stored in the cloud 902 and accessed by the robot 900 as needed.
- the robot 900 can use “Just in Time” downloading where high level data can be downloaded first, followed by lower level data streamed as needed.
- providing business logic stored in the cloud 902 enables fleet-wide upgrades to all robots.
- slug trails may be used for shared information (i.e., information that may be used for object recognition).
- a slug trail may be indicative of previous requests and matching responses.
- the request/response can be cached so that future requests hit an answer sooner in path. For example, if the robot 900 is navigating through the area 906 and notices a hallway is blocked, the robot 900 can publish an update on the pathway so that other robots learn of the obstacle and other problems/constraints, and may request/receive an alternate pathway. Any interaction that the robot 900 experiences can be published to the cloud so that the robot 900 logs interactions to be shared amongst all robots. Specific locations may trigger robots to download new information. For example, when entering a new room, data about the room may be retrieved that was collected by another robot.
- FIG. 12 is a block diagram of an example method for mapping of objects in an area and performing inventory of objects, in accordance with at least some embodiments described herein.
- Method 1200 shown in FIG. 12 presents an embodiment of a method that, for example, could be used with the systems 100 and 400 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- the various blocks of method 1200 may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a non-transitory storage device including a disk or hard drive.
- the method 1200 includes determine mapping of objects in a space according to a navigation pathway.
- a robot may move through an area and perform object recognition and generate a map, as described above using method 700 in FIG. 7 and method 1000 in FIG. 10 .
- the robot may be configured to follow a predetermined navigation pathway through an area, or may follow a random navigation pathway through the area.
- the robot may store or associate the navigation pathway with the determined mapping of the area, so that a record is formed of the navigation pathway used to determine the mapping.
- the mapping may be different (e.g., a robot may not map an entirety of an area or take account a full inventory of all objects in an area).
- the mapping of the area may be, in one example, an inventory of objects in the area. As the robot traverses through the area capturing images and performing object recognition, the robot may determine what objects are present, and determine locations of objects in the area.
- the method 1200 includes store mapping and information indicating characteristics of the objects.
- the robot may store the mapping locally on memory of the robot or within the cloud.
- the robot may further store associated information indicating characteristics of the objects with the mapping of the objects, such as, metadata describing details of the objects (weight, color, model number, size, shape, etc.).
- the method 1200 includes perform a second mapping of the objects according to the previous navigation pathway. For example, at a later time, the robot may perform another mapping of the area using the same navigation pathway so as to take an inventory of the area at the later time. The robot may follow the same (or substantially same) navigation pathway previously used so that the same (or substantially same) mapping of the area and objects in the area can be determined.
- the method 1200 includes compare the second mapping to the stored mapping, and at block 1210 , the method 1200 includes identify differences between the second mapping and the stored mapping. By comparing the two mappings, differences between the mapping can be identified to determine differences in the inventoried objects.
- a user may configure an area (e.g., bedroom) into a default configuration (e.g., where all clothes are picked up off the ground, items are arranged and the room is cleaned).
- the user may request the robot to perform a mapping and inventory of objects in the bedroom with the bedroom in the default configuration.
- the user may request the robot to perform a new inventory of the room, and the new inventory can be compared to the default inventory to determine what changes have been made to the bedroom (e.g., what objects are not in the default location).
- a user may configure a stock room at a retail store into a default configuration (e.g., all shelves are fully stocked).
- the user may request the robot to perform a mapping and inventory of objects in the stock room with the room in the default configuration.
- the user may request the robot to perform a new inventory of the stock room to determine what items have been sold.
- the new inventory can be compared to the default inventory to determine what changes have been made to the stock room, such as, to indicate a current supply of items in the stock room that can be used to configure future orders.
- the default inventory map may thus be a benchmark map of the room in a clean state, so that subsequent maps can be performed to determine a differential between the benchmark and a current condition of the room.
- a robot may create an inventory of objects in a room or scene, along with a mapping of the objects to catalog all objects in the space and to store details of the objects (e.g., name, shape, color, last known location, etc.).
- the robot may have a navigation path that is followed to inventory a space, so that the same navigation path can be traversed to identify missing/new objects.
- FIG. 13 is a block diagram of an example method for performing voice recognition/control by a robot, in accordance with at least some embodiments described herein.
- Method 1300 shown in FIG. 13 presents an embodiment of a method that, for example, could be used with the systems 100 and 400 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- the various blocks of method 1300 may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a non-transitory storage device including a disk or hard drive.
- the method 1300 includes record a sample of media.
- a user may interact with a robot by speaking to the robot, and the robot may record the speech of the user.
- the robot may record samples of speech from other areas as well (e.g., televisions, radio, etc.) and of other types of media, such as music, video, live performances, etc.
- the method 1300 includes send the sample of media to a server.
- the robot may be configured to communicate with a server (e.g., the “cloud”), and may send the sample of media using wired or wireless communication to the server.
- a server e.g., the “cloud”
- the method 1300 includes receiving from the server a voice recognition on the sample of media.
- the server may use any number of known techniques for performing voice recognition, and may provide a response to the robot.
- the voice recognition response may include a textual equivalent of the speech, such as when the server performs speech to text processes.
- the method 1300 includes perform an action based on the received information.
- the voice recognition response may also include a command or instructions indicating actions for the robot to perform.
- the server may perform a voice recognition, and may further identify actions to be performed by the robot in response to the voice recognition.
- the user may speak “call John” to the robot.
- the robot may record the speech and send the speech sample to the server.
- the server may recognize the speech, and return a voice recognition response to the robot with instructions for the robot to call a user named John at the phone number 555-1234.
- the robot may then initialize a phone call to John using internal phone capabilities.
- the voice recognition response may further include instructions to the robot for how to initialize the phone call, such as to provide a map to the robot of where a telephone is located, provide a navigation pathway to the robot to instruct the robot how to traverse to the telephone, provide instructions how to use the telephone to the robot, and provide the phone number of John to the robot.
- a robot may perform any actions or queries to the cloud as described herein based on contextual or situational information.
- a robot may have information relating to a local environment in which the robot operates (e.g., a local map, a location, etc.) and this information can be used as constraints for recognition systems that are used to identify objects within captured data by the robot. For example, if the robot is in an office, the robot may access an “office” database of objects within the cloud to perform object or data recognitions. Thus, the robot may send to the cloud a query to determine or identify an object within gathered data, and the query may include contextual information, such as an indication of a location of the robot. The server may use the contextual information to select a database in which to search for a matching object.
- a local environment in which the robot operates e.g., a local map, a location, etc.
- this information can be used as constraints for recognition systems that are used to identify objects within captured data by the robot. For example, if the robot is in an office, the robot may access an “office” database of objects within the cloud to perform object or data recognitions.
- the robot may send to the
- a robot may use location, or possible nearby objects as constraints into recognition systems to provide a context of the environment enabling object recognition to be performed using a subset or a limited set of nouns/verbs/objects to improve recognition accuracy.
- the robot may operate with situational awareness such that a robot may inventory objects in a scene, and if given a command by a user, the robot can determine the content or interpret the meaning of the command based on a situation of the scene or by comparing with objects in the scene (e.g., command is to retrieve a cola from the refrigerator, and robot can use limited database warehouse of objects associated with “house” to quickly identify refrigerator/cola, etc.).
- the robot may be configured to use contextual as well as situational data to help perform decision making.
- a robot may perform actions using contextual/situational data, such as time of day, weather outside, etc. For example, at night a robot may be configured to move more slowly and make less noise to be quiet than as compared to operations during the day. In another example, in the morning a robot may offer coffee to a person as opposed to a soft drink. Other situational examples that may affect configurations of robot actions include if the weather is rainy, the robot may offer an umbrella to the person, or based on what a person is wearing, the robot may offer suggestions as to whether the person will be hot/cold due to weather. Thus, the robot may take context/situation into account, as well as whom the robot is interacting with when determining an appropriate response/function. Still further, a robot may make a sound of presence, intent, state, based on context/situations.
- contextual/situational data such as time of day, weather outside, etc. For example, at night a robot may be configured to move more slowly and make less noise to be quiet than as compared to operations during the day. In another example,
- a voice recognition database (or information from a voice recognition database) may be provided to a client device (e.g., robot) to enable the robot to perform voice/speech recognition locally.
- the voice recognition database may be provided based on a current state of the robot. As an example, if a robot is in an office setting, an office database for voice recognition may be provided to the robot to enable a voice recognition process to be performed more quickly than having the robot search within a database for all settings. Any situational or contextual information of the robot may be used to select a voice recognition database to provide to the robot. As other examples, a time of day, context of a conversation, location of the robot, etc. may be used individually or in combination to select a voice recognition database to provide to the robot.
Abstract
Description
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/463,345 US8386078B1 (en) | 2011-05-06 | 2012-05-03 | Methods and systems for providing a data library for robotic devices |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161483291P | 2011-05-06 | 2011-05-06 | |
US201261595761P | 2012-02-07 | 2012-02-07 | |
US13/463,345 US8386078B1 (en) | 2011-05-06 | 2012-05-03 | Methods and systems for providing a data library for robotic devices |
Publications (1)
Publication Number | Publication Date |
---|---|
US8386078B1 true US8386078B1 (en) | 2013-02-26 |
Family
ID=47721284
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/463,345 Active US8386078B1 (en) | 2011-05-06 | 2012-05-03 | Methods and systems for providing a data library for robotic devices |
Country Status (1)
Country | Link |
---|---|
US (1) | US8386078B1 (en) |
Cited By (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130290234A1 (en) * | 2012-02-02 | 2013-10-31 | Visa International Service Association | Intelligent Consumer Service Terminal Apparatuses, Methods and Systems |
US8830057B1 (en) * | 2012-02-09 | 2014-09-09 | Google Inc. | Systems and methods for using robots to monitor environmental conditions in an environment |
CN104239433A (en) * | 2014-08-27 | 2014-12-24 | 百度在线网络技术（北京）有限公司 | Networking refrigerator and method and system for recommending information thereof |
US9008839B1 (en) * | 2012-02-07 | 2015-04-14 | Google Inc. | Systems and methods for allocating tasks to a plurality of robotic devices |
US20150120043A1 (en) * | 2013-10-30 | 2015-04-30 | Georgia Tech Research Corporation | Methods and systems for facilitating interactions between a robot and user |
CN104656609A (en) * | 2014-12-25 | 2015-05-27 | 南京熊猫电子股份有限公司 | Robot remote real-time monitoring system and method based on cloud computing |
CN105252533A (en) * | 2015-11-27 | 2016-01-20 | 百度在线网络技术（北京）有限公司 | Robot interactive system, cloud computing platform, user terminal and robot |
CN105291104A (en) * | 2015-12-09 | 2016-02-03 | 哈尔滨云控机器人科技有限公司 | Robot remote control method based on cloud platform |
WO2016032807A1 (en) * | 2014-08-25 | 2016-03-03 | Google Inc. | Methods and systems for augmented reality to display virtual representations of robotic device actions |
CN105717925A (en) * | 2016-03-21 | 2016-06-29 | 柳州职业技术学院 | Computer mouse robot control system based on wireless sensor network and cloud computing |
US20160246297A1 (en) * | 2015-02-24 | 2016-08-25 | Siemens Corporation | Cloud-based control system for unmanned aerial vehicles |
US9486922B2 (en) * | 2012-02-07 | 2016-11-08 | X Development Llc | Systems and methods for determining a status of a component of a device |
WO2017053276A1 (en) * | 2015-09-21 | 2017-03-30 | Amazon Technologies, Inc. | Networked robotic manipulators |
US20170157766A1 (en) * | 2015-12-03 | 2017-06-08 | Intel Corporation | Machine object determination based on human interaction |
US20170185085A1 (en) * | 2015-12-23 | 2017-06-29 | Lior Storfer | Navigating semi-autonomous mobile robots |
US9916506B1 (en) | 2015-07-25 | 2018-03-13 | X Development Llc | Invisible fiducial markers on a robot to visualize the robot in augmented reality |
US9919427B1 (en) | 2015-07-25 | 2018-03-20 | X Development Llc | Visualizing robot trajectory points in augmented reality |
US20180111274A1 (en) * | 2016-10-21 | 2018-04-26 | Naver Corporation | Method and system for controlling indoor autonomous robot |
US9959531B2 (en) | 2011-08-18 | 2018-05-01 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US20180133895A1 (en) * | 2016-11-17 | 2018-05-17 | Samsung Electronics Co., Ltd. | Mobile robot system, mobile robot, and method of controlling the mobile robot system |
US20180239357A1 (en) * | 2017-02-20 | 2018-08-23 | Lg Electronics Inc. | Method for drawing map having feature of object applied thereto and robot implementing the same |
US20180316557A1 (en) * | 2017-05-01 | 2018-11-01 | General Electric Company | Resilient network configuration for time sensitive traffic |
US10121129B2 (en) | 2011-07-05 | 2018-11-06 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10154084B2 (en) | 2011-07-05 | 2018-12-11 | Visa International Service Association | Hybrid applications utilizing distributed models and views apparatuses, methods and systems |
US10169058B2 (en) * | 2015-09-24 | 2019-01-01 | Voodoo Robotics, Inc. | Scripting language for robotic storage and retrieval design for warehouses |
CN109144048A (en) * | 2017-06-16 | 2019-01-04 | 德国福维克控股公司 | System at least two ground processing equipments |
US10223730B2 (en) | 2011-09-23 | 2019-03-05 | Visa International Service Association | E-wallet store injection search apparatuses, methods and systems |
US10223691B2 (en) | 2011-02-22 | 2019-03-05 | Visa International Service Association | Universal electronic payment apparatuses, methods and systems |
US20190087161A1 (en) * | 2017-09-18 | 2019-03-21 | Rapyuta Robotics Co., Ltd. | Build and deploy cloud device application on cloud and devices |
US10242358B2 (en) | 2011-08-18 | 2019-03-26 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US10262001B2 (en) | 2012-02-02 | 2019-04-16 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia merchant analytics database platform apparatuses, methods and systems |
US10259117B2 (en) * | 2016-08-02 | 2019-04-16 | At&T Intellectual Property I, L.P. | On-demand robot virtualization |
US10493625B2 (en) | 2014-09-02 | 2019-12-03 | Cavos Bagatelle Verwaltungs Gmbh & Co. Kg | System for generating sets of control data for robots |
CN110719828A (en) * | 2017-11-16 | 2020-01-21 | 谷歌有限责任公司 | Component feature detector for robotic system |
US10586227B2 (en) | 2011-02-16 | 2020-03-10 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
WO2020091725A1 (en) * | 2018-10-29 | 2020-05-07 | Siemens Aktiengesellschaft | Dynamically refining markers in an autonomous world model |
US10814893B2 (en) | 2016-03-21 | 2020-10-27 | Ge Global Sourcing Llc | Vehicle control system |
US10825001B2 (en) | 2011-08-18 | 2020-11-03 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US10894318B2 (en) | 2016-02-23 | 2021-01-19 | Abb Schweiz Ag | Robot controller system and method therefor |
US10913146B1 (en) * | 2015-08-08 | 2021-02-09 | X Development Llc | Replacing a first robot with a second robot during performance of a task by the first robot |
US10948925B2 (en) | 2016-06-08 | 2021-03-16 | Samsung Electronics Co., Ltd. | Electronic device, external server, and method for controlling same |
US11037138B2 (en) | 2011-08-18 | 2021-06-15 | Visa International Service Association | Third-party value added wallet features and interfaces apparatuses, methods, and systems |
US11072356B2 (en) | 2016-06-30 | 2021-07-27 | Transportation Ip Holdings, Llc | Vehicle control system |
US11288661B2 (en) | 2011-02-16 | 2022-03-29 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
US11597080B2 (en) * | 2020-03-20 | 2023-03-07 | Tata Consultancy Services Limited | Knowledge partitioning for task execution by conversational tele-presence robots in a geographically separated environment |
US11964398B2 (en) | 2021-01-28 | 2024-04-23 | Micropharmacy Corporation | Systems and methods for autonomous robot distributed processing |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6675156B1 (en) | 1999-10-26 | 2004-01-06 | Sony France S.A. | Robotic teleportation method and system |
JP2005111603A (en) | 2003-10-07 | 2005-04-28 | Lazona Inc | Robot and robot management device |
JP2005279828A (en) | 2004-03-29 | 2005-10-13 | Victor Co Of Japan Ltd | Information sharable robot |
US20080243305A1 (en) | 2007-03-30 | 2008-10-02 | Sungkyunkwan University Foundation For Corporate Collaboration | Central information processing system and method for service robot having layered information structure according to recognition and reasoning level |
US20090187278A1 (en) | 2007-04-17 | 2009-07-23 | Yefim Zhuk | Adaptive Mobile Robot System with Knowledge-Driven Architecture |
WO2009097336A2 (en) | 2008-01-28 | 2009-08-06 | Seegrid Corporation | Methods for repurposing temporal-spatial information collected by service robots |
US20090254217A1 (en) * | 2008-04-02 | 2009-10-08 | Irobot Corporation | Robotics Systems |
US20110071676A1 (en) * | 2009-09-22 | 2011-03-24 | Gm Global Technology Operations, Inc. | Interactive robot control system and method of use |
US7941242B2 (en) * | 2003-09-29 | 2011-05-10 | International Business Machines Corporation | Apparatus and method to provide redundant accessor availability |
US20110190931A1 (en) * | 2010-02-02 | 2011-08-04 | Noel Wayne Anderson | Pheromone for robotic boundary |
US20120178431A1 (en) * | 2011-01-08 | 2012-07-12 | Gold Steven K | Proximity-Enabled Remote Control |
-
2012
- 2012-05-03 US US13/463,345 patent/US8386078B1/en active Active
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6675156B1 (en) | 1999-10-26 | 2004-01-06 | Sony France S.A. | Robotic teleportation method and system |
US7941242B2 (en) * | 2003-09-29 | 2011-05-10 | International Business Machines Corporation | Apparatus and method to provide redundant accessor availability |
JP2005111603A (en) | 2003-10-07 | 2005-04-28 | Lazona Inc | Robot and robot management device |
JP2005279828A (en) | 2004-03-29 | 2005-10-13 | Victor Co Of Japan Ltd | Information sharable robot |
US20080243305A1 (en) | 2007-03-30 | 2008-10-02 | Sungkyunkwan University Foundation For Corporate Collaboration | Central information processing system and method for service robot having layered information structure according to recognition and reasoning level |
US8214079B2 (en) * | 2007-03-30 | 2012-07-03 | Sungkyunkwan University Foundation For Corporate Collaboration | Central information processing system and method for service robot having layered information structure according to recognition and reasoning level |
US20090187278A1 (en) | 2007-04-17 | 2009-07-23 | Yefim Zhuk | Adaptive Mobile Robot System with Knowledge-Driven Architecture |
WO2009097336A2 (en) | 2008-01-28 | 2009-08-06 | Seegrid Corporation | Methods for repurposing temporal-spatial information collected by service robots |
US20090254217A1 (en) * | 2008-04-02 | 2009-10-08 | Irobot Corporation | Robotics Systems |
US20110071676A1 (en) * | 2009-09-22 | 2011-03-24 | Gm Global Technology Operations, Inc. | Interactive robot control system and method of use |
US20110190931A1 (en) * | 2010-02-02 | 2011-08-04 | Noel Wayne Anderson | Pheromone for robotic boundary |
US20120178431A1 (en) * | 2011-01-08 | 2012-07-12 | Gold Steven K | Proximity-Enabled Remote Control |
Non-Patent Citations (1)
Title |
---|
Hubel et al., "Learning and Adaptation in Dynamic Systems: A Literature Survey", ICT Call 4 RoboEarth Project 2010-248942, http://www.roboearth.org, Apr. 1, 2010. |
Cited By (89)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11288661B2 (en) | 2011-02-16 | 2022-03-29 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
US10586227B2 (en) | 2011-02-16 | 2020-03-10 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
US11023886B2 (en) | 2011-02-22 | 2021-06-01 | Visa International Service Association | Universal electronic payment apparatuses, methods and systems |
US10223691B2 (en) | 2011-02-22 | 2019-03-05 | Visa International Service Association | Universal electronic payment apparatuses, methods and systems |
US10803449B2 (en) | 2011-07-05 | 2020-10-13 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10419529B2 (en) | 2011-07-05 | 2019-09-17 | Visa International Service Association | Hybrid applications utilizing distributed models and views apparatuses, methods and systems |
US11010753B2 (en) | 2011-07-05 | 2021-05-18 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10121129B2 (en) | 2011-07-05 | 2018-11-06 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US11900359B2 (en) | 2011-07-05 | 2024-02-13 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10154084B2 (en) | 2011-07-05 | 2018-12-11 | Visa International Service Association | Hybrid applications utilizing distributed models and views apparatuses, methods and systems |
US10242358B2 (en) | 2011-08-18 | 2019-03-26 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US9959531B2 (en) | 2011-08-18 | 2018-05-01 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US10354240B2 (en) | 2011-08-18 | 2019-07-16 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US11037138B2 (en) | 2011-08-18 | 2021-06-15 | Visa International Service Association | Third-party value added wallet features and interfaces apparatuses, methods, and systems |
US11010756B2 (en) | 2011-08-18 | 2021-05-18 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US11397931B2 (en) | 2011-08-18 | 2022-07-26 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US11763294B2 (en) | 2011-08-18 | 2023-09-19 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US10825001B2 (en) | 2011-08-18 | 2020-11-03 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US11803825B2 (en) | 2011-08-18 | 2023-10-31 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US10223730B2 (en) | 2011-09-23 | 2019-03-05 | Visa International Service Association | E-wallet store injection search apparatuses, methods and systems |
US11354723B2 (en) | 2011-09-23 | 2022-06-07 | Visa International Service Association | Smart shopping cart with E-wallet store injection search |
US11074218B2 (en) | 2012-02-02 | 2021-07-27 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia merchant analytics database platform apparatuses, methods and systems |
US10983960B2 (en) | 2012-02-02 | 2021-04-20 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia centralized personal information database platform apparatuses, methods and systems |
US20130290234A1 (en) * | 2012-02-02 | 2013-10-31 | Visa International Service Association | Intelligent Consumer Service Terminal Apparatuses, Methods and Systems |
US11036681B2 (en) | 2012-02-02 | 2021-06-15 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia analytical model sharing database platform apparatuses, methods and systems |
US10262001B2 (en) | 2012-02-02 | 2019-04-16 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia merchant analytics database platform apparatuses, methods and systems |
US10430381B2 (en) | 2012-02-02 | 2019-10-01 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia centralized personal information database platform apparatuses, methods and systems |
US9486922B2 (en) * | 2012-02-07 | 2016-11-08 | X Development Llc | Systems and methods for determining a status of a component of a device |
US9446511B2 (en) | 2012-02-07 | 2016-09-20 | Google Inc. | Systems and methods for allocating tasks to a plurality of robotic devices |
US10500718B2 (en) | 2012-02-07 | 2019-12-10 | X Development Llc | Systems and methods for allocating tasks to a plurality of robotic devices |
US9862089B2 (en) | 2012-02-07 | 2018-01-09 | X Development Llc | Systems and methods for allocating tasks to a plurality of robotic devices |
US9008839B1 (en) * | 2012-02-07 | 2015-04-14 | Google Inc. | Systems and methods for allocating tasks to a plurality of robotic devices |
US9830798B2 (en) | 2012-02-09 | 2017-11-28 | X Development Llc | Systems and methods for using robots to monitor environmental conditions in an environment |
US9437097B2 (en) | 2012-02-09 | 2016-09-06 | Google Inc. | Systems and methods for using robots to monitor environmental conditions in an environment |
US10242549B2 (en) | 2012-02-09 | 2019-03-26 | X Development Llc | Systems and methods for using robots to monitor environmental conditions in an environment |
US8830057B1 (en) * | 2012-02-09 | 2014-09-09 | Google Inc. | Systems and methods for using robots to monitor environmental conditions in an environment |
US9846843B2 (en) * | 2013-10-30 | 2017-12-19 | Georgia Tech Research Corporation | Methods and systems for facilitating interactions between a robot and user |
US20150120043A1 (en) * | 2013-10-30 | 2015-04-30 | Georgia Tech Research Corporation | Methods and systems for facilitating interactions between a robot and user |
WO2016032807A1 (en) * | 2014-08-25 | 2016-03-03 | Google Inc. | Methods and systems for augmented reality to display virtual representations of robotic device actions |
US10896543B2 (en) | 2014-08-25 | 2021-01-19 | X Development Llc | Methods and systems for augmented reality to display virtual representations of robotic device actions |
CN104239433A (en) * | 2014-08-27 | 2014-12-24 | 百度在线网络技术（北京）有限公司 | Networking refrigerator and method and system for recommending information thereof |
CN104239433B (en) * | 2014-08-27 | 2017-12-01 | 百度在线网络技术（北京）有限公司 | Can be networked refrigerator and its information recommendation method and system |
US10493625B2 (en) | 2014-09-02 | 2019-12-03 | Cavos Bagatelle Verwaltungs Gmbh & Co. Kg | System for generating sets of control data for robots |
CN104656609A (en) * | 2014-12-25 | 2015-05-27 | 南京熊猫电子股份有限公司 | Robot remote real-time monitoring system and method based on cloud computing |
US20160246297A1 (en) * | 2015-02-24 | 2016-08-25 | Siemens Corporation | Cloud-based control system for unmanned aerial vehicles |
US9919427B1 (en) | 2015-07-25 | 2018-03-20 | X Development Llc | Visualizing robot trajectory points in augmented reality |
US9916506B1 (en) | 2015-07-25 | 2018-03-13 | X Development Llc | Invisible fiducial markers on a robot to visualize the robot in augmented reality |
US10913146B1 (en) * | 2015-08-08 | 2021-02-09 | X Development Llc | Replacing a first robot with a second robot during performance of a task by the first robot |
US9718188B2 (en) | 2015-09-21 | 2017-08-01 | Amazon Technologies, Inc. | Networked robotic manipulators |
US9987748B2 (en) | 2015-09-21 | 2018-06-05 | Amazon Technologies, Inc. | Networked robotic manipulators |
WO2017053276A1 (en) * | 2015-09-21 | 2017-03-30 | Amazon Technologies, Inc. | Networked robotic manipulators |
US10169058B2 (en) * | 2015-09-24 | 2019-01-01 | Voodoo Robotics, Inc. | Scripting language for robotic storage and retrieval design for warehouses |
CN105252533A (en) * | 2015-11-27 | 2016-01-20 | 百度在线网络技术（北京）有限公司 | Robot interactive system, cloud computing platform, user terminal and robot |
CN105252533B (en) * | 2015-11-27 | 2017-03-22 | 百度在线网络技术（北京）有限公司 | Robot interactive system, cloud computing platform, user terminal and robot |
US20170157766A1 (en) * | 2015-12-03 | 2017-06-08 | Intel Corporation | Machine object determination based on human interaction |
US9975241B2 (en) * | 2015-12-03 | 2018-05-22 | Intel Corporation | Machine object determination based on human interaction |
CN105291104A (en) * | 2015-12-09 | 2016-02-03 | 哈尔滨云控机器人科技有限公司 | Robot remote control method based on cloud platform |
CN105291104B (en) * | 2015-12-09 | 2017-05-17 | 哈尔滨云控机器人科技有限公司 | Robot remote control method based on cloud platform |
US11940797B2 (en) | 2015-12-23 | 2024-03-26 | Intel Corporation | Navigating semi-autonomous mobile robots |
US20170185085A1 (en) * | 2015-12-23 | 2017-06-29 | Lior Storfer | Navigating semi-autonomous mobile robots |
US10642274B2 (en) | 2015-12-23 | 2020-05-05 | Intel Corporation | Navigating semi-autonomous mobile robots |
US9740207B2 (en) * | 2015-12-23 | 2017-08-22 | Intel Corporation | Navigating semi-autonomous mobile robots |
US10894318B2 (en) | 2016-02-23 | 2021-01-19 | Abb Schweiz Ag | Robot controller system and method therefor |
US10814893B2 (en) | 2016-03-21 | 2020-10-27 | Ge Global Sourcing Llc | Vehicle control system |
CN105717925A (en) * | 2016-03-21 | 2016-06-29 | 柳州职业技术学院 | Computer mouse robot control system based on wireless sensor network and cloud computing |
US10948925B2 (en) | 2016-06-08 | 2021-03-16 | Samsung Electronics Co., Ltd. | Electronic device, external server, and method for controlling same |
US11072356B2 (en) | 2016-06-30 | 2021-07-27 | Transportation Ip Holdings, Llc | Vehicle control system |
US10259117B2 (en) * | 2016-08-02 | 2019-04-16 | At&T Intellectual Property I, L.P. | On-demand robot virtualization |
US11103995B2 (en) | 2016-08-02 | 2021-08-31 | At&T Intellectual Property I, L.P. | On-demand robot virtualization |
US20180111274A1 (en) * | 2016-10-21 | 2018-04-26 | Naver Corporation | Method and system for controlling indoor autonomous robot |
JP2018067314A (en) * | 2016-10-21 | 2018-04-26 | ネイバー コーポレーションＮＡＶＥＲ Ｃｏｒｐｏｒａｔｉｏｎ | Method and system for controlling indoor autonomous travelling robot |
US10974395B2 (en) * | 2016-10-21 | 2021-04-13 | Naver Labs Corporation | Method and system for controlling indoor autonomous robot |
US20180133895A1 (en) * | 2016-11-17 | 2018-05-17 | Samsung Electronics Co., Ltd. | Mobile robot system, mobile robot, and method of controlling the mobile robot system |
US11097416B2 (en) * | 2016-11-17 | 2021-08-24 | Samsung Electronics Co., Ltd. | Mobile robot system, mobile robot, and method of controlling the mobile robot system |
US20180239357A1 (en) * | 2017-02-20 | 2018-08-23 | Lg Electronics Inc. | Method for drawing map having feature of object applied thereto and robot implementing the same |
US10871781B2 (en) * | 2017-02-20 | 2020-12-22 | Lg Electronics Inc. | Method for drawing map having feature of object applied thereto and robot implementing the same |
US10805222B2 (en) * | 2017-05-01 | 2020-10-13 | General Electric Company | Resilient network configuration for time sensitive traffic |
US20180316557A1 (en) * | 2017-05-01 | 2018-11-01 | General Electric Company | Resilient network configuration for time sensitive traffic |
CN109144048A (en) * | 2017-06-16 | 2019-01-04 | 德国福维克控股公司 | System at least two ground processing equipments |
CN109144048B (en) * | 2017-06-16 | 2023-05-19 | 德国福维克控股公司 | System with at least two ground treatment devices |
US20190087161A1 (en) * | 2017-09-18 | 2019-03-21 | Rapyuta Robotics Co., Ltd. | Build and deploy cloud device application on cloud and devices |
US10846066B2 (en) * | 2017-09-18 | 2020-11-24 | Rapyuta Robotics Co., Ltd. | Build and deploy cloud device application on cloud and devices |
CN110719828B (en) * | 2017-11-16 | 2022-10-28 | 谷歌有限责任公司 | Method performed by data center robot and data center robot system |
CN110719828A (en) * | 2017-11-16 | 2020-01-21 | 谷歌有限责任公司 | Component feature detector for robotic system |
US10828790B2 (en) * | 2017-11-16 | 2020-11-10 | Google Llc | Component feature detector for robotic systems |
CN113168177A (en) * | 2018-10-29 | 2021-07-23 | 西门子股份公司 | Dynamic refining tagging in autonomic world models |
WO2020091725A1 (en) * | 2018-10-29 | 2020-05-07 | Siemens Aktiengesellschaft | Dynamically refining markers in an autonomous world model |
US11597080B2 (en) * | 2020-03-20 | 2023-03-07 | Tata Consultancy Services Limited | Knowledge partitioning for task execution by conversational tele-presence robots in a geographically separated environment |
US11964398B2 (en) | 2021-01-28 | 2024-04-23 | Micropharmacy Corporation | Systems and methods for autonomous robot distributed processing |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8386078B1 (en) | Methods and systems for providing a data library for robotic devices | |
US9895802B1 (en) | Projection of interactive map data | |
US8380349B1 (en) | Methods and systems for providing instructions to a robotic device | |
US10391633B1 (en) | Systems and methods for inventorying objects | |
US8984136B1 (en) | Systems and methods for object recognition | |
US10168690B2 (en) | Methods and systems for multirobotic management | |
JP6440745B2 (en) | Method and system for augmented reality displaying a virtual representation of the action of a robotic device | |
US10507577B2 (en) | Methods and systems for generating instructions for a robotic system to carry out a task | |
US8428777B1 (en) | Methods and systems for distributing tasks among robotic devices | |
US9399294B1 (en) | Displaying estimated image data in a user interface | |
US8307061B1 (en) | System and method for determining manufacturer instructions executable by a robotic device | |
US8452451B1 (en) | Methods and systems for robotic command language | |
US8886829B1 (en) | Methods and systems for robot cloud computing using slug trails | |
US8380652B1 (en) | Methods and systems for autonomous robotic decision making | |
US8374421B1 (en) | Methods and systems for extracting still frames from a compressed video | |
US8594845B1 (en) | Methods and systems for robotic proactive informational retrieval from ambient context | |
US8406926B1 (en) | Methods and systems for robotic analysis of environmental conditions and response thereto | |
US8525836B1 (en) | Systems and methods for representing information associated with objects in an area | |
US9399290B2 (en) | Enhancing sensor data by coordinating and/or correlating data attributes | |
US9477302B2 (en) | System and method for programing devices within world space volumes | |
US8525853B1 (en) | Methods and systems for generating a layered display of a device | |
US20150153715A1 (en) | Rapidly programmable locations in space | |
Chen | Vision-based Appliance Identification and Control with Smartphone Sensors in Commercial Buildings |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HICKMAN, RYAN;KOHLER, DAMON;FRANCIS, ANTHONY GERALD, JR.;AND OTHERS;SIGNING DATES FROM 20120501 TO 20120502;REEL/FRAME:028156/0277 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: X DEVELOPMENT LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:039900/0610Effective date: 20160901 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
|
AS | Assignment |
Owner name: X DEVELOPMENT LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:047631/0671Effective date: 20160901 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CORRECTIVE ASSIGNMENT TO CORRECT THE CORRECTIVE BY NULLIFICATIONTO CORRECT INCORRECTLY RECORDED APPLICATION NUMBERS PREVIOUSLY RECORDED ON REEL 044142 FRAME 0357. ASSIGNOR(S) HEREBY CONFIRMS THE CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:047837/0678Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:X DEVELOPMENT LLC;REEL/FRAME:064658/0001Effective date: 20230401 |
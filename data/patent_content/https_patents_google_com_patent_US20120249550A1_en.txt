US20120249550A1 - Selective Transmission of Image Data Based on Device Attributes - Google Patents
Selective Transmission of Image Data Based on Device Attributes Download PDFInfo
- Publication number
- US20120249550A1 US20120249550A1 US13/523,776 US201213523776A US2012249550A1 US 20120249550 A1 US20120249550 A1 US 20120249550A1 US 201213523776 A US201213523776 A US 201213523776A US 2012249550 A1 US2012249550 A1 US 2012249550A1
- Authority
- US
- United States
- Prior art keywords
- image
- available
- asset
- ability
- assets
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N9/00—Details of colour television systems
- H04N9/79—Processing of colour television signals in connection with recording
- H04N9/80—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback
- H04N9/82—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only
- H04N9/8205—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only involving the multiplexing of an additional signal and the colour video signal
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/234—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs
- H04N21/2343—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs involving reformatting operations of video signals for distribution or compliance with end-user requests or end-user device requirements
- H04N21/234363—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs involving reformatting operations of video signals for distribution or compliance with end-user requests or end-user device requirements by altering the spatial resolution, e.g. for clients with a lower screen resolution
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/258—Client or end-user data management, e.g. managing client capabilities, user preferences or demographics, processing of multiple end-users preferences to derive collaborative data
- H04N21/25808—Management of client data
- H04N21/25825—Management of client data involving client display capabilities, e.g. screen resolution of a mobile phone
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/258—Client or end-user data management, e.g. managing client capabilities, user preferences or demographics, processing of multiple end-users preferences to derive collaborative data
- H04N21/25808—Management of client data
- H04N21/25833—Management of client data involving client hardware characteristics, e.g. manufacturer, processing or storage capabilities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/258—Client or end-user data management, e.g. managing client capabilities, user preferences or demographics, processing of multiple end-users preferences to derive collaborative data
- H04N21/25866—Management of end-user data
- H04N21/25891—Management of end-user data being end-user preferences
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/65—Transmission of management data between client and server
- H04N21/658—Transmission by the client directed to the server
- H04N21/6582—Data stored in the client, e.g. viewing habits, hardware capabilities, credit card number
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N5/00—Details of television systems
- H04N5/76—Television signal recording
- H04N5/765—Interface circuits between an apparatus for recording and another apparatus
- H04N5/77—Interface circuits between an apparatus for recording and another apparatus between a recording apparatus and a television camera
- H04N5/772—Interface circuits between an apparatus for recording and another apparatus between a recording apparatus and a television camera the recording apparatus and the television camera being placed in the same enclosure
Definitions
- the present invention relates to storage, manipulation, and/or transmission of image data and related data.
- Light field photography captures information about the direction of light as it arrives at a sensor within a data acquisition device such as a light field camera. Such light field data can be used to create representations of scenes that can be manipulated by a user. Subsequent to image capture, light field processing can be used to generate images using the light field data. Various types of light field processing can be performed, including for example refocusing, aberration correction, 3D viewing, parallax shifting, changing the viewpoint, and the like. These and other techniques are described in the related U.S. Utility Applications referenced above.
- images may be represented as digital data that can be stored electronically.
- image formats are known in the art, such as for example JPG, EXIF, BMP, PNG, PDF, TIFF and/or HD Photo data formats.
- image formats can be used for storing, manipulating, displaying, and/or transmitting image data.
- Different devices may have different attributes, including capabilities, limitations, characteristics, and/or features for displaying, storing, and/or controlling images. Such differences may include, for example, screen sizes, three-dimensional vs. two-dimensional capability, input mechanisms, processing power, storage space, graphics processing units (or lack thereof), and the like. Such differences in attributes can be based on device hardware, software, bandwidth limitations, user preferences, and/or any other factors. In addition, in different contexts, it may be desirable to provide different types of capabilities and features for viewing and/or controlling images. Furthermore, for different applications and contexts, it may be useful or desirable to provide different image sizes.
- a device with a small, relatively low-resolution screen may not be capable of displaying images at the same resolution as a large high-definition television.
- Sending a full-resolution image to the cellular telephone wastes valuable bandwidth and storage space; conversely, sending a low-resolution image to the high-definition television results in poor quality output.
- sending data for controlling an image using, for example, an accelerometer is a waste of bandwidth if the target device does not have an accelerometer.
- sending data that is used in refocusing operations to a device that does not have such refocusing capability is another example of wasted resources.
- a system and method are provided for storing, manipulating, and/or transmitting image data, such as light field photographs and the like, in a manner that efficiently delivers different capabilities and features based on device attributes, user requirements and preferences, context, and/or other factors.
- the techniques of the present invention are implemented by providing supplemental information in data structures for storing frames and pictures as described in related U.S. Utility Application Serial No. 13/155,882 for “Storage and Transmission of Pictures Including Multiple Frames,” (Atty. Docket No. LYT009), filed Jun. 8, 2011, the disclosure of which is incorporated herein by reference.
- supplemental information is used for accelerating, or optimizing, the process of generating, storing, and/or transmitting image data; accordingly, in the context of the present invention, the data structures for storing the supplemental information are referred to as “acceleration structures”.
- a container file representing a scene can include or be associated with any number of component image elements (referred to herein as “frames”).
- Frames may come from different image capture devices, enabling aggregation of image data from multiple sources.
- Frames can include image data as well as additional data describing the scene, its particular characteristics, image capture equipment, and/or the conditions under which the frames were captured.
- additional data are referred to as metadata, which may be universal or application-specific.
- Metadata may include, for example, tags, edit lists, and/or any other information that may affect the way images derived from the picture look. Metadata may further include any other state information that is or may be associated with a frame or picture and is visible to an application.
- Picture files may also include instructions for combining frames and performing other operations on frames when rendering a final image.
- the data structures for implementing frames and pictures are supplemented with acceleration structures to enable selective use of certain types of data (also referred to as “assets”) based on device attributes such as image size, desired functionality, user preference, and/or the like.
- asserts certain types of data
- device attributes such as image size, desired functionality, user preference, and/or the like.
- the assets can include a complete description of the light field image, so as to allow refocusing and/or other capabilities associated with light field data; alternatively, the assets may include a set of two-dimensional images that can provide more limited refocusing capability than the complete light field data.
- the determination of which type of asset or assets to provide can be made based on any suitable factor or set of factors, including for example device attributes, desired features, and the like. In at least one embodiment, efficiency is maximized by transmitting those assets having minimal size or impact on resource consumption, while still delivering the desired functionality.
- the system of the present invention includes mechanisms for displaying a final image at an output device, based on transmitted, stored, and/or received assets.
- assets may include any number of frames, as described in the above-referenced application, as well as descriptions of operations that are to be performed on the frames.
- the system of the present invention provides a mechanism by which transmission, storage, and/or rendering of image data, including light field data is optimized so as to improve efficiency and avoid waste of resources.
- the present invention also provides additional advantages, as will be made apparent in the description provided herein.
- the techniques for storing, manipulating, and transmitting image data, including light field data, described herein can be applied to other scenarios and conditions, and are not limited to the specific examples discussed herein.
- the techniques are not limited to light field pictures, but can also be applied to images taken by conventional cameras and other imaging devices, whether or not such images are represented as light field data.
- FIG. 1A depicts an architecture for implementing the present invention in a client/server environment, according to one embodiment.
- FIG. 1B depicts an architecture for a device for operation in connection with the present invention, according to one embodiment.
- FIG. 1C depicts an architecture for implementing the present invention in a client/server environment, according to one embodiment.
- FIG. 2 depicts an architecture for implementing the present invention in connection with multiple devices having different attributes, according to one embodiment.
- FIG. 3 depicts an example of an implementation of the present invention, showing exemplary attributes for different devices, according to one embodiment.
- FIG. 4 is an event trace diagram depicting a method for requesting and receiving image assets tailored to device attributes, according to one embodiment.
- FIG. 5A depicts an example of a conceptual architecture for a focus stack containing multiple images and stored in a data storage device, according to one embodiment.
- FIG. 5B depicts an example of a conceptual architecture for a focus stack containing multiple image tiles and stored in a data storage device, according to one embodiment.
- FIGS. 6A through 6E depict a series of examples of images associated with different focal lengths and stored in a focus stack, according to one embodiment.
- FIGS. 7A through 7E depict a series of examples of possible tilings of the images depicted in FIGS. 6A through 6E , according to one embodiment.
- FIGS. 8A through 8E depict the tilings of FIGS. 7A through 7E , with the images removed for clarity.
- FIG. 9 is a flow diagram depicting a method of generating an image from tiles of a focus stack, according to one embodiment.
- FIG. 10 depicts an example of a relationship among light field picture files, pictures and frames, according to one embodiment.
- FIG. 11 depicts an example of a data structure for a light field picture file, according to one embodiment.
- the term “camera” is used herein to refer to an image capture device or other data acquisition device.
- a data acquisition device can be any device or system for acquiring, recording, measuring, estimating, determining and/or computing data representative of a scene, including but not limited to two-dimensional image data, three-dimensional image data, and/or light field data.
- Such a data acquisition device may include optics, sensors, and image processing electronics for acquiring data representative of a scene, using techniques that are well known in the art.
- One skilled in the art will recognize that many types of data acquisition devices can be used in connection with the present invention, and that the invention is not limited to cameras.
- the use of the term “camera” herein is intended to be illustrative and exemplary, but should not be considered to limit the scope of the invention. Specifically, any use of such term herein should be considered to refer to any suitable data acquisition device.
- Device 105 can be any electronic device capable of capturing, processing, transmitting, and/or receiving image data.
- device 105 may be any electronic device having output device 106 (such as a screen) on which user 110 can view an image.
- Device 105 may be, for example and without limitation, a desktop computer, laptop computer, personal digital assistant (PDA), cellular telephone, smartphone, music player, handheld computer, tablet computer, kiosk, game system, enterprise computing system, server computer, or the like.
- device 105 runs an operating system such as for example: Linux; Microsoft Windows, available from Microsoft Corporation of Redmond, Wash.; Mac OS X, available from Apple Inc. of Cupertino, Calif.; iOS, available from Apple Inc. of Cupertino, Calif.; and/or any other operating system that is adapted for use on such devices.
- user 110 interacts with device 105 via input device 108 , which may include physical button(s), touchscreen, rocker switch, dial, knob, graphical user interface, mouse, trackpad, trackball, touch-sensitive screen, touch-sensitive surface, keyboard, and/or any combination thereof.
- input device 108 may include physical button(s), touchscreen, rocker switch, dial, knob, graphical user interface, mouse, trackpad, trackball, touch-sensitive screen, touch-sensitive surface, keyboard, and/or any combination thereof.
- Device 105 may operate under the control of software.
- device 105 is communicatively coupled with server 109 , which may be remotely located with respect to device 105 , via communications network 103 .
- Image data and/or metadata (collectively referred to as assets 150 ) are stored in storage device 104 associated with server 109 .
- Data storage 104 may be implemented as any magnetic, optical, and/or electrical storage device for storage of data in digital form, such as flash memory, magnetic hard drive, CD-ROM, and/or the like.
- Device 105 makes requests of server 109 in order to retrieve assets from storage 104 via communications network 103 according to known network communication techniques and protocols.
- Communications network 103 can be any suitable network, such as the Internet.
- assets 150 can be transmitted to device 105 using HTTP and/or any other suitable data transfer protocol.
- device 105 and/or the software running on it may have certain attributes, including limitations, capabilities, characteristics, and/or features that may be relevant to the manner in which images are to be displayed thereon.
- certain parameters configured by user 110 or by another entity may specify which features and/or characteristics are desired for images to be output images; for example, such an individual may specify that images should be shown in three dimensions, or having refocus capability, or the like.
- specific characteristics of output images may depend on device limitations, software limitations, user preferences, administrator preferences, bandwidth, context, and/or any other relevant factor(s).
- the techniques of the present invention provide mechanisms for providing the appropriate assets to efficiently generate and display images 107 at output device 106 associated with device 105 .
- FIG. 1A is merely exemplary, and that the techniques of the present invention can be implemented using other architectures, components, and arrangements.
- the techniques of the present invention can be implemented in a stand-alone electronic device, wherein assets are stored locally.
- the techniques described herein are used for determining which assets to retrieve from local storage in order to render an image based on limitations and/or characteristics of the device, desired features, and/or any combination thereof.
- assets 150 represent image data for light field images. As described in more detail in the above-referenced applications, such data can be organized in terms of pictures and frames, with each picture having any number of frames. As described in the above-referenced applications, frames may represent individual capture events that took place at one or several image capture devices, and that are combinable to generate a picture. Such a relationship and data structure are merely exemplary, however; the techniques of the present invention can be implemented in connection with image data having other formats and arrangements. In other embodiments, assets 150 can represent image data derived from light field images, or may represent conventional non-light field image data.
- Input device 108 receives input from user 110 ; such input may include commands for displaying, editing, deleting, transmitting, combining, and/or otherwise manipulating images. In at least one embodiment, such input may specify characteristics and/or features for the display of images, and such characteristics and/or features can, at least in part, determine which asset(s) 150 are to be requested from server 109 .
- device 105 retrieves assets 150 , and renders and displays final image(s) 107 using the retrieved assets 150 .
- FIG. 1B there is shown an architecture for device 105 for operation in connection with the present invention, according to one embodiment.
- User 110 interacts with device 105 via input device 108 , which may include a mouse, trackpad, trackball, keyboard, and/or any of the other input components mentioned above.
- input device 108 may include a mouse, trackpad, trackball, keyboard, and/or any of the other input components mentioned above.
- User 110 views output, such as final image(s) 107 , on output device 106 which may be, for example, a display screen.
- Device 105 may be any electronic device, including for example and without limitation, a desktop computer, laptop computer, personal digital assistant (PDA), cellular telephone, smartphone, music player, handheld computer, tablet computer, kiosk, game system, enterprise computing system, server computer, or the like.
- device 105 runs an operating system such as for example: Linux; Microsoft Windows, available from Microsoft Corporation of Redmond, Wash.; Mac OS X, available from Apple Inc. of Cupertino, Calif.; iOS, available from Apple Inc. of Cupertino, Calif.; and/or any other operating system that is adapted for use on such devices.
- Device 105 stores assets 150 (which may include image data, pictures, and/or frames as described in the related applications) in data storage 104 .
- Data storage 104 may be located locally or remotely with respect to device 105 .
- Data storage 104 may be implemented as any magnetic, optical, and/or electrical storage device for storage of data in digital form, such as flash memory, magnetic hard drive, CD-ROM, and/or the like.
- Data storage 104 can also be implemented remotely, for example at a server (not shown in FIG. 1B ).
- device 105 includes a number of hardware components as are well known to those skilled in the art.
- device 105 may include, for example, one or more processors 111 (which can be a conventional microprocessor for performing operations on data under the direction of software, according to well-known techniques) and memory 112 (such as random-access memory having a structure and architecture as are known in the art, for use by the one or more processors in the course of running software).
- processors 111 which can be a conventional microprocessor for performing operations on data under the direction of software, according to well-known techniques
- memory 112 such as random-access memory having a structure and architecture as are known in the art, for use by the one or more processors in the course of running software.
- Such components are well known in the art of computing architecture.
- assets 150 (which may include image data, pictures, and/or frames as described in the related applications) are stored in centralized data storage 104 at a server 109 , which may be located remotely with respect to device 105 .
- Assets 150 are transmitted to device 105 via any suitable mechanism; one example is communications network 103 such as the Internet. In such an embodiment, assets 150 can be transmitted using HTTP and/or any other suitable data transfer protocol.
- Client device 105 is communicatively coupled with server 109 via communications network 103 .
- Image renderer 502 processes assets 150 to generate final image(s) 107 for display at output device 106 .
- image renderer 502 is depicted in FIG. 1C as being located at device 105 , one skilled in the art will recognize that image renderer 502 can instead be located at server 109 or at any other suitable location in the system.
- device 105 includes a network interface (not shown) for enabling communication via network 103 , and may also include browser software (not shown) for transmitting requests to server 109 and receiving responses therefrom.
- any number of devices 105 can communicate with server 109 via communications network 103 to both transmit and/or receive assets 150 to/from server 109 .
- Such devices 105 may have different attributes.
- different features may be desired for particular imaging operations in different contexts. Referring now to FIG. 2 , there is shown an architecture for implementing the present invention in connection with multiple devices having different attributes, according to one embodiment.
- each device 105 in the example runs software 151 , such as an app (application).
- software 151 such as an app (application).
- These attributes 152 can differ from device 105 to device 105 ; accordingly, the system and method of the present invention provide techniques for tailoring the particular subset of assets 150 transmitted to each device 105 according to its particular attributes 152 .
- Table 1 shows examples of attributes 152 that may apply to devices 105 , singly or in any suitable combination with one another.
- the particular assets 150 that may be provided to device 105 can differ depending on whether the attribute 152 is present and/or based on particular characteristics of device 105 defined by that attribute 152 .
- this list merely presents examples and is not intended to be limiting in any manner:
- device 105 can be a physical device (such as a computer, camera, smartphone, or the like), or it can be a software application.
- a computer may be running several different software applications for viewing images, each of which has different attributes; one may provide refocusing capability, while another provides parallax viewing, and yet another provides 3D stereo viewing.
- each such application might be considered a distinct “device” 105 , in the sense that, depending on which application is active, different assets 150 might be needed to enable the desired functionality.
- FIG. 3 there is shown an example of an implementation of the present invention, depicting exemplary attributes for different devices, according to one embodiment.
- three devices 105 are depicted, each having different attributes.
- Device 105 A is an iPhone running an app 151 A through which images will be viewed.
- the particular attributes 152 A for image presentation on device 105 A are shown in FIG. 3 : a 960 ⁇ 480 pixel screen, no 3D stereo display, but with parallax animations and refocus animations.
- Device 105 B is a laptop computer running a web browser including a plug-in 151 B through which images will be viewed.
- the particular attributes 152 B for image presentation on device 105 B are shown in FIG. 3 : a 1024 ⁇ 768 pixel screen, no 3D stereo display, no parallax animations, but with refocus animations.
- Device 105 C is a 3D television controlled by an app 151 C running on a laptop.
- the particular attributes 152 C for image presentation on device 105 C are shown in FIG. 3 : a 1920 ⁇ 1080 pixel screen including 3D stereo display, parallax animations, and refocus animations.
- different image data including subsets of available assets 150 are provided to each of devices 105 A, 105 B, 105 C based on particular attributes of each device.
- server 109 can retrieve assets 150 that have been previously generated and/or captured, or it can generate assets 150 on demand. For example, if a full light field image is available at centralized data storage 104 but is deemed unsuitable for a particular request received from a device 105 , server 109 can generate suitable assets 150 on-the-fly from the stored light field image, if such suitable assets 150 are not already available.
- assets 150 can be generated locally rather than at server 109 .
- device 105 itself may generate assets 150 ; alternatively, the image capture device may generate assets at the time of image capture or at some later time.
- device 105 (and/or image capture device) can determine which assets 150 to generate based on particular device characteristics and/or features to be enabled. The appropriate assets 150 , once generated, can be stored locally and/or can be provided to server 109 for storage at centralized data storage 104 .
- FIG. 4 there is shown an event trace diagram depicting a method for requesting and receiving image assets tailored to device attributes, according to at least one embodiment.
- Device 105 receives 401 a user request to view one or more image(s). Such request can be provided, for example, via input provided at input device 108 .
- user 110 may navigate to an image within an album, or may retrieve an image from a website, or the like.
- the techniques of the present invention can be applied to images that are presented automatically and without an explicit user request; for example, in response to an incoming phone call wherein it may be desired to show a picture of the caller, or in response to automatic activation of a screen saver for depicting images.
- Device 105 requests 402 assets 150 from server 109 .
- the specific assets 150 requested can be based on determined attributes, including capabilities, features, and/or characteristics of device 105 , software 151 running on device 105 , context of the image display request, and/or any other factors.
- device 105 determines which assets 150 to request, and makes the appropriate request 402 .
- device 105 sends information to server 109 regarding attributes (including device capabilities and/or desired features of the image display), and server 109 makes a determination from such information as to what assets 150 to provide.
- server 109 queries 403 a database, such as one stored at data storage 104 , to determine what assets 150 are available based on request 402 .
- Server 109 receives 404 , from database, links to and descriptions of available assets 150 , and forwards 405 such information to device 105 .
- the transmission 405 to device 105 includes links to those particular assets 150 that are well-suited to the quest 402 , based on the specified attributes.
- transmission 405 includes links to all assets 150 available at storage 104 , so that device 105 determines which assets 150 to request.
- Device 105 then submits 406 a request to data storage 104 to obtain assets 150 using the information received from server 109 .
- Data storage 104 responds 407 with the assets 150 , which are received at device 105 .
- Device 105 renders and outputs 408 image(s) 107 on output device 106 , using assets 150 received from data storage 104 .
- server 109 obtains assets 150 from data storage 104 based on the attributes specified in request 402 , and transmits such assets 150 from server 109 to device 105 .
- Such an implementation may be preferable, in some situations, rather than having device 105 request data directly from data storage 104 as depicted in FIG. 4 .
- assets 150 can be stored and/or transmitted using an enhancement of the data structures described in related U.S. Utility Application Serial No. 13/155,882 for “Storage and Transmission of Pictures Including Multiple Frames,” (Atty. Docket No. LYT009), filed Jun. 8, 2011, the disclosure of which is incorporated herein by reference.
- assets 150 are provided in files, referred to as light field picture (LFP) files, stored at data storage 104 .
- Image data is organized within LFP files as pictures and frames, along with other data.
- Each LFP file 203 can contain any number of pictures 201 , including any suitable combination of assets 150 , as described in more detail below.
- one LFP file 203 contains two pictures 201 , and another contains one picture 201 .
- Frames 202 can be generated by cameras 100 and/or other visual data acquisition devices; each frame 202 includes data related to an individual image element such as an image captured by a camera 100 or other visual data acquisition device. Any number of frames 202 can be combined to form a picture 201 .
- a picture 201 may include frames 202 captured by different cameras 100 either simultaneously or in succession, and/or may include frames 202 captured by a single camera 100 in succession.
- Frames 202 may be captured as part of a single capture event or as part of multiple capture events.
- Pictures 201 may include any type of frames 202 , in any combination including for example two-dimensional frames 202 , light field frames 202 , and the like.
- a picture 201 with one or more light field frames 202 is referred to as a light field picture.
- each frame 202 includes data representing an image detected by the sensor of the camera (image data), and may also include data describing other relevant camera parameters (metadata), such as for example, camera settings such as zoom and exposure time, the geometry of a microlens array used in capturing a light field frame, and the like.
- the image data contained in each frame 202 may be provided in any suitable format, such as for example a raw image or a lossy compression of the raw image, such as for example, a file in JPG, EXIF, BMP, PNG, PDF, TIFF and/or HD Photo format.
- the metadata may be provided in text format, XML, or in any other suitable format.
- frames 202 may include the complete light field description of a scene, or some other representation better suited to the attributes associated with the device and/or software with which the image is to be displayed.
- pictures 201 are related to their constituent frame(s) 202 by virtue of pointers in LFP files 203 and/or in database records.
- any particular frame 202 can be a constituent of any number of pictures 201 , depending on how many pictures 201 contain a pointer to that frame 202 .
- any particular picture 201 can contain any number of frames 202 , depending on how many frames 202 are identified as its constituents in its database record.
- picture 201 may be a container file that actually contains frame(s) 202 .
- references herein to a picture 201 “containing” one or more frames 202 mean that those frames 202 are associated with picture 201 .
- a frame 202 if a frame 202 appears in more than one picture 201 , it need only be stored once. Pointers are stored to establish relationships between the frame 202 and the various pictures 201 it corresponds to. Furthermore, if frame 202 data is not available, frame 202 can be represented by its corresponding digest 402 , as described herein.
- LFP file 203 contains a single picture 201 , although one skilled in the art will recognize that an LFP file 203 can contain any number of pictures 201 .
- picture 201 includes a number of assets 150 , along with an acceleration structure 308 defining different ways in which assets 150 can be used to generate final images 107 .
- FIG. 11 depicts acceleration structure 308 as a distinct component within picture 201 , one skilled in the art will recognize that other arrangements are possible; for example, in at least one embodiment, acceleration structure 308 can include some or all of assets 150 .
- Assets 150 include any or all of frame(s) 202 (having image data 301 and metadata 302 ), focus stack 303 , tiled focus stack 304 , extended depth-of-field (EDOF) image 305 , sub-aperture image(s) 306 , and depth map 307 .
- EEOF extended depth-of-field
- FIG. 11 depicts the particular assets 150 depicted in FIG. 11 merely exemplary, and that other types of assets 150 can be provided, singly or in combination, according to the particular attributes of the system and its components.
- frame 202 includes image data 301 and/or metadata 302 , although some frames 202 may omit one or the other.
- frames 202 can include image data 301 for two-dimensional and/or light field sensor images.
- other types of image data 301 can be included in frames 202 , such as three-dimensional image data and the like.
- a depth map of the scene is extracted from the light field, so that three-dimensional scene data can be obtained and used.
- a camera can capture a two-dimensional image, and use a range finder to capture a depth map; such captured information can be stored as frame data, so that the two-dimensional image and the depth map together form a three-dimensional image.
- metadata 302 includes fields for various parameters associated with image data 301 , such as for example camera settings such as zoom and exposure time, the geometry of a microlens array used in capturing a light field frame, and the like.
- Metadata 302 may include identifying data, such as a serial number of the camera or other device used to capture the image, an identifier of the individual photographer operating the camera, the location where the image was captured, and/or the like. Metadata 302 can be provided in any appropriate format, such as for example a human-readable text file including name-value pairs. In at least one embodiment, metadata 302 is represented using name-value pairs in JavaScript Object Notation (JSON). In at least one embodiment, metadata 302 is editable by user 110 or any other individual having access to frame 202 . In at least one embodiment, metadata 302 is provided in XML or text format, so that any text editor can be used for such editing.
- JSON JavaScript Object Notation
- Focus stack 303 includes a collection of refocused images at different focus depths. In general, providing a focus stack 303 can reduce the amount of storage space and/or bandwidth required, as the focus stack 303 can take less space than the light field data itself. Images in the focus stack 303 can be generated by projection of the light field data at various focus depths. The more images that are provided within a focus stack 303 , the smoother the animation when refocusing at device 105 , and/or the greater the range of available focus depths. In at least one embodiment, when a focus stack 303 is included as an asset 150 within LFP file 203 , acceleration structure 308 defines focus stack 303 and provides metadata describing images within focus stack 303 (for example to specify depth values for images within focus stack 303 ). In at least one embodiment, each image in focus stack 303 depicts the entire scene.
- Tiled focus stack 304 includes a collection of tiles which represent portions of refocused images at different focus depths. Each tile within tiled focus stack 304 depicts a portion of the scene. By avoiding the need to represent the entire scene at each focus depth, storage space and/or bandwidth can be conserved. For example, if an image has a foreground and a background, rather than storing several images depicting the entire scene at different focus depths, tiles can be stored wherein only the foreground is stored at different focus depths, and other tiles can store the background at different focus depths. These tiles can then be blended and/or stitched together to achieve a desired effect and focus depth. In another embodiment, tiles can be stored with only the in-focus portion of the image, relying on the fact that artificial blurring can be used to generate out-of-focus effects. The use of tiled focus stack 304 can thereby further reduce storage and/or bandwidth requirements.
- tiled focus stack 304 Further details describing operation of tiled focus stack 304 , along with an example, are provided herein.
- Extended depth-of-field (EDOF) image 305 is another type of asset 150 that can be included.
- EDOF image 305 substantially all portions of the image are in focus.
- EDOF image 305 can be generated using any known technique, including pre-combining multiple images taken at different focus depths. The use of an EDOF image 305 can further reduce storage and/or bandwidth requirements, since multiple images with different focus depths need not be stored. If desired, refocusing can be simulated by selectively blurring portions of the EDOF image 305 .
- a set of sub-aperture image(s) (SAIs) 306 is included.
- SAIs sub-aperture image(s)
- the use of sub-aperture images is described in Ng et al., “Light Field Photography with a Hand-Held Plenoptic Camera”, Technical Report CSTR 2005-02, Stanford Computer Science, and in related U.S. Utility Application Serial No. 13/027,946 for “3D Light Field Cameras, Images and Files, and Methods of Using, Operating, Processing and Viewing Same” (Atty. Docket No. LYT3006), filed on Feb. 15, 2011, the disclosure of which is incorporated herein by reference.
- representative rays are culled, such that only rays that pass through a contiguous sub-region of the main-lens aperture are projected to the 2-D image.
- the contiguous sub-region of the main-lens aperture is referred to herein as a sub-aperture, and the resulting image is referred to as a sub-aperture image.
- the center of perspective of a sub-aperture image may be approximated as the center of the sub-aperture. Such a determination is approximate because the meaning of “center” is precise only if the sub-aperture is rotationally symmetric.
- the center of an asymmetric sub-aperture may be computed just as the center of gravity of an asymmetric object would be.
- the aperture of the main lens is rotationally symmetric, so the center of perspective of a 2-D image that is projected with all of the representative rays (i.e., the sub-aperture is equal to the aperture) is the center of the main-lens aperture, as would be expected.
- each SAI is a relatively low-resolution view of the scene taken from a slightly different vantage point. Any number of SAIs can be included. By selecting from a number of available SAIs, a parallax shift can be simulated. Interpolation can be used to smooth the transition from one SAI to another, thus reinforcing the illusion of side to side movement. Low-resolution SAIs are suitable for use with relatively small screens. In such an environment, SAIs can provide 3D parallax capability without consuming large amounts of storage space or bandwidth.
- EDOF images may also be computed from different vantage points to match the perspective views of corresponding sub-aperture images. Unlike such sub-aperture images, however, EDOF images computed for different vantage points retain the full resolution and quality of EDOF images in general. Such a set of EDOF images may be used to effect a parallax shift or animation similarly as for sub-aperture images. If desired, refocusing may be implemented by using a “shift-and-add”technique as described for sub-aperture images in Ng et al., “Light Field Photography with a Hand-Held Plenoptic Camera”, Technical Report CSTR 2005-02, Stanford Computer Science.
- Depth map 307 is another type of asset 150 that can be included.
- depth map 307 specifies a focus depth value (indicating focus depth) for each pixel (or for some subset of pixels) in an image.
- Depth map 307 can be provided at full resolution equaling the resolution of the image itself, or it can be provided at a lower resolution.
- Depth map 307 can be used in connection with any of the other assets 150 in generating final image 107 . More particularly, for example, depth map 307 can indicate which parts of an image are associated with different depths, so that appropriate parts of the image can be retrieved and used depending on the desired focus depth for final image 107 .
- depth map 307 can be used in other ways as well, either on its own or in combination with other assets 150 .
- acceleration structure 308 defines one or more combination(s) of assets 150 , and specifies when each particular asset 150 should or should not be included within LFP file 203 .
- Assets 150 can be combined in different ways to provide different features based on device attributes and/or other factors. For example, if the processing capability of device 105 is insufficient to render light field image data 301 , such data can be omitted from LFP file 203 provided to such device 105 ; rather, a focus stack 303 may be provided, to allow device 105 to offer refocusing capability without having to render light field images. Alternatively, if no refocusing capability is needed or desired, focus stack 303 can be omitted, and a suitable asset 150 such as a flat image can be provided instead.
- acceleration structure 308 to define combinations of assets 150 to be used to enable different types of features and attributes.
- Refocusing capability can be enabled by combining SAIs 306 to obtain refocusable images.
- SAIs 306 are shifted and summed, according to techniques that are well known in the art and described, for example, in Ng et al. This technique is referred to as “shift-and-add”.
- refocusing can be accomplished by using an EDOF image 305 , and selectively blurring portions of the image based on information from depth map 307 .
- refocusing can be accomplished by generating a focus stack 303 containing a number of 2D images, so that an appropriate image can be selected from focus stack 303 based on the desired focus depth.
- Interpolation and smoothing can be used to generate images at intermediate focus depths.
- acceleration structure 308 defines a combination of assets 150 and a methodology for implementing refocusing capability, based on device 105 limitations and other factors.
- 3D Stereo Capability can be implemented by providing two versions of all relevant assets 150 ; for example, two focus stacks 303 or EDOF images 305 : one for each eye (i.e., one for each of two stereo viewpoints).
- a single focus stack 303 or EDOF image 305 can be provided, which contains all the information needed for 3D stereo viewing; for example, it can contain pre-combined red/cyan images overlaid on one another to permit stereo viewing by extraction of the red and cyan images (3D glasses can be used for such extraction).
- 3D parallax assets can be used to generate 3D stereo images on-the-fly at device 105 .
- acceleration structure 308 defines a combination of assets 150 and a methodology for implementing 3D stereo capability, based on device 105 limitations and other factors.
- 3D parallax capability can be implemented by providing multiple SAIs 306 ; since each contains a view of the scene from a different viewpoint, parallax shifts can be simulated by selection of individual SAIs. Such an approach generally offers low resolution results, and may therefore be suitable for devices 105 having smaller screens. Interpolation can be performed to smooth the transition from one viewpoint to another, and/or to implement intermediate viewpoints.
- 3D parallax capability can be implemented using EDOF image 305 together with depth map 307 .
- a 3D mesh can be generated from depth map 307 , specifying spatial locations for items within EDOF image 305 .
- a virtual camera can navigate the 3D environment defined by the mesh; based on the movement of this camera, projections can be generated. Items in the EDOF image 305 can be synthetically warped to generate the 3D parallax images.
- items may be occluded in the EDOF image 305 so that they are not available for display in the 3D environment. If those items need to be displayed, lower resolution versions available from SAIs 306 can be used to fill in the gaps. SAIs 306 can also be used to fill in any areas where insufficient image data is available from the EDOF image 305 .
- refocusing, 3D stereo, and parallax capability can be enabled using a set of high-quality, high-resolution EDOF images 305 , each taken from a different viewpoint.
- a depth map 307 may or may not be included.
- the system instead of warping a single EDOF image 305 to effect viewpoint changes, the system selects and uses one of the EDOF images 305 that has a viewpoint approximating the desired viewpoint.
- These EDOF images 305 are used as high-quality SAIs, and can be used to drive animations, as follows:
- any or all of the above capabilities can be implemented using various combinations of assets 150 .
- any of these capabilities can be further enhanced by providing animations that depict smooth transitions from one view to another.
- refocusing can be enhanced by providing transitions from one focus depth to another; smooth transitions can be performed by selectively displaying images from a focus stack or tiled focus stack, and/or by interpolating between available images, combining available images, and/or any other suitable technique.
- a focus stack is a set of refocused images and/or 2D images, possibly of the same or similar scene at different focus depths.
- a focus stack can be generated from a light field image by projecting the light field image data at different focus depths and capturing the resulting 2D images in a known 2D image format. Such an operation can be performed in advance of a request for image data, or on-the-fly when such a request is received.
- the focus stack can be stored in data storage 104 .
- the focus stack can be made available as an asset 150 in response to requests for refocusable image data.
- a focus stack can be provided to device 105 to enable such refocusing.
- the focus stack can be provided in situations where it is not feasible for the entirety of the light field data to be transmitted to device 105 (for example, if device 105 does not have the capability or the processing power to render light field data in a satisfactory manner).
- Device 105 can thus render refocusing effects by selecting one of the images in the focus stack to be shown on output device 106 , without any requirement to render projections of light field data.
- device 105 can use multiple images from the focus stack; for example, such images can be blended with one another, and/or interpolation can be used, to generate smooth depth transition animations and/or to display images at intermediate focus depths.
- each image 502 is a refocused image that is generated from light field data by projecting the light field image data at different focus depths and capturing the resulting 2D images in a known 2D image format.
- Each image 502 can be stored using any suitable image storage format, including digital formats such as JPEG, GIF, PNG, and the like.
- focus stack 501 can be implemented as a data format including a header indicating focus depths for each of a number of images 502 , and pointers to storage locations for images 502 .
- each image 502 in focus stack 501 represents a complete scene.
- a single image 502 is used, or a set of two or more images 502 are blended together in their entirety.
- assets 150 can include image tiles, each of which represent a portion of the scene to be depicted. Multiple image tiles can be combined with one another to render the scene, with different image tiles being used for different portions of the scene. For example, different image tiles associated with different focus depths can be used, so as to generate an image wherein one portion of the image is at a first focus depth and another portion of the image is at a different focus depth. Such an approach can be useful, for example, for images that include elements having significant foreground and background elements that are widely spaced in the depth field. If desired, only a portion of the image can be stored at each focus depth, so as to conserve storage space and bandwidth.
- each image tile 503 is a portion of a refocused image that is generated from light field data by projecting the light field image data at different focus depths and capturing the desired portions of the resulting 2D images in a 2D image format.
- Each image tile 503 can be stored using any suitable image storage format, including digital formats such as JPEG, GIF, PNG, and the like. Any suitable data format can be used for organizing the storage of focus stack 501 , for relating image tiles 503 to one another, and/or to indicate a focus depth for each image tile 503 .
- focus stack 501 can be implemented as a data format including a header indicating focus depths for each of a number of image tiles 503 and further indicating which portion of the overall scene that image tile 503 represents; the data format can also include pointers to storage locations for image tiles 503 .
- Tiling can be performed in any of a number of different ways.
- the image can simply be divided into some number of tiles without reference to the content of the image; for example, the image can be divided into four equal tiles.
- the content of the image may be taken into account; for example, an analysis can be performed so that the division into tiles can be made intelligently.
- Tiling can thus take into account positions and/or relative distances of objects in the scene; for example, tiles can be defined so that closer objects are in one tile and farther objects are in another tile.
- FIGS. 6A through 6E there is shown a series of examples of images 502 associated with different focal lengths and stored in a focus stack 501 , according to one embodiment. For each such image 502 , a depth value is shown, representative of a focus depth.
- image 502 A is depicted, representing the image when it has been refocused with depth value of +5.
- Object 601 C which is farther away from the camera, is in focus; object 601 A, which is closer to the camera, is out of focus; object 601 B, which is even closer to the camera than object 601 A, is even more out of focus.
- Object 601 A having a moderate distance from the camera, appears in focus in image 502 D.
- images can be divided into tiles 503 , thus facilitating assembly of a final images 107 from multiple portions depicting different regions of a scene.
- Such a technique allows different portions of an image to be presented in focus, even if the portions represent parts of the scene that were situated at drastically different distances from the camera.
- FIGS. 7A through 7E there is shown a series of examples of possible tilings of the images depicted in FIGS. 6A through 6E , according to one embodiment.
- FIGS. 8A through 8E there are shown the tilings of FIGS. 7A through 7E , with the images removed for clarity.
- out-of-focus elements are shown using dotted or dashed lines, with the lengths of the dashes indicating a relative degree to which the element is out of focus.
- image 502 A having a depth value of +5 has been divided into four tiles 701 A through 701 D, each representing different portions of the scene having different distances from the camera.
- tiles 701 can (but need not) overlap one another. Where overlapping tiles 701 are available, the overlapping portions of two or more tiles 701 can be blended with one another to improve the smoothness of the transition from one area of final image 107 to another.
- image 502 B having a depth value of 0 has been divided into two tiles 701 E and 701 EE, each representing different portions of the scene having different distances from the camera.
- the portion of image 502 B that lies outside tiles 701 E and 701 EE is not stored or used.
- image 502 D having a depth value of ⁇ 10 has been divided into two tiles 701 F and 701 G, each representing different portions of the scene having different distances from the camera.
- the portion of image 502 D that lies outside tiles 701 F and 701 G is not stored or used.
- image 502 E having a depth value of ⁇ 15 has been divided into four tiles 701 H through 701 L, each representing different portions of the scene having different distances from the camera.
- an automated analysis is performed to determine which tiles 701 , if any, should be extracted and stored for each refocused image 502 . For example, in the above-described example, it is automatically determined that no tiles from image 502 C are needed, because no area of the image 502 C is sufficiently in focus to be of use.
- This automated determination can take into account any suitable factors, including for example, characteristics of the image 502 itself, available bandwidth and/or storage space, available processing power, desired level of interactivity and number of focus levels, and/or the like.
- Device 105 receives 401 a request from user 110 to view an image.
- a request can be provided, for example, via input provided at input device 108 .
- user 110 may navigate to an image within an album, or may retrieve an image from a website, or the like.
- the techniques of the present invention can be applied to images that are presented automatically and without an explicit user request; for example, in response to an incoming phone call wherein it may be desired to show a picture of the caller, or in response to automatic activation of a screen saver for depicting images.
- Device 105 receives 407 assets 150 for depicting the images. Steps 402 to 406 , described above in connection with FIG. 4 , may be performed prior to step 407 , but are omitted in FIG. 9 for clarity. By performing steps 402 to 406 , device 105 can request and receive assets 150 that are suited to the particular attributes of device 105 , software 151 running on device 105 , context of the image display request, and/or any other factors. In the example of FIG. 9 , such assets 150 include image tiles 701 .
- device 105 determines 908 which tiles 701 should be used in generating final image 107 .
- determination 908 can be made, for example, based on a desired focus depth for final image 107 .
- user 110 can interact with a user interface element to specify that a particular portion of the image is to be in focus (and/or to specify other characteristics of the desired output image); based on such input, appropriate tiles 701 are selected to be used in generating final image 107 .
- multiple tiles 701 representing different portions of the image are stitched together to generate final image 107 .
- multiple tiles 701 representing the same portion of the image are used, for example by interpolating a focus depth between two available tiles 701 for the same portion of the image. In at least one embodiment, these two blending techniques are both used.
- FIG. 9 depicts examples of steps for performing such operations.
- device 105 determines 909 weighting for tiles 701 , for example to interpolate a focal distance between the focal distance of the individual tiles. For example, if the desired focal distance is closer to that of one tile than that of another tile, the weighting can reflect this, so that the first tile is given greater weight in the blending operation than the second tile.
- device 105 blends 911 together, or stitches, tiles 701 representing different portions of the image.
- blending 911 can take advantage those regions where tiles 701 overlap one another, if available. In embodiments where no overlap is available, blending 911 can be performed at the border between tiles 701 .
- final image 107 is rendered and output 408 .
- device 105 stores and/or receives only those tiles 701 that are needed to enable the particular features desired for a particular image display operation, given the attributes of device 105 .
- any suitable data format can be used for storing data in LFP file 203 .
- the data format is configured so that device 105 is able to query LFP file 203 to determine what assets 150 are present, what features and capabilities are available based on those assets 150 , and what is best the match between such features/capabilities and available assets 150 . In this manner, the data format allows device 105 to determine the best combination of assets 150 to retrieve in order to achieve the desired results.
- metadata 302 and/or other data in LFP files 203 are stored in JavaScript Object Notation (JSON), which provides a standardized text notation for objects.
- JSON JavaScript Object Notation
- JSON is sufficiently robust to provide representations according to the techniques described herein, including objects, arrays, and hierarchies. JSON further provides a mechanism which is easy for humans to read, write, and understand.
- the JSON representation can be used to store frame metadata in a key-value pair structure.
- frame metadata may contain information describing the camera that captured an image.
- An example of a portion of such a representation in JSON is as follows:
- Data stored in the JSON representation may include integers, floating point values, strings, Boolean values, and any other suitable forms of data, and/or any combination thereof.
- device 105 can access data in an LFP file 203 by performing a key lookup, and/or by traversing or iterating over the data structure, using known techniques. In this manner, device 105 can use any suitable assets 150 found within LFP file 203 or elsewhere when generating final image(s) 107 .
- the JSON representation may also include structures; for example a value may itself contain a list of values, forming a hierarchy of nested key-value pair mappings. For example:
- binary data is stored in the JSON structure via a base64-encoding scheme.
- Identifying data, as well as any other data that is not critical to the interpretation of image data, may be provided in a removable section of metadata, for example in a separate section of the JSON representation. This section can be deleted without affecting image rendering operations, since the data contained therein is not used for such operations.
- An example of such a section is as follows:
- Data to be used in rendering images may be included in any number of separate sections. These may include any or all of the following:
- Description section can contain any information generally describing the equipment used to capture the image.
- An example of a description section is as follows:
- Image section contains image data.
- Image section can contain color-related fields for converting raw images to RGB format.
- Image section can contain a “format” value indicating whether the format of the image is “raw” or “rgb”.
- various other fields can be provided to indicate what corrections and/or other operations were performed on the captured image.
- An example of an image section is as follows:
- Devices section specifies camera hardware and/or settings; for example, lens manufacturer and model, exposure settings, and the like. In at least one embodiment, this section is used to break out information for component parts of the camera that may be considered to be individual devices.
- An example is as follows:
- Light field section provides data relating to light fields, image refocusing, and the like. Such data is relevant if the image is a light field image.
- An example is as follows:
- the “defects” key refers to a set of (x,y) tuples indicating defective microlenses in the microlens array. Such information can be useful in generating images, as pixels beneath defective microlenses can be ignored, recomputed from adjacent pixels, down-weighted, or otherwise processed. One skilled in the art will recognize that various techniques for dealing with such defects can be used. If a concern exists that the specific locations of defects can uniquely identify a camera, raising privacy issues, the “defects” values can be omitted or can be kept hidden so that they are not exposed to unauthorized users.
- Frame digests are supported by the JSON data structure. As described above, a digest can be stored as both a hash type and hash data. The following is an example of a digest within the removable section of a JSON data structure:
- Metadata can be included in a file separate from the image itself.
- one file contains the image data (for example, img — 0021.jpg, img — 0021.dng, img — 0021.raw, or the like), and another file in the same directory contains the JSON metadata (for example, img — 0021.txt).
- the files can be related to one another by a common filename (other than the extension) and/or by being located in the same directory.
- the image data and the metadata can be stored in a single file.
- the JSON data structure can be included in an ancillary tag according to the exchangeable image file format (EXIF), or it can be appended to the end of the image file.
- EXIF exchangeable image file format
- a file format can be defined to include both image data and metadata.
- device 105 is a mobile device (such as an iPhone) having the following characteristics:
- the desired feature is to deliver real-time parallax shifting as accelerometer is tilted.
- Device 105 queries server 109 via the Internet, using a handshaking mechanism.
- the query specifies the characteristics of device 105 and the desired feature.
- Server 109 responds with links to assets 150 needed to enable the desired feature, given the specified characteristics.
- device 105 can determine what assets 150 are needed and request them.
- Such assets 150 might include:
- Specific sizes for these assets 150 can be selected based, for example, on a menu of available sizes. For example, sizes can be made available for a number of commonly used devices, such as for example an iPhone.
- device 105 Upon receiving these assets 150 , device 105 uses its GPU to perform warping on items in the EDOF image, based on the depth map, so as to generate the parallax effect. In this manner, the device 105 has been provided with those assets 150 that are best suited to this approach for enabling the desired feature, while minimizing waste of resources.
- any number of extensions can be made to the JSON specification; these may be provided, for example, for certain types of equipment or vendors according to one embodiment.
- VENDOR_FRAME_PARAMETER_OBJ :: ⁇ “com.lytro.tags” : ⁇ “darkFrame” : BOOLEAN, // optional. (false) shutter may or may not have opened, but no light reached the sensor.
- EventArray [ FRAME_PARAMETER_EVENT_OBJ ] // optional. Add if/when variable frame parameters are required.
- VENDOR_VIEW_TYPE_ENUM :: “com.lytro.stars”
- VENDOR_VIEW_OBJ :: // view objects are individually defined to match their types VIEW_STARS_OBJ
- Array length should match # of frames. “viewSaturation” : NORMALIZED_VIEW_OPERATOR, // optional. (0.5) // “viewSaturationArray” : [ NORMALIZED_VIEW_OPERATOR ] // optional. Should not be present if “viewBrightness” is present. Array length should match # of frames. “viewSharpness” : NORMALIZED_VIEW_OPERATOR, // optional. (0) // “viewSharpnessArray” : [ NORMALIZED_VIEW_OPERATOR ], // optional. Should not be present if “viewSharpness” is present. Array length should match # of frames. “viewDeNoise” : NORMALIZED_VIEW_OPERATOR, // optional.
- width PIXEL_COORD, // ( ⁇ 1) Maximum width of the resulting image. (Excess removed from the right side.)
- height PIXEL_COORD // ( ⁇ 1) Maximum height of the resulting image. (Excess removed from the bottom.) // For both “width” and ‘height”, value ⁇ 1 implies a size large enough to ensure that // no cropping happens on the right/bottom in that dimension.
- VENDOR_ACCELERATION_TYPE_ENUM :: “com.lytro.acceleration.refocusStack”
- VENDOR_ACCELERATION_GENERATOR_ENUM :: “Glycerin 0.1.unknown” .
- VENDOR_ACCELERATION_OBJ :: // acceleration objects are individually defined to match their types ACCELERATION_REFOCUS_STACK_OBJ
- // corresponding to vendor acceleration type “com.lytro.acceleration.refocusStack” //ACCELERATION_MOTION_PARALLAX_OBJ // hypothetical, corresponding to vendor acceleration type “com.lytro.acceleration.motionParallax” ACCELERATION_REFOCUS_STACK_OBJ :: ⁇ “viewParameters” : // may be empty. ⁇ // “viewTurns” : // optional.
- PIXEL_COORD // “width” : PIXEL_COORD, // (UNKNOWN_PIXEL_COORD) Maximum width of the resulting image. (Excess removed from the right side.) // “height” : PIXEL_COORD // (UNKNOWN_PIXEL_COORD) Maximum height of the resulting image.
- BLOB Binary Large Object
- frame and/or picture data is stored as binary large objects (BLOBs).
- BLOBs binary large objects
- “Blobrefs” can be used as wrappers for such BLOBs; each blobref holds or refers to a BLOB.
- Blobfs can contain hash type and hash data, so as to facilitate authentication of data stored in BLOBs.
- Blob servers communicate with one another to keep their data in sync, so as to avoid discrepancies in stored BLOBs.
- a search server may periodically communicate with one or more Blob servers in order to update its index.
- frames 202 can be represented as digests, as described in the related U.S. patent application cross-referenced above.
- a hash function is defined, for generating a unique digest for each frame 202 .
- digests are small relative to their corresponding frames 202 , so that transmission, storage, and manipulation of such digests are faster and more efficient than such operations would be on the frames 202 themselves.
- each digest is 256 bytes in length, although one skilled in the art will recognize that they may be of any length.
- a digest can also be referred to as a “hash”.
- the present invention can be implemented as a system or a method for performing the above-described techniques, either singly or in any combination.
- the present invention can be implemented as a computer program product comprising a nontransitory computer-readable storage medium and computer program code, encoded on the medium, for causing a processor in a computing device or other electronic device to perform the above-described techniques.
- Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention can be embodied in software, firmware and/or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
- the present invention also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computing device selectively activated or reconfigured by a computer program stored in the computing device.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, flash memory, solid state drives, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computing devices referred to herein may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present invention can be implemented as software, hardware, and/or other elements for controlling a computer system, computing device, or other electronic device, or any combination or plurality thereof.
- an electronic device can include, for example, a processor, an input device (such as a keyboard, mouse, touchpad, trackpad, joystick, trackball, microphone, and/or any combination thereof), an output device (such as a screen, speaker, and/or the like), memory, long-term storage (such as magnetic storage, optical storage, and/or the like), and/or network connectivity, according to techniques that are well known in the art.
- Such an electronic device may be portable or nonportable.
- Examples of electronic devices that may be used for implementing the invention include: a mobile phone, personal digital assistant, smartphone, kiosk, server computer, enterprise computing device, desktop computer, laptop computer, tablet computer, consumer electronic device, television, set-top box, or the like.
- An electronic device for implementing the present invention may use any operating system such as, for example: Linux; Microsoft Windows, available from Microsoft Corporation of Redmond, Wash.; Mac OS X, available from Apple Inc. of Cupertino, Calif.; iOS, available from Apple Inc. of Cupertino, Calif.; and/or any other operating system that is adapted for use on the device.
Abstract
Description
- The present application claims priority as a continuation-in-part of U.S. Utility Application Serial No. 13/155,882 for “Storage and Transmission of Pictures Including Multiple Frames,” (Atty. Docket No. LYT009), filed Jun. 8, 2011, the disclosure of which is incorporated herein by reference.
- The present application further claims priority as a continuation-in-part of U.S. Utility application Ser. No. 12/703,367 for “Light Field Camera Image, File and Configuration Data, and Method of Using, Storing and Communicating Same,” (Atty. Docket No. LYT3003), filed Feb. 10, 2010, the disclosure of which is incorporated herein by reference. U.S. Utility application Ser. No. 12/703,367 claims priority from U.S. Provisional Application Ser. No. 61/170,620 for “Light Field Camera Image, File and Configuration Data, and Method of Using, Storing and Communicating Same,” filed Apr. 18, 2009, the disclosure of which is incorporated herein by reference.
- The present application claims priority from U.S. Provisional Application Ser. No. 61/655,790 for “Extending Light-Field Processing to Include Extended Depth of Field and Variable Center of Perspective,” (Atty. Docket No. LYT003-PROV), filed Jun. 5, 2012, the disclosure of which is incorporated herein by reference.
- The present application is related to U.S. Utility Application Serial No. 13/027,946 for “3D Light Field Cameras, Images and Files, and Methods of Using, Operating, Processing and Viewing Same” (Atty. Docket No. LYT3006), filed on Feb. 15, 2011, the disclosure of which is incorporated herein by reference.
- The present invention relates to storage, manipulation, and/or transmission of image data and related data.
- Light field photography captures information about the direction of light as it arrives at a sensor within a data acquisition device such as a light field camera. Such light field data can be used to create representations of scenes that can be manipulated by a user. Subsequent to image capture, light field processing can be used to generate images using the light field data. Various types of light field processing can be performed, including for example refocusing, aberration correction, 3D viewing, parallax shifting, changing the viewpoint, and the like. These and other techniques are described in the related U.S. Utility Applications referenced above.
- Conventionally, images may be represented as digital data that can be stored electronically. Many such image formats are known in the art, such as for example JPG, EXIF, BMP, PNG, PDF, TIFF and/or HD Photo data formats. Such image formats can be used for storing, manipulating, displaying, and/or transmitting image data.
- Different devices may have different attributes, including capabilities, limitations, characteristics, and/or features for displaying, storing, and/or controlling images. Such differences may include, for example, screen sizes, three-dimensional vs. two-dimensional capability, input mechanisms, processing power, storage space, graphics processing units (or lack thereof), and the like. Such differences in attributes can be based on device hardware, software, bandwidth limitations, user preferences, and/or any other factors. In addition, in different contexts, it may be desirable to provide different types of capabilities and features for viewing and/or controlling images. Furthermore, for different applications and contexts, it may be useful or desirable to provide different image sizes.
- Existing techniques for storing, transmitting, and distributing images often fail to take into account such differences in device attributes and desired features. In some cases, failing to take such considerations into account can result in excessive use of bandwidth, processing power, storage space, and/or other resources; in other cases, it can result in a device being unable to properly render or display an image using the data supplied to it.
- For example, a device with a small, relatively low-resolution screen (such as a cellular telephone) may not be capable of displaying images at the same resolution as a large high-definition television. Sending a full-resolution image to the cellular telephone wastes valuable bandwidth and storage space; conversely, sending a low-resolution image to the high-definition television results in poor quality output. As another example, sending data for controlling an image using, for example, an accelerometer, is a waste of bandwidth if the target device does not have an accelerometer. As yet another example, sending data that is used in refocusing operations to a device that does not have such refocusing capability is another example of wasted resources.
- Because of these limitations, existing techniques for transmitting, distributing, and/or storing image data, such as light field image data, are unable to efficiently use resources while maximizing performance and minimizing waste of resources.
- According to various embodiments of the invention, a system and method are provided for storing, manipulating, and/or transmitting image data, such as light field photographs and the like, in a manner that efficiently delivers different capabilities and features based on device attributes, user requirements and preferences, context, and/or other factors.
- In at least one embodiment, the techniques of the present invention are implemented by providing supplemental information in data structures for storing frames and pictures as described in related U.S. Utility Application Serial No. 13/155,882 for “Storage and Transmission of Pictures Including Multiple Frames,” (Atty. Docket No. LYT009), filed Jun. 8, 2011, the disclosure of which is incorporated herein by reference. Such supplemental information is used for accelerating, or optimizing, the process of generating, storing, and/or transmitting image data; accordingly, in the context of the present invention, the data structures for storing the supplemental information are referred to as “acceleration structures”.
- As described in the related application, a container file representing a scene (referred to herein as a “picture” or “picture file”) can include or be associated with any number of component image elements (referred to herein as “frames”). Frames may come from different image capture devices, enabling aggregation of image data from multiple sources. Frames can include image data as well as additional data describing the scene, its particular characteristics, image capture equipment, and/or the conditions under which the frames were captured. Such additional data are referred to as metadata, which may be universal or application-specific. Metadata may include, for example, tags, edit lists, and/or any other information that may affect the way images derived from the picture look. Metadata may further include any other state information that is or may be associated with a frame or picture and is visible to an application. Picture files may also include instructions for combining frames and performing other operations on frames when rendering a final image.
- In at least one embodiment, the data structures for implementing frames and pictures are supplemented with acceleration structures to enable selective use of certain types of data (also referred to as “assets”) based on device attributes such as image size, desired functionality, user preference, and/or the like. In this manner, the system and method of the present invention takes into account specific attributes and parameters in determining which data should be included.
- For example, depending on the particular scenario, the assets can include a complete description of the light field image, so as to allow refocusing and/or other capabilities associated with light field data; alternatively, the assets may include a set of two-dimensional images that can provide more limited refocusing capability than the complete light field data. The determination of which type of asset or assets to provide can be made based on any suitable factor or set of factors, including for example device attributes, desired features, and the like. In at least one embodiment, efficiency is maximized by transmitting those assets having minimal size or impact on resource consumption, while still delivering the desired functionality.
- In at least one embodiment, the system of the present invention includes mechanisms for displaying a final image at an output device, based on transmitted, stored, and/or received assets. These assets may include any number of frames, as described in the above-referenced application, as well as descriptions of operations that are to be performed on the frames.
- Accordingly, in various embodiments, the system of the present invention provides a mechanism by which transmission, storage, and/or rendering of image data, including light field data is optimized so as to improve efficiency and avoid waste of resources.
- The present invention also provides additional advantages, as will be made apparent in the description provided herein.
- One skilled in the art will recognize that the techniques for storing, manipulating, and transmitting image data, including light field data, described herein can be applied to other scenarios and conditions, and are not limited to the specific examples discussed herein. For example, the techniques are not limited to light field pictures, but can also be applied to images taken by conventional cameras and other imaging devices, whether or not such images are represented as light field data.
- The accompanying drawings illustrate several embodiments of the invention and, together with the description, serve to explain the principles of the invention according to the embodiments. One skilled in the art will recognize that the particular embodiments illustrated in the drawings are merely exemplary, and are not intended to limit the scope of the present invention.
-
FIG. 1A depicts an architecture for implementing the present invention in a client/server environment, according to one embodiment. -
FIG. 1B depicts an architecture for a device for operation in connection with the present invention, according to one embodiment. -
FIG. 1C depicts an architecture for implementing the present invention in a client/server environment, according to one embodiment. -
FIG. 2 depicts an architecture for implementing the present invention in connection with multiple devices having different attributes, according to one embodiment. -
FIG. 3 depicts an example of an implementation of the present invention, showing exemplary attributes for different devices, according to one embodiment. -
FIG. 4 is an event trace diagram depicting a method for requesting and receiving image assets tailored to device attributes, according to one embodiment. -
FIG. 5A depicts an example of a conceptual architecture for a focus stack containing multiple images and stored in a data storage device, according to one embodiment. -
FIG. 5B depicts an example of a conceptual architecture for a focus stack containing multiple image tiles and stored in a data storage device, according to one embodiment. -
FIGS. 6A through 6E depict a series of examples of images associated with different focal lengths and stored in a focus stack, according to one embodiment. -
FIGS. 7A through 7E depict a series of examples of possible tilings of the images depicted inFIGS. 6A through 6E , according to one embodiment. -
FIGS. 8A through 8E depict the tilings ofFIGS. 7A through 7E , with the images removed for clarity. -
FIG. 9 is a flow diagram depicting a method of generating an image from tiles of a focus stack, according to one embodiment. -
FIG. 10 depicts an example of a relationship among light field picture files, pictures and frames, according to one embodiment. -
FIG. 11 depicts an example of a data structure for a light field picture file, according to one embodiment. - The following terms are defined for purposes of the description provided herein:
-
- Frame: a data entity (stored, for example, in a file) containing a description of the state corresponding to a single captured sensor exposure in a camera. This state includes the sensor image, and other relevant camera parameters, specified as metadata. The sensor image may be either a raw image or a compressed representation of the raw image.
- Picture: a data entity (stored, for example, in a file) containing one or more frames, metadata, and/or data derived from the frames and/or metadata. Metadata can include tags, edit lists, and/or any other descriptive information or state associated with a picture or frame.
- Light field: a collection of rays. A ray's direction specifies a path taken by light, and its color specifies the radiance of light following that path.
- Light field image: a two-dimensional image that spatially encodes a four-dimensional light field. The sensor image from a light field camera is a light field image.
- Light field picture: a picture with one or more light field frames. (A picture with a mix of two-dimensional and light field frames is a light field picture.)
- LFP file: A file containing one or more frame(s) and/or picture(s).
- Microlens: a small lens, typically one in an array of similar microlenses.
- Pixel: an n-tuple of intensity values, with an implied meaning for each value. A typical 3-tuple pixel format is RGB, wherein the first value is red intensity, the second green intensity, and the third blue intensity. Also refers to an individual sensor element for capturing data.
- Sensor image: any representation of a raw image.
- Two dimensional (2D) image (or image): a two-dimensional (2D) array of pixels. The pixels are typically arranged in a square or rectangular Cartesian pattern, but other patterns are possible.
- Two dimensional (2D) picture: a picture that includes only 2D frames.
- Device: any electronic device capable of capturing, processing, transmitting, receiving, and/or displaying image data.
- Refocused image: a 2D image that has been generated from a light field image.
- Focus Stack: a collection of refocused images and/or 2D images, possibly of the same or similar scene at different focus depths.
- Tile: a portion of a refocused or 2D image.
- Tiled Focus Stack: a collection of tiles, possibly representing portions of the same or similar scene at different focus depths.
- Extended Depth of Field (EDOF) image: an image having an extended depth of field.
- Sub-aperture image (SAI): a low-resolution view of a scene taken from a given position, generated by taking a sample from the same relative position under each microlens.
- Depth map: a mapping of focus depth to points within an image; specifies a depth value (indicating focus depth) for each point (or for some set of points) in an image.
- Asset: any data that can be used for rendering an image, picture, or frame. May include, for example and without limitation, light field image(s) and/or picture(s), focus stack, tiled focus stack, EDOF image(s), sub-aperture image(s), depth map(s), and/or any combination thereof.
- In addition, for ease of nomenclature, the term “camera” is used herein to refer to an image capture device or other data acquisition device. Such a data acquisition device can be any device or system for acquiring, recording, measuring, estimating, determining and/or computing data representative of a scene, including but not limited to two-dimensional image data, three-dimensional image data, and/or light field data. Such a data acquisition device may include optics, sensors, and image processing electronics for acquiring data representative of a scene, using techniques that are well known in the art. One skilled in the art will recognize that many types of data acquisition devices can be used in connection with the present invention, and that the invention is not limited to cameras. Thus, the use of the term “camera” herein is intended to be illustrative and exemplary, but should not be considered to limit the scope of the invention. Specifically, any use of such term herein should be considered to refer to any suitable data acquisition device.
- Referring now to
FIG. 1A , there is shown an architecture for implementing the present invention in a client/server environment according to one embodiment.Device 105 can be any electronic device capable of capturing, processing, transmitting, and/or receiving image data. For example,device 105 may be any electronic device having output device 106 (such as a screen) on whichuser 110 can view an image.Device 105 may be, for example and without limitation, a desktop computer, laptop computer, personal digital assistant (PDA), cellular telephone, smartphone, music player, handheld computer, tablet computer, kiosk, game system, enterprise computing system, server computer, or the like. In at least one embodiment,device 105 runs an operating system such as for example: Linux; Microsoft Windows, available from Microsoft Corporation of Redmond, Wash.; Mac OS X, available from Apple Inc. of Cupertino, Calif.; iOS, available from Apple Inc. of Cupertino, Calif.; and/or any other operating system that is adapted for use on such devices. - In at least one embodiment,
user 110 interacts withdevice 105 viainput device 108, which may include physical button(s), touchscreen, rocker switch, dial, knob, graphical user interface, mouse, trackpad, trackball, touch-sensitive screen, touch-sensitive surface, keyboard, and/or any combination thereof.Device 105 may operate under the control of software. - In at least one embodiment,
device 105 is communicatively coupled withserver 109, which may be remotely located with respect todevice 105, viacommunications network 103. Image data and/or metadata (collectively referred to as assets 150) are stored instorage device 104 associated withserver 109.Data storage 104 may be implemented as any magnetic, optical, and/or electrical storage device for storage of data in digital form, such as flash memory, magnetic hard drive, CD-ROM, and/or the like. -
Device 105 makes requests ofserver 109 in order to retrieve assets fromstorage 104 viacommunications network 103 according to known network communication techniques and protocols.Communications network 103 can be any suitable network, such as the Internet. In such an embodiment,assets 150 can be transmitted todevice 105 using HTTP and/or any other suitable data transfer protocol. - As described in more detail below,
device 105 and/or the software running on it may have certain attributes, including limitations, capabilities, characteristics, and/or features that may be relevant to the manner in which images are to be displayed thereon. In addition, in at least one embodiment, certain parameters configured byuser 110 or by another entity may specify which features and/or characteristics are desired for images to be output images; for example, such an individual may specify that images should be shown in three dimensions, or having refocus capability, or the like. As will be described in more detail below, specific characteristics of output images may depend on device limitations, software limitations, user preferences, administrator preferences, bandwidth, context, and/or any other relevant factor(s). The techniques of the present invention provide mechanisms for providing the appropriate assets to efficiently generate and displayimages 107 atoutput device 106 associated withdevice 105. - One skilled in the art will recognize that the architecture depicted in
FIG. 1A is merely exemplary, and that the techniques of the present invention can be implemented using other architectures, components, and arrangements. For example, in an alternative embodiment, the techniques of the present invention can be implemented in a stand-alone electronic device, wherein assets are stored locally. In such an embodiment, the techniques described herein are used for determining which assets to retrieve from local storage in order to render an image based on limitations and/or characteristics of the device, desired features, and/or any combination thereof. - In various embodiments,
assets 150 represent image data for light field images. As described in more detail in the above-referenced applications, such data can be organized in terms of pictures and frames, with each picture having any number of frames. As described in the above-referenced applications, frames may represent individual capture events that took place at one or several image capture devices, and that are combinable to generate a picture. Such a relationship and data structure are merely exemplary, however; the techniques of the present invention can be implemented in connection with image data having other formats and arrangements. In other embodiments,assets 150 can represent image data derived from light field images, or may represent conventional non-light field image data. -
Input device 108 receives input fromuser 110; such input may include commands for displaying, editing, deleting, transmitting, combining, and/or otherwise manipulating images. In at least one embodiment, such input may specify characteristics and/or features for the display of images, and such characteristics and/or features can, at least in part, determine which asset(s) 150 are to be requested fromserver 109. - In at least one embodiment, based on instructions received from
user 110,device 105 retrievesassets 150, and renders and displays final image(s) 107 using the retrievedassets 150. - Referring now to
FIG. 1B , there is shown an architecture fordevice 105 for operation in connection with the present invention, according to one embodiment.User 110 interacts withdevice 105 viainput device 108, which may include a mouse, trackpad, trackball, keyboard, and/or any of the other input components mentioned above.User 110 views output, such as final image(s) 107, onoutput device 106 which may be, for example, a display screen. -
Device 105 may be any electronic device, including for example and without limitation, a desktop computer, laptop computer, personal digital assistant (PDA), cellular telephone, smartphone, music player, handheld computer, tablet computer, kiosk, game system, enterprise computing system, server computer, or the like. In at least one embodiment,device 105 runs an operating system such as for example: Linux; Microsoft Windows, available from Microsoft Corporation of Redmond, Wash.; Mac OS X, available from Apple Inc. of Cupertino, Calif.; iOS, available from Apple Inc. of Cupertino, Calif.; and/or any other operating system that is adapted for use on such devices. -
Device 105 stores assets 150 (which may include image data, pictures, and/or frames as described in the related applications) indata storage 104.Data storage 104 may be located locally or remotely with respect todevice 105.Data storage 104 may be implemented as any magnetic, optical, and/or electrical storage device for storage of data in digital form, such as flash memory, magnetic hard drive, CD-ROM, and/or the like.Data storage 104 can also be implemented remotely, for example at a server (not shown inFIG. 1B ). - In at least one embodiment,
device 105 includes a number of hardware components as are well known to those skilled in the art. In addition todata storage 104,input device 108 andoutput device 106,device 105 may include, for example, one or more processors 111 (which can be a conventional microprocessor for performing operations on data under the direction of software, according to well-known techniques) and memory 112 (such as random-access memory having a structure and architecture as are known in the art, for use by the one or more processors in the course of running software). Such components are well known in the art of computing architecture. - Referring now to
FIG. 1C , there is shown an alternative architecture for implementing the present invention in a client/server environment, according to one embodiment. In this architecture, assets 150 (which may include image data, pictures, and/or frames as described in the related applications) are stored incentralized data storage 104 at aserver 109, which may be located remotely with respect todevice 105.Assets 150 are transmitted todevice 105 via any suitable mechanism; one example iscommunications network 103 such as the Internet. In such an embodiment,assets 150 can be transmitted using HTTP and/or any other suitable data transfer protocol.Client device 105 is communicatively coupled withserver 109 viacommunications network 103. -
User 110 interacts withdevice 105 viainput device 108, which may include a mouse, trackpad, trackball, keyboard, and/or any of the other input components mentioned above. Under the direction ofinput device 108,device 105 transmits a request to cause data (including some or all assets 150) to be transmitted fromserver 109 todevice 105.Image renderer 502processes assets 150 to generate final image(s) 107 for display atoutput device 106. Althoughimage renderer 502 is depicted inFIG. 1C as being located atdevice 105, one skilled in the art will recognize thatimage renderer 502 can instead be located atserver 109 or at any other suitable location in the system. - In at least one embodiment,
device 105 includes a network interface (not shown) for enabling communication vianetwork 103, and may also include browser software (not shown) for transmitting requests toserver 109 and receiving responses therefrom. - In at least one embodiment, any number of
devices 105 can communicate withserver 109 viacommunications network 103 to both transmit and/or receiveassets 150 to/fromserver 109.Such devices 105 may have different attributes. In addition, different features may be desired for particular imaging operations in different contexts. Referring now toFIG. 2 , there is shown an architecture for implementing the present invention in connection with multiple devices having different attributes, according to one embodiment. - In the example of
FIG. 2 , threedevices 105 are shown, although any number ofdevices 105 can be included. Eachdevice 105 in the example runssoftware 151, such as an app (application). The combination of the characteristics of thedevice 105 and itssoftware 151, along with the desired operations, dictatescertain attributes 152 relevant to image processing and/or display to take place in connection withdevice 105. Theseattributes 152 can differ fromdevice 105 todevice 105; accordingly, the system and method of the present invention provide techniques for tailoring the particular subset ofassets 150 transmitted to eachdevice 105 according to its particular attributes 152. - Table 1 shows examples of
attributes 152 that may apply todevices 105, singly or in any suitable combination with one another. For eachattribute 152, theparticular assets 150 that may be provided todevice 105 can differ depending on whether theattribute 152 is present and/or based on particular characteristics ofdevice 105 defined by thatattribute 152. One skilled in the art will recognize that this list merely presents examples and is not intended to be limiting in any manner: -
TABLE 1 Attribute Example of effect on assets Type Name Description provided to device Feature Refocusing The ability to refocus an Determines whether to provide image at any of a image data for different focus number of different depths focus depths Feature 3D/stereo The ability to present an Determines whether to provide 3D image in a 3D format by stereo data offering stereoscopic vision Feature 3D/parallax The ability to present a Determines whether to provide parallax shift data for different points of view resembling a 3D presentation Feature Extended Depth The ability to present an Determines whether to provide of Field (EDOF) image in manner that EDOF data preserves relatively sharp focus for a wide range of focus depths Feature Depth-based The ability to process Determines whether to provide processing different portions of the depth information image differently depending on the depicted distance from the viewer Feature Slideshow The ability to display Determines whether to provide any animations or information about slideshows or sequences of images other animations, including assets over time for slideshow transition effects, and the like Feature User The ability of the user to Determines whether the data annotations add, modify, or remove provided may include links, information associated functions, commands, or other with the image, mechanisms for the user to add, including (for example) modify, or delete such image tags, annotations, information such that the changes comments, titles, and are published, shared, or otherwise the like made visible to other users viewing the images Feature Editing The ability of the user to Determines whether to provide edit the images, for data enabling edits to images example by changing contrast, white balance, sharpness, hue, tint, saturation, brightness, or any other image characteristic Image Image size Small vs. large More detailed data may be characteristic provided for larger images Image Image size Specific pixel count More detailed data may be characteristic and/or resolution provided for larger images Device 3D screen Indicates whether or not Determines whether to provide 3D characteristic the device has a 3D data screen Device Accelerometer Indicates whether the Determines whether to provide characteristic device includes an information determining how image accelerometer that can responds to movement of the be used for interacting device with images Device Graphics Indicates whether or not Determines whether to provide characteristic Processing Unit the device includes a additional data that can be used by (GPU) GPU that can be used a GPU to accelerate rendering of images Device Screen size Specifies the physical Lower levels of rendering characteristic size of the device's resolution may be provided for screen smaller screens Device Software Specifies the type of Determines the type of data to be characteristic software being used for provided to render images using viewing images the specified software - For purposes of the present invention,
device 105 can be a physical device (such as a computer, camera, smartphone, or the like), or it can be a software application. For example, a computer may be running several different software applications for viewing images, each of which has different attributes; one may provide refocusing capability, while another provides parallax viewing, and yet another provides 3D stereo viewing. For purposes of the present invention, each such application might be considered a distinct “device” 105, in the sense that, depending on which application is active,different assets 150 might be needed to enable the desired functionality. - Referring now to
FIG. 3 , there is shown an example of an implementation of the present invention, depicting exemplary attributes for different devices, according to one embodiment. In this example, threedevices 105 are depicted, each having different attributes. -
Device 105A is an iPhone running anapp 151A through which images will be viewed. The particular attributes 152A for image presentation ondevice 105A are shown inFIG. 3 : a 960×480 pixel screen, no 3D stereo display, but with parallax animations and refocus animations. -
Device 105B is a laptop computer running a web browser including a plug-in 151B through which images will be viewed. The particular attributes 152B for image presentation ondevice 105B are shown inFIG. 3 : a 1024×768 pixel screen, no 3D stereo display, no parallax animations, but with refocus animations. - Device 105C is a 3D television controlled by an
app 151C running on a laptop. The particular attributes 152C for image presentation on device 105C are shown inFIG. 3 : a 1920×1080 pixel screen including 3D stereo display, parallax animations, and refocus animations. - According to the techniques of the present invention, different image data, including subsets of
available assets 150 are provided to each ofdevices - One skilled in the art will recognize that variations on this architecture can be used. For example, either of the following variations can be implemented:
-
-
Device 105 can specify attributes and desired features in a request transmitted toserver 109;server 109 makes a determination of whichassets 150 are needed, and responds with links to thoseassets 150; -
Device 105queries server 109 for links to allavailable assets 150;device 105 then requests those assets that are needed for the attributes and desired features;
-
- In either case,
server 109 can retrieveassets 150 that have been previously generated and/or captured, or it can generateassets 150 on demand. For example, if a full light field image is available atcentralized data storage 104 but is deemed unsuitable for a particular request received from adevice 105,server 109 can generatesuitable assets 150 on-the-fly from the stored light field image, if suchsuitable assets 150 are not already available. - In at least one other embodiment,
assets 150 can be generated locally rather than atserver 109. For example,device 105 itself may generateassets 150; alternatively, the image capture device may generate assets at the time of image capture or at some later time. In at least one embodiment, device 105 (and/or image capture device) can determine whichassets 150 to generate based on particular device characteristics and/or features to be enabled. Theappropriate assets 150, once generated, can be stored locally and/or can be provided toserver 109 for storage atcentralized data storage 104. - Referring now to
FIG. 4 , there is shown an event trace diagram depicting a method for requesting and receiving image assets tailored to device attributes, according to at least one embodiment. -
Device 105 receives 401 a user request to view one or more image(s). Such request can be provided, for example, via input provided atinput device 108. For example,user 110 may navigate to an image within an album, or may retrieve an image from a website, or the like. In at least one embodiment, the techniques of the present invention can be applied to images that are presented automatically and without an explicit user request; for example, in response to an incoming phone call wherein it may be desired to show a picture of the caller, or in response to automatic activation of a screen saver for depicting images. -
Device 105requests 402assets 150 fromserver 109. Thespecific assets 150 requested can be based on determined attributes, including capabilities, features, and/or characteristics ofdevice 105,software 151 running ondevice 105, context of the image display request, and/or any other factors. In at least one embodiment,device 105 determines whichassets 150 to request, and makes theappropriate request 402. In at least one other embodiment,device 105 sends information toserver 109 regarding attributes (including device capabilities and/or desired features of the image display), andserver 109 makes a determination from such information as to whatassets 150 to provide. - In at least one embodiment,
server 109 queries 403 a database, such as one stored atdata storage 104, to determine whatassets 150 are available based onrequest 402.Server 109 receives 404, from database, links to and descriptions ofavailable assets 150, and forwards 405 such information todevice 105. In at least one embodiment, thetransmission 405 todevice 105 includes links to thoseparticular assets 150 that are well-suited to thequest 402, based on the specified attributes. In another embodiment,transmission 405 includes links to allassets 150 available atstorage 104, so thatdevice 105 determines whichassets 150 to request.Device 105 then submits 406 a request todata storage 104 to obtainassets 150 using the information received fromserver 109.Data storage 104 responds 407 with theassets 150, which are received atdevice 105.Device 105 then renders and outputs 408 image(s) 107 onoutput device 106, usingassets 150 received fromdata storage 104. - In at least one other embodiment,
server 109 obtainsassets 150 fromdata storage 104 based on the attributes specified inrequest 402, and transmitssuch assets 150 fromserver 109 todevice 105. Such an implementation may be preferable, in some situations, rather than havingdevice 105 request data directly fromdata storage 104 as depicted inFIG. 4 . - In at least one embodiment,
assets 150 can be stored and/or transmitted using an enhancement of the data structures described in related U.S. Utility Application Serial No. 13/155,882 for “Storage and Transmission of Pictures Including Multiple Frames,” (Atty. Docket No. LYT009), filed Jun. 8, 2011, the disclosure of which is incorporated herein by reference. - In at least one embodiment,
assets 150 are provided in files, referred to as light field picture (LFP) files, stored atdata storage 104. Image data is organized within LFP files as pictures and frames, along with other data. - Referring now to
FIG. 10 , there is shown an example of a relationship among LFP files 203,pictures 201, and frames 202, according to at least one embodiment. Each LFP file 203 can contain any number ofpictures 201, including any suitable combination ofassets 150, as described in more detail below. In the example ofFIG. 10 , oneLFP file 203 contains twopictures 201, and another contains onepicture 201. -
Frames 202 can be generated by cameras 100 and/or other visual data acquisition devices; eachframe 202 includes data related to an individual image element such as an image captured by a camera 100 or other visual data acquisition device. Any number offrames 202 can be combined to form apicture 201. For example apicture 201 may includeframes 202 captured by different cameras 100 either simultaneously or in succession, and/or may includeframes 202 captured by a single camera 100 in succession.Frames 202 may be captured as part of a single capture event or as part of multiple capture events.Pictures 201 may include any type offrames 202, in any combination including for example two-dimensional frames 202, light field frames 202, and the like. Apicture 201 with one or more light field frames 202 is referred to as a light field picture. - In at least one embodiment, each
frame 202 includes data representing an image detected by the sensor of the camera (image data), and may also include data describing other relevant camera parameters (metadata), such as for example, camera settings such as zoom and exposure time, the geometry of a microlens array used in capturing a light field frame, and the like. The image data contained in eachframe 202 may be provided in any suitable format, such as for example a raw image or a lossy compression of the raw image, such as for example, a file in JPG, EXIF, BMP, PNG, PDF, TIFF and/or HD Photo format. The metadata may be provided in text format, XML, or in any other suitable format. As described in more detail herein, frames 202 may include the complete light field description of a scene, or some other representation better suited to the attributes associated with the device and/or software with which the image is to be displayed. - For illustrative purposes, in
FIG. 10 , frames 202 are shown as being enclosed bypictures 201. However, one skilled in the art will recognize that such a representation is conceptual only. In fact, in at least one embodiment, pictures 201 are related to their constituent frame(s) 202 by virtue of pointers in LFP files 203 and/or in database records. In at least one embodiment, anyparticular frame 202 can be a constituent of any number ofpictures 201, depending on howmany pictures 201 contain a pointer to thatframe 202. Similarly, anyparticular picture 201 can contain any number offrames 202, depending on howmany frames 202 are identified as its constituents in its database record. In another embodiment,picture 201 may be a container file that actually contains frame(s) 202. In general, references herein to apicture 201 “containing” one ormore frames 202 mean that thoseframes 202 are associated withpicture 201. - In at least one embodiment, if a
frame 202 appears in more than onepicture 201, it need only be stored once. Pointers are stored to establish relationships between theframe 202 and thevarious pictures 201 it corresponds to. Furthermore, ifframe 202 data is not available,frame 202 can be represented by its corresponding digest 402, as described herein. - Referring now to
FIG. 11 , there is shown an example of a data structure for anLFP file 203 according to one embodiment. In this example, LFP file 203 contains asingle picture 201, although one skilled in the art will recognize that anLFP file 203 can contain any number ofpictures 201. In this example,picture 201 includes a number ofassets 150, along with anacceleration structure 308 defining different ways in whichassets 150 can be used to generatefinal images 107. AlthoughFIG. 11 depictsacceleration structure 308 as a distinct component withinpicture 201, one skilled in the art will recognize that other arrangements are possible; for example, in at least one embodiment,acceleration structure 308 can include some or all ofassets 150. -
Assets 150 include any or all of frame(s) 202 (havingimage data 301 and metadata 302), focus stack 303, tiled focus stack 304, extended depth-of-field (EDOF)image 305, sub-aperture image(s) 306, anddepth map 307. Although the example depicts all of theseassets 150 in asingle LFP file 203, one skilled in the art will recognize that any suitable subset ofsuch assets 150 can be included; in fact, it is not necessary for all of theassets 150 to be included within asingle LFP file 203 to practice the present invention. Rather, thoseassets 150 suitable for use according toacceleration structure 308 may be provided, andother assets 150 may be omitted. Also, one skilled in the art will recognize that theparticular assets 150 depicted inFIG. 11 are merely exemplary, and that other types ofassets 150 can be provided, singly or in combination, according to the particular attributes of the system and its components. -
Image Data 301 - In at least one embodiment,
frame 202 includesimage data 301 and/ormetadata 302, although someframes 202 may omit one or the other. In various embodiments, frames 202 can includeimage data 301 for two-dimensional and/or light field sensor images. In other embodiments, other types ofimage data 301 can be included inframes 202, such as three-dimensional image data and the like. In at least one embodiment, a depth map of the scene is extracted from the light field, so that three-dimensional scene data can be obtained and used. In another embodiment, a camera can capture a two-dimensional image, and use a range finder to capture a depth map; such captured information can be stored as frame data, so that the two-dimensional image and the depth map together form a three-dimensional image. -
Metadata 302 - In at least one embodiment,
metadata 302 includes fields for various parameters associated withimage data 301, such as for example camera settings such as zoom and exposure time, the geometry of a microlens array used in capturing a light field frame, and the like. - In at least one embodiment,
metadata 302 may include identifying data, such as a serial number of the camera or other device used to capture the image, an identifier of the individual photographer operating the camera, the location where the image was captured, and/or the like.Metadata 302 can be provided in any appropriate format, such as for example a human-readable text file including name-value pairs. In at least one embodiment,metadata 302 is represented using name-value pairs in JavaScript Object Notation (JSON). In at least one embodiment,metadata 302 is editable byuser 110 or any other individual having access toframe 202. In at least one embodiment,metadata 302 is provided in XML or text format, so that any text editor can be used for such editing. - Focus Stack 303
- Focus stack 303 includes a collection of refocused images at different focus depths. In general, providing a focus stack 303 can reduce the amount of storage space and/or bandwidth required, as the focus stack 303 can take less space than the light field data itself. Images in the focus stack 303 can be generated by projection of the light field data at various focus depths. The more images that are provided within a focus stack 303, the smoother the animation when refocusing at
device 105, and/or the greater the range of available focus depths. In at least one embodiment, when a focus stack 303 is included as anasset 150 withinLFP file 203,acceleration structure 308 defines focus stack 303 and provides metadata describing images within focus stack 303 (for example to specify depth values for images within focus stack 303). In at least one embodiment, each image in focus stack 303 depicts the entire scene. - Tiled Focus Stack 304
- Tiled focus stack 304 includes a collection of tiles which represent portions of refocused images at different focus depths. Each tile within tiled focus stack 304 depicts a portion of the scene. By avoiding the need to represent the entire scene at each focus depth, storage space and/or bandwidth can be conserved. For example, if an image has a foreground and a background, rather than storing several images depicting the entire scene at different focus depths, tiles can be stored wherein only the foreground is stored at different focus depths, and other tiles can store the background at different focus depths. These tiles can then be blended and/or stitched together to achieve a desired effect and focus depth. In another embodiment, tiles can be stored with only the in-focus portion of the image, relying on the fact that artificial blurring can be used to generate out-of-focus effects. The use of tiled focus stack 304 can thereby further reduce storage and/or bandwidth requirements.
- Further details describing operation of tiled focus stack 304, along with an example, are provided herein.
- Extended Depth-of-
Field Image 305 - Extended depth-of-field (EDOF)
image 305 is another type ofasset 150 that can be included. In anEDOF image 305, substantially all portions of the image are in focus.EDOF image 305 can be generated using any known technique, including pre-combining multiple images taken at different focus depths. The use of anEDOF image 305 can further reduce storage and/or bandwidth requirements, since multiple images with different focus depths need not be stored. If desired, refocusing can be simulated by selectively blurring portions of theEDOF image 305. -
Sub-Aperture Images 306 - In at least one embodiment, a set of sub-aperture image(s) (SAIs) 306 is included. The use of sub-aperture images is described in Ng et al., “Light Field Photography with a Hand-Held Plenoptic Camera”, Technical Report CSTR 2005-02, Stanford Computer Science, and in related U.S. Utility Application Serial No. 13/027,946 for “3D Light Field Cameras, Images and Files, and Methods of Using, Operating, Processing and Viewing Same” (Atty. Docket No. LYT3006), filed on Feb. 15, 2011, the disclosure of which is incorporated herein by reference. In at least one embodiment, representative rays are culled, such that only rays that pass through a contiguous sub-region of the main-lens aperture are projected to the 2-D image. The contiguous sub-region of the main-lens aperture is referred to herein as a sub-aperture, and the resulting image is referred to as a sub-aperture image. The center of perspective of a sub-aperture image may be approximated as the center of the sub-aperture. Such a determination is approximate because the meaning of “center” is precise only if the sub-aperture is rotationally symmetric. The center of an asymmetric sub-aperture may be computed just as the center of gravity of an asymmetric object would be. Typically the aperture of the main lens is rotationally symmetric, so the center of perspective of a 2-D image that is projected with all of the representative rays (i.e., the sub-aperture is equal to the aperture) is the center of the main-lens aperture, as would be expected.
- Thus, each SAI is a relatively low-resolution view of the scene taken from a slightly different vantage point. Any number of SAIs can be included. By selecting from a number of available SAIs, a parallax shift can be simulated. Interpolation can be used to smooth the transition from one SAI to another, thus reinforcing the illusion of side to side movement. Low-resolution SAIs are suitable for use with relatively small screens. In such an environment, SAIs can provide 3D parallax capability without consuming large amounts of storage space or bandwidth.
- Extended Depth of Field Images from Different Perspectives
- As with sub-aperture images, EDOF images may also be computed from different vantage points to match the perspective views of corresponding sub-aperture images. Unlike such sub-aperture images, however, EDOF images computed for different vantage points retain the full resolution and quality of EDOF images in general. Such a set of EDOF images may be used to effect a parallax shift or animation similarly as for sub-aperture images. If desired, refocusing may be implemented by using a “shift-and-add”technique as described for sub-aperture images in Ng et al., “Light Field Photography with a Hand-Held Plenoptic Camera”, Technical Report CSTR 2005-02, Stanford Computer Science.
-
Depth Map 307 -
Depth map 307 is another type ofasset 150 that can be included. In at least one embodiment,depth map 307 specifies a focus depth value (indicating focus depth) for each pixel (or for some subset of pixels) in an image.Depth map 307 can be provided at full resolution equaling the resolution of the image itself, or it can be provided at a lower resolution.Depth map 307 can be used in connection with any of theother assets 150 in generatingfinal image 107. More particularly, for example,depth map 307 can indicate which parts of an image are associated with different depths, so that appropriate parts of the image can be retrieved and used depending on the desired focus depth forfinal image 107. One skilled in the art will recognize thatdepth map 307 can be used in other ways as well, either on its own or in combination withother assets 150. -
Acceleration Structure 308 - In at least one embodiment,
acceleration structure 308 defines one or more combination(s) ofassets 150, and specifies when eachparticular asset 150 should or should not be included withinLFP file 203.Assets 150 can be combined in different ways to provide different features based on device attributes and/or other factors. For example, if the processing capability ofdevice 105 is insufficient to render lightfield image data 301, such data can be omitted from LFP file 203 provided tosuch device 105; rather, a focus stack 303 may be provided, to allowdevice 105 to offer refocusing capability without having to render light field images. Alternatively, if no refocusing capability is needed or desired, focus stack 303 can be omitted, and asuitable asset 150 such as a flat image can be provided instead. - The following are examples of the use of
acceleration structure 308 to define combinations ofassets 150 to be used to enable different types of features and attributes. - Refocusing
- Refocusing capability can be enabled by combining
SAIs 306 to obtain refocusable images. In at least one embodiment,SAIs 306 are shifted and summed, according to techniques that are well known in the art and described, for example, in Ng et al. This technique is referred to as “shift-and-add”. - Alternatively, refocusing can be accomplished by using an
EDOF image 305, and selectively blurring portions of the image based on information fromdepth map 307. - Alternatively, refocusing can be accomplished by generating a focus stack 303 containing a number of 2D images, so that an appropriate image can be selected from focus stack 303 based on the desired focus depth. Interpolation and smoothing can be used to generate images at intermediate focus depths.
- In at least one embodiment, the determination of which method to use in order to enable refocusing capability can be made based on processing power of
device 105, quality/resolution needed or desired, download size desired (based, for example, on bandwidth constraints), and/or other factors. In many cases, the different refocus methods represent different trade-offs among these factors and limitations. Accordingly, in at least one embodiment,acceleration structure 308 defines a combination ofassets 150 and a methodology for implementing refocusing capability, based ondevice 105 limitations and other factors. - 3D Stereo Capability. 3D stereo capability can be implemented by providing two versions of all
relevant assets 150; for example, two focus stacks 303 or EDOF images 305: one for each eye (i.e., one for each of two stereo viewpoints). Alternatively, a single focus stack 303 orEDOF image 305 can be provided, which contains all the information needed for 3D stereo viewing; for example, it can contain pre-combined red/cyan images overlaid on one another to permit stereo viewing by extraction of the red and cyan images (3D glasses can be used for such extraction). Alternatively, 3D parallax assets can be used to generate 3D stereo images on-the-fly atdevice 105. - Again, in at least one embodiment, the determination of which method to use in order to enable 3D stereo capability can be made based on processing power of
device 105, quality/resolution needed or desired, download size desired (based, for example, on bandwidth constraints), and/or other factors. Accordingly, in at least one embodiment,acceleration structure 308 defines a combination ofassets 150 and a methodology for implementing 3D stereo capability, based ondevice 105 limitations and other factors. - 3D Parallax Capability
- 3D parallax capability can be implemented by providing
multiple SAIs 306; since each contains a view of the scene from a different viewpoint, parallax shifts can be simulated by selection of individual SAIs. Such an approach generally offers low resolution results, and may therefore be suitable fordevices 105 having smaller screens. Interpolation can be performed to smooth the transition from one viewpoint to another, and/or to implement intermediate viewpoints. - Alternatively, 3D parallax capability can be implemented using
EDOF image 305 together withdepth map 307. A 3D mesh can be generated fromdepth map 307, specifying spatial locations for items withinEDOF image 305. A virtual camera can navigate the 3D environment defined by the mesh; based on the movement of this camera, projections can be generated. Items in theEDOF image 305 can be synthetically warped to generate the 3D parallax images. - In some cases, items may be occluded in the
EDOF image 305 so that they are not available for display in the 3D environment. If those items need to be displayed, lower resolution versions available fromSAIs 306 can be used to fill in the gaps.SAIs 306 can also be used to fill in any areas where insufficient image data is available from theEDOF image 305. - In this manner, an alternative approach to 3D parallax capability is enabled, which may provide improved performance in environments where generation of a 3D mesh and navigation with a 3D environment are feasible, for example if a graphics processing unit is available at
device 150. - Alternative Mechanism for Refocusing, 3D Stereo, and Parallax Capability
- In at least one embodiment, refocusing, 3D stereo, and parallax capability can be enabled using a set of high-quality, high-
resolution EDOF images 305, each taken from a different viewpoint. Adepth map 307 may or may not be included. In this embodiment, instead of warping asingle EDOF image 305 to effect viewpoint changes, the system selects and uses one of theEDOF images 305 that has a viewpoint approximating the desired viewpoint. TheseEDOF images 305 are used as high-quality SAIs, and can be used to drive animations, as follows: -
- Viewpoint can be changed by selecting a
suitable EDOF image 305 from the set; - 3D stereo can be implemented by providing two (or more)
EDOF images 305, one for each eye; - Refocusing can be implemented using the shift-and-add technique described above in connection with
SAIs 306.
- Viewpoint can be changed by selecting a
- Any or all of the above capabilities can be implemented using various combinations of
assets 150. In addition, any of these capabilities can be further enhanced by providing animations that depict smooth transitions from one view to another. For example, refocusing can be enhanced by providing transitions from one focus depth to another; smooth transitions can be performed by selectively displaying images from a focus stack or tiled focus stack, and/or by interpolating between available images, combining available images, and/or any other suitable technique. - One example of an
asset 150 is a focus stack. A focus stack is a set of refocused images and/or 2D images, possibly of the same or similar scene at different focus depths. A focus stack can be generated from a light field image by projecting the light field image data at different focus depths and capturing the resulting 2D images in a known 2D image format. Such an operation can be performed in advance of a request for image data, or on-the-fly when such a request is received. Once generated, the focus stack can be stored indata storage 104. The focus stack can be made available as anasset 150 in response to requests for refocusable image data. For example, if the particular attributes ofdevice 105 dictate that the image can be refocused based onuser 110 input, a focus stack can be provided todevice 105 to enable such refocusing. In particular, the focus stack can be provided in situations where it is not feasible for the entirety of the light field data to be transmitted to device 105 (for example, ifdevice 105 does not have the capability or the processing power to render light field data in a satisfactory manner).Device 105 can thus render refocusing effects by selecting one of the images in the focus stack to be shown onoutput device 106, without any requirement to render projections of light field data. In at least one embodiment,device 105 can use multiple images from the focus stack; for example, such images can be blended with one another, and/or interpolation can be used, to generate smooth depth transition animations and/or to display images at intermediate focus depths. - Referring now to
FIG. 5A , there is shown an example of a conceptual architecture for a focus stack 501 containingmultiple images 502 and stored in adata storage device 104, according to one embodiment. One skilled in the art will recognize that any number ofimages 502 can be included in focus stack 501. In at least one embodiment, eachimage 502 is a refocused image that is generated from light field data by projecting the light field image data at different focus depths and capturing the resulting 2D images in a known 2D image format. Eachimage 502 can be stored using any suitable image storage format, including digital formats such as JPEG, GIF, PNG, and the like. Any suitable data format can be used for organizing the storage of focus stack 501, for relatingimages 502 to one another, and/or to indicate a focus depth for eachimage 502. For example, in at least one embodiment, focus stack 501 can be implemented as a data format including a header indicating focus depths for each of a number ofimages 502, and pointers to storage locations forimages 502. - In at least one embodiment, as described above, each
image 502 in focus stack 501 represents a complete scene. Thus, in depicting the scene atoutput device 106 ofdevice 105, asingle image 502 is used, or a set of two ormore images 502 are blended together in their entirety. - Alternatively, in at least one embodiment,
assets 150 can include image tiles, each of which represent a portion of the scene to be depicted. Multiple image tiles can be combined with one another to render the scene, with different image tiles being used for different portions of the scene. For example, different image tiles associated with different focus depths can be used, so as to generate an image wherein one portion of the image is at a first focus depth and another portion of the image is at a different focus depth. Such an approach can be useful, for example, for images that include elements having significant foreground and background elements that are widely spaced in the depth field. If desired, only a portion of the image can be stored at each focus depth, so as to conserve storage space and bandwidth. - Referring now to
FIG. 5B , there is shown an example of a conceptual architecture for a tiled focus stack 501 containingmultiple image tiles 503 and stored in adata storage device 104, according to one embodiment. One skilled in the art will recognize that any number ofimage tiles 503 can be included in focus stack 501;image tiles 503 can be provided in addition to or instead ofcomplete images 502. In at least one embodiment, eachimage tile 503 is a portion of a refocused image that is generated from light field data by projecting the light field image data at different focus depths and capturing the desired portions of the resulting 2D images in a 2D image format. Eachimage tile 503 can be stored using any suitable image storage format, including digital formats such as JPEG, GIF, PNG, and the like. Any suitable data format can be used for organizing the storage of focus stack 501, for relatingimage tiles 503 to one another, and/or to indicate a focus depth for eachimage tile 503. For example, in at least one embodiment, focus stack 501 can be implemented as a data format including a header indicating focus depths for each of a number ofimage tiles 503 and further indicating which portion of the overall scene thatimage tile 503 represents; the data format can also include pointers to storage locations forimage tiles 503. - Tiling can be performed in any of a number of different ways. In at least one embodiment, the image can simply be divided into some number of tiles without reference to the content of the image; for example, the image can be divided into four equal tiles. In at least one other embodiment, the content of the image may be taken into account; for example, an analysis can be performed so that the division into tiles can be made intelligently. Tiling can thus take into account positions and/or relative distances of objects in the scene; for example, tiles can be defined so that closer objects are in one tile and farther objects are in another tile.
- Referring now to
FIGS. 6A through 6E , there is shown a series of examples ofimages 502 associated with different focal lengths and stored in a focus stack 501, according to one embodiment. For eachsuch image 502, a depth value is shown, representative of a focus depth. - In
FIG. 6A ,image 502A is depicted, representing the image when it has been refocused with depth value of +5.Object 601C, which is farther away from the camera, is in focus; object 601A, which is closer to the camera, is out of focus; object 601B, which is even closer to the camera thanobject 601A, is even more out of focus.FIGS. 6B through 6E depictimages 502B through 502E, respectively, each of which is refocused with successively lower depth values indicating focus depths that are closer to the camera. Accordingly, in eachimage 502B through 502E, object 601C appears more and more out of focus, and object 601B appears more and more in focus.Object 601A, having a moderate distance from the camera, appears in focus inimage 502D. - As described above, in at least one embodiment, images can be divided into
tiles 503, thus facilitating assembly of afinal images 107 from multiple portions depicting different regions of a scene. Such a technique allows different portions of an image to be presented in focus, even if the portions represent parts of the scene that were situated at drastically different distances from the camera. - Referring now to
FIGS. 7A through 7E , there is shown a series of examples of possible tilings of the images depicted inFIGS. 6A through 6E , according to one embodiment. Referring now also toFIGS. 8A through 8E , there are shown the tilings ofFIGS. 7A through 7E , with the images removed for clarity. For illustrative purposes, out-of-focus elements are shown using dotted or dashed lines, with the lengths of the dashes indicating a relative degree to which the element is out of focus. - In
FIGS. 7A and 8A ,image 502A having a depth value of +5 has been divided into fourtiles 701A through 701D, each representing different portions of the scene having different distances from the camera. As shown in the examples ofFIGS. 7A and 8A , tiles 701 can (but need not) overlap one another. Where overlapping tiles 701 are available, the overlapping portions of two or more tiles 701 can be blended with one another to improve the smoothness of the transition from one area offinal image 107 to another. - In
FIGS. 7B and 8B ,image 502B having a depth value of 0 has been divided into twotiles 701E and 701EE, each representing different portions of the scene having different distances from the camera. In this example, the portion ofimage 502B that lies outsidetiles 701E and 701EE is not stored or used. - In
FIGS. 7C and 8C , it is determined that no portion ofimage 502C is used; thus no tiles are made available. - In
FIGS. 7D and 8D ,image 502D having a depth value of −10 has been divided into twotiles image 502D that liesoutside tiles - In
FIGS. 7E and 8E ,image 502E having a depth value of −15 has been divided into fourtiles 701H through 701L, each representing different portions of the scene having different distances from the camera. - In at least one embodiment, an automated analysis is performed to determine which tiles 701, if any, should be extracted and stored for each refocused
image 502. For example, in the above-described example, it is automatically determined that no tiles fromimage 502C are needed, because no area of theimage 502C is sufficiently in focus to be of use. This automated determination can take into account any suitable factors, including for example, characteristics of theimage 502 itself, available bandwidth and/or storage space, available processing power, desired level of interactivity and number of focus levels, and/or the like. - Referring now to
FIG. 9 , there is shown a flow diagram depicting a method of generating animage 107 fromtiles 503 of a focus stack 501, according to one embodiment.Device 105 receives 401 a request fromuser 110 to view an image. Such request can be provided, for example, via input provided atinput device 108. For example,user 110 may navigate to an image within an album, or may retrieve an image from a website, or the like. In at least one embodiment, the techniques of the present invention can be applied to images that are presented automatically and without an explicit user request; for example, in response to an incoming phone call wherein it may be desired to show a picture of the caller, or in response to automatic activation of a screen saver for depicting images. -
Device 105 receives 407assets 150 for depicting the images.Steps 402 to 406, described above in connection withFIG. 4 , may be performed prior to step 407, but are omitted inFIG. 9 for clarity. By performingsteps 402 to 406,device 105 can request and receiveassets 150 that are suited to the particular attributes ofdevice 105,software 151 running ondevice 105, context of the image display request, and/or any other factors. In the example ofFIG. 9 ,such assets 150 include image tiles 701. - Based on the user request received in
step 401,device 105 determines 908 which tiles 701 should be used in generatingfinal image 107.Such determination 908 can be made, for example, based on a desired focus depth forfinal image 107. For example,user 110 can interact with a user interface element to specify that a particular portion of the image is to be in focus (and/or to specify other characteristics of the desired output image); based on such input, appropriate tiles 701 are selected to be used in generatingfinal image 107. - In at least one embodiment, multiple tiles 701 representing different portions of the image are stitched together to generate
final image 107. In at least one embodiment, multiple tiles 701 representing the same portion of the image are used, for example by interpolating a focus depth between two available tiles 701 for the same portion of the image. In at least one embodiment, these two blending techniques are both used. -
FIG. 9 depicts examples of steps for performing such operations. In at least one embodiment, prior to blending 910 tiles 701 representing the same portion of the image,device 105 determines 909 weighting for tiles 701, for example to interpolate a focal distance between the focal distance of the individual tiles. For example, if the desired focal distance is closer to that of one tile than that of another tile, the weighting can reflect this, so that the first tile is given greater weight in the blending operation than the second tile. - As mentioned above, in at least one embodiment,
device 105 blends 911 together, or stitches, tiles 701 representing different portions of the image. Such blending 911 can take advantage those regions where tiles 701 overlap one another, if available. In embodiments where no overlap is available, blending 911 can be performed at the border between tiles 701. - Once
steps final image 107 is rendered andoutput 408. - In at least one embodiment,
device 105 stores and/or receives only those tiles 701 that are needed to enable the particular features desired for a particular image display operation, given the attributes ofdevice 105. - The following is an example of the application of the method of
FIG. 9 to the examples depicted inFIGS. 7A through 7E , in order to generate afinal image 107 having depth value of −5: -
-
Blend tiles 701E and 701EE fromimage 502B (having depth value=0) withrespective tiles image 502E (having depth value=−15).Tiles 701E and 701EE fromimage 502B are given a blending weight (i.e. alpha) of 10/15=0.67, andtiles image 502E are given a blending weight of 5/15=0.33. This reflects the fact that the desired depth value is closer to the depth value oftiles 701E and 701EE. -
Blend tiles image 502A (having depth value=+5) withrespective tiles image 502D (having depth value=−10).Tiles image 502A are given a blending weight of 5/15=0.33, andtiles image 502D are given a blending weight of 10/15=0.67. This reflects the fact that the desired depth value is closer to the depth value oftiles - The result of these two steps is a set of two images, each of which spans half the scene. These two images are then blended, or stitched, together, spatially blending across the overlap region to make the seam invisible. The
final image 107 is then output.
-
- Any suitable data format can be used for storing data in
LFP file 203. In at least one embodiment, the data format is configured so thatdevice 105 is able to query LFP file 203 to determine whatassets 150 are present, what features and capabilities are available based on thoseassets 150, and what is best the match between such features/capabilities andavailable assets 150. In this manner, the data format allowsdevice 105 to determine the best combination ofassets 150 to retrieve in order to achieve the desired results. - In at least one embodiment,
metadata 302 and/or other data in LFP files 203 are stored in JavaScript Object Notation (JSON), which provides a standardized text notation for objects. JSON is sufficiently robust to provide representations according to the techniques described herein, including objects, arrays, and hierarchies. JSON further provides a mechanism which is easy for humans to read, write, and understand. - One example of a generalized format for a JSON representation of an object is as follows:
-
object ::= { } | { members } members ::= pair | pair , members pair ::= string : value array ::= [ ] | [ elements ] elements ::= value | value , elements value ::= string | number | object | array true | false | null string ::= ”” | ”chars” number ::= int | intFrac | intExp | intFracExp - Thus, the JSON representation can be used to store frame metadata in a key-value pair structure.
- As described above, frame metadata may contain information describing the camera that captured an image. An example of a portion of such a representation in JSON is as follows:
-
”camera” : { ”make” : ”any_make”, ”model” : ”any_model” ”firmware” : ”3.1.41 beta” } - Data stored in the JSON representation may include integers, floating point values, strings, Boolean values, and any other suitable forms of data, and/or any combination thereof.
- Given such a structure,
device 105 can access data in anLFP file 203 by performing a key lookup, and/or by traversing or iterating over the data structure, using known techniques. In this manner,device 105 can use anysuitable assets 150 found within LFP file 203 or elsewhere when generating final image(s) 107. - The JSON representation may also include structures; for example a value may itself contain a list of values, forming a hierarchy of nested key-value pair mappings. For example:
-
”key1” : { ”key2” : { ”key3”:[2.12891, 1.0, 1.29492] } } - In at least one embodiment, binary data is stored in the JSON structure via a base64-encoding scheme.
- Privacy concerns are addressed as described above. Identifying data, as well as any other data that is not critical to the interpretation of image data, may be provided in a removable section of metadata, for example in a separate section of the JSON representation. This section can be deleted without affecting image rendering operations, since the data contained therein is not used for such operations. An example of such a section is as follows:
-
“removable” : { “serial” : “520323552”, “gps” : { ... }, ... } - Data to be used in rendering images may be included in any number of separate sections. These may include any or all of the following:
-
- a description section, providing a general description of the equipment used (without specific identifying information)
- an image section, containing image data;
- a devices section, specifying settings and parameters for the equipment used;
- a light field section, containing light field data (if the frame contains a light field image);
- One skilled in the art will recognize that these are merely exemplary, and that any number of such sections can be provided.
- Description section can contain any information generally describing the equipment used to capture the image. An example of a description section is as follows:
-
”camera” : { ”make” : ”any_make”, ”model” : ”any_model” ”firmware” : ”3.1.41 beta” } - Image section contains image data. Image section can contain color-related fields for converting raw images to RGB format. Image section can contain a “format” value indicating whether the format of the image is “raw” or “rgb”. In addition, various other fields can be provided to indicate what corrections and/or other operations were performed on the captured image.
- An example of an image section is as follows:
-
“image” : { “timeStamp” : “2009:07:04 03:00:46 GMT”, “orientation” : 1, “width” : 4752, “height” : 3168, “format” : “raw”, “raw” : { “mosaic” : { “type” : “r,g;g,b”, “firstPixelMosaicIndex” : { “x” : 0, “y” : 1 } }, “pixelRange” : { “black” : 1024, “white” : 15763 }, “pixelFormat” : { “bpp” : 16, “endian” : “little”, “shift” : 4 } }, “whiteBalanceMultipliers” : [2.12891, 1, 1.29492], “ccmRgbToSrgb” : [ 2.26064, −1.48416, 0.223518, −0.100973, 1.59904, −0.498071, 0.0106269, −0.58439, 1.57376] }, “gamma” : [0, 1, 2, 4, 6, 9, ..., 4050, 4070, 4092] } - Devices section specifies camera hardware and/or settings; for example, lens manufacturer and model, exposure settings, and the like. In at least one embodiment, this section is used to break out information for component parts of the camera that may be considered to be individual devices. An example is as follows:
-
“devices” : { “lens” : { “make” : “any_make1”, “model” : “any_model2”, “macro” : true, “focalLength” : 50, “fNumber” : 4, “motorPosition” : { “zoom” : 200, “focus” : 120 } }, “flash” : { “make” : “any_make2”, “model” : ”any_model2”, “firmware” : “beta”, “brightness” : 2.3, “duration” : 0.1 }, “ndfilter” : { “stops” : 3.0 }, “sensor” : { “exposureDuration” : 0.1, “iso” : 400, “analogGain” : 34.0, “digitalGain” : 1.0 } “accelerometer” : { “samples” : [ ... ] } } - Light field section provides data relating to light fields, image refocusing, and the like. Such data is relevant if the image is a light field image. An example is as follows:
-
“lightfield” : { “index” : 1, “mla” : { “type” : “hexRowMajor”, “pitch” : 51.12, “scale” : { “x” : 1, “y” : 1 }, “rotation” : 0.002319, “sensorOffset” : { “x” : −15.275, “y” : −44.65, “z” : 200 }, “defects” : [ { “x” : 1, “y” : 3}, { “x” : 28, “y” : 35} ] }, “sensor” : { “pixelPitch” : 4.7 }, “lens” : { “exitPupilOffset” : { “x” : 0.0, “y” : 0.0, “z” : 57.5 } }, } - In at least one embodiment, the “defects” key refers to a set of (x,y) tuples indicating defective microlenses in the microlens array. Such information can be useful in generating images, as pixels beneath defective microlenses can be ignored, recomputed from adjacent pixels, down-weighted, or otherwise processed. One skilled in the art will recognize that various techniques for dealing with such defects can be used. If a concern exists that the specific locations of defects can uniquely identify a camera, raising privacy issues, the “defects” values can be omitted or can be kept hidden so that they are not exposed to unauthorized users.
- Frame digests are supported by the JSON data structure. As described above, a digest can be stored as both a hash type and hash data. The following is an example of a digest within the removable section of a JSON data structure:
-
“removable” : { “serial” : “520323552”, “gps” : { ... }, “digest” : { “type” : “shal”, “hash” : “ 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12” } } - In various embodiments, metadata (such as JSON data structures) can be included in a file separate from the image itself. Thus, one file contains the image data (for example, img—0021.jpg, img—0021.dng, img—0021.raw, or the like), and another file in the same directory contains the JSON metadata (for example, img—0021.txt). In at least one embodiment, the files can be related to one another by a common filename (other than the extension) and/or by being located in the same directory.
- Alternatively, the image data and the metadata can be stored in a single file. For example, the JSON data structure can be included in an ancillary tag according to the exchangeable image file format (EXIF), or it can be appended to the end of the image file. Alternatively, a file format can be defined to include both image data and metadata.
- The following is an example of the operation of the invention according to one embodiment. One skilled in the art will recognize that this example is intended to be illustrative only, and that many other modes of operation can be used without departing from the essential characteristics of the present invention, as defined in the claims.
- Suppose
device 105 is a mobile device (such as an iPhone) having the following characteristics: -
- Small screen, with resolution of 960×480 pixels
- Connection to low-bandwidth network (such as 3G wireless)
- Graphics processing unit (GPU)
- Accelerometer
- Suppose the desired feature is to deliver real-time parallax shifting as accelerometer is tilted.
-
Device 105queries server 109 via the Internet, using a handshaking mechanism. The query specifies the characteristics ofdevice 105 and the desired feature.Server 109 responds with links toassets 150 needed to enable the desired feature, given the specified characteristics. Alternatively,device 105 can determine whatassets 150 are needed and request them. -
Device 105 submits 406 the request for the specifiedassets 150 using the provided links. For this example,such assets 150 might include: -
- EDOF image at screen resolution of 960×480 pixels
- Depth map at lower resolution such as 320×320
- Ten SAIs at lower resolution such as 320×320
- Specific sizes for these
assets 150 can be selected based, for example, on a menu of available sizes. For example, sizes can be made available for a number of commonly used devices, such as for example an iPhone. - Upon receiving these
assets 150,device 105 uses its GPU to perform warping on items in the EDOF image, based on the depth map, so as to generate the parallax effect. In this manner, thedevice 105 has been provided with thoseassets 150 that are best suited to this approach for enabling the desired feature, while minimizing waste of resources. - The above example is merely exemplary. Different devices, different software, and/or players on different devices, might have different characteristics and features.
- The following is an example of a JSON specification for
LFP files 203 according to one embodiment. One skilled in the art will recognize that this example is intended to be illustrative only, and that many other variables, formats, arrangements, and syntaxes can be used without departing from the essential characteristics of the present invention, as defined in the claims. - In various embodiments, any number of extensions can be made to the JSON specification; these may be provided, for example, for certain types of equipment or vendors according to one embodiment.
- The following is an example of such an extension:
-
VENDOR_FRAME_PARAMETER_OBJ ::= { “com.lytro.tags” : { “darkFrame” : BOOLEAN, // optional. (false) shutter may or may not have opened, but no light reached the sensor. “modulationFrame” : BOOLEAN // optional. (false) intended to serve as a modulation image (flat-field or dark frame). // “eventArray” : [ FRAME_PARAMETER_EVENT_OBJ ] // optional. Add if/when variable frame parameters are required. } } VENDOR_VIEW_TYPE_ENUM ::= “com.lytro.stars” | “com.lytro.parameters” VENDOR_VIEW_OBJ ::= // view objects are individually defined to match their types VIEW_STARS_OBJ | // corresponding to vendor view type “com.lytro.stars” VIEW_OPERATORS_OBJ // corresponding to vendor view type “com.lytro.parameters” VIEW_STARS_OBJ ::= { “starred” : BOOLEAN } VIEW_OPERATORS_OBJ ::= { “eventArray” : [ VIEW_OPERATORS_EVENT_OBJ ] // events are in order. (This order trumps the time stamps in the individual events) } VIEW_OPERATORS_EVENT_OBJ ::= { “zuluTime” : STRING, // ISO 8601, e.g., “2011-03-30T18:07:25.134Z”, fraction to millisecond, Zulu time (no local offset) “viewTurns” : TURN, // optional. (0) // “viewTurnsArray” : [ TURN ], // optional. (0) Should not be present if “viewTurns” is present. Array length should match # of frames. “viewCrop” : VIEW_CROP_OBJ, // optional. // “viewCropArray” : [ VIEW_CROP_OBJ ], // optional. Should not be present if “viewCrop” is present. Array length should match # of frames. “viewBrightness” : NORMALIZED_VIEW_OPERATOR, // optional. (0.5) // “viewBrightnessArray” : [ NORMALIZED_VIEW_OPERATOR ], // optional. Should not be present if “viewBrightness” is present. Array length should match # of frames. “viewContrast” : NORMALIZED_VIEW_OPERATOR, // optional. (0.5) // “viewContrastArray” : [ NORMALIZED_VIEW_OPERATOR ], // optional. Should not be present if “viewContrast” is present. Array length should match # of frames. “viewSaturation” : NORMALIZED_VIEW_OPERATOR, // optional. (0.5) // “viewSaturationArray” : [ NORMALIZED_VIEW_OPERATOR ] // optional. Should not be present if “viewBrightness” is present. Array length should match # of frames. “viewSharpness” : NORMALIZED_VIEW_OPERATOR, // optional. (0) // “viewSharpnessArray” : [ NORMALIZED_VIEW_OPERATOR ], // optional. Should not be present if “viewSharpness” is present. Array length should match # of frames. “viewDeNoise” : NORMALIZED_VIEW_OPERATOR, // optional. (0) // “viewDeNoiseArray” : [ NORMALIZED_VIEW_OPERATOR ], // optional. Should not be present if “viewDeNoise” is present. Array length should match # of frames. “viewColorTemperature” : NORMALIZED_VIEW_OPERATOR, // optional. (0.5) // “viewColorTemperatureArray” : [ NORMALIZED_VIEW_OPERATOR ], // optional. “viewTint” : NORMALIZED_VIEW_OPERATOR, // optional. (0.5) // “viewTintArray” : [ NORMALIZED_VIEW_OPERATOR ], // optional. Should not be present if “viewTint” is present. Array length should match # of frames. // “viewRefocusDof” : “normal” | “extended” // optional. // “viewRefocusLambda” : LAMBDA // optional. // “viewRefocusLambdaSpec” : // optional. // { // “mode” : “coord” | “lambda”, // “coord” : // { // “x” : PIXEL, // “y” : PIXEL // } // } } VIEW_CROP_OBJ ::= { “fromLeft” : PIXEL_COORD, // (0) Pixels removed from the left side of the image. “fromTop” : PIXEL_COORD, // (0) Pixels removed from the top of the image. “width” : PIXEL_COORD, // (−1) Maximum width of the resulting image. (Excess removed from the right side.) “height” : PIXEL_COORD // (−1) Maximum height of the resulting image. (Excess removed from the bottom.) // For both “width” and ‘height”, value −1 implies a size large enough to ensure that // no cropping happens on the right/bottom in that dimension. } VENDOR_ACCELERATION_TYPE_ENUM ::= “com.lytro.acceleration.refocusStack” | // //“com.lytro.acceleration.motionParallax” VENDOR_ACCELERATION_GENERATOR_ENUM ::= “Glycerin 0.1.unknown” . VENDOR_ACCELERATION_OBJ ::= // acceleration objects are individually defined to match their types ACCELERATION_REFOCUS_STACK_OBJ | // corresponding to vendor acceleration type “com.lytro.acceleration.refocusStack” //ACCELERATION_MOTION_PARALLAX_OBJ // hypothetical, corresponding to vendor acceleration type “com.lytro.acceleration.motionParallax” ACCELERATION_REFOCUS_STACK_OBJ ::= { “viewParameters” : // may be empty. { // “viewTurns” : // optional. // { // “mode” : “fixedToValue” | “variable” | “n/a”, // (“fixedToValue”) // “value” : TURN // included iff mode is “fixedToValue”. (0) // }, // “viewCrop” : // optional. // { // “mode” : “fixedToValue” | “variable” | “n/a”, // (“fixedToValue”) // “fromLeft” : PIXEL_COORD, // (0) Pixels removed from the left side of the image. // “fromTop” : PIXEL_COORD, // (0) Pixels removed from the top of the image. // “width” : PIXEL_COORD, // (UNKNOWN_PIXEL_COORD) Maximum width of the resulting image. (Excess removed from the right side.) // “height” : PIXEL_COORD // (UNKNOWN_PIXEL_COORD) Maximum height of the resulting image. (Excess removed from the bottom.) // }, // “viewRefocusDof” : // { // “mode” : “fixedToValue” | “variable” | “n/a”, // “value” : “normal” | “extended” // included iff mode is fixedToValue // }, // “viewRefocusLambda” : // { // “mode” : “fixedToValue” | “variable” | “n/a”, // “value” : LAMBDA // included iff mode is fixedToValue // } } “displayParameters” : { “displayDimensions” : { “mode” : “fixedToValue” | “variable” | “n/a”, “value” : { width : PIXEL_COORD, height : PIXEL_COORD } } }, “imageArray” : [ ACCELERATION_IMAGE_OBJ ], // may be empty, but this seems unlikely. “depthLut” : ACCELERATION_IMAGE_OBJ, “default_lambda” } ACCELERATION_IMAGE_OBJ ::= { “imageRef” : BLOBREF, // optional (UNKNOWN_BLOBREF). the blobref, the http, or the inline image should be present “imageUrl” : URL, // optional (UNKNOWN_URL). “image” : INLINE_IMAGE_OBJ, // optional (no default). “representation” : IMAGE_REPRESENTATION_ENUM, “width” : PIXEL_COORD, “height” : PIXEL_COORD, “lambda” : LAMBDA // optional (0). Required only for com.lytro.acceleration.refocusStack. } - In at least one embodiment, frame and/or picture data is stored as binary large objects (BLOBs). “Blobrefs” can be used as wrappers for such BLOBs; each blobref holds or refers to a BLOB. As described in the related U.S. patent application cross-referenced above, blobrefs can contain hash type and hash data, so as to facilitate authentication of data stored in BLOBs. In at least one embodiment, Blob servers communicate with one another to keep their data in sync, so as to avoid discrepancies in stored BLOBs. In addition, a search server may periodically communicate with one or more Blob servers in order to update its index.
- In at least one embodiment, frames 202 can be represented as digests, as described in the related U.S. patent application cross-referenced above. A hash function is defined, for generating a unique digest for each
frame 202. In at least one embodiment, digests are small relative to their correspondingframes 202, so that transmission, storage, and manipulation of such digests are faster and more efficient than such operations would be on theframes 202 themselves. For example, in at least one embodiment, each digest is 256 bytes in length, although one skilled in the art will recognize that they may be of any length. A digest can also be referred to as a “hash”. - The present invention has been described in particular detail with respect to possible embodiments. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. First, the particular naming of the components, capitalization of terms, the attributes, data structures, or any other programming or structural aspect is not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, formats, or protocols. Further, the system may be implemented via a combination of hardware and software, as described, or entirely in hardware elements, or entirely in software elements. Also, the particular division of functionality between the various system components described herein is merely exemplary, and not mandatory; functions performed by a single system component may instead be performed by multiple components, and functions performed by multiple components may instead be performed by a single component.
- In various embodiments, the present invention can be implemented as a system or a method for performing the above-described techniques, either singly or in any combination. In another embodiment, the present invention can be implemented as a computer program product comprising a nontransitory computer-readable storage medium and computer program code, encoded on the medium, for causing a processor in a computing device or other electronic device to perform the above-described techniques.
- Reference in the specification to “one embodiment” or to “an embodiment” means that a particular feature, structure, or characteristic described in connection with the embodiments is included in at least one embodiment of the invention. The appearances of the phrase “in at least one embodiment” in various places in the specification are not necessarily all referring to the same embodiment.
- Some portions of the above are presented in terms of algorithms and symbolic representations of operations on data bits within a memory of a computing device. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps (instructions) leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical, magnetic optical signals capable of being stored, transferred, combined, compared and otherwise manipulated. It is convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like. Furthermore, it is also convenient at times, to refer to certain arrangements of steps requiring physical manipulations of physical quantities as modules or code devices, without loss of generality.
- It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as “processing” or “computing” or “calculating” or “displaying” or “determining” or the like, refer to the action and processes of a computer system, or similar electronic computing module and/or device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.
- Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention can be embodied in software, firmware and/or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
- The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computing device selectively activated or reconfigured by a computer program stored in the computing device. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, flash memory, solid state drives, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus. Further, the computing devices referred to herein may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- The algorithms and displays presented herein are not inherently related to any particular computing device, virtualized system, or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will be apparent from the description provided herein. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references above to specific languages are provided for disclosure of enablement and best mode of the present invention.
- Accordingly, in various embodiments, the present invention can be implemented as software, hardware, and/or other elements for controlling a computer system, computing device, or other electronic device, or any combination or plurality thereof. Such an electronic device can include, for example, a processor, an input device (such as a keyboard, mouse, touchpad, trackpad, joystick, trackball, microphone, and/or any combination thereof), an output device (such as a screen, speaker, and/or the like), memory, long-term storage (such as magnetic storage, optical storage, and/or the like), and/or network connectivity, according to techniques that are well known in the art. Such an electronic device may be portable or nonportable. Examples of electronic devices that may be used for implementing the invention include: a mobile phone, personal digital assistant, smartphone, kiosk, server computer, enterprise computing device, desktop computer, laptop computer, tablet computer, consumer electronic device, television, set-top box, or the like. An electronic device for implementing the present invention may use any operating system such as, for example: Linux; Microsoft Windows, available from Microsoft Corporation of Redmond, Wash.; Mac OS X, available from Apple Inc. of Cupertino, Calif.; iOS, available from Apple Inc. of Cupertino, Calif.; and/or any other operating system that is adapted for use on the device.
- While the invention has been described with respect to a limited number of embodiments, those skilled in the art, having benefit of the above description, will appreciate that other embodiments may be devised which do not depart from the scope of the present invention as described herein. In addition, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention, which is set forth in the claims.
Claims (59)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/523,776 US20120249550A1 (en) | 2009-04-18 | 2012-06-14 | Selective Transmission of Image Data Based on Device Attributes |
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17062009P | 2009-04-18 | 2009-04-18 | |
US12/703,367 US20100265385A1 (en) | 2009-04-18 | 2010-02-10 | Light Field Camera Image, File and Configuration Data, and Methods of Using, Storing and Communicating Same |
US13/155,882 US8908058B2 (en) | 2009-04-18 | 2011-06-08 | Storage and transmission of pictures including multiple frames |
US201261655790P | 2012-06-05 | 2012-06-05 | |
US13/523,776 US20120249550A1 (en) | 2009-04-18 | 2012-06-14 | Selective Transmission of Image Data Based on Device Attributes |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/155,882 Continuation-In-Part US8908058B2 (en) | 2009-04-18 | 2011-06-08 | Storage and transmission of pictures including multiple frames |
Publications (1)
Publication Number | Publication Date |
---|---|
US20120249550A1 true US20120249550A1 (en) | 2012-10-04 |
Family
ID=46926591
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/523,776 Abandoned US20120249550A1 (en) | 2009-04-18 | 2012-06-14 | Selective Transmission of Image Data Based on Device Attributes |
Country Status (1)
Country | Link |
---|---|
US (1) | US20120249550A1 (en) |
Cited By (148)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110181593A1 (en) * | 2010-01-28 | 2011-07-28 | Ryusuke Hirai | Image processing apparatus, 3d display apparatus, and image processing method |
US20110234841A1 (en) * | 2009-04-18 | 2011-09-29 | Lytro, Inc. | Storage and Transmission of Pictures Including Multiple Frames |
US20120120099A1 (en) * | 2010-11-11 | 2012-05-17 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method, and storage medium storing a program thereof |
US8542933B2 (en) * | 2011-09-28 | 2013-09-24 | Pelican Imaging Corporation | Systems and methods for decoding light field image files |
US20130311940A1 (en) * | 2012-05-15 | 2013-11-21 | Salvadore V. Ragusa | System of Organizing Digital Images |
US8614764B2 (en) | 2008-11-25 | 2013-12-24 | Lytro, Inc. | Acquiring, editing, generating and outputting video data |
US20140002675A1 (en) * | 2012-06-28 | 2014-01-02 | Pelican Imaging Corporation | Systems and methods for detecting defective camera arrays and optic arrays |
US20140118570A1 (en) * | 2012-10-31 | 2014-05-01 | Atheer, Inc. | Method and apparatus for background subtraction using focus differences |
US20140176592A1 (en) * | 2011-02-15 | 2014-06-26 | Lytro, Inc. | Configuring two-dimensional image processing based on light-field parameters |
US20140192237A1 (en) * | 2011-11-30 | 2014-07-10 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus including image processing apparatus |
WO2014109270A1 (en) * | 2013-01-11 | 2014-07-17 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus |
JP2014158070A (en) * | 2013-02-14 | 2014-08-28 | Canon Inc | Image processing apparatus, image pickup apparatus, image processing method, image processing program, and storage medium |
US8831377B2 (en) | 2012-02-28 | 2014-09-09 | Lytro, Inc. | Compensating for variation in microlens position during light-field image processing |
WO2014165244A1 (en) * | 2013-03-13 | 2014-10-09 | Pelican Imaging Corporation | Systems and methods for synthesizing images from image data captured by an array camera using restricted depth of field depth maps in which depth estimation precision varies |
US8861089B2 (en) | 2009-11-20 | 2014-10-14 | Pelican Imaging Corporation | Capturing and processing of images using monolithic camera array with heterogeneous imagers |
US8866920B2 (en) | 2008-05-20 | 2014-10-21 | Pelican Imaging Corporation | Capturing and processing of images using monolithic camera array with heterogeneous imagers |
US8878950B2 (en) | 2010-12-14 | 2014-11-04 | Pelican Imaging Corporation | Systems and methods for synthesizing high resolution images using super-resolution processes |
US8885059B1 (en) | 2008-05-20 | 2014-11-11 | Pelican Imaging Corporation | Systems and methods for measuring depth using images captured by camera arrays |
US20140347352A1 (en) * | 2013-05-23 | 2014-11-27 | Indiana University Research & Technology Corporation | Apparatuses, methods, and systems for 2-dimensional and 3-dimensional rendering and display of plenoptic images |
WO2014193377A1 (en) * | 2013-05-30 | 2014-12-04 | Nokia Corporation | Image refocusing |
WO2014210514A1 (en) * | 2013-03-15 | 2014-12-31 | Pinterest, Inc. | Image delivery architecture |
US8928793B2 (en) | 2010-05-12 | 2015-01-06 | Pelican Imaging Corporation | Imager array interfaces |
US20150009364A1 (en) * | 2013-06-25 | 2015-01-08 | Glen Anderson | Management and access of media with media capture device operator perception data |
US8948545B2 (en) | 2012-02-28 | 2015-02-03 | Lytro, Inc. | Compensating for sensor saturation and microlens modulation during light-field image processing |
JP2015032948A (en) * | 2013-08-01 | 2015-02-16 | キヤノン株式会社 | Image processing apparatus, control method thereof and control program |
US20150054834A1 (en) * | 2013-08-20 | 2015-02-26 | TreSensa Inc. | Generating mobile-friendly animations |
JP2015046687A (en) * | 2013-08-27 | 2015-03-12 | キヤノン株式会社 | Image processing apparatus, image processing method, program, and imaging apparatus |
US8995785B2 (en) | 2012-02-28 | 2015-03-31 | Lytro, Inc. | Light-field processing and analysis, camera control, and user interfaces and interaction on light-field capture devices |
US20150106628A1 (en) * | 2013-10-10 | 2015-04-16 | Elwha Llc | Devices, methods, and systems for analyzing captured image data and privacy data |
US20150103192A1 (en) * | 2013-10-14 | 2015-04-16 | Qualcomm Incorporated | Refocusable images |
US20150109513A1 (en) * | 2012-04-26 | 2015-04-23 | The Trustees of Collumbia University in the City York | Systems, methods, and media for providing interactive refocusing in images |
US9100586B2 (en) | 2013-03-14 | 2015-08-04 | Pelican Imaging Corporation | Systems and methods for photometric normalization in array cameras |
US20150222810A1 (en) * | 2012-06-08 | 2015-08-06 | Canon Kabushiki Kaisha | Image processing apparatus and image processing method |
US9106784B2 (en) | 2013-03-13 | 2015-08-11 | Pelican Imaging Corporation | Systems and methods for controlling aliasing in images captured by an array camera for use in super-resolution processing |
US20150244755A1 (en) * | 2012-10-10 | 2015-08-27 | Huawei Device Co., Ltd. | Method, apparatus, and home network system for presenting multiple images, and mobile terminal |
US9123118B2 (en) | 2012-08-21 | 2015-09-01 | Pelican Imaging Corporation | System and methods for measuring depth using an array camera employing a bayer filter |
US9124864B2 (en) | 2013-03-10 | 2015-09-01 | Pelican Imaging Corporation | System and methods for calibration of an array camera |
US9128228B2 (en) | 2011-06-28 | 2015-09-08 | Pelican Imaging Corporation | Optical arrangements for use with an array camera |
US9143711B2 (en) | 2012-11-13 | 2015-09-22 | Pelican Imaging Corporation | Systems and methods for array camera focal plane control |
US20150312477A1 (en) * | 2014-04-29 | 2015-10-29 | Nokia Corporation | Method and apparatus for extendable field of view rendering |
US9185276B2 (en) | 2013-11-07 | 2015-11-10 | Pelican Imaging Corporation | Methods of manufacturing array camera modules incorporating independently aligned lens stacks |
US9197821B2 (en) | 2011-05-11 | 2015-11-24 | Pelican Imaging Corporation | Systems and methods for transmitting and receiving array camera image data |
US9210392B2 (en) | 2012-05-01 | 2015-12-08 | Pelican Imaging Coporation | Camera modules patterned with pi filter groups |
US20150358529A1 (en) * | 2014-06-04 | 2015-12-10 | Canon Kabushiki Kaisha | Image processing device, its control method, and storage medium |
US9214013B2 (en) | 2012-09-14 | 2015-12-15 | Pelican Imaging Corporation | Systems and methods for correcting user identified artifacts in light field images |
US9247117B2 (en) | 2014-04-07 | 2016-01-26 | Pelican Imaging Corporation | Systems and methods for correcting for warpage of a sensor array in an array camera module by introducing warpage into a focal plane of a lens stack array |
US20160028935A1 (en) * | 2012-06-01 | 2016-01-28 | Ostendo Technologies, Inc. | Spatio-Temporal Light Field Cameras |
US9253380B2 (en) | 2013-02-24 | 2016-02-02 | Pelican Imaging Corporation | Thin form factor computational array cameras and modular array cameras |
US9367939B2 (en) | 2013-10-22 | 2016-06-14 | Nokia Technologies Oy | Relevance based visual media item modification |
US9392153B2 (en) | 2013-12-24 | 2016-07-12 | Lytro, Inc. | Plenoptic camera resolution |
US9412206B2 (en) | 2012-02-21 | 2016-08-09 | Pelican Imaging Corporation | Systems and methods for the manipulation of captured light field image data |
US9414087B2 (en) | 2014-04-24 | 2016-08-09 | Lytro, Inc. | Compression of light field images |
US9420276B2 (en) | 2012-02-28 | 2016-08-16 | Lytro, Inc. | Calibration of light-field camera geometry via robust fitting |
US20160241855A1 (en) * | 2015-02-16 | 2016-08-18 | Canon Kabushiki Kaisha | Optimized plenoptic image encoding |
US9426361B2 (en) | 2013-11-26 | 2016-08-23 | Pelican Imaging Corporation | Array camera configurations incorporating multiple constituent array cameras |
US9438888B2 (en) | 2013-03-15 | 2016-09-06 | Pelican Imaging Corporation | Systems and methods for stereo imaging with camera arrays |
WO2016139134A1 (en) * | 2015-03-05 | 2016-09-09 | Thomson Licensing | Light field metadata |
US9445003B1 (en) | 2013-03-15 | 2016-09-13 | Pelican Imaging Corporation | Systems and methods for synthesizing high resolution images using image deconvolution based on motion and depth information |
US20160275987A1 (en) * | 2015-03-17 | 2016-09-22 | Thomson Licensing | Method and apparatus for displaying light field video data |
US9462164B2 (en) | 2013-02-21 | 2016-10-04 | Pelican Imaging Corporation | Systems and methods for generating compressed light field representation data using captured light fields, array geometry, and parallax information |
US9497429B2 (en) | 2013-03-15 | 2016-11-15 | Pelican Imaging Corporation | Extended color processing on pelican array cameras |
US9497370B2 (en) | 2013-03-15 | 2016-11-15 | Pelican Imaging Corporation | Array camera architecture implementing quantum dot color filters |
EP3099078A1 (en) * | 2015-05-29 | 2016-11-30 | Thomson Licensing | Method for collecting information on users of 4d light field data, corresponding apparatuses and computer programs |
EP3099077A1 (en) * | 2015-05-29 | 2016-11-30 | Thomson Licensing | Method for displaying a content from 4d light field data |
US9516222B2 (en) | 2011-06-28 | 2016-12-06 | Kip Peli P1 Lp | Array cameras incorporating monolithic array camera modules with high MTF lens stacks for capture of images used in super-resolution processing |
US9521416B1 (en) | 2013-03-11 | 2016-12-13 | Kip Peli P1 Lp | Systems and methods for image data compression |
US9521319B2 (en) | 2014-06-18 | 2016-12-13 | Pelican Imaging Corporation | Array cameras and array camera modules including spectral filters disposed outside of a constituent image sensor |
WO2016202926A1 (en) * | 2015-06-18 | 2016-12-22 | Dxo Labs | Method and device for producing a digital image |
US9578259B2 (en) | 2013-03-14 | 2017-02-21 | Fotonation Cayman Limited | Systems and methods for reducing motion blur in images or video in ultra low light with array cameras |
EP2775898B1 (en) | 2012-10-22 | 2017-04-05 | Realvision S.r.l. | Network of devices for performing optical/optometric/ophthalmological tests, and method for controlling said network of devices |
US9633442B2 (en) | 2013-03-15 | 2017-04-25 | Fotonation Cayman Limited | Array cameras including an array camera module augmented with a separate camera |
US9638883B1 (en) | 2013-03-04 | 2017-05-02 | Fotonation Cayman Limited | Passive alignment of array camera modules constructed from lens stack arrays and sensors based upon alignment information obtained during manufacture of array camera modules using an active alignment process |
US9712820B2 (en) | 2014-04-24 | 2017-07-18 | Lytro, Inc. | Predictive light field compression |
EP3203742A1 (en) * | 2016-02-02 | 2017-08-09 | Thomson Licensing | System and method for encoding and decoding information representative of a focalization distance associated to an image belonging to a focal stack representative of a light field content |
US9741118B2 (en) | 2013-03-13 | 2017-08-22 | Fotonation Cayman Limited | System and methods for calibration of an array camera |
US9766380B2 (en) | 2012-06-30 | 2017-09-19 | Fotonation Cayman Limited | Systems and methods for manufacturing camera modules using active alignment of lens stack arrays and sensors |
US9774789B2 (en) | 2013-03-08 | 2017-09-26 | Fotonation Cayman Limited | Systems and methods for high dynamic range imaging using array cameras |
US9794476B2 (en) | 2011-09-19 | 2017-10-17 | Fotonation Cayman Limited | Systems and methods for controlling aliasing in images captured by an array camera for use in super resolution processing using pixel apertures |
US9804392B2 (en) | 2014-11-20 | 2017-10-31 | Atheer, Inc. | Method and apparatus for delivering and controlling multi-feed data |
US9813616B2 (en) | 2012-08-23 | 2017-11-07 | Fotonation Cayman Limited | Feature based high resolution motion estimation from low resolution images captured using an array source |
EP3247108A1 (en) * | 2016-05-18 | 2017-11-22 | Siemens Healthcare GmbH | Multi-resolution lightfield rendering using image pyramids |
US20180003923A1 (en) * | 2015-03-10 | 2018-01-04 | Canon Kabushiki Kaisha | Image processing method, image processing device, and image pickup apparatus |
US9888194B2 (en) | 2013-03-13 | 2018-02-06 | Fotonation Cayman Limited | Array camera architecture implementing quantum film image sensors |
US9898856B2 (en) | 2013-09-27 | 2018-02-20 | Fotonation Cayman Limited | Systems and methods for depth-assisted perspective distortion correction |
US9942474B2 (en) | 2015-04-17 | 2018-04-10 | Fotonation Cayman Limited | Systems and methods for performing high speed video capture and depth estimation using array cameras |
US10013564B2 (en) | 2013-10-10 | 2018-07-03 | Elwha Llc | Methods, systems, and devices for handling image capture devices and captured images |
US10089740B2 (en) | 2014-03-07 | 2018-10-02 | Fotonation Limited | System and methods for depth regularization and semiautomatic interactive matting using RGB-D images |
US10092183B2 (en) | 2014-08-31 | 2018-10-09 | Dr. John Berestka | Systems and methods for analyzing the eye |
CN108632529A (en) * | 2017-03-24 | 2018-10-09 | 三星电子株式会社 | The method that the electronic equipment of pattern indicator is provided and operates electronic equipment for focus |
US10102543B2 (en) | 2013-10-10 | 2018-10-16 | Elwha Llc | Methods, systems, and devices for handling inserted data into captured images |
US10119808B2 (en) | 2013-11-18 | 2018-11-06 | Fotonation Limited | Systems and methods for estimating depth from projected texture using camera arrays |
US10122993B2 (en) | 2013-03-15 | 2018-11-06 | Fotonation Limited | Autofocus system for a conventional camera that uses depth information from an array camera |
US10129524B2 (en) | 2012-06-26 | 2018-11-13 | Google Llc | Depth-assigned content for depth-enhanced virtual reality images |
US10185841B2 (en) | 2013-10-10 | 2019-01-22 | Elwha Llc | Devices, methods, and systems for managing representations of entities through use of privacy beacons |
US10205896B2 (en) | 2015-07-24 | 2019-02-12 | Google Llc | Automatic lens flare detection and correction for light-field images |
US20190058868A1 (en) * | 2012-11-08 | 2019-02-21 | Leap Motion, Inc. | Three-Dimensional Image Sensors |
US10218968B2 (en) * | 2016-03-05 | 2019-02-26 | Maximilian Ralph Peter von und zu Liechtenstein | Gaze-contingent display technique |
US10250871B2 (en) | 2014-09-29 | 2019-04-02 | Fotonation Limited | Systems and methods for dynamic calibration of array cameras |
US10275892B2 (en) | 2016-06-09 | 2019-04-30 | Google Llc | Multi-view scene segmentation and propagation |
US10275898B1 (en) | 2015-04-15 | 2019-04-30 | Google Llc | Wedge-based light-field video capture |
US10275425B2 (en) * | 2017-02-14 | 2019-04-30 | Henry Edward Kernan | Method for compressing, slicing, and transmitting image files for display and interpretation |
US10298834B2 (en) | 2006-12-01 | 2019-05-21 | Google Llc | Video refocusing |
US10334151B2 (en) | 2013-04-22 | 2019-06-25 | Google Llc | Phase detection autofocus using subaperture images |
US10341632B2 (en) | 2015-04-15 | 2019-07-02 | Google Llc. | Spatial random access enabled video system with a three-dimensional viewing volume |
US10346624B2 (en) | 2013-10-10 | 2019-07-09 | Elwha Llc | Methods, systems, and devices for obscuring entities depicted in captured images |
US10354399B2 (en) | 2017-05-25 | 2019-07-16 | Google Llc | Multi-view back-projection to a light-field |
US10390005B2 (en) | 2012-09-28 | 2019-08-20 | Fotonation Limited | Generating images from light fields utilizing virtual viewpoints |
US10412373B2 (en) | 2015-04-15 | 2019-09-10 | Google Llc | Image capture for virtual reality displays |
US10419737B2 (en) | 2015-04-15 | 2019-09-17 | Google Llc | Data structures and delivery methods for expediting virtual reality playback |
US10440407B2 (en) | 2017-05-09 | 2019-10-08 | Google Llc | Adaptive control for immersive experience delivery |
US10444931B2 (en) | 2017-05-09 | 2019-10-15 | Google Llc | Vantage generation and interactive playback |
US10469873B2 (en) | 2015-04-15 | 2019-11-05 | Google Llc | Encoding and decoding virtual reality video |
US10474227B2 (en) | 2017-05-09 | 2019-11-12 | Google Llc | Generation of virtual reality with 6 degrees of freedom from limited viewer data |
US10482618B2 (en) | 2017-08-21 | 2019-11-19 | Fotonation Limited | Systems and methods for hybrid depth regularization |
US10536685B2 (en) | 2015-02-23 | 2020-01-14 | Interdigital Ce Patent Holdings | Method and apparatus for generating lens-related metadata |
US10540818B2 (en) | 2015-04-15 | 2020-01-21 | Google Llc | Stereo image generation and interactive playback |
US10546424B2 (en) | 2015-04-15 | 2020-01-28 | Google Llc | Layered content delivery for virtual and augmented reality experiences |
US10545215B2 (en) | 2017-09-13 | 2020-01-28 | Google Llc | 4D camera tracking and optical stabilization |
US10552947B2 (en) | 2012-06-26 | 2020-02-04 | Google Llc | Depth-based image blurring |
US10567464B2 (en) | 2015-04-15 | 2020-02-18 | Google Llc | Video compression with adaptive view-dependent lighting removal |
US10565734B2 (en) | 2015-04-15 | 2020-02-18 | Google Llc | Video capture, processing, calibration, computational fiber artifact removal, and light-field pipeline |
US10594945B2 (en) | 2017-04-03 | 2020-03-17 | Google Llc | Generating dolly zoom effect using light field image data |
CN111223155A (en) * | 2019-10-22 | 2020-06-02 | 浙江大搜车软件技术有限公司 | Image data processing method, image data processing device, computer equipment and storage medium |
US10679361B2 (en) | 2016-12-05 | 2020-06-09 | Google Llc | Multi-view rotoscope contour propagation |
US10783616B2 (en) | 2015-09-28 | 2020-09-22 | Huawei Technologies Co., Ltd. | Method and apparatus for sharing and downloading light field image |
RU2734018C2 (en) * | 2015-09-17 | 2020-10-12 | ИНТЕРДИДЖИТАЛ ВиСи ХОЛДИНГЗ, ИНК. | Method and device for generating data representing a light field |
US10834290B2 (en) | 2013-10-10 | 2020-11-10 | Elwha Llc | Methods, systems, and devices for delivering image data from captured images to devices |
CN112347832A (en) * | 2020-06-12 | 2021-02-09 | 深圳Tcl新技术有限公司 | Unlocking method, device and equipment based on face recognition and computer storage medium |
US10931610B2 (en) * | 2017-01-16 | 2021-02-23 | Alibaba Group Holding Limited | Method, device, user terminal and electronic device for sharing online image |
US10965862B2 (en) | 2018-01-18 | 2021-03-30 | Google Llc | Multi-camera navigation interface |
US11006102B2 (en) * | 2013-01-24 | 2021-05-11 | Yuchen Zhou | Method of utilizing defocus in virtual reality and augmented reality |
US11184447B2 (en) * | 2019-05-14 | 2021-11-23 | Swiftly Systems, Inc. | Systems and methods for efficient transmission of catalog data |
US11195061B2 (en) * | 2017-09-12 | 2021-12-07 | Panasonic Intellectual Property Management Co., Ltd. | Image generation apparatus and method for generating image |
CN114128303A (en) * | 2019-06-28 | 2022-03-01 | Pcms控股公司 | System and method for mixed format spatial data distribution and presentation |
US11270110B2 (en) | 2019-09-17 | 2022-03-08 | Boston Polarimetrics, Inc. | Systems and methods for surface modeling using polarization cues |
US11290658B1 (en) | 2021-04-15 | 2022-03-29 | Boston Polarimetrics, Inc. | Systems and methods for camera exposure control |
US11302012B2 (en) | 2019-11-30 | 2022-04-12 | Boston Polarimetrics, Inc. | Systems and methods for transparent object segmentation using polarization cues |
US11328446B2 (en) | 2015-04-15 | 2022-05-10 | Google Llc | Combining light-field data with active depth data for depth map generation |
US11525906B2 (en) | 2019-10-07 | 2022-12-13 | Intrinsic Innovation Llc | Systems and methods for augmentation of sensor systems and imaging systems with polarization |
US11580667B2 (en) | 2020-01-29 | 2023-02-14 | Intrinsic Innovation Llc | Systems and methods for characterizing object pose detection and measurement systems |
US11689813B2 (en) | 2021-07-01 | 2023-06-27 | Intrinsic Innovation Llc | Systems and methods for high dynamic range imaging using crossed polarizers |
US11792538B2 (en) | 2008-05-20 | 2023-10-17 | Adeia Imaging Llc | Capturing and processing of images including occlusions focused on an image sensor by a lens stack array |
WO2023200535A1 (en) * | 2022-04-14 | 2023-10-19 | Tencent America LLC | Smart client for streaming of scene-based immersive media |
US11797863B2 (en) | 2020-01-30 | 2023-10-24 | Intrinsic Innovation Llc | Systems and methods for synthesizing data for training statistical models on different imaging modalities including polarized images |
US11900189B1 (en) * | 2023-02-21 | 2024-02-13 | Ricoh Company, Ltd. | Automatic tuning compensation system that determines optimal compensation target values for each of plurality of tint levels |
US11953700B2 (en) | 2020-05-27 | 2024-04-09 | Intrinsic Innovation Llc | Multi-aperture polarization optical systems using beam splitters |
US11954886B2 (en) | 2021-04-15 | 2024-04-09 | Intrinsic Innovation Llc | Systems and methods for six-degree of freedom pose estimation of deformable objects |
US11985293B2 (en) | 2023-01-30 | 2024-05-14 | Adeia Imaging Llc | System and methods for calibration of an array camera |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060056604A1 (en) * | 2004-09-15 | 2006-03-16 | Research In Motion Limited | Method for scaling images for usage on a mobile communication device |
US20060072175A1 (en) * | 2004-10-06 | 2006-04-06 | Takahiro Oshino | 3D image printing system |
US20070019883A1 (en) * | 2005-07-19 | 2007-01-25 | Wong Earl Q | Method for creating a depth map for auto focus using an all-in-focus picture and two-dimensional scale space matching |
US20070033588A1 (en) * | 2005-08-02 | 2007-02-08 | Landsman Richard A | Generic download and upload functionality in a client/server web application architecture |
US20110261164A1 (en) * | 2008-12-05 | 2011-10-27 | Unisensor A/S | Optical sectioning of a sample and detection of particles in a sample |
US20130262511A1 (en) * | 2012-04-02 | 2013-10-03 | Google Inc. | Determining 3D Model Information From Stored Images |
-
2012
- 2012-06-14 US US13/523,776 patent/US20120249550A1/en not_active Abandoned
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060056604A1 (en) * | 2004-09-15 | 2006-03-16 | Research In Motion Limited | Method for scaling images for usage on a mobile communication device |
US20060072175A1 (en) * | 2004-10-06 | 2006-04-06 | Takahiro Oshino | 3D image printing system |
US20070019883A1 (en) * | 2005-07-19 | 2007-01-25 | Wong Earl Q | Method for creating a depth map for auto focus using an all-in-focus picture and two-dimensional scale space matching |
US20070033588A1 (en) * | 2005-08-02 | 2007-02-08 | Landsman Richard A | Generic download and upload functionality in a client/server web application architecture |
US20110261164A1 (en) * | 2008-12-05 | 2011-10-27 | Unisensor A/S | Optical sectioning of a sample and detection of particles in a sample |
US20130262511A1 (en) * | 2012-04-02 | 2013-10-03 | Google Inc. | Determining 3D Model Information From Stored Images |
Cited By (321)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10298834B2 (en) | 2006-12-01 | 2019-05-21 | Google Llc | Video refocusing |
US9060142B2 (en) | 2008-05-20 | 2015-06-16 | Pelican Imaging Corporation | Capturing and processing of images captured by camera arrays including heterogeneous optics |
US9749547B2 (en) | 2008-05-20 | 2017-08-29 | Fotonation Cayman Limited | Capturing and processing of images using camera array incorperating Bayer cameras having different fields of view |
US9055213B2 (en) | 2008-05-20 | 2015-06-09 | Pelican Imaging Corporation | Systems and methods for measuring depth using images captured by monolithic camera arrays including at least one bayer camera |
US9049411B2 (en) | 2008-05-20 | 2015-06-02 | Pelican Imaging Corporation | Camera arrays incorporating 3×3 imager configurations |
US8866920B2 (en) | 2008-05-20 | 2014-10-21 | Pelican Imaging Corporation | Capturing and processing of images using monolithic camera array with heterogeneous imagers |
US9188765B2 (en) | 2008-05-20 | 2015-11-17 | Pelican Imaging Corporation | Capturing and processing of images including occlusions focused on an image sensor by a lens stack array |
US9049381B2 (en) | 2008-05-20 | 2015-06-02 | Pelican Imaging Corporation | Systems and methods for normalizing image data captured by camera arrays |
US9041823B2 (en) | 2008-05-20 | 2015-05-26 | Pelican Imaging Corporation | Systems and methods for performing post capture refocus using images captured by camera arrays |
US9049367B2 (en) | 2008-05-20 | 2015-06-02 | Pelican Imaging Corporation | Systems and methods for synthesizing higher resolution images using images captured by camera arrays |
US8885059B1 (en) | 2008-05-20 | 2014-11-11 | Pelican Imaging Corporation | Systems and methods for measuring depth using images captured by camera arrays |
US10027901B2 (en) | 2008-05-20 | 2018-07-17 | Fotonation Cayman Limited | Systems and methods for generating depth maps using a camera arrays incorporating monochrome and color cameras |
US9576369B2 (en) | 2008-05-20 | 2017-02-21 | Fotonation Cayman Limited | Systems and methods for generating depth maps using images captured by camera arrays incorporating cameras having different fields of view |
US9049391B2 (en) | 2008-05-20 | 2015-06-02 | Pelican Imaging Corporation | Capturing and processing of near-IR images including occlusions using camera arrays incorporating near-IR light sources |
US10142560B2 (en) | 2008-05-20 | 2018-11-27 | Fotonation Limited | Capturing and processing of images including occlusions focused on an image sensor by a lens stack array |
US9060124B2 (en) | 2008-05-20 | 2015-06-16 | Pelican Imaging Corporation | Capturing and processing of images using non-monolithic camera arrays |
US9235898B2 (en) | 2008-05-20 | 2016-01-12 | Pelican Imaging Corporation | Systems and methods for generating depth maps using light focused on an image sensor by a lens element array |
US9049390B2 (en) | 2008-05-20 | 2015-06-02 | Pelican Imaging Corporation | Capturing and processing of images captured by arrays including polychromatic cameras |
US9055233B2 (en) | 2008-05-20 | 2015-06-09 | Pelican Imaging Corporation | Systems and methods for synthesizing higher resolution images using a set of images containing a baseline image |
US9712759B2 (en) | 2008-05-20 | 2017-07-18 | Fotonation Cayman Limited | Systems and methods for generating depth maps using a camera arrays incorporating monochrome and color cameras |
US8896719B1 (en) | 2008-05-20 | 2014-11-25 | Pelican Imaging Corporation | Systems and methods for parallax measurement using camera arrays incorporating 3 x 3 camera configurations |
US9041829B2 (en) | 2008-05-20 | 2015-05-26 | Pelican Imaging Corporation | Capturing and processing of high dynamic range images using camera arrays |
US8902321B2 (en) | 2008-05-20 | 2014-12-02 | Pelican Imaging Corporation | Capturing and processing of images using monolithic camera array with heterogeneous imagers |
US11792538B2 (en) | 2008-05-20 | 2023-10-17 | Adeia Imaging Llc | Capturing and processing of images including occlusions focused on an image sensor by a lens stack array |
US11412158B2 (en) | 2008-05-20 | 2022-08-09 | Fotonation Limited | Capturing and processing of images including occlusions focused on an image sensor by a lens stack array |
US9060121B2 (en) | 2008-05-20 | 2015-06-16 | Pelican Imaging Corporation | Capturing and processing of images captured by camera arrays including cameras dedicated to sampling luma and cameras dedicated to sampling chroma |
US9485496B2 (en) | 2008-05-20 | 2016-11-01 | Pelican Imaging Corporation | Systems and methods for measuring depth using images captured by a camera array including cameras surrounding a central camera |
US9191580B2 (en) | 2008-05-20 | 2015-11-17 | Pelican Imaging Corporation | Capturing and processing of images including occlusions captured by camera arrays |
US9060120B2 (en) | 2008-05-20 | 2015-06-16 | Pelican Imaging Corporation | Systems and methods for generating depth maps using images captured by camera arrays |
US9077893B2 (en) | 2008-05-20 | 2015-07-07 | Pelican Imaging Corporation | Capturing and processing of images captured by non-grid camera arrays |
US9094661B2 (en) | 2008-05-20 | 2015-07-28 | Pelican Imaging Corporation | Systems and methods for generating depth maps using a set of images containing a baseline image |
US9124815B2 (en) | 2008-05-20 | 2015-09-01 | Pelican Imaging Corporation | Capturing and processing of images including occlusions captured by arrays of luma and chroma cameras |
US8614764B2 (en) | 2008-11-25 | 2013-12-24 | Lytro, Inc. | Acquiring, editing, generating and outputting video data |
US20110234841A1 (en) * | 2009-04-18 | 2011-09-29 | Lytro, Inc. | Storage and Transmission of Pictures Including Multiple Frames |
US8908058B2 (en) * | 2009-04-18 | 2014-12-09 | Lytro, Inc. | Storage and transmission of pictures including multiple frames |
US8861089B2 (en) | 2009-11-20 | 2014-10-14 | Pelican Imaging Corporation | Capturing and processing of images using monolithic camera array with heterogeneous imagers |
US10306120B2 (en) | 2009-11-20 | 2019-05-28 | Fotonation Limited | Capturing and processing of images captured by camera arrays incorporating cameras with telephoto and conventional lenses to generate depth maps |
US9264610B2 (en) | 2009-11-20 | 2016-02-16 | Pelican Imaging Corporation | Capturing and processing of images including occlusions captured by heterogeneous camera arrays |
US20110181593A1 (en) * | 2010-01-28 | 2011-07-28 | Ryusuke Hirai | Image processing apparatus, 3d display apparatus, and image processing method |
US9936148B2 (en) | 2010-05-12 | 2018-04-03 | Fotonation Cayman Limited | Imager array interfaces |
US10455168B2 (en) | 2010-05-12 | 2019-10-22 | Fotonation Limited | Imager array interfaces |
US8928793B2 (en) | 2010-05-12 | 2015-01-06 | Pelican Imaging Corporation | Imager array interfaces |
US20120120099A1 (en) * | 2010-11-11 | 2012-05-17 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method, and storage medium storing a program thereof |
US11875475B2 (en) | 2010-12-14 | 2024-01-16 | Adeia Imaging Llc | Systems and methods for synthesizing high resolution images using images captured by an array of independently controllable imagers |
US9041824B2 (en) | 2010-12-14 | 2015-05-26 | Pelican Imaging Corporation | Systems and methods for dynamic refocusing of high resolution images generated using images captured by a plurality of imagers |
US9361662B2 (en) | 2010-12-14 | 2016-06-07 | Pelican Imaging Corporation | Systems and methods for synthesizing high resolution images using images captured by an array of independently controllable imagers |
US10366472B2 (en) | 2010-12-14 | 2019-07-30 | Fotonation Limited | Systems and methods for synthesizing high resolution images using images captured by an array of independently controllable imagers |
US9047684B2 (en) | 2010-12-14 | 2015-06-02 | Pelican Imaging Corporation | Systems and methods for synthesizing high resolution images using a set of geometrically registered images |
US11423513B2 (en) | 2010-12-14 | 2022-08-23 | Fotonation Limited | Systems and methods for synthesizing high resolution images using images captured by an array of independently controllable imagers |
US8878950B2 (en) | 2010-12-14 | 2014-11-04 | Pelican Imaging Corporation | Systems and methods for synthesizing high resolution images using super-resolution processes |
US20140176592A1 (en) * | 2011-02-15 | 2014-06-26 | Lytro, Inc. | Configuring two-dimensional image processing based on light-field parameters |
US9197821B2 (en) | 2011-05-11 | 2015-11-24 | Pelican Imaging Corporation | Systems and methods for transmitting and receiving array camera image data |
US10742861B2 (en) | 2011-05-11 | 2020-08-11 | Fotonation Limited | Systems and methods for transmitting and receiving array camera image data |
US10218889B2 (en) | 2011-05-11 | 2019-02-26 | Fotonation Limited | Systems and methods for transmitting and receiving array camera image data |
US9866739B2 (en) | 2011-05-11 | 2018-01-09 | Fotonation Cayman Limited | Systems and methods for transmitting and receiving array camera image data |
US9578237B2 (en) | 2011-06-28 | 2017-02-21 | Fotonation Cayman Limited | Array cameras incorporating optics with modulation transfer functions greater than sensor Nyquist frequency for capture of images used in super-resolution processing |
US9516222B2 (en) | 2011-06-28 | 2016-12-06 | Kip Peli P1 Lp | Array cameras incorporating monolithic array camera modules with high MTF lens stacks for capture of images used in super-resolution processing |
US9128228B2 (en) | 2011-06-28 | 2015-09-08 | Pelican Imaging Corporation | Optical arrangements for use with an array camera |
US9794476B2 (en) | 2011-09-19 | 2017-10-17 | Fotonation Cayman Limited | Systems and methods for controlling aliasing in images captured by an array camera for use in super resolution processing using pixel apertures |
US10375302B2 (en) | 2011-09-19 | 2019-08-06 | Fotonation Limited | Systems and methods for controlling aliasing in images captured by an array camera for use in super resolution processing using pixel apertures |
US9031343B2 (en) | 2011-09-28 | 2015-05-12 | Pelican Imaging Corporation | Systems and methods for encoding light field image files having a depth map |
US20140376826A1 (en) * | 2011-09-28 | 2014-12-25 | Pelican Imaging Corporation | Systems and methods for decoding light field image files having depth and confidence maps |
US9036928B2 (en) | 2011-09-28 | 2015-05-19 | Pelican Imaging Corporation | Systems and methods for encoding structured light field image files |
US9036931B2 (en) | 2011-09-28 | 2015-05-19 | Pelican Imaging Corporation | Systems and methods for decoding structured light field image files |
US9031342B2 (en) | 2011-09-28 | 2015-05-12 | Pelican Imaging Corporation | Systems and methods for encoding refocusable light field image files |
US20150199841A1 (en) * | 2011-09-28 | 2015-07-16 | Pelican Imaging Corporation | Systems and methods for decoding light field image files having low resolution images |
US9031335B2 (en) * | 2011-09-28 | 2015-05-12 | Pelican Imaging Corporation | Systems and methods for encoding light field image files having depth and confidence maps |
US8542933B2 (en) * | 2011-09-28 | 2013-09-24 | Pelican Imaging Corporation | Systems and methods for decoding light field image files |
US10984276B2 (en) | 2011-09-28 | 2021-04-20 | Fotonation Limited | Systems and methods for encoding image files containing depth maps stored as metadata |
US9811753B2 (en) | 2011-09-28 | 2017-11-07 | Fotonation Cayman Limited | Systems and methods for encoding light field image files |
US20130315494A1 (en) * | 2011-09-28 | 2013-11-28 | Pelican Imaging Corporation | Systems and methods for decoding light field image files |
US10430682B2 (en) | 2011-09-28 | 2019-10-01 | Fotonation Limited | Systems and methods for decoding image files containing depth maps stored as metadata |
US10019816B2 (en) | 2011-09-28 | 2018-07-10 | Fotonation Cayman Limited | Systems and methods for decoding image files containing depth maps stored as metadata |
US9864921B2 (en) | 2011-09-28 | 2018-01-09 | Fotonation Cayman Limited | Systems and methods for encoding image files containing depth maps stored as metadata |
US20150015669A1 (en) * | 2011-09-28 | 2015-01-15 | Pelican Imaging Corporation | Systems and methods for decoding light field image files using a depth map |
US20180197035A1 (en) | 2011-09-28 | 2018-07-12 | Fotonation Cayman Limited | Systems and Methods for Encoding Image Files Containing Depth Maps Stored as Metadata |
US9025895B2 (en) | 2011-09-28 | 2015-05-05 | Pelican Imaging Corporation | Systems and methods for decoding refocusable light field image files |
US11729365B2 (en) | 2011-09-28 | 2023-08-15 | Adela Imaging LLC | Systems and methods for encoding image files containing depth maps stored as metadata |
US9129183B2 (en) | 2011-09-28 | 2015-09-08 | Pelican Imaging Corporation | Systems and methods for encoding light field image files |
US9042667B2 (en) * | 2011-09-28 | 2015-05-26 | Pelican Imaging Corporation | Systems and methods for decoding light field image files using a depth map |
US9536166B2 (en) * | 2011-09-28 | 2017-01-03 | Kip Peli P1 Lp | Systems and methods for decoding image files containing depth maps stored as metadata |
US10275676B2 (en) | 2011-09-28 | 2019-04-30 | Fotonation Limited | Systems and methods for encoding image files containing depth maps stored as metadata |
US8831367B2 (en) * | 2011-09-28 | 2014-09-09 | Pelican Imaging Corporation | Systems and methods for decoding light field image files |
US9025894B2 (en) * | 2011-09-28 | 2015-05-05 | Pelican Imaging Corporation | Systems and methods for decoding light field image files having depth and confidence maps |
US20140376825A1 (en) * | 2011-09-28 | 2014-12-25 | Pelican Imaging Corporation | Systems and methods for encoding light field image files having depth and confidence maps |
US9191595B2 (en) * | 2011-11-30 | 2015-11-17 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus including image processing apparatus |
US9560297B2 (en) | 2011-11-30 | 2017-01-31 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus including image processing apparatus for correcting defect pixels |
US20140192237A1 (en) * | 2011-11-30 | 2014-07-10 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus including image processing apparatus |
US10311649B2 (en) | 2012-02-21 | 2019-06-04 | Fotonation Limited | Systems and method for performing depth based image editing |
US9412206B2 (en) | 2012-02-21 | 2016-08-09 | Pelican Imaging Corporation | Systems and methods for the manipulation of captured light field image data |
US9754422B2 (en) | 2012-02-21 | 2017-09-05 | Fotonation Cayman Limited | Systems and method for performing depth based image editing |
US8831377B2 (en) | 2012-02-28 | 2014-09-09 | Lytro, Inc. | Compensating for variation in microlens position during light-field image processing |
US8948545B2 (en) | 2012-02-28 | 2015-02-03 | Lytro, Inc. | Compensating for sensor saturation and microlens modulation during light-field image processing |
US9420276B2 (en) | 2012-02-28 | 2016-08-16 | Lytro, Inc. | Calibration of light-field camera geometry via robust fitting |
US8995785B2 (en) | 2012-02-28 | 2015-03-31 | Lytro, Inc. | Light-field processing and analysis, camera control, and user interfaces and interaction on light-field capture devices |
US9172853B2 (en) | 2012-02-28 | 2015-10-27 | Lytro, Inc. | Microlens array architecture for avoiding ghosting in projected images |
US9386288B2 (en) | 2012-02-28 | 2016-07-05 | Lytro, Inc. | Compensating for sensor saturation and microlens modulation during light-field image processing |
US20150109513A1 (en) * | 2012-04-26 | 2015-04-23 | The Trustees of Collumbia University in the City York | Systems, methods, and media for providing interactive refocusing in images |
US10582120B2 (en) | 2012-04-26 | 2020-03-03 | The Trustees Of Columbia University In The City Of New York | Systems, methods, and media for providing interactive refocusing in images |
US9210392B2 (en) | 2012-05-01 | 2015-12-08 | Pelican Imaging Coporation | Camera modules patterned with pi filter groups |
US9706132B2 (en) | 2012-05-01 | 2017-07-11 | Fotonation Cayman Limited | Camera modules patterned with pi filter groups |
US20130311940A1 (en) * | 2012-05-15 | 2013-11-21 | Salvadore V. Ragusa | System of Organizing Digital Images |
US9779515B2 (en) | 2012-06-01 | 2017-10-03 | Ostendo Technologies, Inc. | Spatio-temporal light field cameras |
US9774800B2 (en) | 2012-06-01 | 2017-09-26 | Ostendo Technologies, Inc. | Spatio-temporal light field cameras |
US9930272B2 (en) * | 2012-06-01 | 2018-03-27 | Ostendo Technologies, Inc. | Spatio-temporal light field cameras |
US9712764B2 (en) | 2012-06-01 | 2017-07-18 | Ostendo Technologies, Inc. | Spatio-temporal light field cameras |
US20160028935A1 (en) * | 2012-06-01 | 2016-01-28 | Ostendo Technologies, Inc. | Spatio-Temporal Light Field Cameras |
US9681069B2 (en) | 2012-06-01 | 2017-06-13 | Ostendo Technologies, Inc. | Spatio-temporal light field cameras |
US20150222810A1 (en) * | 2012-06-08 | 2015-08-06 | Canon Kabushiki Kaisha | Image processing apparatus and image processing method |
US10129524B2 (en) | 2012-06-26 | 2018-11-13 | Google Llc | Depth-assigned content for depth-enhanced virtual reality images |
US10552947B2 (en) | 2012-06-26 | 2020-02-04 | Google Llc | Depth-based image blurring |
US9100635B2 (en) * | 2012-06-28 | 2015-08-04 | Pelican Imaging Corporation | Systems and methods for detecting defective camera arrays and optic arrays |
US10334241B2 (en) | 2012-06-28 | 2019-06-25 | Fotonation Limited | Systems and methods for detecting defective camera arrays and optic arrays |
US20140002675A1 (en) * | 2012-06-28 | 2014-01-02 | Pelican Imaging Corporation | Systems and methods for detecting defective camera arrays and optic arrays |
US9807382B2 (en) | 2012-06-28 | 2017-10-31 | Fotonation Cayman Limited | Systems and methods for detecting defective camera arrays and optic arrays |
US11022725B2 (en) | 2012-06-30 | 2021-06-01 | Fotonation Limited | Systems and methods for manufacturing camera modules using active alignment of lens stack arrays and sensors |
US9766380B2 (en) | 2012-06-30 | 2017-09-19 | Fotonation Cayman Limited | Systems and methods for manufacturing camera modules using active alignment of lens stack arrays and sensors |
US10261219B2 (en) | 2012-06-30 | 2019-04-16 | Fotonation Limited | Systems and methods for manufacturing camera modules using active alignment of lens stack arrays and sensors |
US9858673B2 (en) | 2012-08-21 | 2018-01-02 | Fotonation Cayman Limited | Systems and methods for estimating depth and visibility from a reference viewpoint for pixels in a set of images captured from different viewpoints |
US9123117B2 (en) | 2012-08-21 | 2015-09-01 | Pelican Imaging Corporation | Systems and methods for generating depth maps and corresponding confidence maps indicating depth estimation reliability |
US9129377B2 (en) | 2012-08-21 | 2015-09-08 | Pelican Imaging Corporation | Systems and methods for measuring depth based upon occlusion patterns in images |
US9240049B2 (en) | 2012-08-21 | 2016-01-19 | Pelican Imaging Corporation | Systems and methods for measuring depth using an array of independently controllable cameras |
US9123118B2 (en) | 2012-08-21 | 2015-09-01 | Pelican Imaging Corporation | System and methods for measuring depth using an array camera employing a bayer filter |
US9147254B2 (en) | 2012-08-21 | 2015-09-29 | Pelican Imaging Corporation | Systems and methods for measuring depth in the presence of occlusions using a subset of images |
US9235900B2 (en) | 2012-08-21 | 2016-01-12 | Pelican Imaging Corporation | Systems and methods for estimating depth and visibility from a reference viewpoint for pixels in a set of images captured from different viewpoints |
US10380752B2 (en) | 2012-08-21 | 2019-08-13 | Fotonation Limited | Systems and methods for estimating depth and visibility from a reference viewpoint for pixels in a set of images captured from different viewpoints |
US9813616B2 (en) | 2012-08-23 | 2017-11-07 | Fotonation Cayman Limited | Feature based high resolution motion estimation from low resolution images captured using an array source |
US10462362B2 (en) | 2012-08-23 | 2019-10-29 | Fotonation Limited | Feature based high resolution motion estimation from low resolution images captured using an array source |
US9214013B2 (en) | 2012-09-14 | 2015-12-15 | Pelican Imaging Corporation | Systems and methods for correcting user identified artifacts in light field images |
US10390005B2 (en) | 2012-09-28 | 2019-08-20 | Fotonation Limited | Generating images from light fields utilizing virtual viewpoints |
US20150244755A1 (en) * | 2012-10-10 | 2015-08-27 | Huawei Device Co., Ltd. | Method, apparatus, and home network system for presenting multiple images, and mobile terminal |
EP2775898B1 (en) | 2012-10-22 | 2017-04-05 | Realvision S.r.l. | Network of devices for performing optical/optometric/ophthalmological tests, and method for controlling said network of devices |
US20150093030A1 (en) * | 2012-10-31 | 2015-04-02 | Atheer, Inc. | Methods for background subtraction using focus differences |
US9967459B2 (en) * | 2012-10-31 | 2018-05-08 | Atheer, Inc. | Methods for background subtraction using focus differences |
US10070054B2 (en) * | 2012-10-31 | 2018-09-04 | Atheer, Inc. | Methods for background subtraction using focus differences |
US20140118570A1 (en) * | 2012-10-31 | 2014-05-01 | Atheer, Inc. | Method and apparatus for background subtraction using focus differences |
US20150093022A1 (en) * | 2012-10-31 | 2015-04-02 | Atheer, Inc. | Methods for background subtraction using focus differences |
US9924091B2 (en) | 2012-10-31 | 2018-03-20 | Atheer, Inc. | Apparatus for background subtraction using focus differences |
US9894269B2 (en) * | 2012-10-31 | 2018-02-13 | Atheer, Inc. | Method and apparatus for background subtraction using focus differences |
US10531069B2 (en) * | 2012-11-08 | 2020-01-07 | Ultrahaptics IP Two Limited | Three-dimensional image sensors |
US20190058868A1 (en) * | 2012-11-08 | 2019-02-21 | Leap Motion, Inc. | Three-Dimensional Image Sensors |
US9143711B2 (en) | 2012-11-13 | 2015-09-22 | Pelican Imaging Corporation | Systems and methods for array camera focal plane control |
US9749568B2 (en) | 2012-11-13 | 2017-08-29 | Fotonation Cayman Limited | Systems and methods for array camera focal plane control |
US9742981B2 (en) * | 2013-01-11 | 2017-08-22 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus for processing light field data |
RU2625531C2 (en) * | 2013-01-11 | 2017-07-14 | Кэнон Кабусики Кайся | Image processing device, method and program of image processing and image protection device |
US20150350531A1 (en) * | 2013-01-11 | 2015-12-03 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus |
WO2014109270A1 (en) * | 2013-01-11 | 2014-07-17 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method and program, and image pickup apparatus |
US11006102B2 (en) * | 2013-01-24 | 2021-05-11 | Yuchen Zhou | Method of utilizing defocus in virtual reality and augmented reality |
JP2014158070A (en) * | 2013-02-14 | 2014-08-28 | Canon Inc | Image processing apparatus, image pickup apparatus, image processing method, image processing program, and storage medium |
US10009538B2 (en) | 2013-02-21 | 2018-06-26 | Fotonation Cayman Limited | Systems and methods for generating compressed light field representation data using captured light fields, array geometry, and parallax information |
US9462164B2 (en) | 2013-02-21 | 2016-10-04 | Pelican Imaging Corporation | Systems and methods for generating compressed light field representation data using captured light fields, array geometry, and parallax information |
US9253380B2 (en) | 2013-02-24 | 2016-02-02 | Pelican Imaging Corporation | Thin form factor computational array cameras and modular array cameras |
US9743051B2 (en) | 2013-02-24 | 2017-08-22 | Fotonation Cayman Limited | Thin form factor computational array cameras and modular array cameras |
US9374512B2 (en) | 2013-02-24 | 2016-06-21 | Pelican Imaging Corporation | Thin form factor computational array cameras and modular array cameras |
US9774831B2 (en) | 2013-02-24 | 2017-09-26 | Fotonation Cayman Limited | Thin form factor computational array cameras and modular array cameras |
US9638883B1 (en) | 2013-03-04 | 2017-05-02 | Fotonation Cayman Limited | Passive alignment of array camera modules constructed from lens stack arrays and sensors based upon alignment information obtained during manufacture of array camera modules using an active alignment process |
US9917998B2 (en) | 2013-03-08 | 2018-03-13 | Fotonation Cayman Limited | Systems and methods for measuring scene information while capturing images using array cameras |
US9774789B2 (en) | 2013-03-08 | 2017-09-26 | Fotonation Cayman Limited | Systems and methods for high dynamic range imaging using array cameras |
US9986224B2 (en) | 2013-03-10 | 2018-05-29 | Fotonation Cayman Limited | System and methods for calibration of an array camera |
US11272161B2 (en) | 2013-03-10 | 2022-03-08 | Fotonation Limited | System and methods for calibration of an array camera |
US11570423B2 (en) | 2013-03-10 | 2023-01-31 | Adeia Imaging Llc | System and methods for calibration of an array camera |
US10225543B2 (en) | 2013-03-10 | 2019-03-05 | Fotonation Limited | System and methods for calibration of an array camera |
US9124864B2 (en) | 2013-03-10 | 2015-09-01 | Pelican Imaging Corporation | System and methods for calibration of an array camera |
US10958892B2 (en) | 2013-03-10 | 2021-03-23 | Fotonation Limited | System and methods for calibration of an array camera |
US9521416B1 (en) | 2013-03-11 | 2016-12-13 | Kip Peli P1 Lp | Systems and methods for image data compression |
US9800856B2 (en) | 2013-03-13 | 2017-10-24 | Fotonation Cayman Limited | Systems and methods for synthesizing images from image data captured by an array camera using restricted depth of field depth maps in which depth estimation precision varies |
US9519972B2 (en) | 2013-03-13 | 2016-12-13 | Kip Peli P1 Lp | Systems and methods for synthesizing images from image data captured by an array camera using restricted depth of field depth maps in which depth estimation precision varies |
US10127682B2 (en) | 2013-03-13 | 2018-11-13 | Fotonation Limited | System and methods for calibration of an array camera |
WO2014165244A1 (en) * | 2013-03-13 | 2014-10-09 | Pelican Imaging Corporation | Systems and methods for synthesizing images from image data captured by an array camera using restricted depth of field depth maps in which depth estimation precision varies |
US9106784B2 (en) | 2013-03-13 | 2015-08-11 | Pelican Imaging Corporation | Systems and methods for controlling aliasing in images captured by an array camera for use in super-resolution processing |
US9888194B2 (en) | 2013-03-13 | 2018-02-06 | Fotonation Cayman Limited | Array camera architecture implementing quantum film image sensors |
US9733486B2 (en) | 2013-03-13 | 2017-08-15 | Fotonation Cayman Limited | Systems and methods for controlling aliasing in images captured by an array camera for use in super-resolution processing |
US9741118B2 (en) | 2013-03-13 | 2017-08-22 | Fotonation Cayman Limited | System and methods for calibration of an array camera |
US9787911B2 (en) | 2013-03-14 | 2017-10-10 | Fotonation Cayman Limited | Systems and methods for photometric normalization in array cameras |
US10547772B2 (en) | 2013-03-14 | 2020-01-28 | Fotonation Limited | Systems and methods for reducing motion blur in images or video in ultra low light with array cameras |
US9100586B2 (en) | 2013-03-14 | 2015-08-04 | Pelican Imaging Corporation | Systems and methods for photometric normalization in array cameras |
US10091405B2 (en) | 2013-03-14 | 2018-10-02 | Fotonation Cayman Limited | Systems and methods for reducing motion blur in images or video in ultra low light with array cameras |
US10412314B2 (en) | 2013-03-14 | 2019-09-10 | Fotonation Limited | Systems and methods for photometric normalization in array cameras |
US9578259B2 (en) | 2013-03-14 | 2017-02-21 | Fotonation Cayman Limited | Systems and methods for reducing motion blur in images or video in ultra low light with array cameras |
US10542208B2 (en) | 2013-03-15 | 2020-01-21 | Fotonation Limited | Systems and methods for synthesizing high resolution images using image deconvolution based on motion and depth information |
WO2014210514A1 (en) * | 2013-03-15 | 2014-12-31 | Pinterest, Inc. | Image delivery architecture |
US10455218B2 (en) | 2013-03-15 | 2019-10-22 | Fotonation Limited | Systems and methods for estimating depth using stereo array cameras |
US9438888B2 (en) | 2013-03-15 | 2016-09-06 | Pelican Imaging Corporation | Systems and methods for stereo imaging with camera arrays |
US9497370B2 (en) | 2013-03-15 | 2016-11-15 | Pelican Imaging Corporation | Array camera architecture implementing quantum dot color filters |
US9602805B2 (en) | 2013-03-15 | 2017-03-21 | Fotonation Cayman Limited | Systems and methods for estimating depth using ad hoc stereo array cameras |
US9633442B2 (en) | 2013-03-15 | 2017-04-25 | Fotonation Cayman Limited | Array cameras including an array camera module augmented with a separate camera |
US9800859B2 (en) | 2013-03-15 | 2017-10-24 | Fotonation Cayman Limited | Systems and methods for estimating depth using stereo array cameras |
US10182216B2 (en) | 2013-03-15 | 2019-01-15 | Fotonation Limited | Extended color processing on pelican array cameras |
US9955070B2 (en) | 2013-03-15 | 2018-04-24 | Fotonation Cayman Limited | Systems and methods for synthesizing high resolution images using image deconvolution based on motion and depth information |
US9445003B1 (en) | 2013-03-15 | 2016-09-13 | Pelican Imaging Corporation | Systems and methods for synthesizing high resolution images using image deconvolution based on motion and depth information |
US10122993B2 (en) | 2013-03-15 | 2018-11-06 | Fotonation Limited | Autofocus system for a conventional camera that uses depth information from an array camera |
US10638099B2 (en) | 2013-03-15 | 2020-04-28 | Fotonation Limited | Extended color processing on pelican array cameras |
US10674138B2 (en) | 2013-03-15 | 2020-06-02 | Fotonation Limited | Autofocus system for a conventional camera that uses depth information from an array camera |
US9497429B2 (en) | 2013-03-15 | 2016-11-15 | Pelican Imaging Corporation | Extended color processing on pelican array cameras |
US10334151B2 (en) | 2013-04-22 | 2019-06-25 | Google Llc | Phase detection autofocus using subaperture images |
US20140347352A1 (en) * | 2013-05-23 | 2014-11-27 | Indiana University Research & Technology Corporation | Apparatuses, methods, and systems for 2-dimensional and 3-dimensional rendering and display of plenoptic images |
US9767580B2 (en) * | 2013-05-23 | 2017-09-19 | Indiana University Research And Technology Corporation | Apparatuses, methods, and systems for 2-dimensional and 3-dimensional rendering and display of plenoptic images |
US9792698B2 (en) | 2013-05-30 | 2017-10-17 | Nokia Technologies Oy | Image refocusing |
WO2014193377A1 (en) * | 2013-05-30 | 2014-12-04 | Nokia Corporation | Image refocusing |
US20150009364A1 (en) * | 2013-06-25 | 2015-01-08 | Glen Anderson | Management and access of media with media capture device operator perception data |
JP2015032948A (en) * | 2013-08-01 | 2015-02-16 | キヤノン株式会社 | Image processing apparatus, control method thereof and control program |
US9519985B2 (en) * | 2013-08-20 | 2016-12-13 | TreSensa Inc. | Generating mobile-friendly animations |
US20150054834A1 (en) * | 2013-08-20 | 2015-02-26 | TreSensa Inc. | Generating mobile-friendly animations |
JP2015046687A (en) * | 2013-08-27 | 2015-03-12 | キヤノン株式会社 | Image processing apparatus, image processing method, program, and imaging apparatus |
US9898856B2 (en) | 2013-09-27 | 2018-02-20 | Fotonation Cayman Limited | Systems and methods for depth-assisted perspective distortion correction |
US10540806B2 (en) | 2013-09-27 | 2020-01-21 | Fotonation Limited | Systems and methods for depth-assisted perspective distortion correction |
US10834290B2 (en) | 2013-10-10 | 2020-11-10 | Elwha Llc | Methods, systems, and devices for delivering image data from captured images to devices |
US10102543B2 (en) | 2013-10-10 | 2018-10-16 | Elwha Llc | Methods, systems, and devices for handling inserted data into captured images |
US10346624B2 (en) | 2013-10-10 | 2019-07-09 | Elwha Llc | Methods, systems, and devices for obscuring entities depicted in captured images |
US10289863B2 (en) | 2013-10-10 | 2019-05-14 | Elwha Llc | Devices, methods, and systems for managing representations of entities through use of privacy beacons |
US20150106628A1 (en) * | 2013-10-10 | 2015-04-16 | Elwha Llc | Devices, methods, and systems for analyzing captured image data and privacy data |
US10185841B2 (en) | 2013-10-10 | 2019-01-22 | Elwha Llc | Devices, methods, and systems for managing representations of entities through use of privacy beacons |
US10013564B2 (en) | 2013-10-10 | 2018-07-03 | Elwha Llc | Methods, systems, and devices for handling image capture devices and captured images |
US20150103192A1 (en) * | 2013-10-14 | 2015-04-16 | Qualcomm Incorporated | Refocusable images |
US9973677B2 (en) * | 2013-10-14 | 2018-05-15 | Qualcomm Incorporated | Refocusable images |
US9792711B2 (en) | 2013-10-22 | 2017-10-17 | Nokia Technologies Oy | Relevance based visual media item modification |
US9367939B2 (en) | 2013-10-22 | 2016-06-14 | Nokia Technologies Oy | Relevance based visual media item modification |
US10515472B2 (en) | 2013-10-22 | 2019-12-24 | Nokia Technologies Oy | Relevance based visual media item modification |
US9264592B2 (en) | 2013-11-07 | 2016-02-16 | Pelican Imaging Corporation | Array camera modules incorporating independently aligned lens stacks |
US9924092B2 (en) | 2013-11-07 | 2018-03-20 | Fotonation Cayman Limited | Array cameras incorporating independently aligned lens stacks |
US9426343B2 (en) | 2013-11-07 | 2016-08-23 | Pelican Imaging Corporation | Array cameras incorporating independently aligned lens stacks |
US9185276B2 (en) | 2013-11-07 | 2015-11-10 | Pelican Imaging Corporation | Methods of manufacturing array camera modules incorporating independently aligned lens stacks |
US10767981B2 (en) | 2013-11-18 | 2020-09-08 | Fotonation Limited | Systems and methods for estimating depth from projected texture using camera arrays |
US10119808B2 (en) | 2013-11-18 | 2018-11-06 | Fotonation Limited | Systems and methods for estimating depth from projected texture using camera arrays |
US11486698B2 (en) | 2013-11-18 | 2022-11-01 | Fotonation Limited | Systems and methods for estimating depth from projected texture using camera arrays |
US10708492B2 (en) | 2013-11-26 | 2020-07-07 | Fotonation Limited | Array camera configurations incorporating constituent array cameras and constituent cameras |
US9456134B2 (en) | 2013-11-26 | 2016-09-27 | Pelican Imaging Corporation | Array camera configurations incorporating constituent array cameras and constituent cameras |
US9426361B2 (en) | 2013-11-26 | 2016-08-23 | Pelican Imaging Corporation | Array camera configurations incorporating multiple constituent array cameras |
US9813617B2 (en) | 2013-11-26 | 2017-11-07 | Fotonation Cayman Limited | Array camera configurations incorporating constituent array cameras and constituent cameras |
US9392153B2 (en) | 2013-12-24 | 2016-07-12 | Lytro, Inc. | Plenoptic camera resolution |
US10574905B2 (en) | 2014-03-07 | 2020-02-25 | Fotonation Limited | System and methods for depth regularization and semiautomatic interactive matting using RGB-D images |
US10089740B2 (en) | 2014-03-07 | 2018-10-02 | Fotonation Limited | System and methods for depth regularization and semiautomatic interactive matting using RGB-D images |
US9247117B2 (en) | 2014-04-07 | 2016-01-26 | Pelican Imaging Corporation | Systems and methods for correcting for warpage of a sensor array in an array camera module by introducing warpage into a focal plane of a lens stack array |
US20170280136A1 (en) * | 2014-04-24 | 2017-09-28 | Lytro, Inc. | Predictive light-field compression |
US10531082B2 (en) * | 2014-04-24 | 2020-01-07 | Google Llc | Predictive light-field compression |
US9414087B2 (en) | 2014-04-24 | 2016-08-09 | Lytro, Inc. | Compression of light field images |
US9712820B2 (en) | 2014-04-24 | 2017-07-18 | Lytro, Inc. | Predictive light field compression |
US10038909B2 (en) | 2014-04-24 | 2018-07-31 | Google Llc | Compression of light field images |
US20150312477A1 (en) * | 2014-04-29 | 2015-10-29 | Nokia Corporation | Method and apparatus for extendable field of view rendering |
US9930253B2 (en) * | 2014-04-29 | 2018-03-27 | Nokia Technologies Oy | Method and apparatus for extendable field of view rendering |
US9936121B2 (en) * | 2014-06-04 | 2018-04-03 | Canon Kabushiki Kaisha | Image processing device, control method of an image processing device, and storage medium that stores a program to execute a control method of an image processing device |
US20150358529A1 (en) * | 2014-06-04 | 2015-12-10 | Canon Kabushiki Kaisha | Image processing device, its control method, and storage medium |
US9521319B2 (en) | 2014-06-18 | 2016-12-13 | Pelican Imaging Corporation | Array cameras and array camera modules including spectral filters disposed outside of a constituent image sensor |
US11911109B2 (en) | 2014-08-31 | 2024-02-27 | Dr. John Berestka | Methods for analyzing the eye |
US10092183B2 (en) | 2014-08-31 | 2018-10-09 | Dr. John Berestka | Systems and methods for analyzing the eye |
US11452447B2 (en) | 2014-08-31 | 2022-09-27 | John Berestka | Methods for analyzing the eye |
US10687703B2 (en) | 2014-08-31 | 2020-06-23 | John Berestka | Methods for analyzing the eye |
US11546576B2 (en) | 2014-09-29 | 2023-01-03 | Adeia Imaging Llc | Systems and methods for dynamic calibration of array cameras |
US10250871B2 (en) | 2014-09-29 | 2019-04-02 | Fotonation Limited | Systems and methods for dynamic calibration of array cameras |
US9804392B2 (en) | 2014-11-20 | 2017-10-31 | Atheer, Inc. | Method and apparatus for delivering and controlling multi-feed data |
US10003806B2 (en) * | 2015-02-16 | 2018-06-19 | Canon Kabushiki Kaisha | Optimized plenoptic image encoding |
US20160241855A1 (en) * | 2015-02-16 | 2016-08-18 | Canon Kabushiki Kaisha | Optimized plenoptic image encoding |
US10536685B2 (en) | 2015-02-23 | 2020-01-14 | Interdigital Ce Patent Holdings | Method and apparatus for generating lens-related metadata |
WO2016139134A1 (en) * | 2015-03-05 | 2016-09-09 | Thomson Licensing | Light field metadata |
CN107534718A (en) * | 2015-03-05 | 2018-01-02 | 汤姆逊许可公司 | The metadata of light field |
US10545311B2 (en) * | 2015-03-10 | 2020-01-28 | Canon Kabushiki Kaisha | Image processing method, image processing device, and image pickup apparatus |
US20180003923A1 (en) * | 2015-03-10 | 2018-01-04 | Canon Kabushiki Kaisha | Image processing method, image processing device, and image pickup apparatus |
US20160275987A1 (en) * | 2015-03-17 | 2016-09-22 | Thomson Licensing | Method and apparatus for displaying light field video data |
US10388323B2 (en) * | 2015-03-17 | 2019-08-20 | Interdigital Ce Patent Holdings | Method and apparatus for displaying light field video data |
US10419737B2 (en) | 2015-04-15 | 2019-09-17 | Google Llc | Data structures and delivery methods for expediting virtual reality playback |
US10546424B2 (en) | 2015-04-15 | 2020-01-28 | Google Llc | Layered content delivery for virtual and augmented reality experiences |
US10567464B2 (en) | 2015-04-15 | 2020-02-18 | Google Llc | Video compression with adaptive view-dependent lighting removal |
US10565734B2 (en) | 2015-04-15 | 2020-02-18 | Google Llc | Video capture, processing, calibration, computational fiber artifact removal, and light-field pipeline |
US10412373B2 (en) | 2015-04-15 | 2019-09-10 | Google Llc | Image capture for virtual reality displays |
US10275898B1 (en) | 2015-04-15 | 2019-04-30 | Google Llc | Wedge-based light-field video capture |
US10540818B2 (en) | 2015-04-15 | 2020-01-21 | Google Llc | Stereo image generation and interactive playback |
US11328446B2 (en) | 2015-04-15 | 2022-05-10 | Google Llc | Combining light-field data with active depth data for depth map generation |
US10469873B2 (en) | 2015-04-15 | 2019-11-05 | Google Llc | Encoding and decoding virtual reality video |
US10341632B2 (en) | 2015-04-15 | 2019-07-02 | Google Llc. | Spatial random access enabled video system with a three-dimensional viewing volume |
US9942474B2 (en) | 2015-04-17 | 2018-04-10 | Fotonation Cayman Limited | Systems and methods for performing high speed video capture and depth estimation using array cameras |
EP3099077A1 (en) * | 2015-05-29 | 2016-11-30 | Thomson Licensing | Method for displaying a content from 4d light field data |
EP3099078A1 (en) * | 2015-05-29 | 2016-11-30 | Thomson Licensing | Method for collecting information on users of 4d light field data, corresponding apparatuses and computer programs |
WO2016202926A1 (en) * | 2015-06-18 | 2016-12-22 | Dxo Labs | Method and device for producing a digital image |
US10600170B2 (en) * | 2015-06-18 | 2020-03-24 | Dxo Labs | Method and device for producing a digital image |
FR3037756A1 (en) * | 2015-06-18 | 2016-12-23 | Dxo Labs | METHOD AND DEVICE FOR PRODUCING A DIGITAL IMAGE |
US10205896B2 (en) | 2015-07-24 | 2019-02-12 | Google Llc | Automatic lens flare detection and correction for light-field images |
RU2734018C2 (en) * | 2015-09-17 | 2020-10-12 | ИНТЕРДИДЖИТАЛ ВиСи ХОЛДИНГЗ, ИНК. | Method and device for generating data representing a light field |
US10783616B2 (en) | 2015-09-28 | 2020-09-22 | Huawei Technologies Co., Ltd. | Method and apparatus for sharing and downloading light field image |
EP3203742A1 (en) * | 2016-02-02 | 2017-08-09 | Thomson Licensing | System and method for encoding and decoding information representative of a focalization distance associated to an image belonging to a focal stack representative of a light field content |
US10218968B2 (en) * | 2016-03-05 | 2019-02-26 | Maximilian Ralph Peter von und zu Liechtenstein | Gaze-contingent display technique |
US9936187B2 (en) | 2016-05-18 | 2018-04-03 | Siemens Healthcare Gmbh | Multi-resolution lightfield rendering using image pyramids |
EP3247108A1 (en) * | 2016-05-18 | 2017-11-22 | Siemens Healthcare GmbH | Multi-resolution lightfield rendering using image pyramids |
US10275892B2 (en) | 2016-06-09 | 2019-04-30 | Google Llc | Multi-view scene segmentation and propagation |
US10679361B2 (en) | 2016-12-05 | 2020-06-09 | Google Llc | Multi-view rotoscope contour propagation |
US10931610B2 (en) * | 2017-01-16 | 2021-02-23 | Alibaba Group Holding Limited | Method, device, user terminal and electronic device for sharing online image |
US10275425B2 (en) * | 2017-02-14 | 2019-04-30 | Henry Edward Kernan | Method for compressing, slicing, and transmitting image files for display and interpretation |
CN108632529A (en) * | 2017-03-24 | 2018-10-09 | 三星电子株式会社 | The method that the electronic equipment of pattern indicator is provided and operates electronic equipment for focus |
US10594945B2 (en) | 2017-04-03 | 2020-03-17 | Google Llc | Generating dolly zoom effect using light field image data |
US10440407B2 (en) | 2017-05-09 | 2019-10-08 | Google Llc | Adaptive control for immersive experience delivery |
US10444931B2 (en) | 2017-05-09 | 2019-10-15 | Google Llc | Vantage generation and interactive playback |
US10474227B2 (en) | 2017-05-09 | 2019-11-12 | Google Llc | Generation of virtual reality with 6 degrees of freedom from limited viewer data |
US10354399B2 (en) | 2017-05-25 | 2019-07-16 | Google Llc | Multi-view back-projection to a light-field |
US10482618B2 (en) | 2017-08-21 | 2019-11-19 | Fotonation Limited | Systems and methods for hybrid depth regularization |
US11562498B2 (en) | 2017-08-21 | 2023-01-24 | Adela Imaging LLC | Systems and methods for hybrid depth regularization |
US10818026B2 (en) | 2017-08-21 | 2020-10-27 | Fotonation Limited | Systems and methods for hybrid depth regularization |
US11195061B2 (en) * | 2017-09-12 | 2021-12-07 | Panasonic Intellectual Property Management Co., Ltd. | Image generation apparatus and method for generating image |
US10545215B2 (en) | 2017-09-13 | 2020-01-28 | Google Llc | 4D camera tracking and optical stabilization |
US10965862B2 (en) | 2018-01-18 | 2021-03-30 | Google Llc | Multi-camera navigation interface |
US11184447B2 (en) * | 2019-05-14 | 2021-11-23 | Swiftly Systems, Inc. | Systems and methods for efficient transmission of catalog data |
US20220309743A1 (en) * | 2019-06-28 | 2022-09-29 | Pcms Holdings, Inc. | System and method for hybrid format spatial data distribution and rendering |
US11900532B2 (en) * | 2019-06-28 | 2024-02-13 | Interdigital Vc Holdings, Inc. | System and method for hybrid format spatial data distribution and rendering |
CN114128303A (en) * | 2019-06-28 | 2022-03-01 | Pcms控股公司 | System and method for mixed format spatial data distribution and presentation |
US11699273B2 (en) | 2019-09-17 | 2023-07-11 | Intrinsic Innovation Llc | Systems and methods for surface modeling using polarization cues |
US11270110B2 (en) | 2019-09-17 | 2022-03-08 | Boston Polarimetrics, Inc. | Systems and methods for surface modeling using polarization cues |
US11525906B2 (en) | 2019-10-07 | 2022-12-13 | Intrinsic Innovation Llc | Systems and methods for augmentation of sensor systems and imaging systems with polarization |
CN111223155A (en) * | 2019-10-22 | 2020-06-02 | 浙江大搜车软件技术有限公司 | Image data processing method, image data processing device, computer equipment and storage medium |
US11302012B2 (en) | 2019-11-30 | 2022-04-12 | Boston Polarimetrics, Inc. | Systems and methods for transparent object segmentation using polarization cues |
US11842495B2 (en) | 2019-11-30 | 2023-12-12 | Intrinsic Innovation Llc | Systems and methods for transparent object segmentation using polarization cues |
US11580667B2 (en) | 2020-01-29 | 2023-02-14 | Intrinsic Innovation Llc | Systems and methods for characterizing object pose detection and measurement systems |
US11797863B2 (en) | 2020-01-30 | 2023-10-24 | Intrinsic Innovation Llc | Systems and methods for synthesizing data for training statistical models on different imaging modalities including polarized images |
US11953700B2 (en) | 2020-05-27 | 2024-04-09 | Intrinsic Innovation Llc | Multi-aperture polarization optical systems using beam splitters |
CN112347832A (en) * | 2020-06-12 | 2021-02-09 | 深圳Tcl新技术有限公司 | Unlocking method, device and equipment based on face recognition and computer storage medium |
US11683594B2 (en) | 2021-04-15 | 2023-06-20 | Intrinsic Innovation Llc | Systems and methods for camera exposure control |
US11290658B1 (en) | 2021-04-15 | 2022-03-29 | Boston Polarimetrics, Inc. | Systems and methods for camera exposure control |
US11954886B2 (en) | 2021-04-15 | 2024-04-09 | Intrinsic Innovation Llc | Systems and methods for six-degree of freedom pose estimation of deformable objects |
US11689813B2 (en) | 2021-07-01 | 2023-06-27 | Intrinsic Innovation Llc | Systems and methods for high dynamic range imaging using crossed polarizers |
WO2023200535A1 (en) * | 2022-04-14 | 2023-10-19 | Tencent America LLC | Smart client for streaming of scene-based immersive media |
US11982775B2 (en) | 2022-12-12 | 2024-05-14 | Intrinsic Innovation Llc | Systems and methods for augmentation of sensor systems and imaging systems with polarization |
US11983893B2 (en) | 2023-01-12 | 2024-05-14 | Adeia Imaging Llc | Systems and methods for hybrid depth regularization |
US11985293B2 (en) | 2023-01-30 | 2024-05-14 | Adeia Imaging Llc | System and methods for calibration of an array camera |
US11900189B1 (en) * | 2023-02-21 | 2024-02-13 | Ricoh Company, Ltd. | Automatic tuning compensation system that determines optimal compensation target values for each of plurality of tint levels |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20120249550A1 (en) | Selective Transmission of Image Data Based on Device Attributes | |
US10311649B2 (en) | Systems and method for performing depth based image editing | |
US8908058B2 (en) | Storage and transmission of pictures including multiple frames | |
US9607424B2 (en) | Depth-assigned content for depth-enhanced pictures | |
US8072503B2 (en) | Methods, apparatuses, systems, and computer program products for real-time high dynamic range imaging | |
JP2018513640A (en) | Automatic panning shot generation | |
US20170078637A1 (en) | Image processing apparatus and method | |
JP2006107213A (en) | Stereoscopic image printing system | |
CN102131099A (en) | Image processing apparatus, image processing method, and program | |
JP6108755B2 (en) | Shooting device, shot image transmission method, and shot image transmission program | |
CN105282429A (en) | Imaging device, and control method for imaging device | |
CN108259757A (en) | Photographic device, image processing apparatus and recording method | |
JP2011078008A (en) | Content sharing apparatus, content editing apparatus, content sharing program, and content editing program | |
WO2012170111A1 (en) | Storage and transmission of pictures including multiple frames | |
US20210400192A1 (en) | Image processing apparatus, image processing method, and storage medium | |
CN115359105A (en) | Depth-of-field extended image generation method, depth-of-field extended image generation device, and storage medium | |
JP2020188417A (en) | Image processing apparatus, image processing method, and computer program | |
JP2020150517A (en) | Image processing apparatus, image processing method, computer program and storage medium | |
US20040202378A1 (en) | Method and apparatus for enhancing images based on stored preferences | |
CN113890984B (en) | Photographing method, image processing method and electronic equipment | |
CN117274106B (en) | Photo restoration method, electronic equipment and related medium | |
CN110876050B (en) | Data processing device and method based on 3D camera | |
JP4499276B2 (en) | Electronic camera system and electronic camera | |
TW202412517A (en) | Non-fungible token (nft) stereoscopic display device with cryptocurrency wallet and stereoscopic display method thereof | |
JP2008262487A (en) | Imaging unit, and method for generating and recording synchronization file |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: LYTRO, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:AKELEY, KURT BARTON;NG, YI-REN;WATERS, KENNETH WAYNE;AND OTHERS;SIGNING DATES FROM 20120613 TO 20120614;REEL/FRAME:028379/0655 |
|
AS | Assignment |
Owner name: TRIPLEPOINT CAPITAL LLC, CALIFORNIAFree format text: SECURITY AGREEMENT;ASSIGNOR:LYTRO, INC.;REEL/FRAME:029732/0787Effective date: 20130123 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LYTRO, INC.;REEL/FRAME:050009/0829Effective date: 20180325 |
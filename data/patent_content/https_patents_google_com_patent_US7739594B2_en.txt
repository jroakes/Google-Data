US7739594B2 - Encoding and displaying default landing page content - Google Patents
Encoding and displaying default landing page content Download PDFInfo
- Publication number
- US7739594B2 US7739594B2 US11/465,441 US46544106A US7739594B2 US 7739594 B2 US7739594 B2 US 7739594B2 US 46544106 A US46544106 A US 46544106A US 7739594 B2 US7739594 B2 US 7739594B2
- Authority
- US
- United States
- Prior art keywords
- section
- landing page
- version
- tag
- client
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000000034 method Methods 0.000 claims abstract description 69
- 238000004590 computer program Methods 0.000 claims abstract description 35
- 238000013515 script Methods 0.000 claims description 53
- 238000012545 processing Methods 0.000 claims description 6
- 238000012360 testing method Methods 0.000 abstract description 26
- 238000013461 design Methods 0.000 abstract description 13
- 238000006243 chemical reaction Methods 0.000 description 98
- 238000002474 experimental method Methods 0.000 description 59
- 239000012634 fragment Substances 0.000 description 46
- 230000009471 action Effects 0.000 description 14
- 230000008569 process Effects 0.000 description 13
- 235000014510 cooky Nutrition 0.000 description 10
- 238000012544 monitoring process Methods 0.000 description 9
- 230000008859 change Effects 0.000 description 7
- 230000006872 improvement Effects 0.000 description 7
- 241000699800 Cricetinae Species 0.000 description 6
- 238000004891 communication Methods 0.000 description 5
- 238000005516 engineering process Methods 0.000 description 5
- 230000006870 function Effects 0.000 description 5
- 238000012790 confirmation Methods 0.000 description 4
- 230000008901 benefit Effects 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 230000003190 augmentative effect Effects 0.000 description 2
- 239000003086 colorant Substances 0.000 description 2
- 230000012447 hatching Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 230000000644 propagated effect Effects 0.000 description 2
- 239000010979 ruby Substances 0.000 description 2
- 229910001750 ruby Inorganic materials 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 235000014347 soups Nutrition 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 241000010972 Ballerus ballerus Species 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000003780 insertion Methods 0.000 description 1
- 230000037431 insertion Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000012803 optimization experiment Methods 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000007639 printing Methods 0.000 description 1
- 230000001737 promoting effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
Definitions
- This disclosure relates to improving the effectiveness of online web advertising.
- conversion is measured by determining whether a browsing user reaches a “conversion page,” which can be an ordinary web pages designated by the advertiser for tracking purposes.
- a conversion page for an online store advertising a hat for sale might be a page for a virtual shopping cart with the hat in the shopping cart. Alternatively, the conversion page can be an order confirmation page that reflects that the hat was actually purchased. If the advertisement had been placed to generate sales leads, the conversion page might be the web page shown after a browsing user submits contact information. If the advertisement had been placed to encourage people to download a movie trailer, the conversion page might be chosen to be the movie trailer download page.
- Several conversion pages can correspond to a landing page, if the advertiser believes that several possible outcomes correspond to success.
- a web site for a movie may have several pages providing movie trailers in different resolutions. More generally, several landing pages and conversion pages can correspond to each other.
- the advertiser wants browsing users to reach the landing page from the advertisement, then reach the conversion page from the landing page.
- the percentage of browsing users who, having reached the landing page, then go on to reach the conversion page is called the “conversion rate.”
- the design of the landing page influences the conversion rate. Low conversion rates can result from poorly designed landing pages and landing pages that do not conform to the subjective expectations of browsing users who selected the corresponding advertisements.
- An advertiser can design an experiment to determine empirically which of several landing page designs has the best conversion rate.
- An advertiser may design two different landing pages, conventionally called landing page A and landing page B. For example, the advertiser may want to compare an original landing page with a landing page with a different headline or a landing page with a different image. The advertiser may then conduct an experiment by running the same advertisement for both landing pages, so that some randomly selected group of visitors who select the advertisement see landing page A and others see landing page B. The advertiser then compares the conversion rates of the two landing pages to determine which is more effective.
- This technique of comparing whole web pages can be called an A/B comparison, an A/B test, or an A/B experiment. Performing an A/B test can require some statistical expertise on the part of the advertiser.
- a method in accordance with this aspect includes the actions of receiving user input specifying a landing page, the landing page having one or more sections, each section having a respective original version of content; receiving user input identifying one or more sections of the landing page and for each of the identified sections receiving user input specifying one or more additional versions of content, the original versions and the additional one or more versions together constituting alternative versions for each respective section, and the landing page with the alternative versions for the identified sections together constituting an experiment; determining page fragments operable, when interpreted as part of an instrumented landing page in a client-side browser, to choose one of the alternative versions of each identified section and make each chosen alternative version the content of the corresponding section before the instrumented landing page is displayed by the browser to a browsing user, the chosen alternative versions together defining a combination, and the landing page with the alternative content defined by the combination constituting a variant of the landing page; and instructing a designer to insert the page fragments into the
- the designer inserts the page fragments into the landing page.
- An approving user previews one or more variants of the landing page; and the approving user approves the variants of the landing page.
- the designer launches the experiment, so that a browsing user who reaches the landing page will be shown any one of a plurality of variants of the landing page.
- the alternative versions are included within the instrumented landing page.
- the alternative versions are stored remotely from the instrumented landing page.
- embodiments of the technologies feature methods, systems, and apparatus, including computer program products.
- a method in accordance with this aspect includes the actions of displaying an advertisement on a starting page to a user interacting with a client, the advertisement having a hyperlink to an instrumented landing page; in response to the user selecting the advertisement, downloading the instrumented landing page to the client, the instrumented landing page having one or more sections, each section having a corresponding plurality of alternative versions; choosing in the client a combination of one alternative version for each of the one or more sections; generating in the client a landing page variant of the instrumented landing page, each section of the landing page variant being the corresponding alternative version of the section defined by the combination; notifying a server that the instrumented landing page was reached; notifying the server which combination was chosen; and displaying the landing page variant to the user.
- Other embodiments of this aspect feature corresponding systems and computer program products.
- the landing page includes a conversion hyperlink to a conversion page; and after the client displays the landing page variant to the user, in response to the user selecting the conversion hyperlink, the conversion page is downloaded to the client and the server is notified that the conversion page was reached.
- the alternative versions are included within the instrumented landing page downloaded to the client.
- the alternative versions are stored remotely from the instrumented landing page.
- the client implements a client-side scripting language; the instrumented landing page having one or more fragments together including a script written in the client-side scripting language; the client interprets the script to choose the combination; and the client interprets the script to generate the landing page variant by dynamically inserting the chosen alternative versions into the corresponding sections.
- the client-side scripting language is JavaScript and includes a document.write method; and the script is operable to generate the landing page variant using the JavaScript document.write method before the landing page variant is displayed to the user.
- the server is notified by encoding the combination into a filename of a small file and requesting the small file from the server.
- embodiments of the technologies feature methods, systems, and apparatus, including computer program products.
- a method in accordance with this aspect includes the actions of computing respective conversion rates for each of a plurality of corresponding landing page variants, based on the number of times a conversion page is reached from the corresponding landing page variant, and based on the number of times the corresponding landing page variant is reached from one or more advertisements; and computing a confidence interval for each conversion rate.
- a landing page has one or more sections, there being for each of the sections a corresponding plurality of alternative versions.
- a combination of alternative versions corresponds to each landing page variant, the combination associating one alternative version with each of the sections.
- Each landing page variant includes the landing page with each of the one or more sections having the version associated with the section by the combination.
- Other embodiments of this aspect feature corresponding systems and computer program products.
- the method is performed by software running on one or more servers.
- the method further includes identifying two landing page variants with the highest conversion rates as winning candidates; determining whether the confidence intervals for the winning candidates are non overlapping; and notifying a monitoring user of the combination of alternative versions with the highest conversion rate if the confidence intervals for the winning candidates are non overlapping.
- the method further includes determining whether the confidence intervals for the winning candidates are non overlapping and if so automatically ending the experiment.
- the method further includes identifying as losing candidates any landing page variants having confidence intervals that are non-overlapping from and less than the confidence interval for a baseline landing page variant; and notifying a monitoring user of any losing candidates.
- the method further includes automatically black-listing any losing candidates so that they are no longer tested.
- the method further includes identifying one or more landing page variants with the highest conversion rates; identifying one or more landing page variants with the lowest conversion rates; and automatically configuring a landing page server serving the landing page so that the choosing of alternative versions favors the landing page variants with the highest conversion rates and disfavors the landing page variants with the lowest conversion rates.
- the method further includes estimating a time to completion based on the specified number of alternative versions for each section, an assumed frequency of how often the landing page will be reached, a number of times the landing page has been reached, a baseline percentage of conversions, and an assumed improvement in the percentage of conversions, wherein completion is deemed to have occurred when the confidence intervals for the two landing page variants with the highest conversion rates become non-overlapping.
- the method further includes estimating a time to completion based on a projected frequency of how often two landing page variants with the highest conversion rates will be reached, a number of times the two landing page variants have been reached, and the percentage of conversions for both of the two landing page variants, wherein completion is deemed to have occurred when the confidence intervals for the two landing page variants become non-overlapping.
- a method in accordance with this aspect includes the actions of determining a combination of one alternative version for each of one or more sections in an instrumented landing page, wherein each alternative version is an original version of the respective section or an additional version of the respective section.
- a landing page variant of the instrumented landing page is generated.
- Each section of the landing page variant is the corresponding alternative version of the section defined by the combination.
- the landing page variant is generated in the client by determining for each section whether to display an additional version of the section in lieu of the original version of the section.
- the additional version of the section is obtained; the additional version of the section is inserted into a new location of the landing page variant; and at least one tag is inserted.
- the inserted tag corresponds to at least one matching tag in the landing page, resulting in the client disregarding the original version of the section.
- the original version of the section lies between the inserted tag and the matching tag.
- a client-side scripting language script determines the combination of alternative versions.
- the additional version of the section is obtained from within a client-side scripting language script within the instrumented landing page.
- the additional version of the section is obtained from a remote server.
- the inserted tag is inserted before the original version of the section.
- the additional version of the section is inserted before the original version of the section.
- the landing page is received by the client as an HTML document.
- the landing page is dynamically created by a server-side language program.
- the inserted tag is a ⁇ noscript> tag and the matching tag is a ⁇ /noscript> tag.
- the inserted tag comprises an SGML comment opening and the matching tag comprises an SGML comment closing.
- the client-side scripting language is JavaScript or VBScript.
- the evaluating and inserting occurs when the HTML document is loaded. The inserting occurs through the invocation of the document.write method.
- a script written in the client-side scripting language is embedded in an SGML comment.
- Particular embodiments of the invention can be implemented to realize one or more of the following advantages. Users without statistical expertise can quickly compare a large number of landing page variations, in order to choose a landing page variation with a high conversion rate.
- FIG. 1 is an illustration of what a browsing user may see on a client when using a search engine having an online web advertising system.
- FIG. 2 is an illustration of variations of a landing page that a browsing user may see on a client.
- FIG. 3 illustrates actions of a client interacting with an instrumented landing page.
- FIG. 4 is a flowchart of how a designer may use an online web advertising system.
- FIG. 5 is a flowchart of an illustrative process performed by a server as a client interacts with an instrumented landing page.
- FIG. 6 shows an illustrative display of what a monitoring user may see on a client when monitoring the progress of an experiment on an online web advertising system that includes a landing page optimizer.
- FIG. 7 is a flowchart of an illustrative process performed by a client to generate a landing page variant as part of an experiment, with a fall-back for clients without a client-side scripting language.
- FIG. 1 is an illustration of what a browsing user may see on a client when using a search engine having an online web advertising system.
- the client can be any kind of device or software or combination capable of displaying web pages, including a standalone web browser, a set top box, a personal digital assistant, a mobile telephone, web authoring software, an e-mail client, or a web browser integrated into another software program.
- the browsing user uses a search engine web page 110 which has a text field 115 for entering search terms.
- the browsing user enters “hamsters” to look for web pages on hamsters.
- the search engine subsequently shows the browsing user a search results web page 120 with a listing 123 of web sites, which may be in a ranked order.
- the search engine presents the browsing user with search results with hyperlinks 123 to web pages on hamsters.
- the search engine presents the browsing user with advertisements 127 targeted to what the browsing user searched for.
- the targeted advertisements are for various online stores selling hamsters.
- the advertisements 127 each have a hyperlink to a landing page 140 , which will generally be on the advertiser's web site.
- a browsing user may also see advertisements on a third-party web site 130 , i.e., a web site not owned by the provider of the search engine.
- the browsing user has come to a web site, which in addition to its regular content 133 has advertisements 137 targeted to the browsing user.
- the targeted advertisements will have a hyperlink to a landing page 140 , which will generally be on the advertiser's web site.
- the third-party web site contracted with the search engine to show advertisements.
- the third-party web site could also contract with another kind of advertising broker or with individual advertisers.
- the browsing user sees the landing page 140 on the advertiser's web site after clicking a hyperlink in an advertisement (e.g., one of the advertisements 127 , 137 ).
- the design of the landing page 140 depends on the purpose of the advertisement. If the purpose was to sell merchandise, the landing page may be designed as a sales pitch. In this example, the advertisement 127 or 137 was intended to sell hamsters, and so the landing page is designed with a suitable heading 142 , image 144 , text (sometimes called “copy”) 148 , and call to action 146 .
- the purpose of the advertisement could be almost anything, such as promoting a movie or generating sales leads. The advertiser would design the landing page accordingly.
- the landing page is merely a web page which has been identified as the subject of the experiment, being no different technically than any other kind of web page.
- the landing page can have content such as headings 142 , images 144 , hyperlinks, a call to action 146 , text 148 , or other content including video, audio, Flash movies, or Java applets.
- the landing page may contain a hyperlink directly to the conversion page 160 to encourage browsing users to reach the conversion page 160 .
- the landing page may have no hyperlink to the conversion page, if the browsing users can reach the conversion page 160 indirectly through one or more other web pages, such as a shopping cart page 150 .
- Some advertisers may designate a shopping cart page 150 to be the conversion page, although it is not the conversion page in this example.
- the shopping cart page 150 has an appropriate headline 152 .
- the page indicates that the advertised merchandise 154 has been added to the shopping cart at a quantity 156 and a price 158 .
- the advertiser chooses as the conversion page a page that indicates to the advertiser that the user was called to action from the landing page in the way that the advertiser intended.
- the advertiser designated the order confirmation page 165 to be the conversion page.
- a user who reaches the order confirmation page 165 purchased merchandise, which is what the advertiser intended. Because the order confirmation page represents earned revenue, designating it to be the conversion page makes it easy for the advertiser to determine the costs and benefits of various advertisements.
- FIG. 2 is an illustration of variations of a landing page that a browsing user may see on a client.
- the original landing page design 210 is the same as the landing page 140 in FIG. 1 .
- landing page variants 220 , 230 , 240 , 250 There are several ways to produce variants of landing pages (e.g., landing page variants 220 , 230 , 240 , 250 ).
- an advertiser may change the heading 225 .
- the advertiser may change the image 235 .
- the advertiser may change the call to action 245 .
- the advertiser may change the text 255 or formatting on the landing page.
- the advertiser can also make multiple changes to the landing page at once, or change any other aspect of the landing page in an attempt to improve the conversion rate.
- a computer program will now be described that can be used by an advertiser to manage a landing page experiment to assist in the design of a landing page.
- the advertiser using a user interface to the program identifies sections in the landing page.
- the advertiser might designate a headline as one section, and for that reason provide alternative versions of the headline.
- the advertiser might also designate an image as another section and provide alternative versions of the image.
- different combinations of alternative versions are randomly presented to browsing users, and the program gathers data on the conversions for each combination.
- the computer program does not test all combinations, or does not test all combinations to the end of the experiment. Undesirable combinations can be eliminated during the experiment when early testing shows that they perform poorly.
- combinations that were not approved by the advertiser to be part of the test can also be eliminated.
- FIG. 3 illustrates actions of a client interacting with an instrumented landing page.
- the client begins by displaying a starting page to the browsing user (step 305 ).
- the starting page can be any kind of web page, such as a search engine result page 120 , a web page containing ads provided under contract by an advertising system 130 , or an e-mail message displayed through a web browser.
- the starting page has at least one advertisement with a hyperlink to an instrumented landing page.
- the instrumented landing page is a modified version of an original landing page which has been augmented with page fragments in order to test variations of the original landing page.
- the starting page with an advertisement is not necessary for the experiment.
- the landing page can be tested even if the user arrives at the landing page through other means, such as through a search engine or a bookmark.
- the client loads the instrumented landing page indicated in the advertisement's hyperlink.
- the instrumented landing page is substituted for the original landing page at the former URL of the original landing page. Any of the methods the client would have used to load the original landing page will instead load the instrumented landing page.
- the client downloads the instrumented landing page from a server (step 315 ).
- the instrumented landing page can be loaded using HTTP (Hypertext Transfer Protocol), WAP (Wireless Application Protocol), or another protocol.
- the instrumented landing page is a modified version of the original landing page which the experiment was designed to test, augmented with fragments, which may include a content fragment, a combining and previewing fragment, a tracking fragment, and an identification fragment for each section.
- the fragments can contain markup language tags, e.g., HTML (Hypertext Markup Language) or XML (Extensible Markup Language) tags.
- the landing page may have one or more sections, and the sections may each have two or more alternative versions.
- the instrumented landing page may also include a hyperlink to a conversion page.
- the client chooses a landing page variant (step 320 ).
- the fragments include a combining and previewing fragment which has a script written in a client-side scripting language that is executed by the client to choose the landing page variant.
- the client randomly chooses one version for each section from among the alternative versions for the section, using a pseudo-random number generator, for example.
- the client may also choose alternative versions in a regular pattern, for example, round-robin.
- a white list or black list can be provided in a fragment to limit the experiment to particular combinations, either focusing the experiment on the best candidates or eliminating the worst candidates.
- the choice of a white list or black list is made to minimize the list's size to help the instrumented landing page download faster.
- the white list and black list can be implemented in terms of ranges or as a list of combinations.
- a client-side scripting language script can store persistent data, for example in a web browser cookie, identifying which combination was chosen for a particular experiment.
- the script sets the cookie to expire within a reasonably short time, such as in one half hour. As long as the cookie lasts, the combination stored in the cookie is the one that will be displayed to the user. The cookie ensures that the browsing user does not become confused by seeing several different landing page variants for the same URL (Uniform Resource Locator) at about the same time.
- URL Uniform Resource Locator
- the advertiser can store the alternative versions in a content fragment of the instrumented landing page.
- the content fragment when present in the instrumented landing page, contains all the alternative versions of the sections for an experiment. Storing the alternative versions in a content fragment of the instrumented landing page can ensure there is no additional latency before the landing page variant is displayed to the browsing user. Additionally, the advertiser need only to be concerned about the security and reliability of the landing page server, and not a second server. No second server is required to store the alternative versions of the sections for an experiment.
- the advertiser can store the alternative versions on a remote server in a single file.
- Non-technical people can set up the experiment and change it on the fly using a web browser, rather than needing to edit landing page files manually.
- the remote server can be configured so that non-technical people can modify and run experiments without requiring permission to modify the original landing page files.
- the remote server can make a copy of the original landing page file and store it on the remote server. This copy can be modified using a web browser interface to indicate sections and provide alternative versions for the sections.
- the remote server can automatically manage the experiment, for example by black-listing poor-performing combinations, white-listing the combinations with the best conversion rates, and/or starting and stopping the experiment automatically.
- the alternative versions for the sections can be stored in obfuscated format, whether they are stored in a content fragment or stored remotely in a single file. Obfuscating the alternative versions can enhance privacy and simplify computer programming. Certain special characters need to be encoded, or “escaped,” when text is inserted into an HTML file, to preserve the HTML structure. It can be easier to simply encode all of the characters, as obfuscation does.
- the fragments include a combining and previewing fragment which has a script written in a client-side scripting language, and an identification fragment in each section with a function call in the same scripting language.
- the client interprets the script before the landing page is displayed to the browsing user.
- the function call in each section calls the script in the combining and previewing fragment to substitute an alternative version into its section.
- the script uses the JavaScript document.write method to insert raw text into an in-memory version of an HTML file. The document.write method is fast, and because it is run before the landing page is displayed, the browsing user does not see “flicker,” as would be the case if the page were updated after being displayed.
- a script in the combining and previewing fragment uses a DOM (Document Object Model) API (application programming interface) to modify a hierarchical in-memory representation of the HTML file, inserting, modifying, or deleting elements.
- DOM Document Object Model
- the alternative versions are all present in their respective section, and CSS (Cascading Style Sheets) attributes are used to show the chosen alternative version in each section and hide the others.
- the landing page is written in Macromedia Flash
- the script in the combining and previewing fragment is written in ActionScript
- the ActionScript DOM API is used to modify the in-memory representation of the Flash landing page.
- the HTML ⁇ noscript> tag can be used to encapsulate a default alternative version for each section. Clients supporting client-side scripting languages ignore the content delimited by this tag, but clients without such scripting languages display the content. Because an instrumented landing page relies on a client-side script, encapsulating a default alternative version inside the ⁇ noscript> tag ensures that browsing users using browsers without client-side scripting language support will see an operational landing page. These browsing users do not participate in the experiment, so data need not be kept on their conversion rate.
- the experiment can be configured to test landing page variants on fewer than all browsing users. For example, an advertiser may want to run the experiment a long time to test landing page variants on a representative sample of browsing users, but testing all browsing users in that time may result in a needlessly large sample size. Testing landing page variants that have a lower conversion rate than the original landing page has a real cost in terms of lost conversions. The advertiser therefore can choose to test only a fourth, a tenth, or some other fraction of web page visitors.
- a script in the instrumented landing page chooses a pseudorandom number, e.g., using the JavaScript math.random method, and tests the number against a predetermined threshold, which is selected to achieve a desired fraction of users participating in the experiment.
- the browsing user who does not participate sees a default landing page constructed by choosing a default combination of alternative versions.
- Some implementations provide a preview function in the combining and previewing fragment.
- the parameter resembles a server-side CGI (Common Gateway Interface) parameter, it is not necessary to use CGI to preview the landing page.
- Scripts running in the client can use the JavaScript document.URL method to determine the combination requested by the browsing user and substitute the corresponding alternative versions into the document sections.
- Some implementations do not collect data on conversions of landing pages viewed in preview mode and turn off data collection by deleting the cookie that identifies which combination was chosen for a particular experiment, if such a cookie exists on the client.
- the advertiser can manually turn the experiment on and off in some implementations by setting an appropriate variable in one of the landing page fragments. If the experiment is turned off, all browsing users see the default combination and no data is collected on conversions.
- the client can notify the server that the chosen landing page variant has been reached (step 325 ).
- the client can request a file, e.g., a one-pixel GIF graphic bitmap file, with a request that encodes both the combination and the fact that the landing page has been reached in the filename.
- a filename containing “2-2-2” can signify that of three sections in a landing page experiment, the second alternative was chosen for each one.
- the filename can identify a profile, which corresponds to a set of pages to track.
- the filename can also identify the experiment, allowing the same server to track many experiments for many advertisers, each advertiser potentially having many profiles.
- the client can also notify the server by setting cookies and then sending the cookies to the server.
- Another way of notifying the server that a particular landing page variant has been reached is to use a separate notification for reaching the landing page and for choosing the combination.
- An implementation can use the HTTP GET, POST, or PUT methods for notifying the server, and can use the HTTP method synchronously or asynchronously.
- the client then displays the landing page to the browsing user (step 330 ).
- the landing page can have a hyperlink to the conversion page.
- the browsing user can select the hyperlink to the conversion page (step 335 ), if the landing page has such a hyperlink. Otherwise the browsing user can reach the conversion page through other web pages, through a bookmark, or through typing in the address of the conversion page manually. In some implementations, if the browsing user declines to select the hyperlink or otherwise reach the conversion page within a certain time period, such as half an hour, a cookie in the client web browser expires and the visit to the landing page is treated as a non-conversion.
- the client downloads the conversion page from the server (step 340 ).
- the same protocol used to download the landing page can be used for this as well.
- the client notifies the server that conversion has occurred (step 345 ).
- the conversion page contains a tracking fragment with a script written in JavaScript that requests a file, e.g., one-pixel GIF graphic file, in the same way that the script in the landing page does. That is, the script encodes the chosen combination in the name of the file.
- the client can notify the server which conversion page was reached, if several conversion pages correspond to a single landing page.
- the tracking fragment can be included in other files on the web site, as well. If the client reaches these other web pages after the landing page, whether before or after the conversion page, the tracking fragment can send the server a session identifier so that the browsing user can be tracked through the web site.
- the server can analyze how individual browsing users reach different parts of the web site to help the advertiser evaluate the design of the website.
- the client displays the conversion page to the browsing user (step 350 ).
- FIG. 4 is a flowchart of how a designer may use an online web advertising system that includes a landing page optimizer.
- the designer uses the landing page optimizer on behalf of an advertiser, and can be, for example, an employee or a consultant of the advertiser or the advertiser himself or herself.
- the landing page optimizer operates as an online service that can be used through a client web browser.
- the designer can download a landing page optimizer web page into his web browser and select multivariate testing.
- the landing page optimizer can additionally support other modes of testing, such as A/B testing, for advertisers whose traffic is fairly low, such as fewer than 10,000 page views a day, and for advertisers who wish to test moving sections around or test changing the overall look of the page.
- the designer begins to set up an experiment by inputting addresses for an original landing page and a conversion page (step 410 ).
- the designer can also input a name for the experiment for his or her convenience, if the designer intends to conduct multiple experiments simultaneously.
- the designer inputs an estimate of current traffic for the landing page and the complexity of the desired experiment in terms of the number of sections and the number of alternative versions for each section (step 420 ).
- the maximum number of sections is eight and the maximum number of alternative versions for each section is 127.
- the designer also inputs an estimate of the current conversion rate.
- the landing page optimizer can estimate the duration of the experiment (step 430 ).
- the estimate is based on an assumption that one of the variations will achieve a 10% improvement in conversion rate (e.g., from 5.0% to 5.5%).
- the designer can specify that only a fraction of browsing users will participate in the experiment. Specifying such a fraction prolongs the duration of the experiment by a factor of the inverse of the fraction.
- the designer also inputs the page sections and alternative versions for the experiment (step 440 ).
- the designer specifies original versions of all the sections, such as by pasting in sections of an HTML file, and then subsequently modifies the original versions to produce alternative versions for each section.
- the server retrieves a copy of the original landing page document using the address previous supplied by the designer, and displays the copy's HTML to the designer. The designer indicates what parts of the HTML should be designated as the original versions of sections, and then as before modifies those original versions to produce alternative versions for each section.
- the server then generates page fragments based on the alternative versions for each section, and provides them to the designer (step 450 ).
- the page fragments can include a content fragment, a combining and previewing fragment, a tracking fragment, and an identification fragment for each section.
- the page fragments can include one or more scripts written in a client-side scripting language, e.g., JavaScript, VBScript or ECMAScript, and can include HTML or XML tags and content.
- the designer's client can download a script written in a client-side scripting language, and that script can generate the page fragments.
- all of the page fragments are provided to the designer, except for one page fragment, the content fragment. Rather than providing a content fragment, the server prepares a content file to be stored remotely from the landing page.
- the server instructs the designer through the designer's client on how to install the page fragments into the landing page (step 460 ).
- the designer then installs the page fragments into the landing page according to instructions provided by the server or client-side script, producing an instrumented landing page (step 470 ).
- the server prompts the designer to ask a person of technical skill to install the page fragments for the designer.
- the prompt can include an e-mail message to send to such a person.
- the page fragments can be installed into the landing page automatically by the server.
- the landing page variants are available for preview.
- An approving user who may be the designer, the advertiser, or an employee or consultant of the advertiser, previews and approves the landing page variants 480 . It is not necessary to preview all or even any of the variations before approving them.
- the designer then launches the experiment (step 490 ).
- the approving user can also launch the experiment.
- FIG. 5 is a flowchart of an illustrative process performed by a server as a client interacts with an instrumented landing page.
- this server is the same as the web server providing the landing page and conversion page.
- the servers are distinct.
- the server receives notification that the landing page has been reached, including the chosen combination and the experiment number, from the client (step 510 ).
- the notification can be received through any HTTP method, including the client requesting a specially-named file, where the name provides the information to the server.
- the server updates a database with the combination chosen and the experiment number (step 520 ).
- the server can optionally keep ancillary information such as the date and time and the browsing user's geographic location, which can be known with reasonable accuracy by looking up the browsing user's IP address.
- the database can be kept in one or more other servers distinct from the server receiving the notification or on the same server.
- the server receives notification of the conversion (step 530 ).
- the notification can be sent and received in the same way the landing page notification is sent and received.
- the server updates a database with notification information (step 540 ).
- the server computes a confidence interval for the conversion (step 550 ).
- the confidence interval can be computed by treating the various combinations as statistical samples of Bernoulli variables from unrelated populations, making each combination have a binomial distribution.
- the confidence interval can be computed by finding the standard error, and then multiplying the standard error by a constant to give the desired confidence level. In some implementations, the confidence level is 80%.
- the server evaluates the confidence interval of the combination against a baseline confidence interval (step 570 ). In some implementations, if the lower end of the confidence interval is greater than the upper end of the baseline confidence interval, the combination is treated as a “winning candidate.” If the confidence interval is less than the baseline, with no overlap, the combination is treated as a “losing candidate.” Otherwise no label is attached.
- the configuration of the experiment can be automatically adjusted so that a “winning candidate” is tested more frequently (step 560 ).
- the configuration of the experiment can be automatically adjusted so that a “losing candidate” is tested less frequently (step 580 ). Adjusting the configuration of the experiment is facilitated if the instrumented landing page retrieves the content in a single file from a remote server, because the content file can be modified, such as with a white list or a black list, to adjust the testing frequencies of the various combinations.
- the configuration of the experiment can be adjusted in one of several ways.
- the remote server can alert the advertiser by e-mail or SMS to manually adjust the configuration.
- the advertiser's web server can also poll the remote server regularly to download adjustments to the configuration.
- FIG. 6 shows an illustrative display 600 of what a monitoring user may see on a client when monitoring the progress of an experiment on an online web advertising system that includes a landing page optimizer.
- Much of what is described as being computed by the server could also be computer by the client, through an appropriate script in a client-side scripting language.
- a client uses a web browser 605 to display a user interface to a monitoring user.
- the client receives notifications from a server computer to display to the monitoring user.
- the user interface can display an estimated duration 610 until the experiment is finished.
- the duration is calculated by the server computer and sent to the client to be displayed to the monitoring user.
- the server can calculate the duration based on preliminary data of how many times the landing page variants have been displayed to browsing users and how many times of those have resulted in conversions.
- the user interface can display a list of combinations 615 , and for each combination display a confidence interval for the conversion rate.
- the confidence interval can be displayed graphically and numerically.
- the graphical confidence intervals 620 are unlabeled horizontal line segments. Each horizontal segment has an interval indicated, corresponding to each combination's confidence interval.
- the left-hand endpoint represents a conversion rate slightly less than the lowest estimated conversion rate range for all of the combinations.
- the right-hand endpoint represents a conversion rate slightly more than the highest estimated conversion rate range.
- all of the graphical confidence intervals 620 have the same scale and can therefore be compared visually.
- the intervals can be tri-colored, where one color represents the baseline confidence interval (hatched in FIG. 6 ), one color represents the part of any confidence interval less than the baseline (black in FIG. 6 ), and one color represents the part of any confidence interval greater than the baseline (clear in FIG. 6 ).
- the user interface can display the conversion rate confidence interval numerically 622 .
- the confidence intervals are displayed to three digits of precision.
- the user interface can display the estimated improvements 625 numerically. For example, if the baseline conversion rate was 5.0%, and a combination was estimated to have a conversion rate of 5.5%, the estimated improvement could be displayed as 10.0% for that combination.
- the user interface can display the actual data 630 for the combinations, showing the number of times each combination's landing page variant was displayed to browsing users, and how many of those resulted in conversions.
- the user interface can display conversion rate statistics 635 for a baseline combination.
- the baseline combination can be original versions of content for the respective sections.
- the user interface can display the graphical confidence interval 620 , the numerical confidence interval 622 , the estimated improvement 625 , and the raw data for the baseline 630 .
- the graphical confidence interval for the baseline combination has a uniformly colored interval (hatched in 620 ), representing that this interval is the confidence interval for the baseline combination.
- the client can display similar statistics for combinations 640 , 645 which appear to have better conversion rates than the baseline.
- Combinations 640 have confidence intervals which overlap partially with the baseline confidence interval.
- Another combination 645 may a confidence interval which overlaps entirely with the baseline confidence interval. All of these have a positive estimated improvement 625 in the conversion rate.
- Other combinations may have confidence intervals which are greater than and non-overlapping with the baseline confidence interval, but none are shown in FIG. 6 .
- the partial overlap can be depicted graphically.
- the part of the confidence intervals which is greater than the confidence interval for the baseline is given one color, indicated in FIG. 6 by clear color, and the remaining part is colored in another color, indicated in FIG. 6 by hatching.
- the server calculates the confidence intervals with 80% confidence level.
- two confidence intervals (with an 80% confidence level) do not overlap, there is at least a 95% probability that the conversion rates represented by the confidence intervals are corrected ordered. Therefore, for any one of the combinations which partially overlap the baseline confidence interval, there is at least a 5% chance that the baseline combination would actually be shown to have a higher conversion rate if enough data were gathered.
- Many other choices of confidence level are viable. Choosing a higher confidence level would result in a greater probability that the conversion rates are correctly ordered, at the cost of requiring the experiment to run longer to gather more data. The opposite would be true for choosing a lower confidence level.
- the client can display conversion rate statistics for combinations 650 which are estimated to be worse than the baseline, but which have confidence intervals partially overlapping the baseline confidence interval.
- the server colors the graphical confidence intervals 620 partly in one color, indicated in FIG. 6 by black, to show the part of the confidence interval less than the baseline, and colors the other with another color, indicated in FIG. 6 by hatching.
- the server computes the confidence intervals so that this partial overlap means that for any one combination, there is a greater than 5% chance that with a very large sample, it would be revealed that the combination actually has a better conversion rate than the baseline.
- the client can display conversion rate statistics for combinations 655 which are estimated to be worse than the baseline, and which have confidence intervals not overlapping the baseline confidence interval.
- the graphical confidence intervals are colored in a single color, indicated in FIG. 6 by black, to show that the confidence intervals are less than and do not overlap the baseline confidence interval.
- the client can display a recommendation 660 from the server. It may be that the two combinations with the highest estimated conversion rates, or the “best candidates,” have confidence intervals which do not overlap. In this situation server can recommend the best candidate with the higher conversion rate. Otherwise, the server can recommend waiting for a more definitive conclusion on which combination has the highest conversion rate.
- the statistics and data on the conversions may be downloaded 665 in tabular format.
- the server may also offer a more convenient format of the web page for printing 670 .
- FIG. 7 is a flowchart of an illustrative process performed by a client to generate a landing page variant as part of an experiment, with a fall-back for clients without a client-side scripting language.
- FIG. 3 it was explained how matching ⁇ noscript> and ⁇ /noscript> tags can be used to encapsulate default alternative versions for each section. Clients with client-side scripting languages ignore the content delimited by this tag, but clients without such scripting languages display the content.
- An advertiser may wish to test the default alternative versions of the sections as part of an experiment.
- One na ⁇ ve implementation of such an experiment requires that the instrumented landing page contain two copies of the default alternative versions: one inside a pair of pre-existing ⁇ noscript> and ⁇ /noscript> tags and another copy which can be manipulated by a client-side script.
- the reason two copies are necessary is that text and tags between matching ⁇ noscript> and ⁇ /noscript> tags are ignored by web browsers with scripting languages, and thus the text and tags are inaccessible to a script which chooses which alternative versions of the sections to display.
- This second copy increases the time necessary to download the instrumented landing page, as well as increasing server bandwidth and storage costs.
- a different na ⁇ ve implementation of the experiment uses dynamic formatting techniques, rather than a ⁇ noscript> tag, to render the default alternative versions of the sections.
- the Cascading Style Sheet “display” property could be set to “none” for all but the default alternative versions of the sections.
- a script could change the display property as necessary to display the chosen combination of landing page sections.
- such a technique can fail on browsers that do not fully support CSS, and even when supported, the process of hiding and showing alternative versions of sections may be momentarily visible to users. Additionally, the code for managing the display properties can be cumbersome.
- FIG. 7 illustrates a process that works on all browsers yet only requires a single copy of the default alternative versions to be included in the instrumented landing page. The process is invisible to users, as well. Clients which do not support client-side scripting languages display the default alternative versions to users.
- the process of generating a landing page variant begins by the client determining a combination of one alternative version for each of one or more sections in an instrumented landing page (step 705 ).
- the client can determine the combination through generating the combination on the client through a pseudorandom number generator or through a hardware random number generator.
- the client can also determine the combination by reading the combination from a configuration file or by receiving the combination from a server or user input. For example, the client could determine the combination represented by the tuple ⁇ 4, 1, 1> through a pseudorandom number generator.
- This combination corresponds to a landing page variant which has the fourth alternative version of the first section and the first alternative versions of the second and third sections.
- the client considers each of the sections in the instrumented landing page (step 710 ). For each section, the client determines whether another alternative version of the section should be displayed in lieu of the original version (step 715 ). In the example of the combination ⁇ 4, 1, 1>, the client would determine that the fourth alternative version of the first section should be displayed in lieu of the original version, while original versions of the second and third sections should be displayed.
- the client obtains an appropriate alternative version of the section and inserts it into a new location of the landing page variant (step 720 ).
- the additional version of the section can be obtained from within a client-side scripting language script within the instrumented landing page.
- the additional version of the section can be obtained from a remote server. After insertion, this version is included in the instrumented landing page in addition to the original version of the section.
- the document.write method is suitable for inserting the alternative version of the section, if the script is written in the JavaScript client-side scripting language.
- the document.write method operates by inserting specified text and/or tags immediately after the script, if the method is invoked while the instrumented landing page is loading.
- the client would insert the fourth alternative version of the first section.
- the client inserts a tag which causes the original version of the section to be ignored by the client (step 725 ).
- the client can use the JavaScript document.write method to insert a ⁇ noscript> tag, which causes the text and tags between the tag and a pre-existing matching ⁇ /noscript> tag to be ignored by the client.
- document.write can insert “ ⁇ !--”, which is the opening of an Standard Generalized Markup Language (SGML) comment, which will match a pre-existing SGML comment closing, “-->”.
- SGML Standard Generalized Markup Language
- the closing “-->” would be visible after the default version of the section, unless it is disguised, for example by setting its font color to match the background.
- the client determines whether there are any more sections to process (step 730 ). If not, the process ends; otherwise, another section is considered, returning to step 710 .
- Table 1 An example of a technique which can be used to implement steps 720 and 725 is shown below in Table 1, implemented here using a web page with JavaScript. When loaded into a web browser, this example displays the original content unless the word “true” is part of the URL. E.g., if the web page is located at http://example.com/google.html, the additional alternative version can be displayed by loading http://example.com/google.html?true in a web browser.
- the same technique can be applied to any web page where it is desired to replace original content with another version of the content.
- This technique is not limited to running experiments with instrumented landing pages.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer-readable medium for execution by, or to control the operation of, data processing apparatus.
- the computer-readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a propagated signal is an artificially generated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, to name just a few.
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a goal rate can be calculated as the percentage of browsing users who, having reached the test page, go on to reach the goal page.
- the goal rate can be interpreted as a measure of success.
- “landing page” is used to include all test pages whether or not arrived at through an advertisement
- “conversion page” is used to include all goal pages. It is not essential for combinations of section alternatives to be chosen by the client.
- a combination can also be chosen by a server and then communicated to the client, or the combination can be based upon user input.
- the instrumented landing page can be stored on a server as an HTML file, or the instrumented landing page can be generated dynamically through a server side language program.
- Server side languages include PHP, ASP (Active Server Pages), JSP (JavaServer Pages), Perl, Java (including Java Enterprise Edition), Ruby (including Ruby on Rails), Python (including Zope), ColdFusion Markup Language, and ActionScript.
Abstract
Description
TABLE 1 | ||
<html><body> | ||
<script> | ||
<!-- | ||
if (document.URL.search(/.*true.*/) != −1) { | ||
document.write (“Additional alternative version”); | ||
document.write (“<noscript>”); } | ||
//--> | ||
</script> | ||
Original version | ||
</noscript> | ||
</body></html> | ||
In this example, the SGML comment opening and closing within the <script> and </script> tags function to prevent the display of the client-side script in browsers that do not recognize any client-side scripting language. If the “true” parameter is specified, the “Additional alternative version” text is obtained from within the client-side script and inserted after the </script> tag. The document.write calls have the effect of making the web page following the </script> tag look like this to the client parser:
... | ||
Additional alternative version | ||
<noscript> | ||
Original version | ||
</noscript> | ||
</body></html> | ||
The client ignores the “Original version” text within the inserted <noscript> and pre-existing matching </noscript> tag, resulting in the text “Additional alternative version” being displayed in the web browser client. When the “true” parameter is not specified, the web page following the script tag looks like this to the client parser.
... | ||
Original version | ||
</noscript> | ||
</body></html> | ||
The </noscript> closing tag does not match a beginning tag, which means that the HTML is, strictly speaking, not well-formed. However, extraneous closing tags are generally disregarded by web browsers in “tag soup” HTML mode. A client running in XHTML mode, which is stricter than tag soup mode, would not accept the extraneous </noscript> closing tag. Therefore, this technique of inserting an unbalanced <noscript> tag to hide original content in a web page would not work in XHTML mode.
Claims (35)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/465,441 US7739594B2 (en) | 2006-05-22 | 2006-08-17 | Encoding and displaying default landing page content |
PCT/US2007/069496 WO2007137278A2 (en) | 2006-05-22 | 2007-05-22 | Testing effectiveness of variants of a web page |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/439,384 US7831658B2 (en) | 2006-05-22 | 2006-05-22 | Generating landing page variants |
US11/439,498 US7844894B2 (en) | 2006-05-22 | 2006-05-22 | Starting landing page experiments |
US11/439,501 US8682712B2 (en) | 2006-05-22 | 2006-05-22 | Monitoring landing page experiments |
US11/465,441 US7739594B2 (en) | 2006-05-22 | 2006-08-17 | Encoding and displaying default landing page content |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/439,498 Continuation-In-Part US7844894B2 (en) | 2006-05-22 | 2006-05-22 | Starting landing page experiments |
Publications (2)
Publication Number | Publication Date |
---|---|
US20070271501A1 US20070271501A1 (en) | 2007-11-22 |
US7739594B2 true US7739594B2 (en) | 2010-06-15 |
Family
ID=38724098
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/465,441 Active 2028-11-06 US7739594B2 (en) | 2006-05-22 | 2006-08-17 | Encoding and displaying default landing page content |
Country Status (2)
Country | Link |
---|---|
US (1) | US7739594B2 (en) |
WO (1) | WO2007137278A2 (en) |
Cited By (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090138339A1 (en) * | 2007-07-09 | 2009-05-28 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US20100042635A1 (en) * | 2008-08-18 | 2010-02-18 | Perialwar Venkataramanujam | Landing page maker |
US20110066488A1 (en) * | 2009-09-17 | 2011-03-17 | Ad Infuse, Inc. | Mobile ad routing |
US7921156B1 (en) * | 2010-08-05 | 2011-04-05 | Solariat, Inc. | Methods and apparatus for inserting content into conversations in on-line and digital environments |
US20110161161A1 (en) * | 2009-12-31 | 2011-06-30 | Google Inc. | Multi-campaign content allocation |
US8521818B2 (en) | 2010-08-05 | 2013-08-27 | Solariat, Inc. | Methods and apparatus for recognizing and acting upon user intentions expressed in on-line conversations and similar environments |
US9141719B2 (en) * | 2012-03-30 | 2015-09-22 | American Express Travel Related Sevices Company, Inc. | Systems and methods for advanced targeting |
US9454364B2 (en) | 2013-07-17 | 2016-09-27 | Accenture Global Services Limited | Mobile application optimization platform |
US9665883B2 (en) | 2013-09-13 | 2017-05-30 | Acxiom Corporation | Apparatus and method for bringing offline data online while protecting consumer privacy |
US10592920B2 (en) | 2013-09-19 | 2020-03-17 | Liveramp, Inc. | Method and system for tracking user engagement on multiple third-party sites |
US10616782B2 (en) | 2012-03-29 | 2020-04-07 | Mgage, Llc | Cross-channel user tracking systems, methods and devices |
US10621600B2 (en) | 2013-09-23 | 2020-04-14 | Liveramp, Inc. | Method for analyzing website visitors using anonymized behavioral prediction models |
US10839423B2 (en) * | 2006-06-16 | 2020-11-17 | Almondnet, Inc. | Condition-based method of directing electronic advertisements for display in ad space within streaming video based on website visits |
US10902196B1 (en) * | 2011-01-12 | 2021-01-26 | Optimizely, Inc. | Systems and methods for website optimization |
US10990686B2 (en) | 2013-09-13 | 2021-04-27 | Liveramp, Inc. | Anonymous links to protect consumer privacy |
US11157944B2 (en) | 2013-09-13 | 2021-10-26 | Liveramp, Inc. | Partner encoding of anonymous links to protect consumer privacy |
US11928708B1 (en) | 2015-10-09 | 2024-03-12 | Systemi Opco, Llc | Automated campaign configuration switching framework |
Families Citing this family (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9251520B2 (en) | 2006-02-22 | 2016-02-02 | Google Inc. | Distributing mobile advertisements |
US7861176B2 (en) * | 2006-04-13 | 2010-12-28 | Touchcommerce, Inc. | Methods and systems for providing online chat |
US8682712B2 (en) * | 2006-05-22 | 2014-03-25 | Google Inc. | Monitoring landing page experiments |
US7831658B2 (en) * | 2006-05-22 | 2010-11-09 | Google Inc. | Generating landing page variants |
US7739594B2 (en) | 2006-05-22 | 2010-06-15 | Google Inc. | Encoding and displaying default landing page content |
US7844894B2 (en) * | 2006-05-22 | 2010-11-30 | Google Inc. | Starting landing page experiments |
US8688522B2 (en) * | 2006-09-06 | 2014-04-01 | Mediamath, Inc. | System and method for dynamic online advertisement creation and management |
US20080177600A1 (en) * | 2007-01-09 | 2008-07-24 | Mccarthy Michael Sean | Methods and systems for measuring online chat performance |
US8001551B2 (en) * | 2007-04-24 | 2011-08-16 | Microsoft Corporation | Providing localized resources for client-side script execution |
US8996682B2 (en) * | 2007-10-12 | 2015-03-31 | Microsoft Technology Licensing, Llc | Automatically instrumenting a set of web documents |
US8296643B1 (en) | 2007-10-18 | 2012-10-23 | Google Inc. | Running multiple web page experiments on a test page |
US7809725B1 (en) | 2007-10-18 | 2010-10-05 | Google Inc. | Acquiring web page experiment schema |
US7895293B1 (en) * | 2008-02-25 | 2011-02-22 | Google Inc. | Web page experiments with fragmented section variations |
US7966564B2 (en) | 2008-05-08 | 2011-06-21 | Adchemy, Inc. | Web page server process using visitor context and page features to select optimized web pages for display |
US8689117B1 (en) | 2009-10-30 | 2014-04-01 | Google Inc. | Webpages with conditional content |
US10049391B2 (en) | 2010-03-31 | 2018-08-14 | Mediamath, Inc. | Systems and methods for providing a demand side platform |
CA2795128A1 (en) | 2010-03-31 | 2011-10-06 | Mediamath, Inc. | Systems and methods for integration of a demand side platform |
US10223703B2 (en) | 2010-07-19 | 2019-03-05 | Mediamath, Inc. | Systems and methods for determining competitive market values of an ad impression |
US20120173345A1 (en) * | 2010-12-30 | 2012-07-05 | Microsoft Corporation | Unified Tracking and Reporting Across Multiple Publishers |
US20120278185A1 (en) * | 2011-05-01 | 2012-11-01 | Vinod Kumar Ramachandran | Method to adapt ads rendered in a mobile device based on existence of other mobile applications |
US9390181B1 (en) | 2011-06-09 | 2016-07-12 | Amazon Technologies, Inc. | Personalized landing pages |
US9727892B1 (en) * | 2011-10-28 | 2017-08-08 | Google Inc. | Determining related search terms for a domain |
US10679224B2 (en) * | 2012-02-23 | 2020-06-09 | Deluxe Corporation | Method and apparatus for quick response codes for negotiable instruments |
EP2648106B1 (en) * | 2012-04-05 | 2019-04-03 | CoreMedia AG | Method and web content management system for A/B testing or multivariate testing of websites on computers being connected to a web content management system |
US10366401B1 (en) | 2012-06-29 | 2019-07-30 | Google Llc | Content placement optimization |
US9348490B2 (en) * | 2012-09-14 | 2016-05-24 | Ca, Inc. | User interface with configuration, registration, and runtime selection of views |
US20140215323A1 (en) * | 2013-01-26 | 2014-07-31 | Apollo Group, Inc. | Element detection and inline modification |
US9760471B2 (en) * | 2015-09-23 | 2017-09-12 | Optimizely, Inc. | Implementing a reset policy during a sequential variation test of content |
US10467659B2 (en) | 2016-08-03 | 2019-11-05 | Mediamath, Inc. | Methods, systems, and devices for counterfactual-based incrementality measurement in digital ad-bidding platform |
US10430170B2 (en) * | 2016-10-31 | 2019-10-01 | Servicenow, Inc. | System and method for creating and deploying a release package |
US10354276B2 (en) | 2017-05-17 | 2019-07-16 | Mediamath, Inc. | Systems, methods, and devices for decreasing latency and/or preventing data leakage due to advertisement insertion |
US11348142B2 (en) | 2018-02-08 | 2022-05-31 | Mediamath, Inc. | Systems, methods, and devices for componentization, modification, and management of creative assets for diverse advertising platform environments |
US10891351B2 (en) * | 2018-11-29 | 2021-01-12 | Capital One Services, Llc | Systems and methods for automatically generating and optimizing web pages |
US11182829B2 (en) | 2019-09-23 | 2021-11-23 | Mediamath, Inc. | Systems, methods, and devices for digital advertising ecosystems implementing content delivery networks utilizing edge computing |
CN111510760B (en) * | 2020-04-13 | 2022-01-14 | 北京字节跳动网络技术有限公司 | Video information display method and device, storage medium and electronic equipment |
CN111737661A (en) | 2020-05-22 | 2020-10-02 | 北京百度网讯科技有限公司 | Exception stack processing method, system, electronic device and storage medium |
Citations (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020042738A1 (en) | 2000-03-13 | 2002-04-11 | Kannan Srinivasan | Method and apparatus for determining the effectiveness of internet advertising |
US20020069255A1 (en) | 2000-12-01 | 2002-06-06 | Intel Corporation | Dynamic content delivery to static page in non-application capable environment |
US20020188508A1 (en) | 2000-11-08 | 2002-12-12 | Jonas Lee | Online system and method for dynamic segmentation and content presentation |
US20030131106A1 (en) | 2002-01-09 | 2003-07-10 | Stephane Kasriel | Web-page performance toolbar |
US6625803B1 (en) * | 1997-10-28 | 2003-09-23 | Microsoft Corp. | Automatic generation of text and computer-executable code for run-time use |
US20040123247A1 (en) | 2002-12-20 | 2004-06-24 | Optimost Llc | Method and apparatus for dynamically altering electronic content |
US20040168122A1 (en) | 2003-02-21 | 2004-08-26 | Kobipalayam Murugaiyan Senthil Nathan | System, method and computer readable medium for transferring and rendering a web page |
US6826594B1 (en) | 2000-07-15 | 2004-11-30 | Commission Junction | Method and system for remote content management of a designated portion of a web page |
US20050071755A1 (en) * | 2003-07-30 | 2005-03-31 | Xerox Corporation | Multi-versioned documents and method for creation and use thereof |
US20050071757A1 (en) | 2003-09-30 | 2005-03-31 | International Business Machines Corporation | Providing scalable, alternative component-level views |
US20050160002A1 (en) | 2003-09-04 | 2005-07-21 | Alex Roetter | Systems and methods for determining user actions |
US6934748B1 (en) | 1999-08-26 | 2005-08-23 | Memetrics Holdings Pty Limited | Automated on-line experimentation to measure users behavior to treatment for a set of content elements |
US7028001B1 (en) | 1999-12-27 | 2006-04-11 | Motorola, Inc. | System and method for measuring web page advertisement impressions |
US7031932B1 (en) | 1999-11-22 | 2006-04-18 | Aquantive, Inc. | Dynamically optimizing the presentation of advertising messages |
US7039599B2 (en) | 1997-06-16 | 2006-05-02 | Doubleclick Inc. | Method and apparatus for automatic placement of advertising |
US20060271671A1 (en) | 2004-09-14 | 2006-11-30 | Hansen Eric J | System and method for optimizing website visitor actions |
US7168040B2 (en) * | 2000-03-31 | 2007-01-23 | Fujitsu Limited | Document processing apparatus and method for analysis and formation of tagged hypertext documents |
US20070100956A1 (en) | 2005-10-29 | 2007-05-03 | Gopesh Kumar | A system and method for enabling prospects to contact sponsoring advertisers on the telephone directly from an Internet-based advertisement with just a single-click, and efficiently tracking from what Internet location (URL) the telephone contacts are initiated. |
US20070124671A1 (en) | 2005-11-29 | 2007-05-31 | Keith Hackworth | Field name abstraction for control of data labels |
US20070136255A1 (en) | 2005-11-25 | 2007-06-14 | Ineomarketing, Inc. | System and method for generating, maintaining, and rendering landing and web pages |
US20070143672A1 (en) * | 2005-12-16 | 2007-06-21 | Microsoft Corporation | Partial rendering of Web pages |
US20070150353A1 (en) | 2005-12-24 | 2007-06-28 | Rich Media Club, Llc | System and method for creation, distribution and tracking of advertising via electronic networks |
US20070271511A1 (en) | 2006-05-22 | 2007-11-22 | Chirag Khopkar | Starting landing page experiments |
US20070271501A1 (en) | 2006-05-22 | 2007-11-22 | Google Inc. | Encoding and Displaying Default Landing Page Content |
US20070271352A1 (en) | 2006-05-22 | 2007-11-22 | Chirag Khopkar | Monitoring landing page experiments |
US7523087B1 (en) | 2003-12-31 | 2009-04-21 | Google, Inc. | Determining and/or designating better ad information such as ad landing pages |
US20090150253A1 (en) | 2007-10-05 | 2009-06-11 | Williams Phillip W | System and method for facilitating advertising |
-
2006
- 2006-08-17 US US11/465,441 patent/US7739594B2/en active Active
-
2007
- 2007-05-22 WO PCT/US2007/069496 patent/WO2007137278A2/en active Application Filing
Patent Citations (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7039599B2 (en) | 1997-06-16 | 2006-05-02 | Doubleclick Inc. | Method and apparatus for automatic placement of advertising |
US6625803B1 (en) * | 1997-10-28 | 2003-09-23 | Microsoft Corp. | Automatic generation of text and computer-executable code for run-time use |
US6934748B1 (en) | 1999-08-26 | 2005-08-23 | Memetrics Holdings Pty Limited | Automated on-line experimentation to measure users behavior to treatment for a set of content elements |
US7031932B1 (en) | 1999-11-22 | 2006-04-18 | Aquantive, Inc. | Dynamically optimizing the presentation of advertising messages |
US7028001B1 (en) | 1999-12-27 | 2006-04-11 | Motorola, Inc. | System and method for measuring web page advertisement impressions |
US20020042738A1 (en) | 2000-03-13 | 2002-04-11 | Kannan Srinivasan | Method and apparatus for determining the effectiveness of internet advertising |
US7168040B2 (en) * | 2000-03-31 | 2007-01-23 | Fujitsu Limited | Document processing apparatus and method for analysis and formation of tagged hypertext documents |
US6826594B1 (en) | 2000-07-15 | 2004-11-30 | Commission Junction | Method and system for remote content management of a designated portion of a web page |
US20020188508A1 (en) | 2000-11-08 | 2002-12-12 | Jonas Lee | Online system and method for dynamic segmentation and content presentation |
US20020069255A1 (en) | 2000-12-01 | 2002-06-06 | Intel Corporation | Dynamic content delivery to static page in non-application capable environment |
US20030131106A1 (en) | 2002-01-09 | 2003-07-10 | Stephane Kasriel | Web-page performance toolbar |
US20040123247A1 (en) | 2002-12-20 | 2004-06-24 | Optimost Llc | Method and apparatus for dynamically altering electronic content |
US20040168122A1 (en) | 2003-02-21 | 2004-08-26 | Kobipalayam Murugaiyan Senthil Nathan | System, method and computer readable medium for transferring and rendering a web page |
US20050071755A1 (en) * | 2003-07-30 | 2005-03-31 | Xerox Corporation | Multi-versioned documents and method for creation and use thereof |
US20050160002A1 (en) | 2003-09-04 | 2005-07-21 | Alex Roetter | Systems and methods for determining user actions |
US20050071757A1 (en) | 2003-09-30 | 2005-03-31 | International Business Machines Corporation | Providing scalable, alternative component-level views |
US7523087B1 (en) | 2003-12-31 | 2009-04-21 | Google, Inc. | Determining and/or designating better ad information such as ad landing pages |
US20060271671A1 (en) | 2004-09-14 | 2006-11-30 | Hansen Eric J | System and method for optimizing website visitor actions |
US20070100956A1 (en) | 2005-10-29 | 2007-05-03 | Gopesh Kumar | A system and method for enabling prospects to contact sponsoring advertisers on the telephone directly from an Internet-based advertisement with just a single-click, and efficiently tracking from what Internet location (URL) the telephone contacts are initiated. |
US20070136255A1 (en) | 2005-11-25 | 2007-06-14 | Ineomarketing, Inc. | System and method for generating, maintaining, and rendering landing and web pages |
US20070124671A1 (en) | 2005-11-29 | 2007-05-31 | Keith Hackworth | Field name abstraction for control of data labels |
US20070143672A1 (en) * | 2005-12-16 | 2007-06-21 | Microsoft Corporation | Partial rendering of Web pages |
US20070150353A1 (en) | 2005-12-24 | 2007-06-28 | Rich Media Club, Llc | System and method for creation, distribution and tracking of advertising via electronic networks |
US20070271511A1 (en) | 2006-05-22 | 2007-11-22 | Chirag Khopkar | Starting landing page experiments |
US20070271501A1 (en) | 2006-05-22 | 2007-11-22 | Google Inc. | Encoding and Displaying Default Landing Page Content |
US20070271352A1 (en) | 2006-05-22 | 2007-11-22 | Chirag Khopkar | Monitoring landing page experiments |
US20090150253A1 (en) | 2007-10-05 | 2009-06-11 | Williams Phillip W | System and method for facilitating advertising |
Non-Patent Citations (15)
Title |
---|
"ProHTML ticker, Dynamic Drive," Archived Jan. 1, 2005, [online]; Retrieved from the Internet URL: http://www.dynamicdrive.com/dynamicindex2/prohtmlticker.htm, 2 pages. |
Brain, "How Internet Cookies Work," [online] [retrieved on Apr. 26, 2000]; Retrieved from the Internet URL: http://computer.howstuffworks.com/cookie.htm, 2 pages. |
International Search Report and Written Opinion from corresponding International Application No. PCT/US 07/69496, mailed Feb. 2, 2009, 10 pages. |
Raggett et al., "HTML 4.01 Specification, W3C Recommendation," [online] [retrieved on Dec. 24, 1999]; Retrieved from the Internet URL: http://www.w3.org/TR/1999/REC-html401-19991224, 389 pages. |
Snapshot from Apr. 23, 2006, Touch Clarity-Technology, "Control Groups", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060503215906/www.touchclarity.com/technology/detail.php?id=78, 1 page. |
Snapshot from Apr. 23, 2006, Touch Clarity-Technology, "Implementation", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060503215833/www.touchclarity.com/technology/detail.php?id=80, 1 page. |
Snapshot from Apr. 23, 2006, Touch Clarity-Technology, "Targeting Engine", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060503215705/www.touchclarity.com/technology/detail.php?id=76, 1 page. |
Snapshot from Apr. 23, 2006, Touch Clarity-Technology, "Visitor Profiling", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060503215758/www.touchclarity.com/technology/detail.php?id=77, 1 page. |
Snapshot from Apr. 24, 2006, Offermatica: General A/B Test Demo, "What is Offermatica?", [online] . Retrieved from the Internet URL: http://web.archive.org/web/20060422201155/www.offermatica.com/demos/ab.html, 7 pages. |
Snapshot from Apr. 24, 2006, Offermatica: Hosted A/B testing, multivariate testing, and landing page optimization tools, "What is Offermatica?", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060422201114/www.offermatica.com/whatis-1.0.html, 2 pages. |
Snapshot from Apr. 24, 2006, Offermatica: How it Works, [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060428054148/www.offermatica.com/whatis-1.1.1.html, 1 page. |
Snapshot from Apr. 27, 2006, Kefta - Dynamic Targeting - the next generation of website personalization, "At Kefta, we believe in delivering the best message at the best time", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060427132429/www.kefta.com/overview/index.html, 2 pages. |
Snapshot from Apr. 27, 2006, Kefta's Dynamic Targeting Solution, "It's about creating a meaningful and relevant experience for your visitors", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060427125859/www.kefta.com/overview/approach.html, 2 pages. |
Snapshot from Apr. 28, 2006, Optimost: Improve conversion rates on any landing page, splash page, jump page, "Maximize Conversion Rates Increase Your Revenue", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20060425212837/www.optimost.com/, 1 page. |
Snapshot from May 7, 2005, Kefta-Solutions-Customer Acquisition, "Customer Acquisition-drive more customers with greater efficiency", [online]. Retrieved from the Internet URL: http://web.archive.org/web/20051029081141/www.kefta.com/optimization-solutions/customeracquisition.html, 3 pages. |
Cited By (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10839423B2 (en) * | 2006-06-16 | 2020-11-17 | Almondnet, Inc. | Condition-based method of directing electronic advertisements for display in ad space within streaming video based on website visits |
US11836759B2 (en) | 2006-06-16 | 2023-12-05 | Almondnet, Inc. | Computer systems programmed to perform condition-based methods of directing electronic profile-based advertisements for display in ad space |
US11610226B2 (en) | 2006-06-16 | 2023-03-21 | Almondnet, Inc. | Condition-based method of directing electronic profile-based advertisements for display in ad space in video streams |
US11301898B2 (en) | 2006-06-16 | 2022-04-12 | Almondnet, Inc. | Condition-based method of directing electronic profile-based advertisements for display in ad space in internet websites |
US20110029380A1 (en) * | 2007-07-09 | 2011-02-03 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US8645186B2 (en) | 2007-07-09 | 2014-02-04 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US20110022473A1 (en) * | 2007-07-09 | 2011-01-27 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US8239242B2 (en) * | 2007-07-09 | 2012-08-07 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US8401887B2 (en) * | 2007-07-09 | 2013-03-19 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US8417556B2 (en) * | 2007-07-09 | 2013-04-09 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US20090138339A1 (en) * | 2007-07-09 | 2009-05-28 | Velti Plc | Mobile device marketing and advertising platforms, methods, and systems |
US8001107B2 (en) * | 2008-08-18 | 2011-08-16 | Cbs Systems Corp. | Landing page maker |
US20100042635A1 (en) * | 2008-08-18 | 2010-02-18 | Perialwar Venkataramanujam | Landing page maker |
US20110066488A1 (en) * | 2009-09-17 | 2011-03-17 | Ad Infuse, Inc. | Mobile ad routing |
US8539067B2 (en) * | 2009-12-31 | 2013-09-17 | Google Inc. | Multi-campaign content allocation based on experiment difference data |
US20110161407A1 (en) * | 2009-12-31 | 2011-06-30 | Google Inc. | Multi-campaign content allocation |
US20110161161A1 (en) * | 2009-12-31 | 2011-06-30 | Google Inc. | Multi-campaign content allocation |
US9460449B2 (en) | 2009-12-31 | 2016-10-04 | Google Inc. | Multi-campaign content allocation |
US8554619B2 (en) | 2009-12-31 | 2013-10-08 | Google Inc. | Multi-campaign content allocation |
US8521818B2 (en) | 2010-08-05 | 2013-08-27 | Solariat, Inc. | Methods and apparatus for recognizing and acting upon user intentions expressed in on-line conversations and similar environments |
US8271583B2 (en) | 2010-08-05 | 2012-09-18 | Solariat, Inc. | Methods and apparatus for inserting content into conversations in on-line and digital environments |
US8782155B2 (en) | 2010-08-05 | 2014-07-15 | Genesys Telecommunications Laboratories, Inc. | Methods and apparatus for inserting content into conversations in on-line and digital environments |
US9621624B2 (en) | 2010-08-05 | 2017-04-11 | Genesys Telecommunications Laboratories, Inc. | Methods and apparatus for inserting content into conversations in on-line and digital environments |
US9948595B2 (en) | 2010-08-05 | 2018-04-17 | Genesys Telecommunications Laboratories, Inc. | Methods and apparatus for inserting content into conversations in on-line and digital environments |
US10567329B2 (en) | 2010-08-05 | 2020-02-18 | Genesys Telecommunications Laboratories, Inc. | Methods and apparatus for inserting content into conversations in on-line and digital environments |
US7921156B1 (en) * | 2010-08-05 | 2011-04-05 | Solariat, Inc. | Methods and apparatus for inserting content into conversations in on-line and digital environments |
US10902196B1 (en) * | 2011-01-12 | 2021-01-26 | Optimizely, Inc. | Systems and methods for website optimization |
US10616782B2 (en) | 2012-03-29 | 2020-04-07 | Mgage, Llc | Cross-channel user tracking systems, methods and devices |
US9141719B2 (en) * | 2012-03-30 | 2015-09-22 | American Express Travel Related Sevices Company, Inc. | Systems and methods for advanced targeting |
US20150356103A1 (en) * | 2012-03-30 | 2015-12-10 | American Express Travel Related Services Company, Inc. | Systems and methods for advanced targeting |
US10437709B2 (en) | 2013-07-17 | 2019-10-08 | Accenture Global Services Limited | Mobile application optimization platform |
US9454364B2 (en) | 2013-07-17 | 2016-09-27 | Accenture Global Services Limited | Mobile application optimization platform |
US10990686B2 (en) | 2013-09-13 | 2021-04-27 | Liveramp, Inc. | Anonymous links to protect consumer privacy |
US11157944B2 (en) | 2013-09-13 | 2021-10-26 | Liveramp, Inc. | Partner encoding of anonymous links to protect consumer privacy |
US9665883B2 (en) | 2013-09-13 | 2017-05-30 | Acxiom Corporation | Apparatus and method for bringing offline data online while protecting consumer privacy |
US10592920B2 (en) | 2013-09-19 | 2020-03-17 | Liveramp, Inc. | Method and system for tracking user engagement on multiple third-party sites |
US10621600B2 (en) | 2013-09-23 | 2020-04-14 | Liveramp, Inc. | Method for analyzing website visitors using anonymized behavioral prediction models |
US11928708B1 (en) | 2015-10-09 | 2024-03-12 | Systemi Opco, Llc | Automated campaign configuration switching framework |
Also Published As
Publication number | Publication date |
---|---|
US20070271501A1 (en) | 2007-11-22 |
WO2007137278A2 (en) | 2007-11-29 |
WO2007137278A3 (en) | 2009-05-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7739594B2 (en) | Encoding and displaying default landing page content | |
US7831658B2 (en) | Generating landing page variants | |
US7844894B2 (en) | Starting landing page experiments | |
US8682712B2 (en) | Monitoring landing page experiments | |
US11526253B2 (en) | System and method for design and dynamic generation of a web page | |
US20170132182A1 (en) | Use of Method Overrides for Dynamically Changing Visible Page Content | |
US7487435B2 (en) | Method and system for conducting an on-line survey | |
US20180011942A1 (en) | Url shortening computer-processed platform for processing internet traffic | |
US9916293B2 (en) | Module specification for a module to be incorporated into a container document | |
US9268547B2 (en) | Conditional logic for delivering computer-executable program instructions and content | |
US20110295689A1 (en) | Methods and systems to modify advertising and content delivered over the internet | |
US7730082B2 (en) | Remote module incorporation into a container document | |
US8595097B2 (en) | Automatic ad group creation in a networked advertising environment | |
US20120203651A1 (en) | Method and system for collaborative or crowdsourced tagging of images | |
US8234627B2 (en) | System and method for expediting information display | |
RU2757546C2 (en) | Method and system for creating personalized user parameter of interest for identifying personalized target content element | |
US20180033051A1 (en) | Interest based delivery system and method in a content recommendation network | |
WO2007070404A2 (en) | Customized container document modules using preferences | |
US20210312474A1 (en) | Dynamic General Configurability of Web Pages To Optimize Content for Search Performance and User Experiences | |
US20160019195A1 (en) | Method and system for posting comments on hosted web pages | |
US20170031882A1 (en) | Web Page Profiler | |
US20220129509A1 (en) | Dynamic configurability of web pages | |
AU2014229063A1 (en) | Use of method overrides for dynamically changing visible page content | |
US20140280816A1 (en) | Browser cookie analysis and targeted content delivery | |
US10417318B2 (en) | Treatment controller |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:VASILIK, KENNETH ERIC;REEL/FRAME:018302/0470Effective date: 20060817Owner name: GOOGLE INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:VASILIK, KENNETH ERIC;REEL/FRAME:018302/0470Effective date: 20060817 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
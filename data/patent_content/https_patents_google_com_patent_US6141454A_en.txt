US6141454A - Methods for data compression and decompression using digitized topology data - Google Patents
Methods for data compression and decompression using digitized topology data Download PDFInfo
- Publication number
- US6141454A US6141454A US08/742,299 US74229996A US6141454A US 6141454 A US6141454 A US 6141454A US 74229996 A US74229996 A US 74229996A US 6141454 A US6141454 A US 6141454A
- Authority
- US
- United States
- Prior art keywords
- composite
- lines
- road
- line
- composite line
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T9/00—Image coding
- G06T9/20—Contour coding, e.g. using detection of edges
Definitions
- This invention is generally directed to the field of Geographic Information Systems (GIS), and specifically to the storage and processing of digitized topology data in mobile, embedded computing devices, and to the transmission of such data to remote sites.
- GIS Geographic Information Systems
- the high volumes of data needed may limit the size of the mapped geographic area to be stored and distributed on data storage media. This is an important factor, considering the high cost of large semiconductor memory and the mechanical limitations of using devices with rotating media in a mobile environment.
- Uncompressed road-map data may be stored in mass-storage media such as hard disk, compact disk, or tape.
- the central processing unit (CPU) on the embedded system is likely to be idle during much of the search and transfer time required. If the road-map data on the storage medium were to be compressed by a certain factor, the block of such data would be commensurably smaller in size, and the search for and transfer time of these data to the embedded system would be reduced.
- the otherwise idle CPU can be used to carry out the decompression of the data, provided the CPU is of sufficient computational capacity.
- a road line is typically approximated by a sequence of linear road segments. These road segments are usually represented by data structures that include at least two pairs of position coordinate values, one pair for each end of the road segment. Optimization in memory usage is achieved by:
- This reference position is usually associated with a selected geographical area. It is well known that road map coordinates relative to a reference position can be encoded in shorter data fields without sacrificing any precision. Such representations of road-map coordinate data have been reported by commercial map database vendors, including Navtech and Etak.
- Lempel-Ziv compression There exist other road-map data compression devices and methods, which exploit repetitive bit patterns in unstructured binary data, build a dictionary of representative repetitive patterns, and then replace each instance of an observed repetitive pattern with the corresponding index of its closest representative in the dictionary.
- This approach is commonly referred to as the Lempel-Ziv compression.
- Such methods make no use of known characteristics about the structure of the road-map data, such as map topology and road attributes; consequently, their effectiveness is limited. Compression ratios attained by such methods typically range from 2 to 3, and sometimes they are even lower.
- Another disadvantage of the Lempel-Ziv method is that the compressed data it produces cannot always be accessed directly by a particular application, because the orthogonal substitution of binary patterns may prevent the application from recognizing meaningful structures.
- the Lempel-Ziv compression may replace a binary pattern, the first part of which is a portion of a coordinate value and the second part of which is a partial road attribute value. If the whole pattern is replaced with a single index value, neither the coordinate value nor the road attribute value can be recognized without running the appropriate decompression algorithm.
- compressed data has to be decompressed in its entirety before an application can search for the desired portion of the map data. This requirement may increase the computational cost of decompression, as well as the decompression buffer size. Otherwise, an alternative approach could be used to perform a meaningful partitioning of the map data into parcels and then, to perform a Lempel-Ziv compression on each parcel separately. It could be very difficult to anticipate an optimal partitioning of the map data because each application may access the data in a different and unpredictable manner. Examples of such applications are map-matching algorithms that track the movement of a vehicle along road network, route-planning algorithms or map display programs. The partitioning could also further limit the compression ratio.
- Kasser in German patent DE 68907403 assigned to Bosch GmbH, replaced the linear approximation of route segments by curved segments defined by approximate radii of curvature.
- many non-linear road segments have complex shapes which could be much more efficiently encoded if the fixed radius curvature was not the only repeatedly used type of shape for compression. So, the practicality of Kasser approach is limited.
- White and Loughmiller of Etak, Inc. disclosed another solution whereby the mapped area is split into pieces called "carriers" along natural boundary lines, in order to minimize the number of cases when a road line had to span several, separately represented map areas. They defined a model for a hierarchical nesting of these mapped areas which, unfortunately, can be conveniently and efficiently applied only for specific and limited topologies.
- Chan used techniques for compressed representation of cultural terrain features such as rivers, lakes, and natural rock-formations as well as man-made cultural features such as roads, towns, and significant structures on three-dimensional map surfaces in order to aid aircraft and other vehicle navigation. Chan uses differential encoding to identify subsequent points on a line. This technique, however, is not effective for compressing complex networks of intersecting road lines of a variety of shapes.
- Cozart Another technique involving interpolation of three-dimensional surfaces was published by Cozart, in the report AFOSR-TR-83-1333 of the Department of Mathematics & Computer Science, The Citadel, Mathematical & Information Sciences Directorate, Air Force Office of Scientific Research.
- Cozart derived bicubic polynomials to represent the terrain surface over small subgrids. He defined a rectangular grid with a constant grid spacing that yielded a number of data points on the vertical and horizontal boundary of a square subgrid. The elevation data on the boundary line was then interpolated to extend it smoothly into the subgrid.
- Heaton used a token to signify that the coordinates of similar polygons are all separated by a given distance. He also used a data compression technique based on the observation that circuits were comprised of arrays of similar polygonal shapes having the same orientation. Furthermore, he eliminated the redundancy in representing the coordinates of the vertices of square shapes by replacing a repeated coordinate value for two adjacent vertices with a single value and a special token. Heaton reduced the data field length for representing the coordinate position of a vertex of a polygon by replacing the distance between the vertex and a common reference point with a relative distance value between the vertices of two adjacent polygons.
- Heaton's invention is restricted to very specific and limited types of shapes and repetitions. It has more significance in the domain of integrated circuit design with a higher degree of regularity in its topology than the domain of road maps or similar structures.
- FIG. 1 is a flowchart of a method in accordance with the present invention
- FIG. 2 is a flowchart of one of the steps of FIG. 1;
- FIG. 3 is a flowchart of one of the steps of FIG. 1;
- FIG. 4 is a diagram of an exemplary road map in accordance with the present invention.
- FIG. 5 is a diagram of a portion of FIG. 4;
- FIG. 6 is a diagram of a portion of FIG. 4;
- FIG. 7 is a diagram of another portion of FIG. 4;
- FIG. 8 is a diagram of still another portion of FIG. 4;
- FIG. 9 is an illustration of a calculation of an intersection of several road segments in accordance with the present invention.
- FIG. 10A is a flowchart of an alternate method in accordance with the present invention.
- FIG. 10B is another flowchart of a method for implementing the method of FIG. 10A;
- FIG. 10C is a flowchart of a method for implementing the method of FIG. 10B;
- FIG. 11 is a flowchart of a method for implementing the method of FIG. 10A;
- FIG. 12 is an illustration of three different ways of representing a composite road line in accordance with the present invention.
- FIG. 13 is an illustration of alternate representations of a road map in accordance with the present invention.
- FIG. 14 is an illustration of the use of a straight line approximation of a road map in accordance with the present invention.
- FIG. 15 is an illustration of the use of shape type representation of a road map in accordance with the present invention.
- FIG. 16 is a diagram illustrating the fields representing each road segment in accordance with the present invention.
- FIG. 17 is a exemplary table of shapes in accordance with an embodiment of the present invention.
- FIG. 18 is a table containing data representing the road segments of a road map in accordance with an embodiment of the present invention.
- FIG. 19 is a flowchart of a method in accordance with an embodiment of the present invention.
- FIG. 20 is a flowchart of a step of the method of FIG. 19;
- FIG. 21 is a flowchart of a step of the method of FIG. 19;
- FIG. 22A is diagram of a road map to be represented by another embodiment of the present invention.
- FIG. 22B is a diagram of a compressed data structure representing a road line depicted on FIG. 22A
- FIG. 23 is a flowchart of a method in accordance with another embodiment of the present invention.
- FIG. 24 is a flowchart of a step of the method of FIG. 23;
- FIG. 25 is a flowchart of a step of the method of FIG. 23;
- FIG. 26 is a flowchart of a method utilizing the methods of FIGS. 23-25;
- FIG. 27 is an illustration of another case described in the method of FIG. 23;
- FIG. 28 is an illustration of yet another embodiment of the present invention.
- Table 1 is an illustration of the storage savings of one embodiment of the present invention compared to a prior art compression method.
- the flow-chart of FIG. 1 illustrates a high-level method for compressing the essential information of the topology of a road network.
- Digitized road map data of a road network is provided as a collection of road segments connected to each other via nodes, wherein, generally, each node connects at least two adjacent road segments. The exception is a terminal segment, where one or both nodes do not connect to any other segment.
- Sequences or chains of connected road segments are combined into single, composite road segments or composite road lines, thus reducing the overall number of road segments needed to represent the mapped area.
- the composite road segments are typically defined by the coordinates of their end points. All intermediate nodes in the original chain of connected segments from which the composite segment was derived are eliminated from storage. In other words, the formation of composite segments eliminates the need to explicitly specify the nodes or intersections of the road network in terms of position coordinates. In this sense, the set of composite segments represents compressed road-map data. The missing nodes may be numerically derived by mathematically calculating the intersections among the composite road segments during decompression.
- the compressed road-map data consists of a collection of composite road lines that fall within the parcel;
- the uncompressed data consists of the derived road-map segments determined from the calculated intersections among the composite road lines and their end points.
- the subdivision into parcels is based on several criteria, including geographical size, number of composite road lines required to span the parcel, and the use of natural boundary road lines to limit the fragmentation of composite road lines among adjacent parcels, as is the case in prior art published in White and Loghmiller's patent.
- Parcels provide an effective means of road-map data localization based on the geographical region of interest and as dictated by the particular application being employed.
- FIG. 1 illustrates the high level process for converting the original uncompressed road-map database of elementary road segments of a given geographical area, such as a parcel, to a compressed version involving composite road lines built from a plurality of interconnected road segments.
- Step 10 begins by setting the degree of freedom, DF, to a predetermined minimum tolerance value, DFmin DF determines the tolerated heading change among the connected elementary road segments, or simply road segments, which are to comprise any one of a plurality of composite road lines which will span the road-map network of the given parcel.
- a given composite road line is built by starting with a road segment, RS, randomly selected from the uncompressed database. This is done in Step 12.
- Step 14 attempts to build a given composite road line, CRL, by starting with the randomly selected segment from Step 12 and subsequently adding interconnected road segments from the original road-map database, while conforming to the DF tolerance value set in Step 10.
- Step 14 is illustrated in detail in FIG. 2.
- each such road line, CRL is classified and enrolled into one of four distinct sets, such that lines within at least two of such sets do not intersect one another.
- each of at least two sets contains composite road lines which do not intersect one another, thus eliminating the need for unnecessary computation.
- This classification process of composite road lines is carried out in Step and illustrated in detail in FIG. 3.
- Step 18 removes from the original uncompressed road-map database the road segments that were used to build up each composite road line, CRL.
- Step 20 checks if there are any road segments left in the uncompressed database. If there are road segments remaining, the process loops back to Step 12; otherwise, the process continues on to Step 22.
- Step 22 constitutes a preliminary decompression of the original road-map database in terms of the composite road lines derived with the given degree of freedom, DF.
- Step 24 determines if the quality of the decompressed road-map database is satisfactory. This determination is preferably done by actually decompressing the compressed data and checking that no useful road-map information is missing or misrepresented in the reconstructed road-map database of the given parcel. The details of this evaluation are illustrated below in conjunction with FIG. 9.
- Step 28 discards the current compressed road-map database and adopts the previous one.
- This iterative process is designed to produce a maximally compressed map by allowing the maximum tolerable degree of freedom, DF, which preserves all useful information at an acceptable level of quality.
- FIG. 2 illustrates the detailed process of Step 14 in FIG. 1; it is a preferred method of forming composite road lines from candidate road segments, RS.
- Step 30 starts with road segment RS by assigning it to the right part of CRL in order to start building the right side of the composite road line, CRL.
- the attributes of RS also will become the attributes of CRL.
- Step 32 identifies clusters of road segments, RSrs, connected to the right end of CRL.
- Step 34 determines if the road heading deviation of any of the RSrs from that of CRL is less than the current value of DF.
- Step 36 asks whether the tolerated RSrs, those whose headings are within FD from that of CRL, have the same road attributes as CRL. If the answer to Step 36 is yes, Step 38 removes from the tolerated RSrs any that have different road attributes from those of CRL.
- Step 40 selects from the remaining the RSr segment with the least road heading deviation from that of CRL and attaches that segment to the right of CRL.
- the CRL road heading is considered to be equal to the road heading of the last, selected segment This process then loops back to Step 32 until the answer to Step 34 or Step 36 is no.
- Step 42 assigns road segment RS to the left part of CRL in order to start building the left side.
- Step 44 determines if the right end of the newly formed composite road line, from Steps 32-40, ends at an intersection. If Step 44 returns no, Step 46 removes the last road segment from the right end of CRL until it ends at an intersection unless it was representing a connection to a street dead-end from the last intersection of that street. This is necessary in order to remove potential shaped segment portions at the end of the composite road line.
- Step 48 selects segment cluster, RS1s, connected to the left end of CRL. This process proceeds similarly to Steps 32 to 40, except that it extends CRL to the left.
- Step 50 determines if the road heading deviation of any of the RS1s from that of CRL is less than the current value of DF. If Step 50 returns yes, Step 52 determines if any of the tolerated RS1s segments have the same road attributes as CRL. If Step 52 returns yes, Step 54 removes from the tolerated RS1s any that have different road attributes from those of CRL. Step 56 selects, from the remaining segments, the RS with the minimum road heading difference from that of CRL and attaches that segment to the left end of CRL.
- Step 58 determines if the left end of the newly formed composite road line, CRL, ends at an intersection. This is necessary in order to remove potential shape segment portions at the end of the composite road line.
- Step 60 removes road segments from the left end of CRL until it ends at an intersection unless it was representing a connection to a street dead-end from the last intersection of that street.
- step 62 determines if CRL has a non-zero length. If Step 62 returns yes, Step 64 marks the CRL as completed. If Step 62 returns no, Step 66 concatenates road segments connected to the right end of CRL until an intersection is reached and marks the resulting composite road line as shape-segment road line.
- FIG. 3 illustrates the details of Step 16 in FIG. 1, a preferred method for classifying each composite road line, CRL, into one of four sets.
- Step 68 determines if a given CRL was marked as a shape-segment road line due to excessive heading changes among elementary road segments between two adjacent intersections. In other words, Step 68 checks if CRL was marked as a shape-segment road line in Step 66 of FIG. 2. If Step 68 returns yes, Step 70 inserts CRL into the shape-segment set. If Step 68 returns no, Step 72 determines if the heading of the CRL is within the heading range of the East-West set.
- Step 72 determines if there are any composite road lines already in the East-West set that intersect with the CRL. If Step 74 returns no, Step 76 classifies the CRL in the East-West set. If step 72 returns no, Step 78 determines if the heading of the new CRL is within the heading range of the North-South set. If Step 78 returns yes, Step 80 determines if there are composite road lines in the North-South set that intersect the CRL.
- Step 80 If step 80 returns no, Step 82 inserts the CRL into the North-South set. If Step 74 returns yes, or Step 78 returns no, or Step 80 returns yes, Step 84 inserts the CRL in the mixed-direction set.
- the classification of the composite road lines into non-intersecting sets of road lines could be further optimized after this initial classification process is completed.
- the largest size set could be enlarged by acquiring road lines from the others under the criterion of no intersection within the set itself.
- the sets could contain a mixture of composite road lines that belong to a different initial classification.
- the only important criterion for creating the composite road line sets is maximum separability of nonintersecting composite road lines in order to minimize the number of iterations needed in the decompression algorithm for matching pairs of potentially intersecting composite road lines (see FIG. 10A).
- FIGS. 1-3 can better be understood with reference to an example spanning FIGS. 4-8.
- FIG. 4 illustrates a parcel of a road-map network to be compressed by the method described above.
- FIGS. 5-8 illustrate the resulting four sets of composite road lines, which are the compressed road-map data to be used by the decompression process of FIG. 1 to compute the intersections and thus, reconstruct the original uncompressed road-map database within an acceptable accuracy.
- FIG. 5 shows the East-West set of composite road lines having no intersections among them.
- FIG. 6 shows the set of composite road lines oriented in the North-South direction with no intersections among them.
- FIG. 7 shows the set of composite road-lines that could not be placed in any of the two previous sets because they would intersect with at least one of the composite road lines in both of these sets.
- This set of composite road lines is preferably called the mixed-direction set.
- FIG. 8 shows the set of the so-called shape-segment road lines.
- the shape-segment road lines have significant road heading changes among the elementary road segments from which they are composed. Consequently, they, unlike the other three sets, cannot be approximated by straight-line composite segments. Also, shape-segment road lines are designed to span two adjacent intersections; that is, they have no intersections within themselves.
- the composite road-lines are represented as straight-lines if the heading variance of their component elementary road segments does not mask information critical to the particular road-map data processing application being used.
- the threshold of discarding the heading variance is tuned by incremental compression.
- the compression synthesis starts with a minimum degree of freedom of road-heading change to qualify a road segment for inclusion in a composite road line. Then, more and more variance is tolerated.
- the decompression is attempted before a more aggressive straight-line composition is performed (Steps 12-26). If the decompressed topology exhibits a loss of significant information, the iterative compression process stops and it reverts back to the previous degree of freedom value where the information loss was tolerable.
- intersection derivation specifically, the production of three intersections, when only a single one is present in the original map.
- FIG. 9 Such a scenario is illustrated in FIG. 9, where, due to substantial heading variance in the component road segments of the three composite road lines, 100, 102, and 104, the original single intersection 98 will give rise to three intersections, 98, 106, and 108, after decompression. Step 24 will return a no in this case.
- the decompression method of FIG. 10A uses the circle of intersection unification 110 around the original intersection 98 to signify the error tolerance. All intersections falling inside the circle 110 are considered as a single intersection. Since the two intersections 106 and 108 with the diagonal composite line 104 do not fall within the circle 110, the decompression method comes to an erroneous conclusion of having three different intersections.
- FIG. 9 also shows the approach for correcting the situation of erroneous intersections in the above scenario.
- the iterative compression method in FIG. 1 reverts back to the previous, smaller degree of freedom value, the heading change in the diagonal composite line 104 at this intersection is not tolerated and the diagonal composite line 104 is effectively broken into two separate composite lines 112 and 114.
- the decompression method will compute intersections that fall within the unification circle 98 and will take them as a single unique intersection consistent with the original map.
- Step 22 runs the decompression method of FIG. 11 in a special compression verification mode.
- Step 126-3 below is performed in this compression verification mode, the intersection results are checked against the original uncompressed map data. If multiple intersections fall within unification circles centered around actual intersections, the compression is considered valid; if it fails, the action in FIG. 9 takes place to correct the situation.
- Step 120 finds all intersections between all the composite road lines of the North-South and East-West sets.
- Step 122 finds all intersections between all the composite road lines of the North-South and mixed sets.
- Step 124 finds all intersections between all the composite road lines of the East-West and mixed sets.
- Step 125 finds all intersections among all the composite road lines of the mixed set. No other combinations of sets need to be considered, since, by construction, the self intersections of the North-South and East-West sets will yield none.
- Step 125a determines if one or both endpoints of the shape segments represent an intersection with a composite road line of another set. For this purpose, the distance between each shape segment endpoint and each composite road line is computed. If such a computed distance is shorter than the unification circle radius, the shape segment endpoint is considered to be anchored on the composite road line thus forming an intersection. Step 126 unifies all duplicate intersections, within unification circles, into unique intersections, as explained in detail below with reference to FIGS. 10B and 10C.
- Step 126 is shown in detail in FIG. 10B.
- Step 126-1 assigns the first intersection, I1, to Ii.
- Step 126-2 then draws a circle of unification 110 around Ii.
- Step 126-3 determines if there is more than one intersection within the circle 110. If Step 126-3 returns yes, Step 126-4 adds Ii to the list of intersections Ln, where n is the number of intersections within the circle 110. After Step 126-4 or if Step 126-3 returns no, Step 126-5 determines if Ii is the last intersection. If Step 126-5 returns no, Step 126-6 assigns the next intersection to Ii and loops back to Step 126-2.
- FIG. 10C presents the details of Step 126-9 of FIG. 10B.
- Step 127-1 assigns the first intersection, I1, to Ii within Lj.
- Step 127-2 calculates the coordinates of a new node which is the center point of all the intersections in the circle 110 around Ii.
- Step 127-3 replaces all j intersections in the circle 110 with the newly defined center point node.
- Step 127-4 determines if Ii is the last intersection of Lj and if yes the routine ends. If step 127-4 is no, step 127-5 assigns the next intersection to Ii and loops back to step 127-2.
- Step 130 takes a composite road line segment from each of two sets, A and B.
- These two CRLs, CRLA and CRLB are defined geometrically by their end points, ⁇ x11,y11 ⁇ , ⁇ x12,y12 ⁇ and ⁇ x21,y21 ⁇ , ⁇ x22,y22 ⁇ , respectively.
- Step 131 determines whether the CRLs are likely to intersect. Being of finite extent, this determination is made by showing if their bounding boxes overlap.
- a bounding box is defined to be the smallest rectangle that fully contains the segment. Simply, it is the rectangle, two vertices of which are the end points of the segment. Step 131 determines overlap by checking up to four inequalities disjunctively, as shown.
- Step 131 returns no.
- the consequent action is to proceed to Step 135, which checks if there are any CRLs left to choose from in Set 2. If Step 135 returns yes a new CRL is chosen from Set 2, the process loops back to Step 130, and repeats.
- Step 131 If all the inequalities in Step 131 fail, the bounding boxes do overlap, and there is a chance that the two segments might intersect. In this case Step 131 returns yes and the process proceeds to Step 132.
- an intersection is computed for two lines that coincide with the two CRLs at hand.
- Step 133 determines if the intersection falls on both CRLs involved. If it returns no, there is no real intersection, and nothing is done. If it returns yes, the intersection is sent to Step 134, where it is organized in a list associated with the current CRL1.
- Step 135 returns no, which prompts Step 137 to check if any CRLs remain in Set 1. If Set 1 still contains CRLs, the current one is discarded and a new one takes its place. At this point, Set 2 is reinstated to its original state, and the process repeats with the new CRL1.
- Step 137 returns no, all intersection have been found, and the process terminates.
- Step 28 of FIG. 1 the last compressed map is discarded and the previous one is used that was compressed with a lesser degree of freedom, DF. Doing this assures the required quality of the entire map but it may not be optimal. As those skilled in the art will appreciate, for each particular compression application, different optimality criteria may apply. For some applications the size of the compressed database might be of utmost importance, whereas the decompression time, the size, and the complexity of the decompression program might be of little concern. For other applications, trading off more CPU cycles or decompression program complexity for an even higher compression ratio might not be an option.
- Step 28 in FIG. 1 could produce significantly different compression performance. That is, Step 28 need not be so strict as to discard the entirety of a highly compressed map on the basis of some local discrepancies, such as the occasional creation of multiple intersections upon decompression, when in reality there is only one. For example, a higher degree of freedom, DF, may be employed to achieve better compression performance, if the process could also apply techniques to eliminate offending side effects of the subsequent decompression.
- DF degree of freedom
- a case in point is the corrective action demonstrated in FIG. 9, where the single composite road line, 104, is intentionally broken into two road lines, 112 and 114. These two road lines could be represented as separate composite road lines with end points that include the common intersection 98. It is also possible to combine these two road lines into a polyline which would be represented as a sequence of three points, the common point being stored only once. The storage savings would be even more significant if the polyline were to include three or more straight composite road lines. Augmented only slightly, the decompression process could be made to accommodate polylines. Simply, it would compute intersections between two polylines by applying the intersection computation process to individual composite road line segments comprising the two polylines.
- FIG. 12 shows three alternative ways for efficiently compressing contiguous composite road lines 150, 152, 154, and 156 by representing them collectively as a polyline. While retaining their individual variable headings, the component road lines can collectively represent the single road line, 158, in the form of a polyline defined by the sequence of points, (158, 160, 162, 164, 166, and 168). Consequently, the individual composite road lines need not be defined by their own end points; this would mean wasteful duplication of intermediate or shape points, 162, 164, and 166. As mentioned above, composite polylines would enhance overall compression performance over an approach limited to straight composite road lines, and decompression could be accommodated with a minor variation to the process presented in FIG. 11.
- run length encoding by specifying a distance from the first end point to the first shape point, followed by distances between consecutive shape points.
- shape points are known to lie on certain road lines, their coordinates may be found by computing the intersection of appropriate arcs. If the road lines intersecting two consecutive shape points happen to be nearly parallel separated by a known distance, the location of the shape points may be computed via the Pythagorean theorem.
- FIG. 13 illustrates the combined use of straight composite road lines with lossless run-length encoding for the rest of the composite road lines. If spacing is defined for a composite road line as the distance values between its adjacent intersections, the corresponding shape points are reconstructed by locating and defining the intersection points. If no spacing values are defined for a composite road line, a straight line between the two end points is assumed. The intersections between the straight composite road lines and the zig-zag composite road lines can be easily reconstructed by using
- the distance value (spacing) between the closest known intersection (end-point) and the unknown intersection point is the distance value (spacing) between the closest known intersection (end-point) and the unknown intersection point.
- the composite road lines produced by the method of FIG. 1 will not have to terminate when the first road line degree of freedom, DF, value is too large. Instead, the process will continue as long as the compressed storage requirement continues to decrease from one iteration to the next. When the storage stops decreasing substantially or increases, the process will terminate. Alternatively, the process may terminate when the DF value reaches a predetermined maximum, which might not be tolerated by a particular application program, perhaps because the heading information was substantially corrupted to cause the application to malfunction.
- the decompression time can also be reduced by adding the number of intersections expected for a road line to the end of its data structure. This may significantly reduce the number of iterations of the method shown in FIG. 11 for reproducing the intersections. If the number of intersections reaches the specified count and these intersections are sufficiently far apart to be different from duplicate intersections, then all further iterations for locating additional intersecting lines can be saved.
- Table 1 shows the storage requirements for a typical Chicago-area road-map parcel before and after composite road line compression.
- the uncompressed data is represented in segment/node data structures, while the compressed data in represented is composite line/end-point data structures.
- the compression numbers shown in Table 1 reflect the results obtained by invoking an implementation of the compression method described in FIG. 1.
- the compressed database, CDB requires 2,041,174 bytes of storage compared to 14,089,712 bytes needed to store the original uncompressed database, UDB.
- polylines or zig-zag lines can be employed to gain from the first two methods described above. Another method is described below, in section 2.0, to much more efficiently utilize both of the first two opportunities at the same time. Section 3.0 describes yet another method to gain from the third method.
- the preceding description described how to reduce the number of road lines in an area by replacing a straight, connected sequence of road segment lines with a single, straight composite road line.
- the major obstacle to further reducing the number of road lines is the loss of precision when larger differences in the road-heading of adjacent road segments are ignored.
- the challenge is to replace all sequences of connected road segments with single lines even if the lines come in a variety of shapes and sizes. This can be accomplished with minimal additional cost in terms of compression complexity or computation time or memory requirements for defining the shape of the composite road lines.
- This additional cost of shape definitions should be significantly less than the gain resulting from the elimination of the cost of the representation of the end-point definitions of the additional straight composite road-lines.
- This method classifies shaped road lines into a number of predetermined shape categories. This is illustrated in FIGS. 14, 15, 16, and 17.
- a map representation 198 based on an elementary straight line segment approximation approach is illustrated in FIG. 14.
- This linear approximation was also used in the above described, composite road line classification method for the set of shaped segments, an example of which is illustrated in FIG. 8.
- the uncompressed form of the map is made up of shaped road lines represented by piecewise-linear curves involving interconnected straight-line or elementary road segments.
- the number of road segments 200 and the number of nodes 202 connecting the road segments 200 is high since a whole sequence of segments 200 is needed to represent a line even if no intersection exists on that line.
- the full description of the linear approximation is repeated for each line even if several lines have an identical shape.
- FIG. 15 illustrates a significant reduction in storage obtained by applying a shape classification compression approach. All road lines 204 between the intersections 206 are represented by a single line regardless of their shape and orientation. The number of road segment lines 204 and the number of nodes 206 connecting them are significantly reduced from those of FIG. 14.
- FIG. 16 delineates the storage representation in the compressed image.
- Each shaped composite road line 204 is represented by one of its end-points and three attributes defining its shape, scale, and orientation, respectively. Road lines having identical shapes are marked by the same "shape type code" even if they are of different size and orientation.
- a Shape Type Directory 210 as shown in FIG. 17, is need to decompress SCRLs. Each entry in the directory corresponds to a unique shape class of appropriate precision and marked by a corresponding shape type code.
- FIG. 18 illustrates an exemplary shape definition in the Shape Type Directory 210.
- the shape definition is called the "nominal definition" because it relates to a nominal shape, scale, and orientation of the shape type.
- Each shape type (or shape class) is defined by its piecewise linear approximation; i.e., by the relative coordinates of its shape-points. The lines connecting the shape-points are presumed to be straight.
- the piecewise linear approximation used in the Shape Type Directory 212 of FIG. 18 is equivalent to a similar shape in the original map, where it was used to represent curved road segments between adjacent intersections. Such an approximation was used in the set of the so called "shaped segments". The difference here is that by using the Shape Type Directory 212, the shape is defined only once regardless of how many such curved road segments were in the mapped area. Without this shape classification approach, the same piecewise linear approximation would have to be specified for each occurrence of any given shape, resulting in unnecessary redundancies in the decompressed database.
- a further way of improving the gain from the above described, shape-classification based compression approach is to apply it to all road lines and not just to curved portions of the road lines between intersections. Consequently, when forming composite road lines as described above, the iterative Degree of Freedom relaxation does not simply mean tolerating larger and larger differences in the road headings between two, adjacent straight-line road segments. What it also implies is that a higher degree of dissimilarity is tolerated between the shape of a shaped composite road line (SCRL) and a corresponding classified shape type.
- SCRL shaped composite road line
- the composite road line intersection computation algorithm depicted in FIG. 11 will change if we apply shaped composite road lines. The computation becomes more complex but can still be accomplished by applying known methods.
- each of the intersecting SCRLs would have to be first decomposed into its component straight segments. If, on the other hand, the shape of the intersecting SCRL is defined by one or more equations, the intersection computation may be carried out using methods from analytic geometry. Then, the intersections of a given SCRL may be found, by computing the intersections of its component straight line segments using the procedure of FIG. 11.
- FIGS. 19-21 illustrate a preferred method for forming the SCRLs by matching them against the Shape Type Directory 212.
- the first three different sets of Composite Road Lines are also maintained here in order to reduce the search and intersection computation times during decompression.
- the fourth set that was reserved for the shaped segments only, is eliminated here since all Composite Road Lines can have shapes different from the straight line; thus, no special category is needed for this purpose.
- This organizational change is demonstrated by the method of FIG. 21. It is noted that the method shown in FIGS. 19-21 is very similar to that described above in connection with FIGS. 1-3.
- Step 302 sets the degree of freedom, DF, equal to or greater than a predetermined minimum, DFmin, according to which road segment can vary from a given shape.
- Step 304 then randomly selects an elementary road segment, RS, from the uncompressed road network database.
- Step 306 attempts to form a new composite road line, CRL, starting from the road segment of step 304 using the DF value set in step 302.
- Step 306 is shown and explained below in detail with reference to FIG. 20.
- the CRLs are grouped into three distinct sets 308, such that two of theses sets are non-intersecting. Step 308 is described in detail below with reference to FIG. 21.
- step 310 removes the road segment, RS, and all other elementary road segments absorbed in the composite road line, CRL, from an initial or remaining set of road segments in the uncompressed road-network database.
- Step 312 determines if there are any elementary road segments remaining in the uncompressed database. If so, the process loops back to step 304; otherwise it continues on to Step 314.
- Step 314 decompresses the map area consisting of the composite road lines using the degree of freedom, DF.
- Step 316 determines if the quality of the decompressed map is satisfactory. This determination is preferably done as explained with reference to FIG. 9. As those skilled in the art will appreciate, the quality of the compression can also be checked by exercising a given application with the decompressed map data and demonstrating if the performance is acceptable.
- Step 318 increases the degree of freedom value, DF, to the next highest level and loops back to Step 304 to compress the road lines again. This process is repeated until the answer to Step 316 is no, in which case, Step 320 causes the most recent compressed map to be discarded or deleted from memory (not shown) and the previous compressed map using degree of freedom value DF to be adopted. Alternatively, the offending lines causing the unsatisfactory map quality are replaced with lines compressed with a lesser degree of freedom DF, as explained above for the straight composite road line compression in Step 28.
- FIG. 20 illustrates in detail Step 306 of FIG. 19, which is a preferred method for forming composite road lines, each initiated from a corresponding initial road segment RS.
- Step 330 assigns the rightmost road segment on the CRL to RSi.
- Step 332 selects the cluster of all road segments RSi+1 connected to the right end of RSi.
- Step 334 determines if there is at least one connected road segment at the right end of RSi. If the answer to Step 334 is yes, Step 336 selects the RSi+1 segment with the least road heading difference from RSi and attaches this segment to the right end of RSi. The process then loops back to Step 332 until the answer to Step 334 no.
- Step 338 assigns the first road segment in the CRL to RSi.
- Step 340 selects all road segments RSi+1 connected to the left end of RSi.
- Step 342 determines if there is at least one connected road segment to the left end of RSi. If the answer to Step 342 is yes, Step 344 then selects the RSi+1 segment with the least road heading difference from RSi and attaches this segment to the left end of RSi. The process then loops back to Step 340 until the answer to Step 342 no.
- Step 346 determines if there are any of the same shape type references included in the shape type directory, STD. If the answer to Step 346 is no, Step 348 includes the new shaped composite road line, SCRL, as a new shape type reference and the method proceeds to Step 308. If Step 346 is yes, Step 350 assigns the first shape type reference from the STD as STR. Step 352 then derives SCRL to a common orientation and scale with STR by any commonly known techniques. Step 354 then calculates the mean root square, MRS, of the differences between the corresponding points of the scaled SCRL and STR, in order to quantify the similarity between the two shapes. The smaller the MRS value the more the two shapes are similar. Step 356 then determines if STR was the last STR in the STD. If Step 356 is no, step 358 assigns the next shape type reference from the STD as STR and loops back to Step 352.
- MRS mean root square
- Step 360 selects the STR with the minimum MRS value representing the degree of dissimilarity between the SCRL and the entities in the STD. This minimum value is denoted as LMRS (Least Mean Root Square) function of the differences between the corresponding points of the scaled SCRL and STR.
- Step 362 determines if LMRS is smaller than the current DF. If Step 362 returns no, Step 366 includes SCRL as a new STR in the STD. If Step 362 returns yes, Step 364 updates the STR by averaging in SCRL with the already included SCRL instances represented by STR. After Step 364 or Step 366, Step 368 represents in the compression method 300 the SCRL with the STR shape type, relative scale, and orientation. The method then proceeds to step 308.
- LMRS Least Mean Root Square
- FIG. 21 gives the details of step 308 of FIG. 19, a preferred method for classifying each composite road line, CRL, into one of three sets.
- Step 372 determines if the gross heading of the new SCRL is within the heading range of the East-West set. If step 372 returns yes, step 374 determines if there are any shaped composite road lines already in the East-West set that intersect the SCRL. If Step 374 returns no, Step 376 classifies the SCRL in the East-West set.
- Step 378 determines if the gross heading of the new SCRL is within the heading range of the North-South set. If Step 378 returns yes, Step 380 determines if there are already composite road lines in the North-South set that intersect the new SCRL. If step 380 returns no, Step 382 classifies the SCRL in the North-South set. If Step 374 returns yes, or Step 378 returns no, or Step 380 returns yes, step 384 classifies the SCRL in the mixed direction set. After Step 376, 382, or 384 the process continues on to step 310.
- CRLs can be two or more dominant directions, e.g., Southwest-Northeast and Northwest-Southeast.
- segments may be migrated to the two non-intersecting sets from the other two sets in order to increase the size of the non-intersecting sets and thus CPU load during decompression.
- more than four segment sets could be defined with more than 2 non-intersecting sets.
- This classification method of step 308 uses the "gross" heading of the Shaped Composite Road Line. This is necessary since only straight-line Composite Road Lines have an unambiguous heading value.
- the gross heading of a shaped CRL is calculated by:
- the end result of applying this method 300 is, in most instances, a significantly smaller number of Shaped Composite Road Lines than the number of straight Composite Road Lines are applied in the method of FIG. 1.
- the above described method of using shape types and shape type directories to reduce the storage need for representing composite road lines of various shapes is especially advantageous to apply in distributed computer networks where the target nodes support a uniform virtual machine and programs are downloaded from remote server locations on-demand to run on these virtual machines.
- the most popular architecture with such features is the "Java” virtual machine capable of running remotely down-loaded "applets”.
- the shape type directory does not need shape definition data such as the linear approximation method shown on FIG. 18.
- the shape definition can be accomplished by a programmed function that can be downloaded as an applet to the remote client node accompanying the actual compressed map data.
- the shape definition applet performs the decompression of every road line data of the specific shape type and it is capable of running on any client computer of the network that supports the uniform virtual machine for such applets.
- the shape definition approximation data in the shape type directory is replaced by a pointer (a reference) to the decompression applet.
- the use of the shape decompression applets can support a much greater variety and complexity of shape types. Therefore, it reduces the overall number of composite road lines in the compressed image.
- the decompression code storage is also optimized, because a specific shape decompression can be downloaded only if the accompanying compressed map data contains shapes that need such shape decompression.
- this programmatic shape decompression method is also applicable if no virtual machine is supported on the client node computers. However, a uniform virtual machine significantly enhances the applicability of this method.
- the simplest, topology-driven way of reducing the end-point representation cost is replacing coordinate values with short references to known positions, the coordinates of which have already been defined at other locations of the road-map topology. This can be done when an endpoint is anchored at another composite road line which then becomes the "baseline" of the former composite line with its endpoints to be defined.
- the baseline composite line belongs to a set other than that of the composite road lines that intersect it.
- East-West composite lines have their baselines belonging to the North-South set of composite road-line and vice-versa.
- FIG. 22A illustrates how such an arrangement can reduce the end-point representation storage need.
- Composite road-lines Xi through Xi+n form the North-South set of composite lines and Yi through Yi+n form the East-West set of composite lines.
- the end-points of the composite road-line Yi of map 400 can be defined by references to its baselines 402 and 404 (also composite road lines Xi and Xi+8, respectively) without actually specifying Yi's end-point coordinate values.
- This composite line is defined by a data structure consisting of six data fields of four bits each, see FIG. 22B.
- the first field holds the component type definition code.
- a code value of 0101 could signify a composite line definition by baseline end-point definitions at both end-points. This code also implies that there are less then 16 intersections of this composite road-line and on both of Yi's baselines. As a result, a four bit long field is sufficient to use to determine an intersection number within this data structure.
- the type code also implies that there are no more than 16 baselines in the North-South set of the composite road-lines and a four bit long field is also sufficient for designating a baseline for end-point definition.
- the second and third four bit fields determine the West end-point 406 of Yi and the third and fourth four bit fields determine the East end-point 408 of Yi.
- the West end-point 406 is at the third intersection of the North-South Baseline 402 and the East end-point 408 is at the second intersection of the North-South Baseline 404. See steps 460 and 464 of FIG. 25.
- the last four bit field defines the number of intersections with the composite road-line Yi itself.
- Yi has three more intersections with three composite road-lines from the North-South set (Xi+2, Xi+4, and Xi+6).
- Yi is a straight-line composite road-line and the number of intersections is captured in the compressed representation in order to efficiently limit the search for intersecting road lines at decompression-time.
- FIGS. 23-26 illustrate how a preferred compression method will recognize a baseline scenario and produce data structures such as illustrated in FIG. 22B and how a preferred decompression method will interpret these data structures.
- the compression with baselines starts with a statistical analysis which is performed for selecting a dominant direction in different sections of the map. This can be done while the sets of composite road-lines are formed as described with respect to FIG. 1 or subsequently, in a separate phase.
- the method illustrated in FIG. 23 depicts this process as a separate phase.
- the dominant direction can be North-South or East-West. In the dominant direction, there is a higher density of composite lines that have one or both of their endpoints anchored on a primary baseline in the set of the other direction.
- Primary baselines are defined as lines perpendicular to the dominant direction that run through some of the endpoints of the dominant direction lines.
- the compression algorithm will look for a hierarchy of baselines. In the first pass, the primary baselines are determined. Lines connecting or intersecting the primary baselines may form secondary baselines if they run through the endpoints of lines in the direction of the primary baselines.
- all primary baselines and all composite road segment lines that do not have their endpoints on any baseline are defined by their explicit endpoint coordinate values. Each line has the number of its intersections also defined. In addition, baselines also specify the spacing between their intersections that also represent endpoints of other lines of the perpendicular direction. All lines having their endpoint(s) on baselines will define their endpoints relative to the baseline. A baseline relative endpoint is defined by the baseline index and by the sequence number of the intersection where the endpoint is located on the baseline.
- both endpoints are defined by baselines, only the first baseline index is specified explicitly.
- the second baseline can be defined by an index increment only relative to the first baseline. See steps 470 and 472 in FIG. 25. If several, adjacent lines have their endpoints on the same baselines, the baseline intersection reference can also be saved entirely from the endpoint definition data. In these cases, the endpoint sequence number is implied (see steps 458 and 466 in FIG. 25), meaning that it is the next one after the endpoints of the previous line ending at the same baseline in the sorted list of composite segment lines belonging to the same directional set.
- Step 412 selecting baselines in the North-South set.
- Step 414 selects baselines in the East-West set.
- the details of steps 412 and 414 are set forth below.
- Step 416 determines if the number of North-South baselines is greater than the number of East-West baselines. If step 416 is no, step 418 sets the North-South set as the dominant direction.
- step 420 sets the East-West baselines as the primary baselines. If step 416 is yes, step 422 sets the East-West set as the dominant direction and step 424 sets the North-South baselines as the primary baselines.
- step 426 encodes endpoints by baselines for composite lines ending at primary baselines and step 428 encodes endpoints by baselines for composite lines ending at secondary baselines. Steps 426 and 428 are described below in detail.
- Step 430 gets a first composite line in one of the North-South or East-West sets corresponding to the step 412 or 414.
- Step 431 determines if there are no intersections with this composite line. If step 431 is no, step 432 determines if all intersections of this composite road line have crossings through only intersecting lines. If step 432 is yes, this means that none of the composite road lines of the opposite direction set are anchored at this composite road line, i.e. this is not a base line. If step 432 is yes, step 434 strips the composite line definition to exclude the spacing values between the intersections because this composite road line is not a baseline. If step 432 is no, step 436 assigns a baseline identification to this composite line and step 438 increments the number of baseline end counter for this set by the number of lines with their endpoints anchored on this new baseline.
- step 416 The baseline end counter is used in step 416 to determine the dominant direction. If step 431 is yes or after step 434 or step 438 step 440 determines if this is the last composite line is the set. If step 440 is yes, the method continues on to step 414 or to step 416 depending on where in the method 410 the routine is operating. If step 440 is no, step 442 gets the next composite road line in the set and loops back to step 431.
- Step 450 gets the first composite line (CL) in the set.
- the set will be one of East-West or North-South sets depending on which set was chosen as the primary baselines in the earlier steps of FIG. 23.
- Step 452 determines if the first endpoint (EP1) is on a baseline (BLi). If step 452 is no, step 454 determines if the second end point EP2 is on another baseline BLj at its intersection ISI. If step 454 is yes, step 456 determines if the previous CL in the same set is ending at the previous intersection ISl-1 of the same BLj of step 454. If step 456 is yes, step 458 replaces the EP2 coordinates with an implied next baseline ending.
- step 456 If step 456 is no, step 460 replaces EP2 coordinates with the BLj/ISl index pair.
- step 462 determines if the previous CL is in the same set ending at a previous intersection ISk-1 of the same BLi of step 452. If step 462 is no, step 464 replaces the first EP1 coordinates with BLi/ISk index pair. If step 462 is yes, step 466 replaces the first EP1 coordinates with "Implied Next Baseline Ending". After step 464 or 466, step 468 determines if the second endpoint EP2 is on BLj. If step 468 is yes, step 470 determines if the previous CL in the same set is ending at the previous intersection, ISl-1, of the same BLj. If step 470 is no, step 472 replaces the EP2 coordinates with BLj-i/ISk.
- Coordinate value BLj-i denotes baseline, BLj, relative to the first end point baseline, BLi. If step 470 is yes, step 474 replaces the EP2 coordinates with "Implied Next Baseline Ending". If steps 454 or 468 are no or after steps 458, 460, 472, or 474, step 476 determines if this is the last composite line in the set. If step 476 is yes, the method ends and returns to the appropriate next step. If step 476 is no, step 478 gets the next composite line in the set and loops back to step 452.
- a preferred decompression method 500 first defines the endpoints ending at the primary baselines, then the lines of the perpendicular direction that have their endpoints at the secondary baselines. Finally, composite lines of the third set have their baseline endpoints replaced with their coordinate values. This is accomplished by invoking the baseline expansion method of FIG. 26 three times for the three sets of composite lines in the above order.
- FIG. 26 sets forth a preferred method 500 for expanding baseline endpoints while decompressing composite lines of a set.
- Step 502 gets the first composite line of the set.
- Step 504 determines if the CL has its EP1 on baseline BLi. If step 504 is no, step 506 determines if the CL has its EP2 on baseline BLj, Intersection m. If step 506 is yes, step 508 determines if this intersection ISm is an implied intersection built in steps 458 or 466. If step 508 is yes, step 510 gets the previous EP definition for the same BLj base line and increments the intersection index.
- Step 530 determines if this is the last CL of the set. If step 530 is no, step 532 gets the next CL and loops back to step 504. If step 530 is yes, then the baseline expansion for the current set of composite road lines is completed and the method repeats until each of the three sets of base lines are completed.
- FIG. 27 depicts a scenario when a composite road-line, Zk, from the third set originates at the intersection of two other composite road-lines Xi and Yj.
- the end-point of Zk can be similarly defined to the end-point definition of Yi on FIG. 22A according to FIG. 22B, even if none of the intersecting composite road-lines Xi and Yj on FIG. 27 were designated as baselines.
- the difference is that instead of a baseline identification field and a baseline intersection number field in FIG.
- the two base-intersection composite road-line identification fields referring to Xi and Yj are used to define the endpoint of Zk.
- the end-point of Zk is simply defined as the intersection of Xi and Yj. Consequently, Xi and Yj do not have to have the spacing values between their adjacent intersections defined as the baseline definitions do in the compressed image.
- the compression method determines the optimal field length for referring to Xi and Yj as less than, equal to or more than the field length for the baselines. If numbering the regular baselines and the base-intersection composite road-lines requires the same field length as the regular baseline numbering and there are not too many of the latter type of road-lines in a parcel, the two should share the same identification number sequence and the field length does not change in the compressed end-point representation for Zk.
- the field length of referring to a base-intersection composite road-line is typically less than the regular baseline identification field length because there are more regular baselines likely to be found in a parcel than base-intersection lines.
- the compression method makes a selection for the sequence numbering arrangement for the base-intersection lines, it encodes this selection in the parcel header.
- the compression method may decide to use only one sequence numbering arrangement for all parcels, even if it is not an optimal selection for some parcels. If the compression method does not find a significant number of base-intersection lines, the impact of the selection may be negligible.
- the end-points of the composite road-lines Xi and Xi+n define a virtual baseline 550.
- the end-points of the composite road-lines Xi-:-Xi+n are not anchored on any composite road-line but still, a single straight line can be drawn through them which becomes the virtual baseline 550 for their end-point definition.
- the virtual baseline 550 does not have to define its end-point coordinates explicitly or by referring to other, regular baselines. It is sufficient to refer to the two terminating composite road-lines Xi and Xi+n.
- the compression method justifies the cost of establishing a virtual baseline 550 if n is a sufficiently large number, i.e. a sufficiently large number of composite road-lines Xi+1-:-Xi+n-1 will benefit from this virtual baseline by their reduced end-point representation cost.
Abstract
Description
TABLE 1 __________________________________________________________________________ Nr of constructs Size in bytes/1 in Chicago UDB construct Σ Size in Chicago % Size in UDB __________________________________________________________________________ Segments 236,075 40.00 9,443,000.00 67% Nodes 200,612 12.00 2,407,344.00 17% Shape Points 420,144 5.33 2,239,367.52 16% ΣΣ Uncompressed 14,089,711.52 100% Size in Chicago __________________________________________________________________________ Nr of constructs CDB construct in Chicago size in bytes Σ Size in Chicago % Size in CDB __________________________________________________________________________ Segments 236,075 4.38 1,032,828.13 51% Nodes 200,612 0.00 0.00 0% Shape Points 420,144 2.40 1,008,345.60 49% ΣΣ Compressed size 2,041,173.73 100% in Chicago __________________________________________________________________________
Claims (16)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/742,299 US6141454A (en) | 1996-11-01 | 1996-11-01 | Methods for data compression and decompression using digitized topology data |
EP97118862A EP0841638A3 (en) | 1996-11-01 | 1997-10-30 | Digitized topology data compression |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/742,299 US6141454A (en) | 1996-11-01 | 1996-11-01 | Methods for data compression and decompression using digitized topology data |
Publications (1)
Publication Number | Publication Date |
---|---|
US6141454A true US6141454A (en) | 2000-10-31 |
Family
ID=24984268
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/742,299 Expired - Lifetime US6141454A (en) | 1996-11-01 | 1996-11-01 | Methods for data compression and decompression using digitized topology data |
Country Status (2)
Country | Link |
---|---|
US (1) | US6141454A (en) |
EP (1) | EP0841638A3 (en) |
Cited By (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6587787B1 (en) * | 2000-03-15 | 2003-07-01 | Alpine Electronics, Inc. | Vehicle navigation system apparatus and method providing enhanced information regarding geographic entities |
US6591270B1 (en) * | 2000-07-28 | 2003-07-08 | Navigation Technologies Corporation | Method for organizing map data |
US6662101B2 (en) * | 2001-01-29 | 2003-12-09 | Matsushita Electric Industrial Co., Ltd. | Method and apparatus for transmitting position information on a digital map |
US6782319B1 (en) | 2002-11-26 | 2004-08-24 | Navteq North America, Llc | Method for organizing map data |
US20040220957A1 (en) * | 2003-04-29 | 2004-11-04 | Mcdonough William | Method and system for forming, updating, and using a geographic database |
US6862102B1 (en) * | 1999-04-27 | 2005-03-01 | Adobe Systems Incorporated | Automatically preparing an image for download |
US7080101B1 (en) * | 2000-12-01 | 2006-07-18 | Ncr Corp. | Method and apparatus for partitioning data for storage in a database |
US20060294576A1 (en) * | 2005-06-24 | 2006-12-28 | Microsoft Corporation | Efficient retrieval of cryptographic evidence |
US20070143092A1 (en) * | 2005-12-15 | 2007-06-21 | The Mathworks, Inc. | Variable structure in physical modeling |
US20070276597A1 (en) * | 2004-03-29 | 2007-11-29 | Hitachi, Ltd. | Navigation Apparatus and Route Guiding Method |
US20080080780A1 (en) * | 2002-12-26 | 2008-04-03 | Canon Kabushiki Kaisha | Image compression method and apparatus |
WO2009061814A2 (en) * | 2007-11-05 | 2009-05-14 | University Of Florida Research Foundation, Inc. | Lossless data compression and real-time decompression |
US20090144030A1 (en) * | 2007-12-04 | 2009-06-04 | Tele Atlas North America, Inc. | Computer readable storage medium storing instructions for applying clothoid curve values to roadways in a geographic data information system |
US20100075643A1 (en) * | 2004-09-07 | 2010-03-25 | Tierravision, Inc. | System and method of wireless downloads of map and geographic based data to portable computing devices |
US20100287199A1 (en) * | 2009-05-05 | 2010-11-11 | Real Estate Portal Usa, Llc | Networked computer system providing an integrated suite of web services and a geographic information system (gis) for real property and land parcels |
USRE41983E1 (en) | 2000-09-22 | 2010-12-07 | Tierravision, Inc. | Method of organizing and compressing spatial data |
US20130238573A1 (en) * | 2012-03-07 | 2013-09-12 | Nxp B.V. | Contextual data compression for geo-tracking applications |
US8553999B2 (en) * | 2010-11-29 | 2013-10-08 | Electronics And Telecommunications Research Institute | Method and system for providing tile map service using solid compression |
US20130282270A1 (en) * | 2010-12-17 | 2013-10-24 | Bayerische Motorn Werke Aktiengesellschaft | Method and Device for Compressing Route Data |
US20140320503A1 (en) * | 2013-04-24 | 2014-10-30 | Microsoft Corporation | Encoding of line pattern representation |
US9091628B2 (en) | 2012-12-21 | 2015-07-28 | L-3 Communications Security And Detection Systems, Inc. | 3D mapping with two orthogonal imaging views |
US9311569B2 (en) * | 2014-08-28 | 2016-04-12 | Ca, Inc. | State based adaptive compression of performance traces |
US9317125B2 (en) | 2013-04-24 | 2016-04-19 | Microsoft Technology Licensing, Llc | Searching of line pattern representations using gestures |
US9721362B2 (en) | 2013-04-24 | 2017-08-01 | Microsoft Technology Licensing, Llc | Auto-completion of partial line pattern |
US10359518B2 (en) * | 2016-12-30 | 2019-07-23 | DeepMap Inc. | Vector data encoding of high definition map data for autonomous vehicles |
CN111538559A (en) * | 2020-03-09 | 2020-08-14 | 西安电子科技大学 | Virtual machine migration method and device, electronic equipment and storage medium thereof |
US20220327776A1 (en) * | 2021-04-09 | 2022-10-13 | Microsoft Technology Licensing, Llc | Blending elevation data into a seamless heightfield |
WO2023231207A1 (en) * | 2022-06-02 | 2023-12-07 | 深圳计算科学研究院 | Graph computing method and apparatus based on hierarchical compression technology, and related medium |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7567714B2 (en) | 2004-07-07 | 2009-07-28 | The United States Of America As Represented By The Secretary Of The Navy | System, method and apparatus for clustering features |
US7382370B2 (en) | 2004-07-07 | 2008-06-03 | The United States Of America As Represented By The Secretary Of The Navy | System and method for smoothing and compression of polyline data |
CN101354710B (en) * | 2008-07-10 | 2011-09-14 | 北京超图软件股份有限公司 | Method and apparatus of line segment intersection |
CN111179401B (en) * | 2019-12-31 | 2023-07-25 | 北京真景科技有限公司 | Topology grouping method based on 3D curved surface data |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4729127A (en) * | 1981-10-20 | 1988-03-01 | The United States Of America As Represented By The Secretary Of The Army | Method and system for compression and reconstruction of cultural data for use in a digital moving map display |
US4845651A (en) * | 1985-11-01 | 1989-07-04 | Hitachi, Ltd. | Geometric modelling system |
US4928313A (en) * | 1985-10-25 | 1990-05-22 | Synthetic Vision Systems, Inc. | Method and system for automatically visually inspecting an article |
US5058186A (en) * | 1987-02-18 | 1991-10-15 | Hitachi, Ltd. | Method and apparatus for image compression |
US5216726A (en) * | 1990-03-23 | 1993-06-01 | United Silicon Structures, Inc. | Data compression process |
EP0394517B1 (en) * | 1989-04-25 | 1993-06-30 | Robert Bosch Gmbh | Vehicle navigation system |
US5386507A (en) * | 1991-07-18 | 1995-01-31 | Teig; Steven L. | Computer graphics system for selectively modelling molecules and investigating the chemical and physical properties thereof |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5285391A (en) * | 1991-08-05 | 1994-02-08 | Motorola, Inc. | Multiple layer road memory storage device and route planning system |
JP3275190B2 (en) * | 1993-11-19 | 2002-04-15 | 本田技研工業株式会社 | Map information playback device |
JP2826079B2 (en) * | 1995-04-21 | 1998-11-18 | 株式会社ザナヴィ・インフォマティクス | In-vehicle map database device |
-
1996
- 1996-11-01 US US08/742,299 patent/US6141454A/en not_active Expired - Lifetime
-
1997
- 1997-10-30 EP EP97118862A patent/EP0841638A3/en not_active Withdrawn
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4729127A (en) * | 1981-10-20 | 1988-03-01 | The United States Of America As Represented By The Secretary Of The Army | Method and system for compression and reconstruction of cultural data for use in a digital moving map display |
US4928313A (en) * | 1985-10-25 | 1990-05-22 | Synthetic Vision Systems, Inc. | Method and system for automatically visually inspecting an article |
US4845651A (en) * | 1985-11-01 | 1989-07-04 | Hitachi, Ltd. | Geometric modelling system |
US5058186A (en) * | 1987-02-18 | 1991-10-15 | Hitachi, Ltd. | Method and apparatus for image compression |
EP0394517B1 (en) * | 1989-04-25 | 1993-06-30 | Robert Bosch Gmbh | Vehicle navigation system |
US5216726A (en) * | 1990-03-23 | 1993-06-01 | United Silicon Structures, Inc. | Data compression process |
US5386507A (en) * | 1991-07-18 | 1995-01-31 | Teig; Steven L. | Computer graphics system for selectively modelling molecules and investigating the chemical and physical properties thereof |
Non-Patent Citations (2)
Title |
---|
"An Interpolation and Compaction Technique for Gridded Data" by David L. Cozart, Jun. 27, 1983 Airforce Office of Scientific Research. Grant No. AFOSR-82-0166. Bolling AFB, DC, 20332. No Page #. |
An Interpolation and Compaction Technique for Gridded Data by David L. Cozart, Jun. 27, 1983 Airforce Office of Scientific Research. Grant No. AFOSR 82 0166. Bolling AFB, DC, 20332. No Page . * |
Cited By (56)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6862102B1 (en) * | 1999-04-27 | 2005-03-01 | Adobe Systems Incorporated | Automatically preparing an image for download |
US7545530B1 (en) | 1999-04-27 | 2009-06-09 | Adobe Systems Incorporated | Automatically preparing an image for download |
US7307747B2 (en) | 1999-04-27 | 2007-12-11 | Adobe Systems Incorporated | Automatically preparing an image for download |
US20050146747A1 (en) * | 1999-04-27 | 2005-07-07 | Adobe Systems Incorporated, A Delaware Corporation | Automatically preparing an image for download |
US6587787B1 (en) * | 2000-03-15 | 2003-07-01 | Alpine Electronics, Inc. | Vehicle navigation system apparatus and method providing enhanced information regarding geographic entities |
US6751629B2 (en) | 2000-07-28 | 2004-06-15 | Navigation Technologies Corp. | Method for organizing map data |
US6591270B1 (en) * | 2000-07-28 | 2003-07-08 | Navigation Technologies Corporation | Method for organizing map data |
USRE41983E1 (en) | 2000-09-22 | 2010-12-07 | Tierravision, Inc. | Method of organizing and compressing spatial data |
US7080101B1 (en) * | 2000-12-01 | 2006-07-18 | Ncr Corp. | Method and apparatus for partitioning data for storage in a database |
CN101514904A (en) * | 2001-01-29 | 2009-08-26 | 松下电器产业株式会社 | Position information transmitting and receiving, and target road segment identifying method and device |
US8185306B2 (en) | 2001-01-29 | 2012-05-22 | Panasonic Corporation | Method and apparatus for transmitting position information on a digital map |
US7353108B2 (en) | 2001-01-29 | 2008-04-01 | Matsushita Electric Industrial Co., Ltd. | Method and apparatus for transmitting position information on a digital map |
US20040039524A1 (en) * | 2001-01-29 | 2004-02-26 | Matsushita Electric Industrial Co., Ltd | Method and apparatus for transmitting position information on a digital map |
US6662101B2 (en) * | 2001-01-29 | 2003-12-09 | Matsushita Electric Industrial Co., Ltd. | Method and apparatus for transmitting position information on a digital map |
US7062377B2 (en) | 2002-11-26 | 2006-06-13 | Navteq North America, Llc | Method for organizing map data |
US7058504B2 (en) | 2002-11-26 | 2006-06-06 | Navteq North America, Llc | Method for organizing map data |
US20060004515A1 (en) * | 2002-11-26 | 2006-01-05 | Mcdonough William G | Method for organizing map data |
US20050027445A1 (en) * | 2002-11-26 | 2005-02-03 | Mcdonough William G. | Method for organizing map data |
US6782319B1 (en) | 2002-11-26 | 2004-08-24 | Navteq North America, Llc | Method for organizing map data |
US20080080780A1 (en) * | 2002-12-26 | 2008-04-03 | Canon Kabushiki Kaisha | Image compression method and apparatus |
US7697772B2 (en) * | 2002-12-26 | 2010-04-13 | Canon Kabushiki Kaisha | Apparatus, method and computer program product for performing image compression of image data |
US7099882B2 (en) | 2003-04-29 | 2006-08-29 | Navteq North America, Llc | Method and system for forming, updating, and using a geographic database |
US20040220957A1 (en) * | 2003-04-29 | 2004-11-04 | Mcdonough William | Method and system for forming, updating, and using a geographic database |
US20070276597A1 (en) * | 2004-03-29 | 2007-11-29 | Hitachi, Ltd. | Navigation Apparatus and Route Guiding Method |
US20100075643A1 (en) * | 2004-09-07 | 2010-03-25 | Tierravision, Inc. | System and method of wireless downloads of map and geographic based data to portable computing devices |
US8014945B2 (en) | 2004-09-07 | 2011-09-06 | Tierravision, Inc. | System and method of wireless downloads of map and geographic based data to portable computing devices |
US10244361B1 (en) | 2004-09-07 | 2019-03-26 | Tierravision, Inc. | System and method of wireless downloads of map and geographic based data to portable computing devices |
US9137633B2 (en) | 2004-09-07 | 2015-09-15 | Tierravision, Inc. | System and method of wireless downloads of map and geographic based data to portable computing devices |
US8649968B2 (en) | 2004-09-07 | 2014-02-11 | Tierravision, Inc. | System and method of wireless downloads of map and geographic based data to portable computing devices |
US20060294576A1 (en) * | 2005-06-24 | 2006-12-28 | Microsoft Corporation | Efficient retrieval of cryptographic evidence |
US7818575B2 (en) * | 2005-06-24 | 2010-10-19 | Microsoft Corporation | Efficient retrieval of cryptographic evidence |
US20070143092A1 (en) * | 2005-12-15 | 2007-06-21 | The Mathworks, Inc. | Variable structure in physical modeling |
US7398192B2 (en) * | 2005-12-15 | 2008-07-08 | The Mathworks, Inc. | Variable structure in physical modeling |
US20100223237A1 (en) * | 2007-11-05 | 2010-09-02 | University Of Florida Research Foundation, Inc. | Lossless data compression and real-time decompression |
WO2009061814A3 (en) * | 2007-11-05 | 2009-08-27 | University Of Florida Research Foundation, Inc. | Lossless data compression and real-time decompression |
WO2009061814A2 (en) * | 2007-11-05 | 2009-05-14 | University Of Florida Research Foundation, Inc. | Lossless data compression and real-time decompression |
US20090144030A1 (en) * | 2007-12-04 | 2009-06-04 | Tele Atlas North America, Inc. | Computer readable storage medium storing instructions for applying clothoid curve values to roadways in a geographic data information system |
US20100287199A1 (en) * | 2009-05-05 | 2010-11-11 | Real Estate Portal Usa, Llc | Networked computer system providing an integrated suite of web services and a geographic information system (gis) for real property and land parcels |
US8255418B2 (en) | 2009-05-05 | 2012-08-28 | Real Estate Portal Usa, Llc | Networked computer system providing an integrated suite of web services and a geographic information system (GIS) for real property and land parcels |
US8553999B2 (en) * | 2010-11-29 | 2013-10-08 | Electronics And Telecommunications Research Institute | Method and system for providing tile map service using solid compression |
US20130282270A1 (en) * | 2010-12-17 | 2013-10-24 | Bayerische Motorn Werke Aktiengesellschaft | Method and Device for Compressing Route Data |
US20130238573A1 (en) * | 2012-03-07 | 2013-09-12 | Nxp B.V. | Contextual data compression for geo-tracking applications |
US9235591B2 (en) * | 2012-03-07 | 2016-01-12 | Telit Automotive Solutions | Contextual data compression for geo-tracking applications |
US9091628B2 (en) | 2012-12-21 | 2015-07-28 | L-3 Communications Security And Detection Systems, Inc. | 3D mapping with two orthogonal imaging views |
US9275480B2 (en) * | 2013-04-24 | 2016-03-01 | Microsoft Technology Licensing, Llc | Encoding of line pattern representation |
US9317125B2 (en) | 2013-04-24 | 2016-04-19 | Microsoft Technology Licensing, Llc | Searching of line pattern representations using gestures |
US9721362B2 (en) | 2013-04-24 | 2017-08-01 | Microsoft Technology Licensing, Llc | Auto-completion of partial line pattern |
US20140320503A1 (en) * | 2013-04-24 | 2014-10-30 | Microsoft Corporation | Encoding of line pattern representation |
US9311569B2 (en) * | 2014-08-28 | 2016-04-12 | Ca, Inc. | State based adaptive compression of performance traces |
US10359518B2 (en) * | 2016-12-30 | 2019-07-23 | DeepMap Inc. | Vector data encoding of high definition map data for autonomous vehicles |
US10401500B2 (en) | 2016-12-30 | 2019-09-03 | DeepMap Inc. | Encoding LiDAR scanned data for generating high definition maps for autonomous vehicles |
US11209548B2 (en) | 2016-12-30 | 2021-12-28 | Nvidia Corporation | Encoding lidar scanned data for generating high definition maps for autonomous vehicles |
CN111538559A (en) * | 2020-03-09 | 2020-08-14 | 西安电子科技大学 | Virtual machine migration method and device, electronic equipment and storage medium thereof |
US20220327776A1 (en) * | 2021-04-09 | 2022-10-13 | Microsoft Technology Licensing, Llc | Blending elevation data into a seamless heightfield |
US11810252B2 (en) * | 2021-04-09 | 2023-11-07 | Microsoft Technology Licensing, Llc | Blending elevation data into a seamless heightfield |
WO2023231207A1 (en) * | 2022-06-02 | 2023-12-07 | 深圳计算科学研究院 | Graph computing method and apparatus based on hierarchical compression technology, and related medium |
Also Published As
Publication number | Publication date |
---|---|
EP0841638A3 (en) | 1999-10-13 |
EP0841638A2 (en) | 1998-05-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6141454A (en) | Methods for data compression and decompression using digitized topology data | |
Taubin et al. | Geometric compression through topological surgery | |
KR100233972B1 (en) | Compression of simple geotric models using spanning trees | |
Arya et al. | Approximate nearest neighbor queries in fixed dimensions. | |
US7013378B2 (en) | Method and system for minimizing the length of a defect list for a storage device | |
US9424662B2 (en) | Triangle mesh compression | |
CN109902141B (en) | Method for motion planning and autonomous agent | |
Bartholdi III et al. | Vertex‐labeling algorithms for the Hilbert spacefilling curve | |
US6314205B1 (en) | Method and apparatus for compressing and transmitting a three-dimensional geometric model | |
KR100484137B1 (en) | Improved huffman decoding method and apparatus thereof | |
US5949422A (en) | Shape data compression method, shape data decompression method, shape data compression apparatus, and shape data decompression apparatus | |
Banerjee et al. | Topologically exact evaluation of polyhedra defined in CSG with loose primitives | |
Pajarola et al. | An image compression method for spatial search | |
Lv et al. | A trajectory compression algorithm based on non-uniform quantization | |
US20030076319A1 (en) | Method and apparatus for encoding and decoding an object | |
Rossignac | Edgebreaker: Compressing the incidence graph of triangle meshes | |
CN113076334A (en) | Data query method, index generation device and electronic equipment | |
US7003169B1 (en) | Variable transformation hierarchical image coding | |
Khot et al. | Road network compression techniques in spatiotemporal embedded systems: A survey | |
Allie et al. | Reconstructing noisy dynamical systems by triangulations | |
Morse | Computer storage of contour-map data | |
JPH1079049A (en) | Method and system for compressing and decompressing geomtric model, and data structure | |
Cromley | Principal axis line simplification | |
JP6893854B2 (en) | Graphic compression coding method | |
Boss et al. | Archetype classification in an iterated transformation image compression algorithm |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SEYMOUR, LESLIE G.;DANIEL, SAM;BUETTNER, KEVIN;REEL/FRAME:008471/0767;SIGNING DATES FROM 19970306 TO 19970313 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034430/0001Effective date: 20141028 |
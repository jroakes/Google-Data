AU2011201993A1 - Searching conversations in a conversation-based email system - Google Patents
Searching conversations in a conversation-based email system Download PDFInfo
- Publication number
- AU2011201993A1 AU2011201993A1 AU2011201993A AU2011201993A AU2011201993A1 AU 2011201993 A1 AU2011201993 A1 AU 2011201993A1 AU 2011201993 A AU2011201993 A AU 2011201993A AU 2011201993 A AU2011201993 A AU 2011201993A AU 2011201993 A1 AU2011201993 A1 AU 2011201993A1
- Authority
- AU
- Australia
- Prior art keywords
- conversation
- message
- user
- messages
- identifying
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims description 34
- 238000003860 storage Methods 0.000 claims description 12
- 238000007726 management method Methods 0.000 description 45
- 230000009471 action Effects 0.000 description 43
- 238000012545 processing Methods 0.000 description 20
- 230000004044 response Effects 0.000 description 17
- 238000004891 communication Methods 0.000 description 13
- 238000012217 deletion Methods 0.000 description 13
- 230000037430 deletion Effects 0.000 description 13
- 239000010813 municipal solid waste Substances 0.000 description 13
- 238000012937 correction Methods 0.000 description 6
- 230000000007 visual effect Effects 0.000 description 6
- 235000013305 food Nutrition 0.000 description 5
- 230000008569 process Effects 0.000 description 5
- 230000007246 mechanism Effects 0.000 description 4
- 239000003086 colorant Substances 0.000 description 3
- 238000012913 prioritisation Methods 0.000 description 3
- 235000017276 Salvia Nutrition 0.000 description 2
- 241001072909 Salvia Species 0.000 description 2
- 238000013459 approach Methods 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 2
- 239000000470 constituent Substances 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000013507 mapping Methods 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000009877 rendering Methods 0.000 description 2
- 235000002020 sage Nutrition 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000002730 additional effect Effects 0.000 description 1
- 235000012791 bagels Nutrition 0.000 description 1
- 230000036621 balding Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 238000010586 diagram Methods 0.000 description 1
- 238000009826 distribution Methods 0.000 description 1
- 230000003203 everyday effect Effects 0.000 description 1
- 239000000284 extract Substances 0.000 description 1
- 238000002372 labelling Methods 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 238000007620 mathematical function Methods 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 238000012544 monitoring process Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 230000002123 temporal effect Effects 0.000 description 1
Classifications
-
- G06Q50/60—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/216—Handling conversation history, e.g. grouping of messages in sessions or threads
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- G06Q50/40—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04842—Selection of displayed objects or displayed text elements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
- H04L51/046—Interoperability with other network applications or services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/226—Delivery according to priorities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/56—Unified messaging, e.g. interactions between e-mail, instant messaging or converged IP messaging [CPM]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/40—Support for services or applications
- H04L65/403—Arrangements for multi-party communication, e.g. for conferences
Description
AUSTRALIA Patents Act COMPLETE SPECIFICATION (ORIGINAL) Class Int. Class Application Number: Lodged: Complete Specification Lodged: Accepted: Published: Priority Related Art: Name of Applicant: Google, Inc. Actual Inventor(s): Bay-Wei Chang, Brian D. Rakowski, Sanjeev Singh, Paul T. Buchheit, Jing Yee Lim Address for Service and Correspondence: PHILLIPS ORMONDE FITZPATRICK Patent and Trade Mark Attorneys 367 Collins Street Melbourne 3000 AUSTRALIA Invention Title: SEARCHING CONVERSATIONS IN A CONVERSATION-BASED EMAIL SYSTEM Our Ref : 913017 POF Code: 466934/473407 The following statement is a full description of this invention, including the best method of performing it known to applicant(s): Searching Conversations in a Conversation-Based Email System The present application is a divisional application from Australian Patent Application No. 2005229862, the entire disclosure of which is incorporated herein by reference 5 FIELD OF THE INVENTION The present invention relates generally to the field of a client-server computer network system, and in particular, to a system and method for a user to manage a large number of messages in an efficient and user-friendly manner. BACKGROUND OF THE INVENTION 10 Every day, people send and receive millions of email (also written as "e-mail") messages over computer networks for business and leisure. Email, being convenient, easy to use and close to instantaneous in many cases, has become an extremely popular communication channel for people to exchange information. Traditionally, email messages arriving at a user's email account are displayed by a 15 dedicated email client or in web browser window individually, in a chronological order, e.g., the most recent message appears at top of the browser window while the oldest one appears at the bottom of the browser window. However, it is common that multiple messages sent by two or more people at different times may cover a same topic. Viewing the messages together would assist the user in understanding the individual messages in the proper context. 20 It would be highly desirable to have a system and method of organizing and displaying a plurality of messages, including messages received by and messages sent by a user, according to their respective topics. It would also be highly desirable that all the messages relating to a same topic, and that form part of same conversation, be presented intuitively so that the user is able to identify a particular message submitted by a specific sender efficiently, 25 and so that the user can see the messages in the conversation in their context with respect to other messages in the conversation. A reference herein to a patent document or other matter which is given as prior art is not to be taken as an admission that that document or matter was known or that the information it contains was part of the common general knowledge as at the priority date of 30 any of the claims. SUMMARY According to an aspect of the present invention, there is provided a method of searching conversations, performed at a server having one or more processors and memory storing programs executed by the one or more processors, the method comprising: receiving a I A C \ diSPEC-913017 doc search query from a client; identifying a conversation relevant to the search query, the conversation having two or more messages sharing a common set of characteristics that meet predefined criteria and a respective conversation identifier, wherein identifying a conversation relevant to the search query comprises identifying a conversation that, as a whole, is relevant 5 to the search query; and returning to the client for display, as a search result to the search query, conversation information corresponding to the identified conversation. According to another aspect of the present invention there is provided a server system, comprising: one or more processors; memory; and one or more programs, wherein the one or more programs are stored in the memory and configured to be executed by the one or more 10 processors, the one or more programs comprising instructions for: receiving a search query from a client; identifying a conversation relevant to the search query, the conversation having two or more messages sharing a common set of characteristics that meet predefined criteria and a respective conversation identifier, wherein identifying a conversation relevant to the search query comprises identifying a conversation that, as a whole, is relevant to the search 15 query; and returning to the client for display, as a search result to the search query, conversation information corresponding to the identified conversation. According to yet another aspect of the present invention there is provided a computer readable storage medium storing one or more programs configured for execution by a computer, the one or more programs comprising instructions for: receiving a search query 20 from a client; identifying a conversation relevant to the search query, the conversation having two or more messages sharing a common set of characteristics that meet predefined criteria and a respective conversation identifier, wherein identifying a conversation relevant to the search query comprises identifying a conversation that, as a whole, is relevant to the search query; and returning to the client for display, as a search result to the search query, 25 conversation information corresponding to the identified conversation. BRIEF DESCRIPTION OF THE DRAWINGS For a better understanding of the nature and embodiments of the invention, reference should be made to the Description of Embodiments below, in conjunction with the following 30 drawings in which like reference numerals refer to corresponding parts throughout the figures. 2 C :\ovodSPEC-913017.do Fig. I schematically illustrates one embodiment of the client-server based network system according to the present invention. Fig. 2 is an overview flowchart illustrating how a conversation assistant generates the various forms for displaying the conversations provided by a conversation management 5 system. Fig. 3A is a flowchart illustrating how the conversation assistant generates a form hosting a list of conversations. Fig. 3B is a schematic screenshot of a list of conversations in the "inbox" category according to one embodiment of the present invention. 10 Fig. 4A is a flowchart illustrating the operation of the "more actions" pull-down list. Fig. 4B is a screenshot of how a user moves a conversation from one category to another using the "more actions" pull-down list. Fig. 5A is a flowchart illustrating the operation of the "add labels" pull-down list. Fig. 5B is a screenshot of how a user adds a label to a conversation using the "add 15 labels" pull-down list. 2A C:\pofwrd\SPEC-913017.dc Fig. 6A is a flowchart depicting how the conversation assistant generates a conversational view in response to the conversation management system's display instructions. Fig. 6B is a screenshot of a conversational view in which all the messages are displayed in a compacted mode according to one embodiment of the present invention. Fig. 6C is a screenshot of a conversational view in which some of the messages are displayed in the compacted mode and some are in an expanded mode according to one embodiment of the present invention. Fig. 6D is a screenshot of a conversational view in which all the messages are displayed in the expanded mode according to one embodiment of the present invention. Fig. 6E is a screenshot of a conversational view in which the messages are displayed according to various embodiments of the present invention. Fig. 7A is a flowchart illustrating how the conversation assistant generates the various forms for displaying the conversations that match a user's search request. Fig. 7B is a screenshot comprising three conversations that match a query term "Tahoe" according to one embodiment of the present invention. Fig. 7C is a screenshot of messages in a conversation matching or not matching a query term and displayed in different modes according to one embodiment of the present invention. Fig. 8 is a flowchart illustrating how the conversation assistant interacts with a user to correct all the potentially misspelled words. Fig. 9A is a screenshot of a conversation including a reply message composed by the user. Fig. 9B depicts a screenshot comprising three separate browsing windows at different stages of the spell check process. Fig. 10 depicts an embodiment of a conversation server. Fig. 11 is a flowchart representing a method of processing a received message. Fig. 12 is a flowchart representing a method of matching a message to a conversation. 3 Fig. 13 is a flowchart representing a method of assigning attributes to a message. Fig. 14 is a flowchart representing a method of assigning attributes to a conversation. Fig. 15 is a flowchart representing a method of searching for conversations and generating a representation of an identified conversation. Fig. 16 depicts a message database. Fig. 17 depicts a user database and an index for a particular user. Fig. 18 depicts a set of data structures used for identifying the conversation corresponding to a received message and for determining attributes to be associated with the received message. Fig. 19 depicts an embodiment of a conversation server. DESCRIPTION OF EMBODIMENTS The present invention is directed to a client-server system and corresponding method of organizing and displaying messages sent to and by a user. Fig. I schematically illustrates one embodiment of the client-server system. The system includes a conversation management system 102, a communication network 106 and a plurality of clients 104. A conversation includes one or more relevant messages covering a conversation topic. As will be described below, additional criteria, beyond the conversation topic, may be used to determine which messages are part of each distinct conversation. The senders and recipients of the messages are participants of the conversation. All the messages directed to a user of the conversation management system 102 are grouped into a plurality of conversations and presented to the user in a conversation-based format, individually or jointly. More detailed discussion abou-t the implementation of the conversation management system 102 is provided below. A client 104 includes a browser 108 and a conversation assistant 110. The browser 108 can be a general purpose Internet browser (sometimes called a Web browser) having a browser window used for displaying the conversations, or it can be a dedicated browser application having a window for displaying conversations. The conversations and messages 4 in the conversations may be rendered by the browser 108 using the hypertext markup language (HTML) or any other appropriate rendering methodology. After a user submits a request through the browser 108 to the conversation management system 102 to access messages stored in his personal account, the conversation management system 102 identifies a plurality of conversations in the user's personal account according to the user's request and transfers them as well as a set of display instructions back to the client 104. The conversation assistant I10, in response, generates one or more forms following the display instructions, each form including information of some of the conversations. The forms are then submitted to and rendered by the browser 108. In another embodiment, the conversation assistant 110 may alternatively exist and operate in the conversation management system 102. Fig. 2 is an overview flowchart illustrating how the conversation assistant 110 generates various forms for displaying conversations provided by the conversation management system 102. After receiving a plurality of conversations and associated display instructions at step 202, the conversation assistant 110 determines, at step 204, whether the user has requested multiple conversations or an individual conversation. If the user asks for multiple conversations, the conversation assistant 110, at step 206, generates a form that hosts a list of conversations, each conversation occupying one row in the form. For each row in the form, the conversation assistant 110 also generates a set of columns and associated features to be displayed according to the display instructions at step 208. More details on how the information in the columns and associated features are rendered are provided below in conjunction with Figs. 3A and 3B. If the user requests an individual conversation, the conversation assistant 110 then generates a distinct form hosting a series of messages that are associated with the conversation at step 210. At step 2:12, the conversation assistant 110 generates a sub-form and an associated set of features to be displayed for each message following the corresponding display instructions. More details on how the conversation assistant renders such sub-forms and associated features are provided below in conjunction with Figs. 6A-6D. After generating a form hosting a list of conversations or an individual conversation, the conversation assistant 110 generate s a form hosting a set of system-defined categories at step 214. Each system-defined category may be associated with zero or more conversations. In one embodiment, a system-defined category is an attribute that the conversation management system 102 assigns to a conversation either in response to a user action or when predefined 5 criteria are met. For instance, the system associates a "trash" attribute with a conversation when the user marks the conversation for deletion, but has not yet taken the steps required to permanently remove the conversation from the user's mail account. More specifically, the conversation management system 102 attaches the attribute "trash" to the conversation and removes an existing attribute, e.g., "inbox", from the conversation, if necessary. It is noted that certain system-defined categories may be mutually exclusive. In another example, the system may automatically associate an "InBox" attribute aind an "Unread" attribute with a newly received incoming message. A more detailed discussion of the system-defined categories is provided below in conjunction with Figs. 4A and 4B. Next, the conversation assistant 110 generates another form hosting a set of user-defined labels at step 216. Fig. 3B shows a group box 347 in which this form is displayed. Each user-defined label may be associated with zero or more conversations. In one embodiment, a user-defined label is an attribute that can be associated withl specified conversations. The conversations to which the user-defined label is assigned naay be determined by specific user actions or by the operation of a filter or similar mechanisms. Unlike the system-defined categories, these labels are defined by the user arbitrarily a.nd they are not mutually exclusive. In other words, a conversation can be associated with multiple labels at the same time. For example, there may be two labels, "shopping list" and "Thanksgiving," in a user's personal account. The label "shopping list" may be assigned by the user, or by a filter set up by the user, to shopping-related conversations, while the label "Tianksgiving" may be assigned to conversations regarding Thanksgiving activities, including Thanksgiving shopping. Since a, label is defined by a user, the user can also delete the labeL. A more detailed discussion of user-defined labels is provided below in conjunction with Figs. 5A and 5B. With respect to group box 347, when the user selects (e.g., clicks on) a use-r-defined label in group box 347, the conversation assistant 110 submits to the conversation management system a query to locate conversations associated with the user-selected label. That query is then executed and the user is presented with a listing of such conversations, if any. The conversation management system 102 and the con-versation assistant 110 work together to allow a user to search the messages in the user' s mail account and to present the search results in a highly intuitive fashion. The conversation management system 102 extracts information from the user's email account or processes a message being composed by the user, while the conversation assistant 110 renders tie information prepared by the 6 conversation management system 102. In other embodiments a different division of duties between the conversation management system 102 and the conversation assistant 110 may be used. Because many of the tasks performed by the system can be performed by either the conversation management system 102 or the conversation assistant 110 or by the two working together, these two components are sometimes herein referred to jointly as the "conversation system." The conversation system (102 and/or 110) may generate a form hosting a set of searches submitted by the user at step 218 so that the user can revisit (or more accurately, regenerate) recent search results. A more detailed description of search-based conversation list generation is provided below in conjunction with Figs. 7A-7C. Additionally, the conversation system may generate a form (e.g., the form displayed in group box 349 in Fig. 3B) hosting a set of conversations visited by the user recently at step 220. This feature is analogous to the back button of a web browser. At step 222, the conversation assistant 110 submits the forms to the browser 108 for displaying. Steps 214 through 220 may be performed in many possible o>rders other than the order shown in Fig. 2. In some embodiments, some of these form generating steps may be omitted. GENERATING LIST OF CONVERSATIONS Referring now to Fig. 3A, the conversation management system 102 generates a list of conversations (step 302), for instance in response to the user or client requesting an inbox view of the user's mail account. As will be explained in more detail below, lists of conversations are generated by performing a search of the user's mail account. To generate the list of conversations for an inbox view, the user's mail account is searched for conversations associated with an "InBox" attribute (sometimes called a label). The conversation management system 102 then prepares information about those conversations for display at step 304, as will be described in more detail next. In addition, the conversation management system generates a list of user-selectable actions ard a list of user-selectable labels at step 305. The user-selectable labels may include systern-defined labels as well as user-defined labels. The discussion below in connection with Figs. 4 and 5 illustrates the usage of these user-selectable lists. The resulting information is then sent to the conversation assistant for rendering at step 306. 7 At step 304, the conversation management system 102 repeatedly conducts a series of steps (from step 306 to step 324) to generate a set of fields for each conversation in the list of conversations. In some embodiments, these fields may be rendered by the conversation assistant 110 in columns to enable a user to easily scan the conversation list. For each conversation and an associated set of messages, the conversation management system 102 first generates a sender list at step 307. The sender list co:rnprises a plurality of sender identifiers, each identifier corresponding to a sender who has authored at least one of the messages. A sender may be identified by his first name, last name, full name, email address, picture or a unique icon or a combination thereof. In some embodiments, if at least two senders have equivalent first names, then a sufficient portion of each sender's last name in included in the respective sender identifiers to distinguish one sender from another. For example, if two senders had the first name of Paul and last names which different in the first letter, the senders could be distinguished using a concatenation of Paul with the first letter of the last name (e.g., PaulB and PaulK). One of ordinary skill in the art will recognize other ways to identify two senders having the same first name. In other embodiments, a sender's identifier could be based on information associated with the particular sender that resides in a user's contact list. In still other embodiments, a user may create nicknames to appear in the sender list for specific senders. If a sender has authored multiple mes sages in the conversation, his identifier nevertheless appears only once in the sender list. In one embodiment, the sender identifiers in the list are ordered according to their respective messages' arrival time at the system 102. In another embodiment, the sender identifiers in the list are ordered alphabetically according to their respective names. Next, the conversation management system 102 formats the sender list so as to highlight one or more sender identifiers in the list according to the display instructions at step 308. The term "highlight" is used here to mean displaying in a visually distinctive manner, such as balding, underlining, changing background color, changing font color, changing the font, etc. Furthermore, in this context, the term "highlight" means generating formatting information for displaying something (e.g., a specified portion of text) in a distinctive manner. For example, in some embodiments, a sender's name is formatted to be displayed in boldfaced characters if his message has not been viewed or marked as read by the user. In some embodiments, the conversation assistant receives or has access to pictures of one or more of the people listed in the sender list and/or recipient lists of conversations. When 8 the user views either a list of conversations or an individual conversation, and positions a cursor over a name or identifier in the sender list, a picture of that sender is displayed. In some embodiments, the same functionality is provided, when viewing a conversation., for listed message recipients. This feature may be particularly useful for email systems used by large organizations. In some embodiments, if the user himself has authored at least one message in the conversation, the conversation management system 102 replaces the user's name or other identifier in the sender list with a unique character string or icon or other output cue for him as his identifier in the sender list at step 310. One option for the unique character string is a self-referencing identifier in a particular language. For example, the pronoun "me" in English can be used for representing the user in the sender list. This feature is more useful than identifying the sender by his first name in the sender list (which, of course, may be done in alternate embodiments), since many people share the same first names. Representing the user by a unique identifier also helps the user to easily identify the conversations in which he has actively participated by contributing at least one message. If many people have contributed messages to a conversation, the sender list may become too long to fit into the limited space in a browser window. This is especially true if one or more of the senders in the sender list are identified by their email address. If so, the conversation management system 102 prioritizes the senders in the list of senders based on various information to identify a subset of the sender list to display in the browser window at step 312. In one embodiment, the subset includes at least the sender of a last message in the conversation and, where applicable, the sender of a message that has not been viewed or marked as read by the user. In another embodiment, the subset includes the sender D f a first received message in the conversation, the sender of a last received message in the conversation, and zero or more additional senders selected in accordance with a prioritization or scoring methodology. In some embodiments, a higher priority is given to the senders of messages arriving later in time. This type of prioritization tends to increase the likelihood that senders of unread messages will be displayed. Other types of prioritization schemes could be used as well. In some embodiments, when the sender list identifies only a subset of the message senders in the conversation the sender list includes an ellipsis mark".." or other symbol indicating that the sender list is incomplete. In some embodiments, where th-ere is 9 more than one sender whose messages have not been viewed or marked as read by the use-, the subset identifies as many of those senders as allowed by the available space. At step 314, the conversation management system 102 creates a message number indicator for the conversation, indicating the number of messages in the conversation, excluding messages permanently deleted or marked for deletion. The message number indicator may be a number in a pair parentheses, e.g., "(3)" represents that there are three messages in the conversation. In some embodiments, when a conversation includes only one message, a message number is not generated for the conversation. The message number indicator can also be an icon. The icon can be color coded to provide additional information, e.g., to indicate how many messages in the conversation remain unread (i.e., not viewed o-r marked as read). Next, the conversation management system 102 generates a conversatio-n topic for the conversation being processed, at step 316. Typically, the conversation topic is the subject of the first message in the conversation or a truncated version of the subject if it exceeds a predefined length. In another embodiment, the conversation topic is determined by heuristically examining the contents of the first message, or, alternatively, more than the first message. In one embodiment, if the conversation includes at least one message having the Unread attribute, both the message number identifier and the conversation topic are highlighted in the browser window to attract the user's attention. In another embodiment, only the conversation topic is highlighted to indicate one or more unread messages. According to an established email standard, a message can be sent to at least three classes of recipients, one primary class of recipients whose addresses are listed in the "To:" field and two secondary classes of recipients whose addresses are listed in the "Cc:" field or the " cc:" field. Accordingly, the conversation management system 102 at step 318 creates a recipient status indicator for the user, which is another indicator of the user's participation in the conversation. In one embodiment, a conversation in which the user is a primary recipient of any message is marked with a first distinctive indicator, such as ">>", a conversation in which the user is a secondary recipient of at least one message and is not a primary recipient of any messages is marked with a second distinctive indicator, such as ">", and a conversation in which the user is not explicitly listed as a recipient of any message (e.g., because the messages were sent to a group or mailing list) receives no special marks. In other embodiments, conversations in which the user is a primary recipient of at least one message and conversations in which the user is only a secondary recipient may be represented in other 10 visually distinctive ways, such as by highlighting one or more portions of the rows representing these conversations. In another embodiment, a conversation in which the user is the only primary recipient of at least one message is marked with a first distinctive indicator, such as ">", a conversation in which at least one message was sent directly to the user's email address and not a mailing list is marked with a second distinctive indicator, such as ">", and a conversation in which the user is not explicitly listed as a recipient of any message (e.g., because the messages were sent to a group or mailing list) receives no special marks. In some embodiments, the conversation management system 102 creates a snippet of the conversation at step 320. The snippet provides the user with a preview of the contents of the conversation without the user having to open the conversation. In one embodiment, the snippet is generated from the most recent message in the conversation. In another embodiment, the snippet is extracted from the first message (i.e., the oldest message) in the conversation. In yet another embodiment, the snippet is extracted from all the messages in the conversation according to predefined heuristic rules, e.g., listing a set of keywords appearing most frequently in the conversation. If the conversation management system 102 is preparing a list of conversations in response to a search submitted by the user, it creates a snippet including a highlighted portion that matches the user-submitted query terms at step 322, which may be similar in one or more respects to the snippets included search results returned by a search engine such as the Google search engine. Finally, the conversation management system 102 identifies a date/time value for a conversation at step 324. This date/time value often dictates the display order of a list of conversations in the browser window. In some embodiments, each conversation in a list of conversations, is assigned a date/time equal to the date/time of the most recent message that matches the search criteria used to generate the list of conversations. For instance, if a user specified search query is used (e.g., "Lake Tahoe"), then for each matching conversation in the list of conversations, the assigned date/time is the date/time of the most recent message matching the user-specified search query. In another example, if the search criteria is "Inbox" (i.e., conversations having at least one message assigned the Inbox label), then the date/time assigned to each conversation in the list of conversations is the date/time of the most recent message that is associated with the Inbox label. In some embodiments, the conversations in the list of conversations are listed in reverse chronological order with respect to their assigned date/time values (i.e., with the most recent conversations being listed first). 11 As used herein, "date/time" value refers to whatever date value and/or time value is associated with a particular message. Dates and/or times may be associated with messages based on the date and/or time of its creation, transmission, receipt or other event. In other embodiments, other methods or criteria may be used to assign a date/time to each conversation in a list of conversations, and other methods may be used to order the conversations in accordance with their date/time values. For instance, in some embodiments, when using an advanced search query tool, the user is given the option of searching for conversations whose date/time falls within a specified time window (and that meet other user-specified search requirements, if any). The resulting list of conversations is listed in accordance with the length of time between a user specified target date or target date/time and the date/time of each conversation in the list. Thus, conversations before and after the target date or date/time may be interleaved in the resulting list of conversations. Fig. 3B is a schematic screenshot of a list of conversations in the "inbox" category according to one embodiment of the present invention. At the top left corner of the screenshot, there is a "Compose Mail" link 340. The user clicks on this link to start writing a new message. Next to the link 340, there are a textbox 341 and a "Search Mail" button 342. After the user submits one or more query terms through the textbox 341 and then clicks on the "Search Mail" button 342, the system generates a new display listing conversations matching the query terms. In some embodiments, matches can occur by the presence of one or more synonyms of a respective query term. In some embodiments, matches can occur based on the root of the respective query term. For example, a search for "book" could be matched by the words "book", "books", and "booking". Please refer to Figs. 7A and 7B for details. Next to button 342 are two pull-down lists: the "more actions" list 344 and the "add label" list 345. Please refer to Figs. 4 and 5, respectively, for more details about these two pull-down lists. Right below the "Compose Mail" link 340, there are a series of group boxes, each box corresponding to a form generated by one of the steps 214-220 in Fig. 2. For instance, the group box 346 displays system-defined categories, including "Inbox", "Starred", "Sent Mail", "Drafts", "All Mail", "Spam" and "Trash", etc. In other embodiments, the set of system-defined categories may be different, including a subset of these categories and/or additional categories. In some embodiments, the "Starred" category includes conversations in which the user plans to be actively involved, e.g., by sending messages to other participants, which is similar to a "To Do" list. Thus, in one embodiment, a message may be 12 flagged with a star, so that a user can, for example, search for starred messages. In one embodiment, the "All Mail" category includes all the conversations that are not in the "Spam" or "Trash" categories. Note that since the current screenshot displays only conversations belonging to the "Inbox" category, the corresponding link in the group box 346 has been highlighted. The main area of the schematic screenshot in Fig. 3B is a form comprising a list of conversations 360, each conversation occupying one row in the form. Each row further includes a checkbox 362, a sender list 364, a recipient status indicator 366, a conversation topic and snippets 368 and a date/time value 369. In other embodiments, the set of fields for each conversation row may be different, including a subset of these fields and/or additional fields. In some embodiments, all rows have a uniform height when a list of conversations is displayed. In other embodiments, heights may be variable to accommodate various snippet lengths. The checkbox 362 is checked by the user if the user decides to move the corresponding conversation from one system-defined category, e.g., "Inbox", to another one, e.g., "Trash", or if the user decides to attach a user-defined label to the corresponding conversation. The definitions of other columns or fields in the form have been given above in conjunction with Fig. 3A. Note that there are two messages in the first conversation and a sender S2 has been highlighted in the first row, suggesting that the message sent by S2 has not yet been read or marked as read. In contrast, the second conversation includes four messages that have all been read or marked as read and therefore nothing is highlighted in the second row. In some embodiments, a visual indicator for starred status is provided. If any message in a conversation has the starred status, then the "InBox" will provide a visual indicator that the conversation contains at least one starred message. Though not shown, in one embodiment, the browser window represented by Figure 3B includes a persistently displayed message compose area, associated addressing and subject fields, and other options and fields that might typically be associated with a form that allows composing and sending a message. Such an area, for example, is displayed below the list of. conversations 360. Thus, in one embodiment, within a single user interface (e.g., a browser window), a user may have the option to view a list of conversations and also compose a new message without being required to open a new window (e.g., a message compose window) and without removing the list of conversations from the current browser window. 13 Fig. 4A is a flowchart illustrating the operation of the "more actions" pull-down list 344. After a user clicks on the pull-down list, the browser displays a list of system-defined actions at step 402. The user selects a particular action in the pull-down list and at least one conversation in the conversation list at step 404. The browser then associates the user selected conversations with the user-selected actions at step 406 and sends them back to the conversation management system for further processing at step 408. If the user selected action causes the user-selected conversations to be removed from the previously displayed list of conversations, the conversation assistant receives a new list of conversations from the conversation management system, and the conversation assistant displays the new list of conversations in the browser at step 410. Referring to Fig. 4B, shows a change from the schematic screenshot of Fig. 3B that results when the user checks the checkbox 413 of the second conversation, clicks on the moree actions" pull-down list, and picks the item Spamm" 415. As a result, the second conversation will be removed from the "Inbox" category and the "Spam" category will have a new member. Note that some of the actions in the pull-down list such as "Ignore" and "Snooze" do not have a corresponding category. Both "Ignore" and "Snooze" correspond to the "All Mail" category. Specifically, when the user checks the checkbox of a conversation and then clicks on the "Ignore" item, the conversation will be transferred to the "All Mail" category. If any new message associated with the "ignored".conversation arrives, the system still associates the new message with the conversation, but it does not bring the conversation back to the user's attention automatically. However, the user can stop ignoring the conversation and bring it back into the "Inbox" category by visiting the "All Mail" category, checking the checkbox of the ignored conversation, and then selecting the "Inbox" item in the corresponding "more actions" pull-down list. As indicated by this example, different categories' pull-down lists may have different sets of action items. The "Snooze" action item allows the user to ignore a conversation temporarily by setting a triggering condition, which can be time-driven, e.g., a conversation should disappear from the "Inbox" category for a period of time (e.g., one hour, one day, one week, and so on) and then come back automatically, or event-driven, e.g., a conversation should not come back to the "Inbox" category until the number of unchecked messages has reached a predetermined limit, or a particular person has contributed a message to the conversation, a message is received that specifies the user as a primary recipient, or a received message contains a specified word or 14 phrase. One of ordinary skill in the art will recognize other trigger conditions which could be used. CATEGORIZING CONVERSATIONS Fig. 5A is a flowchart illustrating the operation of the "add labels" pull-down list 345. After a user clicks on the pull-down list, the browser displays a list of user-defined labels for him to choose at step 502. The user selects a particular label in the pull-down list and at least one conversation in the conversation list at step 504. The browser then associates the user selected conversations with the user-selected label at step 506 and sends them back to the conversation management system for further processing at step 508. As a result, a list of the conversations associated with the user-selected label will include the conversations associated with that label in step 506. As described in more detail below, when a label or attribute is associated with a conversation, one or more entries are added to an index 1710 (Figs. 17, 18) to enable searches for conversations bearing that label to be located. In some embodiments, the label or attribute is also added to one or more entries in a conversation database 1808 (Fig. 18). In some embodiments, the labels associated with a conversation are displayed when the user views the conversation. In some embodiments, the labels associated with each conversation in a list of conversations are displayed in the row of information provided for each conversation in the list. Fig. 5B is a schematic screenshot showing the browser window resulting when the user checks the checkbox 512 of the second conversation and then clicks on the "add labels" pull down list and picks the item "Label 2" 514. (It is noted that "Label 2" represents a user specified label name.) This will cause "Label 2" to be associated with the checked conversation. As a result, the checked conversation may be included in the search results produced in response to queries for messages associated with "Label 2." In some embodiments, the labels associated with each conversation in a list of conversations are displayed in the corresponding row of the form, and thus "Label 2" will be displayed in the row corresponding to the conversation associated with "Label 2" in step 506. Of course, it will be recognized by those skilled in the art that the user can input customized label names and/or the system may provide predefined labels. 15 VIEWING A CONVERSATION Fig. 6A is a flowchart depicting how the conversation assistant generates a conversational view in response to the conversation management system's display instructions. In some embodiments, some of the actions shown in Fig. 6A, such as actions for formatting the conversation information to be displayed, are performed by the conversation management system prior to sending the conversation information to the conversation assistant in the client. The conversation assistant first receives a series of messages belonging to a particular conversation as well as an associated set of display instructions at step 602. The conversation assistant, at step 604, identifies the topic of the conversation as well as any system-defined categories and user-defined labels associated with the conversation. Based on the categories and labels, the conversation generates a list of user-selectable actions and a list of user selectable labels, respectively. These two lists are similar to the two pull-down lists 344 and 345 shown in Fig. 3B. In one embodiment, the list of user-selectable actions includes only actions that are applicable to the particular conversation (i.e., the conversation to be displayed). Therefore, a conversation that is already in the "Trash" category cannot be associated with the "Trash" category again. By the same token, the list of user-selectable labels only includes labels that have not yet been associated with the particular conversation. Starting from step 608, the conversation assistant generates a sub-form for each individual message in the conversation, the sub-form including at least a detailed message header and a message body. As used herein, message body refers to the message created by the user including the subject reference, and excludes any system information added to the message by the messaging software. Each detailed message header includes the names and/or addresses of the sender and all the primary and secondary recipients, the subject of the message, a set of message-level actions and a date/time value. One of the message-level actions includes an option to view the message in its original format including routing information and other messaging system provided information such as "Mime-Version:", "Content-Type" and the like. The conversation assistant also creates a concise message header from the detailed message header at step 610. The concise message header includes the identifiers of the sender and the recipients. In some embodiments, the recipients are excluded from the concise message header. If the user is in the recipient list, the conversation assistant utilizes a unique character string or icon as his identifier at step 610, which is similar 16 to the user's identifier in the sender list. For example, the pronoun "me" in English can be used to represent the user in the concise message header. If the message is the first one to identify a particular recipient (i.e., in the primary or secondary recipient fields of the message header) in this conversation, the conversation assistant will highlight the recipient's identifier in the concise message header at step 614. On the other hand, in some embodiments, when a recipient previously included in the list of recipients is no longer included, the conversation assistant will display the recipient's identifier in a visually distinguishing manner, for example, a "ghost" font. In other embodiments, the concise message header includes a sender identifier, a portion of the message, and a date/time representation of the message. Next, the conversation assistant decides how to display the sub-form at step 616. If the message associated with the sub-form has not been viewed or marked as read by the user, the sub-form is displayed in an expanded mode, i.e., both the concise message header and the complete message body are displayed at step 618. If the message has been viewed or marked as read, the sub-form, by default, is displayed in a compacted mode, containing only the concise message header and a portion of the message body (e.g., the first few lines of the message) at step 620. The user can subsequently expand the compacted sub-form by clicking on it. Similarly, the sub-form docs not show the detailed message header, but does include an option for the user to choose if he wants to see the detailed message header at step 622. Finally, the conversation assistant at step 624 creates a set of reply options at the bottom of the sub-form, e.g., "Reply", "Reply to All" and "Forward". In some embodiments, a subset of the actions described above are performed for each message in the conversation. In some embodiments one or more addition formatting actions are performed. Fig. 6B is a schematic screenshot of the second conversation in Fig. 3B according to one embodiment of the present invention. The top and left portions of the screenshot are identical to that of Fig. 3B. But the list of conversations 360 has been replaced by a list of messages 640. On top of the list of messages are the conversation's topic "Topic 2" 630, all the user defined labels 632 associated with the conversation and an "Expand All Messages" button 634. Since the four messages have been viewed or marked as read by the user, the top three messages in the list are displayed in the compacted mode and only the last (and the most recent) one is displayed in the expanded mode. In some embodiments, when there are no unread messages (i.e., which have not been viewed or marked as read by the user), messages in the conversation which have been marked as starred are also displayed in expanded mode. 17 This provides a visual effect that all the messages in the conversation are piled together. Each compacted sub-form displays a concise message header 641 and a snippet 643 such as the first few words of the message body. In some embodiments, senders in the concise message header are identified in color such that the text representation for each sender is presented in a different color. This aids in distinguishing senders in a displayed conversation. In some embodiments, the colors are generated by the system until the system runs out of colors to associate with senders. In some embodiments, the colors are associated per conversation, such that the same sender may have a different color associated with it depending on the conversation being displayed. Note that all the recipients are highlighted in the concise message header 641 since this is the first message of the conversation. In contrast, only one identifier "S1" is highlighted in the second compacted sub-form since this is first message in which SI is a participant in the conversation. The expanded sub-form includes a complete message body 645, a "More options" link 647, which causes the detailed message header to be display when selected, and a list of reply options 649. Since the last message was sent by S4, one of the reply options is "Reply to S4", which alerts the user that a reply will be addressed to S4. In some embodiments, when the number of messages in a conversation exceeds a threshold value (e.g., eight or ten messages), and a plurality of consecutive messages in the conversation are to be displayed in a compacted sub-form (e.g., messages marked as read, in a conversation selected from an Inbox list of conversations), these messages are displayed in a second compacted sub-form that includes no text, and thus no sender list and no snippet. Instead, the second compacted sub-forms represent each of these messages with a small bar. The visual effect is that these sub-forms appear like the edges of cards in a deck of cards. In some embodiments, the first and last messages in a conversation are never shown in the second compacted sub-form, and more generally certain messages are excluded from being represented by the second compacted sub-form such as those messages having the "starred" label. The second compacted sub-form is used to facilitate viewing conversations having large numbers of messages. This same methodology can be used for representing the messages in a conversation matching a user-specified search query, where the conversation has more than a threshold number of messages. In this case, the messages to be represented by the second compacted sub-form are groups of consecutive messages that do not match the search query. 18 Fig. 6C is a schematic screenshot that is similar to the one shown in Fig. 6B except that (1) the first sub-form 650 is displayed in an expanded mode after the user clicks on the sub form, (2) the last sub-form includes the detailed message header 660, and (3) a message reply form 670 is attached to the last sub-form after the user clicks on the "Reply to S4" link. In one embodiment, a text box for replying to a message (e.g., the last message) in a conversation may be persistently displayed in association with that message when a user is viewing a conversation's contents. In other words, the message reply form 670 is displayed and the reply text box associated therewith are accessible to a user without requiring a user to click the "Reply to S4" link. In other embodiments, a message reply form may be persistently displayed for all of the messages in a conversation, or for all messages displayed in an expanded mode. The first expanded sub-form 650 is structurally the same as the last sub-form shown in Fig. 6B. It includes a concise message header, a "More Options" link, a message body and a set of reply options at the bottom of the sub-form. The detailed message header 660, in addition to the message sender and recipients' e-mail addresses or other identifiers, includes a list of actions that the user can take. For example, the "Trash this message" action 661 allows the user to remove the message from the conversation. The message reply form 670 by default only includes S4's address in the "To:" field since the sender of the message to which the user is replying is S4. However, the message reply form provides the user with additional options (e.g., "add Cc", "add Bcc") if the user would like to send the reply message to more recipients. The message reply form 670 also allows the user to edit the subject of the original message and attach a document to the reply message. Fig. 6D is a schematic screenshot of the conversation shown in Fig. 6B after the user clicks on the "Expand All Messages" button 634. As a result, all the four messages 608 are displayed in the expanded mode. Note that the text in the button 634 changes to "Compact All Messages". The display of the conversation returns to the format shown in Fig. 6B after the user clicks on the button 634 again. Fig. 6E is a schematic screenshot of a conversation illustrating some of the features described earlier. In particular, Fig. 6E illustrates at 682 an example of the second compacted sub-form used when the number of messages in a conversation exceeds a threshold value. Although the user is not able to see any header information for those messages, the user can still see how many message are in this second compacted sub-form. 19 In some embodiments, messages on either end of the messages in second compacted sub form are shown in the compacted sub-form which shows the concise message header as illustrated by concise messages headers 684 and 686. In some embodiments and as illustrated in Fig. 6E, the concise message header includes the sender, a portion of the message, and a dateftime value of the message without showing the other recipients of the message. An example of the "starred" feature can be seen at message 688. The star in message 688 differs from the other messages in that its star is filled in, indicating that this message has a starred status, whereas the others do not. Of course, any visual indicator which provides a differentiating status could be used and the concept is not limited to a "star" and whether that star is "filled in" or not. As described above, a message having a starred status is displayed in one embodiment in expanded mode when a conversation is displayed and there are no unread messages (as in Fig. 6E). In another embodiment, if there had been unread or not viewed messages, then the starred message 688 would be displayed in the compacted sub-forni, but not the second compacted sub-form such as those messages at 682. Other embodiments foresee different permutations, such as always seeing the starred messages in expanded mode regardless of the presence of any unread or not viewed messages. USING QUERIES TO LOCATE, LIST AND DISPLAY CONVERSATIONS As mentioned above, a user may search for conversations that match a user specified query. The conversation management system 102 and the conversation assistant 110 work together to generate search results corresponding to the query and to present the results to the user in a highly intuitive fashion. Fig. 7A is a flowchart illustrating how the conversation assistant 110 generates the various forms for displaying the conversations that match a user's search request. In some embodiments, some of the actions shown in Fig. 7A, such as actions for formatting the conversation information to be displayed, are performed by the conversation management system prior to sending the conversation information to the conversation assistant in the client. At step 702, the conversation assistant 110 receives information representing a plurality of conversations matching a search query (which may contain one or more query terms) and associated display instructions from the conversation management system 102. At step 704, the conversation assistant 110 generates a form that hosts a list of conversations, each 20 conversation occupying one row in the form. For each row in the form, the conversation assistant 110 also generates a snippet that contains a matched query term at step 706. In some embodirrents, the conversation assistant 110 highlights with the snippets terms that match any of the query terms in the search query. At step 710 the list of conversations is displayed. Fig. 7B is a schematic screenshot of a list of conversations produced in accordance with these steps. In some embodiments, the user may specify a user preference that causes the generation and/or display of snippets to be suppressed. In some embodiments, when the text matching the search query is located in the header or other information of the message, the snippet provided is a first portion of the message. In some embodiments, if the user selects (e.g., clicks on) a row representing a conversation in the list of conversations (e.g., a row in the list of conversations shown in Fig. 7B) (step 712), the conversation assistant 110, at step 714, displays the selected conversation. To do this, the conversation assistant generates a series of sub-forms hosting a series of messages that are associated with the selected conversation. In particular, if the selected conversation is selected from a list of conversations produced in response to a user specified search query, the sub-forms whose associated messages do not contain any query term in the search query are displayed in a compacted mode while the sub-forms whose associated messages contain at least one query term are displayed in an expanded mode. The conversation assistant 110 also highlights the matched query terms in the message body. An example of the display of a selected conversation that matches a specified query is shown as a schematic screenshot in Fig. 7C. If the selected conversation is selected from a category list of conversations, such as an Inbox list of conversations, the initial display of the message is as described above with respect to Fig. 6C. Fig. 7B is a schematic screenshot of a browser window listing three conversations 730 that match tbie query term "Tahoe" 720. Above the three conversations 730 is a "Search Options" link 732. The user can click on the link to update the options that were used to conduct the search. For example, the user can specify whether the search is limited to conversations in one category or to conversations in all the categories. When the listed conversations belong to two or more distinct categories, none of the categories in group box 346 are highlighted. Within each matching conversation, a snippet that includes the term "Tahoe" is identified and displayed with the word "Tahoe" being highlighted. These snippets indicate that the three conversations cover three distinct topics, i.e., the first conversation is 21 about a ski trip to Lake Tahoe, the second conversation is about a Tahoe-model SUV, while the third conversation is about camping sites at the Tahoe National Forest. Therefore, the user can use the information in the snippet to decide which particular conversation he wants to open. Fig. 7C is a schematic screenshot displaying all the messages in the third conversation after the user clicks on it. Note that the "All Mail" category has been highlighted (in group box 346) in this screenshot, indicating that tLe third conversation is currently located in the "All Mail" category. Since the second message includes the query term "Tahoe", the second sub-form is displayed in the expanded mode with the word "Tahoe" highlighted. SPELL CHECKING Fig. 8 is a flowchart illustrating how the conversation assistant interacts with a user to correct potentially misspelled words in a message being composed by a user. After composing a message and before sending it out, the user may click on the "more actions" pull-down list and select the "spell check" item. Note that this item is not shown in Fig. 4B, because the pull-down list therein only comprises conversation-level actions. "Spell check" is a message-level action that is displayed in an pull-down action list only while a message composition form is being used. In response to user selection of the "spell check" action, the conversation assistant sends the composed rnessage to the conversation management system and then receives a spell-checked copy of the composed message as well as display instructions at step 802. In an alternative embodiment, the actions performed by the conversation management system described herein relating to the spell checker are performed by the conversation assistant or by a local cli ent application using a local dictionary. Based on the display instructions, the conversation assistant highlights each potentially misspelled word in the message at step 804, associates with each highlighted word a list of candidate words generated by the system at step 806 arid displays the re-formatted message in a separate browsing window at step 808. When the user selects a particular highlighted word in the browsing window, the conversation assistant positions the user-selected word in a spell correction window and attaches a list of candidate replacement terms next to the window at step 810. (It should be noted that a replacement term may contain one or more words.) The conversation assistant then updates the misspelled word in the spell correction window with the user-specified replacement term in the candidate list at step 812. The conversation 22 assistant can also expand the spell correction window im a user-specified direction at step 814 so that the user can revise more than one word within the spell correction window at step 816. Fig. 9A is a screenshot illustrating the same conversation shown in Fig. 6C except that the user has composed a reply message 817 to S4. Before sending the message, the user decides to conduct a spell check. Therefore, the user clicks on the "more actions" pull-down list and then selects the "Spell Check" item 818. The conversation assistant, in response, sends the composed message to the conversation management system and then displays the spell check result in a separate browsing window. In some embodiments, the the spell check results are displayed in the same window as the one in which the -user was composing the message. In effect, the display remains generally the same except focr toggling of certain features associated with the spell checker and the highlighting of the potentially misspelled words. This embodiment has the added benefit that the user can perform the spell checking within an equivalent visual context that the user was provided when composing the message rather the user being presented with a separate new window without such context. Fig. 9B depicts a screenshot comprising three separate browsing windows at different stages of the spell check process. The first window 820 contains a spell-checked copy of the message. In particular, three potentially misspelled words 821, 823 and 825 have been highlighted in the window. After the user clicks on the second word 823, the word "delying" is then incorporated into a spell correction window 832 as shown in the second browsing window 830. Further, a list of candidate words 834 generated by the system are displayed under or adjacent the spell correction window. The user then selects the third replacement term, "delaying", to replace the misspelled term "delying". If the user wants to add the word "temporarily" before the corrected word "delaying", the user can click on the left arrow 841 as shown in the third window 840, position the browser window pointer-to a position in front of the misspelled term "delying," and then enter the word "temporarily." Finally, after correcting all the misspelled words, the user clicks on the "Done" button 845, which causes the message to be sent to S4. CONVERSATION SERVER The Figs. 10 through 19 may assist in describing an embodiment of the Conversation Server 102 described earlier. One embodiment of the Conversation Sever 102 is illustrated in Fig. 10. Conversation Server 102 includes Conversation Engine 1002, Updater Engine 1004, 23 Message Index 1006, Query Engine 1008, Message Database 1010, one or more Auxiliary Services servers 1012, Spell Checker 1014, and SMTP 1016. The Conversation Engine 1002 handles requests from and responses to the Conversation Assistant 110, via its connection with Communication Network 106. Communication Network 106 may include the Internet, one or more local area networks (LANs), one or more wide are networks (WANs), other types networks, or a. combination of such networks. The Conversation Engine is also connected to various auxiliary services such as Auxiliary Services servers 1012 and Spell Checker 1014. A Query Engine 1008 is connected to the Conversation Engine 1002, the Message Index 1006, and the Message Database 1010. An Updater Engine 1004 is connected between the Conversation Engine 1002 and Message Index 1006 as well as Message Database 1010. The SDvTP Gateway 1016 is connected between the Conversation Engine 1002 and the Communication Network 106. Although Fig. 10 shows the Conversation Server 102 as a number of discrete items, the figure is intended more as a functional description of the various features which may be present in the Conversation Server 102 rather than a structural schematic of the embodiments described herein. In practice, and as recognized by those of ordinary skill in the art, items shown separately could be combined and some items could be separated. For example, some items shown separately in the figure could be implemented on single servers and single items could be implemented by one or more servers. The actual number of servers in Conversation Server 102 and how features are allocated among then will vary from one implementation to another, and may depend in part on the amount of email traffic that the system must handle during peak usage periods as well as during average usage periods. As briefly mentioned above, the Conversation Engine 1002 may respond to a variety of requests from the Conversation Assistant 110 related to messages and return conversation based responses via its connection with the Communication Network 106. Although, the SMTP Gateway 1016 may also be connected to the Communication Network 106, the SMTP Gateway 1016 may be more directly involved in receiving and sending messages. In some embodiments, the SMTP Gateway 1016, for example, transmits and receives messages using the Simple Mail Transfer Protocol (SMTP). The SMT'P Gateway 1016 may receive a new message from the Communication Network 106 and send the message to Conversation Engine 1002 for additional processing. Additionally, the SMTP Gateway 1016 receives 24 messages from the Conversation Server 1002 and then transmits (via the Communication Network 106) those messages to the recipient addresses specified in the messages. The Conversation Engine 1002 may also handle requests for spell checking of a message that might be being composed. The Conversation Engine 1002 sends the portions of the text to be checked to the Spell Checker 1014 for spell checking. The Spell Checker 1014 returns information including an identification of the text identified as potentially incorrectly spelled. In some embodiments, the Spell Checker 1014 provides information regarding suggestions for the text identified as potentially incorrectly spelled. In some enibodiment, this information is sent to the Conversation Assistant 110 for subsequently processing. The one or more Auxiliary Services servers 1012 provide additional services to the Conversation Engine 1002. In some embodiments, the auxiliary services servers 1012 include a spam detection module. Operation of the spami detection module is discussed below with reference to Fig. 11. In some embodiments, the auxiliary services servers 1012 include an attachment management module, which manages the efficient storage and retrieval of files attached to email messages. An embodiment for processing a received message is shown in Fig. 11. A message is received, assigned to a conversation, indexed, assigned one or more: attributes and stored. Initially a message may be received by the SMTP Gateway 1016, for example, where some processing and handling may occur, and may then be passed to the Conversation Engine 1002 (stage 1102). The Conversation Engine 1002 may generate a message identifier for the message. The message identifier may be used to distinguish one message from another. In an embodiment, the identifier is a N bit number composed of one or more parts. For example, in an embodiment the message identifier may be a 64 bit number consisting of a Y bit (e.g., 32 bit or 48 bit) timestamp and a 64-Y bit hash of the message contents. A hash is a mathematical function that maps values from a large domain into a smaller one. One of ordinary skill in the art will recognize that there are many different ways to create message identifiers that provide sufficient information to distinguish messages from each other. The Conversation Engine 1002 may then parse the message into its constituent parts (stage 1104). These parts might include the address of the sender, one or recipient addresses, the subject of the message, a "References:" field as that field is described in RFC 2822 (April 2001) described earlier, an "In-Reply-To:" field also described in RtFC 2822, the content of 25 the message, or any other information which might be contained in the rnessage. After the message is received, and either before after parsing the message, the message is passed to a spam checking module (stage 1105) to determine if the message matches spam criteria. In some embodiments, the spam checking module works asynchronously, and in parallel with other processing of the message. In some embodiments, the spama criteria are designed to determine whether a message is likely to be an unsolicited message that the user is unlikely to want to read. The parsed message is added to a message database (stage 1106). In one embodiment, the message is added to a message database and not subsequently modified thereafter, except perhaps for deletion. Some or all of the parts of the message that are extracted during parsing of the message may be used to assist in determining the conversation, if any, to which the received message belongs (stage 1108). For example, the subject of a message could be compared to other messages with the same subject since it is likely that messages within a. conversation will have the same, or very nearly the same, subject. If a matching conversation has not been found, then the message is associated with a new conversation. After the conversation association has been made, the message is iridexed for searching (stage 1110). In one embodiment all of the text of the message is indeed along with portions of the header information. In some embodiments, "noise words" (e.g., words such as "the", "a" and "or") in the message body are not indexed, but all other text in relevant portions of the message are indexed. One of ordinary skill in the art will recognize that those portions of the message which may be searched should be indexed. As noted belo'V, in some embodiments information concerning attributes associated with the me ssage are added to the index at a later stage of the message processing. Next, an initial set of attributes is assigned to the message (stage 11 12). These type of attributes may include, for example, labeling a received message as "unread" (which typically means that the message has been neither viewed nor marked as read) to indicate that the message is new. Another attribute that is initially assigned to messages, other than messages sent by the user, is the "InBox" attribute. Another set of attributes that are initially assigned to each message are the user-defined attributes associated with other inessages (if any) in the same conversation. The user-defined attributes associated with the other messages in the 26 conversation are determined by searching a conversation database that is described below with reference to Fig. 18. Other attributes may be initially assigned to the message as well. The attributes associated with a message may be used to search a message database to obtain message with similar attributes. For example, a search could be executed to search for all messages which are labeled as "unread". Additionally, the attributes of a conversation may be added to the message since, in one embodiment, a message inherits the attributes of its conversation. In some embodiments, the attributes associated with messages may include attributes associated with individual messages, but not necessarily all the messages in a conversation. For instance, a "Marked for Deletion" attribute (sometimes also called the "Trash" attribute) may be associated with an individual message in a conversation, while not being as sociated with other messages in the same conversation. Messages marked for deletion are still stored by the system, and are still associated with conversations, but are normally not displayed when the corresponding conversations are displayed. One or more special views are employed to enable a user to view messages having the attribute "Marked for deletion." Such views afford the user the opportunity to "undelete" a message. On the other hand, in some embodiments, when a user-defined label is associated with a conversation, that label is associated with all messages in the conversation. In some other embodiments, when a user defined label is associated with a conversation, that label is associated with all mes sages in the conversation that meet predefined criteria (e.g., messages other than those marked for deletion). Next, any user-defined filters that the user may have established are applied to -the message (stage 1114). Each user-defined filter includes a set of filter conditions and a set of actions. The filter conditions define which messages match the filer and the actions include actions that specify labels that are to be added or removed from the message. The -filter conditions can include criteria with respect to the sender, the recipients, text in the message subject, text in the message, and the like. In some embodiments, the actions can include "remove from inbox" (i.e., remove the InBox label from the message, if present), adding a system label (sometimes called a category) to the message, and adding a user-defined label to the message. For instance, the filter may specify that all messages having a particular term or combination of terms be labeled with the "Trash" label. Another filter may specify that if the 27 term "Lake Tahoe" appears anywhere in the message, a "Vacation" label is to be added to the message. It may be noted that in some embodiments, stages 1112 and 1114 concern the assignment of labels to the message being processed. At or about the time that stages 1112 and 1114 are preformed, the results from the spam checking module (stage 1105) are retrieved. If the spam checking module classifies the message as spam, a "Spam" label is assigned to the message and any conflicting labels (e.g., "InBox" or "Trash") are removed from the message. After the set of labels assigned to a message have been established, the index and certain tables in the Conversation Engine 1002 are updated (stage 1116) to reflect the set of labels assigned to the message. The index is updated by adding information indicating the labels to which the message is assigned. As a result, an index search on each of those labels will produce a list of messages that includes the current message being processed. In addition, at least one table or database in the conversation engine is updated to indicate the set of labels assigned to the current message being processed. This is described below with reference to Fig. 18. Finally, an acknowledgment may sent to the sender of the message (stage 1118). In some embodiments an acknowledgment may be sent and in others it may not be sent. While Fig. 11 shows the stages in a particular order, it is not intended to limit the order of the stages unduly. In other embodiments, the stages may be differently ordered. For example, the message could be added to the message database prior to the indexing of the message, thus stage 1114 could be followed by stage 1110. One of ordinary skill in the art would recognize various ways to reorder the stages. ASSOCIATING EACH MESSAGE WITH A CONVERSATION Referring to Fig. 12, the following is a more detailed description of how a message may be matched with a conversation (stage 1106). After the message is parsed (stage 1104 of Fig. 11), portions of the constituent parts may be used to formulate a search query for candidate conversations (stage 1202). For example, conversations may be related based on temporal information, sender information, subject information, other information in the header, or system supplied information, or any combination thereof. One embodiment formulates the search query using the subject of the message along with the "References:" and/or the "In 28 Reply-To:" field. Other embodiments include the sender of the message or the recipients in the search query, One of ordinary skill in the art would recognize many different search queries to produce messages which might be related to the current message. The search query is applied against previously stored messages and candidate messages are received (stage 1204). The messages, or information about the messages, is examined to determine which message (if any) best matches the current message (stage 1206). The conversation to which that message belongs is likely to be the conversation to which the current message belongs. A number of different approaches may be taken to determine the conversation to which the current message belongs. One approach may use the subject of the current message. It is likely that messages having the same subject belong to the same conversation. Therefore, a query could be formulated that uses the subject of the current message. For example, if an incoming message has the subject "Where should we go for lunch today?", it is likely that the conversation (if any) to which this current message belongs will include one or more messages having the same subject. When comparing subjects, it may be desirable to normalize the subject prior to performing the comparison. In some embodiments, normalizing the subject includes removing prefixes such as "Re:" and "Fwd:", which are commonly added to the subject by some systems. It may be desirable, however, to examine more than just the subject. If two messages have the same subject but one was received long before the other, then it is more likely they were not part of the same conversation. For example, if two messages having the subject "Where should we go for lunch today?" were received a month apart, it is unlikely that they were part of the same conversation. Thus, in one embodiment of the invention, if the normalized subjects of the current message and a message from the candidate conversations match, then an examination of a date/time value of the messages may be desirable. Other factors may be considered when matching a message to a conversation such as the recipients, portions of the message content, domain addresses of the sender, or other factors. Those of ordinary skill in the art will recognize that there are many different ways to determine the conversation to which a new message belongs. Once the current message is matched up with a satisfactorily matching message, the conversation associated with the matching message may be associated with the current message (stage 1206). On the other hand, if no satisfactory matching message (and, therefore, no conversation) is found, a new conversation identifier is associated with the message (stage 1206). 29 In some embodiments, the conversation identifier may be created from the initial message received in a conversation. For example, a system provided message identifier (provided by either the transmitting or receiving system) of the initial message could server as a conversation identifier. Subsequent messages are then associated with this message identifier which now acts as a conversation identifier. One of ordinary skill in the art will recognize various features of the initial message that could be used to provide a conversation identifier. In some embodiments, the feature should provide some comfort that the value is unique to the initial message so that multiple conversations will not be assigned the same conversation identifier. As mentioned earlier, after the current message is associated with a conversation (previously existing or newly created) (stage 1106), initial attributes are added (stage 1108). One embodiment for adding these initial attributes (stage 1108) may be better understood by referring to Fig. 13. Initially, the sender of the message may be examined. If the sender of the current message is not the user for whom this message processing is being performed, it highly likely that the current message has been sent to that user by someone else. Accordingly, if at stage 1302 it is determined that the sender of the current message is not the user, an initial attribute of "InBox" (also called the InBox label) may be associated with the current message (stage 1304). An attribute of "InBox" may be used to identify those messages which have been sent to the user. For example, in some embodiments a search of messages having the "InBox" attribute is used in the production of an InBox view for the user. In this document, the terms "attribute" and "label" are used interchangeably. Also, "associating" a particular attribute with a message, and "marking" the message with the particular attribute or label, are considered to be the same or equivalent operations. Since it is highly likely that the current message is new, it is also highly likely that the user has not viewed this message before. Accordingly, an "Unread" attribute indicating such may be associated with the current message (stage 1306). Those or ordinary skill in the art will recognize that message attributes may be implemented in a number of way to achieve the same result. For example, a predefined value could represent "InBox." It is sufficient that messages with desired attributes be searchable based on those attributes. Other attributes can be associated with messages as well. Attributes may be thought of in a plurality of forms, though the distinction is less important than the ability to search for a particular attribute. 30 Attributes can include system defined attributes, for example, such as InBox, Trash, Spam, AllDocuments and Unread. In some embodiments, certain system attributes may be mutually exclusive (e.g., InBox, Trash and Spam). Attributes can also include user defined attributes, sometimes herein called Categories. If the user was the sender of the message being processed (as determined at stage 1302), or after any applicable system attributes have been added to the message, such as "Unread" (stage 1306), additional attributes that belong to the conversation are added to the message (stage 1307). Certain filter criteria may be examined and applied against the incoming message (stage 1308). In an embodiment, a user may set up filters that apply attributes to a received message when predetermined conditions are met. In another embodiment, the system may apply one or more predefined filters to received messages. If the current message matches filter criteria, then attributes may then be applied to the message according to the filter (stage 1310). In one embodiment, the system provides tools to enable a user to set up a filter such that certain messages are not placed in the "InBox". In other words, the filter would cause the "InBox" attribute to be removed from the message. In another embodiment, the current message could be associated with a particular user-defined attribute, such as a label indicating an area of interest to the user to which one or more conversation may be associated. For example, an incoming message may be associated with a conversation having a label "food", and then a "food" label would be associated with the current message. Generally, a message inherits the labels of the conversation to which it is associated. Since a plurality of filters may be applied to received messages, newly received messages as well as their associated conversations may be associated with more than one user-defined label. In another embodiment, the user can associate a snooze condition.with a conversation. In some embodiments, the snooze condition is associated with the conversation when a user specifically commands the system to do so. In some embodiments, a snooze condition is associated with a conversation when a filter matches a message in the conversation. A snooze condition specifies certain actions to be performed whenever a new message is received in the conversation to which the snooze condition has been applied. For example, the snooze condition may prevent the system from associating the InBox label with new 31 messages in the conversation. More specifically, a user may associate a snooze condition with a conversation (either directly, or through the operation of a filter) that prevents new messages in the conversation from being placed in the user's inbox unless certain trigger conditions are satisfied. One such trigger condition might be an incoming message addressed directly to the user (as the only primary recipient). Another such trigger condition might be the passage of a period of time chosen by the user or the system. Still other trigger conditions could be a received message containing a specified word or phrase. In this instance, when a message satisfying the snooze condition is received, the snooze condition is removed from the conversation and the incoming message is marked with the "InBox" label. In some embodiments, additional actions are also taken, such as adding the "InBox" label to other messages in the conversation. In another embodiment, all of the messages in the conversation having an "Unread" label, are labeled with the "Inbox" label. Accordingly a search of the "InBox" would return this conversation. In some embodiments, a snooze condition is associated with a conversation by generating a snooze filter that prevents new messages associated with a conversation from being marked with the "InBox" label until a predefined event or condition occurs, after which the snooze filter is deleted or revised. Another type of filter that may be applied to received messages is a Spamm" filter that identifies undesirable messages and marks them with a "Spam" label (i.e., associates the "Sparn" attribute with such messages). Figure 14 illustrates one embodiment for modifying the attributes of a conversation. The attributes of a conversation may be modified when the conversation, or an incoming message associated with the conversation, matches filter criteria. The attributes of a conversation may also be modified when the user indicates that the conversation should have a particular user defined attribute. For example, the user may designate that a particular conversation should be associated with a "food" category. In such a case, the conversation (and its respective messages) are marked with a "food" label as to be associated with the "food" attribute. The user may also designate a conversation as marked for deletion. In some ways, user-defined attributes can be conceptually compared to folders. However, embodiments of the present invention allow conversations to be associated with multiple user-defined attributes. In some embodiments, when a new attribute is associated with a conversation, all messages in the conversation are marked with the new attribute. 32 Referring to Fig. 14, when a given attribute of a conversation is to be modified, a search is formulated (stage 1402) to locate the conversation (stage 1404). After the conversation is found (stage 1404), the attribute of the conversation may be modified (stage 1406). The specific mechanisms used to accomplish stages 1402, 1404 and 1406 depend on the mechanisms used to associate attributes with conversations. In some embodiments, attributes are associated on a conversation by conversation basis. For example, the conversation engine may maintain a list of attributes associated with each particular conversation. Alternately, or in addition, the conversation engine may maintain an index that maps each defined attribute to all conversations marked with that attribute. Alternatively, in some embodiments the attributes associated with a conversation are associated with the individual messages in the conversation. In such embodiments, the conversation engine may maintain an index that maps each defined attribute to all messages marked with that attribute, and may further maintain a table or other mechanism for mapping each message to the conversations associated with the message. Many features of the present invention use conversations as the basic unit of information, as opposed to messages. For instance, the InBox presents the user with a list of conversations. Some features of the present invention use searches to identify conversations to be listed in a plurality of distinct views of the conversations in a user's email account. Searching for conversations and generating a representation of an identified conversation is described next with reference to Fig. 15. Initially a search query is received (stage 1502). The search query may be user specified, or system generated (e.g., in response to the user clicking on an "inbox" icon). A search query may be based on a number of factors. The search terms in the search query may come from the user in the form of words or combination of words. For example, a user could search for messages containing the words "bagel" and "inexpensive" and the associated conversations, if any, would be returned. A search query can be generated by the system in response to certain user actions. For example, a system generated search query may search for conversations having the attribute "InBox" if the user desired an InBox view. Any combination of searchable terms can be used in a search query. As mentioned above, searchable terms could include the text of the messages, any attributes associated with the messages, conversations, or header information associated with a message. In one embodiment, applying the search query to a database of messages returns a set of messages 33 (stage 1504). Referring briefly to Fig. 10, this may be done, for example by sending the search query to the Query Engine 1008. The Query Engine 1008 may apply the search query to the message index 1006 which may return a list of messages. The list of messages may be received at stage 1504. If desired, other embodiments might return the list of messages in a number of different ways, including the return of a set of message identifiers, document identifiers, all or portions of messages, or any combinations thereof. In some embodiments, searches are run against conversations as a whole rather than against individual messages. Thus, when a query contains first and second query terms, one of which is found in a first message and the other which is found in a second message of the same conversation, the conversation will be considered to be relevant to the query, and thus included in the search results. For example, consider a conversation in which the first message solicited ideas for a lunch location and a subsequent message, while naming a particular restaurant, did not include the text of the original message. If a user was interested in finding that conversation in which the particular restaurant and lunch were discussed, then the search is more likely to produce the desired result if it were applied against the text of the entire conversation as if message boundaries within a conversation did not exit. Conversations are associated with the set of messages returned at stage 1504. A number of methods may be used to identify the associated conversations. As a message is selected (stage 1506) from the set returned at stage 1504, the conversation to which the message belongs is identified (stage 1508). In one embodiment, a data structure which matches each message to a conversation may be maintained. If so, an examination of the data structure entry associated with a particular message identifier would identify the conversation to which the message belong. It may be that the number of conversations to return as result set is limited to a predefined number. If so, then processing of the set messages continues until a sufficient number of conversations are identified and the results returned. On the other hand, all of the conversations associated with the set of messages returned may be identified, but only a subset returned. Once the list of conversations has been created (stage 1510) by identifying the conversations to which all or a portion of the returned results belong, the conversation information is formatted for return to the requestor (stage 1512). The formatting stage 1512 may format a number of different types of information associated with the identified conversations, the details of which will vary from one embodiment to another. In some 34 embodiments, the formatting information is of the type that is recognized by the Conversation Assistant 110 for presentation of the conversation information to the user. In some embodiments, conversations in the list of conversations generated at stage 1510 are ordered according to a date/time value assigned to each conversation in accordance with a predefined rule or set of rules. As explained above, in some embodiments, each conversation in a list of conversations, is assigned a date/time equal to the date/time of the most recent message that matches the search criteria used to generate the list of conversations, and the conversations in a list of conversations are ordered (e.g., in reverse chronological order) in accordance with these assigned date/tirne values, One of ordinary skill in the art will recognize that there are various other ways to order and present the conversations in a list of conversations. In some embodiments, the formatted conversation data representing a list of conversations (generated at stage 1512) includes a count of the number of messages included in each conversation in the list of conversations. In some embodiments, the message count for each conversation is displayed by the Conversation Assistant 110 to indicate to the user how many message are included in the conversation. In one embodiment, a concise conversation header is created for each conversation in the list of conversations (e.g., during stage 1512). The conversation header may identify a list of the senders of messages in the conversation. This list may contain all or a subset of the senders within the conversation. In some embodiments, the list of senders is formatted so as to visually distinguish those senders who have sent a message (in the conversation) that is currently labeled as "Unread" by the user. In another embodiment, the Conversation Assistant I10 presents these senders in a different format from the other senders. For example, senders of the "Unread" messages may be identified using bolded or highlighted text. In another embodiment, the list of senders of messages (in the concise conversation header) may be processed by replacing the name or address of the user with a self-referencing identifier. As a result, when the list of senders for a conversation is displayed, instead of displaying the user's name or other identifying information similar to senders who are not the user, the self-referencing identifier (e.g., "me") is displayed. Other types of self-referencing identifiers could be used to distinguish the viewing user from the other users. 35 In another emtbodiment, the concise conversation header for each message in the list of conversations may including information that indicates how the user received the message. In other words, the information may specifically identify how the user was sent the message. For example, the user might be sent the message directly, the user might be copied on the message, the user might be copied blindly on the message, or the nser might be part of a distribution list to which the message was sent. One or more of these various ways the user received the message might be indicated to the user. For example, if the user was sent a message directly, an iconic representation could be used (such as ">") to so indicate when presenting the conversation to the user. In some embodiments, the concise information header for each. message in the list of conversations includes a snippet of the conversation content, the snippet including information for displaying text matching the search terms in bold and also including text surrounding the matching text formatted in a normal font. When the list of conversations is generated for the inbox or other system category, the snippet includes text from the conversation selected in accordance with predefined criteria. In some embodiments, the snippet contains text from the beginning of a most recent message in the conversation, while in another embodiment the snippet contains text automatically selected to be indicative of the conversation content. In another embodiment, when the user selects for viewing a particular conversation from among the conversations matching a search query, the conversation engine may generate conversation information indicating which messages in the conversation match the query and which do not. The conversation information may further include a. portion of text of the messages which match the search query. This conversation information may be formatted for display to the user. The conversation information may include matching messages formatted for display in an expanded mode and non-matching messages fonnatted for display in a compacted mode. Various types of information may be presented to the user in the expanded mode, including any combination of all or portions of the following: header information, content information, text matching the search query, and text surrounding the search query. In some embodiments, when one or more messages matching the search query are displayed in the compacted mode (e.g., in response to the user selecting a "compact all messages" button or option), the information displayed for such messages in the compacted mode includes a snippet of the message content, the snippet including information for displaying 36 text matching the search terms in bold and also including text surrounding the matching text formatted in a normal font. In yet another embodiment, the conversation information may indicate when certain users have been added or removed from a conversation. For example, if a user had been included on rnessages in a conversation up to a point in time and then no longer included, the information for one or more subsequent messages might indicate that that user was no longer part of the conversation. The Conversation Assistant might do this, for example, by using a font to display the user's name which is different from the font used to display the names of those users who are still participating in the conversation. The Conversation Assistant might use a "ghost" font for this purpose. The conversation information may also provide information about the introduction of a new participant to the conversation. For instance, the information concerning the first message that includes the new participant may including formatting information for distinctively displaying the new participant's name. This information may be displayed to the user by the Conversation Assistant such that the newly added sender's name or other identifying information appears in bold or some other visually distinctive presentation format. The conversation information may also include information about spell checking. The information might include an indication as to which words the Spell Checker 1014 identified as potentially incorrectly spelled, as well as information relating to suggestions for the correct spelling. Figure 16 provides an illustration of a format for storing messages according to one embodiment of the invention. When the message is stored in a message database (stage 1114 of Fig. 11), it may be stored as illustrated in Fig. 16. A Message Database 1602 may store information about the messages, for example Message 1 (1604) through Message x (1606), where x represents the number of messages corresponding to a particular user. In one embodiment, each user's messages are stored in a Message Database 1602 unique to that user. In another embodiment, messages belonging to more than one user may be stored in the sarre Message Database 1602. One of ordinary skill in the art would recognize many ways to prevent messages from one user showing up as messages belong to another. In still another embodiment, messages from more than one user may be stored in a Message Database 1602, 37 with only one storage entry per message such that multiple users would reference a single copy of a message. In one embodiment, a Mes sage (e.g., Message 1608) may include Header Information 1612, Content 1614, and Attachments 1616. Header Information 1614 may include the header information of the message including, for example, information identifying the sender and recipients, a time/date-value of the message, and the subject. Other information might also be included in the Header Information such as that described in RFC 2822. The Content 1614 may contain the content of the message. The Content 1614 may include text and/or other types of content (e.g., iniages or pictures). Attachment 1616 may be the contents of any information attached to a particular message. For example, a document attached to a message might be located in this part of Message 1610. Those of ordinary skill in the art would recognize other ways to store the message information. For example, an attachxnent might be stored in another storage structure and a reference to it located in Attachments 1616. In an alternate embodiment, all the messages for each conversation are stored as a single record, document or data structure in the message database. USER, MESSAGE AND CONVERSATION DATA STRUCTURES Figure 17 illustrates a user database and message index according to an embodiment of the invention. A User Database 1702 may store information about users. The information stored may include User Infornation 1704. User Information 1704 might contain various types of user information relating to user preferences, security information, or any other information that might be used by the various embodiments of the invention. The User Database might include user identification information used to identify the users such as User ID (1) (1706) to User ID (m) (1708) where m might represent the number of users of the system. A particular User ID (m) (1708) might be a unique identifier for each user such as a n-bit binary number. Other type of user identification might also be used. In some embodiments, the User ID of a user is used to identify a set of data structures 1720 for storing information about the filters, queries and labels associated with a user's mail account. In some embodiments, these data structures include a query cache 1722 for storing information representing the last few queries submitted by the user; a set of filter data structures 1724 for storing user-defined filters, if any; and a labels data structure 1726 for 38 storing information representing user-defined labels. The recent queries represented by information stored in the query cache 1722 may be presented to the user, for example in group box 348 (Fig. 3B), to enable the user to easily re-submit these queries to the conversation management system. The user-defined filters are used by the conversation management system during the processing of each new message as it is being added to the user's mail account. The stored information concerning user-defined labels may be presented to the user, for example in a group box 347 (Fig. 3B), to enable the user to easily request a list of conversations bearing a user-selected label. The User ID of a user may be used to identify a Full Text and Attributes Index 1710 corresponding to the user. A Full Text and Attributes Index 1710 might be associated with a particular user such that a different user cannot search the index for the messages associated with the particular user. The Full Text and Attributes Index 1710 stores information about messages in the user's mail account such that a query applied against the Full Text and Attributes Index 1710 returns a list of matching messages (if any). The list might be returned as a list of message identifiers. The information included in the Full Text and Attributes Index 1710 foi a particular message may include the message's Me ssage ID 1712, the content 1714 of the message 1714, and information about the attributes 171 6 of the message. The Message ID 1712 is a unique identifier for the message (i.e., unique with respect to all other messages stored for the same user). The Message ID 1712 may be a n-bit number that is used to reference a particular message stored in the Message Database 1702. In one embodiment, the Message ID 1712 may be a 64-bit number. The Message ID 1712 might be composed of timestamp information and information relating to the content of the message to which the Message ID 1712 refers. The timestamp information might be a Y-bit (e.g., 32-bit or 48-bit) timestamp provided by the system indicating when a message is received by, for example, the SMTP Gateway 1018. The information relating to the content of the message might be 64-Y bit hash of the message contents. The contents of a message are placed into the index as fully indexed and searchable terms. When the index 1710 is searched for a term or combination of terms, the index returns a list of messages (e.g., message IDs) of messages that match the term or combination of terms. Certain predefined conditions rnay dictate a return of less than all of the matching 39 messages. In another embodiment, the index 1710 returns a list of conversations (conversation IDs) that match the term or combination of terms in a query. In one embodiment the entries for the search terms in the Full Text and Attributes Index 1710 are be ordered in accordance with the timestamp information included in the Message ID 1712 of each indexed message, such that the most recent messages matching the search terms are preferentially returned. For instance, the list of Message IDs of messages corresponding to each term in the index 1710 may be ordered such that Message IDs having the most recent timestamps are listed earlier in the list than Message IDs having older timestamps. In other embodiments, date/time information associated with each message indicates the date and/or time of receipt of each message, but the date/time information is not embedded in the Message IDs. In. such embodiments, the entries in the index 1710 are nevertheless arranged so that the Nessage IDs of messages having the most recent date/time values are listed earlier in the list than Message IDs having older date/time values. Any attributes 1716 associated with a message are also indexed (i.e., included in the index 1710). Attributes 1716 are added to the Full Text and Attributes Index 1710 such that a query on a particular attribute retLrns those messages matching that particular attribute. When a label or attribute is added. to or removed from a conversation, the index 1710 is updated accordingly. The index [ncludes entries or data that map each defined label or attribute to all the messages (or, in other embodiments, conversations) bearing that label or attribute. Thus, when a label is added to a conversation, data is added to the index 1710 to map that label to all the messages in the conversation. When a label is removed from a conversation, the data in the index that maps the label to the messages in the conversation is removed or invalidated. In some embodiments, each label or attribute associated with a conversation is also added to one or more entries in a conversation database 1808 (Fig. 18). Although the Full Text and A.ttributes Index 1710 may configured to map query terms to individual Message IDs 1712, other data structures may be provided to map Message IDs into conversations identifiers. Logical diagrams of one such set of data structures are shown in Fig. 18. One of ordinary skill in the art would recognize that a number of different data structures can be used to map search query terms to conversations or conversation identifiers. As described earlier, User Daetabase 1702 may contain a User ID 1708 that references the Full Text and Attributes Index 1710 associated with a particular user. Referring to Fig. 18, a 40 particular Message ID 1712 may be associated with a particular Conversation ID 1802 in a Message to Conversation Map 1804. Each entry in Mess age to Conversation Map 1804 associates (i.e., maps) a Message ID 1712 to a Conversation ID 1802. In some embodiments, the Conversation ID 1804 is an n-bit number. This number uniquely identifies the particular conversation to which the message identified by Message ID 1712 belongs. In these embodiments, every conversation in a user's mail account has a distinct Conversation ID. To identify the other messages associated with a particular conversation, a User Conversation Database 1808 may be used. Such a database might be used, for example, when identifying the remainder of the messages included. in a conversation where one or more messages had matched a particular search query. User Conversation Database includes a number of Conversation Entries 1810. Each Conversation Entry 1810 stores a list of the messages (or other data structure representing the messages) associated with the conversation. For example, a Conversation Entry 1812 naay include a linked list of message entries 1816, each message entry corresponding to a particular message in the conversation. The linked list might be ordered by, for example, date/time values associated with the messages in the conversation. An exemplary message entry 1816 includes the Message ID 1712, Header 1818, and Labels 1820 of a particular mess age. The Header 1818 may contain all or a portion of the Headcr Information 1612 described earlier. The Labels 1820 may contain information identifying certain attributes associated with the message. The Message ID(4) 1712 of a particular entry 1822 may be associated wvvith a particular message in the Message Database 1602. In some embodiments, the mes sage entry 1816 does not include the content of the body of the corresponding message. In some embodiments, the information in the index 1'708 and the information in a Conversation Entry 1812 may be used to assist in associating a new message with a particular conversation, as might be done in stage 1106 of Fig. 11, Nwithout accessing the Message database 1602. When messages are identified as possible matches to the newly arrived message (stage 1204 of Fig. 12), the determination of the: best matching message, and thus the best matching conversation, could be made using the Headers 1818 of the matching messages. For example, Header 1818 might contain subj ect information for the message that (in normalized form) can be compared to the normalized subject of the newly arrived message. Other information in the Header 1818 can also be compared with header information of an incoming message being processed. Once a conversation has been 41 identified as a match, attributes identified in the Labels 1820 of the message entries for the identified conversation can be applied to the incoming messagee (stage 1307 of Fig. 13), without having to retrieve any messages from the mess age database. A Conversation entry 1812 can be updated when a -message is deleted from a conversation, without affecting the other messages in a. conversation. In such a case, the message entry 1816 (in Conversation entry 1812) corresponding to the message to be deleted is deleted from the linked list of message entries. Thus, the message will no longer be associated with that conversation. In some embodiments, Message to Conversation Map 1804 is also be modified to account for the deletion. As described earlier, in some instances it may be desirable to mark a message for deletion, but not remove it from the conversation using;, for example, a particular attribute. When the conditions are such that the message may no-w be removed from the conversation, it may be done as described above. Conditions which rnay allow for the removal of the message from Message to Conversation Map 1802 and. Conversation entry 1812 might include the passing of a certain amount of time since the message was marked for deletion, an action by the user, or other triggering events. Conversations may also be marked for deletion, buwt not yet removed from the user's mail account. When a conversation is to be permanently rernoved from the user's mail account, then the Message to Conversation Map 1802 entry for the conversation may be removed. In addition, the corresponding Conversation entry 1812 xriay be removed from the Conversation Database 1808, and furthermore the index entries for the messages in the conversation may be removed from the index 1708. As indicated above, in another embodiment the ful3 text message index 1708 returns a list of conversation identifiers in response to a query. In this embodiment, the Message to Conversation Map 1802 may be omitted. Instead, the Conversation Database provides the main mappings needed to complete the processing of conversations responsive to the query. Referring to Fig. 19, an embodiment of a Conversation Server 102 that implements the methods described above includes one or more processing units (CPU's) 1902, one or more network or other communications interfaces 1904, memory 1006, and one or more communication buses 1908 for interconnecting these components. The Conversation Server 42 102 may optionally include a user interface comprising a display device and a keyboard. Memory 1906 may include high speed random access memory and may also include non volatile memory, such as one or more magnetic or optical storage disks. Memory 1906 may include mass storage that is remotely located from CPU's 1902. The Memory 1906 may store: an Operating System 1916 that includes procedures for handling various basic system services and for performing hardware dependent tasks; a Network Communication Module (or instructions) 1918 that is used for connecting the Conversation Server 102 to other computers via the one or more communications Network Interfaces 1904 (wired or wireless), such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; and a Conversation Engine 1002 module for responding to requests from, and providing responses to, the Conversation Assistant 110 as described earlier, and may include: a Process New Message Module 1920 for processing new messages as described earlier; a Search Module 1922 for searching a user's messages as described earlier, the Search Module 1922 including a module for processing search requests frorn inputs supplied by the user 1922 and a module for processing system generated searches 1926 initiated by the Conversation Assistant 110; a Conversation Assistant Loader 1928 for providing to the Conversation Assistant 110 information that allows the Conversation Assistant to process information supplied to it from the Conversation Server 102. In some embodiments, wlben a client computer is first connected to the Conversation Server 102 for processing email messages, the Conversation Assistant Loader 1928 is invoked to load the Conversation Assistant 110 to the client computer. In some embodiments, the Conversation Assistant Loader 1928 loads the Conversation Assistant 110 onto the client computer each time that an email session is initiated, while in other embodiments the Conversation Assistant 110 is retained by the client computer from one email session to another; a Reply Formatting Module 1930 for providing formatting information to be supplied to the Conversation Assistant 110 as described earlier, including a Conversation Ordering 43 Module 1932 for ordering conversations according to predefmed criteria as described earlier, a Select Conversations Module 1034 for selecting a predetermined number of conversations to be returned to the Conversation Assistant 110 from the total number which could be returned, an Identify Sender of Unread/Not Viewed Messages 1936 for identifying messages marked as "Unread" (i.e., messages not viewed or marked as read) messages as described earlier, a Self-referencing Module 1938 for providing information about replacing the user's identification with a self-referencing information as described earlier, a New Recipients Module 1940 for identifying and providing information about newly added recipients to a conversation as described earlier, a Removed Recipients Module 1942 for identifying and providing information about recipients who are no longer part of the conversation as described earlier, a Snippet Module 1944 for obtaining and providing information about certain text of a matching message as described earlier, a Full Text Module 1946 for retrieving the full text of a message for transmission to the Conversation Assistant 110 as described earlier; and a Format Spell Check Module 1948 for formatting information returned from the Spell Checker 1014; a Modify Attributes Module 1950 for modifying the attributes of conversations and messages as described earlier; a Delete/Remove Module 1095 for marking message or conversation for deletion and subsequently removing them as described earlier; Filter Module 1954 for creating, monitoring, and carrying out filters as described earlier; and a Compose/Send Module 1956 for allowing the user to compose a message and provide the resulting message to the SMTP Gateway 1016. It should be appreciated that various features described above, such as an exemplary embodiment of a spell check processing and display method, are not limited to electronic messaging or email. For example, the spell checking method or user interface described above may be applied to and implemented in conjunction with various types of documents (e.g., word processing documents) in other embodiments. The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be 44 45 Exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to 5 best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. Where the terms "comprise", "comprises", "comprised" or "comprising" are used in this specification (including the claims) they are to be interpreted as specifying the presence of the stated features, integers, steps or components, but not precluding 10 the presence of one or more other feature, integer, step, component or group thereof.
Claims (20)
1. A method of searching conversations, performed at a server having one or more processors and memory storing programs executed by the one or more processors, the method comprising: 5 receiving a search query from a client; identifying a conversation relevant to the search query, the conversation having two or more messages sharing a common set of characteristics that meet predefined criteria and a respective conversation identifier, wherein identifying a conversation relevant to the search query comprises identifying a conversation that, as a whole, is relevant to the search query; 10 and returning to the client for display, as a search result to the search query, conversation information corresponding to the identified conversation.
2. The method of claim 1, wherein the search query comprises at least a first term and a second term. 15
3. The method of claim 2, wherein identifying a conversation relevant to the search query comprises identifying the first term in a first message of the conversation and identifying the second term in a second message of the conversation, wherein the second message is distinct from the first message.
4. The method of claim 3, wherein the second message does not contain text of the first 20 message.
5. The method of claim 3 or 4, wherein identifying a conversation relevant to the search query comprises identifying the first term in a first message, and not identifying the second term in the first message.
6. The method of claim 5, wherein identifying a conversation relevant to the search query 25 comprises identifying the second term in a second message, and not identifying the first term in the second message.
7. A server system, comprising: one or more processors; memory; and 30 one or more programs, wherein the one or more programs are stored in the memory and configured to be executed by the one or more processors, the one or more programs comprising instructions for: receiving a search query from a client; 46 flamem> identifying a conversation relevant to the search query, the conversation having two or more messages sharing a common set of characteristics that meet predefined criteria and a respective conversation identifier, wherein identifying a conversation relevant to the search query comprises identifying a conversation that, as a whole, is relevant to the search 5 query; and returning to the client for display, as a search result to the search query, conversation information corresponding to the identified conversation.
8. The system of claim 7, wherein the search query comprises at least a first term and a second term. 10
9. The system of claim 8, wherein instructions for identifying a conversation relevant to the search query comprises instructions for identifying the first term in a first message of the conversation and instructions for identifying the second term in a second message of the conversation, wherein the second message is distinct from the first message.
10. The system of claim 9, wherein the second message does not contain text of the first 15 message.
11. The system of claim 9 or 10, wherein instructions for identifying a conversation relevant to the search query comprises instructions for identifying the first term in a first message, and not identifying the second term in the first message.
12. The system of claim 10, wherein instructions for identifying a conversation relevant to 20 the search query comprises instructions for identifying the second term in a second message, and not identifying the first term in the second message.
13. A computer readable storage medium storing one or more programs configured for execution by a computer, the one or more programs comprising instructions for: receiving a search query from a client; 25 identifying a conversation relevant to the search query, the conversation having two or more messages sharing a common set of characteristics that meet predefined criteria and a respective conversation identifier, wherein identifying a conversation relevant to the search query comprises identifying a conversation that, as a whole, is relevant to the search query; and 30 returning to the client for display, as a search result to the search query, conversation information corresponding to the identified conversation.
14. The computer readable storage medium of claim 13, wherein the search query comprises at least a first term and a second term. 47 <fil18mm8>
15. The computer readable storage medium of claim 14, wherein instructions for identifying a conversation relevant to the search query comprises instructions for identifying the first term in a first message of the conversation and instructions for identifying the second term in a second message of the conversation, wherein the second message is distinct from the 5 first message.
16. The computer readable storage medium of claim 15, wherein the second message does not contain text of the first message.
17. The computer readable storage medium of claim 15 or 16, wherein instructions for identifying a conversation relevant to the search query comprises instructions for identifying 10 the first term in a first message, and not identifying the second term in the first message.
18. The computer readable storage medium of claim 17, wherein instructions for identifying a conversation relevant to the search query comprises instructions for identifying the second term in a second message, and not identifying the first term in the second message.
19. A method of searching conversations, performed at a server having one or more 15 processors and memory storing programs executed by the one or more processors substantially as hereinbefore described with reference to one or more of the embodiments shown in the drawings.
20. A server substantially as hereinbefore described with reference to one or more of the embodiments shown in the drawings. 48 <filensmO>
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
AU2011201993A AU2011201993B2 (en) | 2004-03-31 | 2011-05-02 | Searching conversations in a conversation-based email system |
AU2013205898A AU2013205898B2 (en) | 2004-03-31 | 2013-05-16 | Snoozing conversations in a conversation-based email system |
Applications Claiming Priority (7)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/816,428 US7912904B2 (en) | 2004-03-31 | 2004-03-31 | Email system with conversation-centric user interface |
US10/816,428 | 2004-03-31 | ||
US10/914,035 US9819624B2 (en) | 2004-03-31 | 2004-08-06 | Displaying conversations in a conversation-based email system |
US10/914,035 | 2004-08-06 | ||
PCT/US2005/010137 WO2005098701A2 (en) | 2004-03-31 | 2005-03-25 | Displaying conversations in a conversation-based email system |
AU2005229862A AU2005229862B2 (en) | 2004-03-31 | 2005-03-25 | Displaying conversations in a conversation-based email system |
AU2011201993A AU2011201993B2 (en) | 2004-03-31 | 2011-05-02 | Searching conversations in a conversation-based email system |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2005229862A Division AU2005229862B2 (en) | 2004-03-31 | 2005-03-25 | Displaying conversations in a conversation-based email system |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2013205898A Division AU2013205898B2 (en) | 2004-03-31 | 2013-05-16 | Snoozing conversations in a conversation-based email system |
Publications (2)
Publication Number | Publication Date |
---|---|
AU2011201993A1 true AU2011201993A1 (en) | 2011-05-19 |
AU2011201993B2 AU2011201993B2 (en) | 2013-04-04 |
Family
ID=34963993
Family Applications (7)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2005229862A Active AU2005229862B2 (en) | 2004-03-31 | 2005-03-25 | Displaying conversations in a conversation-based email system |
AU2011201992A Active AU2011201992B2 (en) | 2004-03-31 | 2011-05-02 | Displaying expanded messages in a conversation-based email system |
AU2011201991A Active AU2011201991B2 (en) | 2004-03-31 | 2011-05-02 | Conversation-based email with list of senders in a conversation |
AU2011201989A Active AU2011201989B2 (en) | 2004-03-31 | 2011-05-02 | Labeling conversations and messages in a conversation-based email system |
AU2011201993A Active AU2011201993B2 (en) | 2004-03-31 | 2011-05-02 | Searching conversations in a conversation-based email system |
AU2011201994A Active AU2011201994B2 (en) | 2004-03-31 | 2011-05-02 | Providing snippets relevant to a search query in a conversation-based email system |
AU2013205898A Active AU2013205898B2 (en) | 2004-03-31 | 2013-05-16 | Snoozing conversations in a conversation-based email system |
Family Applications Before (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2005229862A Active AU2005229862B2 (en) | 2004-03-31 | 2005-03-25 | Displaying conversations in a conversation-based email system |
AU2011201992A Active AU2011201992B2 (en) | 2004-03-31 | 2011-05-02 | Displaying expanded messages in a conversation-based email system |
AU2011201991A Active AU2011201991B2 (en) | 2004-03-31 | 2011-05-02 | Conversation-based email with list of senders in a conversation |
AU2011201989A Active AU2011201989B2 (en) | 2004-03-31 | 2011-05-02 | Labeling conversations and messages in a conversation-based email system |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2011201994A Active AU2011201994B2 (en) | 2004-03-31 | 2011-05-02 | Providing snippets relevant to a search query in a conversation-based email system |
AU2013205898A Active AU2013205898B2 (en) | 2004-03-31 | 2013-05-16 | Snoozing conversations in a conversation-based email system |
Country Status (9)
Country | Link |
---|---|
US (7) | US9819624B2 (en) |
EP (4) | EP2575095A1 (en) |
JP (8) | JP4956420B2 (en) |
KR (6) | KR101173813B1 (en) |
CN (4) | CN102609832A (en) |
AU (7) | AU2005229862B2 (en) |
BR (1) | BRPI0509500A (en) |
CA (1) | CA2561580C (en) |
WO (1) | WO2005098701A2 (en) |
Families Citing this family (135)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9715678B2 (en) | 2003-06-26 | 2017-07-25 | Microsoft Technology Licensing, Llc | Side-by-side shared calendars |
US7707255B2 (en) | 2003-07-01 | 2010-04-27 | Microsoft Corporation | Automatic grouping of electronic mail |
US8799808B2 (en) | 2003-07-01 | 2014-08-05 | Microsoft Corporation | Adaptive multi-line view user interface |
US7895531B2 (en) | 2004-08-16 | 2011-02-22 | Microsoft Corporation | Floating command object |
US8255828B2 (en) | 2004-08-16 | 2012-08-28 | Microsoft Corporation | Command user interface for displaying selectable software functionality controls |
US9015621B2 (en) | 2004-08-16 | 2015-04-21 | Microsoft Technology Licensing, Llc | Command user interface for displaying multiple sections of software functionality controls |
US8146016B2 (en) | 2004-08-16 | 2012-03-27 | Microsoft Corporation | User interface for displaying a gallery of formatting options applicable to a selected object |
US7703036B2 (en) | 2004-08-16 | 2010-04-20 | Microsoft Corporation | User interface for displaying selectable software functionality controls that are relevant to a selected object |
US7596594B2 (en) * | 2004-09-02 | 2009-09-29 | Yahoo! Inc. | System and method for displaying and acting upon email conversations across folders |
US7747966B2 (en) | 2004-09-30 | 2010-06-29 | Microsoft Corporation | User interface for providing task management and calendar information |
US8103723B1 (en) | 2004-10-07 | 2012-01-24 | Google Inc. | Message server that retains messages deleted by one client application for access by another client application |
US20060095506A1 (en) * | 2004-10-29 | 2006-05-04 | Research In Motion Limited | Extended user interface for email composition |
US7665031B2 (en) * | 2004-12-08 | 2010-02-16 | Microsoft Corporation | Method and system of taskbar button interfaces |
US8577967B1 (en) * | 2005-06-30 | 2013-11-05 | Google Inc. | Method and system for managing real-time communications in an email inbox |
US8689137B2 (en) | 2005-09-07 | 2014-04-01 | Microsoft Corporation | Command user interface for displaying selectable functionality controls in a database application |
US9542667B2 (en) | 2005-09-09 | 2017-01-10 | Microsoft Technology Licensing, Llc | Navigating messages within a thread |
US8627222B2 (en) | 2005-09-12 | 2014-01-07 | Microsoft Corporation | Expanded search and find user interface |
US8601004B1 (en) * | 2005-12-06 | 2013-12-03 | Google Inc. | System and method for targeting information items based on popularities of the information items |
US20070143428A1 (en) * | 2005-12-21 | 2007-06-21 | Shruti Kumar | Method and system for displaying indications of messages from important persons and from new persons at a high display priority in a gathered threads view of an electronic mail ("email") user interface |
US7844603B2 (en) * | 2006-02-17 | 2010-11-30 | Google Inc. | Sharing user distributed search results |
US8122019B2 (en) | 2006-02-17 | 2012-02-21 | Google Inc. | Sharing user distributed search results |
US8862572B2 (en) * | 2006-02-17 | 2014-10-14 | Google Inc. | Sharing user distributed search results |
US8605090B2 (en) | 2006-06-01 | 2013-12-10 | Microsoft Corporation | Modifying and formatting a chart using pictorially provided chart elements |
US9727989B2 (en) | 2006-06-01 | 2017-08-08 | Microsoft Technology Licensing, Llc | Modifying and formatting a chart using pictorially provided chart elements |
US9292170B2 (en) * | 2006-12-07 | 2016-03-22 | International Business Machines Corporation | Unified presentation of scattered message data |
US7921176B2 (en) | 2007-01-03 | 2011-04-05 | Madnani Rajkumar R | Mechanism for generating a composite email |
CN101247357B (en) * | 2007-02-16 | 2011-06-15 | 国际商业机器公司 | Method and system for improving E-mail discussion efficiency at E-mail client terminal |
US11095583B2 (en) | 2007-06-28 | 2021-08-17 | Voxer Ip Llc | Real-time messaging method and apparatus |
US8180029B2 (en) | 2007-06-28 | 2012-05-15 | Voxer Ip Llc | Telecommunication and multimedia management method and apparatus |
US8762880B2 (en) | 2007-06-29 | 2014-06-24 | Microsoft Corporation | Exposing non-authoring features through document status information in an out-space user interface |
US8201103B2 (en) | 2007-06-29 | 2012-06-12 | Microsoft Corporation | Accessing an out-space user interface for a document editor program |
US8484578B2 (en) | 2007-06-29 | 2013-07-09 | Microsoft Corporation | Communication between a document editor in-space user interface and a document editor out-space user interface |
FR2918528B1 (en) * | 2007-07-03 | 2010-11-19 | Calinda Software | METHOD OF MANAGING A COLLABORATIVE PROCESS USING ELECTRONIC MESSAGES |
US8024412B2 (en) * | 2008-02-15 | 2011-09-20 | Microsoft Corporation | User interface reading email conversations |
US9588781B2 (en) | 2008-03-31 | 2017-03-07 | Microsoft Technology Licensing, Llc | Associating command surfaces with multiple active components |
CN101247364B (en) * | 2008-03-31 | 2012-01-18 | 腾讯科技（深圳）有限公司 | Conversation message managing system and method thereof |
US9665850B2 (en) | 2008-06-20 | 2017-05-30 | Microsoft Technology Licensing, Llc | Synchronized conversation-centric message list and message reading pane |
US8402096B2 (en) * | 2008-06-24 | 2013-03-19 | Microsoft Corporation | Automatic conversation techniques |
FI20086224A (en) * | 2008-12-22 | 2010-06-23 | Elisa Oyj | Procedure in a telecommunication system as well as a telecommunication system |
US8904292B2 (en) * | 2008-12-31 | 2014-12-02 | Motorola Mobility Llc | Method and system for processing electronic mail |
US9046983B2 (en) | 2009-05-12 | 2015-06-02 | Microsoft Technology Licensing, Llc | Hierarchically-organized control galleries |
GB0922608D0 (en) | 2009-12-23 | 2010-02-10 | Vratskides Alexios | Message optimization |
US9838349B2 (en) | 2010-03-08 | 2017-12-05 | Microsoft Technology Licensing, Llc | Zone classification of electronic mail messages |
KR101704531B1 (en) * | 2010-04-22 | 2017-02-08 | 삼성전자주식회사 | Method and apparatus for displaying text information in mobile terminal |
US8825776B1 (en) * | 2010-05-18 | 2014-09-02 | Google Inc. | Generating a hosted conversation in accordance with predefined parameters |
US9721035B2 (en) | 2010-06-30 | 2017-08-01 | Leaf Group Ltd. | Systems and methods for recommended content platform |
CN102387092B (en) * | 2010-09-06 | 2014-09-03 | 腾讯科技（深圳）有限公司 | Method and device for managing message |
US8930825B2 (en) * | 2010-09-09 | 2015-01-06 | International Business Machines Corporation | Graphically indicating relevancy of electronic messages |
US9338124B2 (en) | 2010-10-05 | 2016-05-10 | VNP Software, Inc. | Electronic messaging systems |
US8682991B2 (en) * | 2010-10-05 | 2014-03-25 | VNP Software, Inc. | Electronic messaging systems |
US9734245B2 (en) | 2010-11-18 | 2017-08-15 | Leaf Group Ltd. | System and method for automated responses to information needs on websites |
US8743151B1 (en) * | 2011-03-31 | 2014-06-03 | Google Inc. | Snapping message header |
US8972240B2 (en) * | 2011-05-19 | 2015-03-03 | Microsoft Corporation | User-modifiable word lattice display for editing documents and search queries |
CN103078781A (en) * | 2011-10-25 | 2013-05-01 | 国际商业机器公司 | Method for instant messaging system and instant messaging system |
US9268769B1 (en) * | 2011-12-20 | 2016-02-23 | Persado Intellectual Property Limited | System, method, and computer program for identifying message content to send to users based on user language characteristics |
KR101332811B1 (en) | 2012-02-24 | 2013-11-27 | 주식회사 팬택 | Device with message hidden function and method for hiding and restoring message thereof |
CN102571637A (en) * | 2012-03-16 | 2012-07-11 | 腾讯科技（深圳）有限公司 | Message processing method and device |
US10395270B2 (en) | 2012-05-17 | 2019-08-27 | Persado Intellectual Property Limited | System and method for recommending a grammar for a message campaign used by a message optimization system |
US20140310616A1 (en) * | 2012-05-18 | 2014-10-16 | Artashes Valeryevich Ikonomov | System for interactive communication |
JP5981823B2 (en) * | 2012-09-28 | 2016-08-31 | 株式会社コナミデジタルエンタテインメント | Message display system, control method, and program |
US10031968B2 (en) * | 2012-10-11 | 2018-07-24 | Veveo, Inc. | Method for adaptive conversation state management with filtering operators applied dynamically as part of a conversational interface |
CN104011752A (en) * | 2012-10-12 | 2014-08-27 | 统一有限责任两合公司 | Method And Apparatus For Displaying E-Mail Messages |
US9459752B2 (en) * | 2012-12-14 | 2016-10-04 | Microsoft Technology Licensing, Llc | Browsing electronic messages displayed as tiles |
US9026600B2 (en) | 2013-01-04 | 2015-05-05 | International Business Machines Corporation | System and method for unfiltering filtered status messages |
KR102110786B1 (en) | 2013-03-13 | 2020-05-14 | 삼성전자 주식회사 | Method and apparatus for managing conversation message in portable terminal |
CN105144209A (en) * | 2013-03-15 | 2015-12-09 | 英特里系统公司 | System and method for managing business partners and associated assets in favor of a plurality of enterprises |
US9304665B2 (en) * | 2013-04-05 | 2016-04-05 | Yahoo! Inc. | Method and apparatus for facilitating message selection and organization |
JP5922306B2 (en) * | 2013-04-12 | 2016-05-24 | 株式会社日立製作所 | Computer, data processing method, and non-transitory recording medium |
US10813584B2 (en) * | 2013-05-21 | 2020-10-27 | Happify, Inc. | Assessing adherence fidelity to behavioral interventions using interactivity and natural language processing |
KR20150000273A (en) * | 2013-06-24 | 2015-01-02 | 삼성전자주식회사 | Terminal apparatus and control method thereof |
US9542023B2 (en) | 2013-08-07 | 2017-01-10 | Synaptics Incorporated | Capacitive sensing using matrix electrodes driven by routing traces disposed in a source line layer |
CN104376292A (en) * | 2013-08-13 | 2015-02-25 | 海尔集团公司 | Household appliance and production method thereof, information system and using method of household appliance |
CN103442146B (en) * | 2013-08-30 | 2016-08-24 | 宇龙计算机通信科技(深圳)有限公司 | A kind of method and system at the session interface of mobile terminal and display and contact person |
CN104598097A (en) * | 2013-11-07 | 2015-05-06 | 腾讯科技（深圳）有限公司 | Ordering method and device of instant messaging (IM) windows |
CN103560944A (en) * | 2013-11-12 | 2014-02-05 | 珠海市魅族科技有限公司 | Displaying method and terminal for email set |
US20150156144A1 (en) * | 2013-11-25 | 2015-06-04 | Myndbee, Inc. | Methods and Systems for Social Messaging |
US20150156268A1 (en) * | 2013-12-04 | 2015-06-04 | Conduit Ltd | Suggesting Topics For Social Conversation |
CN104714970B (en) * | 2013-12-16 | 2018-11-09 | 阿里巴巴集团控股有限公司 | Method, transmitting terminal, receiving terminal and the system that Email is sorted out |
KR102415083B1 (en) * | 2013-12-16 | 2022-06-30 | 삼성전자 주식회사 | Method and apparatus for managing message of electronic device |
CN104734940A (en) * | 2013-12-23 | 2015-06-24 | 华为技术有限公司 | Message display method for instant messaging tool and user terminals |
US20150177974A1 (en) * | 2013-12-23 | 2015-06-25 | Huawei Technologies Co., Ltd. | Information display method and user terminal for instant messaging tool |
US8832832B1 (en) | 2014-01-03 | 2014-09-09 | Palantir Technologies Inc. | IP reputation |
CN104144116B (en) * | 2014-07-16 | 2016-04-27 | 腾讯科技（深圳）有限公司 | Instant communication method and instant communicating system |
US10367771B2 (en) * | 2014-10-01 | 2019-07-30 | Dropbox, Inc. | Identifying communication participants to a recipient of a message |
US9043894B1 (en) | 2014-11-06 | 2015-05-26 | Palantir Technologies Inc. | Malicious software detection in a computing system |
CN104463556B (en) * | 2014-11-11 | 2018-01-30 | 尹子雄 | The arrangement of Email Body reference information and discovery method and system |
US11902232B1 (en) * | 2014-11-18 | 2024-02-13 | Amazon Technologies, Inc. | Email conversation linking |
US11093125B1 (en) | 2014-12-09 | 2021-08-17 | Amazon Technologies, Inc. | Email conversation linking |
US20160182430A1 (en) * | 2014-12-17 | 2016-06-23 | Microsoft Technology Licensing, Llc | Optimizing view of messages based on importance classification |
KR101622871B1 (en) * | 2015-02-03 | 2016-05-19 | 라인 가부시키가이샤 | Method, system and recording medium for managing conversation contents in messenger |
US20160294890A1 (en) * | 2015-03-31 | 2016-10-06 | Facebook, Inc. | Multi-user media presentation system |
US20160344677A1 (en) | 2015-05-22 | 2016-11-24 | Microsoft Technology Licensing, Llc | Unified messaging platform for providing interactive semantic objects |
US10216709B2 (en) | 2015-05-22 | 2019-02-26 | Microsoft Technology Licensing, Llc | Unified messaging platform and interface for providing inline replies |
US10454872B2 (en) * | 2015-06-22 | 2019-10-22 | Microsoft Technology Licensing, Llc | Group email management |
US9456000B1 (en) * | 2015-08-06 | 2016-09-27 | Palantir Technologies Inc. | Systems, methods, user interfaces, and computer-readable media for investigating potential malicious communications |
US9608950B2 (en) | 2015-08-18 | 2017-03-28 | Blend Systems, Inc. | Systems and methods for sharing videos and images in a texting environment |
US20170090718A1 (en) | 2015-09-25 | 2017-03-30 | International Business Machines Corporation | Linking selected messages in electronic message threads |
US10504137B1 (en) | 2015-10-08 | 2019-12-10 | Persado Intellectual Property Limited | System, method, and computer program product for monitoring and responding to the performance of an ad |
JP6042958B1 (en) * | 2015-10-23 | 2016-12-14 | Ｌｉｎｅ株式会社 | Information processing apparatus, information processing apparatus control method, and program |
US20170131864A1 (en) * | 2015-11-06 | 2017-05-11 | Facebook, Inc. | Interface for Presenting Feed to a User Based on Scroll Inputs |
EP3373529B1 (en) * | 2015-11-25 | 2020-01-08 | Huawei Technologies Co., Ltd. | Method, device and system for sending a message |
JP6077192B1 (en) * | 2015-12-08 | 2017-02-08 | 楽天株式会社 | Presentation device, presentation method, non-transitory computer-readable information recording medium, and program |
US10832283B1 (en) | 2015-12-09 | 2020-11-10 | Persado Intellectual Property Limited | System, method, and computer program for providing an instance of a promotional message to a user based on a predicted emotional response corresponding to user characteristics |
US10178058B2 (en) * | 2016-01-28 | 2019-01-08 | International Business Machines Corporation | Expanding captured portions of references in instant messaging systems |
JP6466867B2 (en) * | 2016-02-25 | 2019-02-06 | 日本電信電話株式会社 | Information management apparatus, information management method, and information management program |
CN105845137B (en) * | 2016-03-18 | 2019-08-23 | 中国科学院声学研究所 | A kind of speech dialog management system |
CN105930313B (en) * | 2016-04-13 | 2018-10-26 | 平安科技（深圳）有限公司 | The method and apparatus of processing notification information |
US10795947B2 (en) | 2016-05-17 | 2020-10-06 | Google Llc | Unified message search |
US10361987B2 (en) | 2016-05-21 | 2019-07-23 | Facebook, Inc. | Techniques to convert multi-party conversations to an editable document |
WO2017210197A1 (en) * | 2016-06-01 | 2017-12-07 | Archive360, Inc. | Methods and systems for archiving and retrieving data |
AU2017203723A1 (en) * | 2016-06-07 | 2017-12-21 | David Nixon | Meeting management system and process |
US9804752B1 (en) | 2016-06-27 | 2017-10-31 | Atlassian Pty Ltd | Machine learning method of managing conversations in a messaging interface |
US10409779B2 (en) | 2016-08-31 | 2019-09-10 | Microsoft Technology Licensing, Llc. | Document sharing via logical tagging |
US10114525B2 (en) * | 2016-12-28 | 2018-10-30 | Byung Jin Kim | Device and method for organizing and displaying instant messages in various structured fashions |
KR101950213B1 (en) * | 2017-02-03 | 2019-02-22 | 네이버 주식회사 | Method and system for providing conversation content |
US11019001B1 (en) * | 2017-02-20 | 2021-05-25 | Snap Inc. | Selective presentation of group messages |
JP7127273B2 (en) * | 2017-11-14 | 2022-08-30 | 富士フイルムビジネスイノベーション株式会社 | Information processing device and program |
US10592608B2 (en) | 2018-01-08 | 2020-03-17 | International Business Machines Corporation | Topic based conversation retrieval |
US10616035B1 (en) * | 2018-01-30 | 2020-04-07 | EMC IP Holding Company LLC | Methods and apparatus for device chat and management |
KR20190112506A (en) * | 2018-03-26 | 2019-10-07 | 삼성전자주식회사 | Electronic device and method for displaying electronic mail in electronic device |
WO2019224907A1 (en) | 2018-05-22 | 2019-11-28 | 三菱電機株式会社 | Unauthorized email determination device, unauthorized email determination method and unauthorized email determination program |
EP3814894A4 (en) * | 2018-06-28 | 2022-12-21 | Byung Jin Kim | Device and method for organizing and displaying instant messages |
US11514915B2 (en) * | 2018-09-27 | 2022-11-29 | Salesforce.Com, Inc. | Global-to-local memory pointer networks for task-oriented dialogue |
JP6724223B2 (en) * | 2018-09-29 | 2020-07-15 | ジェギュ イ | Data processing terminal capable of displaying various icon badges and method of using the badge and terminal |
CN109347935B (en) * | 2018-09-30 | 2021-08-03 | 珠海信达九州科技有限公司 | Method for realizing real-time communication message synchronization based on block chain |
KR102173637B1 (en) | 2019-01-23 | 2020-11-03 | 울산과학기술원 | Email information display device |
US10749832B1 (en) * | 2019-01-31 | 2020-08-18 | Slack Technologies, Inc. | Methods and apparatuses for managing limited engagement by external email resource entity within a group-based communication system |
CN111722764A (en) * | 2019-03-18 | 2020-09-29 | 钉钉控股（开曼）有限公司 | Message input and display method and device, electronic equipment and readable storage medium |
US11546335B2 (en) * | 2019-09-27 | 2023-01-03 | Amazon Technologies, Inc. | Managing permissions to cloud-based resources with session-specific attributes |
US11397521B2 (en) * | 2019-09-30 | 2022-07-26 | Braided Communications Limited | Communication system |
US10944704B1 (en) | 2019-10-23 | 2021-03-09 | Charter Communications Operating, Llc | Method and system for reducing the sizes of electronic messages |
US11436408B2 (en) * | 2020-07-01 | 2022-09-06 | Motorola Mobility Llc | Targeted natural language responses for electronic communications |
CN113360238A (en) * | 2021-06-29 | 2021-09-07 | 维沃移动通信有限公司 | Message processing method and device, electronic equipment and storage medium |
CN117795968A (en) * | 2021-12-27 | 2024-03-29 | 三星电子株式会社 | Method and apparatus for providing an optimal chat room user interface based on image information |
WO2023152764A1 (en) * | 2022-02-08 | 2023-08-17 | Sarath Kakumanu | A system and method for sending and receiving e-mails with an auto-generated serial number in a digital mailing application |
Family Cites Families (202)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5216603A (en) * | 1985-11-18 | 1993-06-01 | Action Technologies, Inc. | Method and apparatus for structuring and managing human communications by explicitly defining the types of communications permitted between participants |
US5208748A (en) * | 1985-11-18 | 1993-05-04 | Action Technologies, Inc. | Method and apparatus for structuring and managing human communications by explicitly defining the types of communications permitted between participants |
JP3168756B2 (en) * | 1993-02-24 | 2001-05-21 | ミノルタ株式会社 | Email management method of email system |
US5734837A (en) * | 1994-01-14 | 1998-03-31 | Action Technologies, Inc. | Method and apparatus for building business process applications in terms of its workflows |
US5479408A (en) | 1994-02-22 | 1995-12-26 | Will; Craig A. | Wireless personal paging, communications, and locating system |
US5870549A (en) * | 1995-04-28 | 1999-02-09 | Bobo, Ii; Charles R. | Systems and methods for storing, delivering, and managing messages |
US5761689A (en) * | 1994-09-01 | 1998-06-02 | Microsoft Corporation | Autocorrecting text typed into a word processing document |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US5740549A (en) * | 1995-06-12 | 1998-04-14 | Pointcast, Inc. | Information and advertising distribution system and method |
US5724571A (en) | 1995-07-07 | 1998-03-03 | Sun Microsystems, Inc. | Method and apparatus for generating query responses in a computer-based document retrieval system |
US5913040A (en) * | 1995-08-22 | 1999-06-15 | Backweb Ltd. | Method and apparatus for transmitting and displaying information between a remote network and a local computer |
JP2765536B2 (en) | 1995-10-30 | 1998-06-18 | 日本電気株式会社 | Email organizing and searching device |
US5948058A (en) * | 1995-10-30 | 1999-09-07 | Nec Corporation | Method and apparatus for cataloging and displaying e-mail using a classification rule preparing means and providing cataloging a piece of e-mail into multiple categories or classification types based on e-mail object information |
US5872925A (en) | 1996-04-18 | 1999-02-16 | Ncr Corporation | Blocking a "reply to all" option in an electronic mail system |
US6396513B1 (en) | 1996-05-14 | 2002-05-28 | At&T Corp. | Electronic message sorting and notification system |
US5923848A (en) | 1996-05-31 | 1999-07-13 | Microsoft Corporation | System and method for resolving names in an electronic messaging environment |
US5905863A (en) * | 1996-06-07 | 1999-05-18 | At&T Corp | Finding an e-mail message to which another e-mail message is a response |
US6085206A (en) * | 1996-06-20 | 2000-07-04 | Microsoft Corporation | Method and system for verifying accuracy of spelling and grammatical composition of a document |
US5832502A (en) * | 1996-07-02 | 1998-11-03 | Microsoft Corporation | Conversation index builder |
US5959621A (en) * | 1996-12-06 | 1999-09-28 | Microsoft Corporation | System and method for displaying data items in a ticker display pane on a client computer |
US6021427A (en) * | 1997-05-22 | 2000-02-01 | International Business Machines Corporation | Method and system for preventing routing maelstrom loops of automatically routed electronic mail |
US6029164A (en) * | 1997-06-16 | 2000-02-22 | Digital Equipment Corporation | Method and apparatus for organizing and accessing electronic mail messages using labels and full text and label indexing |
US6185551B1 (en) * | 1997-06-16 | 2001-02-06 | Digital Equipment Corporation | Web-based electronic mail service apparatus and method using full text and label indexing |
AU8496398A (en) | 1997-07-18 | 1999-02-10 | Net Exchange, Inc. | Apparatus and method for effecting correspondent-centric electronic mail |
JP3000972B2 (en) * | 1997-08-18 | 2000-01-17 | 日本電気株式会社 | Information providing apparatus and machine-readable recording medium recording program |
US6594693B1 (en) * | 1998-02-10 | 2003-07-15 | Nitin A. Borwankar | Method and apparatus for a structured, synchronized conversation using electronic messages over a computer network |
US6330589B1 (en) * | 1998-05-26 | 2001-12-11 | Microsoft Corporation | System and method for using a client database to manage conversation threads generated from email or news messages |
US6438564B1 (en) * | 1998-06-17 | 2002-08-20 | Microsoft Corporation | Method for associating a discussion with a document |
US7275082B2 (en) | 1998-07-15 | 2007-09-25 | Pang Stephen Y F | System for policing junk e-mail messages |
US6182098B1 (en) * | 1998-07-22 | 2001-01-30 | International Business Machines Corporation | Next/current/last ticker graphical presentation method |
WO2000022551A1 (en) | 1998-10-13 | 2000-04-20 | Chris Cheah | Method and system for controlled distribution of information over a network |
US7689563B1 (en) | 1998-10-20 | 2010-03-30 | Jacobson Andrea M | Electronic record management system |
US6507351B1 (en) * | 1998-12-09 | 2003-01-14 | Donald Brinton Bixler | System for managing personal and group networked information |
JP2000187631A (en) | 1998-12-21 | 2000-07-04 | Casio Comput Co Ltd | Information opening system and server and recording medium |
US6549957B1 (en) * | 1998-12-22 | 2003-04-15 | International Business Machines Corporation | Apparatus for preventing automatic generation of a chain reaction of messages if a prior extracted message is similar to current processed message |
JP3942760B2 (en) * | 1999-02-03 | 2007-07-11 | 富士通株式会社 | Information collection device |
US7505974B2 (en) | 1999-02-12 | 2009-03-17 | Gropper Robert L | Auto update utility for digital address books |
US7010533B1 (en) | 1999-02-15 | 2006-03-07 | Matsushita Electric Industrial Co., Ltd. | E-mail preparation device, terminal device, information forwarding system, and program recording medium |
US6834276B1 (en) | 1999-02-25 | 2004-12-21 | Integrated Data Control, Inc. | Database system and method for data acquisition and perusal |
JP2000276474A (en) | 1999-03-24 | 2000-10-06 | Fuji Photo Film Co Ltd | Device and method for database retrieval |
WO2000059220A1 (en) * | 1999-03-30 | 2000-10-05 | Diva Systems Corporation | User access to secondary content associated with a primary content |
US6493702B1 (en) | 1999-05-05 | 2002-12-10 | Xerox Corporation | System and method for searching and recommending documents in a collection using share bookmarks |
US6564261B1 (en) | 1999-05-10 | 2003-05-13 | Telefonaktiebolaget Lm Ericsson (Publ) | Distributed system to intelligently establish sessions between anonymous users over various networks |
US6493703B1 (en) | 1999-05-11 | 2002-12-10 | Prophet Financial Systems | System and method for implementing intelligent online community message board |
JP2000347894A (en) * | 1999-06-09 | 2000-12-15 | Fujitsu Ltd | Source program check device and program recording medium therefor |
US6785869B1 (en) | 1999-06-17 | 2004-08-31 | International Business Machines Corporation | Method and apparatus for providing a central dictionary and glossary server |
US7505759B1 (en) | 1999-06-21 | 2009-03-17 | Alcatel-Lucent Usa Inc. | System for message control and redirection in a wireless communications network |
US20040153509A1 (en) * | 1999-06-30 | 2004-08-05 | Alcorn Robert L. | Internet-based education support system, method and medium with modular text-editing component for use in a web-based application |
GB2353679A (en) * | 1999-08-25 | 2001-02-28 | Ibm | Prioritized display of messages |
US6826596B1 (en) | 1999-09-07 | 2004-11-30 | Roy Satoshi Suzuki | System for categorizing and displaying reply messages in computer facilitated discussions |
US7089278B1 (en) * | 1999-09-07 | 2006-08-08 | Fuji Xerox Co., Ltd. | Anchored conversations: adhesive, in-context, virtual discussion forums |
US6640239B1 (en) | 1999-11-10 | 2003-10-28 | Garuda Network Corporation | Apparatus and method for intelligent scalable switching network |
AU1953401A (en) * | 1999-12-07 | 2001-06-18 | Actioneer, Inc. | A method and apparatus for receiving information in response to a request from an email client |
US6892196B1 (en) * | 1999-12-22 | 2005-05-10 | Accenture Llp | System, method and article of manufacture for a user programmable diary interface link |
US8645211B2 (en) * | 2000-01-06 | 2014-02-04 | Anthony R. Rothschild | System and method for adding an advertisement to a personal communication |
US8527345B2 (en) | 2000-01-06 | 2013-09-03 | Anthony Richard Rothschild | System and method for adding an advertisement to a personal communication |
JP2001222477A (en) | 2000-02-08 | 2001-08-17 | Nec Corp | Electronic mail description management system |
AU2001241591A1 (en) | 2000-02-18 | 2001-08-27 | Multitude, Inc. | System and method for creating audio forums from e-mail |
US6651086B1 (en) * | 2000-02-22 | 2003-11-18 | Yahoo! Inc. | Systems and methods for matching participants to a conversation |
US6606644B1 (en) * | 2000-02-24 | 2003-08-12 | International Business Machines Corporation | System and technique for dynamic information gathering and targeted advertising in a web based model using a live information selection and analysis tool |
US7693866B1 (en) * | 2000-03-07 | 2010-04-06 | Applied Discovery, Inc. | Network-based system and method for accessing and processing legal documents |
US7730113B1 (en) * | 2000-03-07 | 2010-06-01 | Applied Discovery, Inc. | Network-based system and method for accessing and processing emails and other electronic legal documents that may include duplicate information |
US20020087649A1 (en) | 2000-03-16 | 2002-07-04 | Horvitz Eric J. | Bounded-deferral policies for reducing the disruptiveness of notifications |
WO2001084403A1 (en) | 2000-04-10 | 2001-11-08 | Sony Corporation | Information management system and information management method |
US20010042100A1 (en) * | 2000-04-14 | 2001-11-15 | David Guedalia | Unified system and methodology for remote access to e-mail |
JP2001318948A (en) | 2000-05-09 | 2001-11-16 | Hitachi Ltd | Method and device for retrieving document and medium having processing program for the method stored thereon |
US6771291B1 (en) * | 2000-06-07 | 2004-08-03 | The Perfect Web Corporation | Method for developing electronic documents employing multiple display regions |
US6889361B1 (en) * | 2000-06-13 | 2005-05-03 | International Business Machines Corporation | Educational spell checker |
US20020093527A1 (en) | 2000-06-16 | 2002-07-18 | Sherlock Kieran G. | User interface for a security policy system and method |
JP2002014903A (en) | 2000-06-28 | 2002-01-18 | Hitachi Ltd | Method and device for retrieving electronic mail information |
US6742042B1 (en) * | 2000-06-28 | 2004-05-25 | Nortel Networks Limited | Method and apparatus of presenting ticker information |
DE10124429B4 (en) * | 2000-07-07 | 2008-11-27 | International Business Machines Corp. | System and method for improved spell checking |
GB0017380D0 (en) | 2000-07-14 | 2000-08-30 | Mailround Com Limited | Information communication system |
US7043690B1 (en) * | 2000-09-11 | 2006-05-09 | International Business Machines Corporation | Method, system, and program for checking contact information |
EP1235396A4 (en) | 2000-09-26 | 2004-01-07 | Interlex Inc | System and method for using e-mail as advertisement medium |
US6683627B1 (en) * | 2000-09-28 | 2004-01-27 | International Business Machines Corporation | Scroll box controls |
US7197470B1 (en) | 2000-10-11 | 2007-03-27 | Buzzmetrics, Ltd. | System and method for collection analysis of electronic discussion methods |
US6725228B1 (en) * | 2000-10-31 | 2004-04-20 | David Morley Clark | System for managing and organizing stored electronic messages |
US7035903B1 (en) * | 2000-11-22 | 2006-04-25 | Xerox Corporation | Systems and methods for the discovery and presentation of electronic messages that are related to an electronic message |
US7243125B2 (en) | 2000-12-08 | 2007-07-10 | Xerox Corporation | Method and apparatus for presenting e-mail threads as semi-connected text by removing redundant material |
US20020073156A1 (en) | 2000-12-08 | 2002-06-13 | Xerox Corporation | Method and system for mail folder displays |
US20030009385A1 (en) * | 2000-12-26 | 2003-01-09 | Tucciarone Joel D. | Electronic messaging system and method thereof |
CA2434552A1 (en) * | 2001-01-18 | 2002-07-25 | C3Gateways Services Inc. | Network-assisted communication method and system therefor |
US20020108125A1 (en) | 2001-02-07 | 2002-08-08 | Joao Raymond Anthony | Apparatus and method for facilitating viewer or listener interaction |
US6708205B2 (en) * | 2001-02-15 | 2004-03-16 | Suffix Mail, Inc. | E-mail messaging system |
US6820081B1 (en) * | 2001-03-19 | 2004-11-16 | Attenex Corporation | System and method for evaluating a structured message store for message redundancy |
US6745197B2 (en) * | 2001-03-19 | 2004-06-01 | Preston Gates Ellis Llp | System and method for efficiently processing messages stored in multiple message stores |
US6973481B2 (en) | 2001-03-23 | 2005-12-06 | Emailias Llc | System and method for creating and managing forwarding email address |
JP3789774B2 (en) | 2001-05-31 | 2006-06-28 | 三洋電機株式会社 | Mobile phone with mail transmission / reception function |
US20020194229A1 (en) * | 2001-06-15 | 2002-12-19 | Decime Jerry B. | Network-based spell checker |
US7143054B2 (en) * | 2001-07-02 | 2006-11-28 | The Procter & Gamble Company | Assessment of communication strengths of individuals from electronic messages |
US20030020749A1 (en) * | 2001-07-10 | 2003-01-30 | Suhayya Abu-Hakima | Concept-based message/document viewer for electronic communications and internet searching |
JP4146109B2 (en) | 2001-07-16 | 2008-09-03 | 株式会社東芝 | Knowledge storage support system and message hierarchy display setting method in the same system |
JP4040849B2 (en) * | 2001-07-16 | 2008-01-30 | 株式会社東芝 | Knowledge accumulation support system and message transfer method in the same system |
US7185057B2 (en) * | 2001-07-26 | 2007-02-27 | International Business Machines Corporation | Individually specifying message output attributes in a messaging system |
US20030037339A1 (en) | 2001-08-17 | 2003-02-20 | Dynalab, Inc. | Personal Web guide system and method for automatically displaying Web information |
CN1402159A (en) | 2001-08-22 | 2003-03-12 | 英业达股份有限公司 | Mail file management system and method |
JP2003067306A (en) | 2001-08-24 | 2003-03-07 | Hitachi Ltd | Storage management method for electronic mail |
US7516438B1 (en) | 2001-09-12 | 2009-04-07 | Sun Microsystems, Inc. | Methods and apparatus for tracking problems using a problem tracking system |
JP4058928B2 (en) | 2001-09-28 | 2008-03-12 | セイコーエプソン株式会社 | Document display system, receiving apparatus, document display method, and recording medium |
US7716287B2 (en) | 2004-03-05 | 2010-05-11 | Aol Inc. | Organizing entries in participant lists based on communications strengths |
US7305402B2 (en) | 2001-10-10 | 2007-12-04 | International Business Machines Corporation | Adaptive indexing technique for use with electronic objects |
US7328242B1 (en) * | 2001-11-09 | 2008-02-05 | Mccarthy Software, Inc. | Using multiple simultaneous threads of communication |
US7359936B2 (en) * | 2001-11-27 | 2008-04-15 | International Business Machines Corporation | Method and apparatus for electronic mail interaction with grouped message types |
US20030101065A1 (en) * | 2001-11-27 | 2003-05-29 | International Business Machines Corporation | Method and apparatus for maintaining conversation threads in electronic mail |
US20030177190A1 (en) | 2001-11-27 | 2003-09-18 | International Business Machines Corporation | Method and apparatus for interaction with electronic mail from multiple sources |
US20030163537A1 (en) * | 2001-11-27 | 2003-08-28 | International Business Machines Corporation | Method and apparatus for handling conversation threads and message groupings as a single entity |
US7392280B2 (en) | 2001-11-27 | 2008-06-24 | International Business Machines Corporation | Method for summarization of threads in electronic mail |
US20030110227A1 (en) * | 2001-12-06 | 2003-06-12 | O'hagan Timothy Patrick | Real time streaming media communication system |
JP2005514705A (en) | 2002-01-08 | 2005-05-19 | エスエイピー エイジー | Enhanced email management system |
JP2003223437A (en) | 2002-01-29 | 2003-08-08 | Internatl Business Mach Corp <Ibm> | Method of displaying candidate for correct word, method of checking spelling, computer device, and program |
EP1481346B1 (en) | 2002-02-04 | 2012-10-10 | Cataphora, Inc. | A method and apparatus to visually present discussions for data mining purposes |
US7421660B2 (en) | 2003-02-04 | 2008-09-02 | Cataphora, Inc. | Method and apparatus to visually present discussions for data mining purposes |
US7386439B1 (en) | 2002-02-04 | 2008-06-10 | Cataphora, Inc. | Data mining by retrieving causally-related documents not individually satisfying search criteria used |
US7143135B2 (en) * | 2002-02-08 | 2006-11-28 | Microsoft Corporation | Automatic participant evaluation in computer mediated persistent conversations |
CN1438595A (en) | 2002-02-10 | 2003-08-27 | 三慧科技股份有限公司 | System for processing electronic onails |
US7031977B2 (en) * | 2002-02-28 | 2006-04-18 | Plumtree Software, Inc. | Efficiently storing indented threads in a threaded discussion application |
MXPA04008492A (en) * | 2002-03-01 | 2005-07-13 | Tralix L L C | Method and system of sending and tracking electronic mail messages. |
US7206388B2 (en) | 2002-03-18 | 2007-04-17 | Openwave Systems Inc. | System and method for providing voice-activated presence information |
US7599852B2 (en) * | 2002-04-05 | 2009-10-06 | Sponster Llc | Method and apparatus for adding advertising tag lines to electronic messages |
CN1464458A (en) | 2002-06-04 | 2003-12-31 | 明日工作室股份有限公司 | Electronic mail producing method and system thereof |
US7120622B2 (en) | 2002-06-10 | 2006-10-10 | Xerox Corporation | Authoring tools, including content-driven treetables, for fluid text |
US7139850B2 (en) * | 2002-06-21 | 2006-11-21 | Fujitsu Limited | System for processing programmable buttons using system interrupts |
US8150922B2 (en) | 2002-07-17 | 2012-04-03 | Research In Motion Limited | Voice and text group chat display management techniques for wireless mobile terminals |
JP2004054614A (en) | 2002-07-19 | 2004-02-19 | Fujitsu Ltd | Program and method for displaying response to e-mail |
US7555485B2 (en) | 2002-08-22 | 2009-06-30 | Yahoo! Inc. | System and method for conducting an auction-based ranking of search results on a computer network |
US20040044735A1 (en) | 2002-08-30 | 2004-03-04 | International Business Machines Corporation | Method and system for organizing an email thread |
US7370035B2 (en) | 2002-09-03 | 2008-05-06 | Idealab | Methods and systems for search indexing |
US7933957B2 (en) * | 2002-09-17 | 2011-04-26 | At&T Intellectual Property Ii, L.P. | Tracking email and instant messaging (IM) thread history |
US20040059712A1 (en) * | 2002-09-24 | 2004-03-25 | Dean Jeffrey A. | Serving advertisements using information associated with e-mail |
US7062536B2 (en) | 2002-10-10 | 2006-06-13 | International Business Machines Corporation | Grouping electronic reply messages |
US8122084B2 (en) | 2002-10-29 | 2012-02-21 | Sap Ag | Collaborative conversation channels |
WO2004040461A1 (en) | 2002-10-31 | 2004-05-13 | Nokia Corporation | A communication apparatus and a method of indicating receipt of an electronic message, and a server, a method and a computer progam product for providing a computerized icon ordering service |
JP2004173124A (en) | 2002-11-22 | 2004-06-17 | Crossever Kk | Method for managing customer data |
US7007069B2 (en) | 2002-12-16 | 2006-02-28 | Palo Alto Research Center Inc. | Method and apparatus for clustering hierarchically related information |
US7340674B2 (en) | 2002-12-16 | 2008-03-04 | Xerox Corporation | Method and apparatus for normalizing quoting styles in electronic mail messages |
US20040260710A1 (en) * | 2003-02-28 | 2004-12-23 | Marston Justin P. | Messaging system |
US20050091320A1 (en) * | 2003-10-09 | 2005-04-28 | Kirsch Steven T. | Method and system for categorizing and processing e-mails |
US7509378B2 (en) * | 2003-03-11 | 2009-03-24 | Bea Systems, Inc. | System and method for message ordering in a message oriented network |
US20040186766A1 (en) | 2003-03-19 | 2004-09-23 | International Business Machines Corporation | Apparatus and method for marketing to instant messaging service users |
US7890603B2 (en) * | 2003-04-03 | 2011-02-15 | International Business Machines Corporation | Apparatus, system and method of performing mail message searches across multiple mail servers |
US7213210B2 (en) * | 2003-04-03 | 2007-05-01 | International Business Machines Corporation | Method, apparatus and computer program product for managing e-mail messages |
US7472357B1 (en) | 2003-06-04 | 2008-12-30 | Microsoft Corporation | Method and apparatus for managing list items |
US7603491B2 (en) | 2003-06-19 | 2009-10-13 | Intel Corporation | Bandwidth conserving protocol for command-response bus system |
US7421690B2 (en) * | 2003-06-23 | 2008-09-02 | Apple Inc. | Threaded presentation of electronic mail |
US7162473B2 (en) | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
US7890852B2 (en) * | 2003-06-26 | 2011-02-15 | International Business Machines Corporation | Rich text handling for a web application |
US7716593B2 (en) * | 2003-07-01 | 2010-05-11 | Microsoft Corporation | Conversation grouping of electronic mail records |
US7974391B2 (en) * | 2003-07-14 | 2011-07-05 | Orative Corporation | Conversation-based user interface |
US20050060643A1 (en) * | 2003-08-25 | 2005-03-17 | Miavia, Inc. | Document similarity detection and classification system |
US7484175B2 (en) * | 2003-09-30 | 2009-01-27 | International Business Machines Corporation | Method and apparatus for increasing personability of instant messaging with user images |
US20050091318A1 (en) | 2003-10-09 | 2005-04-28 | International Business Machines Corporation | Enabling a sender to control future recipients of an email |
US7433920B2 (en) * | 2003-10-10 | 2008-10-07 | Microsoft Corporation | Contact sidebar tile |
US7200638B2 (en) | 2003-10-14 | 2007-04-03 | International Business Machines Corporation | System and method for automatic population of instant messenger lists |
US20050144241A1 (en) * | 2003-10-17 | 2005-06-30 | Stata Raymond P. | Systems and methods for a search-based email client |
US7693724B2 (en) | 2003-10-20 | 2010-04-06 | Bryant Consultants, Inc. | Multidiscipline site development and risk assessment process |
US20050086598A1 (en) * | 2003-10-21 | 2005-04-21 | Marshall John L.Iii | Document digest system and methodology |
US7194516B2 (en) * | 2003-10-23 | 2007-03-20 | Microsoft Corporation | Accessing different types of electronic messages through a common messaging interface |
US7356772B2 (en) * | 2003-11-25 | 2008-04-08 | International Business Machines Corporation | Multi-column user interface for managing on-line threaded conversations |
US7222299B1 (en) | 2003-12-19 | 2007-05-22 | Google, Inc. | Detecting quoted text |
US7454716B2 (en) | 2003-12-22 | 2008-11-18 | Microsoft Corporation | Clustering messages |
US7412437B2 (en) * | 2003-12-29 | 2008-08-12 | International Business Machines Corporation | System and method for searching and retrieving related messages |
US20050165740A1 (en) | 2003-12-29 | 2005-07-28 | Kerr Bernard J. | System and method for scrolling within a list of documents |
US8805933B2 (en) * | 2003-12-29 | 2014-08-12 | Google Inc. | System and method for building interest profiles from related messages |
US20050198173A1 (en) * | 2004-01-02 | 2005-09-08 | Evans Alexander W. | System and method for controlling receipt of electronic messages |
US7383307B2 (en) * | 2004-01-07 | 2008-06-03 | International Business Machines Corporation | Instant messaging windowing for topic threads |
CA2456749C (en) | 2004-01-30 | 2014-12-16 | Research In Motion Limited | Contact query data system and method |
US7904510B2 (en) * | 2004-02-23 | 2011-03-08 | Microsoft Corporation | Systems and methods for managing discussion threads based on ratings |
WO2005093595A1 (en) * | 2004-02-26 | 2005-10-06 | Thomson Licensing | Discussion association for e-mail |
US7953800B2 (en) | 2004-03-08 | 2011-05-31 | Netsuite, Inc. | Integrating a web-based business application with existing client-side electronic mail systems |
US20050204009A1 (en) | 2004-03-09 | 2005-09-15 | Devapratim Hazarika | System, method and computer program product for prioritizing messages |
US8275839B2 (en) | 2004-03-31 | 2012-09-25 | Google Inc. | Methods and systems for processing email messages |
US7725508B2 (en) | 2004-03-31 | 2010-05-25 | Google Inc. | Methods and systems for information capture and retrieval |
US7814155B2 (en) | 2004-03-31 | 2010-10-12 | Google Inc. | Email conversation management system |
US7912904B2 (en) | 2004-03-31 | 2011-03-22 | Google Inc. | Email system with conversation-centric user interface |
US7565534B2 (en) | 2004-04-01 | 2009-07-21 | Microsoft Corporation | Network side channel for a message board |
US20050223072A1 (en) | 2004-04-02 | 2005-10-06 | Web.De Ag | Electronic messaging system with an integrated interactive footer |
WO2005104433A1 (en) | 2004-04-21 | 2005-11-03 | Koninklijke Philips Electronics, N.V. | System and method for managing threads in a network chat environment |
US20060031304A1 (en) | 2004-04-27 | 2006-02-09 | Amit Bagga | Method and apparatus for classification of relative position of one or more text messages in an email thread |
US7865511B2 (en) | 2004-06-25 | 2011-01-04 | Apple Inc. | News feed browser |
US20060026593A1 (en) | 2004-07-30 | 2006-02-02 | Microsoft Corporation | Categorizing, voting and rating community threads |
US7596594B2 (en) | 2004-09-02 | 2009-09-29 | Yahoo! Inc. | System and method for displaying and acting upon email conversations across folders |
US8150926B2 (en) | 2004-09-09 | 2012-04-03 | Microsoft Corporation | Organizing electronic mail messages into conversations |
TW200620911A (en) * | 2004-12-08 | 2006-06-16 | Bo-Tai Ho | Dividing method and receiving method for normal mails and commercial mails in e-mail |
US7218943B2 (en) | 2004-12-13 | 2007-05-15 | Research In Motion Limited | Text messaging conversation user interface functionality |
US8055715B2 (en) | 2005-02-01 | 2011-11-08 | i365 MetaLINCS | Thread identification and classification |
US20060248209A1 (en) * | 2005-04-27 | 2006-11-02 | Leo Chiu | Network system for facilitating audio and video advertising to end users through audio and video podcasts |
US7565347B2 (en) | 2005-08-10 | 2009-07-21 | International Business Machines Corporation | Indexing and searching of electronic message transmission thread sets |
US8380682B2 (en) | 2005-08-10 | 2013-02-19 | International Business Machines Corporation | Indexing and searching of electronic message transmission thread sets |
US7730141B2 (en) * | 2005-12-16 | 2010-06-01 | Microsoft Corporation | Graphical interface for defining mutually exclusive destinations |
US20070143428A1 (en) * | 2005-12-21 | 2007-06-21 | Shruti Kumar | Method and system for displaying indications of messages from important persons and from new persons at a high display priority in a gathered threads view of an electronic mail ("email") user interface |
US7899871B1 (en) | 2006-01-23 | 2011-03-01 | Clearwell Systems, Inc. | Methods and systems for e-mail topic classification |
US9275129B2 (en) | 2006-01-23 | 2016-03-01 | Symantec Corporation | Methods and systems to efficiently find similar and near-duplicate emails and files |
US7593995B1 (en) | 2006-01-23 | 2009-09-22 | Clearwell Systems, Inc. | Methods and systems of electronic message threading and ranking |
US9600568B2 (en) | 2006-01-23 | 2017-03-21 | Veritas Technologies Llc | Methods and systems for automatic evaluation of electronic discovery review and productions |
US9092434B2 (en) | 2007-01-23 | 2015-07-28 | Symantec Corporation | Systems and methods for tagging emails by discussions |
US7917465B2 (en) | 2007-08-27 | 2011-03-29 | Yahoo! Inc. | System and method for providing vector terms related to instant messaging conversations |
US20100070584A1 (en) | 2008-09-12 | 2010-03-18 | International Business Machines Corporation | Method and system for dynamic e-mail view conversion |
JP5365206B2 (en) | 2009-01-14 | 2013-12-11 | 富士通モバイルコミュニケーションズ株式会社 | Communication equipment |
US8639762B2 (en) | 2009-03-23 | 2014-01-28 | Google Inc. | Providing access to a conversation in a hosted conversation system |
US10210481B2 (en) | 2009-07-14 | 2019-02-19 | Bitvore Corp. | Relational presentation of communications and application for transaction analysis |
US9824314B2 (en) | 2011-01-14 | 2017-11-21 | Apple Inc. | Grouping email messages into conversations |
-
2004
- 2004-08-06 US US10/914,035 patent/US9819624B2/en active Active
-
2005
- 2005-03-25 EP EP20120192299 patent/EP2575095A1/en not_active Withdrawn
- 2005-03-25 WO PCT/US2005/010137 patent/WO2005098701A2/en active Application Filing
- 2005-03-25 BR BRPI0509500-0A patent/BRPI0509500A/en not_active IP Right Cessation
- 2005-03-25 CN CN201110416451XA patent/CN102609832A/en active Pending
- 2005-03-25 AU AU2005229862A patent/AU2005229862B2/en active Active
- 2005-03-25 CN CN201110416787.6A patent/CN102592209B/en active Active
- 2005-03-25 CA CA2561580A patent/CA2561580C/en active Active
- 2005-03-25 KR KR1020117017094A patent/KR101173813B1/en active IP Right Grant
- 2005-03-25 KR KR1020117017102A patent/KR101173812B1/en active IP Right Grant
- 2005-03-25 CN CN201110416435.0A patent/CN102521733B/en active Active
- 2005-03-25 EP EP05730150A patent/EP1733349A2/en not_active Withdrawn
- 2005-03-25 CN CN201110416455.8A patent/CN102521734B/en active Active
- 2005-03-25 KR KR1020117017096A patent/KR101179412B1/en active IP Right Grant
- 2005-03-25 EP EP20120183103 patent/EP2533182A1/en not_active Withdrawn
- 2005-03-25 KR KR20067022840A patent/KR101177147B1/en active IP Right Grant
- 2005-03-25 EP EP20120183097 patent/EP2533181A1/en not_active Ceased
- 2005-03-25 KR KR1020117017098A patent/KR101173815B1/en active IP Right Grant
- 2005-03-25 JP JP2007506396A patent/JP4956420B2/en active Active
- 2005-03-25 KR KR1020117017095A patent/KR101171680B1/en active IP Right Grant
-
2010
- 2010-12-10 JP JP2010275595A patent/JP5181013B2/en active Active
-
2011
- 2011-05-02 AU AU2011201992A patent/AU2011201992B2/en active Active
- 2011-05-02 AU AU2011201991A patent/AU2011201991B2/en active Active
- 2011-05-02 AU AU2011201989A patent/AU2011201989B2/en active Active
- 2011-05-02 AU AU2011201993A patent/AU2011201993B2/en active Active
- 2011-05-02 AU AU2011201994A patent/AU2011201994B2/en active Active
- 2011-08-23 JP JP2011181203A patent/JP5243583B2/en active Active
- 2011-08-23 JP JP2011181202A patent/JP5243582B2/en active Active
- 2011-08-23 JP JP2011181204A patent/JP5241897B2/en active Active
- 2011-08-23 JP JP2011181205A patent/JP5384583B2/en active Active
-
2012
- 2012-09-14 US US13/619,610 patent/US8621022B2/en not_active Expired - Lifetime
- 2012-09-14 US US13/619,325 patent/US9071566B2/en not_active Expired - Lifetime
- 2012-09-14 US US13/619,413 patent/US9015257B2/en not_active Expired - Lifetime
- 2012-09-14 US US13/619,502 patent/US9124543B2/en not_active Expired - Lifetime
-
2013
- 2013-05-16 AU AU2013205898A patent/AU2013205898B2/en active Active
- 2013-05-29 JP JP2013113280A patent/JP5608264B2/en active Active
- 2013-11-22 US US14/087,359 patent/US9015264B2/en not_active Expired - Lifetime
-
2014
- 2014-05-30 JP JP2014112132A patent/JP5883071B2/en active Active
-
2017
- 2017-11-14 US US15/812,998 patent/US10284506B2/en not_active Expired - Lifetime
Also Published As
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10706060B2 (en) | Systems and methods for re-ranking displayed conversations | |
AU2011201993B2 (en) | Searching conversations in a conversation-based email system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FGA | Letters patent sealed or granted (standard patent) | ||
HB | Alteration of name in register |
Owner name: GOOGLE LLCFree format text: FORMER NAME(S): GOOGLE, INC. |
US7668968B1 - Closed-loop voice-over-internet-protocol (VOIP) with sender-controlled bandwidth adjustments prior to onset of packet losses - Google Patents
Closed-loop voice-over-internet-protocol (VOIP) with sender-controlled bandwidth adjustments prior to onset of packet losses Download PDFInfo
- Publication number
- US7668968B1 US7668968B1 US10/248,002 US24800202A US7668968B1 US 7668968 B1 US7668968 B1 US 7668968B1 US 24800202 A US24800202 A US 24800202A US 7668968 B1 US7668968 B1 US 7668968B1
- Authority
- US
- United States
- Prior art keywords
- audio
- bandwidth
- packets
- user
- application
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/80—Responding to QoS
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/04—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using predictive techniques
- G10L19/16—Vocoder architecture
- G10L19/18—Vocoders using multiple modes
- G10L19/24—Variable rate codecs, e.g. for generating different qualities using a scalable representation such as hierarchical encoding or layered encoding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
- H04L65/75—Media network packet handling
- H04L65/752—Media network packet handling adapting media to network capabilities
Definitions
- This invention relates to voice-over-Internet-Protocol (VoIP) systems, and more particularly to adjustments of current bandwidth usage of VoIP channels on an unregulated network such as the Internet.
- VoIP voice-over-Internet-Protocol
- VoIP Voice-over-Internet-Protocol
- IP Internet-protocol
- VoIP applications can be installed on personal computers (PC's), other devices connected to the Internet, or on translation servers such as Internet-to-Telephone gateways or Protocol Converters. Each party to a call runs a local copy or client of the VoIP application.
- FIG. 1 is a diagram of a prior-art VoIP system experiencing packet loss.
- VOIP application 10 is operated by user A while VOIP application 12 is operated by user B at different nodes on the Internet.
- User A's speech is digitized, coded, compressed, and fitted into IP packets 20 by VOIP application 10 .
- These IP packets 20 containing user A's voice are routed over the Internet to VOIP application 12 .
- VOIP application 12 receives these IP packets 20 , extracts and de-compresses the voice data, and plays the voice as audio to user B. User B's voice is then captured, coded, compressed, and fitted into IP packets 22 by VOIP application 12 . IP packets 22 containing user B's voice are also routed over the Internet back to VOIP application 10 for playback to user A, achieving a full-duplex voice call.
- IP packets can be routed over a wide variety of paths using the Internet. Indeed, the de-centralized nature of the Internet allows routing decisions to be made at a number of points along the paths between applications 10 , 12 .
- the paths taken by packets 20 in the A-to-B direction can differ from the path taken by packets 22 in the reverse (B-to-A) direction. For example, packets 20 may pass through intermediate routers 14 , 16 , while packets 22 pass through router 18 .
- Such non-symmetric routing can produce non-symmetric routing delays and challenges for the VOIP system.
- a router may temporarily fail, causing some packets to be delayed or lost entirely. The number of arriving packets may suddenly jump, producing congestion such as at router 18 . Router 18 may delay packets 24 while the increased packet load occurs. Packets may continue to be delayed after the initial failure is fixed as the packet backlog is worked off. If the input buffers for router 18 overflow, packets 24 may be dropped or lost rather than simply delayed.
- Bandwidth limitations may also occur. Packets may need to reach a user through a low-bandwidth dial-up modem line. Some types of modems such as satellite Internet Access or Asymmetric Digital-Subscriber Lines (ADSL) may have much more bandwidth in one direction (download) than in the other (upload). Occasional interference may further delay packets. The modem user may send email or browse a web site, reducing further the limited bandwidth available to the VOIP application's packets. Thus bandwidth limitations may be both permanent and temporary.
- ADSL Asymmetric Digital-Subscriber Lines
- VOIP applications 10 , 12 may have limited network status communicated between them. Sending VOIP application 12 may be unaware of packet routing problems on the packets it sends. The problems may not exist in packets received by VOIP application 12 from VOIP application 10 , as the routing paths may not be symmetrical. Even on a symmetric network congestion or limitations on bandwidth may exist only in one direction, such as upload and download directions on a cable modem or ADSL.
- VoIP application 10 cannot determine its outbound bandwidth simply by looking for delays of incoming packets received from VoIP application 12 , since different routes may be taken by packets 20 sent and packets 22 received by application 10 .
- provisioning may be performed to determine the initial bandwidths available between applications 10 , 12 .
- Such provisioning may be similar to fax machines that negotiate compression standards used and bandwidth or baud rate for each call. However, this initial provisioning is often not continuous. Changes to the Internet that later occur during the call are not detected once provisioning is over and the call is started.
- FIG. 2A shows voice data that is packetized and transmitted.
- the user's voice can be captured as analog waves of varying frequencies that are digitized and coded.
- the coded voice data is divided into packets and transmitted. Sequence numbers are added to the packets to allow the packets to be re-ordered when some are delayed more than others. The sequence numbers thus allow for out-of-order reception and detection of missing packets.
- the coded voice is divided into four packets, each packet containing coded voice data for an equal, fixed time period of 20 milli-seconds.
- FIG. 2B shows packetized voice data received after varying network delays.
- the sequence numbers are used to re-order the packets when they arrive with varying network delays.
- packet 2 is delayed slightly, causing a gap to occur between the end of playing the voice for packet 1 , and the start of voice play for packet 2 .
- a larger gap occurs between packets 2 and 3 , between times S 2 and S 2 ′.
- These gaps may be filled in by interpolating voice data, or by adding silence. However, the pace of the user's voice may seem uneven or jerky due to such gaps.
- Such gaps caused by delayed packets can reduce the quality of the voice played.
- packets may pile up in buffers near the point of interruption. Should service be quickly restored, the stored packets in the buffers may be sent after some delay. However, longer-duration interruptions can cause router buffers to overflow. Packets may then be dropped or discarded before reaching their destinations.
- the older packets are likely to be sent first by the router. Newer packets may be delayed even after the interruption ends as the backlog of packets is transmitted. Thus stale packets of older voice data may be delivered before more current voice data. These older packets may already be too old to be played, resulting in a lengthening of what was a brief moment of congestion.
- Some VOIP systems may detect packet loss or a drop in voice quality.
- packet loss is not sufficiently sensitive to early stages of congestion, since congestion usually begins before packet loss occurs. Waiting to detect packet loss allows the congestion to become much worse before action is taken.
- the parent application Rather than simply wait for packet losses to mount up, the parent application detects such congestion beginning to occur.
- bandwidth may also be estimated to detect when bandwidth is limited but packet loss is not yet occurring.
- Congestion and bandwidth restrictions are detected by one VOIP application and sent to the other VOIP application.
- Each VOIP application monitors and estimates congestion and bandwidth on its inbound direction for use by the other VOIP application. Congestion and bandwidth estimates can be embedded in the VOIP packets for sending to the other VOIP application.
- VOIP applications can respond to the congestion and bandwidth estimates in a variety of ways.
- the present application describes a closed-loop system wherein one VOIP application estimates congestion and bandwidth while the other VOIP application receives the bandwidth and congestion estimates and adjusts its packet flow to compensate.
- VOIP application that can continuously receive estimates of network problems such as congestion, limited bandwidth, and delays.
- a VOIP system that can continuously respond to such estimates by adjusting audio-compression and bandwidth usage is desirable.
- a pair of VOIP applications that continuously monitor network conditions and adjust packet flow is desired.
- a closed-loop feedback VOIP system for network monitoring and audio-packet-flow adjustment is desired.
- FIG. 1 is a diagram of a prior-art VoIP system experiencing packet loss.
- FIG. 2A shows voice data that is packetized and transmitted.
- FIG. 2B shows packetized voice data received after varying network delays.
- FIG. 3 is a diagram of a closed-loop VOIP system with VOIP applications that continuously receive bandwidth estimates embedded in incoming packets and adjust bandwidth consumption of outgoing packets.
- FIG. 4 shows in more detail a VOIP application with a bandwidth detector and a variable packetizer responsive to bandwidth estimates.
- FIG. 5 shows an outgoing VOIP packet with bandwidth and congestion estimates for the incoming path.
- FIG. 6 highlights variable audio-compression and packet sizes.
- FIGS. 7A-C are flowcharts showing variable coding, compression, decimation, and packet sizing in response to bandwidth estimates received from a remote VOIP application.
- FIGS. 8A-C show graphs of packet arrivals, bandwidth estimates, and sending bandwidth changes.
- FIGS. 9A-C show graphs of packet latencies, congestion estimates and responses.
- the present invention relates to an improvement in voice-over-Internet-Protocol (VOIP) systems.
- VOIP voice-over-Internet-Protocol
- FIG. 3 is a diagram of a-closed-loop VOIP system with VOIP applications that continuously receive bandwidth estimates embedded in incoming packets and adjust bandwidth consumption of outgoing packets.
- VOIP application 30 captures, encodes, compresses, and packetizes voice from user A and sends IP packets 34 over Internet 44 to VOIP application 32 for playback to user B.
- VOIP application 32 likewise captures, encodes, compresses, and packetizes voice from user B and sends IP packets 36 over Internet 44 to VOIP application 30 for playback to user A.
- Packets 34 from user A to B travel through path 38 , which has a restricted bandwidth.
- a router may be congested or a dial-up modem may be in path 38 .
- Packets 36 from user B to user A travel through Internet 44 on a different route, path 39 , which has a larger bandwidth in this example and at the time shown.
- Bandwidth detector 40 is part of VOIP application 30 . Incoming packets 36 are analyzed by bandwidth detector 40 to determine the packets' travel time along path 39 and indirectly estimate the bandwidth of path 39 . This bandwidth estimate from bandwidth detector 40 is added to outgoing packets 34 . Packets 34 contain both voice data from user A, VA, and the bandwidth estimate for packets 36 sent by user B, BW_B.
- VOIP application 32 When packets 34 are received by VOIP application 32 , user A's voice data VA is extracted and played back to user B, and the bandwidth estimate BW_B is read, allowing VOIP application 32 to adjust or halt its transmission of outgoing packets 36 . For example, when bandwidth is reduced, VOIP application 32 can signal user B of the problem, such as by generating an audible beep or displaying a quality meter on a visual interface to indicate the poor bandwidth.
- VOIP application 32 can adjust its audio compression ratio to change its bandwidth consumption in response to changing bandwidth estimates received from VOIP application 30 .
- bandwidth estimates are reduced, VOIP application 32 can increase audio compression or use more efficient coding methods. Audio frames can be dropped to reduce bandwidth consumption. The quality of audio playback can be reduced to squeeze the audio packets into the more-restricted network pipe. Larger more efficient packets can be used.
- Bandwidth detector 42 in VOIP application 32 also measures the arrival rate of incoming packets 34 to estimate the bandwidth of path 38 .
- This bandwidth estimate for user A, BW_A is added to outgoing packets 36 which contain user B's voice data, VB.
- packets 36 contain VB and BW_A
- packets 34 contain VA and BW_B.
- VOIP application 30 can also adjust its audio compression ratio to change its bandwidth consumption in response to changing bandwidth estimates received from VOIP application 32 .
- bandwidth estimates are reduced, VOIP application 30 can increase audio compression or use more efficient coding methods for packets 34 . Audio frames can be dropped to reduce bandwidth consumption. The quality of audio playback can be reduced to squeeze the audio packets into the more-restricted network pipe. Larger, more efficient packets can be used.
- packets 34 have varying audio-playback durations. Less-efficient packets 34 have durations of 20 or 30 ms. When bandwidth estimates are reduced, larger, more bandwidth-efficient packets 34 having 40 or 80 ms of audio-playback can be used.
- the overall system of VOIP applications 30 , 32 is closed-loop.
- the bandwidth of the A-to-B network path 38 is continuously monitored by VOIP application 32 , which sends estimates BW_A in packets 36 back to VOIP application 30 .
- VOIP application 30 adjusts its audio coding and packet size to compensate for increases or decreases in the bandwidth estimate.
- the bandwidth used by packets 34 is adjusted, which can cause different readings of available bandwidth by VOIP application 32 .
- VOIP application 32 when VOIP application 32 detects a lower bandwidth on A-to-B path 38 , it reduces BW_A.
- VOIP application 30 receives packets 36 with a lower BW_A, and increases the packet size and audio compression ratio at the expense of reduced audio quality. This reduces the bandwidth occupied by packets 34 .
- the reduced bandwidth consumption of packets 34 better fits through restricted path 38 .
- Bandwidth detector 42 in VOIP application 32 also can measure the travel time or latency of incoming packets 34 to estimate the congestion of path 38 . When latency begins to increase, congestion is starting to appear.
- the latency or travel time measured by bandwidth detector 40 is not the round-trip travel time.
- the round-trip travel time includes both paths 38 , 39 . Instead, only the one-way latency is measured, from VOIP application 32 to VOIP application 30 over path 39 .
- Separate bandwidth and congestion estimates allow for asymmetric latencies, such as when path 38 is restricted while path 39 is not. More precise bandwidth estimates are thus possible.
- Congestion estimates can also be responded to in a closed-loop fashion. For example, congestion in restricted path 38 can be detected by VOIP application 32 from the increased latency of incoming packets 34 . A congestion estimate is increased and sent in packets 36 back to VOIP application 30 . VOIP application 30 may delay sending packets until the congestion ends and the congestion estimates from VOIP application 32 drop. If the congestion is momentary, the delayed packets can be sent late by VOIP application 30 , or fresher packets can be sent and the older packets dropped before transmission.
- the user can also be notified that his packets are not getting through, so he can delay speaking.
- FIG. 4 shows in more detail a VOIP application with a bandwidth detector and a variable packetizer responsive to bandwidth estimates.
- VOIP application 32 captures user B's voice and stores the digitized voice as voice data 54 .
- Codecs 52 are one or more voice encoders that compress and encode the raw digitized voice using a variety of algorithms. Some algorithms may be more bandwidth-efficient than others but have lower voice quality. Standard as well as proprietary codecs can be used.
- the incoming packets contain bandwidth and/or congestion estimates from the other VOIP application.
- Jitter buffer 48 sends these estimates to variable packetizer 50 .
- Variable packetizer 50 forms the outgoing IP packets by adding headers and catalogs of the voice data, to the encoded voice data from codecs 52 .
- the codecs 52 selected can be responsive to the bandwidth estimate received from the packets in jitter buffer 48 .
- Variable packetizer 50 can adjust bandwidth consumption by varying the packet size and audio compression. Larger, more efficient packets can be used to reduce overall bandwidth consumption. A codec with greater audio compression can be used, and audio frames can be dropped altogether to significantly reduce bandwidth consumption when a severe loss of bandwidth occurs.
- Incoming packets with user A's voice data are received and stored by jitter buffer 48 . Some delay and variation in packet reception is accommodated by jitter buffer 48 , and packets can be re-ordered by sequence number if received out of order.
- the packets are sent to core manager 56 of VOIP application 32 , which extracts the voice data from the packets, examines the voice catalog, and selects the specified codec to decode and decompress the voice data. The final decoded, decompressed voice data is played as audio to user B.
- Core manager 56 may contain a variety of software modules including a user interface or may call other modules, library, or operating system routines.
- BW_A is generated by bandwidth detector 42 ( FIG. 3 ) by examining arrival rates and audio durations of incoming packets arriving at jitter buffer 48 ( FIG. 4 ). BW_A is sent to variable packetizer 50 to be embedded inside the outbound packets 36 being sent to VOIP application 30 .
- the second bandwidth estimate, BW_B is embedded inside the incoming packets 34 that arrive at jitter buffer 48 .
- This bandwidth estimate was made by the other VOIP application.
- Variable packetizer 50 and/or core manager 56 use BW_B to alter the audio compression ratio, packet size, and audio frame skipping to adjust the bandwidth consumed by outgoing packets 36 .
- the bandwidth consumed is adjusted to more closely match the bandwidth estimate received, BW_B.
- Time stamper 46 provides time-stamps or clock values that are an indication of time. Time stamper 46 generates the arrival time for each packet received by jitter buffer 48 . Each packet also contains a send time that was included by the other VOIP application. Bandwidth detector 42 compares the arrival time with the send time for each packet to get the packet's one-way travel time or latency. The change in latency over time is used to determine when congestion occurs.
- the arrival rate of incoming packets is used to estimate incoming bandwidth. For example, when the arrival times between packets increase, bandwidth is reduced.
- Bandwidth detector 42 generates current estimates for the incoming bandwidth, BW-EST, and congestion, CONG-EST.
- Variable packetizer 50 receives the bandwidth and congestion estimates from bandwidth detector 42 and adds these to outgoing packets.
- the estimates may be numerical values such as 5-bit or 8-bit binary numbers that represent a magnitude of bandwidth or congestion, or may be more qualitative values such as 2 or 3-bit values that indicate “good”, “average”, “poor”, or “blocked” paths.
- One-bit values such as a congestion flag may also be used.
- the packet loss counter When packets fail to arrive at jitter buffer 48 , or are substantially late, such as more than 2 seconds, the packet loss counter is incremented.
- the packet loss counter PKT-LOSS may also be included in outgoing packets.
- FIG. 5 shows an outgoing VOIP packet with bandwidth and congestion estimates for the incoming path.
- IP packet 36 includes network-level header information such as a Telnet-Connect-Protocol (TCP) or user datagram protocol (UDP) header. Ethernet and Internet Protocol (IP) information may also be included. IP packet 36 may be further encapsulated during routing, such as by adding Virtual Private Networking (VPN) or other protocol layering and translations.
- VPN Virtual Private Networking
- IP header 60 contains the destination and source IP addresses while TCP/UDP header 62 contains the TCP or UDP port or other TCP information. Checksums and other information may also be included.
- Application audio or voice data field 68 contains the compressed and encoded voice data and may be sub-divided into several sub-fields.
- Send time field 64 contains the send time S(N) or time-stamp value placed into packet 36 when the packet was transmitted.
- Catalog 66 is a directory of the voice-data contents of voice-data field 68 .
- Voice-data field 68 may be broken into segments called audio frames, Data 1 , Data 2 , Data 3 , which are listed in the index of contents in catalog 66 .
- Catalog 66 can specify a number of attributes for each segment, such as the codec used, the audio duration of the segment, the type (such as voice/silence/silence-identifier) and the sequence number of the segment. Segments can carry their own sequence numbers independent of the packet sequence number, or in a simpler implementation the packet sequence number can be used in conjunction with accumulated catalog frame duration markers to know the exact timestamp of each segment in the packet.
- the playing time for the entire packet of voice data is the duration D(N).
- This voice duration can be explicitly or implicitly contained in catalog 66 .
- the packet duration may have to be calculated by adding durations of segments (Data 1 , Data 2 , Data 3 . . . ) of voice data in voice-data field 68 , or by considering the kind of codec and compression used and the number of bytes of voice data.
- the overall size of the packet and its header is variable as the packetizer can choose how many audio frames to include in a packet.
- the packetizer can mix several different types of compression and select a subset of audio data to not be sent to reduce the amount of data that must be sent for a given period of time represented by the packet.
- the bandwidth estimate BW-EST, congestion estimate CONG-EST, and packet-loss counter PKT-LOSS can be added to the end of packet 36 .
- FIG. 6 highlights variable audio-compression and packet sizes.
- the audio or voice data captured from the user is stored as voice data 300 .
- This data 300 is normally in a digitized format but occupies a relatively large amount of storage space compared to what it will require-once compressed.
- This digitized voice data 300 is encoded and compressed by one or more codecs to produce compressed data 302 .
- Different codecs and coding methods can be used for different segments or frames of the audio data.
- voice frames contain talking voice data and use higher-quality coding methods.
- Voice data is in frames 1 , 2 , 4 , 6 , 7 , and 8 .
- Silence Identifier SID identifies a period of silence.
- a lower-quality codec that produces higher compression can be used for these silence periods, such as frames 4 and 5 .
- the length of silent time can be coded rather than coding the background noise. Compression can thus be very high for silent periods.
- the coded, compressed data 302 can be further reduced in size by decimation. Some of the less-important frames can be deleted. The location of the deleted frames are noted in the audio packet catalog and the receiving VOIP application must re-create the deleted frames, perhaps by interpolating from the surrounding audio frames, or by inserting silence or some pre-defined sound.
- frames 4 and 7 are deleted by decimation.
- Frame 4 is a silence frame but frame 7 is a voice frame.
- the coded, compressed, and decimated audio data 304 has a smaller size than original voice data 300 or compressed data 302 .
- the amount of reduction, or the audio-compression ratio, can be adjusted to reduce or expand the bandwidth used by the audio packets to better match the bandwidth estimates. Audio quality versus use of bandwidth can be adjusted over a very wide range using this technique.
- Decimated audio data 304 is then divided into IP packets by the variable packetizer.
- the packet size is larger when more frames and larger frames are included in a packet than when fewer and smaller audio frames are included.
- packet 306 is larger than packet 308 .
- Packets the size of packet 306 rather than the size of packet 308 can be used to increase efficiency when the bandwidth estimate is reduced. Efficiency is higher with larger packets because the header is shared by a larger number of frames in the larger packets.
- Each packet 306 , 308 has an IP header attached and a UDP or TCP header following the IP header.
- Packet 306 has audio frames 1 , 2 , 3 , and 5
- packet 308 has audio frames 6 and 8 .
- the frame order could be non-sequential when frame sequence numbers are included in the packet's catalog.
- FIGS. 7A-C are flowcharts showing variable coding, compression, decimation, and packet sizing in response to bandwidth estimates received from a remote VOIP application.
- the bandwidth estimates from the remote VOIP application are extracted, step 102 .
- the extracted bandwidth estimate is compared to the current sending bandwidth that the VOIP application is configured for.
- the bandwidth estimate is the same as the sending bandwidth, step 104 , then the bandwidth estimate and sending bandwidth are matched and the network is stable. No change to the coding, compression, decimation, and packet size needs to be made, step 108 .
- the current settings for coding, compression, decimation, and packet size are used to create VOIP packets to be transmitted to the remote VOIP application, step 110 .
- step 106 When the bandwidth estimate is greater than the sending bandwidth, step 106 , then there is excess bandwidth available in the path through the Internet.
- the sending bandwidth can be increased by decreasing coding, compression, decimation, and packet size efficiencies, step 114 . This produces a better audio quality and potentially less delay but consumes more bandwidth as more bits of data are transmitted over the Internet path.
- FIG. 7C shows in more detail how efficiencies can be decreased.
- step 106 When the bandwidth estimate is less than the sending bandwidth, step 106 , then there is reduced bandwidth available in the path through the Internet.
- the network is operating above its limit, and congestion may soon occur.
- the sending bandwidth can be decreased by increasing coding, compression, decimation, and packet size efficiencies, step 112 . This produces a reduced bandwidth consumption at the expense of deteriorated audio quality and increased delay. Fewer bits of data are transmitted over the Internet path due to the higher compression ratio.
- FIG. 7B shows in more detail how efficiencies can be increased.
- the sending bandwidth is too high and must be decreased to avoid congestion problems.
- the packet size being used by the variable packetizer is examined, step 120 , to determine if the packet size is at the maximum allowable packet size. If the packet size can be increased further, the packet size is enlarged, step 126 .
- Future VOIP packets generated by the variable packetizer use the new, larger packet size when audio data is packetized.
- the new configuration with the larger packet size is used to code, compress, decimate, and packetize the audio data for transmission, step 132 .
- step 120 When the packet size is already at the maximum size, step 120 , more drastic configuration changes need to be taken. While increasing the packet size doesn't reduce the sound quality, coding, compression, and especially decimation changes can reduce audio quality.
- step 122 a different, more compressed, coding method is configured, step 128 .
- a different codec or a different compression algorithm that more highly compresses the voice data may be used. In general, the higher-compression codings have reduced voice quality, although different voice samples may be more accurately compressed with some methods than for others.
- VOIP packets generated by the variable packetizer use the new, more-highly compressed encodings when audio data is coded by the codecs.
- the new configuration with the new codec is used to code, compress, decimate, and packetize the audio data, step 132 .
- step 122 When the compression is already at the maximum size, step 122 , even more drastic configuration changes need to be taken. Decimation can significantly reduce audio quality since entire audio frames are dropped. When the configuration does not use the maximum decimation, step 124 , more decimation is configured, step 130 . A greater percentage of audio frames may need to be dropped, such as one out of every six frames rather than one out of every ten frames.
- VOIP packets generated by the variable packetizer are now more-highly decimated.
- the new configuration with the new decimation ratio is used to code, compress, decimate, and packetize the audio data, step 132 .
- step 120 When the maximum packet size, step 120 , maximum compression rate, step 122 , and maximum decimation, step 124 , are already configured, additional efficiencies are impossible.
- the audio data is compressed, decimated, and packetized using the current configuration which is already the most efficient.
- very high degrees of decimation could be used, such as dropping every other audio frame, but a decimation limit may be imposed.
- the sending bandwidth is too low and can be increased. Excess bandwidth or capacity is available on the network path. More audio data can safely be transmitted over the path. Less efficient configuration setting may be used, improving the audio quality and reducing delay.
- step 140 When the configuration does not use the least decimation, step 140 , less decimation is configured, step 146 .
- a reduced percentage of audio frames may need to be dropped, such as one out of every ten frames rather than one out of every five frames.
- the minimum decimation is typically zero, which has the best voice quality since no frames are dropped. Reducing or eliminating decimation can significantly increase voice quality.
- VOIP packets generated by the variable packetizer are now not decimated as much.
- the new configuration with the new, reduced decimation ratio is used to code, compress, decimate, and packetize the audio data for transmission, step 152 .
- step 142 When the last configuration does not use the minimum compression, step 142 , a different, less compressed, coding method is configured, step 148 .
- a different codec or a different compression algorithm that compresses the voice data to a lesser degree may be used. This tends to improve voice quality, although different voice samples may be more accurately compressed with some methods than other voice samples.
- VOIP packets generated by the variable packetizer use the new, less compressed encodings when audio data is coded by the codecs.
- the new configuration with the new codec is used to code, compress, decimate, and packetize the audio data, step 152 .
- step 142 When the decimation is at the minimum, such as zero, step 140 , and the least-compressed codec is used, step 142 , then the packet size being used by the variable packetizer is examined, step 144 , to determine if the packet size is at the minimum configurable packet size. If the packet size can be decreased further, the packet size is reduced, step 150 . Future VOIP packets generated by the variable packetizer use the new, smaller packet size when audio data is packetized. The new configuration with the smaller packet size is used to code, compress, decimate, and packetize the audio data for transmission, step 152 .
- step 142 When the decimation is at the minimum, such as zero, step 140 , and the least-compressed codec is used, step 142 , and the minimum packet size is used, step 144 , then further increases in audio quality are not possible.
- the current configuration settings are used, step 152 .
- Each new incoming packet with a bandwidth estimate can further change the configuration. For example, each incoming packet with a bandwidth estimate that is still below the sending bandwidth can cause the packet size to be increased further until the maximum packet size is reached.
- the sending bandwidth increases as the configuration is changed, so eventually the sending bandwidth may fall to meet the bandwidth estimates. Then further increases in packet size are not needed unless the bandwidth estimates fall further. Relatively small changes in configuration per packet can add up to larger, rapid changes over many packets received in a short time.
- the sending bandwidth can be updated once the configuration of coding, compression, decimation, and packet size is changed.
- a table can be used to determine the sending bandwidth based on the configuration of coding, compression, decimation, and packet size.
- the various steps can be combined into a configuration-table lookup that selects the next configuration, which may be a combination of changes in coding compression, decimation, and packet size.
- the sending bandwidth can be based on the last bandwidth estimate, or an average of the last several bandwidth estimates. Then changes in the bandwidth estimate cause changes in configurations for coding, compression, decimation, and packet size, such as selection of the next configuration line in the configuration table.
- FIGS. 8A-C show graphs of packet arrivals, bandwidth estimates, and sending bandwidth changes.
- FIG. 8A has the voice time or packet sequence number as the y-axis and the actual arrival times of packets as the x-axis.
- packets have the same voice durations and should all arrive with the same inter-packet arrival time and thus fall along ideal line 250 .
- FIG. 8B shows that the bandwidth estimate is increased slightly during this time of network stability.
- Packets begin arriving at the ideal rate during period 204 .
- the packets have the same slope as ideal line 250 , but are below line 250 due to the delays from period 202 .
- the bandwidth estimate rises slightly during this period.
- the network recovers quickly during period 206 as many packets arrive in a short time. This can occur as a router recovers from a delay and works off its packet backlog.
- the packets rapid arrival produces a slope higher than that for ideal line 250 , and eventually the packets reach line 250 .
- the bandwidth estimate rises quickly during period 206 in proportion to the difference of inter-packet arrival time and the voice duration of the voice data inside the packets.
- FIGS. 8A-B are performed on one VOIP application, such as VOIP application 30 ( FIG. 3 ), while the response of FIG. 8C is performed by the other user's VOIP application, such as VOIP application 32 .
- the sending bandwidth is adjusted to respond to changes in the bandwidth estimates of FIG. 8B .
- bandwidth estimates rise slightly during period 200 , configurations may be slowly changed to increase voice quality and decrease efficiencies. This consumes more bandwidth.
- bandwidth estimates drop rapidly. After a time lag, sending bandwidth is drastically reduced, perhaps by increasing compression or decimating audio frames.
- the relatively stable but low-bandwidth network conditions during period 204 allow the sending bandwidth to be increased slightly. Relatively similar configurations occur in period 204 , causing the sending bandwidth to increase only slightly. This allows time for the network to recover before being flooded with more audio packets.
- the rapid network recovery in period 206 causes the bandwidth estimates to rise. Successively less efficient configurations are selected to increase the sending bandwidth during this period. Voice quality improves.
- the network is again stable in period 208 .
- Bandwidth estimates increase slightly allowing the sending bandwidth to be increased somewhat.
- FIGS. 9A-C show graphs of packet latencies, congestion estimates and responses.
- latencies of arriving VOIP packets are plotted as a function of voice time.
- a similar graph can be made using time or sequence number for the x-axis.
- the dotted line is the moving average of the latencies and shows less movement than the current packet latencies since it is an average.
- Latencies are rising slightly over long time periods, as shown by the upward bias to the moving average during periods 210 , 214 .
- the congestion estimate remains relatively flat during periods 210 , 214 .
- a network problem or constriction occurs, causing the current packet latencies to rise sharply above the moving average. This can occur when a user sends or receives email over a modem line that is being used by the VOIP packets.
- the congestion estimate quickly rises as the latencies rise.
- the congestion estimate remains high as the current latencies fall sharply as FIG. 9B shows.
- This flat top to the congestion estimate allows time for the network to recover, perhaps causing the remote VOIP application to pause or reduce packet transmission until the congestion clears up. This can minimize the problem by not sending even more packets that could compound the congestion problem or which are likely to be discarded by the overburdened network if they are sent at that moment.
- the congestion estimate starts to fall as the estimate is reduced by a small amount for each of many packets. At this point, the network should be roughly caught up from any packet backlog. As more packets are received, the congestion estimate falls back to the base level in period 214 .
- FIG. 9C shows responses to congestion estimates of FIG. 9B . While FIGS. 9A-B shows estimates made on a remote VOIP application, FIG. 9C shows the response of a local VOIP application to the estimates made by the remote VOIP application.
- Congestion estimates can be responded to by pausing or halting packet transmission. This allows time for the congested router to fully recover before more packets are added to its buffer. Otherwise new packets could fill up the router's buffer, causing an overflow and dropped packets, compounding the congestion problem.
- the local VOIP application takes drastic action. All VOIP packets are held up and not sent out over the congested network path. Once the congestion estimate falls back below the congestion threshold during period 214 , these packets are transmitted.
- Congestion can be detected before packet loss occurs by detecting a rise in latencies that often occurs before packets are dropped. Congestion is quickly detected by the use of the moving average. Congestion estimates rise quickly but fall more slowly, allowing time for congested packets to be cleared out. The congestion estimate is fed back to the sender, allowing the sending application to reduce the bandwidth of packets being sent until the congestion ends. Drastic and quick bandwidth reductions may be useful when congestion occurs.
- the congestion estimate can quickly respond to delayed packets.
- the bandwidth estimate shows more of an overall picture of the total available flow of packets.
- the congestion estimate can more quickly react to sudden changes while the bandwidth estimate can be a smoother measure of the overall carrying capacity of the network path that is less sensitive to individual packets.
- the congestion estimate may be designed to detect short term or sudden increases in the ability of the network to deliver packets, while the bandwidth estimate tracks the slower overall carrying-capacity of the network. Sharp changes in inter-packet arrival time (or lack of packet arrivals) trigger the congestion estimate to rise.
- the packet size may be held constant while only the decimation and compression are adjusted, and combinations of adjustments can be made. More drastic changes in compression and decimation configuration could be taken when large changes in bandwidth estimates are received than when smaller estimate changes occur.
- a table of bandwidth conditions could be used to select specific combinations of packet size, compression and decimation, since in some cases the bandwidth gains by going to a higher level of compression may mean that decimation can be eliminated or a larger packet size be used and still arrive at a lower total bandwidth use.
- VOIP packets have been described as being routed over the public Internet, packets may be routed over other networks or combinations of networks such as Ethernets, Intranets, wide-area networks, wireless networks, satellite links, etc. Unmanaged networks can be used or networks with some management.
- the audio packets can also include multi-media data such as images, video, or text.
- bandwidth and congestion estimates could likewise be embedded in only some of the outgoing packets rather than all outgoing packets.
- the bandwidth and congestion estimates could also be sent in separate packets without voice data.
- the voice data is really audio data that is often voice, but could include other audio data such as songs, music, traffic noise, etc.
- the bandwidth estimate could also be kept constant when the network is stable, or could be increased by a different amount or by a variable amount.
- the congestion estimate could be performed before or after the bandwidth estimate, or at the same time. Parallel processing could be used on some systems.
- Some systems may use only the bandwidth estimate or only the congestion estimate. Other systems may only send bandwidth, packet-loss or congestion data when it has changed from previous values, or only send it on a subset of packets where there happens to be excess space at the end of the audio payload.
- Network recovery typically is very quick, and the congestion estimate can be raised immediately, or as shown in the previous embodiment, the congestion estimate can be left at its present level until such time as the network has cleared any backlog of stale or delayed packets.
- the bandwidth and congestion estimate and configuration-response routines could be activated by the jitter buffer when packets are late in arriving but before the packets arrive. Since the sending times of the missing packets are not known, they may be interpolated from other packets, or a fixed number used to calculate the new arrival time, latency, or voice duration. The amount of voice data in packets can vary from packet to packet rather than be the same for all packets as described in the simplified examples.
- the jitter buffer may perform other functions, such as detecting and processing duplicate and missing packets.
- the send and receive times may be relative times or somewhat different times, such as a time-stamp added just before transmission or some delay after the packet arrives, or could be added at other times.
- the time-stamp may be a full time in a 24-hour format, or may be a subset of the full time, such as the current minute and seconds values, or may be a relative time value such as from a counter that changes with time.
- a processor or other hardware timer may used, or perhaps accessed using software routines.
- the sending and receiving VOIP application timer can be synchronized by a third-party timer, or by using round-trip packet transit times to adjust or correct timer differences.
- Synchronization between the remote and local VOIP applications can occur at the start of communication.
- a series of packets can be exchanged simultaneously in both directions between the local and remote applications.
- Each synchronizing packet can contain a sent time-stamp to which is then appended a received time-stamp.
- the packet may be returned to the opposite side where a third time-stamp of the return arrival can be made. From these packets, the round trip delay is easily determined, and by comparing the sent, received, and returned time-stamps on packets which went in opposite directions an estimate of the latency in each direction can be made.
- the clocks at both ends can either be synchronized, or a known offset can be recorded so that remote-application's time-stamps can be adjusted into local time of the local VOIP application.
- absolute time-stamps can be abandoned and the methods can be implemented purely on relative time-stamps. For example, a send time of 12653 milli-sec from the start of a call and can be compared to a previous send time-stamp of 12571 milli-sec to get an elapsed time measurement.
- Outlying data points such as from very slow packets could be removed to allow for an occasional transient or random dropped or delayed packet. Additional filtering could be performed.
- Many kinds of moving averages can be used, such as a simple arithmetic moving average, weighted moving averages that increase weighting of more recent data points, exponential moving averages, etc.
- Data values can be considered “equal” if within a certain range of each other, such as within 1% or 5% or 0.1%. Also, rounding of values can be performed before comparison, effectively providing a range of “equal” values.
- Congestion and bandwidth estimates can use only a few bits to indicate qualitative measurements such as “normal”, “minor restriction”, “major restriction”, “blocked”, or may use more bits to represent a quantitative estimate such as a percentage or data rate.
- One or both users could be notified of problems by an audible tone, vibration, or a display message, or the estimates could be logged to a file for debugging.
- the application may visually display a network-quality meter to the user.
- VOIP calls may be between two users on personal computers, or may consist of one user on a personal computer talking to a computer server or gateway, which converts the call from VOIP to telephone or PBX or private IP phone system formats.
- the call could also be between two telephone or private IP-phone users with a VOIP segment somewhere in the middle carrying the call from one location to another over the Internet or similar unmanaged network but terminating the call at each end on a telephone or PBX or IP phone.
- Calls could also involve a conversation between one user on a PC or telephone or IP phone, and at the other end an automated voice response system such as a banking application, voicemail, auto attendant, talking yellow pages or other automated voice service. More than two parties may exist in multi-way calling.
- a smaller number of larger packets can carry the same voice data payload more efficiently using fewer total bits of bandwidth than a larger number of small packets.
- small packets are preferred since they reduce the latency of sending the voice from one application to another. But if the network is not keeping up with the quantity of packets being sent, delays will be rising already, and overall better performance can be reached by using larger more efficient packets that prevent the network from being overwhelmed.
- an upper limit in the region of 40 mSec to 250 mSec for packet size is typical.
- the network IP protocol may also restrict the useful packet size to 1024 bytes or a multiple thereof depending on the details of the network and the routers supporting packet flow. Packet sizes of tens or hundreds of bytes are much more commonly used.
- Some compression algorithms include support within their standard for marking frames of audio as voice or silence, and can forward representations of the background noise. This is called a Silence Identifier or sid frame. It can be used at the far side for efficient re-synthesis of quiet sections of near silent and fully silent audio. Variable thresholds and use of these compression algorithm silence/sid features can be used as can moving from one compression algorithm to another.
- Decimation can pick from among the available audio frames ready to be shipped and select to decimate the ones least likely to have acoustic impact.
- Sending bandwidth can be calculated as an absolute number based on the total number of bytes in each completed packet divided by the time interval which that packet represents, or it can be monitored on a relative basis compared to the bandwidth estimate being sent from the far side (one notch up, one notch down), or it can consist of a series of pre-determined combinations of packet size, compression and decimation in a table with known associated bandwidth averages for each possible combination calculated ahead of time by the designer.
Abstract
Description
Claims (10)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/248,002 US7668968B1 (en) | 2002-12-03 | 2002-12-09 | Closed-loop voice-over-internet-protocol (VOIP) with sender-controlled bandwidth adjustments prior to onset of packet losses |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/065,951 US6996626B1 (en) | 2002-12-03 | 2002-12-03 | Continuous bandwidth assessment and feedback for voice-over-internet-protocol (VoIP) comparing packet's voice duration and arrival rate |
US10/248,002 US7668968B1 (en) | 2002-12-03 | 2002-12-09 | Closed-loop voice-over-internet-protocol (VOIP) with sender-controlled bandwidth adjustments prior to onset of packet losses |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/065,951 Continuation-In-Part US6996626B1 (en) | 2002-12-03 | 2002-12-03 | Continuous bandwidth assessment and feedback for voice-over-internet-protocol (VoIP) comparing packet's voice duration and arrival rate |
Publications (1)
Publication Number | Publication Date |
---|---|
US7668968B1 true US7668968B1 (en) | 2010-02-23 |
Family
ID=41692287
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/248,002 Active 2024-08-07 US7668968B1 (en) | 2002-12-03 | 2002-12-09 | Closed-loop voice-over-internet-protocol (VOIP) with sender-controlled bandwidth adjustments prior to onset of packet losses |
Country Status (1)
Country | Link |
---|---|
US (1) | US7668968B1 (en) |
Cited By (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050070260A1 (en) * | 2003-09-30 | 2005-03-31 | General Motors Corporation | Method and system for responding to digital vehicle requests |
US20070195749A1 (en) * | 2004-03-12 | 2007-08-23 | Masashi Kakimoto | Wireless ip telephone set |
US20090030693A1 (en) * | 2007-07-26 | 2009-01-29 | Cisco Technology, Inc. (A California Corporation) | Automated near-end distortion detection for voice communication systems |
US20110016209A1 (en) * | 2008-01-14 | 2011-01-20 | Tobias Moncaster | Network characterisation |
WO2011157854A1 (en) * | 2010-06-18 | 2011-12-22 | Thomson Licensing | A packet retransmission method in a wireless transmitter |
EP2418903A1 (en) * | 2010-08-13 | 2012-02-15 | Thomson Telecom Belgium | A packet retransmission method in a wirelss transmitter |
US8169904B1 (en) * | 2009-02-26 | 2012-05-01 | Sprint Communications Company L.P. | Feedback for downlink sensitivity |
US8432942B1 (en) * | 2003-05-16 | 2013-04-30 | Apple Inc. | Providing a timing source for multiple nodes coupled to a circuit-switched network |
US20130145047A1 (en) * | 2011-12-02 | 2013-06-06 | Cisco Technology, Inc. | Flow-Based Compression Management |
US8509858B2 (en) | 2011-10-12 | 2013-08-13 | Bose Corporation | Source dependent wireless earpiece equalizing |
US20140003231A1 (en) * | 2011-03-17 | 2014-01-02 | Bae Systems Plc | Call delay control |
US20150063103A1 (en) * | 2013-09-04 | 2015-03-05 | Nvidia Corporation | Bandwidth-dependent compressor for robust header compression and method of use thereof |
CN104685841A (en) * | 2012-09-27 | 2015-06-03 | 日本电气株式会社 | Method for transmitting audio information and packet communication system |
US20150215223A1 (en) * | 2014-01-30 | 2015-07-30 | Salesforce.Com, Inc. | Streaming information based on available bandwidth |
EP2903223A4 (en) * | 2012-09-27 | 2016-05-04 | Nec Corp | Method for transmitting image information and packet communication system |
US9350616B1 (en) * | 2010-05-11 | 2016-05-24 | Trend Micro Inc. | Bandwidth prediction using a past available bandwidth value and a slope calculated from past available bandwidth values |
US9356869B2 (en) | 2013-04-10 | 2016-05-31 | Viber Media Inc. | VoIP bandwidth management |
US9917778B2 (en) | 2015-09-01 | 2018-03-13 | Microsoft Technology Licensing, Llc | Packet transmissions |
US10867615B2 (en) * | 2019-01-25 | 2020-12-15 | Comcast Cable Communications, Llc | Voice recognition with timing information for noise cancellation |
US10897492B1 (en) * | 2019-10-10 | 2021-01-19 | Lenovo (Singapore) Pte. Ltd. | Delayed VoIP packet delivery |
US20210065687A1 (en) * | 2019-09-03 | 2021-03-04 | Beijing Dajia Internet Information Technology Co., Ltd. | Method for processing voice signals and terminal thereof |
Citations (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5179549A (en) | 1988-11-10 | 1993-01-12 | Alcatel N.V. | Statistical measurement equipment and telecommunication system using same |
US5274625A (en) | 1992-09-10 | 1993-12-28 | International Business Machines Corporation | Traffic measurements in packet communications networks |
US5333299A (en) | 1991-12-31 | 1994-07-26 | International Business Machines Corporation | Synchronization techniques for multimedia data streams |
US5444707A (en) * | 1991-02-01 | 1995-08-22 | Netrix Telcom Systems Corporation | Packet switching communication system |
US5579301A (en) * | 1994-02-28 | 1996-11-26 | Micom Communications Corp. | System for, and method of, managing voice congestion in a network environment |
US5737531A (en) | 1995-06-27 | 1998-04-07 | International Business Machines Corporation | System for synchronizing by transmitting control packet to omit blocks from transmission, and transmitting second control packet when the timing difference exceeds second predetermined threshold |
US5890108A (en) | 1995-09-13 | 1999-03-30 | Voxware, Inc. | Low bit-rate speech coding system and method using voicing probability determination |
US5928331A (en) | 1997-10-30 | 1999-07-27 | Matsushita Electric Industrial Co., Ltd. | Distributed internet protocol-based real-time multimedia streaming architecture |
US5933803A (en) | 1996-12-12 | 1999-08-03 | Nokia Mobile Phones Limited | Speech encoding at variable bit rate |
US6144639A (en) | 1996-09-03 | 2000-11-07 | Sbc Technology Resources, Inc. | Apparatus and method for congestion control in high speed networks |
US6182125B1 (en) | 1998-10-13 | 2001-01-30 | 3Com Corporation | Methods for determining sendable information content based on a determined network latency |
US6219704B1 (en) | 1997-11-20 | 2001-04-17 | International Business Machines Corporation | Method and apparatus for delivering multimedia content based on network connections |
US6308148B1 (en) | 1996-05-28 | 2001-10-23 | Cisco Technology, Inc. | Network flow data export |
US6324184B1 (en) | 1996-03-18 | 2001-11-27 | General Instrument Corporation | Dynamic bandwidth allocation for a communication network |
US6356545B1 (en) | 1997-08-08 | 2002-03-12 | Clarent Corporation | Internet telephone system with dynamically varying codec |
US6389038B1 (en) | 1999-01-26 | 2002-05-14 | Net 2 Phone | Voice IP bandwidth utilization |
US6389032B1 (en) | 1999-02-11 | 2002-05-14 | International Business Machines Corporation | Internet voice transmission |
US6393016B2 (en) | 1995-09-18 | 2002-05-21 | Net2Phone, Inc. | Telephony signal transmission over a data communications network |
US6404764B1 (en) | 1998-09-09 | 2002-06-11 | Motorola, Inc. | Voice over internet protocol telephone system and method |
US20020085587A1 (en) * | 2000-10-17 | 2002-07-04 | Saverio Mascolo | End-to end bandwidth estimation for congestion control in packet switching networks |
US20020093911A1 (en) * | 2001-01-12 | 2002-07-18 | Nec Corporation | Congestion-responsive VoIP system and congestion avoidance method for VoIP system |
US6452922B1 (en) | 1998-06-19 | 2002-09-17 | Nortel Networks Limited | Method and apparatus for fallback routing of voice over internet protocol call |
US6456594B1 (en) | 1996-10-31 | 2002-09-24 | Connect One, Llp | Multi-protocol communications routing optimization |
US20020141392A1 (en) * | 2001-03-30 | 2002-10-03 | Yasuo Tezuka | Gateway apparatus and voice data transmission method |
US6473423B1 (en) | 1996-09-26 | 2002-10-29 | Net2Phone, Inc. | Method and system for interactive communication between two telephone sets via the internet |
US20030107991A1 (en) * | 2001-12-12 | 2003-06-12 | Yasuo Tezuka | Congestion control system for VoIP network |
US20030152094A1 (en) * | 2002-02-13 | 2003-08-14 | Colavito Leonard Raymond | Adaptive threshold based jitter buffer management for packetized data |
US20040002339A1 (en) * | 2002-06-28 | 2004-01-01 | Nortel Networks Limited | Method and apparatus for allocating bandwidth resources |
US20040204935A1 (en) * | 2001-02-21 | 2004-10-14 | Krishnasamy Anandakumar | Adaptive voice playout in VOP |
US6834053B1 (en) * | 2000-10-27 | 2004-12-21 | Nortel Networks Limited | Distributed traffic scheduler |
-
2002
- 2002-12-09 US US10/248,002 patent/US7668968B1/en active Active
Patent Citations (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5179549A (en) | 1988-11-10 | 1993-01-12 | Alcatel N.V. | Statistical measurement equipment and telecommunication system using same |
US5444707A (en) * | 1991-02-01 | 1995-08-22 | Netrix Telcom Systems Corporation | Packet switching communication system |
US5333299A (en) | 1991-12-31 | 1994-07-26 | International Business Machines Corporation | Synchronization techniques for multimedia data streams |
US5274625A (en) | 1992-09-10 | 1993-12-28 | International Business Machines Corporation | Traffic measurements in packet communications networks |
US5579301A (en) * | 1994-02-28 | 1996-11-26 | Micom Communications Corp. | System for, and method of, managing voice congestion in a network environment |
US5737531A (en) | 1995-06-27 | 1998-04-07 | International Business Machines Corporation | System for synchronizing by transmitting control packet to omit blocks from transmission, and transmitting second control packet when the timing difference exceeds second predetermined threshold |
US5890108A (en) | 1995-09-13 | 1999-03-30 | Voxware, Inc. | Low bit-rate speech coding system and method using voicing probability determination |
US6393016B2 (en) | 1995-09-18 | 2002-05-21 | Net2Phone, Inc. | Telephony signal transmission over a data communications network |
US6324184B1 (en) | 1996-03-18 | 2001-11-27 | General Instrument Corporation | Dynamic bandwidth allocation for a communication network |
US6308148B1 (en) | 1996-05-28 | 2001-10-23 | Cisco Technology, Inc. | Network flow data export |
US6144639A (en) | 1996-09-03 | 2000-11-07 | Sbc Technology Resources, Inc. | Apparatus and method for congestion control in high speed networks |
US6473423B1 (en) | 1996-09-26 | 2002-10-29 | Net2Phone, Inc. | Method and system for interactive communication between two telephone sets via the internet |
US6456594B1 (en) | 1996-10-31 | 2002-09-24 | Connect One, Llp | Multi-protocol communications routing optimization |
US5933803A (en) | 1996-12-12 | 1999-08-03 | Nokia Mobile Phones Limited | Speech encoding at variable bit rate |
US6356545B1 (en) | 1997-08-08 | 2002-03-12 | Clarent Corporation | Internet telephone system with dynamically varying codec |
US5928331A (en) | 1997-10-30 | 1999-07-27 | Matsushita Electric Industrial Co., Ltd. | Distributed internet protocol-based real-time multimedia streaming architecture |
US6219704B1 (en) | 1997-11-20 | 2001-04-17 | International Business Machines Corporation | Method and apparatus for delivering multimedia content based on network connections |
US6452922B1 (en) | 1998-06-19 | 2002-09-17 | Nortel Networks Limited | Method and apparatus for fallback routing of voice over internet protocol call |
US6404764B1 (en) | 1998-09-09 | 2002-06-11 | Motorola, Inc. | Voice over internet protocol telephone system and method |
US6182125B1 (en) | 1998-10-13 | 2001-01-30 | 3Com Corporation | Methods for determining sendable information content based on a determined network latency |
US6389038B1 (en) | 1999-01-26 | 2002-05-14 | Net 2 Phone | Voice IP bandwidth utilization |
US6389032B1 (en) | 1999-02-11 | 2002-05-14 | International Business Machines Corporation | Internet voice transmission |
US20020085587A1 (en) * | 2000-10-17 | 2002-07-04 | Saverio Mascolo | End-to end bandwidth estimation for congestion control in packet switching networks |
US6834053B1 (en) * | 2000-10-27 | 2004-12-21 | Nortel Networks Limited | Distributed traffic scheduler |
US20020093911A1 (en) * | 2001-01-12 | 2002-07-18 | Nec Corporation | Congestion-responsive VoIP system and congestion avoidance method for VoIP system |
US6999451B2 (en) * | 2001-01-12 | 2006-02-14 | Nec Corporation | Congestion-responsive VoIP system and congestion avoidance method for VoIP system |
US20040204935A1 (en) * | 2001-02-21 | 2004-10-14 | Krishnasamy Anandakumar | Adaptive voice playout in VOP |
US20020141392A1 (en) * | 2001-03-30 | 2002-10-03 | Yasuo Tezuka | Gateway apparatus and voice data transmission method |
US20030107991A1 (en) * | 2001-12-12 | 2003-06-12 | Yasuo Tezuka | Congestion control system for VoIP network |
US20030152094A1 (en) * | 2002-02-13 | 2003-08-14 | Colavito Leonard Raymond | Adaptive threshold based jitter buffer management for packetized data |
US7079486B2 (en) * | 2002-02-13 | 2006-07-18 | Agere Systems Inc. | Adaptive threshold based jitter buffer management for packetized data |
US20040002339A1 (en) * | 2002-06-28 | 2004-01-01 | Nortel Networks Limited | Method and apparatus for allocating bandwidth resources |
Cited By (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8432942B1 (en) * | 2003-05-16 | 2013-04-30 | Apple Inc. | Providing a timing source for multiple nodes coupled to a circuit-switched network |
US8055308B2 (en) * | 2003-09-30 | 2011-11-08 | General Motors Llc | Method and system for responding to digital vehicle requests |
US20050070260A1 (en) * | 2003-09-30 | 2005-03-31 | General Motors Corporation | Method and system for responding to digital vehicle requests |
US20070195749A1 (en) * | 2004-03-12 | 2007-08-23 | Masashi Kakimoto | Wireless ip telephone set |
US20090030693A1 (en) * | 2007-07-26 | 2009-01-29 | Cisco Technology, Inc. (A California Corporation) | Automated near-end distortion detection for voice communication systems |
US8036375B2 (en) * | 2007-07-26 | 2011-10-11 | Cisco Technology, Inc. | Automated near-end distortion detection for voice communication systems |
US20110016209A1 (en) * | 2008-01-14 | 2011-01-20 | Tobias Moncaster | Network characterisation |
US8880681B2 (en) * | 2008-01-14 | 2014-11-04 | British Telecommunications Public Limited Company | Network characterisation |
US8169904B1 (en) * | 2009-02-26 | 2012-05-01 | Sprint Communications Company L.P. | Feedback for downlink sensitivity |
US9350616B1 (en) * | 2010-05-11 | 2016-05-24 | Trend Micro Inc. | Bandwidth prediction using a past available bandwidth value and a slope calculated from past available bandwidth values |
US9544096B2 (en) | 2010-06-18 | 2017-01-10 | Thomson Licensing | Packet retransmission method in a wireless transmitter |
CN102948244B (en) * | 2010-06-18 | 2016-08-03 | 汤姆森特许公司 | Send method and the wireless device of packet |
US10361819B2 (en) | 2010-06-18 | 2019-07-23 | Interdigital Ce Patent Holdings | Packet retransmission method in a wireless transmitter |
WO2011157854A1 (en) * | 2010-06-18 | 2011-12-22 | Thomson Licensing | A packet retransmission method in a wireless transmitter |
CN102948244A (en) * | 2010-06-18 | 2013-02-27 | 汤姆森特许公司 | A packet retransmission method in a wireless transmitter |
EP2418903A1 (en) * | 2010-08-13 | 2012-02-15 | Thomson Telecom Belgium | A packet retransmission method in a wirelss transmitter |
US20140003231A1 (en) * | 2011-03-17 | 2014-01-02 | Bae Systems Plc | Call delay control |
US8509858B2 (en) | 2011-10-12 | 2013-08-13 | Bose Corporation | Source dependent wireless earpiece equalizing |
US20130145047A1 (en) * | 2011-12-02 | 2013-06-06 | Cisco Technology, Inc. | Flow-Based Compression Management |
US8886837B2 (en) * | 2011-12-02 | 2014-11-11 | Cisco Technology, Inc. | Flow-based compression management |
EP2903223A4 (en) * | 2012-09-27 | 2016-05-04 | Nec Corp | Method for transmitting image information and packet communication system |
CN104685841A (en) * | 2012-09-27 | 2015-06-03 | 日本电气株式会社 | Method for transmitting audio information and packet communication system |
EP2903224A4 (en) * | 2012-09-27 | 2016-04-27 | Nec Corp | Method for transmitting audio information and packet communication system |
US9356869B2 (en) | 2013-04-10 | 2016-05-31 | Viber Media Inc. | VoIP bandwidth management |
US20150063103A1 (en) * | 2013-09-04 | 2015-03-05 | Nvidia Corporation | Bandwidth-dependent compressor for robust header compression and method of use thereof |
US10412016B2 (en) * | 2014-01-30 | 2019-09-10 | Salesforce.Com, Inc. | Streaming information based on available bandwidth |
US20150215223A1 (en) * | 2014-01-30 | 2015-07-30 | Salesforce.Com, Inc. | Streaming information based on available bandwidth |
US9917778B2 (en) | 2015-09-01 | 2018-03-13 | Microsoft Technology Licensing, Llc | Packet transmissions |
US10447595B2 (en) | 2015-09-01 | 2019-10-15 | Microsoft Technology Licensing, Llc | Packet transmissions |
US10867615B2 (en) * | 2019-01-25 | 2020-12-15 | Comcast Cable Communications, Llc | Voice recognition with timing information for noise cancellation |
US11741981B2 (en) | 2019-01-25 | 2023-08-29 | Comcast Cable Communications, Llc | Voice recognition with timing information for noise cancellation |
US20210065687A1 (en) * | 2019-09-03 | 2021-03-04 | Beijing Dajia Internet Information Technology Co., Ltd. | Method for processing voice signals and terminal thereof |
US11688389B2 (en) * | 2019-09-03 | 2023-06-27 | Beijing Dajia Internet Information Technology Co., Ltd. | Method for processing voice signals and terminal thereof |
US10897492B1 (en) * | 2019-10-10 | 2021-01-19 | Lenovo (Singapore) Pte. Ltd. | Delayed VoIP packet delivery |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6996626B1 (en) | Continuous bandwidth assessment and feedback for voice-over-internet-protocol (VoIP) comparing packet's voice duration and arrival rate | |
US7668968B1 (en) | Closed-loop voice-over-internet-protocol (VOIP) with sender-controlled bandwidth adjustments prior to onset of packet losses | |
US6366959B1 (en) | Method and apparatus for real time communication system buffer size and error correction coding selection | |
US6175871B1 (en) | Method and apparatus for real time communication over packet networks | |
US6434606B1 (en) | System for real time communication buffer management | |
US8842568B2 (en) | Method and system of renegotiating end-to-end voice over internet protocol CODECs | |
FI108692B (en) | Method and apparatus for scheduling processing of data packets | |
US8830865B2 (en) | Adaptive packet size modification for packet networks | |
EP2055055B1 (en) | Adjustment of a jitter memory | |
US7453897B2 (en) | Network media playout | |
US20020105909A1 (en) | Quality-of-service monitor | |
US20020075857A1 (en) | Jitter buffer and lost-frame-recovery interworking | |
US7283548B2 (en) | Dynamic latency management for IP telephony | |
WO2000044138A1 (en) | Method and apparatus for reconstructing media | |
AU2002310383A1 (en) | Dynamic latency management for IP telephony | |
Chin et al. | Enhancing the quality of Internet voice communication for Internet telephony systems | |
Arafat et al. | SIP-based QoS in IP telephony | |
He | Analysing the characteristics of VoIP traffic | |
Chin et al. | An Internet telephone software system for real-time voice communication | |
JP2005252429A (en) | Ip packetizing unit | |
Foo et al. | An approach to real-time voice communications over the Internet | |
Bolot et al. | Sound and Video on the Web | |
Hui et al. | An Approach to Real-Time Voice Communications over the Internet | |
Ast | The effect of dynamic voice codec selection for active calls on voice quality | |
Trad | Déploiement à grande échelle de la voix sur IP dans des environnements hétérogènes |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: CRYSTALVOICE COMMUNICATIONS, INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:SMITH, SHAWN W.;REEL/FRAME:013466/0536Effective date: 20021209 |
|
AS | Assignment |
Owner name: LA QUERENCIA PARTNERS,CALIFORNIAFree format text: SECURITY INTEREST;ASSIGNOR:CRYSTALVOICE COMMUNICATIONS, INC.;REEL/FRAME:014941/0620Effective date: 20030325Owner name: LA QUERENCIA PARTNERS, CALIFORNIAFree format text: SECURITY INTEREST;ASSIGNOR:CRYSTALVOICE COMMUNICATIONS, INC.;REEL/FRAME:014941/0620Effective date: 20030325 |
|
AS | Assignment |
Owner name: CRYSTAL VOICE COMMUNICATIONS, INC.,CALIFORNIAFree format text: RELEASE OF SECURTIY INTEREST;ASSIGNOR:LA QUERENCIA PARTNERS;REEL/FRAME:018770/0026Effective date: 20070112Owner name: CRYSTAL VOICE COMMUNICATIONS, INC., CALIFORNIAFree format text: RELEASE OF SECURTIY INTEREST;ASSIGNOR:LA QUERENCIA PARTNERS;REEL/FRAME:018770/0026Effective date: 20070112 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:CRYSTALVOICE COMMUNICATIONS, INC.;REEL/FRAME:026340/0985Effective date: 20110401 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER NO LONGER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: STOL); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
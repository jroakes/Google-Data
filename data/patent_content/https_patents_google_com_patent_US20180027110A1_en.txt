US20180027110A1 - Contextual information for a notification - Google Patents
Contextual information for a notification Download PDFInfo
- Publication number
- US20180027110A1 US20180027110A1 US15/388,860 US201615388860A US2018027110A1 US 20180027110 A1 US20180027110 A1 US 20180027110A1 US 201615388860 A US201615388860 A US 201615388860A US 2018027110 A1 US2018027110 A1 US 2018027110A1
- Authority
- US
- United States
- Prior art keywords
- notification
- user device
- user
- response
- contextual information
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72448—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions
- H04M1/72454—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions according to context-related or environment-related conditions
-
- H04M1/72569—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/109—Time management, e.g. calendars, reminders, meetings or time accounting
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/12—Messaging; Mailboxes; Announcements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/18—Information format or content conversion, e.g. adaptation by the network of the transmitted or received information for the purpose of wireless delivery to users or terminals
- H04W4/185—Information format or content conversion, e.g. adaptation by the network of the transmitted or received information for the purpose of wireless delivery to users or terminals by embedding added-value information into content, e.g. geo-tagging
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72448—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions
- H04M1/72451—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions according to schedules, e.g. using calendar applications
Definitions
- This specification relates to providing contextual information to a user.
- a device may provide a user with contextual information. For example, a device may display a web page about a particular subject, receive a search query from the user including search terms for the particular subject, retrieve search results responsive to the search query, and provide the search results to the user.
- Typical interaction models require users to provide some form of a user query to a user device. For example, a user may have set a notification to be reminded when a movie is going to be released in the theaters. The day before the release date, a notification of “Movie X releases tomorrow” may appear on user's smart phone. The user may then decide to check movie reviews to determine whether to go see the movie. Accordingly, the user may state “phone, show me reviews for Movie X.” A search process then executes a search of resources using the query of “reviews for Movie X” to identify resources that may satisfy the user's informational needs.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification, identifying multiple search items from content in the notification, determining a relevance score for each of the multiple search items, selecting one or more of the multiple search items based on the relevance scores, and providing, to the user device for each of the selected one or more multiple search items, a respective user interface element for display with the notification, where each user interface element includes contextual information regarding the respective search item.
- inventions of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods.
- a system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions.
- One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification includes receiving a query-independent request that does not include one or more terms entered by a user and includes the content in the notification.
- receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification includes receiving, from the user device in response to the user device generating the notification in response to the occurrence of the trigger event, a query-independent request for contextual information relevant to the notification.
- receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification includes receiving, from the user device in response to the user device obtaining the notification in response to determining that a background application is providing the notification for display.
- the notification includes a user interface element that is overlaid on a graphical user interface.
- the trigger event includes one or more of satisfaction of reminder criteria for a calendar appointment, receipt of a text message from another user while not viewing a text message conversation with the other user, or an application on the user device receiving a push notification from a server.
- identifying multiple search items from the content in the notification includes extracting, from the query-independent request, text in the notification and identifying the multiple search items from the text.
- identifying multiple search items from the content in the notification includes extracting, from the query-independent request, an indication of an application corresponding to the notification and identifying the multiple search items based at least on the application corresponding to the notification.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of obtaining, in response to an occurrence of a trigger event and by a user device, a notification for display on the user device, the notification regarding a search item, in response to obtaining the notification for display on the user device, providing, by the user device to a contextual information server, a query-independent request for contextual information relevant to the notification, receiving a user interface element that includes contextual information regarding the search item, and displaying the notification and the user interface element simultaneously on the user device.
- inventions of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods.
- a system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions.
- One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- providing by the user device to a contextual information server, a query-independent request for contextual information relevant to the notification includes providing a query-independent request that does not include one or more terms entered by a user and includes the content in the notification.
- the notification includes a user interface element that is overlaid on a graphical user interface.
- the trigger event includes one or more of satisfaction of reminder criteria for a calendar appointment, receipt of a text message from another user while not viewing a text message conversation with the other user, or an application on the user device receiving a push notification from a server.
- Contextual information that is likely to satisfy a user's informational need when receiving a notification may be provided by a device to a user without the user providing a query to the device or even requesting contextual information when viewing the notification. This results in a convenient way for the user to obtain contextual information for notifications. The user no longer needs to type in query terms or speak query terms to obtain contextual information. In fact, when receiving the notification, the user may receive contextual information without providing any indication that the user desires contextual information for the notification. Accordingly, users receive contextual information in a manner that is not only convenient for the user, but also in a relatively discrete manner so that bystanders are not disturbed by the user speaking into the device.
- the user may, in some implementations, receive contextual information when the user would otherwise be unable to type or provide the indication effectively, e.g., when the user only has one hand free.
- the system does not need to perform text-to-speech processing or process typing input. This results in fewer input errors and erroneously input queries. Accordingly, when considered in the aggregate, thousands of erroneous and inaccurate queries are avoided, which in turn, provides a more efficient use of search system resources. In other words, multiple erroneous query processing cycles are avoided, which reduces processing resources required and reduces overall system bandwidth requirements (or, alternatively, enables a larger number of users to be serviced without a commensurate increase in processing resources). This improvement in the technological field of search processing is thus another distinct advantage realized by the systems and methods described below.
- FIG. 1 is a block diagram of an example environment in which contextual information is provided for a notification.
- FIG. 2 is a more detailed block diagram of the example environment in which contextual information is provided for a notification.
- FIGS. 3 and 4 are flow diagrams of example processes for providing contextual information for a notification.
- FIG. 5 is a schematic diagram of a computer system.
- a user may desire to receive additional information regarding subject matter of a notification shown on a device. For example, a user may be browsing a website when a notification of “Movie X releases tomorrow” may be generated for a reminder that the user set in a calendar application when viewing the notification. The user may desire to obtain additional information about “Movie X.” Accordingly, the user may open a web page for a search engine, type in “Movie X,” and then select a search result to view. However, this process may be time consuming and require multiple interactions by the user.
- the system may provide contextual information relevant to a notification without receiving a query input or an indication from the user requesting contextual information for the notification.
- the system may determine that a user device has obtained a notification and, in response, identify search items from the content of the notification and then provide contextual information about the identified search items to the user. For example, the system may identify that the text “Movie X” in the notification matches with a movie named “Movie X,” and, in response, display a short description, a rating, and local movie times for “Movie X” along with the notification.
- FIG. 1 is a block diagram of an example environment 100 in which contextual information is provided for a notification.
- the environment 100 includes a user device 110 and a contextual information server 150 .
- a user device 110 is used by a user to obtain contextual information for a notification.
- the user device 110 is an electronic device that is capable of displaying notifications.
- Example user devices 110 include personal computers (e.g., desktops or laptops), mobile communication devices (e.g., smart phones or tablets), and other devices that can send and receive data over the network (e.g., televisions, and glasses or watches with network communication functionality).
- a user device typically includes a user application, e.g., a web browser, to facilitate the sending and receiving of data over the network.
- the web browser can enable a user to display and interact with text, images, videos, music and other information typically located on a web page at a website on the World Wide Web or a local area network.
- the user device 110 may use any appropriate application to send and receive data over the network and present data to a user.
- the user device 110 may also include applications that can generate notifications.
- the user device 110 may include one or more of a calendar application that can generate notifications for reminders, a messaging application that can generate notifications when messages are received by the user device 110 , a restaurant reservation application that can generate notifications when reservations are upcoming, a news application that can generate notifications when a push notification for a news update is received by the user device 110 , or some other application.
- the applications may be running in a background of the user device 110 when generating notifications.
- a user may be using the user device 110 to play a game when a messaging application receives a message and, in response, the user device 110 may display a notification that includes an initial portion of the received message over a graphical user interface for the game.
- Notifications can also be received in the absence of an application, such as a push notification to a user device that can be received independent of the active status of any particular application.
- a notification is information that is provided to a user in response to an occurrence of a trigger event.
- a notification may be a graphical user element that is displayed on a screen of the user device 110 and includes text or images that informs a user of the occurrence of a trigger event.
- a notification may be audio output that is provided through a microphone of a user device 110 and includes synthesized speech that informs a user of an occurrence of a trigger event.
- a trigger event may be an event that triggers a notification to be provided to a user.
- a trigger event includes one or more of satisfaction of reminder criteria for a calendar appointment, receipt of a text message from another user while a user is not viewing a text message conversation with the other user, an application on the user device receiving a push notification from a server, or some other event.
- the user device 110 may obtain a notification and, in response, provide a request to the contextual information server 150 for contextual information for the notification.
- the user device 110 may obtain a notification of “Calendar Appt.—Book flight to San Francisco” generated by a calendar application running in a background of the user device 110 and, in response, provide a request that includes the text “Book flight to San Francisco” before the notification is displayed or provide a request that includes a screenshot of the notification as displayed on the user device 110 .
- the notification is provided while the user is viewing a new application.
- the request may be considered a query-independent request as the user device 110 provides the request to the contextual information server 150 without having the user enter terms for a query, whether verbally, physically, or through some other interaction.
- the user device 110 may provide the request to the contextual information server 150 without input from the user after the notification is obtained.
- the user device 110 In response to providing the request to the contextual information server 150 , the user device 110 then receives one or more user interface elements from the contextual information server 150 .
- the user device 110 may receive a user interface element for “San Francisco” from the contextual information server 150 .
- the user interface elements are described as cards. However, other user interface elements may be used, for example, chat bubbles, selectable linked notes or footnotes, synthesized voice responses, or other forms.
- a contextual card may be data that includes contextual information about a search item.
- a contextual card for “San Francisco” may include contextual information that describes that “San Francisco” is “A large city in California.”
- the contextual card may indicate next actions.
- the contextual card for “San Francisco” may include selectable options for performing searches for web pages, news, images, or videos relevant to a query including the terms “San Francisco.”
- the user device 110 provides the received contextual cards to the user.
- the user device 110 may provide the contextual cards by generating a graphical panel 160 that is shown adjacent to a notification and overlaid on top of anything that was being displayed by the user device 110 before the notification was displayed.
- the graphical panel 160 identifies that the graphical panel is for the item “San Francisco” and San Francisco is “A large city in California” and includes selectable options 162 for performing searches for web pages, news, images, or videos relevant to a query including the terms “San Francisco.”
- the selectable options 162 are general options obtained for the search item “San Francisco.” However, options that are more specific to the content of the notification can also be provided.
- the context of “San Francisco” in the notification is a travel context, as indicated by the term “book flight.”
- the contextual information server 150 can take into account the context and my instead include travel related options, such as “Rental Cars,” “Hotels,” “Restaurants,” etc.
- the user device 110 may display the graphical panel 160 while the notification is being displayed. For example, notifications may be shown on the user device 110 for a limited time, e.g., one second, two seconds, or some other length of time, and the notification and the graphical panel 160 may both disappear after the limited time. In another example, the notifications and graphical panel 160 may be shown on the user device 110 until the user provides input to the user device 110 that causes the notification or the graphical panel 160 to no longer be displayed. In some implementations, the user device 110 may operate in a mode where a user is not actively using the user device 110 , e.g., a locked mode.
- the notifications and graphical panels may be shown once the user device 110 detects that the user is actively using the device, e.g., when the user interacts with the user device 110 while the user device 110 is in a locked mode.
- FIG. 2 is a more detailed block diagram of the example environment 100 in which contextual information is provided for a notification.
- the environment 100 includes a client contextual module 210 on a user device and the contextual information server 150 .
- the contextual information server 150 includes an item identification engine 220 , an item knowledge graph 222 , a relevance scoring engine 230 , an item selection engine 240 , a contextual card provider 250 , and a card information database 260 .
- the client contextual module 210 may be provided on the user device 110 shown in FIG. 1 . In other implementations, the client contextual module 210 may be provided on another user device different than the user device 110 shown in FIG. 1 .
- the client contextual module 210 determines that the user device has obtained a notification to be displayed on the user device.
- the notification may be obtained by the user device in response to an occurrence of a trigger event.
- the client contextual module 210 may determine that a news application has generated a notification of “Celebrity X wins Prize Y” in response to the news application receiving a push notification from a news server.
- the client contextual module 210 may determine notifications are obtained by receiving indications that notifications have been generated by one or more applications running on the user device or generated by the operating system of the user device.
- the operating system of the user device may provide the client contextual module 210 all notifications before the operating system displays the notifications regardless of whether the notifications were generated by the operating system or generated by applications running on the user device.
- the client contextual module 210 In response to determining that the user device has obtained a notification in response to an occurrence of a trigger event, the client contextual module 210 generates a request to the contextual information server 150 for contextual information for the notification. For example, the client contextual module 210 may generate a request to the contextual information server 150 for contextual information for the notification of “Celebrity X wins Prize Y.”
- the client contextual module 210 may include information about the notification in the request. For example, the client contextual module 210 may obtain a tree based document object model that represents the notification and include the model in the request. The document object model may define text that appears in the notification and the appearance of the text, e.g., size, color, position, font, or other formatting, of the text. In another example, the client contextual module 210 may generate a screen shot of the notification as displayed on the user device and include the screenshot in the notification.
- the client contextual module 210 may include the information about the notification in the request by additionally or alternatively determining additional information about the notification and including the additional information in the request.
- the additional information about the request may include one or more of an indication of the application for which the notification was generated, a location of the user device 110 , or an identity of the user. For example, the client contextual module 210 may determine that the user device 110 is located in Atlanta and include a location of “Atlanta” in the request.
- the client contextual module 210 then provides the request to the item identification engine 220 .
- the client contextual module 210 provides the request to the item identification engine 220 without the user providing any indication that contextual information is desired after the notification is obtained by the user device.
- the client contextual module 210 receives a contextual card and renders the contextual card. For example, the client contextual module 210 receives a contextual card for the celebrity “Celebrity X” that includes a full name, a brief description, and a selectable option for viewing images of the celebrity, and then renders the contextual card adjacent to the notification on top of was previously being displayed.
- the client contextual module 210 may display the contextual card simultaneously with the notification. For example, the client contextual module 210 may cause the user device to delay displaying the notification until the contextual card is received, and then display the notification simultaneously with the contextual card. In another example, the client contextual module 210 may cause the user device to delay displaying the notification until an indication that no contextual card is available for the notification is received from the contextual information server 150 and then display the notification without any contextual card.
- the item identification engine 220 receives the request for contextual information for a notification and identifies one or more search items from content in the notification. For example, the item identification engine 220 may obtain a request that includes a notification of “Celebrity X wins Prize Y” that is generated on a user device in response to a news application running in the background of the user device receiving a push notification from a news server.
- a “search item” is a concept or thing that can be used by a search system to conduct a search of information.
- a search item may be referred to by a text fragment, e.g., a term or phrase, and search items are distinguishable from one another, e.g., based on context.
- a search item may be a keyword, and instance of a particular entity, a proper name, an entity or relation modeled by a node or an edge in a knowledge graph, and the like.
- the item identification engine 220 may extract text from the request. For example, the item identification engine 220 may extract the text “Celebrity X wins Prize Y” from the request.
- the item identification engine 220 may extract the text by parsing a document object model representing the notification, performing optical character recognition on a screenshot of the notification as displayed on the user device, or analyzing content of the notification indicated in the request in some other manner.
- the item identification engine 220 identifies the one or more search items from the extracted text using the item knowledge graph 222 .
- the item identification engine 220 may identify that the text “Celebrity X” in the notification matches the name of a celebrity “Celebrity X” in the item knowledge graph 222 and the text “Prize Y” in the notification matches the name of a prize “Prize Y” in the item knowledge graph 222 .
- the item knowledge graph 222 may be a knowledge graph that includes nodes for search items, edges that indicate relationships between the nodes, and contextual information describing the search items represented by the nodes.
- the item identification engine 220 may identify the one or more search items from the extracted text based on additional information in the request. For example, the item identification engine 220 may determine that the request indicates that user device 110 is in Atlanta, e.g., based on geo-location data associated with the request or the user device, and focus on search items located in Atlanta. In another example, the item identification engine 220 may determine that the request indicates that the request is from “User A” and focus on search items for which “User A” has received information for during the last hour, day, week, month, or some other period of time.
- the relevance scoring engine 230 may receive the search items identified by the item identification engine 220 and determine a relevance score for each of the search items.
- the relevance score may reflect a confidence that the search item is relevant to the user, i.e., a degree of confidence that the user would like to see contextual information about the search item.
- the relevance scoring engine 230 may receive an indication that the search items celebrity “Celebrity X” and prize “Prize Y” were identified in the notification, determine a relevance score of 90% for the celebrity “Celebrity X” indicating a high degree of confidence that the user would like to see contextual information about celebrity “Celebrity X,” and determine a relevance score of 80% for the prize “Prize Y” indicating a slightly less high degree of confidence that the user would like to see contextual information about the prize “Prize Y.”
- the relevance scoring engine 230 may determine a relevance score for a search item based on an engagement of users with the search items. Examples of engagement include providing search queries for resources relevant to the search item, requesting a resource indexed as relevant to the search item, or some other significant signal of interest in the search item.
- the relevance scoring engine 230 may determine relevance scores indicating higher degrees of confidence that the user would like to see contextual information about a search item with greater engagement and may determine relevance scores indicating lower degrees of confidence that the user would like to see contextual information about a search item with lesser engagement.
- the relevance scoring engine 230 may determine the engagement for a search item from, for example, analyzing search query history logs or resource request logs.
- the relevance scoring engine 230 may determine a relevance score for a search item based on natural language processing on the content from which the search item is identified. For example, the relevance scoring engine 230 may determine relevance scores indicating higher degrees of confidence that the user would like to see contextual information about search items identified from text that is a subject of a sentence and may determine relevance scores indicating lower degrees of confidence that the user would like to see contextual information about search items identified from text that is an object of a sentence.
- the relevance scoring engine 230 may determine a relevance score for a search item based on an appearance of the text from which the search item was identified. For example, the relevance scoring engine 230 may determine a relevance score that reflects a higher degree of confidence for search items identified from text that appears earlier in the notification. In another example, the relevance scoring engine 230 may determine relevance scores that reflect a higher degree of confidence for search items identified from text that is bolded as the text may be bolded because the text is important. In another example, the relevance scoring engine 230 may determine relevance scores that reflect a higher degree of confidence for search items identified from text that is a larger size, a different color, or aligned differently from the majority of text in the notification because different appearance of the text may indicate that the text is important.
- the item selection engine 240 may obtain the relevance scores and select one or more search items for which to provide contextual information to the user. For example, the item selection engine 240 may receive an identification of the celebrity “Celebrity X” labeled with a relevance score of 90% and an identification of the prize “Prize Y” labeled with the relevance score of 70% and, in response, select the celebrity “Celebrity X” and not select the prize “Prize Y” to provide contextual information.
- the item selection engine 240 may select the search items based on determining whether the search items have respective relevance scores that satisfy a relevance threshold. For example, the item selection engine 240 may select the celebrity “Celebrity X” as the relevance score of 90% is greater than a relevance threshold of 60%, 65%, 85%, or some other percentage less than 90%. In another example, the item selection engine 240 may not select the prize “Prize Y” as the relevance score of 70% is lower than a relevance threshold of 85%, 95%, 95%, or some other percentage above 70%.
- the item selection engine 240 may additionally or alternatively select the search items based on a maximum. For example, the item selection engine 240 may select a maximum of one, two, four, or some other number of cards and select the maximum number of search items with relevance scores that reflect the greatest degree of confidence in relevance. In some implementations, the item selection engine 240 may additionally or alternatively select the search items based on a minimum. For example, the item selection engine 240 may select a minimum of one, two, four, or some other number of cards with relevance scores that reflect the greatest degree of confidence in relevance.
- the contextual card provider 250 may obtain contextual cards including contextual information for the selected search items and provide the contextual cards to the client contextual module 210 .
- the contextual card provider 250 may obtain an identification of the celebrity “Celebrity X” from the item selection engine 240 and provide a contextual card for celebrity “Celebrity X” to the client contextual module 210 .
- the contextual card includes a full name and brief description for celebrity “Celebrity X” and a selectable option for viewing images of celebrity “Celebrity X” appeared.
- the contextual card provider 250 may obtain contextual cards by generating contextual cards for search items. For example, the contextual card provider 250 may obtain, from the item knowledge graph 222 , a full name, a brief description, and an indication that images of celebrity “Celebrity X” are available and then generate a contextual card that includes a full name and brief description for celebrity “Celebrity X” and a selectable option for viewing movies in which celebrity “Celebrity X” appeared. In another example, the contextual card provider 250 may perform searches on celebrity “Celebrity X” to determine a full name, a brief description, and whether images of celebrity “Celebrity X” are available.
- the contextual card provider 250 may determine whether a contextual card for the search item already exists in a card information database 260 . For example, the contextual card provider 250 may query the card information database 260 for a contextual card for the celebrity “Celebrity X.” Where the card information database 260 includes an existing contextual card for the search item, the card information database 260 may provide the contextual card to the contextual card provider 250 so that the contextual card provider 250 can provide the existing contextual card to the client contextual module 210 instead of generating a new contextual card.
- FIG. 3 is a flow diagram of a process 300 for providing contextual information for a notification.
- the process 300 can be used by the contextual information server 150 from the environment 100 .
- the process 300 includes receiving a query-independent request for contextual information relevant to a notification in response to the user device obtaining the notification in response to an occurrence of a trigger event ( 310 ).
- the item identification engine 220 may receive a request that includes a document object model of a notification of “Buy a ticket for Movie X at Theater Y” that is generated from a reminder that a user set in a calendar application.
- the process 300 includes identifying multiple search items from content in the notification ( 320 ).
- the item identification engine 220 may extract text “Movie X” and “Theater Y” from text in the notification and, in response, identify a movie “Movie X” and a place of business “Theater Y” from the respective text.
- the process 300 includes determining a relevance score for each of the identified multiple search items ( 330 ).
- the relevance scoring engine 230 may receive an identification of the movie “Movie X” and determine that searches for movie “Movie X” are very popular and, in response, determine a relevance score indicating a high degree of confidence that the user would like to see contextual information for the movie “Movie X.”
- the relevance scoring engine 230 may receive an identification of the place of business “Theater Y” and determine that searches for the place of business “Theater Y” are not popular and, in response, determine a relevance score indicating a low degree of confidence that the user would like to see contextual information for the place of business “Theater Y.”
- the relevance scoring engine 230 determine a relevance score indicating a low degree of confidence that the user would like to see contextual information for the place of business “Theater Y” in response to determining that a user typically goes to place of business “Theater Y” so
- the process 300 includes selecting search items based on the relevance scores ( 340 ).
- the item selection engine 240 may select the movie “Movie X” for providing contextual information based on a high relevance score of 95% for the movie satisfying a relevance threshold of 80% and not select the place of business “Theater Y” based on a low relevance score of 33% for the place of business not satisfying the relevance threshold of 80%.
- the process 300 includes, for each of the selected search items, providing a respective contextual card ( 350 ).
- the contextual card provider 250 may generate a contextual card for the movie “Movie X” and provide the contextual card to the client contextual module 210 , and not generate or provide a contextual card for the place of business “Theater Y.”
- a determined intent for one search item may be higher than any other search item and the other search items can be ignored.
- the process 300 may provide contextual cards based on multiple selected search items. For example, for a request that includes a document object model of a notification that defines the text “Book a flight to San Francisco,” the item identification engine 220 may extract the text “Book a flight to San Francisco” from the request and identify a city “San Francisco” from the text “San Francisco,” and extract the text “flight” from the request and identify an object “flight” from the text “flight.”
- the relevance scoring engine 230 may use natural language processing to determine that the notification is regarding a trip to a destination where the destination is the city “San Francisco,” and in response, determine a relevance score indicating a high degree of confidence that the user would like to see contextual information for the city “San Francisco.”
- the relevance scoring engine 230 may determine that the notification is regarding a trip to a destination and the object “flight” refers to the type of transportation, and
- the process 300 can include additional steps, fewer steps, or some of the steps can be divided into multiple steps.
- the contextual information server 150 may not perform steps 330 and 340 and instead provide contextual cards for each identified search item.
- FIG. 4 is a flow diagram of a process 400 for providing contextual information for a notification.
- the process 400 can be used by the client contextual module 210 from the environment 100 .
- the process 300 includes obtaining a notification regarding a search item for display on a user device ( 410 ).
- the client contextual module 210 may determine that a calendar application on the user device has generated a notification of “Buy a ticket for Movie X at Theater Y.”
- the process 400 includes providing a query-independent request for contextual information relevant to the notification ( 420 ).
- the client contextual module 210 may, in response to the user device obtaining the notification, provide the contextual information server 150 a request that includes a document object model of a notification that defines the text “Buy a ticket for Movie X at Theater Y” and how the text should appear in the notification.
- the process 400 includes receiving a user interface element that includes contextual information regarding the search item ( 430 ).
- the client contextual module 210 may, in response to providing the request to the contextual information server 150 , receive a card for the movie “Movie X” from the contextual information server 150 .
- the process 400 includes displaying the notification and the user interface element simultaneously ( 440 ).
- the client contextual module 210 may provide the card for the movie “Movie X” to an operating system of a user device to cause the user device to display the notification “Buy a ticket for Movie X at Theater Y” and simultaneously display the card immediately below the notification.
- the process 400 can include additional steps, fewer steps, or some of the steps can be divided into multiple steps.
- the client contextual module 210 may additionally perform functions of the contextual information server 150 .
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by a content server.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a user computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include users and servers.
- a user and server are generally remote from each other and typically interact through a communication network. The relationship of user and server arises by virtue of computer programs running on the respective computers and having a user-server relationship to each other.
- a server transmits data (e.g., an HTML, page) to a user device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the user device).
- Data generated at the user device e.g., a result of the user interaction
- FIG. 5 shows a schematic diagram of a generic computer system 500 .
- the system 500 can be used for the operations described in association with any of the computer-implement methods described previously, according to one implementation.
- the system 500 includes a processor 510 , a memory 520 , a storage device 530 , and an input/output device 540 .
- Each of the components 510 , 520 , 530 , and 540 are interconnected using a system bus 550 .
- the processor 510 is capable of processing instructions for execution within the system 500 .
- the processor 510 is a single-threaded processor.
- the processor 510 is a multi-threaded processor.
- the processor 510 is capable of processing instructions stored in the memory 520 or on the storage device 530 to display graphical information for a user interface on the input/output device 540 .
- the memory 520 stores information within the system 500 .
- the memory 520 is a computer-readable medium.
- the memory 520 is a volatile memory unit.
- the memory 520 is a non-volatile memory unit.
- the storage device 530 is capable of providing mass storage for the system 500 .
- the storage device 530 is a computer-readable medium.
- the storage device 530 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device.
- the input/output device 540 provides input/output operations for the system 500 .
- the input/output device 540 includes a keyboard and/or pointing device.
- the input/output device 540 includes a display unit for displaying graphical user interfaces.
Abstract
Description
- This application claims priority under 35 USC §119(e) to U.S. Patent Application Ser. No. 62/365,046, filed on Jul. 21, 2016 the entire contents of which are hereby incorporated by reference.
- This specification relates to providing contextual information to a user.
- A device may provide a user with contextual information. For example, a device may display a web page about a particular subject, receive a search query from the user including search terms for the particular subject, retrieve search results responsive to the search query, and provide the search results to the user.
- Typical interaction models require users to provide some form of a user query to a user device. For example, a user may have set a notification to be reminded when a movie is going to be released in the theaters. The day before the release date, a notification of “Movie X releases tomorrow” may appear on user's smart phone. The user may then decide to check movie reviews to determine whether to go see the movie. Accordingly, the user may state “phone, show me reviews for Movie X.” A search process then executes a search of resources using the query of “reviews for Movie X” to identify resources that may satisfy the user's informational needs.
- In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification, identifying multiple search items from content in the notification, determining a relevance score for each of the multiple search items, selecting one or more of the multiple search items based on the relevance scores, and providing, to the user device for each of the selected one or more multiple search items, a respective user interface element for display with the notification, where each user interface element includes contextual information regarding the respective search item.
- Other embodiments of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- The foregoing and other embodiments can each optionally include one or more of the following features, alone or in combination. In certain aspects, receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification includes receiving a query-independent request that does not include one or more terms entered by a user and includes the content in the notification. In some aspects, receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification includes receiving, from the user device in response to the user device generating the notification in response to the occurrence of the trigger event, a query-independent request for contextual information relevant to the notification. In some implementations, receiving, from a user device in response to the user device obtaining a notification in response to an occurrence of a trigger event, a query-independent request for contextual information relevant to the notification includes receiving, from the user device in response to the user device obtaining the notification in response to determining that a background application is providing the notification for display.
- In certain aspects, the notification includes a user interface element that is overlaid on a graphical user interface. In some aspects, the trigger event includes one or more of satisfaction of reminder criteria for a calendar appointment, receipt of a text message from another user while not viewing a text message conversation with the other user, or an application on the user device receiving a push notification from a server. In some implementations, identifying multiple search items from the content in the notification includes extracting, from the query-independent request, text in the notification and identifying the multiple search items from the text. In certain aspects, identifying multiple search items from the content in the notification includes extracting, from the query-independent request, an indication of an application corresponding to the notification and identifying the multiple search items based at least on the application corresponding to the notification.
- In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of obtaining, in response to an occurrence of a trigger event and by a user device, a notification for display on the user device, the notification regarding a search item, in response to obtaining the notification for display on the user device, providing, by the user device to a contextual information server, a query-independent request for contextual information relevant to the notification, receiving a user interface element that includes contextual information regarding the search item, and displaying the notification and the user interface element simultaneously on the user device.
- Other embodiments of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- The foregoing and other embodiments can each optionally include one or more of the following features, alone or in combination. In certain aspects, providing by the user device to a contextual information server, a query-independent request for contextual information relevant to the notification includes providing a query-independent request that does not include one or more terms entered by a user and includes the content in the notification. In some aspects, the notification includes a user interface element that is overlaid on a graphical user interface. In some implementations, the trigger event includes one or more of satisfaction of reminder criteria for a calendar appointment, receipt of a text message from another user while not viewing a text message conversation with the other user, or an application on the user device receiving a push notification from a server.
- Particular embodiments of the subject matter described in this specification can be implemented so as to realize one or more of the following advantages. Contextual information that is likely to satisfy a user's informational need when receiving a notification may be provided by a device to a user without the user providing a query to the device or even requesting contextual information when viewing the notification. This results in a convenient way for the user to obtain contextual information for notifications. The user no longer needs to type in query terms or speak query terms to obtain contextual information. In fact, when receiving the notification, the user may receive contextual information without providing any indication that the user desires contextual information for the notification. Accordingly, users receive contextual information in a manner that is not only convenient for the user, but also in a relatively discrete manner so that bystanders are not disturbed by the user speaking into the device. Also, because the user need not type in a query or provide any indication that contextual information is desired, the user may, in some implementations, receive contextual information when the user would otherwise be unable to type or provide the indication effectively, e.g., when the user only has one hand free.
- Also, because the contextual information can be provided without input from the user, the system does not need to perform text-to-speech processing or process typing input. This results in fewer input errors and erroneously input queries. Accordingly, when considered in the aggregate, thousands of erroneous and inaccurate queries are avoided, which in turn, provides a more efficient use of search system resources. In other words, multiple erroneous query processing cycles are avoided, which reduces processing resources required and reduces overall system bandwidth requirements (or, alternatively, enables a larger number of users to be serviced without a commensurate increase in processing resources). This improvement in the technological field of search processing is thus another distinct advantage realized by the systems and methods described below.
- The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
FIG. 1 is a block diagram of an example environment in which contextual information is provided for a notification. -
FIG. 2 is a more detailed block diagram of the example environment in which contextual information is provided for a notification. -
FIGS. 3 and 4 are flow diagrams of example processes for providing contextual information for a notification. -
FIG. 5 is a schematic diagram of a computer system. - Like reference numbers and designations in the various drawings indicate like elements.
- A user may desire to receive additional information regarding subject matter of a notification shown on a device. For example, a user may be browsing a website when a notification of “Movie X releases tomorrow” may be generated for a reminder that the user set in a calendar application when viewing the notification. The user may desire to obtain additional information about “Movie X.” Accordingly, the user may open a web page for a search engine, type in “Movie X,” and then select a search result to view. However, this process may be time consuming and require multiple interactions by the user.
- Described below are systems and methods for providing contextual information for a notification. Instead of providing contextual information based on a query entered by a user, the system may provide contextual information relevant to a notification without receiving a query input or an indication from the user requesting contextual information for the notification. To provide the contextual information, the system may determine that a user device has obtained a notification and, in response, identify search items from the content of the notification and then provide contextual information about the identified search items to the user. For example, the system may identify that the text “Movie X” in the notification matches with a movie named “Movie X,” and, in response, display a short description, a rating, and local movie times for “Movie X” along with the notification.
-
FIG. 1 is a block diagram of anexample environment 100 in which contextual information is provided for a notification. Theenvironment 100 includes auser device 110 and acontextual information server 150. - A
user device 110 is used by a user to obtain contextual information for a notification. Theuser device 110 is an electronic device that is capable of displaying notifications.Example user devices 110 include personal computers (e.g., desktops or laptops), mobile communication devices (e.g., smart phones or tablets), and other devices that can send and receive data over the network (e.g., televisions, and glasses or watches with network communication functionality). A user device typically includes a user application, e.g., a web browser, to facilitate the sending and receiving of data over the network. The web browser can enable a user to display and interact with text, images, videos, music and other information typically located on a web page at a website on the World Wide Web or a local area network. Theuser device 110 may use any appropriate application to send and receive data over the network and present data to a user. - The
user device 110 may also include applications that can generate notifications. For example, theuser device 110 may include one or more of a calendar application that can generate notifications for reminders, a messaging application that can generate notifications when messages are received by theuser device 110, a restaurant reservation application that can generate notifications when reservations are upcoming, a news application that can generate notifications when a push notification for a news update is received by theuser device 110, or some other application. The applications may be running in a background of theuser device 110 when generating notifications. For example, a user may be using theuser device 110 to play a game when a messaging application receives a message and, in response, theuser device 110 may display a notification that includes an initial portion of the received message over a graphical user interface for the game. Notifications can also be received in the absence of an application, such as a push notification to a user device that can be received independent of the active status of any particular application. - A notification is information that is provided to a user in response to an occurrence of a trigger event. For example, a notification may be a graphical user element that is displayed on a screen of the
user device 110 and includes text or images that informs a user of the occurrence of a trigger event. In another example, a notification may be audio output that is provided through a microphone of auser device 110 and includes synthesized speech that informs a user of an occurrence of a trigger event. A trigger event may be an event that triggers a notification to be provided to a user. For example, a trigger event includes one or more of satisfaction of reminder criteria for a calendar appointment, receipt of a text message from another user while a user is not viewing a text message conversation with the other user, an application on the user device receiving a push notification from a server, or some other event. - The
user device 110 may obtain a notification and, in response, provide a request to thecontextual information server 150 for contextual information for the notification. For example, theuser device 110 may obtain a notification of “Calendar Appt.—Book flight to San Francisco” generated by a calendar application running in a background of theuser device 110 and, in response, provide a request that includes the text “Book flight to San Francisco” before the notification is displayed or provide a request that includes a screenshot of the notification as displayed on theuser device 110. As shown inFIG. 1 , the notification is provided while the user is viewing a new application. - The request may be considered a query-independent request as the
user device 110 provides the request to thecontextual information server 150 without having the user enter terms for a query, whether verbally, physically, or through some other interaction. For example, once theuser device 110 obtains a notification to provide a user, theuser device 110 may provide the request to thecontextual information server 150 without input from the user after the notification is obtained. - In response to providing the request to the
contextual information server 150, theuser device 110 then receives one or more user interface elements from thecontextual information server 150. For example, theuser device 110 may receive a user interface element for “San Francisco” from thecontextual information server 150. For the purposes of illustration, the user interface elements are described as cards. However, other user interface elements may be used, for example, chat bubbles, selectable linked notes or footnotes, synthesized voice responses, or other forms. A contextual card may be data that includes contextual information about a search item. For example, a contextual card for “San Francisco” may include contextual information that describes that “San Francisco” is “A large city in California.” The contextual card may indicate next actions. For example, the contextual card for “San Francisco” may include selectable options for performing searches for web pages, news, images, or videos relevant to a query including the terms “San Francisco.” - The
user device 110 provides the received contextual cards to the user. For example, theuser device 110 may provide the contextual cards by generating agraphical panel 160 that is shown adjacent to a notification and overlaid on top of anything that was being displayed by theuser device 110 before the notification was displayed. Thegraphical panel 160 identifies that the graphical panel is for the item “San Francisco” and San Francisco is “A large city in California” and includesselectable options 162 for performing searches for web pages, news, images, or videos relevant to a query including the terms “San Francisco.” - In the example of
FIG. 1 , theselectable options 162 are general options obtained for the search item “San Francisco.” However, options that are more specific to the content of the notification can also be provided. For example, the context of “San Francisco” in the notification is a travel context, as indicated by the term “book flight.” Thecontextual information server 150 can take into account the context and my instead include travel related options, such as “Rental Cars,” “Hotels,” “Restaurants,” etc. - The
user device 110 may display thegraphical panel 160 while the notification is being displayed. For example, notifications may be shown on theuser device 110 for a limited time, e.g., one second, two seconds, or some other length of time, and the notification and thegraphical panel 160 may both disappear after the limited time. In another example, the notifications andgraphical panel 160 may be shown on theuser device 110 until the user provides input to theuser device 110 that causes the notification or thegraphical panel 160 to no longer be displayed. In some implementations, theuser device 110 may operate in a mode where a user is not actively using theuser device 110, e.g., a locked mode. In the mode where a user is not actively using theuser device 110, the notifications and graphical panels may be shown once theuser device 110 detects that the user is actively using the device, e.g., when the user interacts with theuser device 110 while theuser device 110 is in a locked mode. -
FIG. 2 is a more detailed block diagram of theexample environment 100 in which contextual information is provided for a notification. Theenvironment 100 includes a clientcontextual module 210 on a user device and thecontextual information server 150. Thecontextual information server 150 includes anitem identification engine 220, anitem knowledge graph 222, arelevance scoring engine 230, anitem selection engine 240, acontextual card provider 250, and acard information database 260. In some implementations, the clientcontextual module 210 may be provided on theuser device 110 shown inFIG. 1 . In other implementations, the clientcontextual module 210 may be provided on another user device different than theuser device 110 shown inFIG. 1 . - The client
contextual module 210 determines that the user device has obtained a notification to be displayed on the user device. The notification may be obtained by the user device in response to an occurrence of a trigger event. For example, the clientcontextual module 210 may determine that a news application has generated a notification of “Celebrity X wins Prize Y” in response to the news application receiving a push notification from a news server. The clientcontextual module 210 may determine notifications are obtained by receiving indications that notifications have been generated by one or more applications running on the user device or generated by the operating system of the user device. For example, the operating system of the user device may provide the clientcontextual module 210 all notifications before the operating system displays the notifications regardless of whether the notifications were generated by the operating system or generated by applications running on the user device. - In response to determining that the user device has obtained a notification in response to an occurrence of a trigger event, the client
contextual module 210 generates a request to thecontextual information server 150 for contextual information for the notification. For example, the clientcontextual module 210 may generate a request to thecontextual information server 150 for contextual information for the notification of “Celebrity X wins Prize Y.” - The client
contextual module 210 may include information about the notification in the request. For example, the clientcontextual module 210 may obtain a tree based document object model that represents the notification and include the model in the request. The document object model may define text that appears in the notification and the appearance of the text, e.g., size, color, position, font, or other formatting, of the text. In another example, the clientcontextual module 210 may generate a screen shot of the notification as displayed on the user device and include the screenshot in the notification. - In some implementations, the client
contextual module 210 may include the information about the notification in the request by additionally or alternatively determining additional information about the notification and including the additional information in the request. The additional information about the request may include one or more of an indication of the application for which the notification was generated, a location of theuser device 110, or an identity of the user. For example, the clientcontextual module 210 may determine that theuser device 110 is located in Atlanta and include a location of “Atlanta” in the request. - The client
contextual module 210 then provides the request to theitem identification engine 220. For example, the clientcontextual module 210 provides the request to theitem identification engine 220 without the user providing any indication that contextual information is desired after the notification is obtained by the user device. - In response to providing the request to the
item identification engine 220, the clientcontextual module 210 receives a contextual card and renders the contextual card. For example, the clientcontextual module 210 receives a contextual card for the celebrity “Celebrity X” that includes a full name, a brief description, and a selectable option for viewing images of the celebrity, and then renders the contextual card adjacent to the notification on top of was previously being displayed. In some implementations, the clientcontextual module 210 may display the contextual card simultaneously with the notification. For example, the clientcontextual module 210 may cause the user device to delay displaying the notification until the contextual card is received, and then display the notification simultaneously with the contextual card. In another example, the clientcontextual module 210 may cause the user device to delay displaying the notification until an indication that no contextual card is available for the notification is received from thecontextual information server 150 and then display the notification without any contextual card. - The
item identification engine 220 receives the request for contextual information for a notification and identifies one or more search items from content in the notification. For example, theitem identification engine 220 may obtain a request that includes a notification of “Celebrity X wins Prize Y” that is generated on a user device in response to a news application running in the background of the user device receiving a push notification from a news server. As used in this specification, a “search item” is a concept or thing that can be used by a search system to conduct a search of information. A search item may be referred to by a text fragment, e.g., a term or phrase, and search items are distinguishable from one another, e.g., based on context. For example, a search item may be a keyword, and instance of a particular entity, a proper name, an entity or relation modeled by a node or an edge in a knowledge graph, and the like. - The
item identification engine 220 may extract text from the request. For example, theitem identification engine 220 may extract the text “Celebrity X wins Prize Y” from the request. Theitem identification engine 220 may extract the text by parsing a document object model representing the notification, performing optical character recognition on a screenshot of the notification as displayed on the user device, or analyzing content of the notification indicated in the request in some other manner. - The
item identification engine 220 identifies the one or more search items from the extracted text using theitem knowledge graph 222. For example, theitem identification engine 220 may identify that the text “Celebrity X” in the notification matches the name of a celebrity “Celebrity X” in theitem knowledge graph 222 and the text “Prize Y” in the notification matches the name of a prize “Prize Y” in theitem knowledge graph 222. Theitem knowledge graph 222 may be a knowledge graph that includes nodes for search items, edges that indicate relationships between the nodes, and contextual information describing the search items represented by the nodes. - In some implementations, the
item identification engine 220 may identify the one or more search items from the extracted text based on additional information in the request. For example, theitem identification engine 220 may determine that the request indicates thatuser device 110 is in Atlanta, e.g., based on geo-location data associated with the request or the user device, and focus on search items located in Atlanta. In another example, theitem identification engine 220 may determine that the request indicates that the request is from “User A” and focus on search items for which “User A” has received information for during the last hour, day, week, month, or some other period of time. - The
relevance scoring engine 230 may receive the search items identified by theitem identification engine 220 and determine a relevance score for each of the search items. The relevance score may reflect a confidence that the search item is relevant to the user, i.e., a degree of confidence that the user would like to see contextual information about the search item. For example, therelevance scoring engine 230 may receive an indication that the search items celebrity “Celebrity X” and prize “Prize Y” were identified in the notification, determine a relevance score of 90% for the celebrity “Celebrity X” indicating a high degree of confidence that the user would like to see contextual information about celebrity “Celebrity X,” and determine a relevance score of 80% for the prize “Prize Y” indicating a slightly less high degree of confidence that the user would like to see contextual information about the prize “Prize Y.” - The
relevance scoring engine 230 may determine a relevance score for a search item based on an engagement of users with the search items. Examples of engagement include providing search queries for resources relevant to the search item, requesting a resource indexed as relevant to the search item, or some other significant signal of interest in the search item. Therelevance scoring engine 230 may determine relevance scores indicating higher degrees of confidence that the user would like to see contextual information about a search item with greater engagement and may determine relevance scores indicating lower degrees of confidence that the user would like to see contextual information about a search item with lesser engagement. Therelevance scoring engine 230 may determine the engagement for a search item from, for example, analyzing search query history logs or resource request logs. - Additionally or alternatively, the
relevance scoring engine 230 may determine a relevance score for a search item based on natural language processing on the content from which the search item is identified. For example, therelevance scoring engine 230 may determine relevance scores indicating higher degrees of confidence that the user would like to see contextual information about search items identified from text that is a subject of a sentence and may determine relevance scores indicating lower degrees of confidence that the user would like to see contextual information about search items identified from text that is an object of a sentence. - Additionally or alternatively, the
relevance scoring engine 230 may determine a relevance score for a search item based on an appearance of the text from which the search item was identified. For example, therelevance scoring engine 230 may determine a relevance score that reflects a higher degree of confidence for search items identified from text that appears earlier in the notification. In another example, therelevance scoring engine 230 may determine relevance scores that reflect a higher degree of confidence for search items identified from text that is bolded as the text may be bolded because the text is important. In another example, therelevance scoring engine 230 may determine relevance scores that reflect a higher degree of confidence for search items identified from text that is a larger size, a different color, or aligned differently from the majority of text in the notification because different appearance of the text may indicate that the text is important. - The
item selection engine 240 may obtain the relevance scores and select one or more search items for which to provide contextual information to the user. For example, theitem selection engine 240 may receive an identification of the celebrity “Celebrity X” labeled with a relevance score of 90% and an identification of the prize “Prize Y” labeled with the relevance score of 70% and, in response, select the celebrity “Celebrity X” and not select the prize “Prize Y” to provide contextual information. - The
item selection engine 240 may select the search items based on determining whether the search items have respective relevance scores that satisfy a relevance threshold. For example, theitem selection engine 240 may select the celebrity “Celebrity X” as the relevance score of 90% is greater than a relevance threshold of 60%, 65%, 85%, or some other percentage less than 90%. In another example, theitem selection engine 240 may not select the prize “Prize Y” as the relevance score of 70% is lower than a relevance threshold of 85%, 95%, 95%, or some other percentage above 70%. - In some implementations, the
item selection engine 240 may additionally or alternatively select the search items based on a maximum. For example, theitem selection engine 240 may select a maximum of one, two, four, or some other number of cards and select the maximum number of search items with relevance scores that reflect the greatest degree of confidence in relevance. In some implementations, theitem selection engine 240 may additionally or alternatively select the search items based on a minimum. For example, theitem selection engine 240 may select a minimum of one, two, four, or some other number of cards with relevance scores that reflect the greatest degree of confidence in relevance. - The
contextual card provider 250 may obtain contextual cards including contextual information for the selected search items and provide the contextual cards to the clientcontextual module 210. For example, thecontextual card provider 250 may obtain an identification of the celebrity “Celebrity X” from theitem selection engine 240 and provide a contextual card for celebrity “Celebrity X” to the clientcontextual module 210. In the example, the contextual card includes a full name and brief description for celebrity “Celebrity X” and a selectable option for viewing images of celebrity “Celebrity X” appeared. - The
contextual card provider 250 may obtain contextual cards by generating contextual cards for search items. For example, thecontextual card provider 250 may obtain, from theitem knowledge graph 222, a full name, a brief description, and an indication that images of celebrity “Celebrity X” are available and then generate a contextual card that includes a full name and brief description for celebrity “Celebrity X” and a selectable option for viewing movies in which celebrity “Celebrity X” appeared. In another example, thecontextual card provider 250 may perform searches on celebrity “Celebrity X” to determine a full name, a brief description, and whether images of celebrity “Celebrity X” are available. - In some implementations, before generating a contextual card for a search item, the
contextual card provider 250 may determine whether a contextual card for the search item already exists in acard information database 260. For example, thecontextual card provider 250 may query thecard information database 260 for a contextual card for the celebrity “Celebrity X.” Where thecard information database 260 includes an existing contextual card for the search item, thecard information database 260 may provide the contextual card to thecontextual card provider 250 so that thecontextual card provider 250 can provide the existing contextual card to the clientcontextual module 210 instead of generating a new contextual card. -
FIG. 3 is a flow diagram of aprocess 300 for providing contextual information for a notification. For example, theprocess 300 can be used by thecontextual information server 150 from theenvironment 100. - The
process 300 includes receiving a query-independent request for contextual information relevant to a notification in response to the user device obtaining the notification in response to an occurrence of a trigger event (310). For example, theitem identification engine 220 may receive a request that includes a document object model of a notification of “Buy a ticket for Movie X at Theater Y” that is generated from a reminder that a user set in a calendar application. - The
process 300 includes identifying multiple search items from content in the notification (320). For example, theitem identification engine 220 may extract text “Movie X” and “Theater Y” from text in the notification and, in response, identify a movie “Movie X” and a place of business “Theater Y” from the respective text. - The
process 300 includes determining a relevance score for each of the identified multiple search items (330). For example, therelevance scoring engine 230 may receive an identification of the movie “Movie X” and determine that searches for movie “Movie X” are very popular and, in response, determine a relevance score indicating a high degree of confidence that the user would like to see contextual information for the movie “Movie X.” In another example, therelevance scoring engine 230 may receive an identification of the place of business “Theater Y” and determine that searches for the place of business “Theater Y” are not popular and, in response, determine a relevance score indicating a low degree of confidence that the user would like to see contextual information for the place of business “Theater Y.” In the example, additionally or alternatively, therelevance scoring engine 230 determine a relevance score indicating a low degree of confidence that the user would like to see contextual information for the place of business “Theater Y” in response to determining that a user typically goes to place of business “Theater Y” so is unlikely to want to receive contextual information on the place of business. - The
process 300 includes selecting search items based on the relevance scores (340). For example, theitem selection engine 240 may select the movie “Movie X” for providing contextual information based on a high relevance score of 95% for the movie satisfying a relevance threshold of 80% and not select the place of business “Theater Y” based on a low relevance score of 33% for the place of business not satisfying the relevance threshold of 80%. - The
process 300 includes, for each of the selected search items, providing a respective contextual card (350). For example, in response to theitem selection engine 240 selecting the movie “Movie X” and not selecting the place of business “Theater Y,” thecontextual card provider 250 may generate a contextual card for the movie “Movie X” and provide the contextual card to the clientcontextual module 210, and not generate or provide a contextual card for the place of business “Theater Y.” - In the example described, a determined intent for one search item may be higher than any other search item and the other search items can be ignored. However, in some implementations, the
process 300 may provide contextual cards based on multiple selected search items. For example, for a request that includes a document object model of a notification that defines the text “Book a flight to San Francisco,” theitem identification engine 220 may extract the text “Book a flight to San Francisco” from the request and identify a city “San Francisco” from the text “San Francisco,” and extract the text “flight” from the request and identify an object “flight” from the text “flight.” Therelevance scoring engine 230 may use natural language processing to determine that the notification is regarding a trip to a destination where the destination is the city “San Francisco,” and in response, determine a relevance score indicating a high degree of confidence that the user would like to see contextual information for the city “San Francisco.” Therelevance scoring engine 230 may determine that the notification is regarding a trip to a destination and the object “flight” refers to the type of transportation, and in response, determine a relevance score indicating a high degree of confidence that the user would like to see contextual information for the object “flight.” Therelevance scoring engine 230 may then select both the city “San Francisco” and the object “flight” and, in response, provide a contextual card with flight related information for the city “San Francisco.” - In some implementations, the
process 300 can include additional steps, fewer steps, or some of the steps can be divided into multiple steps. For example, thecontextual information server 150 may not performsteps -
FIG. 4 is a flow diagram of aprocess 400 for providing contextual information for a notification. For example, theprocess 400 can be used by the clientcontextual module 210 from theenvironment 100. - The
process 300 includes obtaining a notification regarding a search item for display on a user device (410). For example, the clientcontextual module 210 may determine that a calendar application on the user device has generated a notification of “Buy a ticket for Movie X at Theater Y.” - The
process 400 includes providing a query-independent request for contextual information relevant to the notification (420). For example, the clientcontextual module 210 may, in response to the user device obtaining the notification, provide the contextual information server 150 a request that includes a document object model of a notification that defines the text “Buy a ticket for Movie X at Theater Y” and how the text should appear in the notification. - The
process 400 includes receiving a user interface element that includes contextual information regarding the search item (430). For example, the clientcontextual module 210 may, in response to providing the request to thecontextual information server 150, receive a card for the movie “Movie X” from thecontextual information server 150. - The
process 400 includes displaying the notification and the user interface element simultaneously (440). For example, the clientcontextual module 210 may provide the card for the movie “Movie X” to an operating system of a user device to cause the user device to display the notification “Buy a ticket for Movie X at Theater Y” and simultaneously display the card immediately below the notification. - In some implementations, the
process 400 can include additional steps, fewer steps, or some of the steps can be divided into multiple steps. For example, the clientcontextual module 210 may additionally perform functions of thecontextual information server 150. - In situations in which the systems discussed here collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by a content server.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- The term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing. The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's user device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a user computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- The computing system can include users and servers. A user and server are generally remote from each other and typically interact through a communication network. The relationship of user and server arises by virtue of computer programs running on the respective computers and having a user-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML, page) to a user device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the user device). Data generated at the user device (e.g., a result of the user interaction) can be received from the user device at the server.
- An example of one such type of computer is shown in
FIG. 5 , which shows a schematic diagram of ageneric computer system 500. Thesystem 500 can be used for the operations described in association with any of the computer-implement methods described previously, according to one implementation. Thesystem 500 includes aprocessor 510, amemory 520, astorage device 530, and an input/output device 540. Each of thecomponents system bus 550. Theprocessor 510 is capable of processing instructions for execution within thesystem 500. In one implementation, theprocessor 510 is a single-threaded processor. In another implementation, theprocessor 510 is a multi-threaded processor. Theprocessor 510 is capable of processing instructions stored in thememory 520 or on thestorage device 530 to display graphical information for a user interface on the input/output device 540. - The
memory 520 stores information within thesystem 500. In one implementation, thememory 520 is a computer-readable medium. In one implementation, thememory 520 is a volatile memory unit. In another implementation, thememory 520 is a non-volatile memory unit. - The
storage device 530 is capable of providing mass storage for thesystem 500. In one implementation, thestorage device 530 is a computer-readable medium. In various different implementations, thestorage device 530 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device. - The input/
output device 540 provides input/output operations for thesystem 500. In one implementation, the input/output device 540 includes a keyboard and/or pointing device. In another implementation, the input/output device 540 includes a display unit for displaying graphical user interfaces. - While this specification contains many specific implementation details, these should not be construed as limitations on the scope of what may be claimed, but rather as descriptions of features specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (20)
Priority Applications (6)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/388,860 US10051108B2 (en) | 2016-07-21 | 2016-12-22 | Contextual information for a notification |
EP17831585.9A EP3488362B1 (en) | 2016-07-21 | 2017-07-13 | Contextual information for a notification |
PCT/US2017/041856 WO2018017383A1 (en) | 2016-07-21 | 2017-07-13 | Contextual information for a notification |
DE102017116159.7A DE102017116159A1 (en) | 2016-07-21 | 2017-07-18 | Context information for a notification |
CN201710600067.2A CN107644053A (en) | 2016-07-21 | 2017-07-21 | The context information of notice |
GB1711763.1A GB2553660A (en) | 2016-07-21 | 2017-07-21 | Contextual information for a notification |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201662365046P | 2016-07-21 | 2016-07-21 | |
US15/388,860 US10051108B2 (en) | 2016-07-21 | 2016-12-22 | Contextual information for a notification |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180027110A1 true US20180027110A1 (en) | 2018-01-25 |
US10051108B2 US10051108B2 (en) | 2018-08-14 |
Family
ID=60988989
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/388,860 Active US10051108B2 (en) | 2016-07-21 | 2016-12-22 | Contextual information for a notification |
Country Status (4)
Country | Link |
---|---|
US (1) | US10051108B2 (en) |
EP (1) | EP3488362B1 (en) |
CN (1) | CN107644053A (en) |
WO (1) | WO2018017383A1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11134051B2 (en) * | 2016-09-19 | 2021-09-28 | Samsung Electronics Co., Ltd. | Apparatus and method for managing notification |
CN113836449A (en) * | 2021-09-28 | 2021-12-24 | 北京字节跳动网络技术有限公司 | Information display method and device and computer storage medium |
US20230214801A1 (en) * | 2022-01-03 | 2023-07-06 | Bank Of America Corporation | Dynamic Intelligent Selection Based on Multi-Device Contextual Data |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10691747B2 (en) * | 2017-11-16 | 2020-06-23 | Google Llc | Association of data items and objects |
US20190244308A1 (en) * | 2018-02-07 | 2019-08-08 | BlackBook Media Inc. | Managing event databases using histogram-based analysis |
US11565161B2 (en) | 2019-06-07 | 2023-01-31 | Connecticut Scientific LLC | Training aid and alert |
WO2021231207A2 (en) * | 2020-05-11 | 2021-11-18 | Apple Inc. | Providing relevant data items based on context |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130024762A1 (en) * | 2009-05-30 | 2013-01-24 | Edmond Kwok-Keung Chow | Methods and systems for annotation of digital information |
US20160360382A1 (en) * | 2015-05-27 | 2016-12-08 | Apple Inc. | Systems and Methods for Proactively Identifying and Surfacing Relevant Content on a Touch-Sensitive Device |
Family Cites Families (41)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5842009A (en) | 1996-09-30 | 1998-11-24 | Apple Computer, Inc. | System for automatically retrieving information relevant to a user's scheduled event |
US20010053968A1 (en) | 2000-01-10 | 2001-12-20 | Iaskweb, Inc. | System, method, and computer program product for responding to natural language queries |
US7389181B2 (en) | 2004-08-31 | 2008-06-17 | Visre, Inc. | Apparatus and method for producing video drive-by data corresponding to a geographic location |
US7996419B2 (en) | 2004-03-31 | 2011-08-09 | Google Inc. | Query rewriting with entity detection |
US8606781B2 (en) | 2005-04-29 | 2013-12-10 | Palo Alto Research Center Incorporated | Systems and methods for personalized search |
US7788266B2 (en) | 2005-08-26 | 2010-08-31 | Veveo, Inc. | Method and system for processing ambiguous, multi-term search queries |
US20070060114A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Predictive text completion for a mobile communication facility |
KR100828539B1 (en) | 2005-09-20 | 2008-05-13 | 후지제롯쿠스 가부시끼가이샤 | Detection method of two dimensional code, detection device thereof, and storage medium having detection program storaged therein |
US7917286B2 (en) | 2005-12-16 | 2011-03-29 | Google Inc. | Database assisted OCR for street scenes and other images |
US7818315B2 (en) | 2006-03-13 | 2010-10-19 | Microsoft Corporation | Re-ranking search results based on query log |
US7818332B2 (en) | 2006-08-16 | 2010-10-19 | Microsoft Corporation | Query speller |
US7689613B2 (en) | 2006-10-23 | 2010-03-30 | Sony Corporation | OCR input to search engine |
US20080270761A1 (en) * | 2007-04-30 | 2008-10-30 | Microsoft Corporation | Techniques to generate event contexts for recurring events |
US20080270110A1 (en) | 2007-04-30 | 2008-10-30 | Yurick Steven J | Automatic speech recognition with textual content input |
US20100241663A1 (en) | 2008-02-07 | 2010-09-23 | Microsoft Corporation | Providing content items selected based on context |
US8321406B2 (en) | 2008-03-31 | 2012-11-27 | Google Inc. | Media object query submission and response |
US8391618B1 (en) | 2008-09-19 | 2013-03-05 | Adobe Systems Incorporated | Semantic image classification and search |
US20100306249A1 (en) | 2009-05-27 | 2010-12-02 | James Hill | Social network systems and methods |
US9135277B2 (en) | 2009-08-07 | 2015-09-15 | Google Inc. | Architecture for responding to a visual query |
US8670597B2 (en) | 2009-08-07 | 2014-03-11 | Google Inc. | Facial recognition with social network aiding |
US9087059B2 (en) | 2009-08-07 | 2015-07-21 | Google Inc. | User interface for presenting search results for multiple regions of a visual query |
US8515185B2 (en) | 2009-11-25 | 2013-08-20 | Google Inc. | On-screen guideline-based selective text recognition |
US8977639B2 (en) | 2009-12-02 | 2015-03-10 | Google Inc. | Actionable search results for visual queries |
US20110128288A1 (en) | 2009-12-02 | 2011-06-02 | David Petrou | Region of Interest Selector for Visual Queries |
US9852156B2 (en) | 2009-12-03 | 2017-12-26 | Google Inc. | Hybrid use of location sensor data and visual query to return local listings for visual query |
US8392435B1 (en) | 2010-04-14 | 2013-03-05 | Google Inc. | Query suggestions for a document based on user history |
US8316019B1 (en) | 2010-06-23 | 2012-11-20 | Google Inc. | Personalized query suggestions from profile trees |
US8600979B2 (en) | 2010-06-28 | 2013-12-03 | Yahoo! Inc. | Infinite browse |
US8788434B2 (en) | 2010-10-28 | 2014-07-22 | Google Inc. | Search with joint image-audio queries |
US8473433B2 (en) | 2010-11-04 | 2013-06-25 | At&T Intellectual Property I, L.P. | Systems and methods to facilitate local searches via location disambiguation |
US10304066B2 (en) | 2010-12-22 | 2019-05-28 | Facebook, Inc. | Providing relevant notifications for a user based on location and social information |
US20120191745A1 (en) | 2011-01-24 | 2012-07-26 | Yahoo!, Inc. | Synthesized Suggestions for Web-Search Queries |
US20120215533A1 (en) | 2011-01-26 | 2012-08-23 | Veveo, Inc. | Method of and System for Error Correction in Multiple Input Modality Search Engines |
TWI544350B (en) | 2011-11-22 | 2016-08-01 | Inst Information Industry | Input method and system for searching by way of circle |
US8984012B2 (en) | 2012-06-20 | 2015-03-17 | Microsoft Technology Licensing, Llc | Self-tuning alterations framework |
US8903813B2 (en) * | 2012-07-02 | 2014-12-02 | International Business Machines Corporation | Context-based electronic document search using a synthetic event |
US8935246B2 (en) | 2012-08-08 | 2015-01-13 | Google Inc. | Identifying textual terms in response to a visual query |
KR20140091633A (en) * | 2013-01-11 | 2014-07-22 | 삼성전자주식회사 | Method for providing recommended items based on conext awareness and the mobile terminal therefor |
US9342567B2 (en) | 2013-08-23 | 2016-05-17 | International Business Machines Corporation | Control for persistent search results and iterative searching |
US9838348B2 (en) | 2014-12-31 | 2017-12-05 | Yahoo Holdings, Inc. | Electronic message search system and method |
US20160203238A1 (en) | 2015-01-09 | 2016-07-14 | Facebook, Inc. | Suggested Keywords for Searching News-Related Content on Online Social Networks |
-
2016
- 2016-12-22 US US15/388,860 patent/US10051108B2/en active Active
-
2017
- 2017-07-13 WO PCT/US2017/041856 patent/WO2018017383A1/en unknown
- 2017-07-13 EP EP17831585.9A patent/EP3488362B1/en active Active
- 2017-07-21 CN CN201710600067.2A patent/CN107644053A/en active Pending
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130024762A1 (en) * | 2009-05-30 | 2013-01-24 | Edmond Kwok-Keung Chow | Methods and systems for annotation of digital information |
US20160360382A1 (en) * | 2015-05-27 | 2016-12-08 | Apple Inc. | Systems and Methods for Proactively Identifying and Surfacing Relevant Content on a Touch-Sensitive Device |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11134051B2 (en) * | 2016-09-19 | 2021-09-28 | Samsung Electronics Co., Ltd. | Apparatus and method for managing notification |
CN113836449A (en) * | 2021-09-28 | 2021-12-24 | 北京字节跳动网络技术有限公司 | Information display method and device and computer storage medium |
US20230214801A1 (en) * | 2022-01-03 | 2023-07-06 | Bank Of America Corporation | Dynamic Intelligent Selection Based on Multi-Device Contextual Data |
Also Published As
Publication number | Publication date |
---|---|
EP3488362A4 (en) | 2019-12-25 |
US10051108B2 (en) | 2018-08-14 |
WO2018017383A1 (en) | 2018-01-25 |
EP3488362B1 (en) | 2021-04-07 |
CN107644053A (en) | 2018-01-30 |
EP3488362A1 (en) | 2019-05-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10051108B2 (en) | Contextual information for a notification | |
EP3369011B1 (en) | Providing suggestions for interaction with an automated assistant in a multi-user message exchange thread | |
US10949477B2 (en) | Service recommendation method and apparatus with intelligent assistant | |
US9378290B2 (en) | Scenario-adaptive input method editor | |
US10826856B2 (en) | Automated generation of prompts and analyses of user responses to the prompts to determine an entity for an action and perform one or more computing actions related to the action and the entity | |
CN110582765A (en) | Proactive incorporation of unsolicited content into human-to-computer conversations | |
US20140040741A1 (en) | Smart Auto-Completion | |
US9063972B1 (en) | Increasing user retention and re-engagement in social networking services | |
US10152521B2 (en) | Resource recommendations for a displayed resource | |
US9613145B2 (en) | Generating contextual search presentations | |
US11507253B2 (en) | Contextual information for a displayed resource that includes an image | |
US11003667B1 (en) | Contextual information for a displayed resource | |
US11574013B1 (en) | Query recommendations for a displayed resource | |
KR101593191B1 (en) | Ambiguous structured search queries on online social networks | |
US20180285444A1 (en) | Rewriting contextual queries | |
US10467300B1 (en) | Topical resource recommendations for a displayed resource | |
US9256343B1 (en) | Dynamically modifying an electronic article based on commentary | |
GB2553660A (en) | Contextual information for a notification | |
US20210232659A1 (en) | Query recommendations for a displayed resource |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BAKIR, GOKHAN H.;NOWAK-PRZYGODZKI, MARCIN M.;SIGNING DATES FROM 20160928 TO 20161007;REEL/FRAME:040757/0139 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
US7356619B2 - Method and apparatus for dynamic management of input/output subsystem addressing - Google Patents
Method and apparatus for dynamic management of input/output subsystem addressing Download PDFInfo
- Publication number
- US7356619B2 US7356619B2 US10/142,606 US14260602A US7356619B2 US 7356619 B2 US7356619 B2 US 7356619B2 US 14260602 A US14260602 A US 14260602A US 7356619 B2 US7356619 B2 US 7356619B2
- Authority
- US
- United States
- Prior art keywords
- subsystem
- stored
- subsystems
- information
- address
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/06—Addressing a physical block of locations, e.g. base addressing, module addressing, memory dedication
- G06F12/0646—Configuration or reconfiguration
- G06F12/0653—Configuration or reconfiguration with centralised address assignment
Definitions
- the present invention relates generally to an improved data processing system, and in particular, to a method and apparatus for managing addressing of components. Still more particularly, the present invention provides a method and apparatus for dynamically managing the addressing of input/output subsystems in a data processing system.
- Data processing systems include many types of components.
- a typical data processing system includes a processor, a power supply, memory, and peripheral devices.
- Multiprocessor systems are becoming more common.
- a multiprocessor data processing system is a data processing system that contains multiple central processing units. This type of system allows for logical partitioning in which a single multiprocessor data processing system may run as if the system were two or more independent systems. In such a system, each logical partition represents a division of resources in the system and operates as an independent logical system. Each of these partitions is logical because the division of resources may be physical or virtual.
- a multiprocessor data processing system may be partitioned into multiple independent servers, in which each partition has its own processors, main storage, and input/output devices.
- Each subsystem includes a bridge or some other interface to connect the subsystem with other portions of the data processing system through a primary or main input/output hub.
- Each of these I/O subsystems is also referred to as a “drawer”.
- Each of these drawers or I/O subsystems may include peripheral components, such as, for example, hard disk drives, tape drives, or graphics adapters.
- the present invention provides a method, apparatus, and computer instructions for managing a set of I/O subsystems.
- Previously stored I/O subsystem information is compared to current I/O subsystem information collected from the set of I/O subsystems.
- the I/O subsystem information includes addresses associated with unique identifiers.
- Information in the set of subsystems is recorrelated if a mismatch is present between the previously stored I/O subsystem information and the current I/O subsystem information in the set of subsystems.
- FIGS. 1A and 1B depict a block diagram of an illustrative embodiment of a data processing system with which the present invention may be implemented;
- FIG. 2 is a diagram illustrating a drawer list in accordance with a preferred embodiment of the present invention.
- FIG. 3 is a flowchart of a process used for determining whether address information for drawers needs to be updated in accordance with a preferred embodiment of the present invention
- FIG. 4 is a flowchart of a process used for managing addressing for I/O subsystems when components are changed in accordance with a preferred embodiment of the present invention
- FIG. 5 is a flowchart of a process used for recorrelating I/O subsystems in accordance with a preferred embodiment of the present invention
- FIG. 6 is a flowchart of a process used to handle an error received from a drawer in accordance with a preferred embodiment of the present invention.
- FIG. 7 is a flowchart of a process used for identifying a drawer in response to some error in accordance with a preferred embodiment of the present invention.
- FIGS. 1A and 1B there is depicted a block diagram of an illustrative embodiment of a data processing system with which the present invention may be implemented.
- the illustrative embodiment depicted in FIGS. 1A and 1B is a workstation or server computer system; however, as will become apparent from the following description, the present invention may also be applied to any other data processing system.
- data processing system 100 includes a system planar 102 coupled to one or more processor cards (in this case, processor cards 104 , 106 and 108 ) and one or more input/output (I/O) drawers (in this case, I/O drawers 110 , 112 , 114 , and 116 ).
- processor card 104 includes four general purpose processors, processors 118 , 120 , 122 , and 124 , that each have an on-chip level one (L1) cache (not illustrated) and an associated level two (L2) cache, such as L2 caches 126 , 128 , 130 , and 132 .
- L1 cache not illustrated
- L2 caches 126 , 128 , 130 , and 132 level two cache
- system planar 102 includes bus arbiter 142 that regulates access to address and control bus 134 by processors 118 , 120 , 122 , and 124 , as well as flow control logic 144 and input/output (I/O) hub 146 , which are each connected to address and control bus 134 .
- Flow control logic 144 is further connected to dual-ported system memory 148 and data switches 150
- I/O hub 146 is further connected to data switches 150 by data bus 152 and to each of I/O drawers 110 , 112 , 114 , and 116 by a respective one of primary remote I/O (RIO) buses 154 , 156 , 158 , and 160 .
- RIO primary remote I/O
- Address transactions issued on address and control bus 134 are received by both flow control logic 144 and I/O hub 146 . If an address transaction specifies an address associated with a location in system memory 148 , flow control logic 144 forwards the address to system memory 148 as an access request. Alternatively, if the address transaction specifies a memory mapped I/O address associated with an I/O device contained in one of I/O drawers 110 , 112 , 114 , or 116 , I/O hub 146 routes the address transaction to the appropriate I/O drawer via its primary RIO bus. Flow control logic 144 also supplies control signals to data switches 150 to control the flow of data transactions between processor cards 104 , 106 , and 108 , system memory 148 , and I/O hub 146 .
- each I/O drawer contains an I/O bridge, such as I/O bridge 160 , 162 , 164 , and 168 , that is directly connected to I/O hub 146 by a respective primary RIO bus and is coupled either directly or indirectly to I/O hub 146 via a secondary RIO bus, such as secondary RIO bus 170 or secondary RIO bus 172 .
- I/O bridge is directly connected to I/O hub 146 by both a primary RIO bus and a secondary RIO bus.
- each I/O drawer is connected to I/O hub 146 by a single primary RIO bus, such as primary RIO bus 154 , 156 , 158 , or 160 , and is connected to another I/O drawer through a secondary RIO bus, such as secondary RIO bus 170 or 172 .
- I/O hub 146 has redundant paths through which it can communicate to each installed I/O drawer.
- each I/ 0 bridge is connected to up to four peripheral component interconnect (PCI) bus controllers, which each supply connections for up to four PCI devices.
- PCI peripheral component interconnect
- PCI devices examples include, for example, small computer system interface (SCSI) adapters, local area network (LAN) adapters, and hard disk drives.
- SCSI small computer system interface
- LAN local area network
- data processing system 100 also includes system power control network (SPCN) controller 174 , which receives input power from external power supply 176 and, following power on, distributes operating power to all the components of data processing system 100 .
- SPCN system power control network
- the system power control network includes redundant connections to I/O drawers 110 , 112 , 114 , and 116 , which are interconnected in a loop configuration in order to assure uninterrupted power to I/O devices installed in I/O drawers 110 , 112 , 114 , and 116 .
- SPCN system power control network
- Data processing system 100 also includes a service processor 178 and nonvolatile random access memory (NVRAM) 180 . These components are used in dynamic management of I/O subsystem addressing for the present invention.
- each of the I/O drawers includes a SPCN, such as SPCNs 182 , 184 , 186 , and 188 .
- SPCNs 182 , 184 , 186 , and 188 store identification information, such as serial number, type, and model for the drawer.
- the mechanism of the present invention uses this information stored in each of these drawers to compare this stored information with information stored in NVRAM 180 . Of course, this information may be stored in any sort of nonvolatile memory, in addition to, or in place of NVRAM 180 .
- the information stored in NVRAM 180 includes information obtained from I/O drawers 110 , 112 , 114 , and 116 , as detected at some previous time.
- the mechanism of the present invention uses this comparison to detect whether a drawer present in data processing system 100 is a new drawer and whether to assign a unique address to that drawer. By keeping the address of each drawer unique and unchanged, maintaining a previously detected device list under the same I/O drawer is possible. Further, with this type of addressing, dynamic I/O subsystem expansion or change may occur without user intervention or the need for rescanning of the devices on reboot after adding a new input/output subsystem.
- the present invention does not depend on system cabling to maintain address ranges as in currently available systems.
- a particular drawer may be moved within a system and maintain or retain the same address.
- the addresses are virtual addresses.
- the mechanism of the present invention also allows for a history of previously assigned addresses for drawers to be maintained. Identification information for each drawer is associated with a unique address. When a new drawer is added, a list may be searched for current and previous addresses. If an address, which has not been used, is encountered, this address is used for the new drawer. If a drawer is removed from the system, the address assigned to this drawer remains in the list and is marked as currently unavailable. If a new unused address is unavailable, one of the old addresses that is currently unused may be reused at that time.
- the identification information used to correlate a virtual address to a physical component is the serial number of the drawer or subsystem. Of course, additional information, such as type and model, also may be used as part of the identification information associated with an address.
- Drawer list 200 is an example of a drawer list, which may be stored in NVRAM 180 in FIG. 1A .
- drawer list 200 includes entries 202 , 204 , 206 , 208 , 210 , 212 , 214 , 216 , and 218 .
- nine entries are illustrated in this example, other numbers of entries, such as thirty-two, may be used in drawer list 200 depending on the particular implementation.
- each drawer list includes identification information as well as an address.
- entry 202 includes serial number 220 , type 222 , model 224 , address 226 , and drawer ID 228 .
- Serial number 220 alone, or in combination with type 222 and model 224 may be associated with address 226 .
- These three pieces of information may form a unique identifier for the particular drawer. This information is retrieved from the SPCN in the drawer.
- serial number 220 alone may be used as the unique identifier for the drawer.
- Drawer ID 228 represents an identifier that may be returned if an error is received at address 226 , which is a virtual address in these examples.
- Address 226 also is stored in the drawer having serial number 220 . This address is returned in the event an error occurs in a particular drawer and may be used to locate the drawer.
- address 226 when address 226 is returned as part of an error, this address may be used to identify serial number 220 or drawer ID 228 . Either of these identifications may be used to determine the physical location of the drawer.
- Address 226 is a drawer address that is known to the primary SPCN, SPCN controller 174 , as well as the secondary SPCNs, SPCNs 182 , 184 , 186 , and 188 . This drawer information is used by service processor 178 for communication between SPCNs 182 , 184 , 186 , and 188 and service processor 178 .
- a separate list or database, not shown, may be used to correlate the particular drawer in which an error has occurred for purposes of locating the drawer.
- drawer ID 228 may be used as an index to generate a signal, such as a flashing light in a drawer, in response to receiving an error associated with address 226 . In this manner, reliance on tracing physical cables from a port is no longer required.
- FIG. 3 a flowchart of a process used for determining whether address information for drawers needs to be updated is depicted in accordance with a preferred embodiment of the present invention.
- the process illustrated in FIG. 3 may be implemented in a service processor, such as service processor (SP) 178 in FIG. 1A . This process is typically initiated when a system is powered up or during each power cycle.
- SP service processor
- the process begins by collecting identification information from system power control network units (step 300 ).
- Service processor 178 collects information about each drawer, including type, model, and serial number data, as well as address information from the SPCN in the drawer.
- a determination is made as to whether the information collected from the drawers matches the stored information stored in a nonvolatile memory, such as NVRAM 180 in FIG. 1A (step 302 ). If the information does not match the stored information, the drawers are recorrelated (step 304 ), with the process terminating thereafter.
- step 302 if the information does match the stored information, the process terminates.
- FIG. 4 a flowchart of a process used for managing addressing for I/O subsystems when components are changed is depicted in accordance with a preferred embodiment of the present invention.
- the process illustrated in FIG. 4 may be implemented in a service processor, such as service processor 178 in FIG. 1A .
- the process begins by detecting whether a drawer has been added (step 400 ). If a drawer has been added, the drawers are recorrelated (step 402 ) and the process returns to step 400 .
- step 400 if a detection is made that another drawer has not been added, a determination is made as to whether a drawer has been removed (step 404 ). If a drawer has been removed the process returns to step 402 as described above. Otherwise, the process returns to step 400 .
- FIG. 5 a flowchart of a process used for recorrelating I/O subsystems is depicted in accordance with a preferred embodiment of the present invention.
- the process illustrated in FIG. 5 may be implemented in a service processor, such as service processor 178 in FIG. 1A .
- the I/O subsystems are referred to as drawers.
- the process begins by selecting an unprocessed drawer (step 500 ).
- the determinations described below are comparisons of a serial number and an address obtained from a SPCN in a drawer with a serial number and an address associated with a serial number in a drawer list, such as drawer list 200 in FIG. 2 .
- a determination is made as to whether the address or the serial number match (step 502 ).
- Step 502 is performed to determine whether a new drawer has been added to the data processing system. If either the address or serial number matches, a determination is made as to whether the serial number matches and the address does not match (step 504 ).
- Absent a determination that the serial number matches and the address does not match a determination is made as to whether the address matches and the serial number does not match (step 506 ). Absent a determination that the address matches and the serial number does not match, a determination is made as to whether there are more drawers to process (step 508 ). If no more drawers are present to process, the process terminates.
- step 508 if more drawers are present to be processed, the process returns to step 500 .
- step 510 if the address matches and the serial number does not match, an address is assigned (step 510 ).
- a positive or yes response to this determination means that the drawer may have been used in this data processing system because the address in the drawer matches an address in the drawer list. Most likely, the number of entries was exceeded and the address was reassigned and the previous entry for this drawer was deleted. As a result, the drawer is assigned the next available address. In this case, the drawer is treated as a new drawer, and a new entry is added (step 512 ) and the process proceeds to step 508 , as described above.
- step 504 if the serial number matches and the address does not match, the address is restored (step 514 ) and the process proceeds to step 508 , as described above.
- a mismatch indicates that the drawer is “known” to this system and should have its drawer address restored. Restoring the drawer address allows the configuration or adapter address ranges held within the OS to remain intact. It is possible that the drawer has been temporarily installed in another system and had a new drawer address assigned by that system.
- step 502 if neither the address or the serial number match, a new drawer is added (step 516 ). An address is assigned to the drawer (step 518 ) and the process returns to step 508 .
- FIG. 6 a flowchart of a process used to handle an error received from a drawer is depicted in accordance with a preferred embodiment of the present invention.
- the process illustrated in FIG. 6 may be implemented in a data processing system, such as data processing system 100 in FIGS. 1A and 1B .
- the drawer in which the error originates will return an address, such as address 226 , in FIG. 2 .
- the process begins by receiving an address and an error code (step 600 ).
- the address is used to identify the drawer ID (step 602 ). This identification may be made by using the address as an index into a drawer list, such as drawer list 200 in FIG. 2 .
- an alert is generated (step 604 ), with the process terminating thereafter.
- This alert may be, for example, a message display in the data processing system or on some console in communication with the data processing system.
- the alert may include activation of some signaling mechanism to indicate the location of the drawer. For example, a flashing light may be initiated in the drawer in which the error occurred.
- FIG. 7 a flowchart of a process used for identifying a drawer in response to some error is depicted in accordance with a preferred embodiment of the present invention.
- the process illustrated in FIG. 7 may be implemented in a data processing system, such as data processing system 100 in FIGS. 1A and 1B .
- the identification of the drawer is initiated through the correlation of the drawer ID to some address or port for the drawer.
- the drawer ID may be used as an index or key to a list or database containing an identification of the physical location of the drawer.
- the serial number of the drawer may be used as an index or key to identify a physical location of the drawer.
- the process begins by receiving a drawer ID (step 700 ).
- the ID is correlated to the address (step 702 ).
- An address assigned to the drawer may be used to send a message to the drawer to initiate the appropriate signal.
- the address is used in communication with the drawer, and therefore is part of the message sent on the network to initiate the drawer identification.
- Signaling is initiated using the address (step 704 ), with the process terminating thereafter.
- the signaling may be, a flashing light or some other visual or audio indicator associated with the drawer that can be used to locate the drawer's physical location.
- the present invention provides an improved method, apparatus, and computer instructions for addressing subsystems with a mechanism that does not depend on physical system cabling to maintain memory address ranges.
- This mechanism allows an I/O subsystem or drawer to be moved within the same system and maintain the same virtual address.
Abstract
Description
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/142,606 US7356619B2 (en) | 2002-05-09 | 2002-05-09 | Method and apparatus for dynamic management of input/output subsystem addressing |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/142,606 US7356619B2 (en) | 2002-05-09 | 2002-05-09 | Method and apparatus for dynamic management of input/output subsystem addressing |
Publications (2)
Publication Number | Publication Date |
---|---|
US20030212823A1 US20030212823A1 (en) | 2003-11-13 |
US7356619B2 true US7356619B2 (en) | 2008-04-08 |
Family
ID=29399943
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/142,606 Expired - Fee Related US7356619B2 (en) | 2002-05-09 | 2002-05-09 | Method and apparatus for dynamic management of input/output subsystem addressing |
Country Status (1)
Country | Link |
---|---|
US (1) | US7356619B2 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040215792A1 (en) * | 2003-01-21 | 2004-10-28 | Equallogic, Inc. | Client load distribution |
US20090043932A1 (en) * | 2007-08-10 | 2009-02-12 | Oreste Bernardi | Method and Device for Enumeration |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7130953B2 (en) * | 2003-03-05 | 2006-10-31 | Broadcom Corporation | Bus architecture techniques employing busses with different complexities |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5038320A (en) * | 1987-03-13 | 1991-08-06 | International Business Machines Corp. | Computer system with automatic initialization of pluggable option cards |
US5109500A (en) * | 1986-10-31 | 1992-04-28 | Hitachi, Ltd. | Disk drive control unit having sets of operating command and operation length information and generating end signal based upon operation length information |
US5446869A (en) * | 1993-12-30 | 1995-08-29 | International Business Machines Corporation | Configuration and RAM/ROM control of PCI extension card residing on MCA adapter card |
US5581787A (en) * | 1988-11-15 | 1996-12-03 | Hitachi, Ltd. | Processing system and method for allocating address space among adapters using slot ID and address information unique to the adapter's group |
US5768277A (en) * | 1994-07-25 | 1998-06-16 | Matsushita Electric Works, Ltd. | Automatic ID assigning device for network instruments |
US6098117A (en) * | 1998-04-20 | 2000-08-01 | National Instruments Corporation | System and method for controlling access to memory configured within an I/O module in a distributed I/O system |
US6201862B1 (en) * | 1997-04-14 | 2001-03-13 | Alcatel | Method for providing at least one service to users of a telecommunication network, service control facility and server node |
US6243773B1 (en) * | 1997-05-13 | 2001-06-05 | Micron Electronics, Inc. | Configuration management system for hot adding and hot replacing devices |
US6314482B1 (en) * | 1999-03-19 | 2001-11-06 | International Business Machines Corporation | Method and system for indexing adapters within a data processing system |
US6813674B1 (en) * | 1997-06-17 | 2004-11-02 | St. Clair Intellectual Property Consultants, Inc. | Dual-edge fifo interface |
-
2002
- 2002-05-09 US US10/142,606 patent/US7356619B2/en not_active Expired - Fee Related
Patent Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5109500A (en) * | 1986-10-31 | 1992-04-28 | Hitachi, Ltd. | Disk drive control unit having sets of operating command and operation length information and generating end signal based upon operation length information |
US5038320A (en) * | 1987-03-13 | 1991-08-06 | International Business Machines Corp. | Computer system with automatic initialization of pluggable option cards |
US5581787A (en) * | 1988-11-15 | 1996-12-03 | Hitachi, Ltd. | Processing system and method for allocating address space among adapters using slot ID and address information unique to the adapter's group |
US5446869A (en) * | 1993-12-30 | 1995-08-29 | International Business Machines Corporation | Configuration and RAM/ROM control of PCI extension card residing on MCA adapter card |
US5768277A (en) * | 1994-07-25 | 1998-06-16 | Matsushita Electric Works, Ltd. | Automatic ID assigning device for network instruments |
US6201862B1 (en) * | 1997-04-14 | 2001-03-13 | Alcatel | Method for providing at least one service to users of a telecommunication network, service control facility and server node |
US6243773B1 (en) * | 1997-05-13 | 2001-06-05 | Micron Electronics, Inc. | Configuration management system for hot adding and hot replacing devices |
US6813674B1 (en) * | 1997-06-17 | 2004-11-02 | St. Clair Intellectual Property Consultants, Inc. | Dual-edge fifo interface |
US6098117A (en) * | 1998-04-20 | 2000-08-01 | National Instruments Corporation | System and method for controlling access to memory configured within an I/O module in a distributed I/O system |
US6314482B1 (en) * | 1999-03-19 | 2001-11-06 | International Business Machines Corporation | Method and system for indexing adapters within a data processing system |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040215792A1 (en) * | 2003-01-21 | 2004-10-28 | Equallogic, Inc. | Client load distribution |
US8499086B2 (en) * | 2003-01-21 | 2013-07-30 | Dell Products L.P. | Client load distribution |
US8612616B2 (en) | 2003-01-21 | 2013-12-17 | Dell Products, L.P. | Client load distribution |
US20090043932A1 (en) * | 2007-08-10 | 2009-02-12 | Oreste Bernardi | Method and Device for Enumeration |
US7831742B2 (en) * | 2007-08-10 | 2010-11-09 | Qimonda Ag | Method and device for enumeration |
Also Published As
Publication number | Publication date |
---|---|
US20030212823A1 (en) | 2003-11-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7483928B2 (en) | Storage operation management program and method and a storage management computer | |
KR100288020B1 (en) | Apparatus and Method for Sharing Hot Spare Drives in Multiple Subsystems | |
US8086906B2 (en) | Correlating hardware devices between local operating system and global management entity | |
US8694820B2 (en) | Failure recovery method | |
US7320060B2 (en) | Method, apparatus, and computer readable medium for managing back-up | |
US7139940B2 (en) | Method and apparatus for reporting global errors on heterogeneous partitioned systems | |
EP0723223B1 (en) | Identifying controller pairs in a dual controller disk array | |
CN100461112C (en) | Apparatus and method for dynamically improving memory affinity of logical partitions | |
US20070094357A1 (en) | Computer system for balancing access load of storage systems and control method therefor | |
KR20030033109A (en) | Error recovery | |
JP2002323987A (en) | Method and system for eliminating duplicate reported errors in logically partitioned multiprocessing system | |
US7565568B1 (en) | Method and system for virtualization switch failover | |
US6785778B2 (en) | Share masks and alias for directory coherency | |
US7356619B2 (en) | Method and apparatus for dynamic management of input/output subsystem addressing | |
US5625841A (en) | Data processing system | |
CN107729182B (en) | Data storage and access method and device | |
CN117076170A (en) | Hard disk data processing method, device, computer equipment and storage medium | |
CN116974489A (en) | Data processing method, device and system, electronic equipment and storage medium | |
US7234085B2 (en) | Method, system, and product for hierarchical encoding of field replaceable unit service indicators | |
EP0633528A2 (en) | Maintenance of a data processing system | |
US8694538B1 (en) | Method and apparatus for logging write requests to a storage volume in a network data switch | |
CN112948344A (en) | Database backup server and system based on HDFS technology | |
CN116737486A (en) | Method, device, equipment and medium for determining running state of distributed storage system | |
CN116932635A (en) | Method for processing read request, distributed database and server | |
CN114281269A (en) | Data caching method and device, storage medium and electronic device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ANDERSON, GARY DEAN;KNIGHT, RICHARD JAMIE;PATEL, JAYESHKUMAR M.;REEL/FRAME:012904/0853;SIGNING DATES FROM 20020506 TO 20020508 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026894/0001Effective date: 20110817 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20200408 |
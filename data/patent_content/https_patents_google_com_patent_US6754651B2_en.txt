FIELD OF THE INVENTION
The present invention relates to mining of generalized disjunctive association rules. It relates generally to data processing, and more particularly to “computer database mining” in which association rules are discovered. In particular, this invention introduces the concept of a disjunctive association rule, a generalized disjunctive association rule and provides an efficient way to compute them.
BACKGROUND OF THE INVENTION
Let I={i1, i2 . . . , im} be a set of literals, called items. Let D be a set of transactions where each transaction t is a subset of the set of items I. We say that a transaction t contains X(XI), if Xt. We use T(X) to denote the set of all transactions that contain X. An association rule is an implication of the form XY, where X⊂I, Y⊂I and X∩Y=φ. The rule XY holds in the transaction set D with confidence c if c % of transactions in L that contain X also contain Y. The rule XY has support s in the transaction set if s% of transactions in D contain X 4 Y. Given a set of transactions D, the problem of mining association rules is to generate all association rules that have support and confidence “greater than the user-specified minimum support (minsupp) and minimum confidence (minconf) respectively [1,2,3]. In what follows, we use ‘item’ and ‘attribute’ interchangeably.
Mining algorithms have received considerable research attention. In one approach [2] the authors take into account the taxonomy (is-a hierarchy) on the items, and find associations between items at any level of the taxonomy. For example, given a taxonomy that says that jackets is-a outerwear is-a clothes, we may infer a rule that “people who buy outerwear tend to buy shoes”. This rule may hold even if rules that “people who buy jackets tend to buy shoes”, and “people who buy clothes tend to buy shoes” do not hold. Users are often interested only in a subset of association rules. For example, they may only want rules that contain a specific item or rules that contain children of a specific item in a hierarchy. In [3], the authors consider the problem of integrating constraints that are boolean expressions over the presence or absence of items into the association discovery algorithm.
Instead of applying these constraints as a post-processing step, the integrate constraints into the algorithm, which reduces the execution time.
So far, knowledge discovery in data mining has focussed on association rules with conjuncts (AB→XY) only. Specifically, traditional association rules cannot capture contextual inter-relationships among attributes.
U.S. Pat. Nos. 5,794,209 and 5,615,341 describe a system and method for discovering association rules by comparing the ratio of the number of times each itemset appears in a dataset to the number of time particular subsets of the itemset appear in the database, in relation to a predetermined minimum confidence value. The specified system and method however are limited in the use of operators for defining the association rules. Logical completeness of association rule discovery requires a functionally complete set of operators ([ (and), (or), (not)], [⊕(xor), ].
Furthermore, the method does not utilize contextual information to define the association rules and is therefore limited in the effectiveness of the result. U.S. Pat. No. 5,615,341 is further limited by the use of hierarchical taxonomies in the determination of the association rules.
THE OBJECT AND SUMMARY OF THE INVENTION
The object of this invention is to provide a system and method for mining a new kind of rules called disjunctive association rules for analyzing data and discovering new kind of relationships between data items.
Another object of the present invention is to incorporate the , , as well as the ⊕ operators in the discovery of the disjunctive association rules.
To achieve the said objective this invention provides A method for mining data characterized in that it generates generalized disjunctive association rules to capture the relationships between data items with reference to a given context to provide improved data analysis independently of taxonomies, comprising the steps of:
generating a list of all possible data items that can influence said context,
discovering association rules for data items in said that co-occur based on a defined overlap threshold within said context,
clustering said data items to form a set of generalized disjunctive rules based on a defined confidence (and/or support) threshold, and
iterating the above steps until all items in said list are covered.
The said list is generated by selecting those data items that have a significant overlap with said context.
The said association rules are discovered by merging data items that overlap above said defined threshold within said context and confirmation that the strength of the relation is beyond a defined minimum support value.
The Clustering is agglomerative.
The discovery of said association rules uses a functionally complete set of operators including “AND”, “OR”, NOT” and “EXCLUSIVE-OR”.
The above method is applied to clustering of query results in a search engine where the query is the context, a word is mapped to an item, a document to a transaction, the recall is the confidence, and the resulting disjuncts are the labels of the clusters of documents.
The said method is extended to interactive query refinement.
The above method is applied to customer targeting by determining generalized disjunctive association rules on data such as customer purchase history, customer segments, product information and the like.
The above method is further used for making recommendations to customers where the customer's purchase history is the context and the generalized disjunctive association rules provide the recommendations.
The above method is applied to gene analysis by finding the generalized disjunctive association rules from gene databases.
The instant method is applied to cause-and-effect analysis in applications such as medical analysis, market survey analysis and census analysis, by finding generalized disjunctive association rules from the database of causes and effects.
The method is applied to fraud detection by finding generalized disjunctive association rules from transaction databases.
The present invention further relates to a system for mining data characterized in that it generates generalized disjunctive association rules to capture the relationships between data items with reference to a given context to provide improved data analysis independently of taxonomies, comprising:
means for generating a list of all possible data, items that can influence said context,
means for discovering association rules for data items in said list that co-occur based on a defined overlap threshold within said context,
means for clustering said data items to form a set of generalized disjunctive rules based on a defined confidence (and/or support) threshold, and
means for iterating the above steps until all items in said list are covered.
The said list is generated by means for selecting those data items that have a significant overlap with said context.
The said association rules are discovered by means for merging data items that overlap above said defined threshold within said context and confirmation that the strength of the relation is beyond a defined minimum support value.
The said clustering is agglomerative.
The discovery of said association rules uses a functionally complete set of operators including “AND”, “OR”, NOT” and “EXCLUSIVE-OR”.
The above system is used for clustering of query results in a search engine where the query is the context, a word is mapped to an item, a document to al transaction, the recall is the confidence, and the resulting disjuncts are the labels of the clusters of documents.
The system is extended to interactive query refinement.
The said system is used for customer targeting by means for determining generalized disjunctive association rules on data such as customer purchase history, customer segments, product information and the like.
The said system is used for making recommendations to customers where the customer's purchase history is the context and the generalized disjunctive association rules provide the recommendations.
The above system is further used for gene analysis by means for finding the generalized disjunctive association rules from gene databases.
The above system is also used for cause-and-effect analysis in applications such as medical analysis, market survey analysis and census analysis, by means for finding generalized disjunctive association rules from the database of causes and effects.
The system is used for fraud detection by means for finding generalized disjunctive association rules from transaction databases.
The instant invention further provides a computer program product comprising computer readable program code stored on computer readable storage medium embodied therein for mining data characterized in that it generates generalized disjunctive association rules to capture the relationships between data items with reference to a given context to provide improved data analysis independently of taxonomies, comprising
computer readable program code means configured for generating a list of all possible data items that can influence said context,
computer readable program code means configured for discovering association rules for data items in said list that co-occur based on a defined overlap threshold within said context,
computer readable program code means configured for clustering said data items to form a set of generalized disjunctive rules based on a defined confidence (and/or support) threshold, and
computer readable program code means configured for iterating the above steps until all items in said list are covered.
The said list is generated by computer readable program code means configured for selecting those data items that have a significant overlap with said context.
The said association rules are discovered by computer readable program code means configured for merging data items that overlap above said defined threshold using traditional association rules within said context and confirmation that the strength of the relation is beyond a defined minimum support value.
The said clustering is agglomerative.
The discovery of said association rules uses a functionally complete set of operators including “AND”, “OR”, NOT” and “EXCLUSIVE-OR”.
The above computer program product is configured for clustering of query results in a search engine where the query is the context, a word is mapped to an item, a document to a transaction, the recall is the confidence, and the resulting disjuncts are the labels of the clusters of documents.
The said computer program product is extended to interactive query refinement
The above computer program product is configured for customer targeting by computer readable program code means configured for determining generalized disjunctive association rules on data such as customer purchase history, customer segments, product information and the like.
The instant computer program product is configured for making recommendations to customers where the customer's purchase history is the context and the generalized disjunctive association rules provide the recommendations.
The computer program product is configured for gene analysis by computer readable program code means configured for finding the generalized disjunctive association rules from gene databases.
The above computer program product is configured for cause-and-effect analysis in applications such as medical analysis, market survey analysis and census analysis, by computer readable program code means configured for finding generalized disjunctive association rules from the database of causes and effects.
The instant computer program product is configured for fraud detection by computer readable program code means configured for finding generalized disjunctive association rules from transaction databases.
BRIEF DESCRIPTION OF THE DRAWINGS
The invention will now be described with reference to the accompanying drawings:
FIGS. (1 a) to (1 d) show four types of disjunctive rules.
FIG. 2 shows an example of conjunctive overlap.
FIG. 3 shows a brute force algorithm to generate all disjunctive association rules.
FIG. 4 shows a flowchart for Mining generalized Disjunctive Association Rules.
FIG. 5 shows agglomerating conjuncts disjunctively with respect to a context.
DETAILED DESCRIPTION OF THE DRAWINGS
FIG. 1 enumerates various types of intersections among attributes A, B, C and the kind of disjunctive association rules that arise from them. In these diagrams, C is the context which captures the relationship between A and B.
FIG. 1(c) describes the case where T(C)T(A)∪T(B), which leads to rules of the form CAB. Note that CAB can be true even if CA and CB are not (they may lack confidence and/or support and thus fail to become rules). Lowering the value of minimum support and/or minimum confidence may yield CA and CB as rules, but such lowering may lead to the discovery of trivial rules, and does not capture this particular disjunctive relationship between A and B with respect to C with the original level of confidence and support.
FIG. 1(d) shows the case where T(C)T(A)∪T(B) such that A and B have no intersection.
FIG. 1(a) describes the case where T(A)∪T(B)T(C) which means ABC.
Similarly, FIG. 1(b) denotes the exclusive-or relationship between A and B. Again, A and B may have a significant overlap outside C. Traditional association rules are incapable of expressing (discovering) such contextual relationships.
FIG. 2 shows the case where there may be a significant intersection (overlap) among attributes (A,B,E,F) with respect to C. It is easy to see that such conjunctive overlaps may occur in all the four kinds of rules in FIG. 1.
Definition 1: The support of a disjunctive rule is defined as the cardinality of the union of the disjunctive terms in the antecedent intersected with the union of the disjunctive terms in the consequent, divided by the total number of transactions. For example,
support (ABC)=support(CAB)=|[T(A)∩T(B)]|T(C)|/|D|
support (A⊕BC) support(CA⊕B)=|[T(A)∪T(B)−T(A∩B)]∩T(C)|/|D|.
(A⊕BC) indicates that |(T(A)∩T(B)∩T(C)|.
Definition 2: The confidence of a disjunctive rule is defined as the cardinality of the union of the disjunctive terms in the antecedent intersected with the union of the disjunctive terms in the consequent, divided by the cardinality or the union of disjunctive terms in the antecedent. For example,
confidence (ABC)=confidence(A⊕BC)=|T(A)∪T(B)∩T(C)|/|[T(A)∪T(B)].
confidence (CAB)=confidence(A⊕BC)=|[T(A)∪T(B)]∩T(C)|/|T(C)|
Definition 3: A k-disjunctive rule is a rule that has at most k items in the antecedent or the consequent of a disjunctive rule: A1A2 . . . AkC. A generated k-disjunctive rule is a k-disjunctive rule where each item in the antecedent (or consequent) Ai can be a conjunction of terms Ai1Ai2Aim.
k is a user-defined threshold. Obviously, as opposed to traditional conjunctive rules, shorter disjunctive rules are more interesting than longer ones.
Definition 4: A context is any arbitrary subset (typically based on some criteria) of the set of transactions, D.
A natural choice for a context may be the subset of transactions that include item (attribute) iεI (as is typically done in traditional mining). A more general example could be the set of transactions done by a particular group of people who buy X, but not Y or Z. A context defines a subspace of interest to focus the search for rules. A context may be also be chosen based on the number of occurrences (minsupp). So, support can be used as a factor to prune the space of contexts. Such an approach would lead to finding generalised disjunctive association rules, which satisfy both minconf and minsupp. There may be applications where exceptional patterns (which lack support) are more interesting, for example, fraud detection, where the minsupp constraint is dropped.
We make the following observations with regard to disjunctive rules.
Observation 1 (subsumption) When AC we need not consider A as a disjunct in the antecedent for consequent C (nor C as a disjunct in the consequent for antecedent A) i.e. rules of the form ABC and ABC. This is because AC is a stronger rule and automatically implies the disjunctive rules.
Observation 2 (interdependence) When AB, we do not consider the disjunction of A and B, i.e., rules of the form ABC as well as CAB Since the relationship between A and B is known in the general case, it can be inferred even within the context. It is redundant to consider both together within the context of C.
Observation 3 (independence) When |T(A)∩T(C)|<cutoff, we do not consider A as an antecedent or consequent for C, i.e. rules of the form ABC and CAB. This indicates that the relationship between A and C is weak, and one only trivially supports the other. Eliminating such items prevents the generation of trivial rules (rules with a very large number of disjunctive antecedents or consequents).
The cutoff parameter is used to weed away trivial contributions in a disjunction. The value of cutoff may be determined by the user defined input parameter k. Since a rule may have at most k disjuncts, cutoff (minconf/k)*|T(C)|, where C is the context.
Observation 4 (vacuous tautology) When all the transactions in D contain a subset of items, then it is redundant to consider their influence on any context. These occurs when A and its negation (A) are both attributes. In this case, every context CAA.
The algorithm in FIG. 3 makes use of the above observations in pruning the search space. It is exhaustive and finds all generalised disjunctive rules. However, when the number of attributes is large, the above observations are not enough to prune the search space substantially. In such cases, we use agglomerative clustering to find a subset of the set of all generalised disjunctive rules (FIG. 4).
Algorithm GDAR
We detail a generalised disjunctive association rule (GDAR) mining algorithm which mines for rules with high confidence with respect to a given context. We emphasize that these relationships may not be valid given another context or outside the chosen one. In this sense, the algorithm finds ‘local’ relationships as opposed to the ‘global’ ones found by traditional mining algorithms.
FIG. 4 shows the basic block diagram of the algorithm:
1. Given a context C, make a list of all possible items that can influence it. This list has items, which has significant overlap with the context. We get this by pruning the list based on the observations.
2. The next step involves merging items, which co-occur frequently within this context C. We merge such frequently co-occurring items to form conjuncts within the disjuncts. All items that have more than a user-specified (threshold) overlap are merged to form disjunctive units for the next step. This can also be done using traditional association rules [1] within the context, using appropriate values for support (observation 3) and a high value of confidence. For example, the rule ABCD leads to the conjunct ABCD which could be a disjunct in a generalised disjunctive association rule.
3. The last step agglomerates over all pairs of conjunct terms of items in candidate set, to merge them into disjunct of conjuncts. The algorithm selects a pair of conjuncts A, B which has the highest confidence for CAB. If A and B are mutually exclusive (below another user-defined threshold e) in the context of C, we get Ca⊕B. If the confidence is above a user specified threshold it becomes a rule otherwise the conjuncts are merged into AB (A⊕B) and get added to the candidate list. The algorithm is iterated until no more pairs are left.
Some applications of this system and method are given below:
clustering of query results in search engines. A word is mapped to an item, and a document to a transaction. The query is the context, the k disjuncts are the labels of the clusters of documents. The recall is the confidence and ambiguity is related to k. The precision is inversely proportional to k. Reverse and forward indexing can be used for efficient word-to-document lookup and document-to-word lookup respectively. Each disjunct may be a word or a phrase (set of words).
The above method for clustering can also be extended for interactive query refinement, where a user's feedback about the relevance of the k clusters to his/her query is used to refine the query. For a query Q, and a selection P (where P is any generalised disjunctive set of terms), the refined query is QP.
A method for customer targeting by finding generalised disjunctive association rules on customer purchase data, customer segments, and product information.
An offline method for product recommendation to customers, where the customer's purchase history is the context, and the k disjuncts are the recommendations.
An online method for product recommendation to customers, where the customer's current purchase is the context, and the items in the k disjuncts which the customer would not buy on his own initiative are recommended.
A method for gene analysis by finding generalised disjunctive association rules from gene databases.
An improved method for cause-and-effect analysis, when given a database of causes and occurrences, to find a relation among them. Examples of such databases include medical history, census, market survey.
A method for fraud detection by finding generalised disjunctive association rules from databases.
Advantages
The application of disjunctive association; rules is at least as widespread as those of traditional association rules. Generalised disjunctive association rules have important implications in the fields of ecommerce, information retrieval, database analysis.
Novel way of analysing data and discovering a new kind of relationship.
Introduction of a new kind of rules, disjunctive association rules (FIG. 1).
Further generalisation of disjunctive association rules (OR/XORs of conjuncts) (FIGS. 1,2).
Generalisation of the notion of a context (as detailed in definition 4).
Finding inter-relationships among attributes with respect to a context (FIGS. 1, 2).
An efficient method (O(|I|2) to mine generalised disjunctive association rules.
A novel use of agglomerative clustering to find such rules (FIGS. 4, 5).
Generalisation of the taxonomy [2] approach; this method finds rules that cannot be found by the taxonomy approach.
A taxonomy-free approach improves [2]; this method does: not require taxonomies.
References
1. R. Agrawal, T. Imielinski, A. Swami, “Mining Association Rules between sets of items in Large Databases”, Proc. of ACM STGMOD Conf. on Management of Dat, 207-216.
2. R. Srikant and R. Agrawal, Mining Generalized Association Rules”, Proc. of the 21st VLDB Conf. Zurich, Switzerland, 1995.
3. R. Srikant, Q. Vu, R. Agrawal, Mining Association Rules with Item Constraints”, AAAI, 1997.
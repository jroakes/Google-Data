US20140157209A1 - System and method for detecting gestures - Google Patents
System and method for detecting gestures Download PDFInfo
- Publication number
- US20140157209A1 US20140157209A1 US13/796,772 US201313796772A US2014157209A1 US 20140157209 A1 US20140157209 A1 US 20140157209A1 US 201313796772 A US201313796772 A US 201313796772A US 2014157209 A1 US2014157209 A1 US 2014157209A1
- Authority
- US
- United States
- Prior art keywords
- gesture
- application
- gestures
- action
- detecting
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/017—Gesture based interaction, e.g. based on a set of recognized hand gestures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/011—Arrangements for interaction with the human body, e.g. for user immersion in virtual reality
- G06F3/012—Head tracking input arrangements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/10—Image acquisition
- G06V10/12—Details of acquisition arrangements; Constructional details thereof
- G06V10/14—Optical characteristics of the device performing the acquisition or on the illumination arrangements
- G06V10/143—Sensing or illuminating at different wavelengths
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V30/00—Character recognition; Recognising digital ink; Document-oriented image-based pattern recognition
- G06V30/10—Character recognition
- G06V30/24—Character recognition characterised by the processing or recognition method
- G06V30/242—Division of the character sequences into groups prior to recognition; Selection of dictionaries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/20—Movements or behaviour, e.g. gesture recognition
- G06V40/28—Recognition of hand or arm movements, e.g. recognition of deaf sign language
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2203/00—Indexing scheme relating to G06F3/00 - G06F3/048
- G06F2203/01—Indexing scheme relating to G06F3/01
- G06F2203/011—Emotion or mood input determined on the basis of sensed human body parameters such as pulse, heart rate or beat, temperature of skin, facial expressions, iris, voice pitch, brain activity patterns
Definitions
- This invention relates generally to the user interface field, and more specifically to a new and useful method and system for detecting gestures in the user interface field.
- FIG. 1 is a schematic representation of a method of a preferred embodiment
- FIG. 2 is detailed flowchart representation of a obtaining images of a preferred embodiment
- FIG. 3 is a flowchart representation of detecting a motion region of a preferred embodiment
- FIGS. 4A and 4B are schematic representations of example gestures using a combination of hand/s and facial features of a user in accordance with the preferred embodiment
- FIG. 5 is a flowchart representation of computing feature vectors of a preferred embodiment
- FIG. 6 is a flowchart representation of determining a gesture input
- FIG. 7 is a schematic representation of tracking motion of an object
- FIG. 8 is a schematic representation of transitioning gesture detection process between processing units
- FIG. 9 is a schematic representation of a system of a preferred embodiment.
- FIG. 10 is a schematic representation of a system of a preferred embodiment
- FIG. 11 is a flowchart representation of a method of a preferred embodiment
- FIGS. 12-14 are schematic representations of exemplary scenarios of a method of a preferred embodiment
- FIGS. 15A-15J are schematic representations of a series of example gestures using one or more hands of a user in accordance with the preferred embodiment.
- FIG. 16 is a schematic representation of an exemplary advertisement based gesture of a preferred embodiment.
- a method for detecting gestures of a preferred embodiment includes the steps of obtaining images from an imaging unit S 110 ; identifying object search area of the images S 120 ; detecting a first gesture object in the search area of an image of a first instance S 130 ; detecting a second gesture object in the search area of an image of at least a second instance S 132 ; and determining an input gesture from the detection of the first gesture object and the at least second gesture object S 140 .
- the method functions to enable an efficient gesture detection technique using simplified technology options.
- the method primarily utilizes object detection as opposed to object tracking (though object tracking may additionally be used).
- a gesture is preferably characterized by a real world object transitioning between at least two configurations.
- the detection of a gesture object in one configuration in at least one image frame may additionally be used as a gesture.
- the method can preferably identify images of the object (i.e., gesture objects) while in various stages of configurations. For example, the method can preferably be used to detect a user flicking their fingers from side to side to move forward or backwards in an interface. Additionally, the steps of the method are preferably repeated to identify a plurality of types of gestures.
- gestures may be sustained gestures (e.g., such as a thumbs-up), change in orientation of a physical object (e.g., flicking fingers and/or a hand side to side), combined object gestures (e.g., using face and hand to signal a gesture), gradual transition of gesture object orientation, changing position of detected object, and any suitable pattern of detected/tracked objects.
- the method may be used to identify a wide variety of gestures and types of gestures through one operation process.
- the method is preferably implemented through an imaging unit capturing video such as a RGB digital camera like a web camera or a camera phone, but may alternatively be implemented by any suitable imaging unit such as stereo camera, 3D scanner, or IR camera.
- the imaging unit can be directly connected to and/or integrated with a display, user interface, or other user components.
- the imaging unit can be a discrete element within a larger system that is not connected to any particular device, display, user interface, or the like.
- the imaging unit is connectable to a controllable device, which can include for example a display and/or audio channel.
- the controllable device can be any suitable electronic device or appliance subject to control though electrical signaling.
- the method preferably leverages image based object detection algorithms, which preferably enables the method to be used for gestures involving arbitrarily complex gestures.
- the method can preferably detect gestures involving finger movement and hand position without sacrificing operation efficiency or increasing system requirements.
- One exemplary application of the method preferably includes being used as a user interface to a computing unit such as a personal computer, a mobile phone, an entertainment system, or a home automation unit.
- the method may be used for computer input, attention monitoring, mood monitoring, in an advertisement unit and/or any suitable application.
- the system implementing the method can preferably be activated by clicking a button, using an ambient light sensor to detect a user presence, detecting a predefined action (e.g., placing hand over the light sensor and taking it off within a few seconds), or any suitable technique for activating and deactivating the method.
- a predefined action e.g., placing hand over the light sensor and taking it off within a few seconds
- Step S 110 which includes obtaining images from an imaging unit S 110 , functions to collect data representing physical presence and actions of a user.
- the images are the source from which gesture input will be generated.
- the imaging unit preferably captures image frames and stores them. Depending upon ambient light and other lighting effects such as exposure or reflection, it optionally performs pre-processing of images for later processing stages (shown in FIG. 2 ).
- the camera is preferably capable of capturing light in the visible spectrum like a RGB camera, which may be found in web cameras, web cameras over the internet or local Wi-Fi/home/office networks, digital cameras, smart phones, tablet computers, and other computing devices capable of capturing video. Any suitable imaging system may alternatively be used.
- a single unique camera is preferably used, but a combination of two or more cameras may alternatively be used.
- the captured images may be multi-channel images or any suitable type of image. For example, one camera may capture images in the visible spectrum, while a second camera captures near infrared spectrum images. Captured images may have more than one channel of image data such as RGB color data, near infra-red channel data, a depth map, or any suitable image representing the physical presence of a objects used to make gestures. Depending upon historical data spread over current and prior sessions, different channels of a source image may be used at different times. Additionally, the method may control a light source for when capturing images.
- Illuminating a light source may include illuminating a multi spectrum light such as near infrared light or visible light source.
- a multi spectrum light such as near infrared light or visible light source.
- One or more than one channel of the captured image may be dedicated to the spectrum of a light source.
- the captured data may be stored or alternatively used in real-time processing.
- Pre-processing may include transforming image color space to alternative representations such as Lab, Luv color space. Any other mappings that reduce the impact of exposure might also be performed. This mapping may also be performed on demand and cached for subsequent use depending upon the input needed by subsequent stages. Additionally or alternatively, preprocessing may include adjusting the exposure rate and/or frame rate depending upon exposure in the captured images or from reading sensors of an imaging unit.
- the exposure rate may also be computed by taking into account other sensors such as strength of GPS signal (e.g., providing insight into if the device is indoor or outdoor), time of the day or year.
- the system may also use the location of a device via WiFi points, GPS signal, or any other way to determinate the approximate location in order to tune the image capture process. This would typically impact frame rate of the images.
- the exposure may alternatively be adjusted based on historical data.
- an instantaneous frame rate is preferably calculated and stored. This frame rate data may be used to calculate and/or map gestures to a reference time scale.
- Step S 120 which includes identifying object search area of the images, functions to determine at least one portion of an image to process for gesture detection. Identifying an object search area preferably includes detecting and excluding background areas of an image and/or detecting and selecting motion regions of an image. Additionally or alternatively, past gesture detection and/or object detection may be used to determine where processing should occur. Identifying object search area preferably reduces the areas where object detection must occur thus decreasing runtime computation and increasing accuracy. The search area may alternatively be the entire image. A search area is preferably identified for each image of obtained images, but may alternatively be used for a group plurality of images.
- a background estimator module When identifying an object search area, a background estimator module preferably creates a model of background regions of an image. The non-background regions are then preferably used as object search areas. Statistics of image color at each pixel are preferably built from current and prior images frames. Computation of statistics may use mean color, color variance, or other methods such as median, weighted mean or variance, or any suitable parameter. The number of frames used for computing the statistics is preferably dependent on the frame rate or exposure. The computed statistics are preferably used to compose a background model. In another variation, a weighted mean with pixels weighted by how much they differ from an existing background model may be used. These statistical models of background area are preferably adaptive (i.e., the background model changes as the background changes).
- a background model will preferably not use image regions where motion occurred to update its current background model. Similarly, if a new object appears and then does not move for a number of subsequent frames, the object will preferably in time be regarded as part of the background. Additionally or alternatively, creating a model of background regions may include applying an operator over a neighborhood image region of a substantial portion of every pixel, which functions to create a more robust background model. The span of a neighborhood region may change depending upon current frame rate or lighting. A neighborhood region can increase when frame rate is low in order to build more a robust and less noisy background model.
- One exemplary neighborhood operator may include a Gaussian kernel.
- Another exemplary neighborhood operator is a super-pixel based neighborhood operator that computes (within a fixed neighborhood region) which pixels are most similar to each other and group them in one super-pixel. Statistics collection is then preferably performed over only those pixels that classify in the same super-pixel as the current pixel.
- One example of super-pixel based method is to alter behavior if the gradient magnitude for a pixel is above a specified threshold.
- identifying an object search area may include detecting a motion region of the images.
- Motion regions are preferably characterized by where motion occurred in the captured scene between two image frames.
- the motion region is preferably a suitable area of the image to find gesture objects.
- a motion region detector module preferably utilizes the background model and a current image frame to determine which image pixels contain motion regions.
- detecting a motion region of the images preferably includes performing a pixel-wise difference operation and computing probability a pixel has moved.
- the pixel-wise difference operation is preferably computed using the background model and a current image. Motion probability may be calculated in a number of ways.
- a Gaussian kernel (exp( ⁇ SSD(x current , x background )/s) is preferably applied to a sum of square difference of image pixels. Historical data may additionally be down weighted as motion moves further away in time from the current frame.
- a sum of square difference (SSD function) may be computed over any one channel or any suitable combination of channels in the image. A sum of absolute difference per channel function may alternatively be used in place of the SSD function. Parameters of the operation may be fixed or alternatively adaptive based on current exposure, motion history, and ambient light and user preferences.
- a conditional random field based function may be applied where the computation of each pixel to be background uses pixel difference information from neighborhood pixels, image gradient, and motion history for a pixel, and/or the similarity of a pixel compared to neighboring pixels.
- the probability image may additionally be filtered for noise.
- noise filtering may include running a motion image through a morphological erosion filter and then applying a dilation or Gaussian smoothing function followed by applying a threshold function.
- Different algorithms may alternatively be used.
- Motion region detection is preferably used in detection of an object, but may additionally be used in the determination of a gesture. If the motion region is above a certain threshold the method may pause gesture detection. For example, when moving an imaging unit like a smartphone or laptop, the whole image will typically appear to be in motion. Similarly motion sensors of the device may trigger a pausing of the gesture detection.
- Steps S 130 and S 132 which include detecting a first gesture object in the search area of an image of a first instance and detecting a second gesture object in the search area of an image of at least a second instance, function to use image object detection to identify objects in at least one configuration.
- the first instance and the second instance preferably establish a time dimension to the objects that can then be used to interpret the images as a gesture input in Step S 140 .
- the system may look for a number of continuous gesture objects.
- a typical gesture may take approximately 300 milliseconds to perform and span approximately 3-10 frames depending on image frame rate. Any suitable length of gestures may alternatively be used. This time difference is preferably determined by the instantaneous frame rate, which may be estimated as described above.
- Object detection may additionally use prior knowledge to look for an object in the neighborhood of where the object was detected in prior images.
- a gesture object is preferably a portion of a body such as a hand, pair of hands, a face, portion of a face, or combination of one or more hands, a face, user object (e.g., a phone) and/or any other suitable identifiable feature of the user.
- the gesture object can be a device, instrument or any suitable object.
- the user is preferably a human but may alternatively be any animal or device capable of creating visual gestures.
- a gesture involves an object(s) in a set of configuration.
- the gesture object is preferably any object and/or configuration of an object that may be part of a gesture.
- a general presence of an object e.g., a hand
- a unique configuration of an object e.g., a particular hand position viewed from a particular angle
- a plurality of configurations may distinguish a gesture object (e.g., various hand positions viewed generally from the front).
- a plurality of objects may be detected (e.g., hands and face) for any suitable instance.
- a gesture is preferably characterized by an object transitioning between two configurations. This may be holding a hand in a first configuration (e.g., a fist) and then moving to a second configuration (e.g., fingers spread out). Each configuration that is part of a gesture is preferably detectable.
- a detection module preferably uses a machine-learning algorithm over computed features of an image. The detection module may additionally use online leaning which functions to adapt gesture detection to a specific user. Identifying the identity of a user through face recognition may provide additional adaption of gesture detection. Any suitable machine learning or detection algorithms may alternatively be used.
- the system may start with an initial model for face detection, but as data is collected for detection from a particular user the model may be altered for better detection of the particular face of the user.
- the first gesture object and the second gesture object are typically the same physical object in different configurations. There may be any suitable number of detected gesture objects.
- a first gesture object may be a hand in a fist and a second gesture object may be an opened hand.
- the first gesture object and the second gesture object may be different physical objects.
- a first gesture object may be the right hand in one configuration
- the second gesture object may be the left hand in a second configuration.
- gesture object may be the combination of multiple physical objects such as multiple hands, objects, faces and may be from one or more users.
- such gesture objects may include holding hands together, putting hand to mouth, holding both hands to side of face, holding an object in particular configuration or any suitable detectable configuration of objects.
- Step S 140 there may be numerous variations in interpretation of gestures.
- an initial step for detecting a first gesture object and/or detecting a second gesture object may be computing feature vectors S 144 , which functions as a general processing step for enabling gesture object detection.
- the feature vectors can preferably be used for face detection, face tracking, face recognition, hand detector, hand tracking, and other detection processes, as shown in FIG. 5 .
- Other steps may alternatively be performed to detect a gesture objects.
- Pre-computing a feature vector in one place can preferably enable a faster overall computation time.
- the feature vectors are preferably computed before performing any detection algorithms and after any pre-processing of an image.
- an object search area is divided into potentially overlapping blocks of features where each block further contains cells.
- Each cell preferably aggregates pre-processed features over the span of the cell through use of a histogram, by summing, by Haar wavelets based on summing/differencing or based on applying alternative weighting to pixels corresponding to cell span in the preprocessed features, and/or by any suitable method.
- Computed feature vectors of the block are then preferably normalized individually or alternatively normalized together over the whole object search area. Normalized feature vectors are preferably used as input to a machine-learning algorithm for object detection, which is in turn used for gesture detection.
- the feature vectors are preferably a base calculation that converts a representation of physical objects in an image to a mathematical/numerical representation.
- the feature vectors are preferably usable by plurality of types of object detection (e.g., hand detection, face detection, etc.), and the feature vectors are preferably used as input to specialized object detection. Feature vectors may alternatively be calculated independently for differing types of object detection.
- the feature vectors are preferably cached in order to avoid re-computing feature vectors. Depending upon a particular feature, various caching strategies may be utilized, some can share feature computation.
- Computing feature vectors is preferably performed for a portion of the image, such as where motion occurred, but may alternatively be performed for a whole image. Preferably, stored image data and motion regions is analyzed to determine where to compute feature vectors.
- Step S 140 which includes determining an input gesture from the detection of the first gesture object and the at least second gesture object, functions to process the detected objects and map them according to various patterns to an input gesture.
- a gesture is preferably made by a user by making changes in body position, but may alternatively be made with an instrument or any suitable gesture. Some exemplary gestures may include opening or closing of a hand, rotating a hand, waving, holding up a number of fingers, moving a hand through the air, nodding a head, shaking a head, or any suitable gesture.
- An input gesture is preferably identified through the objects detected in various instances.
- the detection of at least two gesture objects may be interpreted into an associated input based on a gradual change of one physical object (e.g., change in orientation or position), sequence of detection of at least two different objects, sustained detection of one physical object in one or more orientations, or any suitable pattern of detected objects.
- These variations preferably function by processing the transition of detected objects in time. Such a transition may involve the changes or the sustained presence of a detected object.
- One preferred benefit of the method is the capability to enable such a variety of gesture patterns through a single detection process.
- a transition or transitions between detected objects may be one variation indicate what gesture was made.
- a transition may be characterized by any suitable sequence and/or positions of a detected object.
- a gesture input may be characterized by a fist in a first instance and then an open hand in a second instance.
- the detected objects may additionally have location requirements, which may function to apply motion constraints on the gesture.
- location requirements may function to apply motion constraints on the gesture.
- Two detected objects may be required to be detected in substantially the same area of an image, have some relative location difference, have some absolute or relative location change, satisfy a specified rate of location change, or satisfy any suitable location based conditions.
- the first and the open hand may be required to be detected in substantially the same location.
- a gesture input may be characterized by a sequence of detected objects gradually transitioning from a fist to an open hand.
- the system may directly predict gestures once features are computed over images. So explicit hand detection/tracking may never happen and a machine-learning algorithm may be applied to predict gestures post identification of a search area.
- the method may additionally include tracking motion of an object.
- a gesture input may be characterized by detecting an object in one position and then detecting the object or a different object in a second position.
- the method may detect an object through sustained presence of a physical object in substantially one orientation.
- the user presents a single object to the imaging unit. This object in a substantially singular orientation is detected in at least two frames.
- the number of frames and threshold for orientation changes may be any suitable number.
- a thumbs-up gesture may be used as an input gesture. If the method detects a user making a thumbs-up gesture for at least two frames then an associated input action may be made.
- the step of detecting a gesture preferably includes checking for the presence of an initial gesture object(s). This initial gesture object is preferably an initial object of a sequence of object orientations for a gesture. If an initial gesture object is not found, further input is preferably ignored. If an object associated with at least one gesture is found the method proceeds to detect a subsequent object of gesture. These gestures are preferably detected by passing feature vectors of an object detector combined with any object tracking to a machine learning algorithm that predicts the gesture. A state machine, conditional logic, machine learning, or any suitable technique may be used to determine a gesture.
- the system may additionally use the device location (e.g., through WiFi points or GPS signal), lighting conditions, user facial recognition, and/or any suitable context of the images to modify gesture determination. For example, different gestures may be detected based on the context.
- an input is preferably transferred to a system, which preferably issues a relevant command.
- the command is preferably issued through an application programming interface (API) of a program or by calling OS level APIs.
- the OS level APIs may include generating key and/or mouse strokes if for example there are no public APIs for control.
- a plugin or extension may be used that talks to the browser or tab.
- Other variations may include remotely executing a command over a network.
- the hands and a face of a user are preferably detected through gesture object detection and then the face object preferably augments interpretation of a hand gesture.
- the intention of a user is preferably interpreted through the face, and is used as conditional test for processing hand gestures. If the user is looking at the imaging unit (or at any suitable point) the hand gestures of the user are preferably interpreted as gesture input. If the user is looking away from the imaging unit (or at any suitable point) the hand gestures of the user are interpreted to not be gesture input. In other words, a detected object can be used as an enabling trigger for other gestures.
- the mood of a user is preferably interpreted.
- the facial expressions of a user serve as a configuration of the face object.
- a sequence of detected objects may receive different interpretations.
- gestures made by the hands may be interpreted differently depending on if the user is smiling or frowning.
- user identity is preferably determined through face recognition of a face object. Any suitable technique for facial recognition may be used.
- the detection of a gesture may include applying personalized determination of the input. This may involve loading personalized data set.
- the personalized data set is preferably user specific object data.
- a personalized data set could be gesture data or models collected from the identified user for better detection of objects.
- a permissions profile associated with the user may be loaded enabling and disabling particular actions.
- some users may not be allowed to give gesture input or may only have a limited number of actions.
- at least two users may be detected, and each user may generate a first and second gesture object.
- Facial recognition may be used in combination with a user priority setting to give gestures of the first user precedence over gestures of the second user.
- user characteristics such as estimated age, distance from imaging system, intensity of gesture, or any suitable parameter may be used to determine gesture precedence.
- the user identity may additionally be used to disambiguate gesture control hierarchy. For example, gesture input from a child may be ignored in the presence of adults.
- any suitable type of object may be used to augment a gesture. For example, the left hand or right hand may augment the gestures.
- the method may additionally include tracking motion of an object S 150 , which functions to track an object through space.
- the location of the detected object is preferable tracked by identifying the location in the two dimensions (or along any suitable number of dimensions) of the image captured by the imaging unit, as shown in FIG. 7 .
- This location is preferably provided through the object detection process.
- the object detection algorithms and the tracking algorithms are preferably interconnected/combined such that the tracking algorithm may use object detection and the object detection algorithm may use the tracking algorithm.
- the method of a preferred embodiment may additionally include determining operation load of at least two processing units S 160 and transitioning operation to at least two processing units S 162 , as shown in FIG. 8 .
- These steps function to enable the gesture detection to accommodate processing demands of other processes.
- the operation of the steps that are preferably transitioned include identifying object search area, detecting at least a first gesture object, detecting at least a second gesture, tracking motion of an object, determining an input gesture to the lowest operation status of the at least two processing units, and/or any suitable processing operation.
- the operation status of a central processing unit (CPU) and a graphics processing unit (GPU) are preferably monitored but any suitable processing unit may be monitored.
- Operation steps of the method will preferably be transitioned to a processing unit that does not have the highest demand.
- the transitioning can preferably occur multiple times in response to changes in operation status.
- operation steps are preferably transitioned to the CPU.
- the operation steps are preferably transitioned to the GPU.
- the feature vectors and unique steps of the method preferably enable this processing unit independence.
- Modern architectures of GPU and CPU units preferably provide a mechanism to check operation load.
- a device driver preferably provides the load information.
- operating systems preferably provide the load information.
- the processing units are preferably pooled and the associated operation load of each processing unit checked.
- an event-based architecture is preferably created such that an event is triggered when a load on a processing unit changes or passes a threshold.
- the transition between processing unit is preferably dependent on the current load and the current computing state. Operation is preferably scheduled to occur on the next computing state, but may alternatively occur midway through a compute state.
- These steps are preferably performed for the processing units of a single device, but may alternatively or additionally be performed for computing over multiple computing units connected by internet or a local network.
- smartphones may be used as the capture devices, but operation can be transferred to a personal computer or a server.
- the transition of operation may additionally factor in particular requirements of various operation steps.
- Some operation steps may be highly parallelizable and be preferred to run on GPUs while other operation steps may be more memory intensive and be prefer a CPU.
- the decision to transition operation preferably factors in the number of operations each unit can perform per second, amount of memory available to each unit, amount of cache available to each unit, and/or any suitable operation parameters.
- system for detecting user interface gestures of a preferred embodiment includes a system including an imaging unit 210 , an object detector 220 , and a gesture determination module 230 .
- the imaging unit 210 preferably captures the images for gesture detection and preferably performs the steps substantially similar to those described in S 110 .
- the object detector 220 preferably functions to output identified objects.
- the object detector 220 preferably includes several sub-modules that contribute to the detection process such as a background estimator 221 , a motion region detector 222 , and data storage 223 .
- the object detector preferably includes a face detection module 224 and a hand detection module 225 .
- the object detector preferably works in cooperation with a compute feature vector module 226 .
- the system may include an object tracking module 240 for tracking hands, a face, or any suitable object. There may additionally be a face recognizer module 227 that determines a user identity.
- the system preferably implements the steps substantially similar to those described in the method above.
- the system is preferably implemented through a web camera or a digital camera integrated or connected to a computing device such as a computer, gaming device, mobile computer, or any suitable computing device.
- the system may additionally include a gesture service application 250 operable in an operating framework.
- the gesture service application 250 preferably manages gesture detection and responses in a plurality of contexts. For presence-based gestures, gestures may be reused between applications.
- the gesture service application 250 functions to ensure the right action is performed on an appropriate application.
- the operating framework is preferably a multi-application operating system with multiple applications and windows simultaneously opened and used.
- the operating framework may alternatively be within a particular computing environment such as in an application loading multiple contexts (e.g., a web browser) or any suitable computing environment.
- the gesture service application 250 is preferably coupled to changes in application status (e.g., changes in z-index of applications or changes in context of an application).
- the gesture service application 250 preferably includes a hierarchy model 260 , which functions to manage gesture-to-action responses of a plurality of applications.
- the hierarchy model 260 may be a queue, list, tree, or other suitable data object(s) that define priority of applications and gesture-to-action responses.
- a method for detecting a set of gestures of a preferred embodiment can include detecting an application change within a multi-application operating system S 210 ; updating an application hierarchy model for gesture-to-action responses with the detected application change S 220 ; detecting a gesture S 230 ; mapping the detected gesture to an action of an application S 240 ; and triggering the action S 250 .
- the method preferably functions to apply a partially shared set of gestures to a plurality of applications. More preferably the method functions to create an intuitive direction of presence-based gestures to a set of active applications.
- the method is preferably used in situations where a gesture framework is used throughout a multi-module or multi-application system, such as within an operating system.
- Gestures which may leverage common gesture heuristics between applications, are applied to an appropriate application based on the hierarchy model.
- the hierarchy model preferably defines an organized assignment of gestures that is preferably based on the order of application use, but may be based on additional factors as well.
- a response to a gesture is preferably initiated within an application at the highest level and/or with the highest priority in the hierarchy model.
- the method is preferably implemented by a gesture service application operable within an operating framework such as an operating system or an application with dynamic contexts.
- Step S 210 which includes detecting an application change within a multi-application operating system, functions to monitor events, usage, and/or context of applications in an operating framework.
- the operating framework is preferably a multi-application operating system with multiple applications and windows simultaneously opened and used.
- the operating framework may alternatively be within a particular computing environment such as in an application that is loading multiple contexts (e.g., a web browser loading different sites) or any suitable computing environment.
- Detecting an application change preferably includes detecting a selection, activation, closing, or change of applications in a set of active applications. Active applications may be described as applications that are currently running within the operating framework.
- the change of applications in the set of active applications is the selection of a new top-level application (e.g., which app is in the foreground or being actively used).
- Detecting an application change may alternatively or additionally include detecting a loading, opening, closing, or change of context within an active application.
- the gesture-to-action mappings of an application may be changed based on the operating mode or the active medium in an application.
- the context can change if a media player is loaded, an advertisement with enabled gestures is loaded, a game is loaded, a media gallery or presentation is loaded, or if any suitable context changes.
- the gesture-to-action responses of the browser may enable gestures mapped to stop/play and/or fast-forward/rewind actions of the video player.
- these gestures may be disabled or mapped to any alternative feature.
- Step S 220 which includes updating an application hierarchy model for gesture-to-action responses with the detected application change, functions to adjust the prioritization and/or mappings of gesture-to-action responses for the set of active applications.
- the hierarchy model is preferably organized such that applications are prioritized in a queue or list. Applications with a higher priority (e.g., higher in the hierarchy) will preferably respond to a detected gesture. Applications lower in priority (e.g., lower in the hierarchy) will preferably respond to a detected gesture if the detected gesture is not actionable by an application with a higher priority. Preferably, applications are prioritized based on the z-index or the order of application usage. Additionally, the available gesture-to-action responses of each application may be used. In one exemplary scenario shown in FIG.
- a media player may be a top-level application (e.g., the front-most application), and any actionable gestures of that media player may be initiated for that application.
- a top-level application is a presentation app (with forward and back actions mapped to thumb right and left) and a lower-level application is a media player (with play/pause, skip song, previous song mapped to palm up, thumb right, thumb left respectively).
- the thumb right and left gestures will preferably result in performing forward and back actions in the presentation app because that application is higher in the hierarchy. As shown in FIG.
- the palm up gesture will preferably result in performing a pause/play toggle action in the media player because that gesture is not defined in a gesture-to-action response for an application with a higher priority (e.g., the gesture is not used by the presentation app).
- the hierarchy model may alternatively be organized based on gesture-to-mapping priority, grouping of gestures, or any suitable organization.
- a user setting may determine the priority level of at least one application.
- a user can preferably configure the gesture service application with one or more applications with user-defined preference. When an application with user-defined preference is open, the application is ordered in the hierarchy model at least partially based on the user setting (e.g., has top priority). For example, a user may set a movie player as a favorite application. Media player gestures can be initiated for that preferred application even if another media player is open and actively being used as shown in FIG. 14 .
- User settings may alternatively be automatically set either through automatic detection of application/gesture preference or through other suitable means.
- facial recognition is used to dynamically load user settings. Facial recognition is preferably retrieved through the imaging unit used to detect gestures.
- a change in an application context may result in adding, removing, or updating gesture-to-action responses within an application.
- gesture content is opened or closed in an application the gesture-to-action mappings associated with the content is preferably added or removed.
- the gesture-to-action responses associated with a media player is preferably set for the application.
- the video player in the web browser will preferably respond to play/pause, next song, previous song and other suitable gestures.
- windows, tabs, frames, and other sub-portions of an application may additionally be organized within a hierarchy model.
- a hierarchy model for a single application may be an independent inner-application hierarchy model or may be managed as part of the application hierarchy model.
- an operating system provided application queue (e.g., indicator of application z-level) may be partially used in configuring an application hierarchy model.
- the operating system application queue may be supplemented with a model specific to gesture responses of the applications in the operating system.
- the application hierarchy model may be maintained by the operating framework gestures service application.
- updating the application hierarchy model may result in signaling a change in the hierarchy model, which functions to inform a user of changes.
- a change is signaled as a user interface notification, but may alternatively be an audio notification, symbolic or visual indicator (e.g., icon change) or any suitable signal.
- the signal may be a programmatic notification delivered to other applications or services.
- the signal indicates a change when there is a change in the highest priority application in the hierarchy model.
- the signal may indicate changes in gesture-to-action responses. For example, if a new gesture is enabled a notification may be displayed indicating the gesture, the action, and the application.
- Step S 230 which includes detecting a gesture, functions to identify or receive a gesture input.
- the gesture is preferably detected in a manner substantially similar to the method described above, but detecting a gesture may alternatively be performed in any suitable manner.
- the gesture is preferably detected through a camera imaging system, but may alternatively be detected through a 3D scanner, a range/depth camera, presence detection array, a touch device, or any suitable gesture detection system.
- the gestures are preferably made by a portion of a body such as a hand, pair of hands, a face, portion of a face, or combination of one or more hands, a face, user object (e.g., a phone) and/or any other suitable identifiable feature of the user.
- the detected gesture can be made by a device, instrument, or any suitable object.
- the user is preferably a human but may alternatively be any animal or device capable of creating visual gestures.
- a gesture involves the presence of an object(s) in a set of configurations.
- a general presence of an object e.g., a hand
- a unique configuration of an object e.g., a particular hand position viewed from a particular angle
- a plurality of configurations may distinguish a gesture object (e.g., various hand positions viewed generally from the front).
- a plurality of objects may be detected (e.g., hands and face) for any suitable instance.
- the method preferably detects a set of gestures.
- Presence-based gestures of a preferred embodiment may include gesture heuristics for mute, sleep, undo/cancel/repeal, confirmation/approve/enter, up, down, next, previous, zooming, scrolling, pinch gesture interactions, pointer gesture interactions, knob gesture interactions, branded gestures, and/or any suitable gesture, of which some exemplary gestures are herein described in more detail.
- a gesture heuristic is any defined or characterized pattern of gesture.
- the gesture heuristic will share related gesture-to-action responses between applications, but applications may use gesture heuristics for any suitable action.
- Detecting a gesture may additionally include limiting gesture detection processing to a subset of gestures of the full set of detectable gestures. The subset of gestures is preferably limited to gestures actionable in the application hierarchy model. Limiting gesture detection to only actionable gestures may decrease processing resources, and/or increase performance.
- Step S 240 which includes mapping the detected gesture to an action of an application, functions to select an appropriate action based on the gesture and application priority.
- Mapping the detected gesture to an action of an application preferably includes progressively checking gesture-to-action responses of applications in the hierarchy model. The highest priority application in the hierarchy model is preferably checked first. If a gesture-to-action response is not identified for an application, then applications of a lower hierarchy (e.g., lower priority) are checked in order of hierarchy/priority.
- Gestures may be actionable in a plurality of applications in the hierarchy model. If a gesture is actionable by a plurality of applications, mapping the detected gesture to an action of an application may include selecting the action of the application with the highest priority in the hierarchy model. Alternatively, actions of a plurality of applications may be selected and initiated such that multiple actions may be performed in multiple applications.
- An actionable gesture is preferably any gesture that has a defined gesture-to-action response defined for an application.
- Step S 250 which includes triggering the action, functions to initiate, activate, perform, or cause an action in at least one application.
- the actions may be initiated by messaging the application, using an application programming interface (API) of the application, using a plug-in of the application, using system-level controls, running a script, or performing any suitable action to cause the desired action.
- API application programming interface
- multiple applications may, in some variations, have an action initiated.
- triggering the action may result in signaling the response to a gesture, which functions to provide feedback to a user of the action.
- signaling the response includes displaying a graphical icon reflecting the action and/or the application in which the action was performed.
- a method of a preferred embodiment can include detecting a gesture modification and initiating an augmented action.
- some gestures in the set of gestures may be defined with a gesture modifier.
- Gesture modifiers preferably include translation along an axis, translation along multiple axis (e.g., 2D or 3D), prolonged duration, speed of gesture, rotation, repetition in a time-window, defined sequence of gestures, location of gesture, and/or any suitable modification of a presence-based gesture.
- Some gestures preferably have modified action responses if such a gesture modification is detected. For example, if a prolonged volume up gesture is detected, the volume will incrementally/progressively increase until the volume up gesture is not detected or the maximum volume is reached.
- an application may scroll vertically through a list, page, or options.
- the scroll speed may initially change slowly but then start accelerating depending upon the time duration for which the user keeps his hand up.
- fast forwarding a video the user may give a next-gesture and system starts fast forwarding the video but then if user moves his hand a bit to the right (indicating to move even further) then the system may accelerate the speed of the video fast-forwarding.
- a rotation of a knob gesture is detected, a user input element may increase or decrease a parameter proportionally with the degree of rotation. Any suitable gesture modifications and action modifications may alternatively be used.
- the one or more gestures can define specific functions for controlling applications within an operating framework.
- the one or more gestures can define one or more functions in response to the context (e.g., the type of media with which the user is interfacing.
- the set of possible gestures is preferably defined, though gestures may be dynamically added or removed from the set.
- the set of gestures preferably define a gesture framework or collective metaphor to interacting with applications through gestures.
- the system and method of a preferred embodiment can function to increase the intuitive nature of how gestures are globally applied and shared when there are multiple contexts of gestures.
- a “pause” gesture for a video might be substantially identical to a “mute” gesture for audio.
- the one or more gestures can be directed at a single device for each imaging unit.
- a single imaging unit can function to receive gesture-based control commands for two or more devices, i.e., a single camera can be used to image gestures to control a computer, television, stereo, refrigerator, thermostat, or any other additional and/or suitable electronic device or appliance.
- a hierarchy model may additionally be used for directing gestures to appropriate devices. Devices are preferably organized in the hierarchy model in a manner substantially similar to that of applications. Accordingly, suitable gestures can include one or more gestures for selecting between devices or applications being controlled by the user.
- the gestures usable in the methods and system of the preferred embodiment are natural and instinctive body movements that are learned, sensed, recognized, received, and/or detected by an imaging unit associated with a controllable device.
- example gestures can include a combination of a user's face and/or head as well as one or more hands.
- FIG. 4A illustrates an example “mute” gesture that can be used to control a volume or play/pause state of a device.
- FIG. 4B illustrates a “sleep” gesture that can be used to control a sleep cycle of an electronic device immediately or at a predetermined time.
- the device can respond to a sleep gesture with a clock, virtual button, or other selector to permit the user to select a current or future time at which the device will enter a sleep state.
- a sleep gesture can be undone and/or repealed by any other suitable gesture, including for example a repetition of the gesture in such a manner that a subsequent mute gesture returns the volume to the video media or adjusts the play/pause state of the audio media.
- FIGS. 15A-15I other example gestures can include one or more hands of the user.
- FIG. 15A illustrates an example “stop” or “pause” gesture.
- the example pause gesture can be used to control an on/off, play/pause, still/toggle state of a device.
- a user can hold his or her hand in the position shown to pause a running media file, then repeat the gesture when the user is ready to resume watching or listening to the media file.
- the example pause gesture can be used to cause the device to stop or pause a transitional state between different media files, different devices, different applications, and the like. Repetition and/or a prolonged pause gesture can cause the device to scroll up/down through a tree or menu of items or files.
- the pause gesture can also be dynamic, moving in a plane parallel or perpendicular to the view of the imaging unit to simulate a pushing/pulling action, which can be indicative of a command to zoom in or zoom out, push a virtual button, alter or change foreground/background portions of a display, or any other suitable command in which a media file or application can be pushed or pulled, i.e., to the front or back of a queue of running files and/or applications.
- FIG. 15B illustrates an example “positive” gesture
- FIG. 15C illustrates an example “negative” gesture
- Positive gestures can be used for any suitable command or action, including for example: confirm, like, buy, rent, sign, agree, positive rating, increase a temperature, number, volume, or channel, maintain, move screen, image, camera, or other device in an upward direction, or any other suitable command or action having a positive definition or connotation.
- Negative gestures can be used for any suitable command or action, including for example: disconfirm, dislike, deny, disagree, negative rating, decrease a temperature, a number, a volume, or a channel, change, move a screen, image, camera, or device in an upward direction, or any other suitable command or action having a negative definition or connotation.
- suitable gestures can further include “down” ( FIG. 15D ) and “up” ( FIG. 15E ) gestures, i.e., wave or swipe gestures.
- the down and up gestures can be used for any suitable command or action, such as increasing or decreasing a quantity or metric such as volume, channel, or menu item.
- the down and up gestures can function as swipe or scroll gestures that allow a user to flip through a series of vertical menus, i.e., a photo album, music catalog, or the like.
- the down and up gestures can be paired with left and right swipe gestures (not shown) that function to allow a user to flip through a series of horizontal menus of the same type.
- an up/down pair of gestures can be used to scroll between types of media applications for example, while left/right gestures can be used to scroll between files within a selected type of media application.
- the up/down/left/right gestures can be used in any suitable combination to perform any natural or intuitive function on the controlled device such as opening/shutting a door, opening/closing a lid, or moving controllable elements relative to one another in a vertical and/or horizontal manner.
- a pinch gesture as shown in FIG. 15J may be used to appropriately perform up/down/left/right actions.
- a pointer gesture may be used to scroll vertically and horizontally simultaneously or to pan around a map or image. Additionally the pointer gesture may be used to perform up/down or left/right actions according to focused, active, or top-level user interface elements.
- suitable gestures can further include a “pinch” gesture that can vary between a “closed” state ( FIG. 15F ) and an “open” state ( FIG. 15G ).
- the pinch gesture can be used to increase or decrease a size, scale, shape, intensity, amplitude, or other feature of a controllable aspect of a device, such as for example a size, shape, intensity, or amplitude of a media file such as a displayed image or video file.
- the pinch gesture can be followed dynamically for each user, such that the controllable device responds to a relative position of the user's thumb and forefinger in determining a relative size, scale, shape, intensity, amplitude, or other feature of the controllable aspect.
- the system and method described above preferably are adapted to recognize and/or process a scale of the user's pinch gesture relative to the motion of the thumb and forefinger relative to one another. That is, to a stationary 2D camera, the gap between the thumb and forefinger will appear to be larger if the user intentionally opens the gap or if the user moves his or her hand closer to the camera while maintaining the relative position between thumb and forefinger.
- the system and method are configured to determine the relative gap between the user's thumb and forefinger while measuring the relative size/distance to the user's hand in order to determine the intent of the apparent increase/decrease in size in the pinch gesture.
- the pinch gesture can function in a binary mode in which the closed state denotes a relatively smaller size, scale, shape, intensity, amplitude and the open state denotes a relatively larger size, scale, shape, intensity, amplitude of the feature of the controllable aspect.
- suitable gestures can further include a “knob” or twist gesture that can vary along a rotational continuum as shown by the relative positions of the user's thumb, forefinger, and middle finger in FIGS. 15H and 15I .
- the knob gesture preferably functions to adjust any scalable or other suitable feature of a controllable device, including for example a volume, temperature, intensity, amplitude, channel, size, shape, aspect, orientation, and the like.
- the knob gesture can function to scroll or move through a index of items for selection presented to a user such that rotation in a first direction moves a selector up/down or right/left and a rotation in an opposite direction moves the selector down/up or left/right.
- the system and method described above can be configured to track a relative position of the triangle formed by the user's thumb, forefinger, and middle finger and further to track a rotation or transposition of this triangle through a range of motion consummate with turning a knob.
- the knob gesture is measurable though a range of positions and/or increments to permit a user to finely tune or adjust the controllable feature being scaled.
- the knob gesture can be received in a discrete or stepwise fashion that relate to specific increments within a menu of variations of the controllable feature being scaled.
- the gestures can include application specific hand, face, and/or combination hand/face orientations of the user's body.
- a video game might include system and/or methods for recognizing and responding to large body movements, throwing motions, jumping motions, boxing motions, simulated weapons, and the like.
- the preferred system and method of can include branded gestures that are configurations of the user's body that respond to, mimic, and/or represent specific brands of goods or services, i.e., a Nike-branded “Swoosh” icon made with a user's hand.
- Branded gestures can preferably be produced in response to media advertisements, such as in confirmation of receipt of a media advertisement to let the branding company know that the user has seen and/or heard the advertisement as shown in FIG. 16 .
- the system may detect branded objects, such as a coke bottle and when user is drinking coke bottle.
- the gestures can be instructional and/or educational in nature, such as to teach children or adults basic counting on fingers, how to locate one's own nose, mouth, ears, and/or to select from a menu of items when learning about shapes, mathematics, language, vocabulary and the like.
- the system may respond affirmatively every time it asks user to touch nose and user touches their nose.
- the gestures can include a universal “search” or “menu” gesture that allows a user to select between applications and therefore move between various application-specific gestures such as those noted above.
- one or more gestures can be associated with the same action.
- both the knob gesture and the swipe gestures can be used to scroll between selectable elements within a menu of an application or between applications such that the system and method generate the same controlled output in response to either gesture input.
- a single gesture can preferably be used to control multiple applications, such that a stop or pause gesture ceases all running applications (video, audio, photostream), even if the user is only directly interfacing with one application at the top of the queue.
- a gesture can have an application-specific meaning, such that a mute gesture for a video application is interpreted as a pause gesture in an audio application.
- a user can employ more than one gesture substantially simultaneously within a single application to accomplish two or more controls.
- two or more gestures can be performed substantially simultaneously to control two or more applications substantially simultaneously.
- each gesture can define one or more signatures usable in receiving, processing, and acting upon any one of the many suitable gestures.
- a gesture signature can be defined at least in part by the user's unique shapes and contours, a time lapse from beginning to end of the gesture, motion of a body part throughout the specified time lapse, and/or a hierarchy or tree of possible gestures.
- a gesture signature can be detected based upon a predetermined hierarchy or decision tree through which the system and method are preferably constantly and routinely navigating. For example, in the mute gesture described above, the system and method are attempting to locate a user's index finger being placed next to his or her mouth.
- the system and method can eliminate all gestures not involving a user's face as those gestures would not quality, thus eliminating a good deal of excess movement (noise) of the user.
- the preferred system and method can look for a user's face and/or lips in all or across a majority of gestures; and in response to finding a face, determining whether the user's index finger is at or near the user's lips.
- the preferred system and method can constantly and repeatedly cascade through one or more decision trees in following and/or detecting lynchpin portions of the various gestures in order to increase the fidelity of the gesture detection and decrease the response time in controlling the controllable device.
- any or all of the gestures described herein can be classified as either a base gesture or a derivative gesture defining different portions of a hierarchy or decision tree through which the preferred system and method navigate.
- the imaging unit is configured for constant or near-constant monitoring of any active users in the field of view.
- the receipt and recognition of gestures can be organized in a hierarchy model or queue within each application as described above.
- the hierarchy model or queue may additionally be applied to predictive gesture detection. For example, if the application is an audio application, then volume, play/pause, track select and other suitable gestures can be organized in a hierarchy such that the system and method can anticipate or narrow the possible gestures to be expected at any given time. Thus, if a user is moving through a series of tracks, then the system and method can reasonably anticipate that the next received gesture will also be a track selection knob or swipe gesture as opposed to a play/pause gesture.
- a single gesture can control one or more applications substantially simultaneously.
- the priority queue can decide which applications to group together for joint control by the same gestures and which applications require different types of gestures for unique control. Accordingly, all audio and video applications can share a large number of the same gestures and thus be grouped together for queuing purposes, while a browser, appliance, or thermostat application might require a different set of control gestures and thus not be optimal for simultaneous control through single gestures.
- the meaning of a gesture can be dependent upon the application (context) in which it is used, such that a pause gesture in an audio application can be the same movement as a hold temperature gesture in a thermostat or refrigerator application.
- the camera resolution of the imaging unit can preferably be varied depending upon the application, the gesture, and/or the position of the system and method within the hierarchy. For example, if the imaging unit is detecting a hand-based gesture such as a pinch or knob gesture, then it will need relatively higher resolution to determine finger position. By way of comparison, the swipe, pause, positive, and negative gestures require less resolution as grosser anatomy and movements can be detected to extract the meaning from the movement of the user. Given that certain gestures may not be suitable within certain applications, the imaging unit can be configured to alter its resolution in response to application in use or the types of gestures available within the predetermined decision tree for each of the open applications. The imaging unit may also adjust the resolution by constantly detecting for user presence and then adjusting the resolution so that it can capture user gestures at the user distance from the imaging unit. The system may deploy face detection or upper body of the user to estimate presence of the user and adjust size accordingly.
- An alternative embodiment preferably implements the above methods in a computer-readable medium storing computer-readable instructions.
- the instructions are preferably executed by computer-executable components preferably integrated with a imaging unit and a computing device.
- the computer-readable medium may be stored on any suitable computer readable media such as RAMs, ROMs, flash memory, EEPROMs, optical devices (CD or DVD), hard drives, floppy drives, or any suitable device.
- the computer-executable component is preferably a processor but the instructions may alternatively or additionally be executed by any suitable dedicated hardware device.
Abstract
A system and method that includes detecting an application change within a multi-application operating framework; updating an application hierarchy model for gesture-to-action responses with the detected application change; detecting a gesture; according to the hierarchy model, mapping the detected gesture to an action of an application; and triggering the action.
Description
- This application claims the benefit of U.S. Provisional Application Ser. No. 61/732,840, filed on 3 Dec. 2012, which is incorporated in its entirety by this reference.
- This invention relates generally to the user interface field, and more specifically to a new and useful method and system for detecting gestures in the user interface field.
- There have been numerous advances in recent years in the area of user interfaces. Touch sensors, motion sensing, motion capture, and other technologies have enabled gesture based user interfaces. Such new techniques, however, often require new and often expensive devices or hardware components to enable a gesture based user interface. For these techniques to enable even simple gestures require considerable processing capabilities and advancement in algorithms. More sophisticated and complex gestures require even more processing capabilities of a device, thus limiting the applications of gesture interfaces. Furthermore, the amount of processing can limit the other tasks that can occur at the same time. Additionally, these capabilities are not available on many devices such as mobile devices were such dedicated processing is not feasible. Additionally, the current approaches often leads to a frustrating lag between a gesture of a user and the resulting action in an interface. Another limitation of such technologies is that they are designed for limited forms of input such as gross body movement guided by application feedback. Thus, there is a need in the user interface field to create a new and useful method and system for detecting gestures. This invention provides such a new and useful method and system.
-
FIG. 1 is a schematic representation of a method of a preferred embodiment; -
FIG. 2 is detailed flowchart representation of a obtaining images of a preferred embodiment; -
FIG. 3 is a flowchart representation of detecting a motion region of a preferred embodiment; -
FIGS. 4A and 4B are schematic representations of example gestures using a combination of hand/s and facial features of a user in accordance with the preferred embodiment; -
FIG. 5 is a flowchart representation of computing feature vectors of a preferred embodiment; -
FIG. 6 is a flowchart representation of determining a gesture input; -
FIG. 7 is a schematic representation of tracking motion of an object; -
FIG. 8 is a schematic representation of transitioning gesture detection process between processing units; -
FIG. 9 is a schematic representation of a system of a preferred embodiment; -
FIG. 10 is a schematic representation of a system of a preferred embodiment; -
FIG. 11 is a flowchart representation of a method of a preferred embodiment; -
FIGS. 12-14 are schematic representations of exemplary scenarios of a method of a preferred embodiment; -
FIGS. 15A-15J are schematic representations of a series of example gestures using one or more hands of a user in accordance with the preferred embodiment; and -
FIG. 16 is a schematic representation of an exemplary advertisement based gesture of a preferred embodiment. - The following description of preferred embodiments of the invention is not intended to limit the invention to these preferred embodiments, but rather to enable any person skilled in the art to make and use this invention.
- As shown in
FIG. 1 , a method for detecting gestures of a preferred embodiment includes the steps of obtaining images from an imaging unit S110; identifying object search area of the images S120; detecting a first gesture object in the search area of an image of a first instance S130; detecting a second gesture object in the search area of an image of at least a second instance S132; and determining an input gesture from the detection of the first gesture object and the at least second gesture object S140. The method functions to enable an efficient gesture detection technique using simplified technology options. The method primarily utilizes object detection as opposed to object tracking (though object tracking may additionally be used). A gesture is preferably characterized by a real world object transitioning between at least two configurations. The detection of a gesture object in one configuration in at least one image frame may additionally be used as a gesture. The method can preferably identify images of the object (i.e., gesture objects) while in various stages of configurations. For example, the method can preferably be used to detect a user flicking their fingers from side to side to move forward or backwards in an interface. Additionally, the steps of the method are preferably repeated to identify a plurality of types of gestures. These gestures may be sustained gestures (e.g., such as a thumbs-up), change in orientation of a physical object (e.g., flicking fingers and/or a hand side to side), combined object gestures (e.g., using face and hand to signal a gesture), gradual transition of gesture object orientation, changing position of detected objet, and any suitable pattern of detected/tracked objects. The method may be used to identify a wide variety of gestures and types of gestures through one operation process. - The method is preferably implemented through an imaging unit capturing video such as a RGB digital camera like a web camera or a camera phone, but may alternatively be implemented by any suitable imaging unit such as stereo camera, 3D scanner, or IR camera. In one variation, the imaging unit can be directly connected to and/or integrated with a display, user interface, or other user components. Alternatively, the imaging unit can be a discrete element within a larger system that is not connected to any particular device, display, user interface, or the like. Preferably, the imaging unit is connectable to a controllable device, which can include for example a display and/or audio channel. Alternatively, the controllable device can be any suitable electronic device or appliance subject to control though electrical signaling. The method preferably leverages image based object detection algorithms, which preferably enables the method to be used for gestures involving arbitrarily complex gestures. For example, the method can preferably detect gestures involving finger movement and hand position without sacrificing operation efficiency or increasing system requirements. One exemplary application of the method preferably includes being used as a user interface to a computing unit such as a personal computer, a mobile phone, an entertainment system, or a home automation unit. The method may be used for computer input, attention monitoring, mood monitoring, in an advertisement unit and/or any suitable application. The system implementing the method can preferably be activated by clicking a button, using an ambient light sensor to detect a user presence, detecting a predefined action (e.g., placing hand over the light sensor and taking it off within a few seconds), or any suitable technique for activating and deactivating the method.
- Step S110, which includes obtaining images from an imaging unit S110, functions to collect data representing physical presence and actions of a user. The images are the source from which gesture input will be generated. The imaging unit preferably captures image frames and stores them. Depending upon ambient light and other lighting effects such as exposure or reflection, it optionally performs pre-processing of images for later processing stages (shown in
FIG. 2 ). The camera is preferably capable of capturing light in the visible spectrum like a RGB camera, which may be found in web cameras, web cameras over the internet or local Wi-Fi/home/office networks, digital cameras, smart phones, tablet computers, and other computing devices capable of capturing video. Any suitable imaging system may alternatively be used. A single unique camera is preferably used, but a combination of two or more cameras may alternatively be used. The captured images may be multi-channel images or any suitable type of image. For example, one camera may capture images in the visible spectrum, while a second camera captures near infrared spectrum images. Captured images may have more than one channel of image data such as RGB color data, near infra-red channel data, a depth map, or any suitable image representing the physical presence of a objects used to make gestures. Depending upon historical data spread over current and prior sessions, different channels of a source image may be used at different times. Additionally, the method may control a light source for when capturing images. Illuminating a light source may include illuminating a multi spectrum light such as near infrared light or visible light source. One or more than one channel of the captured image may be dedicated to the spectrum of a light source. The captured data may be stored or alternatively used in real-time processing. Pre-processing may include transforming image color space to alternative representations such as Lab, Luv color space. Any other mappings that reduce the impact of exposure might also be performed. This mapping may also be performed on demand and cached for subsequent use depending upon the input needed by subsequent stages. Additionally or alternatively, preprocessing may include adjusting the exposure rate and/or frame rate depending upon exposure in the captured images or from reading sensors of an imaging unit. The exposure rate may also be computed by taking into account other sensors such as strength of GPS signal (e.g., providing insight into if the device is indoor or outdoor), time of the day or year. The system may also use the location of a device via WiFi points, GPS signal, or any other way to determinate the approximate location in order to tune the image capture process. This would typically impact frame rate of the images. The exposure may alternatively be adjusted based on historical data. In addition to capturing images, an instantaneous frame rate is preferably calculated and stored. This frame rate data may be used to calculate and/or map gestures to a reference time scale. - Step S120, which includes identifying object search area of the images, functions to determine at least one portion of an image to process for gesture detection. Identifying an object search area preferably includes detecting and excluding background areas of an image and/or detecting and selecting motion regions of an image. Additionally or alternatively, past gesture detection and/or object detection may be used to determine where processing should occur. Identifying object search area preferably reduces the areas where object detection must occur thus decreasing runtime computation and increasing accuracy. The search area may alternatively be the entire image. A search area is preferably identified for each image of obtained images, but may alternatively be used for a group plurality of images.
- When identifying an object search area, a background estimator module preferably creates a model of background regions of an image. The non-background regions are then preferably used as object search areas. Statistics of image color at each pixel are preferably built from current and prior images frames. Computation of statistics may use mean color, color variance, or other methods such as median, weighted mean or variance, or any suitable parameter. The number of frames used for computing the statistics is preferably dependent on the frame rate or exposure. The computed statistics are preferably used to compose a background model. In another variation, a weighted mean with pixels weighted by how much they differ from an existing background model may be used. These statistical models of background area are preferably adaptive (i.e., the background model changes as the background changes). A background model will preferably not use image regions where motion occurred to update its current background model. Similarly, if a new object appears and then does not move for a number of subsequent frames, the object will preferably in time be regarded as part of the background. Additionally or alternatively, creating a model of background regions may include applying an operator over a neighborhood image region of a substantial portion of every pixel, which functions to create a more robust background model. The span of a neighborhood region may change depending upon current frame rate or lighting. A neighborhood region can increase when frame rate is low in order to build more a robust and less noisy background model. One exemplary neighborhood operator may include a Gaussian kernel. Another exemplary neighborhood operator is a super-pixel based neighborhood operator that computes (within a fixed neighborhood region) which pixels are most similar to each other and group them in one super-pixel. Statistics collection is then preferably performed over only those pixels that classify in the same super-pixel as the current pixel. One example of super-pixel based method is to alter behavior if the gradient magnitude for a pixel is above a specified threshold.
- Additionally or alternatively, identifying an object search area may include detecting a motion region of the images. Motion regions are preferably characterized by where motion occurred in the captured scene between two image frames. The motion region is preferably a suitable area of the image to find gesture objects. A motion region detector module preferably utilizes the background model and a current image frame to determine which image pixels contain motion regions. As shown in
FIG. 3 , detecting a motion region of the images preferably includes performing a pixel-wise difference operation and computing probability a pixel has moved. The pixel-wise difference operation is preferably computed using the background model and a current image. Motion probability may be calculated in a number of ways. In one variation, a Gaussian kernel (exp(−SSD(xcurrent, xbackground)/s)) is preferably applied to a sum of square difference of image pixels. Historical data may additionally be down weighted as motion moves further away in time from the current frame. In another variation, a sum of square difference (SSD function) may be computed over any one channel or any suitable combination of channels in the image. A sum of absolute difference per channel function may alternatively be used in place of the SSD function. Parameters of the operation may be fixed or alternatively adaptive based on current exposure, motion history, and ambient light and user preferences. In another variation, a conditional random field based function may be applied where the computation of each pixel to be background uses pixel difference information from neighborhood pixels, image gradient, and motion history for a pixel, and/or the similarity of a pixel compared to neighboring pixels. - The probability image may additionally be filtered for noise. In one variation, noise filtering may include running a motion image through a morphological erosion filter and then applying a dilation or Gaussian smoothing function followed by applying a threshold function. Different algorithms may alternatively be used. Motion region detection is preferably used in detection of an object, but may additionally be used in the determination of a gesture. If the motion region is above a certain threshold the method may pause gesture detection. For example, when moving an imaging unit like a smartphone or laptop, the whole image will typically appear to be in motion. Similarly motion sensors of the device may trigger a pausing of the gesture detection.
- Steps S130 and S132, which include detecting a first gesture object in the search area of an image of a first instance and detecting a second gesture object in the search area of an image of at least a second instance, function to use image object detection to identify objects in at least one configuration. The first instance and the second instance preferably establish a time dimension to the objects that can then be used to interpret the images as a gesture input in Step S140. The system may look for a number of continuous gesture objects. A typical gesture may take approximately 300 milliseconds to perform and span approximately 3-10 frames depending on image frame rate. Any suitable length of gestures may alternatively be used. This time difference is preferably determined by the instantaneous frame rate, which may be estimated as described above. Object detection may additionally use prior knowledge to look for an object in the neighborhood of where the object was detected in prior images.
- A gesture object is preferably a portion of a body such as a hand, pair of hands, a face, portion of a face, or combination of one or more hands, a face, user object (e.g., a phone) and/or any other suitable identifiable feature of the user. Alternatively, the gesture objet can be a device, instrument or any suitable object. Similarly, the user is preferably a human but may alternatively be any animal or device capable of creating visual gestures. Preferably a gesture involves an object(s) in a set of configuration. The gesture object is preferably any object and/or configuration of an object that may be part of a gesture. A general presence of an object (e.g., a hand), a unique configuration of an object (e.g., a particular hand position viewed from a particular angle) or a plurality of configurations may distinguish a gesture object (e.g., various hand positions viewed generally from the front). Additionally, a plurality of objects may be detected (e.g., hands and face) for any suitable instance.
- In another embodiment, hands and the face are detected for cooperative gesture input. As described above, a gesture is preferably characterized by an object transitioning between two configurations. This may be holding a hand in a first configuration (e.g., a fist) and then moving to a second configuration (e.g., fingers spread out). Each configuration that is part of a gesture is preferably detectable. A detection module preferably uses a machine-learning algorithm over computed features of an image. The detection module may additionally use online leaning which functions to adapt gesture detection to a specific user. Identifying the identity of a user through face recognition may provide additional adaption of gesture detection. Any suitable machine learning or detection algorithms may alternatively be used. For example, the system may start with an initial model for face detection, but as data is collected for detection from a particular user the model may be altered for better detection of the particular face of the user. The first gesture object and the second gesture object are typically the same physical object in different configurations. There may be any suitable number of detected gesture objects. For example, a first gesture object may be a hand in a fist and a second gesture object may be an opened hand. Alternatively, the first gesture object and the second gesture object may be different physical objects. For example, a first gesture object may be the right hand in one configuration, and the second gesture object may be the left hand in a second configuration. Similarly gesture object may be the combination of multiple physical objects such as multiple hands, objects, faces and may be from one or more users. For example, such gesture objects may include holding hands together, putting hand to mouth, holding both hands to side of face, holding an object in particular configuration or any suitable detectable configuration of objects. As will be described in Step S140, there may be numerous variations in interpretation of gestures.
- Additionally, an initial step for detecting a first gesture object and/or detecting a second gesture object may be computing feature vectors S144, which functions as a general processing step for enabling gesture object detection. The feature vectors can preferably be used for face detection, face tracking, face recognition, hand detector, hand tracking, and other detection processes, as shown in
FIG. 5 . Other steps may alternatively be performed to detect a gesture objects. Pre-computing a feature vector in one place can preferably enable a faster overall computation time. The feature vectors are preferably computed before performing any detection algorithms and after any pre-processing of an image. Preferably, an object search area is divided into potentially overlapping blocks of features where each block further contains cells. Each cell preferably aggregates pre-processed features over the span of the cell through use of a histogram, by summing, by Haar wavelets based on summing/differencing or based on applying alternative weighting to pixels corresponding to cell span in the preprocessed features, and/or by any suitable method. Computed feature vectors of the block are then preferably normalized individually or alternatively normalized together over the whole object search area. Normalized feature vectors are preferably used as input to a machine-learning algorithm for object detection, which is in turn used for gesture detection. The feature vectors are preferably a base calculation that converts a representation of physical objects in an image to a mathematical/numerical representation. The feature vectors are preferably usable by plurality of types of object detection (e.g., hand detection, face detection, etc.), and the feature vectors are preferably used as input to specialized object detection. Feature vectors may alternatively be calculated independently for differing types of object detection. The feature vectors are preferably cached in order to avoid re-computing feature vectors. Depending upon a particular feature, various caching strategies may be utilized, some can share feature computation. Computing feature vectors is preferably performed for a portion of the image, such as where motion occurred, but may alternatively be performed for a whole image. Preferably, stored image data and motion regions is analyzed to determine where to compute feature vectors. - Step S140, which includes determining an input gesture from the detection of the first gesture object and the at least second gesture object, functions to process the detected objects and map them according to various patterns to an input gesture. A gesture is preferably made by a user by making changes in body position, but may alternatively be made with an instrument or any suitable gesture. Some exemplary gestures may include opening or closing of a hand, rotating a hand, waving, holding up a number of fingers, moving a hand through the air, nodding a head, shaking a head, or any suitable gesture. An input gesture is preferably identified through the objects detected in various instances. The detection of at least two gesture objects may be interpreted into an associated input based on a gradual change of one physical object (e.g., change in orientation or position), sequence of detection of at least two different objects, sustained detection of one physical object in one or more orientations, or any suitable pattern of detected objects. These variations preferably function by processing the transition of detected objects in time. Such a transition may involve the changes or the sustained presence of a detected object. One preferred benefit of the method is the capability to enable such a variety of gesture patterns through a single detection process. A transition or transitions between detected objects may be one variation indicate what gesture was made. A transition may be characterized by any suitable sequence and/or positions of a detected object. For example, a gesture input may be characterized by a fist in a first instance and then an open hand in a second instance. The detected objects may additionally have location requirements, which may function to apply motion constraints on the gesture. As shown in
FIG. 6 , there may be various conditions of the object detection that can end gesture detection prematurely. Two detected objects may be required to be detected in substantially the same area of an image, have some relative location difference, have some absolute or relative location change, satisfy a specified rate of location change, or satisfy any suitable location based conditions. In the example above, the first and the open hand may be required to be detected in substantially the same location. As another example, a gesture input may be characterized by a sequence of detected objects gradually transitioning from a fist to an open hand. (e.g., a fist, a half open hand, and then an open hand). The system may directly predict gestures once features are computed over images. So explicit hand detection/tracking may never happen and a machine-learning algorithm may be applied to predict gestures post identification of a search area. The method may additionally include tracking motion of an object. In this variation, a gesture input may be characterized by detecting an object in one position and then detecting the object or a different object in a second position. In another variation, the method may detect an object through sustained presence of a physical object in substantially one orientation. In this variation, the user presents a single object to the imaging unit. This object in a substantially singular orientation is detected in at least two frames. The number of frames and threshold for orientation changes may be any suitable number. For example, a thumbs-up gesture may be used as an input gesture. If the method detects a user making a thumbs-up gesture for at least two frames then an associated input action may be made. The step of detecting a gesture preferably includes checking for the presence of an initial gesture object(s). This initial gesture object is preferably an initial object of a sequence of object orientations for a gesture. If an initial gesture object is not found, further input is preferably ignored. If an object associated with at least one gesture is found the method proceeds to detect a subsequent object of gesture. These gestures are preferably detected by passing feature vectors of an object detector combined with any object tracking to a machine learning algorithm that predicts the gesture. A state machine, conditional logic, machine learning, or any suitable technique may be used to determine a gesture. The system may additionally use the device location (e.g., through WiFi points or GPS signal), lighting conditions, user facial recognition, and/or any suitable context of the images to modify gesture determination. For example, different gestures may be detected based on the context. When the gesture is determined an input is preferably transferred to a system, which preferably issues a relevant command. The command is preferably issued through an application programming interface (API) of a program or by calling OS level APIs. The OS level APIs may include generating key and/or mouse strokes if for example there are no public APIs for control. For use within a web browser, a plugin or extension may be used that talks to the browser or tab. Other variations may include remotely executing a command over a network. - In some embodiments, the hands and a face of a user are preferably detected through gesture object detection and then the face object preferably augments interpretation of a hand gesture. In one variation, the intention of a user is preferably interpreted through the face, and is used as conditional test for processing hand gestures. If the user is looking at the imaging unit (or at any suitable point) the hand gestures of the user are preferably interpreted as gesture input. If the user is looking away from the imaging unit (or at any suitable point) the hand gestures of the user are interpreted to not be gesture input. In other words, a detected object can be used as an enabling trigger for other gestures. As another variation of face gesture augmentation, the mood of a user is preferably interpreted. In this variation, the facial expressions of a user serve as a configuration of the face object. Depending on the configuration of the face object, a sequence of detected objects may receive different interpretations. For examples, gestures made by the hands may be interpreted differently depending on if the user is smiling or frowning. In another variation, user identity is preferably determined through face recognition of a face object. Any suitable technique for facial recognition may be used. Once user identify is determined, the detection of a gesture may include applying personalized determination of the input. This may involve loading personalized data set. The personalized data set is preferably user specific object data. A personalized data set could be gesture data or models collected from the identified user for better detection of objects. Alternatively, a permissions profile associated with the user may be loaded enabling and disabling particular actions. For example, some users may not be allowed to give gesture input or may only have a limited number of actions. In one variation, at least two users may be detected, and each user may generate a first and second gesture object. Facial recognition may be used in combination with a user priority setting to give gestures of the first user precedence over gestures of the second user. Alternatively or additionally user characteristics such as estimated age, distance from imaging system, intensity of gesture, or any suitable parameter may be used to determine gesture precedence. The user identity may additionally be used to disambiguate gesture control hierarchy. For example, gesture input from a child may be ignored in the presence of adults. Similarly, any suitable type of object may be used to augment a gesture. For example, the left hand or right hand may augment the gestures.
- As mentioned about, the method may additionally include tracking motion of an object S150, which functions to track an object through space. For each type of object (e.g., hand or face), the location of the detected object is preferable tracked by identifying the location in the two dimensions (or along any suitable number of dimensions) of the image captured by the imaging unit, as shown in
FIG. 7 . This location is preferably provided through the object detection process. The object detection algorithms and the tracking algorithms are preferably interconnected/combined such that the tracking algorithm may use object detection and the object detection algorithm may use the tracking algorithm. - The method of a preferred embodiment may additionally include determining operation load of at least two processing units S160 and transitioning operation to at least two processing units S162, as shown in
FIG. 8 . These steps function to enable the gesture detection to accommodate processing demands of other processes. The operation of the steps that are preferably transitioned include identifying object search area, detecting at least a first gesture object, detecting at least a second gesture, tracking motion of an object, determining an input gesture to the lowest operation status of the at least two processing units, and/or any suitable processing operation. The operation status of a central processing unit (CPU) and a graphics processing unit (GPU) are preferably monitored but any suitable processing unit may be monitored. Operation steps of the method will preferably be transitioned to a processing unit that does not have the highest demand. The transitioning can preferably occur multiple times in response to changes in operation status. For example, when a task is utilizing the GPU for a complicated task, operation steps are preferably transitioned to the CPU. When the operation status changes and the CPU has more load, the operation steps are preferably transitioned to the GPU. The feature vectors and unique steps of the method preferably enable this processing unit independence. Modern architectures of GPU and CPU units preferably provide a mechanism to check operation load. For a GPU, a device driver preferably provides the load information. For a CPU, operating systems preferably provide the load information. In one variation, the processing units are preferably pooled and the associated operation load of each processing unit checked. In another variation, an event-based architecture is preferably created such that an event is triggered when a load on a processing unit changes or passes a threshold. The transition between processing unit is preferably dependent on the current load and the current computing state. Operation is preferably scheduled to occur on the next computing state, but may alternatively occur midway through a compute state. These steps are preferably performed for the processing units of a single device, but may alternatively or additionally be performed for computing over multiple computing units connected by internet or a local network. For example, smartphones may be used as the capture devices, but operation can be transferred to a personal computer or a server. The transition of operation may additionally factor in particular requirements of various operation steps. Some operation steps may be highly parallelizable and be preferred to run on GPUs while other operation steps may be more memory intensive and be prefer a CPU. Thus the decision to transition operation preferably factors in the number of operations each unit can perform per second, amount of memory available to each unit, amount of cache available to each unit, and/or any suitable operation parameters. - As shown in
FIG. 9 , system for detecting user interface gestures of a preferred embodiment includes a system including animaging unit 210, anobject detector 220, and agesture determination module 230. Theimaging unit 210 preferably captures the images for gesture detection and preferably performs the steps substantially similar to those described in S110. Theobject detector 220 preferably functions to output identified objects. Theobject detector 220 preferably includes several sub-modules that contribute to the detection process such as abackground estimator 221, amotion region detector 222, anddata storage 223. Additionally, the object detector preferably includes aface detection module 224 and ahand detection module 225. The object detector preferably works in cooperation with a computefeature vector module 226. Additionally, the system may include anobject tracking module 240 for tracking hands, a face, or any suitable object. There may additionally be aface recognizer module 227 that determines a user identity. The system preferably implements the steps substantially similar to those described in the method above. The system is preferably implemented through a web camera or a digital camera integrated or connected to a computing device such as a computer, gaming device, mobile computer, or any suitable computing device. - As shown in
FIG. 10 , the system may additionally include agesture service application 250 operable in an operating framework. Thegesture service application 250 preferably manages gesture detection and responses in a plurality of contexts. For presence-based gestures, gestures may be reused between applications. Thegesture service application 250 functions to ensure the right action is performed on an appropriate application. The operating framework is preferably a multi-application operating system with multiple applications and windows simultaneously opened and used. The operating framework may alternatively be within a particular computing environment such as in an application loading multiple contexts (e.g., a web browser) or any suitable computing environment. Thegesture service application 250 is preferably coupled to changes in application status (e.g., changes in z-index of applications or changes in context of an application). Thegesture service application 250 preferably includes ahierarchy model 260, which functions to manage gesture-to-action responses of a plurality of applications. Thehierarchy model 260 may be a queue, list, tree, or other suitable data object(s) that define priority of applications and gesture-to-action responses. - As shown in
FIG. 11 , a method for detecting a set of gestures of a preferred embodiment can include detecting an application change within a multi-application operating system S210; updating an application hierarchy model for gesture-to-action responses with the detected application change S220; detecting a gesture S230; mapping the detected gesture to an action of an application S240; and triggering the action S250. The method preferably functions to apply a partially shared set of gestures to a plurality of applications. More preferably the method functions to create an intuitive direction of presence-based gestures to a set of active applications. The method is preferably used in situations where a gesture framework is used throughout a multi-module or multi-application system, such as within an operating system. Gestures, which may leverage common gesture heuristics between applications, are applied to an appropriate application based on the hierarchy model. The hierarchy model preferably defines an organized assignment of gestures that is preferably based on the order of application use, but may be based on additional factors as well. A response to a gesture is preferably initiated within an application at the highest level and/or with the highest priority in the hierarchy model. The method is preferably implemented by a gesture service application operable within an operating framework such as an operating system or an application with dynamic contexts. - Step S210, which includes detecting an application change within a multi-application operating system, functions to monitor events, usage, and/or context of applications in an operating framework. The operating framework is preferably a multi-application operating system with multiple applications and windows simultaneously opened and used. The operating framework may alternatively be within a particular computing environment such as in an application that is loading multiple contexts (e.g., a web browser loading different sites) or any suitable computing environment. Detecting an application change preferably includes detecting a selection, activation, closing, or change of applications in a set of active applications. Active applications may be described as applications that are currently running within the operating framework. Preferably, the change of applications in the set of active applications is the selection of a new top-level application (e.g., which app is in the foreground or being actively used). Detecting an application change may alternatively or additionally include detecting a loading, opening, closing, or change of context within an active application. The gesture-to-action mappings of an application may be changed based on the operating mode or the active medium in an application. The context can change if a media player is loaded, an advertisement with enabled gestures is loaded, a game is loaded, a media gallery or presentation is loaded, or if any suitable context changes. For example, if a browser opens up a website with a video player, the gesture-to-action responses of the browser may enable gestures mapped to stop/play and/or fast-forward/rewind actions of the video player. When the browser is not viewing a video player, these gestures may be disabled or mapped to any alternative feature.
- Step S220, which includes updating an application hierarchy model for gesture-to-action responses with the detected application change, functions to adjust the prioritization and/or mappings of gesture-to-action responses for the set of active applications. The hierarchy model is preferably organized such that applications are prioritized in a queue or list. Applications with a higher priority (e.g., higher in the hierarchy) will preferably respond to a detected gesture. Applications lower in priority (e.g., lower in the hierarchy) will preferably respond to a detected gesture if the detected gesture is not actionable by an application with a higher priority. Preferably, applications are prioritized based on the z-index or the order of application usage. Additionally, the available gesture-to-action responses of each application may be used. In one exemplary scenario shown in
FIG. 12 , a media player may be a top-level application (e.g., the front-most application), and any actionable gestures of that media player may be initiated for that application. In another exemplary scenario, a top-level application is a presentation app (with forward and back actions mapped to thumb right and left) and a lower-level application is a media player (with play/pause, skip song, previous song mapped to palm up, thumb right, thumb left respectively). The thumb right and left gestures will preferably result in performing forward and back actions in the presentation app because that application is higher in the hierarchy. As shown inFIG. 13 , the palm up gesture will preferably result in performing a pause/play toggle action in the media player because that gesture is not defined in a gesture-to-action response for an application with a higher priority (e.g., the gesture is not used by the presentation app). - The hierarchy model may alternatively be organized based on gesture-to-mapping priority, grouping of gestures, or any suitable organization. In one variation, a user setting may determine the priority level of at least one application. A user can preferably configure the gesture service application with one or more applications with user-defined preference. When an application with user-defined preference is open, the application is ordered in the hierarchy model at least partially based on the user setting (e.g., has top priority). For example, a user may set a movie player as a favorite application. Media player gestures can be initiated for that preferred application even if another media player is open and actively being used as shown in
FIG. 14 . User settings may alternatively be automatically set either through automatic detection of application/gesture preference or through other suitable means. In one variation, facial recognition is used to dynamically load user settings. Facial recognition is preferably retrieved through the imaging unit used to detect gestures. - Additionally or alternatively, a change in an application context may result in adding, removing, or updating gesture-to-action responses within an application. When gesture content is opened or closed in an application the gesture-to-action mappings associated with the content is preferably added or removed. For example, when a web browser opens a video player in a top-level tab/window, the gesture-to-action responses associated with a media player is preferably set for the application. The video player in the web browser will preferably respond to play/pause, next song, previous song and other suitable gestures. In one variation, windows, tabs, frames, and other sub-portions of an application may additionally be organized within a hierarchy model. A hierarchy model for a single application may be an independent inner-application hierarchy model or may be managed as part of the application hierarchy model. In such a variation, opening windows, tabs, frames, and other sub-portions will be treated as changes in the applications. In one preferred embodiment, an operating system provided application queue (e.g., indicator of application z-level) may be partially used in configuring an application hierarchy model. The operating system application queue may be supplemented with a model specific to gesture responses of the applications in the operating system. Alternatively, the application hierarchy model may be maintained by the operating framework gestures service application.
- Additionally, updating the application hierarchy model may result in signaling a change in the hierarchy model, which functions to inform a user of changes. Preferably, a change is signaled as a user interface notification, but may alternatively be an audio notification, symbolic or visual indicator (e.g., icon change) or any suitable signal. In one variation, the signal may be a programmatic notification delivered to other applications or services. Preferably, the signal indicates a change when there is a change in the highest priority application in the hierarchy model. Additionally or alternatively, the signal may indicate changes in gesture-to-action responses. For example, if a new gesture is enabled a notification may be displayed indicating the gesture, the action, and the application.
- Step S230, which includes detecting a gesture, functions to identify or receive a gesture input. The gesture is preferably detected in a manner substantially similar to the method described above, but detecting a gesture may alternatively be performed in any suitable manner. The gesture is preferably detected through a camera imaging system, but may alternatively be detected through a 3D scanner, a range/depth camera, presence detection array, a touch device, or any suitable gesture detection system.
- The gestures are preferably made by a portion of a body such as a hand, pair of hands, a face, portion of a face, or combination of one or more hands, a face, user object (e.g., a phone) and/or any other suitable identifiable feature of the user. Alternatively, the detected gesture can be made by a device, instrument, or any suitable object. Similarly, the user is preferably a human but may alternatively be any animal or device capable of creating visual gestures. Preferably, a gesture involves the presence of an object(s) in a set of configurations. A general presence of an object (e.g., a hand), a unique configuration of an object (e.g., a particular hand position viewed from a particular angle) or a plurality of configurations may distinguish a gesture object (e.g., various hand positions viewed generally from the front). Additionally, a plurality of objects may be detected (e.g., hands and face) for any suitable instance. The method preferably detects a set of gestures. Presence-based gestures of a preferred embodiment may include gesture heuristics for mute, sleep, undo/cancel/repeal, confirmation/approve/enter, up, down, next, previous, zooming, scrolling, pinch gesture interactions, pointer gesture interactions, knob gesture interactions, branded gestures, and/or any suitable gesture, of which some exemplary gestures are herein described in more detail. A gesture heuristic is any defined or characterized pattern of gesture. Preferably, the gesture heuristic will share related gesture-to-action responses between applications, but applications may use gesture heuristics for any suitable action. Detecting a gesture may additionally include limiting gesture detection processing to a subset of gestures of the full set of detectable gestures. The subset of gestures is preferably limited to gestures actionable in the application hierarchy model. Limiting gesture detection to only actionable gestures may decrease processing resources, and/or increase performance.
- Step S240, which includes mapping the detected gesture to an action of an application, functions to select an appropriate action based on the gesture and application priority. Mapping the detected gesture to an action of an application preferably includes progressively checking gesture-to-action responses of applications in the hierarchy model. The highest priority application in the hierarchy model is preferably checked first. If a gesture-to-action response is not identified for an application, then applications of a lower hierarchy (e.g., lower priority) are checked in order of hierarchy/priority. Gestures may be actionable in a plurality of applications in the hierarchy model. If a gesture is actionable by a plurality of applications, mapping the detected gesture to an action of an application may include selecting the action of the application with the highest priority in the hierarchy model. Alternatively, actions of a plurality of applications may be selected and initiated such that multiple actions may be performed in multiple applications. An actionable gesture is preferably any gesture that has a defined gesture-to-action response defined for an application.
- Step S250, which includes triggering the action, functions to initiate, activate, perform, or cause an action in at least one application. The actions may be initiated by messaging the application, using an application programming interface (API) of the application, using a plug-in of the application, using system-level controls, running a script, or performing any suitable action to cause the desired action. As described above, multiple applications may, in some variations, have an action initiated. Additionally, triggering the action may result in signaling the response to a gesture, which functions to provide feedback to a user of the action. Preferably, signaling the response includes displaying a graphical icon reflecting the action and/or the application in which the action was performed.
- Additionally or alternatively, a method of a preferred embodiment can include detecting a gesture modification and initiating an augmented action. As described herein, some gestures in the set of gestures may be defined with a gesture modifier. Gesture modifiers preferably include translation along an axis, translation along multiple axis (e.g., 2D or 3D), prolonged duration, speed of gesture, rotation, repetition in a time-window, defined sequence of gestures, location of gesture, and/or any suitable modification of a presence-based gesture. Some gestures preferably have modified action responses if such a gesture modification is detected. For example, if a prolonged volume up gesture is detected, the volume will incrementally/progressively increase until the volume up gesture is not detected or the maximum volume is reached. In another example, if a pointer gesture is detected to be translated vertically, an application may scroll vertically through a list, page, or options. In yet another variation, the scroll speed may initially change slowly but then start accelerating depending upon the time duration for which the user keeps his hand up. In an example of fast forwarding a video, the user may give a next-gesture and system starts fast forwarding the video but then if user moves his hand a bit to the right (indicating to move even further) then the system may accelerate the speed of the video fast-forwarding. In yet another example, if a rotation of a knob gesture is detected, a user input element may increase or decrease a parameter proportionally with the degree of rotation. Any suitable gesture modifications and action modifications may alternatively be used.
- One skilled in the art will recognize that there are innumerable potential gestures and/or combinations of gestures that can be used as gesture-to-action responses by the methods and system of the preferred embodiment to control one or more devices. Preferably, the one or more gestures can define specific functions for controlling applications within an operating framework. Alternatively, the one or more gestures can define one or more functions in response to the context (e.g., the type of media with which the user is interfacing. The set of possible gestures is preferably defined, though gestures may be dynamically added or removed from the set. The set of gestures preferably define a gesture framework or collective metaphor to interacting with applications through gestures. The system and method of a preferred embodiment can function to increase the intuitive nature of how gestures are globally applied and shared when there are multiple contexts of gestures. As an example, a “pause” gesture for a video might be substantially identical to a “mute” gesture for audio. Preferably, the one or more gestures can be directed at a single device for each imaging unit. Alternatively, a single imaging unit can function to receive gesture-based control commands for two or more devices, i.e., a single camera can be used to image gestures to control a computer, television, stereo, refrigerator, thermostat, or any other additional and/or suitable electronic device or appliance. In one alternative embodiment of the above method, a hierarchy model may additionally be used for directing gestures to appropriate devices. Devices are preferably organized in the hierarchy model in a manner substantially similar to that of applications. Accordingly, suitable gestures can include one or more gestures for selecting between devices or applications being controlled by the user.
- Preferably, the gestures usable in the methods and system of the preferred embodiment are natural and instinctive body movements that are learned, sensed, recognized, received, and/or detected by an imaging unit associated with a controllable device. As shown in
FIGS. 4A and 4B , example gestures can include a combination of a user's face and/or head as well as one or more hands.FIG. 4A illustrates an example “mute” gesture that can be used to control a volume or play/pause state of a device.FIG. 4B illustrates a “sleep” gesture that can be used to control a sleep cycle of an electronic device immediately or at a predetermined time. Preferably, the device can respond to a sleep gesture with a clock, virtual button, or other selector to permit the user to select a current or future time at which the device will enter a sleep state. Each example gesture can be undone and/or repealed by any other suitable gesture, including for example a repetition of the gesture in such a manner that a subsequent mute gesture returns the volume to the video media or adjusts the play/pause state of the audio media. - As shown in
FIGS. 15A-15I , other example gestures can include one or more hands of the user.FIG. 15A illustrates an example “stop” or “pause” gesture. The example pause gesture can be used to control an on/off, play/pause, still/toggle state of a device. As an example, a user can hold his or her hand in the position shown to pause a running media file, then repeat the gesture when the user is ready to resume watching or listening to the media file. Alternatively, the example pause gesture can be used to cause the device to stop or pause a transitional state between different media files, different devices, different applications, and the like. Repetition and/or a prolonged pause gesture can cause the device to scroll up/down through a tree or menu of items or files. The pause gesture can also be dynamic, moving in a plane parallel or perpendicular to the view of the imaging unit to simulate a pushing/pulling action, which can be indicative of a command to zoom in or zoom out, push a virtual button, alter or change foreground/background portions of a display, or any other suitable command in which a media file or application can be pushed or pulled, i.e., to the front or back of a queue of running files and/or applications. - As noted above,
FIG. 15B illustrates an example “positive” gesture, whileFIG. 15C illustrates an example “negative” gesture. Positive gestures can be used for any suitable command or action, including for example: confirm, like, buy, rent, sign, agree, positive rating, increase a temperature, number, volume, or channel, maintain, move screen, image, camera, or other device in an upward direction, or any other suitable command or action having a positive definition or connotation. Negative gestures can be used for any suitable command or action, including for example: disconfirm, dislike, deny, disagree, negative rating, decrease a temperature, a number, a volume, or a channel, change, move a screen, image, camera, or device in an upward direction, or any other suitable command or action having a negative definition or connotation. - As shown in
FIGS. 15D and 15E , suitable gestures can further include “down” (FIG. 15D ) and “up” (FIG. 15E ) gestures, i.e., wave or swipe gestures. The down and up gestures can be used for any suitable command or action, such as increasing or decreasing a quantity or metric such as volume, channel, or menu item. Alternatively, the down and up gestures can function as swipe or scroll gestures that allow a user to flip through a series of vertical menus, i.e., a photo album, music catalog, or the like. The down and up gestures can be paired with left and right swipe gestures (not shown) that function to allow a user to flip through a series of horizontal menus of the same type. Accordingly, an up/down pair of gestures can be used to scroll between types of media applications for example, while left/right gestures can be used to scroll between files within a selected type of media application. Alternatively, the up/down/left/right gestures can be used in any suitable combination to perform any natural or intuitive function on the controlled device such as opening/shutting a door, opening/closing a lid, or moving controllable elements relative to one another in a vertical and/or horizontal manner. Similarly, a pinch gesture as shown inFIG. 15J may be used to appropriately perform up/down/left/right actions. Accordingly, a pointer gesture may be used to scroll vertically and horizontally simultaneously or to pan around a map or image. Additionally the pointer gesture may be used to perform up/down or left/right actions according to focused, active, or top-level user interface elements. - As shown in
FIGS. 15F and 15G , suitable gestures can further include a “pinch” gesture that can vary between a “closed” state (FIG. 15F ) and an “open” state (FIG. 15G ). The pinch gesture can be used to increase or decrease a size, scale, shape, intensity, amplitude, or other feature of a controllable aspect of a device, such as for example a size, shape, intensity, or amplitude of a media file such as a displayed image or video file. Preferably, the pinch gesture can be followed dynamically for each user, such that the controllable device responds to a relative position of the user's thumb and forefinger in determining a relative size, scale, shape, intensity, amplitude, or other feature of the controllable aspect. The system and method described above preferably are adapted to recognize and/or process a scale of the user's pinch gesture relative to the motion of the thumb and forefinger relative to one another. That is, to a stationary 2D camera, the gap between the thumb and forefinger will appear to be larger if the user intentionally opens the gap or if the user moves his or her hand closer to the camera while maintaining the relative position between thumb and forefinger. Preferably, the system and method are configured to determine the relative gap between the user's thumb and forefinger while measuring the relative size/distance to the user's hand in order to determine the intent of the apparent increase/decrease in size in the pinch gesture. Alternatively, the pinch gesture can function in a binary mode in which the closed state denotes a relatively smaller size, scale, shape, intensity, amplitude and the open state denotes a relatively larger size, scale, shape, intensity, amplitude of the feature of the controllable aspect. - As shown in
FIGS. 15H and 15I , suitable gestures can further include a “knob” or twist gesture that can vary along a rotational continuum as shown by the relative positions of the user's thumb, forefinger, and middle finger inFIGS. 15H and 15I . The knob gesture preferably functions to adjust any scalable or other suitable feature of a controllable device, including for example a volume, temperature, intensity, amplitude, channel, size, shape, aspect, orientation, and the like. Alternatively, the knob gesture can function to scroll or move through a index of items for selection presented to a user such that rotation in a first direction moves a selector up/down or right/left and a rotation in an opposite direction moves the selector down/up or left/right. Preferably, the system and method described above can be configured to track a relative position of the triangle formed by the user's thumb, forefinger, and middle finger and further to track a rotation or transposition of this triangle through a range of motion consummate with turning a knob. Preferably, the knob gesture is measurable though a range of positions and/or increments to permit a user to finely tune or adjust the controllable feature being scaled. Alternatively, the knob gesture can be received in a discrete or stepwise fashion that relate to specific increments within a menu of variations of the controllable feature being scaled. - In other variations of the system and method of the preferred embodiment, the gestures can include application specific hand, face, and/or combination hand/face orientations of the user's body. For example, a video game might include system and/or methods for recognizing and responding to large body movements, throwing motions, jumping motions, boxing motions, simulated weapons, and the like. In another example, the preferred system and method of can include branded gestures that are configurations of the user's body that respond to, mimic, and/or represent specific brands of goods or services, i.e., a Nike-branded “Swoosh” icon made with a user's hand. Branded gestures can preferably be produced in response to media advertisements, such as in confirmation of receipt of a media advertisement to let the branding company know that the user has seen and/or heard the advertisement as shown in
FIG. 16 . In another variation, the system may detect branded objects, such as a coke bottle and when user is drinking coke bottle. In other variations of the system and method of the preferred embodiment, the gestures can be instructional and/or educational in nature, such as to teach children or adults basic counting on fingers, how to locate one's own nose, mouth, ears, and/or to select from a menu of items when learning about shapes, mathematics, language, vocabulary and the like. In a variation, the system may respond affirmatively every time it asks user to touch nose and user touches their nose. In another alternative of the preferred system and method, the gestures can include a universal “search” or “menu” gesture that allows a user to select between applications and therefore move between various application-specific gestures such as those noted above. - In another variation of the system and method of the preferred embodiment one or more gestures can be associated with the same action. As an example, both the knob gesture and the swipe gestures can be used to scroll between selectable elements within a menu of an application or between applications such that the system and method generate the same controlled output in response to either gesture input. Alternatively, a single gesture can preferably be used to control multiple applications, such that a stop or pause gesture ceases all running applications (video, audio, photostream), even if the user is only directly interfacing with one application at the top of the queue. Alternatively, a gesture can have an application-specific meaning, such that a mute gesture for a video application is interpreted as a pause gesture in an audio application. In another alternative of the preferred system and method, a user can employ more than one gesture substantially simultaneously within a single application to accomplish two or more controls. Alternatively, two or more gestures can be performed substantially simultaneously to control two or more applications substantially simultaneously.
- In another variation of the preferred system and method, each gesture can define one or more signatures usable in receiving, processing, and acting upon any one of the many suitable gestures. A gesture signature can be defined at least in part by the user's unique shapes and contours, a time lapse from beginning to end of the gesture, motion of a body part throughout the specified time lapse, and/or a hierarchy or tree of possible gestures. In one example configuration, a gesture signature can be detected based upon a predetermined hierarchy or decision tree through which the system and method are preferably constantly and routinely navigating. For example, in the mute gesture described above, the system and method are attempting to locate a user's index finger being placed next to his or her mouth. In searching for the example mute gesture, the system and method can eliminate all gestures not involving a user's face as those gestures would not quality, thus eliminating a good deal of excess movement (noise) of the user. On the contrary, the preferred system and method can look for a user's face and/or lips in all or across a majority of gestures; and in response to finding a face, determining whether the user's index finger is at or near the user's lips. In such a manner, the preferred system and method can constantly and repeatedly cascade through one or more decision trees in following and/or detecting lynchpin portions of the various gestures in order to increase the fidelity of the gesture detection and decrease the response time in controlling the controllable device. As such, any or all of the gestures described herein can be classified as either a base gesture or a derivative gesture defining different portions of a hierarchy or decision tree through which the preferred system and method navigate. Preferably, the imaging unit is configured for constant or near-constant monitoring of any active users in the field of view.
- In another variation of the system and method of the preferred embodiment, the receipt and recognition of gestures can be organized in a hierarchy model or queue within each application as described above. The hierarchy model or queue may additionally be applied to predictive gesture detection. For example, if the application is an audio application, then volume, play/pause, track select and other suitable gestures can be organized in a hierarchy such that the system and method can anticipate or narrow the possible gestures to be expected at any given time. Thus, if a user is moving through a series of tracks, then the system and method can reasonably anticipate that the next received gesture will also be a track selection knob or swipe gesture as opposed to a play/pause gesture. As noted above, in another variation of the preferred system and method, a single gesture can control one or more applications substantially simultaneously. In the event that multiple applications are simultaneously open, the priority queue can decide which applications to group together for joint control by the same gestures and which applications require different types of gestures for unique control. Accordingly, all audio and video applications can share a large number of the same gestures and thus be grouped together for queuing purposes, while a browser, appliance, or thermostat application might require a different set of control gestures and thus not be optimal for simultaneous control through single gestures. Alternatively, the meaning of a gesture can be dependent upon the application (context) in which it is used, such that a pause gesture in an audio application can be the same movement as a hold temperature gesture in a thermostat or refrigerator application.
- In another alternative, the camera resolution of the imaging unit can preferably be varied depending upon the application, the gesture, and/or the position of the system and method within the hierarchy. For example, if the imaging unit is detecting a hand-based gesture such as a pinch or knob gesture, then it will need relatively higher resolution to determine finger position. By way of comparison, the swipe, pause, positive, and negative gestures require less resolution as grosser anatomy and movements can be detected to extract the meaning from the movement of the user. Given that certain gestures may not be suitable within certain applications, the imaging unit can be configured to alter its resolution in response to application in use or the types of gestures available within the predetermined decision tree for each of the open applications. The imaging unit may also adjust the resolution by constantly detecting for user presence and then adjusting the resolution so that it can capture user gestures at the user distance from the imaging unit. The system may deploy face detection or upper body of the user to estimate presence of the user and adjust size accordingly.
- An alternative embodiment preferably implements the above methods in a computer-readable medium storing computer-readable instructions. The instructions are preferably executed by computer-executable components preferably integrated with a imaging unit and a computing device. The computer-readable medium may be stored on any suitable computer readable media such as RAMs, ROMs, flash memory, EEPROMs, optical devices (CD or DVD), hard drives, floppy drives, or any suitable device. The computer-executable component is preferably a processor but the instructions may alternatively or additionally be executed by any suitable dedicated hardware device.
- As a person skilled in the art will recognize from the previous detailed description and from the figures and claims, modifications and changes can be made to the preferred embodiments of the invention without departing from the scope of this invention defined in the following claims.
Claims (19)
1. A method comprising:
detecting an application change within a multi-application operating system;
updating an application hierarchy model for gesture-to-action responses with the detected application change;
detecting a gesture;
according to the hierarchy model, mapping the detected gesture to an action of an application; and
triggering the mapped action of the application.
2. The method of claim 1 , wherein detecting an application change comprises detecting a selection of a new top-level application within the operating system; and updating an application-gesture priority queue comprises promoting the new top-level application in the hierarchy model.
3. The method of claim 2 , further comprising signaling a change in the application-gesture priority queue upon updating the application-gesture priority queue.
4. The method of claim 1 , wherein detecting application change comprises detecting a change of context within an active application.
5. The method of claim 4 , wherein detecting a change of context comprises detecting the loading of a media object in an active application.
6. The method of claim 1 , wherein mapping the detected gesture to an action of an application comprises: if a gesture is not actionable within an initial application in the hierarchy model, progressively checking gesture-to-action responses of an application in a lower hierarchy of the hierarchy model.
7. The method of claim 1 , wherein detecting a gesture comprises limiting gesture detection processing to a subset of gestures defined by gestures in the application hierarchy model.
8. The method of claim 1 , further comprising detecting user settings according to facial recognition of a user; and if an active application is set as a preferred application in the detected user settings, promoting the preferred application in the application hierarchy model.
9. The method of claim 1 , wherein a gesture is actionable by at least two applications in the hierarchy model; and wherein mapping the detected gesture to an action of an application comprises selecting the action of the application with the highest priority in the hierarchy model.
10. The method of claim 9 , wherein at least one gesture in the set of gestures is defined by a thumbs up gesture heuristic that is used for at least voting, approval, and confirming for a first, second, and third application respectively.
11. The method of claim 1 , wherein detecting a gesture comprises detecting a gesture presence from a set of gestures characterized in the gesture-to-action responses in the hierarchy model.
12. The method of claim 11 , further comprising for at least one gesture in the set of gestures, subsequently initiating the action for at least a second time if a prolonged presence of the at least one gesture is detected.
13. The method of claim 11 , wherein for at least one gesture in the set of gestures, initiating a modified form of the action if a translation of the at least one gesture is detected.
14. The method of claim 13 , wherein at least one gesture in the set of gestures is defined by a pinch gesture heuristic; wherein the gesture-to-action response is a scrolling response if the detected gesture is a pinch gesture heuristic and a translation of the pinch gesture along an axis scrolls is detected.
15. The method of claim 11 , wherein at least a first gesture in the set of gestures is defined by a thumbs up gesture heuristic, at least a second gesture in the set of gestures is defined by a mute gesture heuristic, and at least a third gesture in the set of gestures is defined by an extended sideways thumb gesture heuristic.
16. The method of claim 15 , wherein at least a fourth gesture in the set of gestures is defined by a palm up gesture heuristic and at least a fifth gesture in the set of gestures is defined by a palm down heuristic.
17. A method comprising:
detecting an application change within a multi-application operating framework;
updating an application hierarchy model for gesture-to-action responses with the detected application change;
detecting a gesture from a set of presence-based gestures;
mapping the detected gesture to a gesture-to-action response in the hierarchy model, wherein if a gesture-to-action response is not identified within an initial application in the hierarchy model, progressively checking gesture-to-action responses of an application in a lower hierarchy of the hierarchy model;
if the detected gesture is a first gesture, detecting translation of the first gesture;
if the detected gesture is a second gesture, detecting rotation of the first gesture;
if the detected gesture is a third gesture, detecting prolonged presence of the third gesture; and
triggering the action, wherein the action is modified according to a modified action if defined for translation, prolonged presence or rotation.
18. The method of claim 17 , wherein at least one gesture in the set of presence-based gestures is defined by a thumbs up gesture heuristic, at least a one gesture in the set of gestures is defined by a mute gesture heuristic, and at least one gesture in the set of gestures is defined by an extended sideways thumb gesture heuristic.
19. The method of claim 17 , wherein at least one gesture in the set of presence-based gestures is defined by a palm up gesture heuristic, and at least a one gesture in the set of gestures is defined by a palm down gesture heuristic.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/796,772 US20140157209A1 (en) | 2012-12-03 | 2013-03-12 | System and method for detecting gestures |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261732840P | 2012-12-03 | 2012-12-03 | |
US13/796,772 US20140157209A1 (en) | 2012-12-03 | 2013-03-12 | System and method for detecting gestures |
Publications (1)
Publication Number | Publication Date |
---|---|
US20140157209A1 true US20140157209A1 (en) | 2014-06-05 |
Family
ID=50826821
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/796,772 Abandoned US20140157209A1 (en) | 2012-12-03 | 2013-03-12 | System and method for detecting gestures |
Country Status (2)
Country | Link |
---|---|
US (1) | US20140157209A1 (en) |
WO (1) | WO2014088621A1 (en) |
Cited By (76)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120306911A1 (en) * | 2011-06-02 | 2012-12-06 | Sony Corporation | Display control apparatus, display control method, and program |
US20140295931A1 (en) * | 2013-03-28 | 2014-10-02 | Stmicroelectronics Ltd. | Three-dimensional gesture recognition system, circuit, and method for a touch screen |
US20140304665A1 (en) * | 2013-04-05 | 2014-10-09 | Leap Motion, Inc. | Customized gesture interpretation |
US20140320457A1 (en) * | 2013-04-29 | 2014-10-30 | Wistron Corporation | Method of determining touch gesture and touch control system |
US20140347263A1 (en) * | 2013-05-23 | 2014-11-27 | Fastvdo Llc | Motion-Assisted Visual Language For Human Computer Interfaces |
US20140365962A1 (en) * | 2013-06-07 | 2014-12-11 | Verizon New Jersey Inc. | Navigating between applications of a device |
US20140368688A1 (en) * | 2013-06-14 | 2014-12-18 | Qualcomm Incorporated | Computer vision application processing |
US20150015480A1 (en) * | 2012-12-13 | 2015-01-15 | Jeremy Burr | Gesture pre-processing of video stream using a markered region |
US20150088722A1 (en) * | 2013-09-26 | 2015-03-26 | Trading Technologies International, Inc. | Methods and Apparatus to Implement Spin-Gesture Based Trade Action Parameter Selection |
US9154739B1 (en) * | 2011-11-30 | 2015-10-06 | Google Inc. | Physical training assistant system |
US20160012281A1 (en) * | 2014-07-11 | 2016-01-14 | Ryan Fink | Systems and methods of gesture recognition |
US20160026256A1 (en) * | 2014-07-24 | 2016-01-28 | Snecma | Device for assisted maintenance of an aircraft engine by recognition of a remote movement |
US20160054808A1 (en) * | 2013-09-04 | 2016-02-25 | Sk Telecom Co., Ltd. | Method and device for executing command on basis of context awareness |
US20160078290A1 (en) * | 2014-07-31 | 2016-03-17 | Jason Rambler | Scanner gesture recognition |
US9304583B2 (en) | 2008-11-20 | 2016-04-05 | Amazon Technologies, Inc. | Movement recognition as input mechanism |
US20160132127A1 (en) * | 2013-06-27 | 2016-05-12 | Futureplay Inc. | Method and Device for Determining User Input on Basis of Visual Information on User's Fingernails or Toenails |
JP2016161208A (en) * | 2015-03-02 | 2016-09-05 | シャープ株式会社 | Refrigerator |
US20160282951A1 (en) * | 2013-06-27 | 2016-09-29 | Futureplay Inc. | Method and Device for Determining User Input on Basis of Visual Information on User's Fingernails or Toenails |
US9471153B1 (en) * | 2012-03-14 | 2016-10-18 | Amazon Technologies, Inc. | Motion detection systems for electronic devices |
US9501171B1 (en) * | 2012-10-15 | 2016-11-22 | Famous Industries, Inc. | Gesture fingerprinting |
CN106168774A (en) * | 2015-05-20 | 2016-11-30 | 西安中兴新软件有限责任公司 | A kind of information processing method and electronic equipment |
US20160349848A1 (en) * | 2014-10-14 | 2016-12-01 | Boe Technology Group Co., Ltd. | Method and device for controlling application, and electronic device |
CN106233241A (en) * | 2014-01-23 | 2016-12-14 | 苹果公司 | Virtual machine keyboard |
US20170010676A1 (en) * | 2014-01-31 | 2017-01-12 | Matthew C. Putman | Apparatus and method for manipulating objects with gesture controls |
US20170032304A1 (en) * | 2015-07-30 | 2017-02-02 | Ncr Corporation | Point-of-sale (pos) terminal assistance |
US9632658B2 (en) | 2013-01-15 | 2017-04-25 | Leap Motion, Inc. | Dynamic user interactions for display control and scaling responsiveness of display objects |
US20170148172A1 (en) * | 2015-11-20 | 2017-05-25 | Sony Interactive Entertainment Inc. | Image processing device and method |
CN106774829A (en) * | 2016-11-14 | 2017-05-31 | 平安科技（深圳）有限公司 | A kind of object control method and apparatus |
US9672627B1 (en) * | 2013-05-09 | 2017-06-06 | Amazon Technologies, Inc. | Multiple camera based motion tracking |
US9747696B2 (en) | 2013-05-17 | 2017-08-29 | Leap Motion, Inc. | Systems and methods for providing normalized parameters of motions of objects in three-dimensional space |
US20170255273A1 (en) * | 2015-08-07 | 2017-09-07 | Fitbit, Inc. | User identification via motion and heartbeat waveform data |
US9772889B2 (en) | 2012-10-15 | 2017-09-26 | Famous Industries, Inc. | Expedited processing and handling of events |
US20180018965A1 (en) * | 2016-07-12 | 2018-01-18 | Bose Corporation | Combining Gesture and Voice User Interfaces |
US20180068483A1 (en) * | 2014-12-18 | 2018-03-08 | Facebook, Inc. | System, device and method for providing user interface for a virtual reality environment |
US20180143693A1 (en) * | 2016-11-21 | 2018-05-24 | David J. Calabrese | Virtual object manipulation |
US10025991B2 (en) | 2016-11-08 | 2018-07-17 | Dedrone Holdings, Inc. | Systems, methods, apparatuses, and devices for identifying, tracking, and managing unmanned aerial vehicles |
WO2018182217A1 (en) * | 2017-03-28 | 2018-10-04 | Samsung Electronics Co., Ltd. | Method for adaptive authentication and electronic device supporting the same |
US10198083B2 (en) * | 2014-02-25 | 2019-02-05 | Xi'an Zhongxing New Software Co. Ltd. | Hand gesture recognition method, device, system, and computer storage medium |
US10229329B2 (en) * | 2016-11-08 | 2019-03-12 | Dedrone Holdings, Inc. | Systems, methods, apparatuses, and devices for identifying, tracking, and managing unmanned aerial vehicles |
US20190138110A1 (en) * | 2013-02-01 | 2019-05-09 | Samsung Electronics Co., Ltd. | Method of controlling an operation of a camera apparatus and a camera apparatus |
US20190243520A1 (en) * | 2018-02-07 | 2019-08-08 | Citrix Systems, Inc. | Using Pressure Sensor Data in a Remote Access Environment |
US10390088B2 (en) * | 2017-01-17 | 2019-08-20 | Nanning Fugui Precision Industrial Co., Ltd. | Collection and processing method for viewing information of videos and device and server using the same |
US10402081B1 (en) * | 2018-08-28 | 2019-09-03 | Fmr Llc | Thumb scroll user interface element for augmented reality or virtual reality environments |
US10585407B2 (en) * | 2013-07-12 | 2020-03-10 | Whirlpool Corporation | Home appliance and method of operating a home appliance |
WO2020073607A1 (en) | 2018-10-09 | 2020-04-16 | Midea Group Co., Ltd. | Method and system for providing control user interfaces for home appliances |
US10624561B2 (en) | 2017-04-12 | 2020-04-21 | Fitbit, Inc. | User identification by biometric monitoring device |
WO2020139413A1 (en) * | 2018-12-27 | 2020-07-02 | Google Llc | Expanding physical motion gesture lexicon for an automated assistant |
US10719167B2 (en) | 2016-07-29 | 2020-07-21 | Apple Inc. | Systems, devices and methods for dynamically providing user interface secondary display |
CN111624770A (en) * | 2015-04-15 | 2020-09-04 | 索尼互动娱乐股份有限公司 | Pinch and hold gesture navigation on head mounted display |
CN111736702A (en) * | 2019-06-27 | 2020-10-02 | 谷歌有限责任公司 | Intent detection with computing devices |
US10877780B2 (en) | 2012-10-15 | 2020-12-29 | Famous Industries, Inc. | Visibility detection using gesture fingerprinting |
US10908929B2 (en) | 2012-10-15 | 2021-02-02 | Famous Industries, Inc. | Human versus bot detection using gesture fingerprinting |
US11010815B1 (en) | 2020-01-17 | 2021-05-18 | Capital One Services, Llc | Systems and methods for vehicle recommendations based on user gestures |
US11029942B1 (en) | 2011-12-19 | 2021-06-08 | Majen Tech, LLC | System, method, and computer program product for device coordination |
US11048924B1 (en) * | 2018-05-27 | 2021-06-29 | Asilla, Inc. | Action-estimating device |
US11182853B2 (en) | 2016-06-27 | 2021-11-23 | Trading Technologies International, Inc. | User action for continued participation in markets |
US11195354B2 (en) * | 2018-04-27 | 2021-12-07 | Carrier Corporation | Gesture access control system including a mobile device disposed in a containment carried by a user |
US11209975B2 (en) * | 2013-03-03 | 2021-12-28 | Microsoft Technology Licensing, Llc | Enhanced canvas environments |
US20220006933A1 (en) * | 2019-03-21 | 2022-01-06 | Event Capture Systems, Inc. | Infrared and broad spectrum illumination for simultaneous machine vision and human vision |
US11221681B2 (en) * | 2017-12-22 | 2022-01-11 | Beijing Sensetime Technology Development Co., Ltd | Methods and apparatuses for recognizing dynamic gesture, and control methods and apparatuses using gesture interaction |
US11232419B2 (en) * | 2018-03-19 | 2022-01-25 | Capital One Services, Llc | Systems and methods for translating a gesture to initiate a financial transaction |
US20220100283A1 (en) * | 2019-08-30 | 2022-03-31 | Google Llc | Visual Indicator for Paused Radar Gestures |
US20220137807A1 (en) * | 2014-02-21 | 2022-05-05 | Groupon, Inc. | Method and system for use of biometric information associated with consumer interactions |
US11373373B2 (en) | 2019-10-22 | 2022-06-28 | International Business Machines Corporation | Method and system for translating air writing to an augmented reality device |
US11386257B2 (en) | 2012-10-15 | 2022-07-12 | Amaze Software, Inc. | Efficient manipulation of surfaces in multi-dimensional space using energy agents |
US11435895B2 (en) | 2013-12-28 | 2022-09-06 | Trading Technologies International, Inc. | Methods and apparatus to enable a trading device to accept a user input |
US20220404914A1 (en) * | 2019-05-06 | 2022-12-22 | Samsung Electronics Co., Ltd. | Methods for gesture recognition and control |
US11599199B2 (en) * | 2019-11-28 | 2023-03-07 | Boe Technology Group Co., Ltd. | Gesture recognition apparatus, gesture recognition method, computer device and storage medium |
US11675617B2 (en) * | 2018-03-21 | 2023-06-13 | Toshiba Global Commerce Solutions Holdings Corporation | Sensor-enabled prioritization of processing task requests in an environment |
US11720180B2 (en) | 2012-01-17 | 2023-08-08 | Ultrahaptics IP Two Limited | Systems and methods for machine control |
US11790693B2 (en) | 2019-07-26 | 2023-10-17 | Google Llc | Authentication management through IMU and radar |
US11809632B2 (en) | 2018-04-27 | 2023-11-07 | Carrier Corporation | Gesture access control system and method of predicting mobile device location relative to user |
US11841933B2 (en) | 2019-06-26 | 2023-12-12 | Google Llc | Radar-based authentication status feedback |
US11868537B2 (en) | 2019-07-26 | 2024-01-09 | Google Llc | Robust radar-based gesture-recognition by user equipment |
US11875012B2 (en) | 2018-05-25 | 2024-01-16 | Ultrahaptics IP Two Limited | Throwable interface for augmented reality and virtual reality environments |
US11914419B2 (en) | 2014-01-23 | 2024-02-27 | Apple Inc. | Systems and methods for prompting a log-in to an electronic device based on biometric information received from a user |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6351222B1 (en) * | 1998-10-30 | 2002-02-26 | Ati International Srl | Method and apparatus for receiving an input by an entertainment device |
US20060026521A1 (en) * | 2004-07-30 | 2006-02-02 | Apple Computer, Inc. | Gestures for touch sensitive input devices |
US20060187196A1 (en) * | 2005-02-08 | 2006-08-24 | Underkoffler John S | System and method for gesture based control system |
US20060242607A1 (en) * | 2003-06-13 | 2006-10-26 | University Of Lancaster | User interface |
US7173604B2 (en) * | 2004-03-23 | 2007-02-06 | Fujitsu Limited | Gesture identification of controlled devices |
US20070236475A1 (en) * | 2006-04-05 | 2007-10-11 | Synaptics Incorporated | Graphical scroll wheel |
US20090103780A1 (en) * | 2006-07-13 | 2009-04-23 | Nishihara H Keith | Hand-Gesture Recognition Method |
US20110173574A1 (en) * | 2010-01-08 | 2011-07-14 | Microsoft Corporation | In application gesture interpretation |
US20110304541A1 (en) * | 2010-06-11 | 2011-12-15 | Navneet Dalal | Method and system for detecting gestures |
US20140046922A1 (en) * | 2012-08-08 | 2014-02-13 | Microsoft Corporation | Search user interface using outward physical expressions |
US8902154B1 (en) * | 2006-07-11 | 2014-12-02 | Dp Technologies, Inc. | Method and apparatus for utilizing motion user interface |
US20150020191A1 (en) * | 2012-01-08 | 2015-01-15 | Synacor Inc. | Method and system for dynamically assignable user interface |
Family Cites Families (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9182937B2 (en) * | 2010-10-01 | 2015-11-10 | Z124 | Desktop reveal by moving a logical display stack with gestures |
US7956847B2 (en) * | 2007-01-05 | 2011-06-07 | Apple Inc. | Gestures for controlling, manipulating, and editing of media files using touch sensitive devices |
US8432372B2 (en) * | 2007-11-30 | 2013-04-30 | Microsoft Corporation | User input using proximity sensing |
US9772689B2 (en) * | 2008-03-04 | 2017-09-26 | Qualcomm Incorporated | Enhanced gesture-based image manipulation |
KR20110112831A (en) * | 2009-01-05 | 2011-10-13 | 스마트 테크놀러지스 유엘씨 | Gesture recognition method and interactive input system employing same |
US8749484B2 (en) * | 2010-10-01 | 2014-06-10 | Z124 | Multi-screen user interface with orientation based control |
-
2013
- 2013-03-12 US US13/796,772 patent/US20140157209A1/en not_active Abandoned
- 2013-03-12 WO PCT/US2013/030574 patent/WO2014088621A1/en active Application Filing
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6351222B1 (en) * | 1998-10-30 | 2002-02-26 | Ati International Srl | Method and apparatus for receiving an input by an entertainment device |
US20060242607A1 (en) * | 2003-06-13 | 2006-10-26 | University Of Lancaster | User interface |
US7173604B2 (en) * | 2004-03-23 | 2007-02-06 | Fujitsu Limited | Gesture identification of controlled devices |
US20060026521A1 (en) * | 2004-07-30 | 2006-02-02 | Apple Computer, Inc. | Gestures for touch sensitive input devices |
US20060187196A1 (en) * | 2005-02-08 | 2006-08-24 | Underkoffler John S | System and method for gesture based control system |
US20070236475A1 (en) * | 2006-04-05 | 2007-10-11 | Synaptics Incorporated | Graphical scroll wheel |
US8902154B1 (en) * | 2006-07-11 | 2014-12-02 | Dp Technologies, Inc. | Method and apparatus for utilizing motion user interface |
US20090103780A1 (en) * | 2006-07-13 | 2009-04-23 | Nishihara H Keith | Hand-Gesture Recognition Method |
US20110173574A1 (en) * | 2010-01-08 | 2011-07-14 | Microsoft Corporation | In application gesture interpretation |
US20110304541A1 (en) * | 2010-06-11 | 2011-12-15 | Navneet Dalal | Method and system for detecting gestures |
US20150020191A1 (en) * | 2012-01-08 | 2015-01-15 | Synacor Inc. | Method and system for dynamically assignable user interface |
US20140046922A1 (en) * | 2012-08-08 | 2014-02-13 | Microsoft Corporation | Search user interface using outward physical expressions |
Cited By (141)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9304583B2 (en) | 2008-11-20 | 2016-04-05 | Amazon Technologies, Inc. | Movement recognition as input mechanism |
US9805390B2 (en) * | 2011-06-02 | 2017-10-31 | Sony Corporation | Display control apparatus, display control method, and program |
US20120306911A1 (en) * | 2011-06-02 | 2012-12-06 | Sony Corporation | Display control apparatus, display control method, and program |
US9154739B1 (en) * | 2011-11-30 | 2015-10-06 | Google Inc. | Physical training assistant system |
US11029942B1 (en) | 2011-12-19 | 2021-06-08 | Majen Tech, LLC | System, method, and computer program product for device coordination |
US11720180B2 (en) | 2012-01-17 | 2023-08-08 | Ultrahaptics IP Two Limited | Systems and methods for machine control |
US9471153B1 (en) * | 2012-03-14 | 2016-10-18 | Amazon Technologies, Inc. | Motion detection systems for electronic devices |
US9652076B1 (en) * | 2012-10-15 | 2017-05-16 | Famous Industries, Inc. | Gesture fingerprinting |
US10521249B1 (en) * | 2012-10-15 | 2019-12-31 | Famous Industries, Inc. | Gesture Fingerprinting |
US9772889B2 (en) | 2012-10-15 | 2017-09-26 | Famous Industries, Inc. | Expedited processing and handling of events |
US11386257B2 (en) | 2012-10-15 | 2022-07-12 | Amaze Software, Inc. | Efficient manipulation of surfaces in multi-dimensional space using energy agents |
US10877780B2 (en) | 2012-10-15 | 2020-12-29 | Famous Industries, Inc. | Visibility detection using gesture fingerprinting |
US9501171B1 (en) * | 2012-10-15 | 2016-11-22 | Famous Industries, Inc. | Gesture fingerprinting |
US10908929B2 (en) | 2012-10-15 | 2021-02-02 | Famous Industries, Inc. | Human versus bot detection using gesture fingerprinting |
US20150015480A1 (en) * | 2012-12-13 | 2015-01-15 | Jeremy Burr | Gesture pre-processing of video stream using a markered region |
US10146322B2 (en) | 2012-12-13 | 2018-12-04 | Intel Corporation | Gesture pre-processing of video stream using a markered region |
US10261596B2 (en) | 2012-12-13 | 2019-04-16 | Intel Corporation | Gesture pre-processing of video stream using a markered region |
US9720507B2 (en) * | 2012-12-13 | 2017-08-01 | Intel Corporation | Gesture pre-processing of video stream using a markered region |
US9632658B2 (en) | 2013-01-15 | 2017-04-25 | Leap Motion, Inc. | Dynamic user interactions for display control and scaling responsiveness of display objects |
US10817130B2 (en) | 2013-01-15 | 2020-10-27 | Ultrahaptics IP Two Limited | Dynamic user interactions for display control and measuring degree of completeness of user gestures |
US10042510B2 (en) | 2013-01-15 | 2018-08-07 | Leap Motion, Inc. | Dynamic user interactions for display control and measuring degree of completeness of user gestures |
US10241639B2 (en) | 2013-01-15 | 2019-03-26 | Leap Motion, Inc. | Dynamic user interactions for display control and manipulation of display objects |
US11269481B2 (en) | 2013-01-15 | 2022-03-08 | Ultrahaptics IP Two Limited | Dynamic user interactions for display control and measuring degree of completeness of user gestures |
US10782847B2 (en) | 2013-01-15 | 2020-09-22 | Ultrahaptics IP Two Limited | Dynamic user interactions for display control and scaling responsiveness of display objects |
US11119577B2 (en) * | 2013-02-01 | 2021-09-14 | Samsung Electronics Co., Ltd | Method of controlling an operation of a camera apparatus and a camera apparatus |
US20190138110A1 (en) * | 2013-02-01 | 2019-05-09 | Samsung Electronics Co., Ltd. | Method of controlling an operation of a camera apparatus and a camera apparatus |
US11209975B2 (en) * | 2013-03-03 | 2021-12-28 | Microsoft Technology Licensing, Llc | Enhanced canvas environments |
US9164674B2 (en) * | 2013-03-28 | 2015-10-20 | Stmicroelectronics Asia Pacific Pte Ltd | Three-dimensional gesture recognition system, circuit, and method for a touch screen |
US20140295931A1 (en) * | 2013-03-28 | 2014-10-02 | Stmicroelectronics Ltd. | Three-dimensional gesture recognition system, circuit, and method for a touch screen |
US20220269352A1 (en) * | 2013-04-05 | 2022-08-25 | Ultrahaptics IP Two Limited | Method for creating a gesture library |
US20140304665A1 (en) * | 2013-04-05 | 2014-10-09 | Leap Motion, Inc. | Customized gesture interpretation |
US11347317B2 (en) | 2013-04-05 | 2022-05-31 | Ultrahaptics IP Two Limited | Customized gesture interpretation |
US10620709B2 (en) * | 2013-04-05 | 2020-04-14 | Ultrahaptics IP Two Limited | Customized gesture interpretation |
US20140320457A1 (en) * | 2013-04-29 | 2014-10-30 | Wistron Corporation | Method of determining touch gesture and touch control system |
US9122345B2 (en) * | 2013-04-29 | 2015-09-01 | Wistron Corporation | Method of determining touch gesture and touch control system |
US9672627B1 (en) * | 2013-05-09 | 2017-06-06 | Amazon Technologies, Inc. | Multiple camera based motion tracking |
US9747696B2 (en) | 2013-05-17 | 2017-08-29 | Leap Motion, Inc. | Systems and methods for providing normalized parameters of motions of objects in three-dimensional space |
US20140347263A1 (en) * | 2013-05-23 | 2014-11-27 | Fastvdo Llc | Motion-Assisted Visual Language For Human Computer Interfaces |
US9829984B2 (en) * | 2013-05-23 | 2017-11-28 | Fastvdo Llc | Motion-assisted visual language for human computer interfaces |
US10168794B2 (en) * | 2013-05-23 | 2019-01-01 | Fastvdo Llc | Motion-assisted visual language for human computer interfaces |
US20140365962A1 (en) * | 2013-06-07 | 2014-12-11 | Verizon New Jersey Inc. | Navigating between applications of a device |
US10514965B2 (en) * | 2013-06-07 | 2019-12-24 | Verizon New Jersey Inc. | Navigating between applications of a device |
US20140368688A1 (en) * | 2013-06-14 | 2014-12-18 | Qualcomm Incorporated | Computer vision application processing |
US10694106B2 (en) | 2013-06-14 | 2020-06-23 | Qualcomm Incorporated | Computer vision application processing |
US10091419B2 (en) * | 2013-06-14 | 2018-10-02 | Qualcomm Incorporated | Computer vision application processing |
US20160282951A1 (en) * | 2013-06-27 | 2016-09-29 | Futureplay Inc. | Method and Device for Determining User Input on Basis of Visual Information on User's Fingernails or Toenails |
US20160132127A1 (en) * | 2013-06-27 | 2016-05-12 | Futureplay Inc. | Method and Device for Determining User Input on Basis of Visual Information on User's Fingernails or Toenails |
US10585407B2 (en) * | 2013-07-12 | 2020-03-10 | Whirlpool Corporation | Home appliance and method of operating a home appliance |
US20160054808A1 (en) * | 2013-09-04 | 2016-02-25 | Sk Telecom Co., Ltd. | Method and device for executing command on basis of context awareness |
US10198081B2 (en) * | 2013-09-04 | 2019-02-05 | Sk Telecom Co., Ltd. | Method and device for executing command on basis of context awareness |
US20150088722A1 (en) * | 2013-09-26 | 2015-03-26 | Trading Technologies International, Inc. | Methods and Apparatus to Implement Spin-Gesture Based Trade Action Parameter Selection |
US9727915B2 (en) * | 2013-09-26 | 2017-08-08 | Trading Technologies International, Inc. | Methods and apparatus to implement spin-gesture based trade action parameter selection |
US11847315B2 (en) | 2013-12-28 | 2023-12-19 | Trading Technologies International, Inc. | Methods and apparatus to enable a trading device to accept a user input |
US11435895B2 (en) | 2013-12-28 | 2022-09-06 | Trading Technologies International, Inc. | Methods and apparatus to enable a trading device to accept a user input |
US10606539B2 (en) * | 2014-01-23 | 2020-03-31 | Apple Inc. | System and method of updating a dynamic input and output device |
US10908864B2 (en) | 2014-01-23 | 2021-02-02 | Apple Inc. | Systems, devices, and methods for dynamically providing user interface controls at a touch-sensitive secondary display |
US10754603B2 (en) | 2014-01-23 | 2020-08-25 | Apple Inc. | Systems, devices, and methods for dynamically providing user interface controls at a touch-sensitive secondary display |
CN106233241A (en) * | 2014-01-23 | 2016-12-14 | 苹果公司 | Virtual machine keyboard |
US11321041B2 (en) | 2014-01-23 | 2022-05-03 | Apple Inc. | Systems, devices, and methods for dynamically providing user interface controls at a touch-sensitive secondary display |
US11914419B2 (en) | 2014-01-23 | 2024-02-27 | Apple Inc. | Systems and methods for prompting a log-in to an electronic device based on biometric information received from a user |
US11429145B2 (en) | 2014-01-23 | 2022-08-30 | Apple Inc. | Systems and methods for prompting a log-in to an electronic device based on biometric information received from a user |
US20170010846A1 (en) * | 2014-01-23 | 2017-01-12 | Apple Inc. | System and method of updating a dynamic input and output device |
US10613808B2 (en) * | 2014-01-23 | 2020-04-07 | Apple Inc. | Systems, devices, and methods for dynamically providing user interface controls at a touch-sensitive secondary display |
US20170010676A1 (en) * | 2014-01-31 | 2017-01-12 | Matthew C. Putman | Apparatus and method for manipulating objects with gesture controls |
US11747911B2 (en) | 2014-01-31 | 2023-09-05 | Nanotronics Imaging, Inc. | Apparatus and method for manipulating objects with gesture controls |
US10691215B2 (en) * | 2014-01-31 | 2020-06-23 | Nanotronics Imaging, Inc. | Apparatus and method for manipulating objects with gesture controls |
US10901521B2 (en) | 2014-01-31 | 2021-01-26 | Nanotronics Imaging, Inc. | Apparatus and method for manipulating objects with gesture controls |
US11409367B2 (en) * | 2014-01-31 | 2022-08-09 | Nanotronics Imaging, Inc. | Apparatus and method for manipulating objects with gesture controls |
US20220137807A1 (en) * | 2014-02-21 | 2022-05-05 | Groupon, Inc. | Method and system for use of biometric information associated with consumer interactions |
US10198083B2 (en) * | 2014-02-25 | 2019-02-05 | Xi'an Zhongxing New Software Co. Ltd. | Hand gesture recognition method, device, system, and computer storage medium |
US20160012281A1 (en) * | 2014-07-11 | 2016-01-14 | Ryan Fink | Systems and methods of gesture recognition |
US9734391B2 (en) * | 2014-07-11 | 2017-08-15 | Ryan Fink | Systems and methods of gesture recognition |
US20170316261A1 (en) * | 2014-07-11 | 2017-11-02 | Ryan Fink | Systems and metohds of gesture recognition |
US20160026256A1 (en) * | 2014-07-24 | 2016-01-28 | Snecma | Device for assisted maintenance of an aircraft engine by recognition of a remote movement |
US20160078290A1 (en) * | 2014-07-31 | 2016-03-17 | Jason Rambler | Scanner gesture recognition |
US10354242B2 (en) * | 2014-07-31 | 2019-07-16 | Ncr Corporation | Scanner gesture recognition |
US20160349848A1 (en) * | 2014-10-14 | 2016-12-01 | Boe Technology Group Co., Ltd. | Method and device for controlling application, and electronic device |
EP3208686A4 (en) * | 2014-10-14 | 2018-06-06 | Boe Technology Group Co. Ltd. | Application control method and apparatus and electronic device |
US10559113B2 (en) * | 2014-12-18 | 2020-02-11 | Facebook Technologies, Llc | System, device and method for providing user interface for a virtual reality environment |
US20180068483A1 (en) * | 2014-12-18 | 2018-03-08 | Facebook, Inc. | System, device and method for providing user interface for a virtual reality environment |
JP2016161208A (en) * | 2015-03-02 | 2016-09-05 | シャープ株式会社 | Refrigerator |
CN111624770A (en) * | 2015-04-15 | 2020-09-04 | 索尼互动娱乐股份有限公司 | Pinch and hold gesture navigation on head mounted display |
CN106168774A (en) * | 2015-05-20 | 2016-11-30 | 西安中兴新软件有限责任公司 | A kind of information processing method and electronic equipment |
CN106295383A (en) * | 2015-05-20 | 2017-01-04 | 西安中兴新软件有限责任公司 | A kind of information processing method and electronic equipment |
US20170032304A1 (en) * | 2015-07-30 | 2017-02-02 | Ncr Corporation | Point-of-sale (pos) terminal assistance |
US10552778B2 (en) * | 2015-07-30 | 2020-02-04 | Ncr Corporation | Point-of-sale (POS) terminal assistance |
US10503268B2 (en) | 2015-08-07 | 2019-12-10 | Fitbit, Inc. | User identification via motion and heartbeat waveform data |
US9851808B2 (en) * | 2015-08-07 | 2017-12-26 | Fitbit, Inc. | User identification via motion and heartbeat waveform data |
US20170255273A1 (en) * | 2015-08-07 | 2017-09-07 | Fitbit, Inc. | User identification via motion and heartbeat waveform data |
US10126830B2 (en) | 2015-08-07 | 2018-11-13 | Fitbit, Inc. | User identification via motion and heartbeat waveform data |
US10942579B2 (en) | 2015-08-07 | 2021-03-09 | Fitbit, Inc. | User identification via motion and heartbeat waveform data |
US20170148172A1 (en) * | 2015-11-20 | 2017-05-25 | Sony Interactive Entertainment Inc. | Image processing device and method |
US10275890B2 (en) * | 2015-11-20 | 2019-04-30 | Sony Interactive Entertainment Inc. | Image processing device and method for creating a background image |
US11727487B2 (en) | 2016-06-27 | 2023-08-15 | Trading Technologies International, Inc. | User action for continued participation in markets |
US11182853B2 (en) | 2016-06-27 | 2021-11-23 | Trading Technologies International, Inc. | User action for continued participation in markets |
US20180018965A1 (en) * | 2016-07-12 | 2018-01-18 | Bose Corporation | Combining Gesture and Voice User Interfaces |
US10719167B2 (en) | 2016-07-29 | 2020-07-21 | Apple Inc. | Systems, devices and methods for dynamically providing user interface secondary display |
US10229329B2 (en) * | 2016-11-08 | 2019-03-12 | Dedrone Holdings, Inc. | Systems, methods, apparatuses, and devices for identifying, tracking, and managing unmanned aerial vehicles |
US10025991B2 (en) | 2016-11-08 | 2018-07-17 | Dedrone Holdings, Inc. | Systems, methods, apparatuses, and devices for identifying, tracking, and managing unmanned aerial vehicles |
CN106774829A (en) * | 2016-11-14 | 2017-05-31 | 平安科技（深圳）有限公司 | A kind of object control method and apparatus |
US20180143693A1 (en) * | 2016-11-21 | 2018-05-24 | David J. Calabrese | Virtual object manipulation |
US10390088B2 (en) * | 2017-01-17 | 2019-08-20 | Nanning Fugui Precision Industrial Co., Ltd. | Collection and processing method for viewing information of videos and device and server using the same |
WO2018182217A1 (en) * | 2017-03-28 | 2018-10-04 | Samsung Electronics Co., Ltd. | Method for adaptive authentication and electronic device supporting the same |
US11062003B2 (en) | 2017-03-28 | 2021-07-13 | Samsung Electronics Co., Ltd. | Method for adaptive authentication and electronic device supporting the same |
US10624561B2 (en) | 2017-04-12 | 2020-04-21 | Fitbit, Inc. | User identification by biometric monitoring device |
US10806379B2 (en) | 2017-04-12 | 2020-10-20 | Fitbit, Inc. | User identification by biometric monitoring device |
US11382536B2 (en) | 2017-04-12 | 2022-07-12 | Fitbit, Inc. | User identification by biometric monitoring device |
US11221681B2 (en) * | 2017-12-22 | 2022-01-11 | Beijing Sensetime Technology Development Co., Ltd | Methods and apparatuses for recognizing dynamic gesture, and control methods and apparatuses using gesture interaction |
US11481104B2 (en) | 2018-02-07 | 2022-10-25 | Citrix Systems, Inc. | Using pressure sensor data in a remote access environment |
US20190243520A1 (en) * | 2018-02-07 | 2019-08-08 | Citrix Systems, Inc. | Using Pressure Sensor Data in a Remote Access Environment |
US11157161B2 (en) * | 2018-02-07 | 2021-10-26 | Citrix Systems, Inc. | Using pressure sensor data in a remote access environment |
US11232419B2 (en) * | 2018-03-19 | 2022-01-25 | Capital One Services, Llc | Systems and methods for translating a gesture to initiate a financial transaction |
US11823146B2 (en) | 2018-03-19 | 2023-11-21 | Capital One Services, Llc | Systems and methods for translating a gesture to initiate a financial transaction |
US11675617B2 (en) * | 2018-03-21 | 2023-06-13 | Toshiba Global Commerce Solutions Holdings Corporation | Sensor-enabled prioritization of processing task requests in an environment |
US11809632B2 (en) | 2018-04-27 | 2023-11-07 | Carrier Corporation | Gesture access control system and method of predicting mobile device location relative to user |
US11195354B2 (en) * | 2018-04-27 | 2021-12-07 | Carrier Corporation | Gesture access control system including a mobile device disposed in a containment carried by a user |
US11875012B2 (en) | 2018-05-25 | 2024-01-16 | Ultrahaptics IP Two Limited | Throwable interface for augmented reality and virtual reality environments |
US11048924B1 (en) * | 2018-05-27 | 2021-06-29 | Asilla, Inc. | Action-estimating device |
US10402081B1 (en) * | 2018-08-28 | 2019-09-03 | Fmr Llc | Thumb scroll user interface element for augmented reality or virtual reality environments |
US10942637B2 (en) * | 2018-10-09 | 2021-03-09 | Midea Group Co., Ltd. | Method and system for providing control user interfaces for home appliances |
WO2020073607A1 (en) | 2018-10-09 | 2020-04-16 | Midea Group Co., Ltd. | Method and system for providing control user interfaces for home appliances |
EP3847509A4 (en) * | 2018-10-09 | 2021-11-10 | Midea Group Co., Ltd. | Method and system for providing control user interfaces for home appliances |
WO2020139413A1 (en) * | 2018-12-27 | 2020-07-02 | Google Llc | Expanding physical motion gesture lexicon for an automated assistant |
US11340705B2 (en) * | 2018-12-27 | 2022-05-24 | Google Llc | Expanding physical motion gesture lexicon for an automated assistant |
CN112313606A (en) * | 2018-12-27 | 2021-02-02 | 谷歌有限责任公司 | Extending a physical motion gesture dictionary for an automated assistant |
US11943526B2 (en) * | 2019-03-21 | 2024-03-26 | Event Capture Systems, Inc. | Infrared and broad spectrum illumination for simultaneous machine vision and human vision |
US20220006933A1 (en) * | 2019-03-21 | 2022-01-06 | Event Capture Systems, Inc. | Infrared and broad spectrum illumination for simultaneous machine vision and human vision |
US20220404914A1 (en) * | 2019-05-06 | 2022-12-22 | Samsung Electronics Co., Ltd. | Methods for gesture recognition and control |
US11841933B2 (en) | 2019-06-26 | 2023-12-12 | Google Llc | Radar-based authentication status feedback |
US11543888B2 (en) | 2019-06-27 | 2023-01-03 | Google Llc | Intent detection with a computing device |
CN111736702A (en) * | 2019-06-27 | 2020-10-02 | 谷歌有限责任公司 | Intent detection with computing devices |
EP3757730A3 (en) * | 2019-06-27 | 2021-02-24 | Google LLC | Intent detection with a computing device |
US11960793B2 (en) | 2019-06-27 | 2024-04-16 | Google Llc | Intent detection with a computing device |
US11868537B2 (en) | 2019-07-26 | 2024-01-09 | Google Llc | Robust radar-based gesture-recognition by user equipment |
US11790693B2 (en) | 2019-07-26 | 2023-10-17 | Google Llc | Authentication management through IMU and radar |
US20220100283A1 (en) * | 2019-08-30 | 2022-03-31 | Google Llc | Visual Indicator for Paused Radar Gestures |
US11687167B2 (en) * | 2019-08-30 | 2023-06-27 | Google Llc | Visual indicator for paused radar gestures |
US11373373B2 (en) | 2019-10-22 | 2022-06-28 | International Business Machines Corporation | Method and system for translating air writing to an augmented reality device |
US11599199B2 (en) * | 2019-11-28 | 2023-03-07 | Boe Technology Group Co., Ltd. | Gesture recognition apparatus, gesture recognition method, computer device and storage medium |
US11756099B2 (en) | 2020-01-17 | 2023-09-12 | Capital One Services, Llc | Systems and methods for vehicle recommendations based on user gestures |
US11010815B1 (en) | 2020-01-17 | 2021-05-18 | Capital One Services, Llc | Systems and methods for vehicle recommendations based on user gestures |
Also Published As
Publication number | Publication date |
---|---|
WO2014088621A1 (en) | 2014-06-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20140157209A1 (en) | System and method for detecting gestures | |
US11269481B2 (en) | Dynamic user interactions for display control and measuring degree of completeness of user gestures | |
US11347317B2 (en) | Customized gesture interpretation | |
US11181985B2 (en) | Dynamic user interactions for display control | |
US20240061511A1 (en) | Dynamic, free-space user interactions for machine control | |
US10126826B2 (en) | System and method for interaction with digital devices | |
WO2014113507A1 (en) | Dynamic user interactions for display control and customized gesture interpretation | |
US20110304541A1 (en) | Method and system for detecting gestures | |
US20230013169A1 (en) | Method and device for adjusting the control-display gain of a gesture controlled electronic device | |
US10474324B2 (en) | Uninterruptable overlay on a display | |
US20220012283A1 (en) | Capturing Objects in an Unstructured Video Stream | |
CN109753154B (en) | Gesture control method and device for screen equipment | |
KR20180074124A (en) | Method of controlling electronic device with face recognition and electronic device using the same | |
US11782548B1 (en) | Speed adapted touch detection | |
US20240094825A1 (en) | Gesture recognition with hand-object interaction | |
CN112181129A (en) | Equipment control method, device, equipment and machine readable medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: BOT SQUARE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DALAL, NAVNEET;NARIYAWALA, MEHUL;MOHAN, ANKIT;AND OTHERS;SIGNING DATES FROM 20130322 TO 20130404;REEL/FRAME:030154/0713 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BOT SQUARE INC.;REEL/FRAME:031990/0765Effective date: 20140115 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
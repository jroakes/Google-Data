US8688698B1 - Automatic text suggestion - Google Patents
Automatic text suggestion Download PDFInfo
- Publication number
- US8688698B1 US8688698B1 US13/025,963 US201113025963A US8688698B1 US 8688698 B1 US8688698 B1 US 8688698B1 US 201113025963 A US201113025963 A US 201113025963A US 8688698 B1 US8688698 B1 US 8688698B1
- Authority
- US
- United States
- Prior art keywords
- text segment
- suggestions
- suggestion
- information
- supplementing
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3322—Query formulation using system suggestions
Definitions
- This specification relates to word processing.
- word complete When a writer writes a word or a phrase in a word processor, the writer may desire that the word or phrase be automatically completed by the word processor.
- word complete or “spell check” features. For example, when a writer is uncertain about the spelling of a word, the writer may write a few letters of the word based on what the writer remembers. The word processor can automatically complete the rest of the word. The word processor may use a built-in dictionary for providing the automatic completion.
- one aspect of the subject matter described in this specification can be embodied in a method that includes, from an authoring environment, receiving a request to supplement a text segment; submitting a query to a search engine, the query being generated from the text segment; receiving multiple search results from the search engine in response to the query, each search result including an information snippet; generating one or more suggestions for supplementing the text segment based on the information snippets; and providing the one or more suggestions for supplementing the text segment for display in the authoring environment.
- the request includes a specified string of characters.
- Generating the one or more suggestions based on the information snippets includes generating one or more candidate suggestions from each information snippet; calculating a relation score for each of the one or more candidate suggestions; and generating the one or more suggestions from the candidate suggestions according to the relation score.
- Calculating the relation score includes calculating the relation score based on at least one of a length of each candidate suggestion; a frequency at which the candidate suggestion appears in the information snippets; or a history of the candidate suggestion being selected by a user to supplement the text segment.
- the one or more suggestions consist of one particular suggestion.
- Providing the one or more suggestions for supplementing the text segment for display includes supplementing the text segment using the particular suggestion.
- providing the one or more suggestions for supplementing the text segment for display can include providing the one or more suggestions for display in a selection interface, the one or more suggestions being sorted in the selection interface using the relation score; receiving a user selection of a particular suggestion from among the one or more suggestions displayed in the selection interface; and supplementing the text segment using the particular suggestion.
- Supplementing the text segment can include inserting the particular suggestion into a specified position relative to the text segment.
- the method can further include learning from the user selection, including increasing a relatedness value between the text segment and the particular suggestion, the relatedness value to be used in future calculations of relation scores.
- the one or more suggestions include at least one of a proper name, a date, or a number.
- a system can automatically provide suggestions that supplement an initial portion of text a writer is writing when the writer cannot remember a fact or an idiom to continue.
- the suggestions can include words, phrases, or sentences.
- the system can allow the writer to continue writing without leaving an authoring environment to consult a dictionary, almanac, encyclopedia, or a search engine.
- the system can provide automatic fact checking.
- a writer writes content that includes a statement contradicting statements from a large number of resources
- the system can prompt the writer to double-check the statement. For example, if the writer writes, “The World Wide Web was invented by Tim Berners-Lee and Robert Metcalfe,” a word editor utilizing the automatic text suggestion techniques can highlight the word “Metcalfe” to alert the writer that there might be an error.
- FIG. 1 is a block diagram illustrating an example system implementing automatic text suggestion techniques.
- FIG. 2A is a block diagram illustrating an example architecture of an authoring environment implementing automatic text suggestion techniques.
- FIG. 2B is a block diagram illustrating an example architecture of a suggestion system implementing automatic text suggestion techniques.
- FIG. 3 illustrates an example user interface of an authoring environment implementing the automatic text suggestion techniques.
- FIG. 4 is a flowchart illustrating an example process of automatic text suggestion.
- FIG. 1 is a block diagram illustrating an example system 100 implementing automatic text suggestion techniques.
- the system typically includes an authoring environment 102 , and a suggestion system 112 , which provides text suggestion services to the authoring environment 102 .
- the authoring environment 102 can be provided by a user device that is connected to the suggestion system 112 through a communications network.
- the suggestion system 112 Upon receiving the request that includes the text segment 104 , the suggestion system 112 submits a query to a search engine 116 .
- the query can include at least a portion of the text segment 104 as query terms.
- the suggestion system 112 receives one or more query results.
- Each query result can include an information snippet.
- the suggestion system 112 selects one or more of the information snippets, and performs analysis on the information snippets to determine one or more suggestions 120 for supplementing the text segment 104 .
- Suggestions 120 include one or more text strings for supplementing the text segment 104 .
- the analysis performed by suggestion system 112 includes calculating a likelihood that a suggestion is going to be selected by a user based on internal structures of the information snippets and on a history of past user selections as stored in information repository 114 . Further details on the analysis performed on the information snippets will be described below in reference to FIG. 2B .
- the suggestion system 112 provides the one or more suggestions 120 to the authoring environment 102 .
- the authoring environment 102 can supplement the text segment 104 automatically using the suggestion 120 .
- the authoring environment 102 can provide a selection input for receiving a user selection of one of the suggestions, or a user rejection of all suggestions.
- the authoring environment 102 submits the user selection or rejection to suggestion system 112 , which can store the user selection or rejection in information repository 114 to be used in future analysis of information snippets.
- the authoring environment 102 receives typed or pasted text content.
- the text content can be a word, a phrase, a portion of a sentence, a sentence, a paragraph, or a document.
- the authoring environment 102 receives the following text content: “According to most historians, the World Wide Web was invented,” which has been typed or pasted into the authoring environment 102 .
- the authoring environment 102 receives an input indicating that a user of the authoring environment 102 seeks information to supplement text segment 104 in the text content.
- the authoring environment 102 sends a section of the text content (e.g., “World Wide Web was invented”) to suggestion system 112 .
- suggestion system 112 returns three suggestions: “by Tim Berners-Lee,” “on Dec. 25, 1990,” and “at CERN.”
- the authoring environment 102 can present the three suggestions in a selection user interface (e.g., a pop-up menu).
- the authoring environment 102 can supplement the text content using the selected suggestion, such that the text content reads, for example, “According to most historians, the World Wide Web was invented by Tim Berners-Lee.” The details of supplementing a text segment are described below in reference to FIGS. 2A and 2B .
- FIG. 2A is a block diagram illustrating an example architecture of authoring environment 102 implementing automatic text suggestion techniques.
- the authoring environment 102 can include a text editor 210 .
- the text editor 210 can include a stand-alone word processing program or a server-supplied text editing program.
- the server-supplied text editing program can include a browser-based editor.
- the server can be the suggestion system 112 of FIG. 1 .
- the authoring environment 102 includes a request detector 202 .
- Request detector 202 is a software module that is configured to detect a user input requesting automatic text suggestion.
- the request detector 202 includes a plug-in (also known as an add-on) to the text editor 210 .
- the plug-in includes a computer program configured to interact with the word processing program or the server-supplied text editing program to provide text suggestion services.
- the request detector 202 is a script (e.g., a JavaScript® program) that can be executed by a web browser.
- the request detector 202 is configured to detect a pause of typing before a punctuation mark is entered or a carriage return is pressed. If a writer types a sentence, pauses before typing a punctuation mark such as a period (“.”), and pauses for a threshold length of time (e.g., three seconds), the request detector 202 proceeds to submit a request to a suggestion system to supplement the text being typed by the writer.
- a threshold length of time e.g., three seconds
- the request detector 202 is configured to detect a specified sequence or combination of key strokes typed in by the writer.
- the key strokes can include letters, numbers, or punctuation marks.
- the request detector 202 can be configured to designate a string of three question marks (“???”), typed consecutively, as an input indicating a request for automatic text suggestion.
- the request detector 202 can be configured to accept user defined key stroke sequences or combinations.
- the request detector 202 can be configured to accept a sequence “????” or “ ⁇ ” or a key combination as an input for requesting automatic text suggestion, if a writer sometimes uses “???” in actual writing.
- the authoring environment 102 includes a text segment identifier 206 .
- Text segment identifier is a software module that identifies a text segment to supplement from among multiple text segments.
- the text segment is a user selected portion of text content being edited in the authoring environment 102 .
- the segment identifier 206 automatically detects a portion of the text content and designates the detected portion as the text segment to be supplemented. For example, the text segment identifier 206 can select the last n words typed by the writer (e.g., “World Wide Web was invented” when using the example of FIG.
- the words after a last punctuation mark e.g., “the World Wide Web was invented”
- the words from the beginning of the sentence currently being typed e.g., “According to most historians, the World Wide Web was invented”.
- the authoring environment 102 includes a selection user interface 208 that is configured to provide for display multiple suggestions from the server. Further details on the selection user interface 208 will be described below in reference to FIG. 3 .
- FIG. 2B is a block diagram illustrating an example architecture of suggestion system 112 implementing automatic text suggestion techniques.
- Suggestion system 112 includes request interface 220 that is configured to receive a request to supplement a text segment from an authoring environment (e.g., the authoring environment 102 of FIG. 1 and FIG. 2A ) and to provide suggestions for supplementing the text segment to the authoring environment.
- an authoring environment e.g., the authoring environment 102 of FIG. 1 and FIG. 2A
- Suggestion system 112 includes a search engine interface 222 that can submit a query to a search engine, receive search results from the search engine, and select information snippets from the search results.
- the search engine interface 222 is configured to submit at least a portion of the text segment received by request interface 220 to the search engine. The portion of the text segment can be normalized.
- the search engine interface 222 is also configured to receive multiple search results from the search engine. Each search result can include a uniform resource locator (URL) link to an information source and an information snippet providing a summary of the information source.
- URL uniform resource locator
- the search engine interface 222 can select multiple information snippets from the search results. The selection can be based on a rank provided by the search engine. For example, the search engine interface 222 can select information snippets from 30 top-ranked search results.
- the suggestion system 112 includes suggestion finder 224 that identifies one or more suggestions from the selected information snippets.
- the suggestion finder 224 evaluates the selected information snippets in reference to the text segment to determine what parts of the information snippets are most likely to be helpful to the writer.
- An example information snippet retrieved from search engine is: “In the 1980's, the World Wide Web was invented by Tim Berners-Lee and Robert Cailliau in Europe.”
- the suggestion finder 224 identifies a first portion of the information snippet (e.g., “the World Wide Web was invented”) that matches the text segment and a second portion that includes a non-matching string.
- the non-matching string is a string that does not semantically match the text segment.
- the non-matching strings include “by Tim Berners-Lee and Robert Cailliau in Europe,” “on Dec. 25, 1990,” and “at CERN.”
- the non-matching string includes a section of an information snippet that starts from the end of the first portion of an information snippet.
- the non-matching string can end at the end of the information snippet or end at a specified token.
- the specified token can include a pre-specified and configurable punctuation mark (e.g., a semicolon or carriage-return character), or a tag.
- the tag can include a closing tag in a hyper-text markup language (HTML) document.
- the non-matching string is located at a part of the information snippet that corresponds to a position of the input requesting for suggestion, where the position of the input is relative to the text segment.
- the suggestion finder 224 can identify “Tim Berners-Lee” as the non-matching string in an information snippet “Tim Berners-Lee invented the World Wide Web” retrieved by search engine interface 222 , when a writer types “??? invented the World Wide Web.”
- the suggestion finder 224 provides at least one of the non-matching strings as a suggestion. If there are multiple non-matching strings, the suggestion finder 224 ranks the non-matching strings and provides the non-matching strings as suggestions according to the ranking. The suggestion finder 224 ranks the non-matching strings based on a relation score calculated for each non-matching string.
- the relation score is a value that represents a likelihood that the non-matching string, if suggested to a user, will be selected by the user to supplement the text segment.
- the suggestion finder 224 can calculate the relation score based on a length of the non-matching string, a popularity of the non-matching string, a past selection history of the non-matching string, or any combination of the above.
- the suggestion finder 224 calculates a value L of a non-matching string (e.g., “by Tim Berners-Lee and Robert Cailliau in Europe”) using the length of the string.
- the length can be measured in a count of bytes, a count of characters, a count of words, or a combination of the above.
- the value L includes a normalized length.
- the value L can be a component of the relation score.
- the relation score has a component P, which is a value of a non-matching string calculated based on a popularity of the non-matching string.
- the suggestion finder 224 can calculate the popularity using a count of occurrences that the non-matching string appears in the selected information snippets.
- the suggestion finder 224 calculates a value H for a string.
- the value H measures a number of times the non-matching string has been selected by a user to be associated with the text segment in the past when the string was presented as a suggestion to supplement the text segment.
- the suggestion finder 224 can rank the strings based on the relation score of each string, and provide some or all of the strings (e.g., those ranked at the top) as suggestions.
- Suggestion system 112 includes history interface 226 that provides interface to an information repository 114 .
- the information repository 114 can store history learned from past selections of suggestions by multiple users, and the frequency of the user selections. This data in the history can be aggregated or otherwise anonymized. For example, the information repository 114 stores information indicating that the suggestion “by Tim Berners-Lee” has been selected as a supplement to a text segment “World Wide Web was invented” x number of times, whereas the suggestion “on Dec. 25, 1990” has been selected y number of times.
- Suggestion finder 224 can use the stored information, including the values x and y, to determine whether to suggest “by Tim Berners-Lee” or “on Dec.
- a learning module 228 of suggestion system 112 collects user selections and provides the user selections for storage in information repository 114 through history interface 226 .
- request interface 220 can be configured to receive a “fact check” request that seeks to identify potential inaccuracies in a sentence.
- a potential inaccuracy can be identified based on a statement that contradicts statements from multiple sources.
- request interface 220 can receive the following text segment and a fact check request: “The World Wide Web was invented by Tim Berners-Lee and Robert Metcalfe.” The section “Tim Berners-Lee and Robert Metcalfe” is highlighted or otherwise marked for fact checking.
- Suggestion finder 224 can determine that none of the most popular information snippets retrieved through search engine interface 222 contains a first portion that matches “The World Wide Web was invented” and a second portion that matches “by Tim Berners-Lee and Robert Metcalfe.” Rather, some information snippets contain a second portion that reads “by Tim Berners-Lee and Robert Cailliau,” which is similar to the received sentence. Suggestion finder 224 can provide a hint through request interface 220 , for example, in the form of a popup window in an authoring environment.
- the popup window can contain a prompt “Did you mean ‘by Tim Berners-Lee and Robert Cailliau ’?” where the potential factual conflict “Cailliau” is highlighted or otherwise emphasized. The writer can then choose to keep or change the writer's writing in light of the prompt.
- FIG. 3 illustrates an example user interface of an authoring environment implementing the automatic text suggestion techniques.
- the example user interface can be implemented on a client computer that a user uses to write.
- a window 304 of an authoring environment 102 is displayed on a display device. For simplicity, controls of the authoring environment 102 are omitted.
- the window 302 includes a text area into which a writer can type text content.
- the authoring environment 102 receives part of a sentence, e.g., “The World Wide Web was invented,” typed or pasted by the writer.
- the authoring environment 102 then receives an input (e.g., a string “???”) indicating that the writer seeks suggestion to complete the sentence.
- the authoring environment 102 feeds the part of the sentence that is already written (“The World Wide Web was invented”) to a suggestion system and receives three suggestions in response (“by Tim Berners-Lee,” “on Dec. 25, 1990,” and “at CERN”).
- the three suggestions are displayed in a selection interface 306 , and sorted based on relation scores calculated for the suggestions.
- the writer can select any of the three facts, or ignore the facts and continue writing the sentence.
- the selected fact can replace the input “???” in the sentence. It is possible that the authoring environment 102 receives only one suggestion. In such cases, the authoring environment 102 can automatically replace the input “???” in the sentence with the suggestion without providing the selection interface 306 .
- the authoring environment 102 can be configured to operate in batch mode. In batch mode, the authoring environment 102 withholds submitting an input to a suggestion system until the authoring environment 102 receives a confirmation.
- multiple text suggestion requests can be made substantially simultaneously. For example, a writer types a string “???” whenever the writer is uncertain about a fact.
- the authoring environment 102 creates and stores a request each time the authoring environment 102 receives the string “???.”
- the authoring environment 102 submits the stored request to a suggestion system (e.g., a server device) in batch.
- a suggestion system e.g., a server device
- the suggestion system can process the requests serially, for example, by presenting a second suggestion for supplementing a second text segment after the writer has selected a first suggestion for supplementing a first text segment.
- the server can process the sentences in parallel, for example, by presenting multiple suggestions for multiple text segments substantially simultaneously in window 304 .
- the text editor can detect the string “???” located at various positions of a body of text (e.g., the beginning of a sentence, in the middle of the sentence, or at the end of the sentence). For example, a writer can type the following sentence: “??? was created by Robert Metcalfe.” The writer submits a request for text suggestion. In response to the request, the server returns one or more suggestions, for example, “The Ethernet” and “3Com.” The suggestions are displayed in window 304 at a position that corresponds to the position of “???”—in this example, at the beginning the sentence.
- FIG. 4 is a flowchart illustrating an example process 400 of automatic text suggestion.
- example process 400 is described in reference to a suggestion system (e.g., suggestion system 112 as described in reference to FIGS. 1 , 2 A, and 2 B).
- the suggestion system receives ( 402 ), from an authoring environment, a request to supplement a text segment from an authoring environment.
- the request can be triggered in the authoring environment by a specified string of characters.
- the request includes the text segment identified from text content of the authoring environment.
- the suggestion system submits ( 404 ) a query to a search engine.
- the suggestion system generates the query from the text segment by designating at least a portion of the text segment as the query.
- the suggestion system can normalize the portion of the text segment to be included in the query. Normalizing the portion of the text segment can include removing redundant white spaces from the portion of the text segment, capitalizing or uncapitalizing the portion of the text segment, or spell-checking the portion of the text segment.
- the suggestion system receives ( 406 ) multiple search results from the search engine in response to the query.
- Each search result includes a URL to an information source and an information snippet.
- the information snippet can include a summary of the information source.
- the search results can include numerous result items.
- the suggestion system can select a subset from the search results.
- the suggestion system generates ( 408 ) one or more suggestions for supplementing the text segment based on the information snippets.
- Generating the one or more suggestions based on the result items can include identifying one or more candidate suggestions from each selected information snippet.
- the one or more candidate suggestions can include terms from non-matching portions of the information snippets (e.g., the non-matching strings as described above).
- the one or more candidate suggestions will generally include factual information that relates to the text segment or idiomatic phrases including the text segment.
- the factual information can include at least one of a proper name, a date, or a number.
- Generating the one or more suggestions based on the result items can further include selecting the one or more suggestions from the one or more candidate suggestions based on a relation score for each of the one or more candidate suggestions.
- the relation score is an indication of a degree of relatedness between a candidate suggestion and the text segment.
- the relation score can be used to rank the candidate suggestions.
- the suggestion system can calculate a relation score for each of the one or more candidate suggestions. Calculating the relation score can include calculating the relation score based on a length of a candidate suggestion, a frequency at which the candidate suggestion appears in the information snippets, a history of the candidate suggestion being selected by a user to supplement the text segment, or a combination of any one or more of the above.
- the suggestion system provides ( 410 ) the one or more suggestions for supplementing the text segment for display in the authoring environment.
- Providing the one or more suggestions for supplementing the text segment for display can include providing the one or more suggestions for display in a selection interface.
- the one or more suggestions can be sorted in the selection interface using the relation score.
- providing the one or more suggestions for supplementing the text segment for display includes automatically providing at least one of the one or more suggestions for supplementing the text segment for display without requiring a user selection.
- the one or more suggestions can consist of one particular suggestion.
- Providing the one or more suggestions for supplementing the text segment for display can include supplementing the text segment using the particular suggestion.
- the system can receive a user selection of a particular suggestion from among the one or more suggestions displayed in the selection interface and supplementing the text segment using the particular suggestion.
- Supplementing the text segment includes inserting the particular suggestion into a specified position relative the text segment.
- the specified position can be a beginning, an end, or anywhere between the beginning and the end of the text segment.
- the suggestion system receives a request to fact check a sentence “The World Wide Web was invented by Tim Berners-Lee and Robert Metcalfe.”
- the request includes a writer selecting the sentence for fact checking, while a cursor is placed at various places of the sentence (e.g., between “invented” and “by,” between “by” and “Tim,” or between “Robert” and Metcalfe”).
- the system can respond with suggestions (e.g., “by Tim Berners-Lee and Robert Cailliau,” “Tim Berners-Lee and Robert Cailliau,” or “Cailliau”) to be inserted at position of the cursor.
- the system learns from the user selection. Learning from the user selection can include remembering a user's selection of a suggestion to be associated with a text segment. Remembering the user's selection of a suggestion is done anonymously without tracking the user's identity. For example, the system can increase a relatedness value between the first portion of the information snippet and the particular second portion. The system can use the relatedness value as a factor in future calculations of relation scores.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, a personal computer system, desktop computer, laptop, notebook, netbook computer, mainframe computer system, handheld computer, workstation, network computer, application server, storage device, a consumer electronics device such as a camera, camcorder, set top box, mobile device, video game console, handheld video game device, a peripheral device such as a switch, modem, router, or in general any type of computing or electronic device, or multiple ones, or combinations, of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- code that creates an execution environment for the computer program in question e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program can, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or a routing device, e.g., a network router, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs executing on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a user device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the user device).
- Data generated at the user device e.g., a result of the user interaction
- An electronic document (which for brevity will simply be referred to as a document) can, but need not, correspond to a file.
- a document can be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
Abstract
Description
-
- In the 1980's, the World Wide Web was invented by Tim Berners-Lee and Robert Cailliau in Europe . . . .
- World Wide Web was invented on Dec. 25, 1990 . . . .
- The World Wide Web was first invented at CERN . . . .
Claims (28)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/025,963 US8688698B1 (en) | 2011-02-11 | 2011-02-11 | Automatic text suggestion |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/025,963 US8688698B1 (en) | 2011-02-11 | 2011-02-11 | Automatic text suggestion |
Publications (1)
Publication Number | Publication Date |
---|---|
US8688698B1 true US8688698B1 (en) | 2014-04-01 |
Family
ID=50348979
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/025,963 Active US8688698B1 (en) | 2011-02-11 | 2011-02-11 | Automatic text suggestion |
Country Status (1)
Country | Link |
---|---|
US (1) | US8688698B1 (en) |
Cited By (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120239395A1 (en) * | 2011-03-14 | 2012-09-20 | Apple Inc. | Selection of Text Prediction Results by an Accessory |
US9043198B1 (en) | 2012-04-13 | 2015-05-26 | Google Inc. | Text suggestion |
WO2015175338A1 (en) * | 2014-05-12 | 2015-11-19 | Google Inc. | Updating text within a document |
WO2015175337A1 (en) * | 2014-05-12 | 2015-11-19 | Google Inc. | Providing factual suggestions within a document |
US20160103875A1 (en) * | 2013-10-11 | 2016-04-14 | Wriber Inc. | Computer-implemented method and system for content creation |
US20160103835A1 (en) * | 2014-10-10 | 2016-04-14 | Wriber Inc. | Method and system for ranking suggestions |
US20180101599A1 (en) * | 2016-10-08 | 2018-04-12 | Microsoft Technology Licensing, Llc | Interactive context-based text completions |
US10015124B2 (en) * | 2016-09-20 | 2018-07-03 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US20180189250A1 (en) * | 2016-12-30 | 2018-07-05 | Dropbox, Inc. | Inline content item editor commands |
US10146768B2 (en) | 2017-01-25 | 2018-12-04 | Google Llc | Automatic suggested responses to images received in messages using language model |
US10248644B2 (en) * | 2014-10-10 | 2019-04-02 | Wriber Inc. | Method and system for transforming unstructured text to a suggestion |
US10348658B2 (en) | 2017-06-15 | 2019-07-09 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US10387461B2 (en) | 2016-08-16 | 2019-08-20 | Google Llc | Techniques for suggesting electronic messages based on user activity and other context |
WO2019164321A1 (en) | 2017-12-29 | 2019-08-29 | Samsung Electronics Co., Ltd. | Method for intelligent assistance |
US10404636B2 (en) | 2017-06-15 | 2019-09-03 | Google Llc | Embedded programs and interfaces for chat conversations |
US10416846B2 (en) | 2016-11-12 | 2019-09-17 | Google Llc | Determining graphical element(s) for inclusion in an electronic communication |
US10503818B2 (en) | 2016-01-14 | 2019-12-10 | Microsoft Technology Licensing, Llc. | Content authoring inline commands |
US10511450B2 (en) | 2016-09-20 | 2019-12-17 | Google Llc | Bot permissions |
US10530723B2 (en) | 2015-12-21 | 2020-01-07 | Google Llc | Automatic suggestions for message exchange threads |
US10547574B2 (en) | 2016-09-20 | 2020-01-28 | Google Llc | Suggested responses based on message stickers |
US10572882B2 (en) | 2014-02-28 | 2020-02-25 | Salesforce.Com, Inc. | Systems and methods for tracking and responding to mobile events in a relationship management system |
US10607165B2 (en) * | 2013-11-14 | 2020-03-31 | Salesforce.Com, Inc. | Systems and methods for automatic suggestions in a relationship management system |
CN110990556A (en) * | 2019-12-06 | 2020-04-10 | 北京金山数字娱乐科技有限公司 | Idiom recommendation method and device and idiom recommendation model training method and device |
US10757043B2 (en) | 2015-12-21 | 2020-08-25 | Google Llc | Automatic suggestions and other content for messaging applications |
US10860854B2 (en) | 2017-05-16 | 2020-12-08 | Google Llc | Suggested actions for images |
US20200387791A1 (en) * | 2016-12-20 | 2020-12-10 | Google Llc | Generating Templated Documents Using Machine Learning Techniques |
US10891526B2 (en) | 2017-12-22 | 2021-01-12 | Google Llc | Functional image archiving |
WO2021006906A1 (en) * | 2019-07-11 | 2021-01-14 | Google Llc | System and method for providing an artificial intelligence control surface for a user of a computing device |
US20220414320A1 (en) * | 2021-06-23 | 2022-12-29 | Microsoft Technology Licensing, Llc | Interactive content generation |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6377965B1 (en) * | 1997-11-07 | 2002-04-23 | Microsoft Corporation | Automatic word completion system for partially entered data |
US20090077037A1 (en) * | 2007-09-14 | 2009-03-19 | Jun Wu | Suggesting alternative queries in query results |
US7657423B1 (en) * | 2003-10-31 | 2010-02-02 | Google Inc. | Automatic completion of fragments of text |
US7890526B1 (en) * | 2003-12-30 | 2011-02-15 | Microsoft Corporation | Incremental query refinement |
-
2011
- 2011-02-11 US US13/025,963 patent/US8688698B1/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6377965B1 (en) * | 1997-11-07 | 2002-04-23 | Microsoft Corporation | Automatic word completion system for partially entered data |
US7657423B1 (en) * | 2003-10-31 | 2010-02-02 | Google Inc. | Automatic completion of fragments of text |
US7890526B1 (en) * | 2003-12-30 | 2011-02-15 | Microsoft Corporation | Incremental query refinement |
US20090077037A1 (en) * | 2007-09-14 | 2009-03-19 | Jun Wu | Suggesting alternative queries in query results |
Cited By (56)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9037459B2 (en) * | 2011-03-14 | 2015-05-19 | Apple Inc. | Selection of text prediction results by an accessory |
US20120239395A1 (en) * | 2011-03-14 | 2012-09-20 | Apple Inc. | Selection of Text Prediction Results by an Accessory |
US9043198B1 (en) | 2012-04-13 | 2015-05-26 | Google Inc. | Text suggestion |
US9218338B1 (en) | 2012-04-13 | 2015-12-22 | Google Inc. | Text suggestion |
US9740737B2 (en) * | 2013-10-11 | 2017-08-22 | Wriber Inc. | Computer-implemented method and system for content creation |
US20160103875A1 (en) * | 2013-10-11 | 2016-04-14 | Wriber Inc. | Computer-implemented method and system for content creation |
US10607165B2 (en) * | 2013-11-14 | 2020-03-31 | Salesforce.Com, Inc. | Systems and methods for automatic suggestions in a relationship management system |
US10572882B2 (en) | 2014-02-28 | 2020-02-25 | Salesforce.Com, Inc. | Systems and methods for tracking and responding to mobile events in a relationship management system |
US9607032B2 (en) | 2014-05-12 | 2017-03-28 | Google Inc. | Updating text within a document |
WO2015175337A1 (en) * | 2014-05-12 | 2015-11-19 | Google Inc. | Providing factual suggestions within a document |
CN106462564A (en) * | 2014-05-12 | 2017-02-22 | 谷歌公司 | Providing factual suggestions within a document |
WO2015175338A1 (en) * | 2014-05-12 | 2015-11-19 | Google Inc. | Updating text within a document |
US10248644B2 (en) * | 2014-10-10 | 2019-04-02 | Wriber Inc. | Method and system for transforming unstructured text to a suggestion |
US20160103835A1 (en) * | 2014-10-10 | 2016-04-14 | Wriber Inc. | Method and system for ranking suggestions |
US10530723B2 (en) | 2015-12-21 | 2020-01-07 | Google Llc | Automatic suggestions for message exchange threads |
US10757043B2 (en) | 2015-12-21 | 2020-08-25 | Google Llc | Automatic suggestions and other content for messaging applications |
US11502975B2 (en) | 2015-12-21 | 2022-11-15 | Google Llc | Automatic suggestions and other content for messaging applications |
US11418471B2 (en) | 2015-12-21 | 2022-08-16 | Google Llc | Automatic suggestions for message exchange threads |
US10503818B2 (en) | 2016-01-14 | 2019-12-10 | Microsoft Technology Licensing, Llc. | Content authoring inline commands |
US10387461B2 (en) | 2016-08-16 | 2019-08-20 | Google Llc | Techniques for suggesting electronic messages based on user activity and other context |
US10412030B2 (en) * | 2016-09-20 | 2019-09-10 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US10979373B2 (en) | 2016-09-20 | 2021-04-13 | Google Llc | Suggested responses based on message stickers |
US11303590B2 (en) | 2016-09-20 | 2022-04-12 | Google Llc | Suggested responses based on message stickers |
US10511450B2 (en) | 2016-09-20 | 2019-12-17 | Google Llc | Bot permissions |
US20190394153A1 (en) * | 2016-09-20 | 2019-12-26 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US11336467B2 (en) | 2016-09-20 | 2022-05-17 | Google Llc | Bot permissions |
US10547574B2 (en) | 2016-09-20 | 2020-01-28 | Google Llc | Suggested responses based on message stickers |
US10015124B2 (en) * | 2016-09-20 | 2018-07-03 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US10862836B2 (en) * | 2016-09-20 | 2020-12-08 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US11700134B2 (en) | 2016-09-20 | 2023-07-11 | Google Llc | Bot permissions |
US20180101599A1 (en) * | 2016-10-08 | 2018-04-12 | Microsoft Technology Licensing, Llc | Interactive context-based text completions |
US10416846B2 (en) | 2016-11-12 | 2019-09-17 | Google Llc | Determining graphical element(s) for inclusion in an electronic communication |
US11574191B2 (en) * | 2016-12-20 | 2023-02-07 | Google Llc | Generating templated documents using machine learning techniques |
US20230186090A1 (en) * | 2016-12-20 | 2023-06-15 | Google Llc | Generating Templated Documents Using Machine Learning Techniques |
US11972350B2 (en) * | 2016-12-20 | 2024-04-30 | Google Llc | Generating templated documents using machine learning techniques |
US20200387791A1 (en) * | 2016-12-20 | 2020-12-10 | Google Llc | Generating Templated Documents Using Machine Learning Techniques |
US20180189250A1 (en) * | 2016-12-30 | 2018-07-05 | Dropbox, Inc. | Inline content item editor commands |
US11188710B2 (en) * | 2016-12-30 | 2021-11-30 | Dropbox, Inc. | Inline content item editor commands |
US10146768B2 (en) | 2017-01-25 | 2018-12-04 | Google Llc | Automatic suggested responses to images received in messages using language model |
US10891485B2 (en) | 2017-05-16 | 2021-01-12 | Google Llc | Image archival based on image categories |
US10860854B2 (en) | 2017-05-16 | 2020-12-08 | Google Llc | Suggested actions for images |
US11574470B2 (en) | 2017-05-16 | 2023-02-07 | Google Llc | Suggested actions for images |
US10404636B2 (en) | 2017-06-15 | 2019-09-03 | Google Llc | Embedded programs and interfaces for chat conversations |
US10880243B2 (en) | 2017-06-15 | 2020-12-29 | Google Llc | Embedded programs and interfaces for chat conversations |
US11050694B2 (en) | 2017-06-15 | 2021-06-29 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US10348658B2 (en) | 2017-06-15 | 2019-07-09 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US11451499B2 (en) | 2017-06-15 | 2022-09-20 | Google Llc | Embedded programs and interfaces for chat conversations |
US11829404B2 (en) | 2017-12-22 | 2023-11-28 | Google Llc | Functional image archiving |
US10891526B2 (en) | 2017-12-22 | 2021-01-12 | Google Llc | Functional image archiving |
EP3695330A4 (en) * | 2017-12-29 | 2020-11-11 | Samsung Electronics Co., Ltd. | Method for intelligent assistance |
WO2019164321A1 (en) | 2017-12-29 | 2019-08-29 | Samsung Electronics Co., Ltd. | Method for intelligent assistance |
EP3695330A1 (en) * | 2017-12-29 | 2020-08-19 | Samsung Electronics Co., Ltd. | Method for intelligent assistance |
US10929606B2 (en) | 2017-12-29 | 2021-02-23 | Samsung Electronics Co., Ltd. | Method for follow-up expression for intelligent assistance |
WO2021006906A1 (en) * | 2019-07-11 | 2021-01-14 | Google Llc | System and method for providing an artificial intelligence control surface for a user of a computing device |
CN110990556A (en) * | 2019-12-06 | 2020-04-10 | 北京金山数字娱乐科技有限公司 | Idiom recommendation method and device and idiom recommendation model training method and device |
US20220414320A1 (en) * | 2021-06-23 | 2022-12-29 | Microsoft Technology Licensing, Llc | Interactive content generation |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8688698B1 (en) | Automatic text suggestion | |
Sai et al. | A survey of evaluation metrics used for NLG systems | |
US9218338B1 (en) | Text suggestion | |
US9613166B2 (en) | Search suggestions of related entities based on co-occurrence and/or fuzzy-score matching | |
US20180341871A1 (en) | Utilizing deep learning with an information retrieval mechanism to provide question answering in restricted domains | |
Dwivedi et al. | Research and reviews in question answering system | |
CN106537370B (en) | Method and system for robust tagging of named entities in the presence of source and translation errors | |
US10740541B2 (en) | Fact validation in document editors | |
US9703861B2 (en) | System and method for providing answers to questions | |
US9881010B1 (en) | Suggestions based on document topics | |
US9336269B1 (en) | Determining question and answer alternatives | |
US11741316B2 (en) | Employing abstract meaning representation to lay the last mile towards reading comprehension | |
US8688727B1 (en) | Generating query refinements | |
US9336298B2 (en) | Dialog-enhanced contextual search query analysis | |
JP7232831B2 (en) | Retrieval of corroborative evidence for complex answers | |
US20220012296A1 (en) | Systems and methods to automatically categorize social media posts and recommend social media posts | |
US9514098B1 (en) | Iteratively learning coreference embeddings of noun phrases using feature representations that include distributed word representations of the noun phrases | |
US20160004766A1 (en) | Search technology using synonims and paraphrasing | |
US20150081277A1 (en) | System and Method for Automatically Classifying Text using Discourse Analysis | |
RU2720074C2 (en) | Method and system for creating annotation vectors for document | |
US9773166B1 (en) | Identifying longform articles | |
Wu et al. | Identification of web query intent based on query text and web knowledge | |
Yen et al. | WriteAhead: Mining grammar patterns in corpora for assisted writing | |
US20220365956A1 (en) | Method and apparatus for generating patent summary information, and electronic device and medium | |
US9507834B2 (en) | Search suggestions using fuzzy-score matching and entity co-occurrence |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BLACK, DAVID;HICKMAN, RYAN;REEL/FRAME:025905/0903Effective date: 20110210 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
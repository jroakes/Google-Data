GB2538578A - Organizing graphical representations on computing devices - Google Patents
Organizing graphical representations on computing devices Download PDFInfo
- Publication number
- GB2538578A GB2538578A GB1518656.2A GB201518656A GB2538578A GB 2538578 A GB2538578 A GB 2538578A GB 201518656 A GB201518656 A GB 201518656A GB 2538578 A GB2538578 A GB 2538578A
- Authority
- GB
- United Kingdom
- Prior art keywords
- graphical representations
- computer
- application
- user
- graphical
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04842—Selection of displayed objects or displayed text elements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/04817—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance using icons
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72469—User interfaces specially adapted for cordless or mobile telephones for operating the device by selecting functions from two or more displayed items, e.g. menus or icons
- H04M1/72472—User interfaces specially adapted for cordless or mobile telephones for operating the device by selecting functions from two or more displayed items, e.g. menus or icons wherein the items are sorted according to specific criteria, e.g. frequency of use
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M2250/00—Details of telephonic subscriber devices
- H04M2250/22—Details of telephonic subscriber devices including a touch pad, a touch sensor or a touch detector
Abstract
A method identifies an initial configuration of graphical representations (e.g. application icons or widgets) displayed in a user interface presented by a computing device, each of the graphical representations being associated with a respective computer-executable application. Two or more usage signals (e.g. frequency of use, interaction time/frequency, navigation rate and/or order of use) corresponding to each of the graphical representations are determined. The usage signals reflecting user interaction with the respective associated computer-executable application. A priority score is determined based on the usage signals and a priority order of the graphical representation is determined. The priority order is modified based on a second usage signal and a modified configuration of the graphical representation is generated, wherein the modified configuration reduce a navigation rate of the user with respect to the former configuration. At least a portion of the modified configuration of graphical representations is presented to a user.
Description
ORGANIZING GRAPHICAL REPRESENTATIONS ON COMPUTING DEVICES
BACKGROUND
Mobile computing continues to grow quickly as mobile computing devices, such as smartphones and tablets, add more power and features. Users of such devices may now access various services on the Internet and download applications from third party server systems. The applications can include, for example, gaming applications, electronic mail applications, text messaging applications, social media applications, music and video applications, and similar such applications. In some cases, graphical representations of applications (e.g., icons) are displayed on screens of computing devices.
SUMMARY
Innovative aspects of the subject matter described in this specification may be embodied in methods that include actions of identifying a current configuration of graphical representations displayed in a user interface presented by a computing device, each of the graphical representations being associated with a respective computer-executable application, determining at least one usage signal corresponding to each of the graphical representations, the usage signal reflecting user interaction with the respective associated computer-executable application, determining one or more success metrics indicative of an efficiency of the current configuration of graphical representations, generating, using an optimization technique, a modified configuration of graphical representations based on the usage signals and the one or more success metrics, and presenting by the computing device, in the user interface, at least a portion of the modified configuration of graphical representations. Other embodiments of these aspects include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
These and other embodiments may each optionally include one or more of the following features. For instance, the user interface includes one or more screens, and wherein identifying a current configuration of graphical representations comprises identifying spatial relationships between positions of the graphical representations on the screens; determining at least one usage signal includes recording, with the computing device, usage data describing user interaction with an application executing on the computing device; determining at least one usage signal further includes transmitting, from the computing device, the usage data to a server system; determining at least one usage signal comprises receiving the at least one usage signal at the computing device, from a server system; the at least one usage signal includes an aggregated usage signal based on usage data generated by multiple users; the at least one usage signal is selected from the group consisting of: frequency of use, interaction time, interaction frequency, navigation rate, and order of use; the at least one usage signal includes a weighted combination of two or more usage signals; determining one or more success metrics includes recording, with the computing device, usage data describing user interaction with the user interface; the one or more success metrics include at least one of nominal navigation rate and interstitial time; the at least one usage signal includes a first usage signal and the optimization technique includes: determining, based on the first usage signal, a priority score attributed to each computer-executable application graphically represented in the user interface, determining a priority order of the graphical representations according to the priority scores, and modifying the priority order based on a second usage signal; actions further include modifying the priority order based on metadata associated with the computer-executable applications; generating a modified configuration of graphical representations includes generating the modified configuration when at least one success metric of the one or more success metrics degrades below a predetermined threshold; generating a modified configuration of graphical representations comprises generating the modified configuration in response to a user instruction; generating the modified configuration of graphical representations includes removing one or more graphical representations from the user interface; actions further include re-organizing the graphical representations in the user interface based on the modified configuration of graphical representations; actions further include prompting a user to accept the modified configuration of graphical representations; and generating the modified configuration of graphical representations includes: generating a modified configuration at predetermined time intervals, monitoring a difference between the modified configuration and the current configuration, and implementing the modified configuration when the difference exceeds a predetermined threshold.
Particular embodiments of the subject matter described in this specification may be implemented so as to realize one or more of the following advantages. In some examples, manual reordering of user interface icons by a user is avoided through systems and methods that determine a more efficient configuration for the icons, based on usage signals generated by the user. The more efficient configuration can reduce the amount of navigational input required by the user to operate the device, thus saving the user both time and effort. Further, in some examples, computer memory and graphical space in the user interface can be reclaimed by removing rarely used applications from the computing device and the corresponding application icons from the user interface.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other potential features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
BRIEF DESCRIPTION OF THE DRAWINGS
FIG. 1 depicts an example system that can execute implementations of the present disclosure.
FIGs. 2A and 2B depict a home screen and a secondary screen, respectively, of an example mobile computing device including example application icons in a current configuration.
FIGs. 3A and 3B depict the home screen and the secondary screen, respectively, including the example application icons of FIGs. 2A and 2B in a modified configuration.
FIG. 4 depicts an example system that can execute implementations of the present disclosure, where a modified configuration is determined based on aggregated usage signals.
FIGs. 5A-5F depict sequential illustrations of a user interacting with an example mobile computing device according to one or more implementations of the present disclosure.
FIG. 6 depicts an example process for automatically organizing graphical representations on screens of computing devices.
Like reference numbers represent corresponding parts throughout.
DETAILED DESCRIPTION
Implementations of the present disclosure are generally directed to organizing graphical representations displayed in graphical user interfaces (GUIs) of computing devices. In some examples, graphical representations can include application icons and/or widgets. The application icons can, for example, provide a graphical representation of respective computer program applications that are installed and executable on a computing device. In particular, implementations of the present disclosure can include determining, based on one or more usage signals, a modified configuration for a plurality of graphical representations in one or more screens displayed on a computing device. In some examples, the modified configuration can be provided as a spatial configuration where a position within the screens is specified for each graphical representation. In some examples, the usage signals can be determined based on user interaction with each of the applications and/or widgets represented by the graphical representations and/or with the one or more screens displayed on the computing device. In some implementations, a current configuration (e.g., an initial configuration, or a previously modified configuration) can be permanently or temporarily set to the modified configuration. In some implementations, the current configuration can be rolled back or can be maintained based on subsequent user interaction.
FIG. 1 depicts an example system 100 that can execute implementations of the present disclosure. In general, the system 100 includes a mobile computing device 102 (e.g., a smartphone, a tablet computing device) with a touchscreen display 104. In some examples, the touchscreen display 104 can provide one or more GUIs for the mobile computing device 102. In some examples, and as discussed in further detail below, the touchscreen display can provide one or more screens on which graphical representations can be displayed to a user. A number of components within the mobile computing device 102 provide for interaction with the mobile computing device 102. For purposes of clarity, FIG. 1 shows certain example components of the mobile computing device 102. A user 105 can be a user of the mobile computing device 102.
In some implementations, the mobile computing device 102 can communicate with a server system 106 through a network 108 (e.g., using a wireless interface 110). The network 108 can be the Internet and/or a cellular network. For example, the mobile computing device 102 can direct telephone calls through a telephone network or through a data network using voice over internet protocol (VOIP). In addition, the mobile computing device 102 can transmit other forms of data over the internet, for example, data in the form of Hypertext Transfer Protocol (HTTP) requests that are directed at particular web sites. The mobile computing device 102 may receive responses, for example, in forms that can include, but are not limited to, a mark-up code for generating web pages, media files, and electronic messages.
A number of components running on one or more processors included in the mobile computing device 102 enable the user 105 to interact with the touchscreen display 104 to provide input and to receive visual and/or audible output. For example, an interface manager 112 can manage interaction with the touchscreen display 104, and includes a display manager 114 and an input manager 116. The display manager 114 can manage the information displayed to a user using the touchscreen display 104. For example, an operating system running on the mobile computing device 102 can use the display manager 114 to arbitrate access to the touchscreen display 104 for a number of applications 118 running on the mobile computing device 102. One or more sensors 122 are provided to sense movement of the mobile device 102. Example sensors 122 can include one or more accelerometers, a gyroscope and a compass. For example, a direction and speed of movement of the mobile device 102 can be determined using signals generated by the one or more sensors 122. The mobile device 102 can provide visual, haptic and/or audio feedback. For example, visual feedback can be provided using the display manager 114 to display graphical representations on the touchscreen display 104. As another example, audio feedback can be provided using one or more speakers 124. Haptic feedback can be provided by one or more motors 126 (e.g., to vibrate the mobile device 102).
In some implementations, the mobile computing device 102 enables the user 105 to interact with an application marketplace. An example application marketplace includes the Android Marketplace provided by Google Inc. In some implementations, the application marketplace can include a website that is hosted on one or more servers (e.g., the server system 106) and that is accessed using a computing device (e.g., the mobile computing device 102). In some implementations, the application marketplace can be provided as an application that is executed on a computing device (e.g., the mobile computing device 102), and that retrieves application information from one or more servers (e.g., the server system 106).
The application marketplace can advertise applications (e.g., the applications 118) that are available for download to and installation on the mobile computing device 102. For example, the user 105 of can interact with the application marketplace to view and/or find applications of interest. The user 105 can select a particular application (such as one of the applications 118) from the one or more displayed applications to download and install the selected application (such as one of the applications 118) on the mobile computing device 102.
Applications that have been downloaded and installed on the mobile computing device 102 can be represented as icons on a screen displayed in the touchscreen display 104. In some examples, the user 105 can execute an application by activating (e.g., tapping on) one of the icons in the GUI. For example, the user 105 can activate an icon by contacting (e.g., with a finger) a region of the touchscreen display 104 where the icon is displayed. In some examples, the GUI can include one or more pages, or screens, for presenting the icons to the user 105. When the GUI includes multiple screens, each screen can include a respective configuration or arrangement of one or more of the application icons. In some examples, one of the multiple GUI screens can be provided as a primary screen (e.g., a home screen).
In some examples, the user 105 can navigate between the multiple screens by interacting with the touchscreen 104. For example, the user 105 can contact the touchscreen 104 and perform a lateral sweeping motion (a "swipe") to navigate between screens. In some examples, the user 105 can also navigate within each screen. For example, if a screen includes additional space that extends beyond the provided display area, the user 105 can view the additional space by scrolling the screen. In some examples, scrolling can be accomplished by contacting the touchscreen 104 and performing an upwards or downwards dragging, or swiping motion.
FIGs. 2A and 2B depict a home screen 204 and a secondary screen 206, respectively, of an example mobile computing device 102 including example application icons in a current configuration. As shown, the home screen 204 includes icons Al -Al2 and the secondary screen 206 includes icons A13-A15. The icons A1-A15 represent applications that have been downloaded (or otherwise transferred) to, and subsequently installed on, the mobile computing device 102. As shown, the icons A1-A15 are organized in a grid arrangement. In this example, the grid includes three columns and four rows. Accordingly, a total of twelve icons can be disposed on each screen. It is appreciated that other suitable icon arrangements can also be used. For example, other appropriate configurations can have more or less rows and/or columns than provided in the depicted example.
In the depicted example, the icons Al-A15 are displayed on the screens 204, 206 in a current configuration. The current configuration can be an initial configuration or a previously modified configuration. For example, the icons Al-Al 5 can be positioned in the grid based on the order in which the represented applications were downloaded to and installed on the mobile computing device 102. As another example, the icons Al -A15 can be positioned in the grid based on an order defined by the user 105 (e.g., the user manually arranging the icons). Other standard ordering schemes can be used for the initial configuration (e.g., alphabetical order, order of application file size, etc.). In some examples, the initial configuration is determined as a default order prescribed by a third party manufacturer or service provider. As discussed in further detail herein, the current configuration can be modified based on one or more usage signals.
Implementations of the present disclosure are directed to organizing graphical representations (e.g., icons, widgets) associated with applications displayed on one or more screens of a computing device. For example, implementations can include actions of determining, based on one or more usage signals, a modified configuration for a set of graphical representations (e.g., icons, widgets) in one or more screens, and implementing the modified configuration to re-organize a current configuration of the graphical representations. In some examples, usage signals can indicate how a user or a set of users interact with one or more applications graphically represented on screens of computing devices, and/or interact with screens of computing devices to navigate to applications. In some examples, usage data can be automatically collected by the computing device and/or a remote server system. In some examples, usage data can be collected in response to user input (e.g., a user request to collect usage data). In some examples, determining the modified configuration of graphical representations includes implementing an optimization technique based on a success metric, as discussed in further detail herein.
Example usage signals can include frequency of use, interaction time, interaction frequency, navigation rate, and order of use. In some examples, frequency of use can be provided as a measure of how often an application is accessed or opened over a particular time period (e.g., X times per time period). For example, if a user opens a text messaging application twice in one hour, the frequency of use signal associated with the application could be expressed as a raw numeric score of "two/hour," or simply "two." In some implementations, various weights, constants, and/or coefficients can be incorporated into the usage signal. In some implementations, a first application associated with a strong frequency of use signal (e.g., thirty times per day) can be prioritized over a second application associated with a weak frequency of use signal (e.g., ten times per day), because the first application is more frequently utilized by the user.
In some examples, interaction time can be provided as a measure of a length of time that a user interacts with a particular application. In some examples, the interaction time can be provided as an accumulated application runtime over a particular time period (e.g., X minutes per time period). In some examples, the interaction time can be provided as an average application runtime over multiple uses (e.g., X minutes on average per use). In some implementations, a first application associated with a strong interaction time signal (e.g., two hours per day, or one hour per use) can be prioritized over a second application associated with a relatively weaker interaction time signal (e.g., ten minutes per day, or two minutes per use), because the first application is utilized more extensively by the user.
In some examples, interaction frequency can be provided as a measure of interactions between the user and an application. In some examples, interaction frequency can reflect how often the user interacts with an application over a particular time period (e.g., X interactions per time period). For example, a user can interact with an application by providing user input (e.g., using a touchscreen or other type of input device to make selections or provide commands). For example, a user can interact with a media player application by selecting a song or a playlist from a music library and issuing a command to play the selected song or playlist. In some examples, interaction frequency can reflect how often the application interacts with the user. For example, the application can provide notifications to the user. Such notifications can be provided as "push notifications" that are displayed to the user, for example, in a pop-up window and/or audible alarms.
In some examples, the interaction frequency can be expressed in terms of a quality or importance ratio. For instance, and by way of example, an application can provide ten notifications, push notifications for example, to a user, but the user only responds to one of the notifications. Consequently, the interaction frequency signal associated with the application may be relatively weak, because the user was generally unresponsive to notifications provided by the application. In some implementations, a first application associated with a strong interaction frequency signal (e.g., twenty times per day) is prioritized over a second application associated with a weak interaction frequency signal (e.g., three times per day), because the user has more frequent interaction with the first application.
For purposes of clarification, frequency of use and interaction frequency can be illustrated with reference to a first application and a second application. For example, a user can initiate execution of the first application ten times during a particular day, and interact with the first application two times during the particular day. The user can initiate execution of the second application three times during the particular day, and interact with the second application twenty times during the particular day. Accordingly, although the frequency of use is higher for the first application than the second application, the user more frequently interacts with the second application. Consequently, and although the frequency of use is higher for the first application than the second application, the second application could be determined to be more significant to the user.
In some examples, navigation rate is a measure of the average user input required to access a particular application. For example, navigation rate can be expressed as the average number of times a user passes through a screen to reach a particular application icon (e.g., the average number of "lateral swipes"). Other types of user input can also be considered in determining the navigation rate usage signal (e.g., scrolling and clicking). For example, if the application icons are grouped into folders, the number of times a user enters and exits a folder can be accounted for in the navigation rate signal.
In some examples, order of use is a measure of how often a user accesses two or more applications in a certain order during a particular time period. For example, and with reference to FIGs. 2A and 2B, a usage pattern can reflect that the user consistently opens the Al application followed by the Al6 application (e.g., multiple times a day). This usage pattern can be monitored and incorporated into the order of use signal. In some implementations, icons that represent applications known to be used in sequence by the user can be arranged near to one another (e.g., on the same page or in the same folder) in the modified configuration.
FIGs. 3A and 3B depict the home screen 204 and the secondary screen 206, respectively, including the example application icons of FIGs. 2A and 2B in a modified configuration. As noted above, one or more usage signals can be used to determine a modified configuration for a set of application icons. In some implementations, a priority score is attributed to each application that is represented by an icon in the GUI. Accordingly, in the modified configuration, the icons can be arranged in order of priority score. In some examples, the icons can be arranged from left to right, and from top to bottom, in a grid, based on the priority scores. Therefore, in this example, the icon A5, placed in the upper left-hand grid position on the home screen 204, would represent the highest priority application (e.g., have the highest priority score). The icon A15, placed in the last position on the secondary screen 206, would represent the lowest priority application (e.g., have the lowest priority score).
In some examples, the icon representing the highest priority application is placed in a "prominence position." The prominence position can be a region of the GUI page that is determined to be both easily visible and accessible to the user. For example, if the user is right handed, the prominence position may be located in a column of the grid on the right side of the GUI page. In some examples, the prominence position can be determined based on user input. For example, the user can select the prominence position through an interface of the computing device. In some examples, the prominence position is determined automatically, without user input, based on data collected by the computing device.
In some examples, the icon representing the highest priority application is placed in a "persistent display position." In some examples, a persistent display position can be provided in a region of the touchscreen display that includes a plurality of icons and that does not change from screen to screen. That is, icons in the persistent display position can be presented to the user in the same location across all of the screens. In some examples, the persistent display position is provided within a dock region located at the top, bottom, middle, or side of the display. In some examples, the dock region provides multiple persistent display positions including icons that are displayed regardless of which screen is being displayed.
In some implementations, the priority score can be determined based on one or more usage signals. For example, the priority score can be determined based on a particular usage signal or an aggregation of usage signals. By way of example, a particular usage signal can include frequency of use, and the icons A1-A15 can be arranged in order of priority score. In this example, and referring to FIGs. 3A and 3B, the icon A5 represents the application most frequently utilized by the user, and the icon Al 5 represents the application least frequently utilized by the user. In another example, the priority score can be determined as an aggregation of a plurality of usage signals (e.g., two or more usage signals). In some examples, influences of the respective usage signals can be weighted, such that certain usage signals are attributed more or less importance than other usage signals. In some examples, the usage signals are attributed equal weight.
In some implementations, an optimization technique can be used to determine the modified configuration. The optimization technique can provide a modified configuration of icons that improves the efficiency of the icon configuration with respect to one or more success metrics. In some implementations, the modified configuration of icons determined using the optimization technique is optimal with respect the success metrics. Example success metrics can include a nominal navigation rate and/or an interstitial time on a screen during navigations between screens. In some examples, the nominal navigation rate describes the average amount of navigational user input (e.g., traversing GUI screens and/or application folders) during a particular time period (e.g., average X number of "swipes" per day) required to find a graphical representation of interest (e.g., the number of swipes through screens to find an application icon). In some examples, the interstitial time on a screen reflects the amount of time a user pauses on one or more screens before finding a graphical representation of interest (e.g., time that the user is looking for a particular icon one each screen as the user navigates between screens in search of the icon). In some examples, in order to reduce the average amount of navigational user input and/or the interstitial time, the computing device can determine that certain graphical representations should be positioned near to one another (e.g., in adjacent grid positions on the same screen, in together in a folder). For example, and referring to FIG 3A, usage signals can indicate that the applications respectively represented by icons AS and A16 are both extensively utilized by the user and/or are often opened in sequence (e.g., one after another). Accordingly, in the modified configuration, the icons AS and Al 6 are located near one another. Further, in addition to nominal navigation rate and the interstitial time, a modified configuration of icons can be determined using other suitable success metrics, or a combination of success metrics.
In some examples, application metadata can be used in the optimization technique to supplement the aggregated usage signals. For example, the computing device can determine that certain graphical representations should be positioned near one another, because they represent applications of a similar type or category (as identified by the metadata). Other types of metadata may also be considered (e.g., publisher, application name, etc.).
In some examples, the modified configuration of icons determined using the optimization technique can include less than the original number of icons. For example, the computing device can determine that certain graphical representations should be removed from the user interface, because they represent applications that are rarely utilized by the user. These rarely used applications can be identified based on the usage signals. In some cases, the computing device can suggest to the user (e.g., through notifications) that certain rarely used applications be deleted entirely from the device.
FIG. 4 depicts an example system 400 that can execute implementations of the present disclosure, where a modified configuration is determined based on aggregated usage signals. The example system 400 includes a number of user associated client computing devices 440-448 communicatively coupled to the server system 106 by the network 108. The system 400 also includes the computing device 102 associated with the user 105.
In some examples, users associated with the client computing devices 440-448 may opt into or opt out of providing usage information for particular applications to the server system 106. In some examples, usage information can be anonymously provided from each user. The server system 106 can be configured compute, aggregate and store usage signals based on the provided information. In some examples, the server system can determine an optimized configuration of icons based on the aggregated usage signals and can suggest the optimized configuration to the user 105, for example, as a suggested modified configuration. In some examples, the computing device 102 can receive one or more of the aggregated usage signals from the server system 106 and can determine a modified configuration based thereon (e.g., based on a priority score or an optimization technique as discussed above). In some examples, aggregated used signals can be used to propose a modified configuration to the computing device 102 when the computing device 102 is relatively new and/or little usage information associated with the particular user 105 has been collected. In some examples, the user 105 can request a modified configuration based on aggregated usage information, if the user has just purchased and activated the computing device 102 and/or if the user 105 is interested in how other users arrange graphical representations. As another example, the user 105 can request a modified configuration based on aggregated usage information, if the user has just downloaded a new application, has performed a system restore, and/or has opted not to have their own usage information collected by the computing device 102. In some examples, the user 105 can opt to provide usage information to the network 106 (e.g., in exchange for receiving proposed modified configurations based on usage information from other users).
In some implementations, re-organization of a current configuration of icons can be initiated by a user. For example, the user can provide a command through a user interface that initiates the determination of a modified configuration, as discussed herein. In some examples, the user can be prompted to initiate a re-organization. For example, the computing device can automatically determine an appropriate modified configuration, as discussed herein, and can prompt the user (e.g., by providing a push notification) to accept the modified configuration.
In some examples, automatic determination of the modified configuration can be executed substantially continuously, or discretely at predetermined time intervals (e.g., X times per month). In some examples, automatic determination of the modified configuration can be executed in response to a new application being downloaded to and installed on the computing device.
In some examples, prompting of the user to implement a modified icon configuration can be provided in response to a stimulus. For example, the computing device can be configured to prompt the user when a current configuration of icons (e.g., an initial configuration, or a previously modified configuration) is sufficiently dissimilar to the modified icon configuration. In this regard, the computing device can be configured to calculate the difference between the current configuration and the modified configuration (e.g., continuously or discretely). Other stimulus can also be used to provide prompting of the user. For example, the computing device can be configured to prompt the user when an optimization success metric (e.g., average amount of navigational user input over a particular time period) has degraded below a predetermined threshold.
As described in detail above, a current configuration can be replaced by a modified configuration that is determined based on one or more usage signals. In some examples, the modified configuration can be implemented as a "draft" that can be accepted (e.g., set to a current configuration), rejected (e.g., rolled back), and/or edited by the user. For example, the user can be presented with one or more draft GUI screen that arrange graphical representations based on a modified configuration. In the draft GUI screens, the graphical representations can be moved by the user to edit the proposed modified configuration. Additionally, if the user chooses not to modify the current configuration, an option can be provided to reject the proposed configuration. In some examples, graphical representations in the draft GUI screens can be displayed transparently (e.g., "ghosted), or otherwise presented in an altered form, to indicate to the user that the displayed pages are draft GUI screens. In some examples, graphical representations in the draft GUI screens are prevented from activating a corresponding application.
If the user chooses to accept the proposed modified configuration, the current configuration can be updated to the modified configuration. In some examples, after the modified configuration of icons has been accepted (e.g., the current configuration has been updated to the modified configuration, the computing device can continue to monitor usage signals. In some examples, the computing device is configured to suspend the monitoring of usage signals for a predetermined period of time, after implementing a modified configuration. In this manner, the user can be afforded time to become familiar with the newly configured GUI screens before usage information is again collected.
FIGs. 5A-5E depict sequential illustrations of a user interacting with an example mobile computing device according to one or more implementations of the present disclosure. FIG. 5A shows the user 105 activating the icon A5 by contacting the display region where the icon AS is presented on the GUI screen. The application represented by the icon A5 is executed, in response to the activation event. User interaction with the launched application can be collected by the mobile computing device 102. As shown in FIG. 5B, the mobile computing device 102 can prompt the user 105 to re-organize the current configuration. In this example, the mobile computing device 102 provides a notification. Upon receiving confirmation that the user would like to re-organize the application icons, the computing device 102 can present a draft GUI screen to the user, as depicted in FIG. 5C. The draft GUI screen provides a proposed modified configuration of the application icons. The modified configuration can be determined based on one or more usage signals, as discussed herein. As shown, the application icons are presented in a ghosted form to indicate that the presented screen is a draft GUI screen. As noted above, the user 105 can choose to edit the draft GUI screen. For example, as shown in FIGs. 5C and 5D, the user can select an edit option from an interface and can drag-and-drop ghosted application icons in the draft GUI screen to modify the proposed configuration. The user can choose to accept the proposed configuration by selecting an accept option from the interface (see FIG. 5E), and in response, the current configuration can be set to the modified configuration (see FIG. 5F).
FIG. 6 depicts an example process 600 for automatically organizing application icons. The example process 600 can be provided using one or more computer program applications executed on one or more computing devices. For example, the mobile computing device 102 and/or the server system 106 can be used to execute the example process 600.
Usage signals are collected (602). For example, the mobile computing device 102 can collect usage data by monitoring user interaction with installed applications. Further, in some examples, usage signals from other users can be collected to provide aggregated usage signals. A modified configuration for graphical representations displayed on one or more GUI screens is determined (604). The modified configuration can be determined based on the usage signals. For example, each application represented by an icon can be attributed a priority score determined based on the usage signals. The priority scores associated with the respective applications can be used to determine respective icon positions in the modified configuration. Further, in some examples, an optimization technique can be used to determine the modified configuration. User input is received (606). For example, a user can provide input by initiating re-organization of the current configuration, responding to a prompt provided by the mobile computing device 102 to re-organize the current configuration, and/or by editing a proposed modified configuration. The modified configuration can be implemented (608), based on the user input. For example, the user can accept the proposed modified configuration and, in response, the current configuration can be set to the proposed modified configuration. As another example, at least a portion of the modified configuration can be displayed in the GUI.
Implementations of the present disclosure and all of the functional operations provided herein can be realized in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Implementations of the present disclosure can be realized as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, data processing apparatus. The computer readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them. The term "data processing apparatus" encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this disclosure can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random access memory or both. Elements of a computer can include a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, implementations of the present disclosure can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
While this disclosure includes some specifics, these should not be construed as limitations on the scope of the disclosure or of what may be claimed, but rather as descriptions of features of example implementations of the disclosure. Certain features that are described in this disclosure in the context of separate implementations can also be provided in combination in a single implementation. Conversely, various features that are described in the context of a single implementation can also be provided in multiple implementations separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular implementations of the present disclosure have been described. Other implementations are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. For example, various forms of the flows shown above may be used, with steps re-ordered, added, or removed. Accordingly, other implementations are within the scope of the following claims.
There is provided a computer-implemented method executed using one or more processors, the method comprising identifying an initial configuration of graphical representations displayed in a user interface presented by a computing device, each of the graphical representations being associated with a respective computer-executable application from a plurality of computer-executable applications; determining two or more usage signals corresponding to one or more of the graphical representations, the two or more usage signals reflecting user interaction with at least one respective computer-executable application from the plurality of computer-executable applications; determining a first navigation rate of user input associated with the initial configuration of graphical representations; determining, based on an aggregation of the two or more usage signals, a priority score attributed to each computer-executable application graphically represented in the user interface; determining a priority order of the graphical representations according to the priority scores; and modifying the priority order based on a second usage signal of the two or more usage signals; generating a modified configuration of graphical representations based on the priority order such that a second navigation rate of user input associated with the modified configuration of graphical representations is reduced as compared to the first navigation rate of the user input associated with the initial configuration of graphical representations; and presenting by the computing device, in the user interface, at least a portion of the modified configuration of graphical representations.
In the method of the preceding paragraph the user interface includes one or more screens, and wherein identifying the initial configuration of graphical representations comprises identifying spatial relationships between positions of the graphical representations on the one or more screens.
In the method of two paragraphs above, determining the two or more usage signals comprises recording, with the computing device, usage data describing the user interaction with the at least one respective computer-executable application.
In the method of the preceding paragraph, determining the two or more usage signals further comprises transmitting, from the computing device, the usage data to a server system.
In the method of the four paragraphs above, determining the two or more usage signals comprises receiving the two or more usage signals at the computing device, from a server system.
In the method of the preceding paragraph, the two or more usage signals comprises an aggregated usage signal based on usage data generated by multiple users.
In the method of six paragraphs above, the two or more usage signals are selected from the group consisting of: frequency of use, interaction time, interaction frequency, navigation rate, and order of use.
In the method of seven paragraphs above, at least one usage signal of the two or more usages signals comprises a weighted combination of two or more usage signals.
In the method of eight paragraphs above, determining the first navigation rate comprises recording, with the computing device, usage data describing the user input associated with the initial configuration of graphical representations.
In the method of nine paragraphs above, generating further comprises generating the modified configuration of graphical representations such that a first interstitial time of the user input associated with the modified configuration of graphical representations is reduced as compared to a second interstitial time of the user interaction associated with the initial configuration of graphical representations.
In the method of ten paragraphs above, modifying the priority order further comprises modifying the priority order based on metadata associated with each computer-executable application.
In the method of eleven paragraphs above, generating the modified configuration of graphical representations comprises generating the modified configuration when at least the first navigation rate degrades below a predetermined threshold.
In the method of twelve paragraphs above, generating the modified configuration of graphical representations comprises generating the modified configuration in response to a user instruction.
In the method of thirteen paragraphs above, generating the modified configuration of graphical representations comprises removing one or more graphical representations from the user interface.
The method of fourteen paragraphs above may further comprise re-organizing the graphical representations in the user interface based on the modified configuration of graphical representations.
The method of fifteen paragraphs above may further comprise prompting a user to accept the modified configuration of graphical representations.
In the method of sixteen paragraphs above, generating the modified configuration of graphical representations comprises: generating the modified configuration at predetermined time intervals; monitoring a difference between the modified configuration and the initial configuration; and implementing the modified configuration when the difference exceeds a predetermined threshold.
There is provided a computer-readable medium coupled to one or more processors having instructions stored thereon which, when executed by the one or more processors, cause the one or more processors to perform operations comprising: identifying an initial configuration of graphical representations displayed in a user interface presented by a computing device, each of the graphical representations being associated with a respective computer-executable application from a plurality of computer-executable applications; determining two or more usage signals corresponding to one or more of the graphical representations, the two or more usage signals reflecting user interaction with at least one respective computer-executable application from the plurality of computer-executable applications; determining a first navigation rate of user input associated with the initial configuration of graphical representations; determining, based on an aggregation of the two or more usage signals, a priority score attributed to each computer-executable application graphically represented in the user interface; determining a priority order of the graphical representations according to the priority scores; and modifying the priority order based on a second usage signal of the two or more usage signals; generating a modified configuration of the graphical representations based on the priority order such that a second navigation rate of user input associated with the modified configuration of graphical representations is reduced as compared to the first navigation rate of the user input with the initial configuration of graphical representations; and presenting by the computing device, in the user interface, at least a portion of the modified configuration of graphical representations.
There is provided a computing device, comprising: one or more processors; and a computer-readable medium coupled to the one or more processors and having instructions stored thereon which, when executed by the one or more processors, cause the one or more processors to perform operations comprising: identifying an initial configuration of graphical representations displayed in a user interface of the computing device, each of the graphical representations being associated with a respective computer-executable application from a plurality of computer-executable applications; determining two or more usage signals corresponding to one or more of the graphical representations, the two or more usage signals reflecting user interaction with at least one respective computer-executable application from the plurality of computer-executable applications; determining a first navigation rate of user input associated with the initial configuration of graphical representations; determining, based on an aggregation the two or more usage signals, a priority score attributed to each computer-executable application graphically represented in the user interface; determining a priority order of the graphical representations according to the priority scores; and; modifying the priority order based on a second usage signal of the two or more usage signals; generating a modified configuration of graphical representations based on the priority order such that a second navigation rate of user input associated with the modified configuration of graphical representations is reduced as compared to the first navigation rate of the user input with the initial configuration of graphical representations; and presenting, in the user interface, at least a portion of the modified configuration of graphical representations.
Claims (20)
- CLAIMS1. A computer-implemented method, comprising: displaying, in a first arrangement on an electronic display of a computing device, at least a portion of a plurality of graphical representations of application programs, each respective graphical representation of the plurality of graphical representations being user selectable to execute a respective application program that corresponds to the respective graphical representation; identifying that a first graphical representation of a first application program from among the plurality of graphical representations of application programs has been accessed one or more times from within the first arrangement of graphical representations; determining a level of user input performed to access the first graphical representation the one or more times from within the first arrangement of graphical representations; generating a second arrangement of graphical representations of application programs, wherein the first graphical representation is provided at a location in the second arrangement of graphical representations that is determined to reduce a level of user input required to access the first graphical representation from within the second arrangement of graphical representations as compared to the level of user input performed to access the first graphical representation the one or more times from within the first arrangement of graphical representations; and displaying particular ones of the plurality of graphical representations of application programs, including the first graphical representation, on the electronic display of the computing device according to the second arrangement of graphical representations of application programs.
- 2. The computer-implemented method of claim 1, wherein the level of user input is an average level of user input performed to access the first graphical representation multiple times from within the first arrangement of graphical representations.
- 3. The computer-implemented method of claim 2, wherein the average level of user input indicates an average number of screen swipes performed to access the first graphical representation of the first application over the multiple times that the first graphical representation of the first application was accessed from within the first arrangement of graphical representations.
- 4. The computer-implemented method of claim 2, wherein the average level of user input indicates an average number of times that the computing device, responsive to user input, enters or exits one or more folders to access a particular folder in which the first graphical representation of the first application is located.
- 5. The computer-implemented method of claim 1, further comprising: for each of one or more application programs on the computing device including the first application, identifying at least one usage signal that indicates a measure of user interaction with the application program; determining, based on the at least one usage signal for the one or more application programs on the computing device, that at least one measure of user interaction with the first application is greater than at least one measure of user interaction with other ones of the one or more application programs; and in response to determining that the at least one measure of user interaction with the first application is greater than the at least one measure of user interaction with the other ones of the one or more application programs, prioritizing the location of the first graphical representation in the second arrangement of graphical application programs over locations of other graphical representations that correspond to the other ones of the one or more application programs.
- 6. The computer-implemented method of claim 5, wherein the at least one usage signal comprises a frequency of use signal that indicates a measure of how often a particular application corresponding to the at least one usage signal is accessed or opened over a period of time.
- 7. The computer-implemented method of claim 5, wherein the at least one usage signal comprises an interaction time signal that indicates at least one of (i) an accumulated runtime for a particular application corresponding to the at least one usage signal over a period of time, and (ii) an average application runtime for the particular application over multiple uses of the particular application.
- 8. The computer-implemented method of claim 5, wherein the at least one usage signal comprises an interaction frequency signal that indicates a measure of how often user input responds to notifications pushed out from a particular application corresponding to the at least one usage signal.
- 9. The computer-implemented method of claim 1, wherein the first arrangement of graphical representations of application programs on the computing device is determined based at least in part on one or more usage signals aggregated from a plurality of users that indicate respective measures of user interaction by the plurality of users with particular application programs that are graphically represented in the first arrangement of graphical representations.
- 10. The computer-implemented method of claim 1, wherein generating the second arrangement of graphical representations of application programs comprises assigning priority scores to each of a plurality of application programs on the computing device, ranking the plurality of application programs based on the priority scores, and arranging the graphical representations in the second arrangement of graphical representations of application programs on the computing device based on the ranking.
- 11. The computer-implemented method of claim 10, wherein the priority scores are determined based on one or more usage signals that indicate one or more measures of user interaction with the plurality of application programs.
- 12. The computer-implemented method of claim 1, further comprising determining that one or more application programs that have a corresponding graphical representation in the first arrangement of graphical representations are interacted with by users less than a threshold amount, and in response, excluding the graphical representations of the one or more application programs from the second arrangement of graphical representations of application programs on the computing device so that the graphical representations of the one or more application programs are not displayed in the second arrangement of graphical representations.
- 13. The computer-implemented method of claim 1, wherein generating the second arrangement of graphical representations of application programs on the computing device comprises determining that two or more application programs are assigned to a same or similar category of application programs, and in response, positioning graphical representations of the two or more application programs nearer each other in the second arrangement of graphical representations than if the two or more application programs were not assigned to the same or similar category of application programs.
- 14. The computer-implemented method of claim 1, further comprising prompting a user to at least one of (i) confirm whether to display the particular ones of the plurality of graphical representations of application programs on the computing device according to the second arrangement of graphical representations, and (ii) confirm whether to maintain the display of the particular ones of the plurality of graphical representations of application programs on the computing device according to the second arrangement of graphical representations.
- 15. The computer-implemented method of claim 1, wherein the location in the second arrangement of graphical representations at which the first graphical representation is provided is further selected based on a determination that providing the first graphical representation at the location is likely to minimize an interstitial time for a user to find the first graphical representation from among a display of multiple graphical representations of application programs.
- 16. One or more machine-readable storage computer-readable devices having instructions stored thereon that, when executed by one or more processors, cause the one or more processors to perform operations comprising: displaying, in a first arrangement on an electronic display of a computing device, at least a portion of a plurality of graphical representations of application programs, each respective graphical representation of the plurality of graphical representations being user selectable to execute a respective application program that corresponds to the respective graphical representation; identifying that a first graphical representation of a first application program from among the plurality of graphical representations of application programs has been accessed one or more times from within the first arrangement of graphical representations; determining a level of user input performed to access the first graphical representation the one or more times from within the first arrangement of graphical representations; generating a second arrangement of graphical representations of application programs, wherein the first graphical representation is provided at a location in the second arrangement of graphical representations that is determined to likoly reduce a level of user input required to access the first graphical representation from within the second arrangement of graphical representations as compared to the level of user input performed to access the first graphical representation the one or more times from within the first arrangement of graphical representations; and displaying particular ones of the plurality of graphical representations of application programs, including the first graphical representation, on the electronic display of the computing device according to the second arrangement of graphical representations of application programs.
- 17. The one or more machine-readable storage computer-readable devices of claim 16, wherein the level of user input is an average level of user input performed to access the first graphical representation multiple times from within the first arrangement of graphical representations.
- 18. The one or more machine-readable storage computer-readable devices of claim 16, wherein the operations further comprise: for each of one or more application programs on the computing device including the first application, identifying at least one usage signal that indicates a measure of user interaction with the application program; determining, based on the at least one usage signal for the one or more application programs on the computing device, that at least one measure of user interaction with the first application is greater than at least one measure of user interaction with other ones of the one or more application programs; and in response to determining that the at least one measure of user interaction with the first application is greater than the at least one measure of user interaction with the other ones of the one or more application programs, prioritizing the location of the first graphical representation in the second arrangement of graphical application programs over locations of other graphical representations that correspond to the other ones of the one or more application programs.
- 19. The one or more machine-readable storage computer-readable devices of claim 16, wherein the first arrangement of graphical representations of application programs is determined based at least in part on one or more usage signals aggregated from a plurality of users that indicate respective measures of user interaction by the plurality of users with particular application programs that are graphically represented in the first arrangement of graphical representations.
- 20. The one or more machine-readable storage computer-readable devices of claim 16, wherein the location in the second arrangement of graphical representations at which the first graphical representation is provided is further selected based on a determination that providing the first graphical representation at the location is likely to minimize an interstitial time for a user to find the first graphical representation from among a display of multiple graphical representations of application programs.AMENDMENTS TO THE CLAIMS HAVE BEEN FILED AS FOLLOWSCLAIMS1. A computer-implemented method executed using one or more processors, the method comprising: identifying an initial configuration of graphical representations displayed in a user interface presented by a computing device, each of the graphical representations being associated with a respective computer-executable application from a plurality of computer-executable applications; determining two or more usage signals corresponding to one or more of the graphical representations, the two or more usage signals reflecting user interaction with at least one respective computer-executable application from the plurality of computer-executable applications and wherein the two or more usage signals are navigation rate; determining a first navigation rate of user input associated with the initial cr) configuration of graphical representations; determining, based on an aggregation of the two or more usage signals, a priority score attributed to each computer-executable application graphically represented in theCDuser interface; CO determining a priority order of the graphical representations according to the priority scores; and modifying the priority order based on a second usage signal of the two or more usage signals; generating a modified configuration of graphical representations based on the priority order such that a second navigation rate of user input associated with the modified configuration of graphical representations is reduced as compared to the first navigation rate of the user input associated with the initial configuration of graphical representations; and presenting by the computing device, in the user interface, at least a portion of the modified configuration of graphical representations.2. The method of claim 1, wherein the user interface includes one or more screens, and wherein identifying the initial configuration of graphical representations comprises identifying spatial relationships between positions of the graphical representations on the one or more screens.3. The method of claim 1, wherein determining the two or more usage signals comprises recording, with the computing device. usage data describing the user interaction with the at least one respective computer-executable application.4. The method of claim 3, wherein determining the two or more usage signals further comprises transmitting, from the computing device, the usage data to a server system.5. The method of claim 1, wherein determining the two or more usage signals comprises receiving the two or more usage signals at the computing device, from a server system.cr) 6. The method of claim 5, wherein the two or more usage signals comprises an a) cp 7. The method of claim 1, wherein at least one usage signal of the two or more CO usages signals comprises a weighted combination of two or more usage signals.8. The method of claim 1, wherein determining the first navigation rate comprises recording, with the computing device, usage data describing the user input associated with the initial configuration of graphical representations.9. The method of claim 1, wherein generating further comprises generating the modified configuration of graphical representations such that a first interstitial time of the user input associated with the modified configuration of graphical representations is reduced as compared to a second interstitial time of the user interaction associated with the initial configuration of graphical representations.10. The method of claim 1, wherein modifying the priority order further comprises modifying the priority order based on metadata associated with each computer-executable application.aggregated usage signal based on usage data generated by multiple users.11. The method of claim 1, wherein generating the modified configuration of graphical representations comprises generating the modified configuration when at least the first navigation rate degrades below a predetermined threshold.12. The method of claim 1, wherein generating the modified configuration of graphical representations comprises generating the modified configuration in response to a user instruction.13. The method of claim 1, wherein generating the modified configuration of graphical representations comprises removing one or more graphical representations from the user interface.14. The method of claim 1, further comprising re-organizing the graphical representations in the user interface based on the modified configuration of graphical cr) representations.15. The method of claim 1, further comprising prompting a user to accept theCDmodified configuration of graphical representations.CO16. The method of claim 1, wherein generating the modified configuration of graphical representations comprises: generating the modified configuration at predetermined time intervals; monitoring a difference between the modified configuration and the initial configuration; and implementing the modified configuration when the difference exceeds a predetermined threshold.17. A computer-readable medium coupled to one or more processors having instructions stored thereon which, when executed by the one or more processors, cause the one or more processors to perform operations comprising: identifying an initial configuration of graphical representations displayed in a user interface presented by a computing device, each of the graphical representations being associated with a respective computer-executable application from a plurality of computer-executable applications; determining two or more usage signals corresponding to one or more of the graphical representations, the two or more usage signals reflecting user interaction with at least one respective computer-executable application from the plurality of computer-executable applications; determining a first navigation rate of user input associated with the initial configuration of graphical representations; determining, based on an aggregation of the two or more usage signals, a priority score attributed to each computer-executable application graphically represented in the user interface; determining a priority order of the graphical representations according to the priority scores; and modifying the priority order based on a second usage signal of the two or more usage signals; generating a modified configuration of the graphical representations based on the cr) priority order such that a second navigation rate of user input associated with the modified configuration of graphical representations is reduced as compared to the first navigation rate of the user input with the initial configuration of graphicalCDrepresentations; and CO presenting by the computing device, in the user interface, at least a portion of the modified configuration of graphical representations.18. A computing device, comprising: one or more processors; and a computer-readable medium coupled to the one or more processors and having instructions stored thereon which, when executed by the one or more processors, cause the one or more processors to perform operations comprising: identifying an initial configuration of graphical representations displayed in a user interface of the computing device, each of the graphical representations being associated with a respective computer-executable application from a plurality of computer-executable applications; determining two or more usage signals corresponding to one or more of the graphical representations, the two or more usage signals reflecting user interaction with at least one respective computer-executable application from the plurality of computer-executable applications; determining a first navigation rate of user input associated with the initial configuration of graphical representations; determining, based on an aggregation of the two or more usage signals, a priority score attributed to each computer-executable application graphically represented in the user interface; determining a priority order of the graphical representations according to the priority scores; and modifying the priority order based on a second usage signal of the two or more usage signals; generating a modified configuration of graphical representations based on the priority order such that a second navigation rate of user input associated with the modified configuration of graphical representations is reduced as compared to the first navigation rate of the user input with the initial configuration of graphical representations; and presenting, in the user interface, at least a portion of the modified a) configuration of graphical representations.O co
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/525,021 US8464180B1 (en) | 2012-06-15 | 2012-06-15 | Organizing graphical representations on computing devices |
GB1310503.6A GB2503111B (en) | 2012-06-15 | 2013-06-13 | Organizing graphical representations on computing devices |
Publications (3)
Publication Number | Publication Date |
---|---|
GB201518656D0 GB201518656D0 (en) | 2015-12-02 |
GB2538578A true GB2538578A (en) | 2016-11-23 |
GB2538578B GB2538578B (en) | 2017-03-01 |
Family
ID=48538531
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
GB1518656.2A Active GB2538578B (en) | 2012-06-15 | 2013-06-13 | Organizing graphical representations on computing devices |
GB1310503.6A Active GB2503111B (en) | 2012-06-15 | 2013-06-13 | Organizing graphical representations on computing devices |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
GB1310503.6A Active GB2503111B (en) | 2012-06-15 | 2013-06-13 | Organizing graphical representations on computing devices |
Country Status (5)
Country | Link |
---|---|
US (3) | US8464180B1 (en) |
KR (2) | KR20130141378A (en) |
AU (1) | AU2013203917B2 (en) |
DE (1) | DE102013009054A1 (en) |
GB (2) | GB2538578B (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109144340A (en) * | 2018-08-02 | 2019-01-04 | 珠海格力电器股份有限公司 | A kind of methods of exhibiting of application, device, terminal and storage medium |
Families Citing this family (50)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9405459B2 (en) | 2011-08-24 | 2016-08-02 | Z124 | Unified desktop laptop dock software operation |
US9268518B2 (en) | 2011-09-27 | 2016-02-23 | Z124 | Unified desktop docking rules |
US9715252B2 (en) | 2011-08-24 | 2017-07-25 | Z124 | Unified desktop docking behavior for window stickiness |
US20130080932A1 (en) | 2011-09-27 | 2013-03-28 | Sanjiv Sirpal | Secondary single screen mode activation through user interface toggle |
US9164544B2 (en) | 2011-12-09 | 2015-10-20 | Z124 | Unified desktop: laptop dock, hardware configuration |
US20130324240A1 (en) * | 2012-06-01 | 2013-12-05 | Zynga Inc. | Systems and methods of icon optimization in game user interface |
US8464180B1 (en) | 2012-06-15 | 2013-06-11 | Google Inc. | Organizing graphical representations on computing devices |
CN103631469B (en) * | 2012-08-21 | 2016-10-05 | 联想(北京)有限公司 | The display processing method of icon, device and electronic equipment |
US20140146074A1 (en) * | 2012-11-27 | 2014-05-29 | Futurewei Technologies, Inc. | Intelligent Homescreen for Mobile Devices |
USD845978S1 (en) | 2013-01-23 | 2019-04-16 | Yandex Europe Ag | Display screen with graphical user interface |
JP2014165663A (en) * | 2013-02-25 | 2014-09-08 | Kyocera Corp | Mobile terminal device, program, and method of controlling mobile terminal device |
USD743415S1 (en) * | 2013-03-14 | 2015-11-17 | Microsoft Corporation | Display screen with graphical user interface |
US9465522B2 (en) * | 2013-03-28 | 2016-10-11 | Linkedin Corporation | Providing a personalized navigation experience in a mobile application |
US9189139B2 (en) * | 2013-03-28 | 2015-11-17 | Linkedin Corporation | Likelihood-based personalized navigation system and method |
USD785014S1 (en) * | 2013-04-05 | 2017-04-25 | Thales Avionics, Inc. | Display screen or portion thereof with graphical user interface |
US10212115B2 (en) * | 2013-04-24 | 2019-02-19 | Ebay Inc. | Systems and methods to communicate a selected message |
US10514965B2 (en) * | 2013-06-07 | 2019-12-24 | Verizon New Jersey Inc. | Navigating between applications of a device |
USD778310S1 (en) | 2013-08-09 | 2017-02-07 | Microsoft Corporation | Display screen with graphical user interface |
USD739870S1 (en) | 2013-08-09 | 2015-09-29 | Microsoft Corporation | Display screen with graphical user interface |
CN104423856A (en) * | 2013-08-26 | 2015-03-18 | 联想(北京)有限公司 | Information classification display method and electronic device |
USD771111S1 (en) | 2013-08-30 | 2016-11-08 | Microsoft Corporation | Display screen with graphical user interface |
US9251124B2 (en) * | 2013-09-09 | 2016-02-02 | Andrea STEINFL | Modular responsive screen grid, authoring and displaying system |
WO2015041648A1 (en) * | 2013-09-19 | 2015-03-26 | Hewlett-Packard Development Company, L.P. | Application menu modification recommendations |
US9658739B1 (en) | 2013-10-22 | 2017-05-23 | Google Inc. | Optimizing presentation of interactive graphical elements based on contextual relevance |
CN104598097A (en) * | 2013-11-07 | 2015-05-06 | 腾讯科技（深圳）有限公司 | Ordering method and device of instant messaging (IM) windows |
US9535575B1 (en) * | 2013-12-17 | 2017-01-03 | EMC IP Holding Company LLC | Dynamically-configured dashboard |
KR102193106B1 (en) * | 2014-01-08 | 2020-12-18 | 삼성전자주식회사 | Mobile apparatus and method for controlling thereof, and touch device |
US9509753B2 (en) * | 2014-01-08 | 2016-11-29 | Samsung Electronics Co., Ltd. | Mobile apparatus and method for controlling thereof, and touch device |
JP2015138315A (en) * | 2014-01-21 | 2015-07-30 | コニカミノルタ株式会社 | Object display system, object display control program, and object display control method |
US9665240B2 (en) | 2014-01-27 | 2017-05-30 | Groupon, Inc. | Learning user interface having dynamic icons with a first and second visual bias |
US9800360B2 (en) | 2014-02-06 | 2017-10-24 | Honda Motor Co., Ltd. | Management of stations using preferences from social networking profiles |
KR20150099341A (en) * | 2014-02-21 | 2015-08-31 | 삼성전자주식회사 | A method for editting one or more objects and an eletronic device therefor |
CN104020972B (en) * | 2014-05-15 | 2017-07-14 | 小米科技有限责任公司 | Background display methods, device and electronic equipment |
GB2530515A (en) * | 2014-09-24 | 2016-03-30 | Sony Comp Entertainment Europe | Apparatus and method of user interaction |
USD774051S1 (en) * | 2014-11-24 | 2016-12-13 | Td Ameritrade Ip Company, Inc. | Display screen or portion thereof with animated graphical user interface |
JP6500406B2 (en) * | 2014-12-01 | 2019-04-17 | セイコーエプソン株式会社 | I / O controller, I / O control program |
US9690463B2 (en) * | 2015-01-06 | 2017-06-27 | Oracle International Corporation | Selecting actionable items in a graphical user interface of a mobile computer system |
US9378467B1 (en) * | 2015-01-14 | 2016-06-28 | Microsoft Technology Licensing, Llc | User interaction pattern extraction for device personalization |
US9965779B2 (en) * | 2015-02-24 | 2018-05-08 | Google Llc | Dynamic content display time adjustment |
US9977568B2 (en) * | 2015-02-27 | 2018-05-22 | Wipro Limited | Method and device for optimizing arrangement of an icon on display unit of device |
WO2016168963A1 (en) * | 2015-04-20 | 2016-10-27 | 华为技术有限公司 | Method and device for displaying text input on terminal device, and terminal device |
US10761973B2 (en) * | 2016-03-28 | 2020-09-01 | Micro Focus Llc | Code coverage thresholds for code segments based on usage frequency and change frequency |
US11392276B2 (en) * | 2017-06-09 | 2022-07-19 | Ford Global Technologies, Llc | Method and apparatus for user-designated application prioritization |
WO2019061298A1 (en) * | 2017-09-29 | 2019-04-04 | 深圳传音通讯有限公司 | Icon management method and terminal device |
CN107729028A (en) * | 2017-11-09 | 2018-02-23 | 青岛海信电器股份有限公司 | The method and apparatus of application program launching based on Android system |
CN108509108B (en) * | 2018-03-29 | 2020-04-21 | 维沃移动通信有限公司 | Application icon arrangement method and mobile terminal |
KR20200093091A (en) * | 2019-01-07 | 2020-08-05 | 현대자동차주식회사 | Terminal device, vehicle having the same and method for controlling the same |
US11023033B2 (en) * | 2019-01-09 | 2021-06-01 | International Business Machines Corporation | Adapting a display of interface elements on a touch-based device to improve visibility |
KR102368589B1 (en) * | 2020-05-27 | 2022-02-28 | 배용규 | Method of auto-change the software icons and a Computer-readable recording medium that records a program to do this |
KR102538576B1 (en) * | 2021-03-12 | 2023-06-01 | 오스템임플란트 주식회사 | Method, device and recording medium for displaying treatment buttons |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH1139133A (en) * | 1997-07-17 | 1999-02-12 | Kobe Nippon Denki Software Kk | Automatic icon alignment system |
KR20030068310A (en) * | 2002-02-15 | 2003-08-21 | 주식회사 엘지이아이 | Icon arrangement method for personal digital assistant |
US20090199134A1 (en) * | 2008-01-31 | 2009-08-06 | Kabushiki Kaisha Toshiba | Mobile communication apparatus |
US20110072492A1 (en) * | 2009-09-21 | 2011-03-24 | Avaya Inc. | Screen icon manipulation by context and frequency of use |
US20110191611A1 (en) * | 2010-01-29 | 2011-08-04 | Kabushiki Kaisha Toshiba | Mobile communication terminal and method for displaying icons on display of mobile communication terminal |
Family Cites Families (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH10139133A (en) | 1996-11-14 | 1998-05-26 | Nippon Eranko Kk | Tablet aligning and supplying device |
EP1036391B1 (en) * | 1997-11-12 | 2010-07-21 | Palus A1, LLC | Automatically switching a user's interface from a program to another program while the first is processing |
US6633315B1 (en) * | 1999-05-20 | 2003-10-14 | Microsoft Corporation | Context-based dynamic user interface elements |
US7257777B1 (en) | 2000-07-19 | 2007-08-14 | International Business Machines Corporation | System and method for automatic control of window viewing |
US20020077900A1 (en) * | 2000-12-14 | 2002-06-20 | Thompson Tiffany A. | Internet protocol-based interstitial advertising |
US7667815B2 (en) * | 2003-08-27 | 2010-02-23 | Ming Su | Multi-panel monitor displaying systems |
US7536206B2 (en) * | 2003-12-16 | 2009-05-19 | Research In Motion Limited | Expedited communication key system and method |
US20070162298A1 (en) * | 2005-01-18 | 2007-07-12 | Apple Computer, Inc. | Systems and methods for presenting data items |
US7844301B2 (en) * | 2005-10-14 | 2010-11-30 | Lg Electronics Inc. | Method for displaying multimedia contents and mobile communications terminal capable of implementing the same |
US8289687B2 (en) * | 2005-12-09 | 2012-10-16 | Marc Chase Weinstein | Multi-panel sliding cover for a device |
JP2010502116A (en) * | 2006-08-18 | 2010-01-21 | ソニー株式会社 | System and method for selective media content access by recommendation engine |
US7619991B2 (en) * | 2007-03-30 | 2009-11-17 | Sap Ag | User interface for modeling estimations of resource provisioning |
US8059101B2 (en) * | 2007-06-22 | 2011-11-15 | Apple Inc. | Swipe gestures for touch screen keyboards |
EP2206041A4 (en) * | 2007-10-01 | 2011-02-16 | Iconics Inc | Visualization of process control data |
US20090150807A1 (en) * | 2007-12-06 | 2009-06-11 | International Business Machines Corporation | Method and apparatus for an in-context auto-arrangable user interface |
US8055602B2 (en) | 2008-06-19 | 2011-11-08 | Motorola Mobility, Inc. | Method and system for customization of a graphical user interface (GUI) of a communication device in a communication network |
KR20100030968A (en) | 2008-09-11 | 2010-03-19 | 엘지전자 주식회사 | Terminal and method for displaying menu thereof |
US8572513B2 (en) * | 2009-03-16 | 2013-10-29 | Apple Inc. | Device, method, and graphical user interface for moving a current position in content at a variable scrubbing rate |
WO2011011025A1 (en) * | 2009-07-24 | 2011-01-27 | Research In Motion Limited | Method and apparatus for a touch-sensitive display |
US8884872B2 (en) * | 2009-11-20 | 2014-11-11 | Nuance Communications, Inc. | Gesture-based repetition of key activations on a virtual keyboard |
US20110126095A1 (en) * | 2009-11-25 | 2011-05-26 | T-Mobile USA, Inc | Router Management via Touch-Sensitive Display |
EP2381351B1 (en) * | 2010-04-20 | 2017-12-06 | BlackBerry Limited | Portable electronic device having touch-sensitive display with a variable repeat control mode. |
US9280391B2 (en) * | 2010-08-23 | 2016-03-08 | AVG Netherlands B.V. | Systems and methods for improving performance of computer systems |
US8887163B2 (en) * | 2010-06-25 | 2014-11-11 | Ebay Inc. | Task scheduling based on dependencies and resources |
US8464180B1 (en) | 2012-06-15 | 2013-06-11 | Google Inc. | Organizing graphical representations on computing devices |
-
2012
- 2012-06-15 US US13/525,021 patent/US8464180B1/en active Active
-
2013
- 2013-04-11 AU AU2013203917A patent/AU2013203917B2/en active Active
- 2013-05-09 US US13/890,584 patent/US8701042B2/en not_active Expired - Fee Related
- 2013-05-28 DE DE102013009054A patent/DE102013009054A1/en active Pending
- 2013-06-13 GB GB1518656.2A patent/GB2538578B/en active Active
- 2013-06-13 KR KR1020130067599A patent/KR20130141378A/en active Search and Examination
- 2013-06-13 GB GB1310503.6A patent/GB2503111B/en active Active
-
2014
- 2014-04-10 US US14/249,427 patent/US9152308B2/en active Active
- 2014-09-15 KR KR1020140122304A patent/KR101911034B1/en active IP Right Grant
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH1139133A (en) * | 1997-07-17 | 1999-02-12 | Kobe Nippon Denki Software Kk | Automatic icon alignment system |
KR20030068310A (en) * | 2002-02-15 | 2003-08-21 | 주식회사 엘지이아이 | Icon arrangement method for personal digital assistant |
US20090199134A1 (en) * | 2008-01-31 | 2009-08-06 | Kabushiki Kaisha Toshiba | Mobile communication apparatus |
US20110072492A1 (en) * | 2009-09-21 | 2011-03-24 | Avaya Inc. | Screen icon manipulation by context and frequency of use |
US20110191611A1 (en) * | 2010-01-29 | 2011-08-04 | Kabushiki Kaisha Toshiba | Mobile communication terminal and method for displaying icons on display of mobile communication terminal |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109144340A (en) * | 2018-08-02 | 2019-01-04 | 珠海格力电器股份有限公司 | A kind of methods of exhibiting of application, device, terminal and storage medium |
Also Published As
Publication number | Publication date |
---|---|
GB2538578B (en) | 2017-03-01 |
US8464180B1 (en) | 2013-06-11 |
GB201518656D0 (en) | 2015-12-02 |
KR101911034B1 (en) | 2018-10-23 |
KR20140126687A (en) | 2014-10-31 |
GB2503111B (en) | 2016-09-07 |
US9152308B2 (en) | 2015-10-06 |
GB201310503D0 (en) | 2013-07-24 |
US20130339901A1 (en) | 2013-12-19 |
AU2013203917B2 (en) | 2014-08-14 |
US8701042B2 (en) | 2014-04-15 |
DE102013009054A1 (en) | 2013-12-19 |
GB2503111A (en) | 2013-12-18 |
US20140223353A1 (en) | 2014-08-07 |
KR20130141378A (en) | 2013-12-26 |
AU2013203917A1 (en) | 2014-01-16 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9152308B2 (en) | Organizing graphical representations on computing devices | |
US11467726B2 (en) | User interfaces for viewing and accessing content on an electronic device | |
US10969928B2 (en) | Contextual launch interfaces | |
CN106462834B (en) | Locating events on a timeline | |
US10437418B2 (en) | Overloading app icon touchscreen interaction to provide action accessibility | |
US8896556B2 (en) | Time-based touch interface | |
US9606725B2 (en) | Collaborative overlay of user interface elements rendered on the display of a computing device | |
CN110651251A (en) | System and method for adaptive user interface | |
EP2631789A1 (en) | Apparatus and method for grouping application program folders in electronic device | |
US10402460B1 (en) | Contextual card generation and delivery | |
US20150193061A1 (en) | User's computing experience based on the user's computing activity | |
CA2846484C (en) | Schedule managing method and apparatus | |
KR20190083004A (en) | Transferring application state between devices | |
US20160164986A1 (en) | Multi-purpose application launching interface | |
US11099731B1 (en) | Techniques for content management using a gesture sensitive element | |
US20220245520A1 (en) | Systems and Methods for Generating and Providing Suggested Actions | |
US11714537B2 (en) | Techniques for providing a search interface within a carousel | |
CN107957842A (en) | The methods of exhibiting and terminal device of a kind of user-generated content | |
KR102055484B1 (en) | Service system, terminal and method of providing service thereof | |
CN112650426A (en) | Information statistical method and device |
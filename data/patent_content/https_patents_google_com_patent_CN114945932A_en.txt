CN114945932A - Feedback controller using secret sharing - Google Patents
Feedback controller using secret sharing Download PDFInfo
- Publication number
- CN114945932A CN114945932A CN202180009049.1A CN202180009049A CN114945932A CN 114945932 A CN114945932 A CN 114945932A CN 202180009049 A CN202180009049 A CN 202180009049A CN 114945932 A CN114945932 A CN 114945932A
- Authority
- CN
- China
- Prior art keywords
- digital component
- secret share
- activity
- selection
- mpc
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0207—Discounts or incentives, e.g. coupons or rebates
- G06Q30/0236—Incentive or reward received by requiring registration or ID from user
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/085—Secret sharing or secret splitting, e.g. threshold schemes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/101—Collaborative creation, e.g. joint development of products or services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/0838—Key agreement, i.e. key establishment technique in which a shared key is derived by parties as a function of information contributed by, or associated with, each of these
- H04L9/0841—Key agreement, i.e. key establishment technique in which a shared key is derived by parties as a function of information contributed by, or associated with, each of these involving Diffie-Hellman or related key agreement protocols
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q2220/00—Business processing using cryptography
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/46—Secure multiparty computation, e.g. millionaire problem
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/06—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols the encryption apparatus using shift registers or memories for block-wise or stream coding, e.g. DES systems or RC4; Hash functions; Pseudorandom sequence generators
- H04L9/0643—Hash functions, e.g. MD5, SHA, HMAC or f9 MAC
Abstract
The use of a feedback controller implemented with secret sharing to pace and control the rate of digital component distribution is described herein. In one aspect, a method includes, for each of one or more activities, initializing, by a first computing system in a multi-party computing (MPC) system in cooperation with one or more second computing systems in the MPC system, a feedback controller for the activity in a secret share using a secure MPC process. The first computing system updates a first secret share of an output of the feedback controller based on an error parameter representing a difference between the setpoint and a measured rate of activity. The first computing system determines, based at least on the outputted first secret share, a first secret share of a pacing selector parameter that defines whether the activity satisfies a pacing eligibility condition for the activity.
Description
Technical Field
This specification relates to cryptography and feedback controllers.
Background
A feedback controller is a controller that monitors a process variable and generates an action based on the difference between the actual value of the process variable and a set point to drive the process variable to the same value as the set point. One type of feedback controller is a proportional-integral-derivative (PID) controller.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include, for each of one or more activities: initializing, by a first computing system of a plurality of multi-party computing (MPC) systems in cooperation with one or more second computing systems of the MPC systems, a feedback controller for an activity in a secret share using a secure MPC process, wherein the feedback controller includes a set point based on a target rate of the activity; updating, by the first computing system, a first secret share of an output of the feedback controller based on an error parameter representing a difference between the setpoint and the measured rate of activity; and determining, by the first computing system, a first secret share of the pacing selector parameters that defines whether the activity satisfies a pacing eligibility condition for the activity based at least on the outputted first secret share. The method comprises the following steps: receiving, by a first computing system, a digital component request; performing, by the first computing system in cooperation with one or more second computing systems, a given digital component selection process for the digital component request, wherein the digital component selection process selects a given digital component from a set of candidate digital components, each candidate digital component in the set of candidate digital components satisfying one or more qualifying conditions, the one or more qualifying conditions included in qualifying activities that satisfy a pacing qualifying condition; and sending, by the first computing system to the client device, a first secret share identifying a selection result of the given digital component. Other embodiments of this aspect include corresponding apparatuses, systems, and computer programs, encoded on computer storage devices, configured to perform various aspects of the methods.
These and other embodiments can each optionally include one or more of the following features. In some aspects, the target rate of the activity comprises one of a target presentation rate of the activity, a target user interaction rate for the given activity, or a target resource consumption rate for the given activity.
In some aspects, the feedback controller comprises a proportional-integral-derivative (PID) controller. The digital component request can include a secret share of data identifying one or more first user groups that include a user of the client device as a member. Performing, by the first computing system in cooperation with the one or more second computing systems, a given digital component selection process for the digital component request can include: identifying a plurality of digital components, wherein each digital component corresponds to: (i) a respective selection value, (ii) a respective second user group identifier of a respective second user group to which the digital component is eligible to be distributed, and (iii) a respective activity comprising the digital component; for each selection value, a first secret share of an overall candidate parameter is determined, the overall candidate parameter indicating: (i) whether the second user group identifier corresponding to the selection value matches one of the one or more first user groups, and (ii) whether the pacing selector parameter for the respective activity indicates that the respective activity satisfies a pacing eligibility condition for the respective activity; and generating a first secret share of the selection result based on the candidate parameter and the respective selection value of each of the plurality of digital components, wherein the given digital component is the particular digital component from the set of qualified digital components having the highest selection value.
In some aspects, each qualified numerical component is a numerical component for which the overall candidate parameter has a specified value, wherein the specified value indicates: (i) the second user group identifier corresponding to the numeric component matches one of the one or more first user groups, and (ii) the respective pacing selector parameter for the activity that includes the numeric component indicates that the activity satisfies the pacing eligibility criterion.
Generating the first secret share of the selection result can include: generating an order of the plurality of digital components based on the magnitude of each selection value; determining a first secret share of the accumulated value for each selection value based on the order of the digital components and the overall candidate parameters for each digital component; determining, for each digital component, a first secret share of a winner parameter based on (i) an overall candidate parameter for the selection value and (ii) a result of an equality test that indicates whether an accumulated value of the selection value is a particular specified value; and for each selection value, determining a first secret share of a sum of a winner parameter of the selection value and a product of digital component information elements of the selection value as a first secret share of the selection result. Determining the first secret share of the accumulated value for each selection value can include, for each individual selection value, determining a number of selection values having a candidate parameter indicating that the second user group identifier corresponding to the selection value matches at least one of the one or more first user group identifiers, including the highest selection value and the individual selection value, between the highest selection value and the individual selection value. The particular specified value can be one or logically true.
Some aspects can include: storing a first secret share of the winner parameter with a reference to a selection process identifier for a given digital component selection process; receiving a notification from a client device, the notification including a selection process identifier and a first secret share of data indicating at least one of (i) whether a given digital component is presented at the client device or (ii) whether a user has interacted with the given digital component; and updating a first secret share of a measurement rate for an active feedback controller that includes the given digital component using the selection process identifier and the first secret share of data indicating at least one of (i) whether the digital component is presented at the client device or (ii) whether the user has interacted with the given digital component. Some aspects can include: in cooperation with the one or more second computing systems, the first secret share of the respective pacing selector parameter for the given activity is updated based on the updated first secret share of the measurement rate and the respective second secret shares of the measurement rate maintained by each of the one or more second computing systems. Updating the first secret share of the respective pacing selector parameter for the given activity can include: the method further includes updating, in cooperation with the one or more second computing systems, the first secret share of the output of the feedback controller for the given activity, and updating, in cooperation with the one or more second computing systems, the first secret share of the pacing selector for the given activity based on the updated first secret share of the output of the feedback controller for the given activity and a respective updated second secret share of the output of the feedback controller for the given activity maintained by each of the one or more second computing systems.
The subject matter described in this specification can be implemented in particular embodiments to realize one or more of the following advantages. Using a secure MPC process performed by two or more MPC servers operated by different parties to select a digital component based on a secret share of user information ensures that the user information cannot be accessed in clear text by the MPC server or another party without unauthorized collusion between the MPC servers.
In the digital component selection process, the MPC server can select from among qualified digital components that meet one or more qualification criteria while preventing parties from accessing user information in clear text. Qualification conditions can include limitations and guidance on the manner or frequency of distribution of the digital components, as well as other factors. These conditions can include user group membership, frequency control, muting, budgeting, k-anonymity, and/or pacing constraints.
The user's client device can generate a probabilistic data structure, such as a cuckoo filter, that represents a group of users that includes the user as a member. The client device can split the probabilistic data structure into two or more secret shares. Alternatively, the client device can generate distributed point functions, one for each user group that includes the user as a member. The distributed point function is a secret share that cryptographically represents whether a user is a member of a user group. Using probabilistic data structures and/or distributed point functions in this manner protects user privacy by preventing access to user group membership and reduces the size of information provided to the MPC cluster. This reduction in data size reduces the amount of bandwidth consumed to transmit information, reduces latency in transmitting information, and reduces the amount of processing power and associated battery power required by battery-operated devices (e.g., mobile devices) to transmit information.
The MPC cluster can transmit a secret share that identifies the result of the MPC cluster selecting the digital component selected using the secure MPC process. By sending only a secret share of the result of selecting a digital component, rather than sending information for all or a large set of digital components, bandwidth, latency, processing power, and battery power consumed in transmitting and receiving the result is similarly reduced. This also reduces potential disclosure of confidential information for content platforms submitting selected values of digital components to the MPC cluster by limiting the number of digital components providing information to the client device.
A feedback controller, such as a PID controller, can be implemented using secret sharing to ensure targeted pacing of the digital components, e.g., so that the digital components of an activity are evenly distributed or nearly evenly distributed throughout the time period of the activity. Target pacing can include uniform distribution of digital components over a given period of time, uniform user interaction with digital components, or uniform conversion resulting from viewing digital components. The feedback controller can also accurately control the digital component distribution resources (e.g., budgets) while preventing others from accessing the user information. The feedback controller also provides real-time or near real-time control of pacing and resource consumption while providing targeted privacy protection. Thus, the feedback controller of digital component distribution can remove redundant digital component distributions or distributions that would otherwise be too frequent, which saves network resources and associated transmission and reception resources.
Various features and advantages of the foregoing subject matter are described below with reference to the drawings. Additional features and advantages will be apparent from the subject matter described herein and the claims.
Drawings
Fig. 1 is a block diagram of an environment in which an MPC cluster performs a secure MPC process to select digital components for distribution to client devices.
FIG. 2 is a swim lane diagram of an example process for selecting a digital component for display at a client device.
FIG. 3 is a swim lane diagram of an example process for selecting digital components for distribution to client devices.
FIG. 4 is a swim lane diagram illustrating an example process for determining secret shares of a pacing selector parameter using a feedback controller.
FIG. 5 is a flow diagram illustrating an example process for selecting a digital component for distribution to a client device.
FIG. 6 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
In general, systems and techniques are described herein for pacing and controlling the rate of digital component distribution using a feedback controller implemented with secret sharing. The control techniques described herein can be used with other types of controllers for which information should be kept secret. The MPC cluster of server computers is capable of performing a secure MPC process to select digital components based on user information or signals derived from user information, while the MPC server is not capable of accessing the user information or derived signals in clear without unauthorized collusion. The user information can be sent to the MPC cluster using a probabilistic data structure or a distributed point function to reduce the data size of the information transmitted over the network and to maintain information security during transmission.
A feedback controller (e.g., PID controller) implemented using secret sharing can be used to control when one or more digital components of an activity satisfy qualifying conditions such that the digital components qualify for distribution to a client device, for example, assuming that the digital components satisfy any other conditions set for the digital components. The variables of the controller can be calculated and maintained by the MPC cluster in secret shares. The variable can be based on a number of impressions of the digital component, a number of user interactions with the digital component, or an amount (e.g., budget) of digital component distribution resources for the campaign. For example, the variables can be presentation rate, interaction rate, slew rate, and/or resource consumption rate. The presentation rate can be the rate at which the active digital components are displayed over a given period of time. The interaction rate can be the rate of interaction with the digital component over a given period of time. The slew rate can be the rate at which the slew occurs after the digital component is displayed for a given period of time. The resource consumption rate can be the rate at which the digital component distribution resource for the activity is used over a given period of time. The controller can adjust the probability that the digital component qualifies for selection in response to the digital component request based on a difference between the set point of the variable and the actual rate.
Fig. 1 is a block diagram of an environment 100 in which an MPC cluster performs a secure MPC process to select digital components for distribution to client devices 110. The example environment 100 includes a data communication network 105, such as a Local Area Network (LAN), a Wide Area Network (WAN), the internet, a mobile network, or a combination thereof. The network 105 connects client devices 110, secure MPC cluster 130, publishers 140, websites 142, content platforms, such as provider platform (SSP)170 and demand platform DSP (150). Example environment 100 may include many different client devices 110, secure MPC clusters 130, publishers 140, web sites 142, DSPs 150, and SSPs 170.
The client device 110 is an electronic device capable of communicating over the network 105. Example client devices 110 include personal computers, mobile communication devices such as smart phones, and other devices capable of sending and receiving data over the network 105. The client device can also include a digital assistant device that accepts audio input through a microphone and outputs audio output through a speaker. When the digital assistant detects a "hot word" or "hot phrase" that activates the microphone to accept audio input, the digital assistant can be placed in a listening mode (e.g., ready to accept audio input). The digital assistant device can also include a camera and/or a display to capture images and visually present information. The digital assistant can be implemented in different forms of hardware devices, including a wearable device (e.g., a watch or glasses), a smartphone, a speaker device, a tablet device, or another hardware device. The client device can also include a digital media device, such as a streaming device that plugs into a television or other display to stream video to a television, gaming system, or virtual reality system.
The client device 110 typically includes an application 112, such as a web browser and/or a native application, to facilitate sending and receiving data over the network 105. A native application is an application developed for a particular platform or a particular device (e.g., a mobile device with a particular operating system). The publisher 140 can develop and provide (e.g., make available for download) native applications to the client device 110. For example, in response to a user of the client device 110 entering a resource address of the resource 145 in an address bar of a web browser or selecting a link referencing the resource address, the web browser can request the resource 145 from a web server hosting the publisher's 140 website 142. Similarly, the native application can request application content from a publisher's remote server.
Some resources, application pages, or other application content can include a number component slot for displaying a number component with the resource 145 or application page. As used throughout this document, the phrase "digital component" refers to a discrete unit of digital content or digital information (e.g., a video clip, an audio clip, a multimedia clip, an image, text, or another unit of content). The digital components can be electronically stored in the physical memory device as a single file or in a collection of files, and the digital components can take the form of video files, audio files, multimedia files, image files, or text files, and include advertising information such that the advertisement is one type of digital component. For example, the digital component may be content intended to supplement the content of a web page or other resource displayed by the application 112. More specifically, the digital components may include digital content related to the resource content (e.g., the digital components may relate to the same subject matter as the web page content, or related subject matter). Thus, the provision of digital components can supplement and generally enhance web page or application content.
When application 112 loads a resource (or application content) that includes one or more slots for digital components, application 112 can request the digital components for each slot. In some implementations, the digital component slot can include code (e.g., script) that causes the application 112 to request the digital component from a digital component distribution system that selects the digital component and provides the digital component to the application 112 for display to a user of the client device 110. As described below, the application 112 can request digital components from the MPC cluster 130 and/or one or more SSPs 170.
Some publishers 140 use SSP 170 to manage the process of obtaining digital components for digital component slots of their resources and/or applications. The SSP 170 is a hardware and/or software implemented technology platform that automates the process of obtaining digital components of resources and/or applications. Each publisher 140 can have a corresponding SSP 170 or SSPs 170. Some publishers 140 may use the same SSP 170.
The digital component provider 160 can create (or otherwise publish) digital components that are displayed in digital component slots of publishers' resources and applications. The digital component provider 160 can use the DSP 150 to manage the provision of its digital components for display in the digital component slots. DSP 150 is a hardware and/or software implemented technology platform that automates the process of distributing digital components for display with resources and/or applications. The DSP 150 is capable of interacting with multiple vendor platforms SSP on behalf of a digital component provider 160 to provide digital components for display with resources and/or applications of multiple different publishers 140. In general, the DSP 150 is capable of receiving a request for a digital component (e.g., from an SSP), generating (or selecting) a selection value for one or more digital components created by one or more digital component providers based on the request, and providing data related to the digital component (e.g., the digital component itself) and a selection parameter to the SSP. The selection value can indicate an amount that the digital component provider 160 is willing to provide for display or user interaction with the digital component. The SSP is then able to select a digital component for display at the client device 110 and provide the client device 110 with data that causes the client device 110 to display the digital component.
In some cases, it may be beneficial for a user to receive digital components related to web pages, application pages, or other electronic resources that the user previously accessed and/or interacted with. To distribute such digital components to users, users can be assigned to groups of users, e.g., groups of user interests, groups of similar users, or other group types involving similar user data, when the users access a particular resource or perform a particular action on the resource (e.g., interact with a particular item displayed on a web page or add the item to a virtual shopping cart). The user group can be generated by the digital component provider 160. That is, each digital component provider 160 is able to assign users to their group of users when they access electronic resources of the digital component provider 160. The user group can also be created by the content platform, for example by the DSP 150 and/or the SSP 170.
To protect user privacy, user group membership can be maintained at the user's client device 110, e.g., by one of the applications 112 or the operating system of the client device 110, rather than by the digital component provider, content platform, or other party. In a particular example, a trusted program (e.g., a web browser or operating system can maintain a list of user group identifiers ("user group list") for users using a web browser or another application (e.g., users logged into the browser, application, or client device 110).
When the application 112 displays a resource or application content associated with the digital component provider 160 or a web page on the website 142, the resource can request that the application 112 add one or more user group identifiers to the user group list. In response, the application 112 can add one or more user group identifiers to the user group list and securely store the user group list.
In some embodiments, the MPC cluster 130 can use the user group membership of the user to select digital components or other content that may be of interest to the user or otherwise beneficial to the user/user device. For example, such digital components or other content may include data that improves the user experience, improves the operation of the user device, or benefits the user or user device in some other manner. However, a user group identifier of the user's user group list can be provided and used to prevent computing system MPCs in MPC cluster 130 1 And MPC 2 The digital components are selected in clear text form by accessing the user group identifier of the user, thereby protecting user privacy when using the user group membership data to select the digital components. Plaintext is text that is computationally untagged, specially formatted, or written in code or data (including binary files) in a form that can be viewed or used without the need for keys or other decryption devices or other decryption processes.
Computing system MPC 1 And MPC 2 Can be operated by different entities. In this manner, each entity may not be able to communicate withAccess to user group membership, or other user information, or signals derived from such user information, in clear text. For example, a computing system MPC 1 Or MPC 2 Can be operated by a different trusted party than the user, the publisher 140, the DSP 150, the SSP 170, and the digital component provider 160. For example, an industry group, government group, or browser developer may maintain and operate a computing system MPC 1 And MPC 2 One of them. Other computing systems may be operated by different ones of these groups, such that different trusted parties operate each computing system MPC 1 And MPC 2 . Preferably, the MPC of the different computing systems is operated 1 And MPC 2 There is no incentive to collude to compromise user privacy. In some embodiments, a computing system MPC 1 And MPC 2 Are architecturally separate and are monitored so as not to communicate with each other except to perform the secure MPC processes described herein.
MPC for each computing system 1 And MPC 2 The selection values (and other information) of the digital components can be stored. For example, as part of a previous digital component selection process, the computing system MPC 1 And MPC 2 Select values previously received from SSP 170 and/or DSP 150 can be cached. In this manner, MPC cluster 130 is able to use the selection values to select digital components for distribution to client devices 110 in response to future user-group-based digital component requests received from client devices 110.
In the following example, each digital component has a user group-based condition that defines that the digital component and its selection value are only eligible for use in a digital component selection process in which digital components are selected for users that are members of a particular group. Additionally, or alternatively, each digital component can be associated with other conditions, such as a frequency control condition that prevents the same user from being exposed to the same digital component more than a specified number of times over a period of time, a mute condition that prevents the digital component from being displayed to a user that has selected to mute, a k-anonymous condition, and/or a pacing condition described in more detail below.
In some embodiments, each computing system MPC 1 And MPC 2 A two-level look-up table (LUT) is used to store the selection values of the digital components. The use of a two-stage LUT can provide some performance advantages, but other suitable data structures can also be used. The first level can be keyed by a user group Request Key (UG _ Request _ Key). The UG _ Request _ Key can be a composite message based on a set of context signals, such as a set of context signals (e.g., URL, location, language, etc.) requested by the digital component or a set of context signals for which the digital component is qualified for distribution. That is, the first level LUT can be keyed based on a set of context signals. The Key of the first level can be a hash of the UG _ Request _ Key, for example using a hash function such as SHA 256. The key may be truncated to a specified number of bits, such as 16 bits, 32 bits, or other suitable number of bits. The value of each Key UG _ Request _ Key in the first level LUT can indicate a row of the second level LUT that includes data of the digital component that is eligible for a digital component Request of the context signal that includes the UG _ Request _ Key. An example first-level LUT is shown in table 1 below.
Key with a key body | Value of |
SHA256(UG_Request_Key) | Line … |
… | Line … |
TABLE 1
The second level LUT can be keyed based on a combination of the subscriber group Request Key UG _ Request _ Key and the subscriber group identifier in the first level LUT. Each row in the second level LUT can be used for a particular select value for a particular digital component. For example, the DSP 150 can submit different selection values for the same digital component, where each selection value is for a different set of context signals and/or a different user group identifier. Thus, the selection value of the digital component can vary based on context and other factors.
The DSP 150 or digital component provider 160 can associate (e.g., link or map) the digital component to a group of users to which the DSP 150 or digital component provider wants to display the digital component. For example, DSP 150 may want to display digital components associated with a man's basketball shoe to men who have shown an interest in basketball and/or shoes. In this example, DSP 150 can provide data to MPC cluster 130 indicating that the digital components correspond to a user group identifier that includes a user group that has shown males interested in basketball and/or shoes.
In some embodiments, the Key of a row in the second level LUT can be a hash or code generated based on a combination of the user group Request Key UG _ Request _ Key and the user group identifier of the digital component of the row. For example, the key can be the combined hash-based message authentication code (HMAC), which can be represented as HMAC SHA256 (UG _ Request _ Key, UG _ id). The user group identifier ug id can be based on a combination of the internal user group identifier of the user group and the domain of the owner of the user group (e.g. the DSP, SSP or digital component provider owning the user group). For example, the user group identifier ug _ id can be a digital digest of the owner domain's eTLD +1 and the owner's internal user group identifier of the user group. Tld +1 is the valid top level field (tld) plus a field one level more than the common suffix. Com "where" com "is the top level domain. The ug id can be truncated to 16 bytes or other suitable data size.
Continuing with the previous example of a men's basketball shoe, the second level lookup Key of a row that includes information to be displayed to the digital components of users in the men's basketball shoe set can be a combination of the user group Request Key UG _ Request _ Key and the user group identifier UG _ id of the men's basketball shoe set. Since the digital components can be displayed in different contexts, the second level lookup table can include multiple rows of digital components (i.e., the user group identifier UG _ id for the men's basketball shoe set), each row having a different user group Request Key UG _ Request _ Key and a different value.
The values of each row of the second level LUT can be selected values of the digital components and other data of the digital components, such as metadata identifying the digital components or network locations from which the digital components can be downloaded, and the like.
The value can be a digital component information element dc _ information _ element, which can be a byte array with a selection value and metadata. The byte array can have a specific format, application 112 or trusted program of the client device 110 and computing system MPC 1 And MPC 2 The particular format can be parsed to obtain selection values and metadata. An example second level LUT is shown in table 2 below.
Key with a key body | Value of |
HMAC(UG_Request_Key,UG_ID) | { selection value, metadata } |
… | … |
TABLE 2
The second level LUT maps the selection value to a particular digital component, a particular user group identifier UG _ id, and a particular set of context signals defined by the first level lookup Key UG _ Request _ Key. By doing so, the second level LUT indicates the particular context of the digital component slot for which the selected value of the digital component qualifies. This allows the DSP 150 or the digital component provider 160 to specify different selection values for the same digital component for different contexts defined by the context signal and the user group membership. When a numeric component request is received indicating that the user to which the numeric component is to be displayed is a member of a particular user group identified by a particular user group identifier ug ig and the numeric component is to be displayed in a particular context defined by the context signal of the first level lookup key, any selection value in the second level LUT having a matching user group identifier and a matching first level lookup key is a candidate to be selected for distribution in response to the request. Although a two-level LUT is used in this example, other suitable data structures can be used.
The DSP 150 or the digital component provider 160 can initiate one or more activities for a group of users. For example, the DSP 150 can initiate activities for shoe manufacturers to market particular brands of shoes to particular groups of users. To advertise the campaign, DSP 150 can provide one or more digital components related (e.g., contextually related) to a particular brand of footwear. In this case, each activity can be identified with a unique identifier (referred to as an activity identifier) that distinguishes the activity from other activities of the DSP 150. As part of an activity, digital components can be provided to users that are members of a particular user group. The user groups and activities can have an m: n relationship such that one user group can be associated with multiple activities n and one activity can be delivered for multiple user groups m. The DSP 150 or digital component provider 160 can include one or more activity identifiers of activities for which the selection values and digital components are eligible for selection by the MPC cluster 130 in the selection values and metadata for the corresponding digital components.
The metadata for each stored selection value of a digital component that is part of an activity can include a universal activity identifier unique _ campaign _ id for the activity. The universal active identifier universal _ campaign _ id can represent the source of the digital component. For example, the universal activity identifier universal _ campaign _ id can uniquely represent an entity that provides a selection value for a digital component (e.g., DSP 150 or digital component provider 160) and/or a particular group of digital components (e.g., activity) that triggers the transmission of the digital component to the client device 110. In some implementations, a universal activity identifier univarial _ campaign _ id of a digital component can be calculated using an HMAC parameterized by an activity identifier (e.g., an internal activity identifier of an entity that provides a selection value) and a domain of the entity represented as the HMAC (domain). In some embodiments, HMAC can be implemented using a secure hash algorithm (SHA-256), which is a cryptographic hash function having a digest length of 256 bits to generate a hashed 256-bit (32-byte) output. In such an example, an HMAC (domain) generates a 256-bit unique identifier of the digital component as the universal activity identifier. The domain of the entity can be the eTLD +1 of the domain. Using the generic activity identifier instead of the internal activity identifier prevents a malicious party from disrupting the pacing and digital component distribution resource utilization process of other DSPs. For example, using a digital digest in this manner prevents a malicious party from submitting set points, selected values, etc. for legitimate activities.
Each selection value and corresponding numeric component that is part of one or more activities of one or more user groups can be associated with a user group identifier-universal activity identifier pair for each activity. The pair can be denoted as ug id, univarial _ campaign _ id, which denotes the subscriber group identifier ug id of the subscriber group and the universal activity identifier univarial _ campaign _ id of the activity. The pair can be part of the metadata of the selection values stored in the second level LUT described above.
The MPC cluster 130 can use the feedback controller for the activity to manage the rate at which the digital components of the activity are provided for display at the client device 110. In some embodiments, the MPC cluster 130 uses PID controllers to manage the rate at which digital components are provided. The controller can be implemented using secret sharing to prevent computing system MPC 1 And MPC 2 Or other entity, to obtain user information, such as user group membership information, in clear text. For example, if not protected using secret sharing, the granularity of resources spent, the presentation of deliveries, and/or click/translation data may cause the computing system MPC to 1 And MPC 2 Being able to infer user group membership data。
As described in more detail below, the MPC cluster 130 can receive active tuning parameters, setpoints, and digital component distribution resource (e.g., budget) information from an activity owner (e.g., the DSP 150 or the digital component provider 160). Some or all of this data can be received as secret shares. The MPC cluster 130 can initialize the PID controllers based on this data and update the outputs of the controllers in an iterative manner, e.g., periodically, based on updated variables, e.g., presentation rate, interaction rate, etc. The MPC cluster 130 can use this output to set a boolean pacing selector parameter paging _ selector in secret shares that defines whether the activity satisfies the pacing eligibility condition for the activity. If so, then the digital component included in the activity also satisfies the pacing eligibility condition. If a digital component satisfies all conditions for that digital component, including a pacing qualifying condition, then that digital component is a qualifying digital component that is qualified for inclusion in the digital component selection process.
By adjusting the value of the pacing selector parameter paging _ selector based on updates to the process variables, the MPC cluster 130 can control the rate at which active digital components are distributed, e.g., to ensure that digital components are distributed evenly during the active time period and/or to ensure that digital component distribution resources are not prematurely exhausted in the active time period. As described in more detail below, the pacing selector parameter paging _ selector can be used in combination with another parameter (is _ dc _ a _ candidate) that defines whether a digital component and its corresponding selection value pass or fail based on one or more other conditions, such as: whether the user group associated with the selection value matches a user group of users to which the digital component is to be provided; whether a digital component satisfies a frequency control condition that prevents the same user from being exposed to the same digital component more than a specified number of times within a period of time; whether the digital component satisfies a mute condition that prevents the digital component from being displayed to a user who has selected to mute; and/or whether the digital component satisfies a k-anonymity condition.
In addition to the description throughout this document, a user may be provided with controls (e.g., user interface elements with which the user can interact) to allow the user to select whether and when the systems, programs, or features described herein may enable the collection of user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location), and whether to send content or communications from a server to the user. Further, certain data may be disposed of in one or more ways before it is stored or used, such that personally identifiable information is removed. For example, the identity of the user may be disposed of such that personally identifiable information of the user cannot be determined, or the geographic location of the user may be generalized (e.g., city, zip code, or state level) if location information is obtained such that a specific location of the user cannot be determined. Thus, the user may control what information is collected about the user, how the information is used, and what information is provided to the user.
FIG. 2 is a swim lane diagram of an example process 200 for selecting a digital component for display at a client device. The operation of process 200 can be performed, for example, by a client device 110, a computing system MPC in an MPC cluster 130 1 And MPC 2 And DSP 150. The operations of process 200 can also be implemented as instructions stored on one or more computer-readable media, which may be non-transitory, and the instructions of the instructions by one or more data processing apparatus can cause the one or more data processing apparatus to perform the operations of process 200. Although the process 200 and the other processes below are described in terms of two computing system MPC clusters 130, MPC clusters having more than two computing systems can also be used to perform similar processes. Additionally, the operations of process 200 can be implemented by SSP 170.
The data for the digital component can include a context selection signal indicating a context for which the digital component is eligible, such as a location of the client device 110, a spoken language selected for the application 112, a Uniform Resource Locator (URL) of a resource with which the digital component can be displayed, and/or an exclude URL of a resource with which the digital component cannot be displayed. This data of the digital component can also identify the digital component, for example, using the unique identifier, a domain from which the digital component can be obtained, and/or other suitable data of the digital component.
In some embodiments, the MPC cluster 130 caches or otherwise stores selection values, selection criteria, and other metadata for digital components provided to the MPC cluster 130 for digital component requests. In this example, the context signal for the digital component and the selection value can include the context signal included in the digital component request. As described above, the selection values and metadata can be stored in a two-level LUT.
The client device 110 identifies a set of user group identifiers (206). The set of user group identifiers can be user group identifiers of user groups that include the user as a member. For example, the set of subscriber group identifiers can be subscriber group identifiers in a subscriber group list. The application 112 presenting the content or the trusted program can identify the set of user group identifiers, for example, by accessing the user group list from a secure store of the client device 110.
The client device 110 generates a probabilistic data structure (208). The application 112 or trusted program can use the set of user group identifiers to generate the probabilistic data structure. In some embodiments, the probabilistic data structure is a cuckoo filter. For example, the client device 110 can use two hash functions F 1 And F 2 A cuckoo filter with a table is generated. Cuckoo hashing is a hashing method that uses two (or more) tables with a total of (1+ \ epsilon) N entries to store N items, such as user group identifiers, so that each entry will contain at most one item. In addition, each item, for example a subscriber group identifier, will appear from two hash functions F 1 And F 2 One of the two entries defined, the output is the set [ (1+ \ epsilon) N]. The entry associated with key k will appear in the first table at location F 1 (k) Or position F in the second table 2 (k) To (3). For a fairly large number N of entries (e.g., N ≧ 100), it is sufficient to use ε ═ 0.1, which means that the N entries can be hashed using the cuckoo hashing method, with the combined table size being 1.1N. In these expressions, ε may be referred to as a load factor.
To construct a sparse private information retrieval data structure using cuckoo filters, up to N user group identifiers can be hashed into two (or more) tables using cuckoo hashing, which can have a combined size of 1.1N or another suitable size. All empty entries can be replaced with a 0-bit string. To query the subscriber group identifier with key k, the subscriber group identifier (if it exists)In a data structure) will appear in the first table entry F 1 (k) Or F in the second table 2 (k) To (3). Using table size C1.1N gives F1. ltoreq. 1 (ug_id),F 2 (ug_id)≤C。
The client device 110 can use a hash function F 1 And F 2 Both compute two possible positions of the user group identifier for each user group identifier in the set of user group identifiers to generate the cuckoo filter. If at least one of the two possible positions is empty, the client device 110 can insert an element into the empty position, which can be in either table, to complete the insertion process for the subscriber group identifier. If both locations are occupied, the client device 110 randomly picks one location and exchanges the item currently in that location with the item to be inserted. The client device 110 can then recalculate the two hash functions F 1 And F 2 And the insertion is attempted again. This process is repeated until the insertion is successful or too many attempts fail for each subscriber group identifier in the set of subscriber group identifiers. After the cuckoo filter is built, each user group identifier ug _ id is stored in a specific index of the table.
In this example, the client device 110 generates a distributed point function to transmit a list of user group identifiers to the MPC cluster 130. This can ensure data security, user privacy, and reduce the size of the data transmitted. In other examples, cuckoo filters or secret shares of cuckoo filters can be provided to the MPC cluster 130 as described below.
The client device 110 generates a distributed point function (210). The application 112 or trusted program can use the point function to generate a distributed point function, one for each user group that includes the user as a member. The distributed point function represents a secret share of the point function. In general, the point function is a function f i :[N]→[N]Wherein when x! When i and f (i) is 1, f (x) is 0. Point function f i Is two functions g i :[N]→[N]And h i :[N]→[N]Such that for the set [ N]All of x, f in (1) i (x)＝g i (x)+h i (x) In that respect Furthermore, function h is given i Or g i (but not both) detailed description that it is not possible to recover the original function f i 。
For each ug _ id, a point function G is required ug_id Which can be split into distributed point functions g ug_id，1 And g ug_id，2 So as to be directed to
If i ═ F 1 (ug _ id), then G ug_id (i)＝g ug_id，1 (i)+g ug_id，2 (i)＝ug_id，(1)
Otherwise G ug_id (i)＝g ug_id，1 (i)+g ug_id，2 (i)＝0， (2)
Similarly, a point function H is required ug_id Which can be divided into distributed point functions h ug_id，1 And h ug_id，2 So as to
If i ═ F 2 (ug _ id), then H ug_id (i)＝h ug_id，1 (i)+h ug_id，2 (i)＝ug-id(3)
Otherwise H ug_id (i)＝h ug_id，1 (i)+h ug_id，2 (i)＝0 (4)
That is, the distributed point function of a particular point function can be evaluated over a plurality of possible points (e.g., a plurality of possible user group identifiers), but the result is always zero except for the user group identifier ug _ id of the user group for which the user is a member and for which the distributed point function is generated. The distributed point function has a very small data size that can be transmitted over the network without using too much bandwidth and with lower latency than sending subscriber group identifiers in other encrypted forms.
For a given user group identifier ug _ id, a point function F 1 Bird with cuckooCorresponding first table of filters, client device 110 generates a first table for use in a computing system MPC 1 Distributed point function g of ug_id ， 1 And for computing systems MPC 2 Distributed function g of ug_id，2 . Similarly, for a given user group identifier ug _ id, the point function F 2 And a corresponding second table of cuckoo filters, the client device 110 generates MPCs for the computing system 1 Distributed point function h of ug_id，1 And for computing systems MPC 2 Distributed point function h of ug_id，2 。
The client device 110 transmits a digital component request including the distributed point function to the MPC cluster 130 (212). Client device 110 is capable of providing a computing system MPC with 1 The transmission includes each distributed point function g ug_id，1 And each distributed point function h ug_id，1 The digital component request. The numeric component Request can include a first level lookup Key, such as SHA256(UG _ Request _ Key). Client device 110 can generate a first level lookup key based on the context signal requested by the digital component. For example, the client device 110 can generate the first level lookup key by generating a composite message that includes a context signal, such as a URL of a resource with which the selected digital component is to be displayed, a location of the client device 110 that submitted the digital component request, a spoken language of the application 112 that is to display the selected digital component, and so forth. Client device 110 can then apply a hash function, such as a SHA256 function, to the composite message to generate a first level lookup key.
Similarly, the client device 110 can send a computing system MPC 2 The transmission includes each distributed point function g ug_id，2 And each distributed point function h ug_id，2 The digital component request. The numeric component Request can also include a first level lookup Key, such as SHA256(UG _ Request _ Key). Since the context signals are the same, MPC is sent to both computing systems in MPC cluster 130 1 And MPC 2 The first level lookup key can be the same.
Computing system MPC 1 Vector M capable of creating additive secret shares 1 ]＝[m 1，1 ，...m C，1 ]Wherein for 1. ltoreq. i.ltoreq.C, m i，1 ＝∑ ug_id g ug_id，1 (i) In that respect Brackets are used herein to denote secret shares of a secret. Similarly, computing system MPC 2 Vector M capable of creating additive secret shares 2 ]＝[m 1，2 ，...m C，2 ]Wherein for 1. ltoreq. i.ltoreq.C, m i，2 ＝∑ ug_ id g ug_id，2 (i) In that respect In this example, secret shares [ m ] i，1 ]And [ m ] i，2 ]Is G ug_id (i) Additive secret shares of, and [ M 1 ]And [ M 2 ]Is a vector of two additive secret shares of M, i.e. dimension C, where M i ＝G ug_id (i) In that respect The secret shares may be generated using Shamir's secret sharing or another suitable secret sharing technique. Computing system MPC 1 And MPC 2 Can be a point function h ug_id，1 (i) And h ug_id，1 (i) Similar vectors are generated.
The MPC cluster 130 performs a secure MPC process using a distributed point function to select a digital component based on a user group that includes a user of the client device 110 as a member (214). This can include identifying a set of digital components and their corresponding selection values that are eligible for use in the digital component selection process based on context, e.g., using a first level lookup key. This can also include identifying qualified digital components from the collection of digital components as candidates for selection based on one or more conditions of each digital component, such as based on (i) the digital component having a subscriber group identifier that matches one of the subscriber group identifiers of the users, and (ii) the pacing selector parameter pacing _ selector having a specified value, such as a value of one. This can also include selecting a digital component from the candidate digital components based on the selection value of the digital component. All of this can be done in a computing system MPC 1 Or MPC 2 Without accessing the user group identifier in clear text. An example process for selecting digital components using the secure MPC process is shown in fig. 3 and described below.
The MPC cluster 130 transmits the selection process identification to the client device 110The symbol and the secret share of the selection result (216). The selection process identifier can uniquely identify the digital component selection process for which the selection result was generated. For example, a computing system MPC 1 And MPC 2 Capable of generating a respective selection process identifier SPID, respectively for each digital component request, computing system MPC 1 And MPC 2 A selection process is performed for each digital component request to generate a selection result that is provided to the client device 110. As described in more detail below, the selection process identifier SPID can be a random number.
The MPC cluster 130 can also store data of selection values that are part of a selection process keyed or otherwise linked to the SPIDs. For example, a computing system MPC 1 Capable of storing data including selected values and based on data obtained by a computing system MPC 1 SPIDs generated for selection procedures 1 A table or other data structure of keys. Similarly, computing system MPC 2 Capable of storing data including selected values and based on data obtained by a computing system MPC 2 SPIDs generated for selection procedures 2 A table or other data structure of keys. This enables the MPC cluster 130 to update the active process variables based on data received from the client devices 110, as described in more detail below.
The selection result can be in the form of a byte array that includes information about the selected digital component. For example, the selection result can be a byte array that includes values of the digital components in the second LUT (e.g., the selection values of the digital components and metadata of the digital components). Computing system MPC 1 And MPC 2 The secret share of the selection result can be determined using a secure MPC process, as described in more detail below. Computing system MPC 1 Capable of transmitting a first secret share of the selection result to the client device 110, and computing the system MPC 2 A second secret share of the selection result can be sent to the client device 110. To prevent computing system MPC 1 And MPC 2 Knowing the selected digital components, can prevent computing system MPC 1 And MPC 2 Share their secret share of the selection result with each other.
When using two tables of cuckoo filters, the MPC cluster 130 can provide a secret share of the two selection results, one for each table. However, retrieving two user group list selection values for two digital components facilitates selecting value obsolete. To reduce this risk, the MPC cluster 130 can use another secure MPC technique to return at most one selection result with the highest selection value, as described below.
In some embodiments, client device 110 may be able to request digital components from MPC cluster 130 based on user group membership. The client device 110 can also request digital components based on the context signal from the SSP 170. These context signals can include the same context signals described above, as well as optional additional context signals, such as the number of digital component slots of a resource, the type of digital component slot, the type and/or format of digital components that can be displayed with the resource, and the like. SSP 170 can select one or more digital components based on the context signal and the selection values of the digital components and provide one or more of the selected digital components (or data identifying the digital components) and the selection values of the digital components to client device 110. The client device 110 can then select a digital component from the set of digital components that includes the selection result received from the MPC cluster 130 and the digital component selected by the SSP 170 for display with the resource.
If the resource includes multiple digital component slots, client device 110 can request the respective digital component of each slot from MPC cluster 130 and from SSP 170. To reduce the consumed bandwidth and latency, the client device 110 can transmit the user's distributed point function for all digital component slots at once.
The client device 110 can transmit one or more event notifications to the MPC cluster 130 (222). For example, assuming that the digital components of the selection results received from the MPC cluster 130 are displayed by the application 112 of the client device 110, the application 112 can transmit a presentation notification of the digital components in response to displaying the digital components. In another example, the application 112 can transmit a user interaction notification in response to detecting a user interaction, such as a selection/click of a digital component.
For user interaction notifications, the application 112 can generate a secret share of a click parameter clicked, which is a Boolean parameter that can have a value of one if the user has interacted with the digital component and a value of zero if the user has not interacted with the digital component for a specified duration after the digital component is displayed. Thus, in this example, either value indicates that the digital component is displayed, but a value of one can indicate that the user interacted with the digital component. Application 112 can send a computer system MPC 1 Sending includes slave computing system MPC 1 Received SPID 1 And a first secret share of the click parameter [ clicked 1 ]The first notification of (1). Similarly, application 112 can send a computer system MPC 2 Sending includes slave computing system MPC 2 Received SPID 2 And a second secret share of the click parameter [ clicked 2 ]The first notification of (1). In another example, the notification can indicate a number separatelyWhether a component is displayed at the client device 110, e.g., using a secret share similar to the click parameter clicked.
The MPC cluster 130 updates the active process variable to which the digital component selected by the MPC cluster 130 belongs (224). For example, a computing system MPC 1 Can use the SPID 1 To obtain stored data for a selected process, and computing the system MPC 2 Can use the SPID 2 To obtain stored data for the selection process. The MPC cluster 130 can then execute a secure MPC process to update the active process variables (e.g., presentation rate, interaction rate, slew rate, and/or resource consumption rate) of the digital components displayed by the applications 112, as described in more detail below.
Although the steps for generating the cuckoo filter and the distributed point function are shown in fig. 2 as being performed after receiving the content, the client device 110 can generate the cuckoo filter and the distributed point function prior to receiving the content. For example, the client device 110 can generate and cache the cuckoo filter and the distributed point function periodically or in response to the user group membership of the user being updated.
FIG. 3 is a swim lane diagram of an example process 300 for selecting digital components for distribution to client devices. The operation of the process 300 can be performed, for example, by a computing system MPC in an MPC cluster 130 1 And MPC 2 To be implemented. The operations of process 300 can also be implemented as instructions stored on one or more computer-readable media, which may be non-transitory, and execution of the instructions by one or more data processing apparatus can cause the one or more data processing apparatus to perform the operations of process 300.
Computing system MPC 1 Qualified digital components and their corresponding selection values are identified (302). Computing system MPC 1 Qualified digital components can be identified for digital component requests received from client device 110, e.g., as described above with reference to fig. 2. For each user interface group that includes a user of the client device as a member, the digital component request can include the use of a hash function by the client device 110Number F 1 Distributed point function g generated for user interface group identifier ug _ id ug_id,1 . If a two-table cuckoo filter is used, the digital component request can also include the use of a hash function F by the client device 110 2 Distributed point function h generated for user interface group identifier ug _ id ug_id,1 . The digital component Request can also include a first level lookup Key, such as a SHA256(UG _ Request _ Key), generated based on the context signal of the digital component Request.
Computing system MPC 1 A qualified numeric component can be identified using the first level lookup key of the numeric component request. Computing system MPC 1 A first-level LUT can be accessed and a first-level lookup key used to identify a row of a second-level LUT that includes information of a digital component that qualifies to be displayed for a set of context signals represented by the first-level lookup key (e.g., a selection value for the digital component has been received). For example, as described above, each row of the second level LUT includes information for the digital components and a second level lookup key based on a set of context signals. Thus, computing system MPC 1 Rows of the second-level LUT having a set of context signals matching the set of context signals defined by the first-level lookup key received in the digital component request can be identified using the first-level lookup key. These rows include information of the digital components that are eligible to be displayed or have eligible selection values for the context defined by the first level lookup key received in the digital component request.
Computing system MPC 2 Qualified digital components and their corresponding selection values are identified (304). Computing system MPC 2 Qualified digital components can be identified for digital component requests received from client device 110. The digital component request can include, for each user interface group that includes as members a user of the client device, use of a hash function F by the client device 110 1 Distributed point function g generated for user interface group identifier ug _ id ug_id,2 . If a two-table cuckoo filter is used, the digital component request can also include the use of a hash function F by the client device 110 2 For the user interface group identifier ug _ id generationResultant distributed point function h ug_id,2 . The digital component Request can also include a first level lookup Key, such as SHA256(UG _ Request _ Key), generated based on the context signal of the digital component Request.
By a computing system MPC 2 The first level lookup key of a received digital component request can be associated with a first level lookup key requested by a computing system MPC 1 The received first level lookup key is the same. Each distributed point function g ug_id,2 Can be based on and calculated by a system MPC 1 Received distributed point function G with same corresponding distributed point function ud_id To generate the signal. That is, the client device 110 can use the hash function F for the user group identifier ud _ id of the user group comprising the user as a member 1 Generating a distributed function g of a digital component request ug_id,1 And g ug_id,2 . Similarly, the client device 110 can use a hash function F for the user group identifier ud _ id of the user group comprising the user as a member 2 Distributed function h for generating digital component requests ug_id,1 And h ug_id,2 。
For simplicity, the remaining steps of process 300 are based on responses according to a hash function F 1 Requesting a digital component selected for distribution to the client device 110. However, it is possible to match the hash function F 2 The distributed point function of (2) performs the same steps. This can result in two selected digital components, and the MPC cluster 130 can perform additional operations to select one of the two digital components, as described below.
Computing system MPC 2 The qualified selection value can be identified using the first level lookup key requested by the numeric component. Computing system MPC 2 A first-level LUT can be accessed and a first-level lookup key used to identify a row of a second-level LUT that includes information of a digital component that qualifies to be displayed for a set of context signals represented by the first-level lookup key (e.g., a selection value for the digital component has been received). As described above, each computing system MPC 1 And MPC 2 A corresponding two-level LUT can be maintained that includes the same information.
Computing System MPC for each qualified digital component 1 And MPC 2 A determination is made in response to the digital component request whether the digital component and its selection value are candidates for selection for distribution to the client device 110 (306). A candidate digital component is a qualified digital component that satisfies one or more conditions of the digital component. In this example, the candidate numeric components are qualified numeric components that (i) have a user group identifier that matches the user group identifier of the user, e.g., the user group identifier of the user group that includes the user as a member, and (ii) have a pacing selector parameter pacing _ selector with a specified value (e.g., a value of one). As described above, each selection value and corresponding numeric component included in an activity can be linked to the active user group identifier-universal activity identifier pair { ug _ id, univeral _ campaign _ id }. In other examples, the user group membership condition can be replaced with another condition, such as a k-anonymity condition, a mute condition, or the like.
For user group membership eligibility, if its user group identifier ug _ id and/or metadata associated with the numeric component of a row in the second level LUT, as part of the second level lookup key, matches one of the user group identifiers of the user, and the pacing selector parameter pacing _ selector has a specified value, such as the value one, then the numeric component of the row is a candidate for selection. Conceptually, to determine whether a digital component is a candidate based on the user group membership of a user using two table cuckoo filters to represent user group membership, the computing system can determine whether the user group identifier ug _ id of the second level lookup key matches one of the two tags in one of the two cuckoo filter locations.
Computing system MPC 1 And MPC 2 Enabling computing system MPC using secure MPC techniques with secret shares to identify candidate digital components 1 And MPC 2 It is not known which digital components are candidate digital components or the user group that includes the user as a member. To this end, the computing system MPC 1 Computing a first secret share of the user group-based candidate parameter is _ dc _ a _ ug _ candidate for each qualified digital component. Similarly, computing system MPC 2 A second secret share of the user group based candidate parameter is _ dc _ a _ ug _ candidate for each qualified digital component is calculated. The candidate parameter is _ dc _ a _ ug _ candidate can be a boolean value (e.g., zero or one) that indicates whether the digital component qualifies as a candidate based on the user group of the digital component matching the user group identifier of the user group that includes the user as a member.
The first secret contribution of the user group based candidate parameter is _ dc _ a _ ug _ candidate for the digital component and its selection value can be denoted as [ is _ dc _ a _ ug _ candidate sv，1 ]And the second secret share of the user group based candidate parameter is _ dc _ a _ candidate of the selection value can be represented as [ is _ dc _ a _ candidate [ ] sv，2 ]. The subscript "sv" indicates that the secret share corresponds to a given selection value, which corresponds to a given digital component. The first secret share of the user group based candidate parameters of the digital component linked to the user group identifier ug _ id is boolean
Computing system MPC 1 And MPC 2 The hash function F can be computed using secure MPC techniques 1 Secret share [ is _ dc _ a _ ug _ secret _ of sv，1 ]And [ is _ dc _ a _ ug _ candidate _ address sv，2 ]Wherein the MPC is calculated in a computing system 1 And MPC 2 Make one or more round trips therebetween to evaluateug_id＝＝[g ug_ia，1 (F 1 (ug_id))]And ug _ id ═ g ug_id，1 (F 1 (ug_id))]Is used as the equality expression. That is, computing system MPC 1 And MPC 2 Distributed point function g that can be based on per-user group identifiers received from client device 110 as part of a digital component request ug_id，1 And g ug_id，2 To determine a secret share [ is _ dc _ a _ ug _ secret ] per user group corresponding to the stored selection value of the digital component sv，1 ]And [ is _ dc _ a _ candidate sv，2 ]。
Computing system MPC 1 And MPC 2 A secret sharing technique or secret sharing library that supports the operations shown in table 3 below can be used. One example secret sharing technique that supports these operations is security through private information aggregation (SEPIA).
TABLE 3
Computing system MPC 1 And MPC 2 User group-based candidate parameter is _ dc _ a _ ug _ candidate based on activities including digital components can also be sv And pacing selector parameter paging _ selector sv The overall candidate parameter is _ dc _ overall _ candidate is calculated for each qualified digital component sv Is given. Overall candidate parameter is _ dc _ overall _ candidate for digital component sv Based on the user group identifier of the digital component matching the user group to which the selected digital component is to be provided and its corresponding user group, and based on the pacing parameter pacing _ selector comprising the activity of the digital component sv To define whether the digital component and its selected value ultimately qualify for selection.
Conceptually, the overall candidate parameter is _ dc _ overall _ candidate for the value is selected sv Can be calculated using the following relation 5.
is_dc_overall_candidate sv ＝is_dc_a_ug_candidate sv ×pacing_selector sv (5)
In secret shares, computing the system MPC 1 And MPC 2 The global candidate parameter is _ dc _ overall _ candidate can be calculated using a round trip Remote Procedure Call (RPC) sv ]Secret share of [ is _ dc _ overall _ secret [ ] sv，1 ]And [ is _ dc _ overall _ candidate ] sv，2 ]. Can be MPCd by the computing system at the end of the computation 1 The first secret share held [ is _ dc _ overall _ secret ] sv，1 ]Can be calculated using the following relation 6. Similarly, the MPC can be executed by the computing system at the end of the computation 1 Second secret share held [ is _ dc _ overall _ secret ] sv，2 ]Can be calculated using the following relation 7. The two relations can be used as part of the same MPC process using RPC by taking the four values on the right side of the relation and generating two secret shares [ is _ dc _ overall _ secrets, 1 ]]And [ is _ dc _ overall _ canditesv, 2]To calculate.
[is_dc_overall_candidate sv，1 ]＝[is_dc_a_ug_candidate sv，1 ]×[pacing_selector sv，1 ] (6)
[is_dc_overall_candidate sv，2 ]＝[is_dc_a_ug_candidate sv，2 ]×[pacing_selector sv，2 ] (7)
These calculations can convert boolean true and false values to values of zero and one, respectively. These computations also convert boolean AND operations into multiplication operations because secret sharing techniques are able to support integer operations, but may not support boolean operations.
Computing system MPC 1 An order of the selected values of the digital components is determined (308). Similarly, computing system MPC 2 An order of selected values of the digital components is determined (310). The two sequences should be identical because the inputs to the ranking process are at both computing systems MPC 1 And MPC 2 The above is the same. Each computing system MPC 1 And MPC 2 The order of the selection values can be determined in its second level LUT. The order can include all select values in the second level LUT, including candidate select values and select values that are not candidates. The order can be from highestThe value is selected to the lowest selected value. In some embodiments, the selection value for the order can be a value that will be provided to the publisher of the resource to be displayed with the selected digital component, e.g., after any sharing with the DSP 150 and/or SSP 170. Since the selection value is in plaintext form, the computing system MPC is calculated 1 And MPC 2 No round trip calculations need to be performed to order the selection values. Instead, each computing system MPC 1 And MPC 2 The select values of their second level LUTs can be independently ordered. If the selection value is stored as a secret share in each computing system MPC 1 And MPC 2 Where each computing system MPC 1 And MPC 2 Having a respective secret share for each selected value, the system MPC is calculated 1 And MPC 2 The secure MPC process can be performed using round-trip computation to order the selection values. Computing System MPC if there is a connection between two or more selection values 1 And MPC 2 Other metadata of the digital component corresponding to these selection values can be used to deterministically break the contact.
Computing system MPC 1 And MPC 2 A secret share of the accumulated value for each candidate digital component is determined (312). Conceptually, the accumulated value for a given digital component represents the total number of qualified candidate digital components from the top of the order to the selection value for the given digital component, including the selection value for the given digital component if the given digital component is a candidate. This concept is shown in table 4 below.
Sorted selection values | is_dc_overall_candidate | Accumulated value (acc) | Is the accumulated value equal to 1? |
Highest point of the design | 0 | 0 | 0 |
Second highest | 1 | 1 | 1 |
Third highest | 0 | 1 | 1 |
Height four | 1 | 2 | 0 |
… | … | … | … |
TABLE 4
In some embodiments, the accumulated value for a given digital component represents the total number of candidate digital components from the top of the order to the given digital component but not including the given digital component. In this example, the fourth column would indicate whether the accumulated value is equal to zero instead of one. In either case, the accumulated value for each numeric component indicates the position of that numeric component in the ranked order of candidate numeric components, which are candidates for selection based on the numeric component associated with the user group identifier that matches the user's user group identifier.
Conceptually, in this table 4, the accumulated value (acc) is incremented for each digital component for which the overall candidate parameter is _ dc _ overall _ candidate is equal to one, as one progresses from the top of the sequence to the bottom of the sequence. The calculation of the accumulated value acc is performed in secret shares, as described below. For example, the accumulated value acc of the digital component having the highest selection value is zero, because the overall candidate parameter is _ dc _ overall _ candidate of the highest selection value is equal to zero. The accumulated value acc of the second digital component is one because the overall candidate parameter is _ dc _ overall _ candidate of the second digital component is equal to one and none of the overall candidate parameters is _ dc _ overall _ candidate higher than the selected value of the second high selected value is equal to one. Moving down the sequence, the overall candidate parameter is _ dc _ overall _ candidate for the third highest selection value is zero, so the accumulated value acc of the third digital component is not incremented from the accumulated value acc of the second digital component. Since the overall candidate parameter is _ dc _ overall _ candidate for the fourth high selection value is one, the accumulated value acc of the fourth digital component is incremented by one from the accumulated value acc of the third high selection value. Thus, the accumulated value acc of the fourth digital component is equal to two, since there are two digital components having an overall candidate parameter is _ dc _ overall _ candidate from the highest selection value to the fourth highest selection value (including the highest selection value and the fourth highest selection value).
Using the table, the system MPC is calculated 1 And MPC 2 A digital component corresponding to the selection value for which the value of the overall candidate parameter is _ dc _ overall _ candidate is one and the value of the accumulated value acc is one will be selected for distribution to the client device 110, as shown in the fourth column of table 4. This represents the digital component corresponding to the highest ranked selection value for which the value of the overall candidate parameter is _ dc _ overall _ candidate is one. Since the overall candidate parameter is _ dc _ overall _ candidate is at the computing system MPC 1 And MPC 2 To maintain user privacy and ensure that user data is not compromised, computing system MPC 1 And MPC 2 Determining secret shares of the accumulated value acc for each digital component and using round trip computation to determine which digital component has an accumulated value acc equal to one and an accumulated value acc equal to oneThe overall candidate parameter is _ dc _ overall _ candidate.
In some embodiments that rely on secret sharing algorithms, a computing system MPC 1 And MPC 2 Their secret share of the accumulated value acc of each digital component can be determined independently without any round trip calculation. For example, for each digital component, a computing system MPC 1 The first share [ acc ] of the accumulated value acc can be determined by traversing all the selection values in order from highest to lowest and summing the overall candidate parameter is _ dc _ overall _ candidate of the selection values along the way ug_id,1 ]As described above with reference to table 4. Similarly, for each digital component, the system MPC is computed 2 The second contribution [ acc ] of the accumulated value acc can be determined by traversing all the selection values in order from highest to lowest and summing the overall candidate parameter is _ dc _ overall _ candidate of the selection values along the way ug_id,2 ]。
Computing system MPC 1 And MPC 2 A secret share of the result is determined for each digital component that indicates whether the accumulated value has a specified value (314). The specified value can be the value one as shown in columns 3 and 4 of table 4. As described above, the digital component whose accumulated value is one and whose overall candidate parameter is _ dc _ overall _ candidate is one is the highest selected value among the selected values of the candidate digital components.
Computing system MPC 1 And MPC 2 Multiple rounds of computation can be engaged, e.g., multiple RPCs, as part of a secure MPC process to compute an equality operation acc from the secret share of each digital component sv 1. At the end of this process, the system MPC is calculated for each digital component 1 With the result acc sv To 1, and for each digital component, the computing system MPC 2 With the result acc sv Another secret share of 1.
Computing system MPC 1 And MPC 2 Determining a winner parameter is _ dc _ the _ winner for each digital component sv The secret share of (316). Computing system MPC 1 And MPC 2 Can be based on the accumulated value acc of each digital component sv Secret share of 1 and overall candidate parameter is _ dc _ overall _ candidate for each digital component sv To determine a winner parameter is _ dc _ the _ winner sv . Winner parameter is _ dc _ the _ winner of each digital component sv Can be a boolean value that indicates whether the digital component is a winner of the selection process, e.g., whether the digital component was selected for distribution to the client device 110 in response to the digital component request.
In some embodiments, a computing system MPC 1 And MPC 2 A secret share multiplication protocol can be executed to compute a winner parameter is _ dc _ the _ winner in secret shares for each selected value sv ＝＝(is_dc_a_candidate sv ×(acc sv 1)). This requires a computing system MPC 1 And MPC 2 One RPC in between to multiply the two secret shares. At the end of the MPC process, the system MPC is calculated 1 With result is _ dc _ the _ winner sv Is denoted as [ is _ dc _ the _ winner [ ] sv,1 ]＝[is_dc_overall_candidate sv,1 ]x([acc sv,1 ]1). Similarly, computing system MPC 2 With result is _ dc _ the _ winner sv Is denoted as [ is _ dc _ the _ winner [ ] sv,2 ]＝[is_dc_overall_candidate sv,2 ]x([acc sv,2 ]1). Note that for all digital components, at most one digital component has a winner parameter is _ dc _ the _ winner equal to one sv Which is a digital component selected for distribution to client device 110. All others equal zero.
Computing system MPC 1 Generating a selection Process identifier SPID 1 (318). Selection procedure identifier SPID 1 A current selection process for selecting a digital component in response to a received digital component request is uniquely identified. Selection procedure identifier SPID 1 Can be a random number.
Computing system MPC 2 Generating a selection Process identifier SPID 2 (320). Selection procedure identifier SPID 2 Uniquely identifying for responding toThe received digital component requests a current selection process for selecting a digital component. Selecting a process identifier SPID 2 Can be a random number.
Computing system MPC 1 Storing the SPID by the selection Process identifier 1 A first secret share of the keyed winning parameter (322). For example, a computing system MPC 1 Can utilize the selection process identifier SPID 1 Stores the first secret share of the winning parameter in a table or other data structure. Computing system MPC 1 A reference to the digital component and corresponding selection value to which the first secret share of the winning parameter corresponds can also be stored for each first secret share of the winning parameter.
Computing system MPC 2 Storing the SPID by the selection Process identifier 2 A second secret share of the keyed winning parameter (324). For example, a computing system MPC 2 Can utilize the selection process identifier SPID 2 Stores a second secret share of the winning parameter in a table or other data structure. Computing system MPC 2 A reference to the digital component and corresponding selection value to which the second secret share of the winning parameter corresponds can also be stored for each second secret share of the winning parameter. Computing system MPC 1 And MPC 2 Can use the selection procedure identifier SPID 1 And SPID 2 And the secret share of the winning parameter and updates the measured process variable, as described in more detail with reference to fig. 4.
In some embodiments, a computing system MPC 1 And MPC 2 Separately using a pair of MPC 1 And MPC 2 A secret key that is kept secret encrypts the secret share of the winning parameter. Computing system MPC 1 And MPC 2 The encrypted results can then be stored in a response that is returned to the application 112. The application 112 sends the encrypted results back to the MPC cluster 130 in a presentation notification. Such an alternative embodiment should ensure that the encrypted secret share of the winning parameter is small enough to avoid wasting a lot of bandwidth.
Computing system MPC 1 And MPC 2 A selection result is computed (326). Computing system MPC 1 And MPC 2 Can be based on selectionThe winner parameter of the selection value and the digital component information element dc _ information _ element of the selection value or the selection value itself are selected to calculate a selection result. As described above, the digital component information element dc _ information _ element of the digital component can include a selection value of the digital component and other data of the digital component.
Conceptually, a computing system MPC 1 And MPC 2 The selection result can be calculated using the following relation 8 F1 。
That is, computing system MPC 1 And MPC 2 The winner parameter isdc _ the _ winner can be determined across all digital components sv And a digital component information element dc _ information _ element sv The sum of the products of (a). In this example, if for a subscriber group identifier that matches the subscriber's subscriber group identifier or would have a value equal to is _ dc _ the _ winner sv A digital component of the value of the digital component information element dc _ information _ element of the selected digital component equal to one has no cached selection value, the result is selected F1 Will have a value of zero. In another example, the digital component information element dc _ information _ element can be replaced with a selection value of the digital component in relation 8. In this example, if for a subscriber group identifier that matches the subscriber's subscriber group identifier or would have a value equal to is _ dc _ the _ winner sv A digital component having a value equal to the selected value of the selected digital component of one does not have a cached selected value, the result is selected F1 Will have a value of zero.
To perform calculations in secret shares, a computing system MPC is calculated 1 Obtaining the selection values of all caches, and selecting the digital component information element dc _ information _ element of the selection value sv Multiplying a first secret share [ is _ dc _ the _ winner ] of the winner parameter sv，1 ]The selection value can be in the clear. Computing system MPC 1 These products can then be determinedAnd returns the sum to the client device 110 that submitted the digital component request. That is, computing system MPC 1 The following relation 9 can be used to determine and the resulting first share
Computing system MPC 2 Similar calculations can be performed to determine a second fraction of the result using the relationship 10 below
Computing system MPC 1 Sending a first share of the selection result to the client device 110client device 110Application 112 can then use both secret sharesMPC cluster 130 does not identify digital components of the user group that include the user as a member. Otherwise, result is selected F1 Having a value equal to the digital component information element dc _ information _ element, the application 112 is able to parse the digital component information element dc _ information _ element to obtain a selection value and metadata of the digital component. The application 112 can then display the digital component, or perform a selection process using the digital component and other digital components received from the SSP 170, as described above.
In a two-table cuckoo filter implementation, application 112 can receive two selection results, one for each hash function F 1 And F 2 One. In this example, the application 112 can select digital components from a collection of digital components that includes both these digital components and any digital components received from the SSP 170.
In some embodiments, application 112 can perform a final verification that the user group of digital components selected by MPC cluster 130 matches the user group that includes the user as a member. For example, the digital component information element dc _ information _ element of each digital component can include a user group identifier of the digital component. The application 112 is able to compare the user group identifier of the digital component information element dc _ information _ element with the user group list of the user. If there is no match, the application 112 can exclude the digital component from the selection process. If there is a match, the application 112 can include the digital component in the selection process.
As described above, receiving two selection results from the MPC cluster 130 can facilitate selection value discarding. To reduce this risk, the MPC cluster 130 can perform a process that returns only one selection result.
In a cuckoo filter implementation of a table, each user group identifier ug _ id can appear in two places, their index being F 1 (ug _ id) and F 2 (ug _ id). Let M denote the cuckoo filter of a watch, and M i Representing the value of the ith element in the table. If it is notMPC cluster 130 can calculate the candidate parameter is _ dc _ a _ candidate of the digital component using the following relation 11 or 12 sv 。
The relation 11 can include two equality tests that can be performed in parallel. Relational 12 can require one equality test and one multiplication. When using a secure MPC process to perform these operations on secret shares, the multiplication requires fewer computations and one round trip, but in a probabilistic solution, the equality test can require more computations and four round trips. Therefore, relational expression 11 can require less round trips than relational expression 12, but requires more computations.
Computing system MPC 1 The candidate parameter is _ dc _ a _ candidate of the digital component can be calculated on the secret share based on the relation 11 using the following relation 13 sv The first secret share of (a).
[is_dc_a_candidate sv，1 ]＝(ug_id＝＝[g ug_id，1 (F 1 (ug_id))])+(ug_id＝＝[g ug_id，1 (F 2 (ug_id))]) (13)
Similarly, computing system MPC 2 The candidate parameter is _ dc _ a _ candidate for the digital component can be calculated on the secret share based on the relation 12 using the following relation 14 sv The second secret share of (a).
[is_dc_a_candidate sv，2 ]＝(ug_id＝＝[g ug_id，2 (F 1 (ug_id))])+(ug_id＝＝[g ug_id，2 (F 2 (ug_id))]) (14)
Alternatively, the computing system MPC 1 The candidate parameter is _ dc _ a _ candidate for the digital component can be calculated on the secret share based on the relation 12 using the following relation 15 sv The first secret share of (a).
[is_dc_a_candidate sv，1 ]＝(ug_id-[g ug_id，1 (F 1 (ug_id))])×(ug_id-[g ug_id，1 (F 2 (ug_id))])＝＝0 (15)
Computing system MPC 2 The candidate parameter is _ dc _ a _ candidate of the digital component can be calculated on the secret share based on relation 13 using relation 16 below sv The second secret share of (a).
[is_dc_a_candidate sv，2 ]＝(ug_id-[g ug_ia，2 (F 1 (ug_id))])×(ug_id-[g ug_id，2 (F 2 (ug_id))])＝＝0 (16)
The MPC cluster 130 can then calculate a secret share of the selection result using a process similar to the process 300 of fig. 3. In particular, a computing system MPC 1 And MPC 2 Secret shares [ acc ] of an accumulated value acc can be calculated separately for each digital component based on the order of the digital component and the candidate parameters of the digital component sv，1 ]And [ acc ] or sv，2 ]。
Computing system MPC 1 And MPC 2 The secret share [ is _ dc _ the _ winner ] of the winner parameter is _ dc _ the _ winner can be calculated separately for each digital component based on whether the overall candidate parameter for the digital component and the accumulated value for the digital component are equal to one (or zero, depending on the implementation) sv，1 ]And [ is _ dc _ the _ winner [ ] sv，2 ]。
Computing system MPC 1 And MPC 2 The secret share [ result ] of the selection result can be calculated using the following relations 17 and 18 1 ]And [ result 2 ]。
[result 1 ]＝∑ sv ([is_dc_the_winner sv，1 ]×dc_information_element sv ) (17)
[result 2 ]＝∑ sv ([is_dc_the_winner sv，2 ]×dc_information_element sv ) (18)
Computing system MPC 1 The first share [ result ] of the selection result can be selected 1 ]Returns to application 112 and computes the system MPC 2 Can select the second share [ result ] of the result 2 ]Back to the application 112. As described above, the application 112 can then use these two secret shares to reconstruct the selection result.
The above description relates the multiplication between secret shares of secret integers with values 0 or 1 to a computer logical AND. The above description also relates to the computer logic NOT to secret shares of 1 minus secret integers of value 0 or 1. In some embodiments, alternative solutions can be employed to evaluate logical expressions with respect to secret shares. For example, to compute a logical AND of several additive secret shares of a secret integer of 0 or 1, the MPC server can compare the sum of those additive secret shares with the number of secret shares. As another example, to compute an arbitrary logical expression with secret shares as inputs, the MPC server can employ a truth table approach, i.e., computing the system MPC 1 Can construct a model including MPC 2 A truth table for one row for each possible combination of held input secret shares. Computing system MPC 1 Randomly selecting a secret share of the result, denoted as [ result ] 1 ]. For each row, computing system MPC 1 Can input it into secret shares with the MPC 2 The held speculative input secret shares are combined to reconstruct the inputs of the logical expression in plaintext form, and then evaluate the results of the logical expression. For each row, computing system MPC 1 The result is split into two secret shares, one of which is [ result 1 ]And the other is [ result 2 ]. Computing system MPC 1 Then [ result ] will 2 ]To a row in the truth table. In a computing system MPC 1 After completing the construction of the truth table, the system MPC is calculated 2 An inadvertent propagation extension (OTe) can be initiated to retrieve a truth table corresponding to a link between MPCs 2 Held input secretThe row of the share. The result of the extraction is [ result 2 ]. At the end of the above process, the system MPC is calculated 1 And MPC 2 Respectively hold [ result 1 ]And [ result 2 ]They are secret shares of the logic expression result. Computing system MPC 1 Not knowing [ result 2 ]And calculating the value of system MPC 2 Not knowing [ result 1 ]The value of (c). In some embodiments, a computing system MPC 1 And MPC 2 The is _ dc _ a _ candidate can be determined by constructing a garbled circuit to evaluate a logic expression sv,1 And is _ dc _ a _ candidate sv,2 。
FIG. 4 is a swim lane diagram illustrating an example process 400 for determining secret shares of a pacing selector parameter using a feedback controller. The operation of the process 400 can be performed, for example, by a computing system MPC in an MPC cluster 130 1 And MPC 2 To be implemented. The operations of process 400 can also be implemented as instructions stored on one or more computer-readable media, which may be non-transitory, and execution of the instructions by one or more data processing apparatus can cause the one or more data processing apparatus to perform the operations of process 400. In this example, the feedback controller is a PID controller.
In general, a PID controller is a feedback controller that determines an output that drives a measured variable toward a set point using an error value, which is the difference between a target set point and the measured variable. In the context of pacing the distribution of digital components to client devices, the set point for an activity can be a presentation rate, an interaction rate, a slew rate, and/or a resource consumption rate (e.g., a budget spending rate). Similarly, the measured variable can be a presentation rate, an interaction rate, a slew rate, and/or a resource consumption rate of the activity over a given time period. The given time period can be from a start time of the start of the activity until the current time.
The PID controller uses the tuning parameters to determine how to adjust the output based on the process variable measured over time. These tuning parameters include a proportional term, an integral term, and a differential term, denoted by P, I and D, respectively. Proportional parameter, productThe partial parameter and the differential parameter can be respectively displayed as K p 、K i And K d 。
The PID controller can be implemented using a repetitive loop, in which the following parameters are calculated for each time variation dt:
error set point-measured variable (19)
Integral + error x dt (20)
Output ═ K p X error) + (K i Integration of X) + (K d Differential) (22)
Error in the past (23)
To protect user privacy and prevent access to user group membership information, the MPC cluster 130 can implement PID controllers for each activity using secure MPC processes and secret sharing.
Computing system MPC 1 Tuning parameters of a PID controller are received for controlling pacing of an active digital component (402). Similarly, computing system MPC 2 Tuning parameters of a PID controller are received (404). Activity owners, such as digital component providers' DSPs, can send MPCs to computing systems 1 And MPC 2 Providing a tuning parameter K p 、K i And K d . In another example, the MPC cluster 130 can use default tuning parameters, for example, if no customized tuning parameters are provided. If the tuning parameters are sensitive, so that they should not be revealed to the computing system MPC 1 And MPC 2 Or maintaining a computing system MPC 1 And MPC 2 The owner can then send each computing system MPC 1 And MPC 2 A respective secret share of each tuning parameter is sent.
Computing system MPC 1 Active set point data is received (406). Similarly, computing system MPC 2 Active set point data is received (408). Setting upThe point data can include: set point parameter setpoint, which can be a presentation rate, e.g., SP impression ＝r impression (t) rate of interaction, e.g. SP interaction ＝r interaction (t), or rate of resource consumption, e.g. SP resource ＝r resource (t), and time units, e.g., N seconds. For example, the presentation rate set point can be a presentation of a digital component of 10 (or another number) activities per day (or other time period). As described above, each activity can have a common activity identifier, campaign _ uuid.
In some embodiments, the set point data can include, for the campaign, a total amount of digital component distribution resources, a target number of impressions of the campaign's digital components, and/or a target number of user interactions with the digital components for the campaign. The set point data can also include a specified time range for the activity. In this example, the MPC cluster 130 can determine a setpoint rate (e.g., presentation rate).
In some embodiments, to prevent malicious parties from subverting an activity, the owner of the activity can tune the set point data and/or the tuning parameter K p 、K i And K d A digital signature is performed. In this example, a computing system MPC 1 And MPC 2 The digital signature can be verified prior to using the set point data and/or tuning parameters of the PID controller.
For simplicity, the remainder of the process 400 is described in terms of showing rate set points and measured variables. Thus, the setpoint parameter setpoint can be SP resource ＝r resource (t) of (d). Similar processes can be used for the interaction rate and the resource consumption rate by replacing the set point and the measured variable.
Computing system MPC 1 And MPC 2 The PID controllers for the campaign are initialized (410). To initialize a PID controller, a computing system MPC 1 Capable of taking a first secret share of the active previous error parameter previous error campaign,impression,1 ]Initialized to zero [0 ] 1 ]. Computing system MPC 1 It is also possible to use a first secret of the integral parameters of the activityQuota [ integral ] campaign,impression,1 ]Initialized to zero [0 ] 1 ]。
Similarly, computing system MPC 2 Can share the first secret contribution of the active previous error parameter [ previous _ error campaign,impression,2 ]Initialized to zero [0 ] 2 ]. Computing system MPC 2 It is also possible to share the first secret of the active integral parameter [ integral ] campaign,impression,2 ]Initialized to zero [0 ] 2 ]。
Computing system MPC 1 The measured process variable is updated (412). Similarly, computing system MPC 2 The measured process variable is updated (414). Since the process for updating process variables can be different for different process variables, an update process for presentation rate, interaction rate and resource consumption rate is provided. Process variables for presentation, user interaction, and resource consumption can be represented as pv, respectively universal_campaign_id,impression 、pv universal_campaign_id,interaction And pv universal_ampaign_id,resource 。
As described above with reference to fig. 2, after the digital components have been displayed on the client device 110, the client device 110 can provide a notification to the MPC cluster 130. For digital components, computing system MPC 1 A notification can be received that includes a first secret share of a click parameter indicating whether a user interacted with a digital component 1 ]And slave computing system MPC 1 Received selection process identifier SPID of a selection process for selecting a digital component 1 . Similarly, computing system MPC 2 A notification can be received that includes a second secret share of a click parameter indicating whether the user interacted with the digital component 2 ]And slave computing system MPC 2 Received selection procedure identifier SPID for a selection procedure for selecting a digital component 2 . Computing system MPC 1 And MPC 2 The active process variable can be updated each time a notification is received.
Computing system MPC 1 And MPC 2 Can use their corresponding selection process targetsThe identifier to obtain a stored secret share of the winning parameters for a given selection process. If the process identifier of the notification does not match the process identifier of any secret share of the winning parameters, the notification can be considered fraudulent.
If the process variable is a resource consumption rate, the system MPC is calculated 1 Capable of consuming a first secret share of a process variable [ pv ] for each activity's resources campaign_uuid，resource，1 ]Sigma increments sv [is_dc_the_winner sv，1 ]×[pre_shared_sv_amount sv，1 ]Wherein the digital component corresponding to the selection value sv is associated with a universal activity identifier universal _ campaign _ identifier. In this relationship, the parameter [ pre _ shared _ sv _ amount ] precedes any sharing between the issuer, SSP, and DSP sv，1 ]Is the first secret share of the selection value, which is, for example, the amount that the digital component provider will provide for such display of the digital component. Splitting the selection value into secret shares protects the digital component provider and the DSP's commercial secret information.
Similarly, computing system MPC 2 Second secret share of its resource consuming process variable [ pvuniveral ] capable of consuming each activity _campaign_id，resource，2 ]Sigma increments sv [is_dc_the_winner sv，2 ]×[pre_shared_sv_amount sv，2 ]Wherein the digital component corresponding to the selection value sv is associated with the generic activity identifier universal _ campaign _ id. In this relationship, the parameter [ pre _ shared _ sv _ amount ] precedes any sharing between the issuer, SSP, and DSP sv，2 ]Is a second secret share of the selection value, which is, for example, the amount that the digital component provider will provide for such display of the digital component.
Using this process, a system MPC is calculated 1 And MPC 2 The amount of resources that would be spent for the activity of the winning digital component increases the amount that the digital component provider would provide for the display of its digital components. Since the winner parameter for the non-winning selection value will be zero, the amount of resources spent for those activities will not be incremented.
If the process variable is the show rate, the computing system calculatesMPC 1 Each campaign can be exposed to a first secret share of the rate process variable pv universal_campaign_id，impression，1 ]Update Σ sv [is_dc_the_winner sv，1 ]Wherein the digital component corresponding to the selection value sv is associated with the generic activity identifier universal _ campaign _ id. In this way, the system MPC is calculated 1 The number of impressions of the campaign of winning selection values is incremented by one.
Similarly, computing system MPC 2 Each campaign can be exposed to a first secret share of the rate process variable pv universal_campaign_id，impression，2 ]Update sigma sv [is_dc_the_winner sv，2 ]Wherein the digital component corresponding to the selection value sv is associated with the generic activity identifier universal _ campaign _ id.. In this way, the system MPC is calculated 2 The number of impressions of the campaign of winning selection values is incremented by one.
If the process variable is the interaction rate, the system MPC is calculated 1 Can share each activity's first secret share of its interaction rate process variable pv universal_campaign_uuid，interaction，1 ]Update sigma sv [is_dc_the_winner sv，1 ]×[clicked 1 ]Wherein the digital component corresponding to the selection value sv is associated with the generic activity identifier universal _ campaign _ id. In this manner, if the click parameter indicates that the digital component received a user interaction, the computing system MPC 1 The number of active interactions for the winning selection value is incremented by one.
Similarly, computing system MPC 2 Can share each activity's second secret share of its interaction rate process variable pv universal_campaign_id，interaction，2 ]Update Σ sv [is_dc_the_winner sv，2 ]×[clicked 2 ]Wherein the digital component corresponding to the selection value sv is associated with the generic activity identifier universal _ campaign _ id. In this manner, if the click parameter indicates that the digital component received a user interaction, the computing system MPC 1 The number of active interactions for the winning selection value is incremented by 1.
For each update of process variableMultiplication between secret shares is newly required. The multiplication can be performed by a computing system MPC 1 And MPC 2 Performed using a secure MPC process, where MPC is performed at two computing systems 1 And MPC 2 There is one RPC in between.
Computer system MPC 1 And MPC 2 A secret share of the active controller parameter is determined (416). Computer system MPC 1 And MPC 2 The controller parameters can be determined using a secure MPC process. The controller parameters can include an error (error), an integral parameter (integer), a derivative parameter (derivative), a temporary parameter (tmp), an output (output), and a previous error parameter (previous _ error). Computing system MPC 1 The MPC process can be used to calculate a first secret share of these parameters using the following relations 24 to 29.
[error 1 ]＝setpoint-[pv universal_campaign_id，impression，1 ] (24)
[integral universal_campaign_id，impression，1 ]＝[integral universal_campaign_id,impression，1 ]+[error 1 ] (25)
[derivative 1 ]＝error 1 ]-[previous_error universal_campaign_id，1 ] (26)
[tmp 1 ]＝(K p ×[error 1 ])+(K i ×[integral universal_campaign_id，impression，1 ])+(K d ×[derivative 1 ]) (27)
[output universal_campaign_id，impression，1 ]＝[tmp 1 ] (28)
[previous_error universal_campaign_id，1 ]＝[error 1 ] (29)
Similarly, computing system MPC 2 The MPC process can be used to calculate a first secret share of these parameters using the following relations 30 to 35.
[error 2 ]＝setpoint-[pv univerrsal_campaign_id，impression，2 ] (30)
[integral universal_campaign_id，impression，2 ]＝[integral universal_campaign_id，impression，2 ]+[error 2 ] (31)
[derivative 2 ]＝error 2 ]-[previous_error universal_campaign_id，2 ] (32)
[tmp 2 ]＝(K p ×[error 2 ])+(K i ×[integral universal_campaign_id，impression，2 ])+(K d ×[derivative 2 ]) (33)
[output universal_campaign_id，impression，2 ]＝[tmp 2 ]
(34)
[previous_error universal_campaign_id，2 ]＝[error 2 ]
(35)
The output parameter represents a probability based on a difference between the set point and the measured variable. The probability can be used to determine whether the activity satisfies a pacing eligibility condition for the activity. For example, for the next digital component distribution process for which the active digital component is otherwise eligible, the probability can be the probability that the digital component will be included in the selection process. If the pacing qualified condition is satisfied, the digital component in the campaign also satisfies the pacing qualified condition and will be eligible for use in the digital component selection process, e.g., if all other conditions of the digital component are satisfied. For example, if an active digital component is displayed at a higher rate than the set point, the output will have a lower value, indicating that the probability that the digital component will be selected for inclusion in a subsequent selection process is lower, even though the digital component may otherwise be eligible. This lower probability drives the measured presentation rate down towards the set point.
Computing system MPC 1 And MPC 2 The active controller parameters can be repeatedly calculated, for example periodically based on a specified time period. In another example, a computing system MPC 1 And MPC 2 Capable of updating the measured variable each time based on a received notificationThe active controller parameters are updated. By updating the controller parameters in an active manner rather than in response to a digital component request, the latency in using the output of the controller in the digital component selection process can be greatly reduced.
In some cases, the tuning parameters of the active controller can be sensitive information. In such an example, the owner of the activity can MPC each computing system 1 And MPC 2 A respective secret share of each tuning parameter is provided. For example, an owner can send a computing system MPC 1 Providing a first secret contribution [ K ] of the proportional, integral and derivative parameters, respectively p，1 ]、[K i，1 ]And [ K ] d，1 ]. Similarly, an owner can MPC a computing system 2 Providing a second secret contribution [ K ] of the proportional, integral and derivative parameters, respectively p，1 ]、[K i，2 ]And [ K ] d，2 ]。
When calculating temporary parameters, the calculation system MPC 1 And MPC 2 The relations 36 and 37 can be used instead of the relations 27 and 33.
[tmp 1 ]＝([K p，1 ]×[error 1 ])+([K i，1 ]×[integral campaign_uuid，impression，1 ])+([K d，1 ]×[derivative 1 ]) (36)
[tmp 2 ]＝([K p，2 ]×[error 2 ])+([K i，2 ]×[integral campaign_uuid，impression，2 ])+([K d，2 ]×[derivative 2 ]) (37)
Computing system MPC 1 And MPC 2 A secret share of the active pacing selector parameter is determined (418). Computing system MPC 1 And MPC 2 Can be generated in plaintext form cooperatively at [ output min ，output max ]A uniformly distributed random number R within a range of (a). For example, a computing system MPC 1 And MPC 2 The random number can be determined using a Diffie-Hellman key exchange (DHKE) technique.
Computing system MPC 1 And MPC 2 The secret shares of the output of the PID controller and the secret shares of the random number can be used,to calculate a secret share of the pacing selector parameters using the secure MPC process. Using random numbers to enable computing system MPC 1 And MPC 2 The boolean value of the pacing selector parameter can be set using the probability represented by the output. Computing system MPC 1 The first secret share of pacing selector parameter pacing _ selector can be calculated using relation 38 below.
[pacing_selector campaign_uuid，1 ]＝([output campaign_uuid，1 ]＞R)×([pv campaign_uuid，resource，1 ]＜total_resources campaign_uuid，1 ]) (38)
Similarly, computing system MPC 2 The first secret share of pacing selector parameter pacing _ selector can be calculated using relation 39 below.
[pacing_selector campaign_uuid，2 ]＝([output campaign_uuid，2 ]＞R)×([pv campaign_uuid，resource，2 ]＜total_resources campaign_uuid，2 ]) (39)
In relations 38 and 39, the comparison with the total amount of resources of the campaign ensures that the campaign has the remaining resources, e.g., budget, for distributing the digital components. The secret share of the active pacing selector can be used in process 200 for each digital component in the activity. For example, for each digital component in an activity, a secret share [ sharing _ selector ] campiang_uuid，1 ]And [ vibrating _ selector campiang_uuid，2 ]Can replace [ pairing _ selector ] in relations 6 and 7 sv，1 ]And [ vibrating _ selector sv，2 ]。
FIG. 5 is a flow diagram illustrating an example process 500 for selecting digital components for distribution to client devices. The operation of the process 500 can be performed, for example, by a computing system MPC in an MPC cluster 130 1 Or a computing system MPC 2 To be implemented. The operations of process 500 can also be implemented as instructions stored on one or more computer-readable media, which can be non-transitory, and execution of the instructions by one or more data processing apparatus can cause the one or more data processing apparatus to perform the operationsThe operations of routine 500. For simplicity, process 500 is described as being performed by a computing system MPC 1 And (6) executing.
Computing system MPC 1 With one or more second computing systems in the MPC system (e.g., computing system MPC) 2 ) In cooperation, a feedback controller (502) for each of one or more activities is initialized in a secret share using a secure MPC process. The feedback controller can be a PID controller with a set point based on the target rate for a given activity. For example, the set point can be a presentation rate, an interaction rate, or a resource consumption rate. Computing system MPC 1 And MPC 2 The secure MPC process can be used to initialize secret shares of parameters of the controller as described above with reference to fig. 4.
Computing system MPC 1 The first secret share of the output of each feedback controller is updated based on the error parameter of the feedback controller. The error parameter can represent a difference between the set point and a measured rate for a given activity (504). The output represents a probability that can be used to determine whether the activity satisfies the pacing eligibility condition for the activity. Computing system MPC 1 And MPC 2 The output of the controller can be updated based on the updated measured process variable and set point as described above with reference to fig. 4.
Computing system MPC 1 A first secret share of a given pacing selector parameter that defines whether the activity satisfies a pacing eligibility condition for the activity is determined based on the outputted first secret share (506). As described above with reference to FIG. 4, computing system MPC 1 And MPC 2 A random number can be cooperatively generated for each digital component request and compared to the output to determine the pacing selector parameters.
Computing system MPC 1 A digital component request is received from the client device 110 (508). The digital component request can include a secret share of cuckoo filters or data that identifies one or more first user groups that include a user of the client device 110 as a member. For example, the digital component request can include one or more distributed point functions. Each distributed point function is capable of representing a phase indicating whether a user of a client device is a faciesThe secret share of the point function of the members of the respective first user group identified by the first user group identifier. E.g. by a computing system MPC 1 The received digital component request can include a distributed point function g for each user group that includes the user of the client device 110 as a member ug_id,1 。
The computing system and MPC 2 Collaborate to perform a given digital component selection process for a digital component request (510). For example, a computing system MPC 1 And MPC 2 The process 300 of fig. 3 can be performed to generate a selection result that identifies a selected digital component.
Computing system MPC 1 A first secret share that identifies the selection result of the given digital component is provided to client device 110 (512). As described above, the selection result can identify the selected digital component and the selection value of the digital component. The client device 110 can also be capable of operating from one or more additional MPC systems (e.g., computing system MPCs) 2 ) Each receiving a respective secret share of the selection result. As described above, the client device 110 can use the secret shares to reconstruct the selection result.
In some embodiments, rather than using a distributed point function, cuckoo filters themselves can be sent to the MPC cluster 130. In this example, the application 112 can use a pseudo-random function (PRF) parameterized by the user group identifier or a set of identifiers from which to block and either of two random variables generated by the application 112. For example, assume that the three random variables generated by the application 112 are rand _ var1a, rand _ var1b, and rand _ var 2. It is also assumed that each entry in the bucket is a k-bit integer. In some embodiments, the application 112 and MPC cluster 130 agree on a PRF in advance, where k is the number of bits per item in the bucket of the cuckoo filter. Each item in the bucket of the cuckoo filter can be occupied by a user group identifier or blocked identifier, or empty. For example, the application 112 can generate a cuckoo filter table with entries of PRF (ug _ id, rand _ var1a), PRF (blocked _ id, rand _ var1b), or 0, where ug _ id is an identifier of a user group generated by applying HMAC to a tag of the user group (e.g., user group identifier) based on the domain of the content provider, and 0 represents an empty entry. The process is repeated for all subscriber group identifiers and blocked identifiers.
The application 112 can generate a vector B based on a cuckoo filter table generated for the user group identifier and the blocked identifier. Each value B in the vector B i Can be represented as B i ＝(A i PRF (rand _ var2, i)) modp, where a is the cuckoo filter table and i is the index of the vector B and the cuckoo filter table a. When the application 112 initiates a request for a digital component of a digital component slot, the application transmits rand _ var1a, rand _ var1b and rand _ var2 as parameters of the request to the computing system MPC 1 . The application 112 also transmits the vectors B, rand _ var1a and rand _ var1b as parameters of the request to the computing system MPC 2 . PRF (rand _ var2, i) and B i Is Z p A in (A) i Respectively, by the computing system MPC 1 And MPC 2 And (4) holding. Because of the computing system MPC 1 And MPC 2 Neither of the secret shares is accessible, so neither computing system can render the cuckoo filter table, thereby protecting user privacy.
Computing system MPC 1 It is determined whether each candidate selection value is associated with the user group specified in the request. Computing system MPC 1 Receiving the equivalent of an array of secret shares of the cuckoo filter table M, from [ M 1 ]And (4) showing. Each subscriber group identifier present in M will be in one of N possible locations.
Computing system MPC 1 The user group-based candidate parameter [ is _ dc _ a _ candidate is calculated according to the following relation 40 x，1 ]：
Where Π denotes multiplication of a number of terms. Here, ug _ id (x) is a function for retrieving the user group identifier ug _ id associated with the selection value x, { F } 1 ，...F N Is a possibility for calculating an entry in cuckoo filter table aThe indexed hash function set, and randvalla is a random value received in the digital component request. [ M ] A x，1 ]Is an array [ M 1 ]The xth element of (1). Which is an equality test between a plaintext integer and a secret share of a secret integer. The result is a secret share of a secret integer of 0 (not equal) or 1 (equal). Here, [ M ] i，1 ]Value of (2) [ PRF (rand _ val2a, i) 1 ]。
Similarly, computing system MPC 2 The user group-based candidate parameter is _ dc _ a _ candidate is calculated according to the following relation 41 x，2 ]：
Here, [ M ] i,2 ]Value of (A) is B i 。
FIG. 6 is a block diagram of an example computer system 600 that can be used to perform the operations described above. The system 600 includes a processor 610, a memory 620, a storage device 630, and an input/output device 640. Each of the components 610, 620, 630, and 640 can be interconnected, for example, using a system bus 650. The processor 610 is capable of processing instructions for execution within the system 600. In some implementations, the processor 610 is a single-threaded processor. In another implementation, the processor 610 is a multi-threaded processor. The processor 610 is capable of processing instructions stored in the memory 620 or on the storage device 630.
The storage device 630 is capable of providing mass storage for the system 600. In some implementations, the storage device 630 is a computer-readable medium. In various different implementations, the storage device 630 can include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices over a network (e.g., a cloud storage device), or some other mass storage device.
Input/output device 640 provides input/output operations for system 600. In some implementations, the input/output devices 640 can include one or more of the following: network interface devices, such as ethernet cards; serial communication devices, such as RS-232 ports; and/or wireless interface devices, such as 802.11 cards. In another embodiment, the input/output devices can include driver devices configured to receive input data and transmit output data to external devices 660 (e.g., keyboard, printer, and display devices). However, other implementations can also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 6, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage medium (or media) for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by the data processing apparatus. The computer storage medium can be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification can be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality or combination of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment are capable of implementing a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device. Further, the computer can be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other types of devices can also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. Further, the computer is able to interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server transmits data (e.g., HTML pages) to the client device (e.g., for displaying data to a user interacting with the client device and receiving user input from the user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received at the server from the client device.
In addition to the above embodiments, the following embodiments are also innovative:
embodiment 1 is a method comprising: for each of the one or more activities: initializing, by a first computing system of a plurality of multi-party computing (MPC) systems in cooperation with one or more second computing systems of the MPC systems, a feedback controller for the activity in a secret share using a secure MPC process, wherein the feedback controller includes a set point based on a target rate of the activity; updating, by the first computing system, a first secret share of an output of the feedback controller based on an error parameter representing a difference between the setpoint and a measured rate of the activity; and determining, by the first computing system, a first secret share of a pacing selector parameter that defines whether the activity satisfies a pacing eligibility condition for the activity based at least on the first secret share of the output; receiving, by the first computing system, a digital component request; performing, by the first computing system in cooperation with the one or more second computing systems, a given digital component selection process for the digital component request, wherein the digital component selection process selects a given digital component from a set of candidate digital components, each candidate digital component in the set of candidate digital components satisfying one or more qualifying conditions, the one or more qualifying conditions including being in a qualifying activity that satisfies the pacing qualifying condition; and sending, by the first computing system to the client device, a first secret share identifying a selection result of the given digital component.
Embodiment 2 is the method of embodiment 1, wherein the target rate for the campaign comprises one of a target presentation rate for the campaign, a target user interaction rate for the given campaign, or a target resource consumption rate for the given campaign.
Embodiment 3 is the method of embodiment 1 or 2, wherein the feedback controller comprises a proportional-integral-derivative (PID) controller.
Embodiment 4 is the method of any of embodiments 1 to 3, wherein the digital component request includes a secret share of data identifying one or more first user groups that include the user of the client device as a member.
Embodiment 5 is the method of embodiment 4, wherein performing, by the first computing system in cooperation with the one or more second computing systems, the given digital component selection process for the digital component request comprises: identifying a plurality of digital components, wherein each digital component corresponds to: (i) a respective selection value, (ii) a respective second user group identifier of a respective second user group to which the digital component is eligible to be distributed, and (iii) a respective activity comprising the digital component; for each selection value of the plurality of selection values, determining a first secret share of an overall candidate parameter indicative of: (i) whether the second user group identifier corresponding to the selection value matches one of the one or more first user groups, and (ii) whether the pacing selector parameter for the respective activity indicates that the respective activity satisfies the pacing eligibility criterion for the respective activity; and generating the first secret share of the selection result based on the respective selection value and the candidate parameter for each of the plurality of digital components, wherein the given digital component is the particular digital component from the set of qualified digital components having the highest selection value.
Embodiment 6 is the method of embodiment 5, wherein each qualified numerical component is a numerical component of the overall candidate parameter having a specified value, wherein the specified value indicates: (i) the second user group identifier corresponding to the numeric component matches one of the one or more first user groups, and (ii) a respective pacing selector parameter for the activity that includes the numeric component indicates that the activity satisfies the pacing eligibility criterion.
Embodiment 7 is the method of any one of embodiments 1 to 6, wherein generating the first secret share of the selection result comprises: generating an order of the plurality of digital components based on the magnitude of each selection value; determining a first secret share of an accumulated value for each selection value based on the order of the digital components and the overall candidate parameters for each digital component; determining, for each digital component, a first secret share of a winner parameter based on (i) the overall candidate parameter for the selection value and (ii) a result of an equality test that indicates whether the accumulated value for the selection value is a particular specified value; and for each selection value, determining a first secret share of a sum of products of the winner parameter of the selection value and a digital component information element of the selection value as the first secret share of the selection result.
Embodiment 8 is the method of embodiment 7, wherein determining the first secret share of the accumulated value for each selection value comprises: for each individual selection value, determining a number of selection values between a highest selection value and the individual selection value, including the highest selection value and the individual selection value, having a candidate parameter indicating that the second user group identifier corresponding to the selection value matches at least one of the one or more first user group identifiers.
Embodiment 9 is the method of embodiment 7 or 8, wherein the particular specified value is one or logically true.
Embodiment 10 is the method of any of embodiments 7 to 9, further comprising: storing the first secret share of the winner parameter with a reference to a selection process identifier of the given digital component selection process; receiving a notification from the client device, the notification including the selection process identifier and a first secret share of data indicating at least one of (i) whether the given digital component is displayed at the client device or (ii) whether a user has interacted with the given digital component; and updating a first secret share of the measurement rate for the feedback controller that includes activity of the given digital component using the selection process identifier and the first secret share of the data, the data indicating at least one of (i) whether the digital component is displayed at the client device or (ii) whether the user has interacted with the given digital component.
Embodiment 11 is the method of embodiment 10, further comprising: updating, in cooperation with the one or more second computing systems, the first secret share of the respective pacing selector parameter for the given activity based on the updated first secret share of the measurement rate and a respective second secret share of the measurement rate maintained by each of the one or more second computing systems.
Embodiment 12 is the method of embodiment 11, wherein updating the first secret share of the respective pacing selector parameter for the given activity comprises: updating, in cooperation with the one or more second computing systems, the first secret share of the output of the feedback controller for the given activity; and updating, in cooperation with the one or more second computing systems, the first secret share of the pacing selector for the given activity based on an updated first secret share of the output of the feedback controller for the given activity and a respective updated second secret share of the output of the feedback controller for the given activity maintained by each of the one or more second computing systems.
Embodiment 13 is a system, comprising: one or more processors; and one or more storage devices storing instructions that, when executed by the one or more processors, cause the one or more processors to perform the method of any of embodiments 1-12.
Embodiment 14 is a computer-readable storage medium carrying instructions that, when executed by one or more processors, cause the one or more processors to perform the method of any one of embodiments 1-12.
Embodiment 15 is a computer program product comprising instructions which, when executed by a computer, cause the computer to perform the steps of the method of any of embodiments 1 to 12.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Moreover, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
Claims (39)
1. A computer-implemented method, comprising:
for each of the one or more activities:
initializing, by a first computing system of a plurality of multi-party computing MPC systems in cooperation with one or more second computing systems of the MPC systems, a feedback controller for the activity in secret shares using a secure MPC process, wherein the feedback controller includes a set point based on a target rate of the activity;
updating, by the first computing system, a first secret share of an output of the feedback controller based on an error parameter representing a difference between the setpoint and a measured rate of the activity; and
determining, by the first computing system, a first secret share of a pacing selector parameter that defines whether the activity satisfies a pacing eligibility condition for the activity based at least on the first secret share of the output;
receiving, by the first computing system, a digital component request;
performing, by the first computing system in cooperation with the one or more second computing systems, a given digital component selection process for the digital component request, wherein the digital component selection process selects a given digital component from a set of candidate digital components, each candidate digital component in the set of candidate digital components satisfying one or more qualifying conditions, the one or more qualifying conditions including being in a qualifying activity that satisfies the pacing qualifying condition; and
sending, by the first computing system, a first secret share to the client device that identifies a selection result of the given digital component.
2. The computer-implemented method of claim 1, wherein the target rate for the campaign comprises one of a target presentation rate for the campaign, a target user interaction rate for the given campaign, or a target resource consumption rate for the given campaign.
3. The computer-implemented method of claim 1 or 2, wherein the feedback controller comprises a proportional-integral-derivative (PID) controller.
4. The computer-implemented method of any preceding claim, wherein the digital component request comprises a secret share of data identifying one or more first user groups that include a user of the client device as a member.
5. The computer-implemented method of claim 4, wherein performing, by the first computing system in cooperation with the one or more second computing systems, the given digital component selection process for the digital component request comprises:
identifying a plurality of digital components, wherein each digital component corresponds to: (i) a respective selection value, (ii) a respective second user group identifier of a respective second user group to which the digital component is eligible to be distributed, and (iii) a respective activity comprising the digital component;
for each selection value of the plurality of selection values, determining a first secret share of an overall candidate parameter indicative of: (i) whether the second user group identifier corresponding to the selection value matches one of the one or more first user groups, and (ii) whether the pacing selector parameter for the respective activity indicates that the respective activity satisfies the pacing eligibility criterion for the respective activity; and
generating the first secret share of the selection result based on the respective selection value and the candidate parameter for each of the plurality of digital components, wherein the given digital component is a particular digital component from the set of qualified digital components having a highest selection value.
6. The computer-implemented method of claim 5, wherein each qualified numeric component is a numeric component of the overall candidate parameter having a specified value, wherein the specified value indicates that: (i) the second user group identifier corresponding to the numeric component matches one of the one or more first user groups, and (ii) the respective pacing selector parameter for the activity that includes the numeric component indicates that the activity satisfies the pacing eligibility condition.
7. The computer-implemented method of any preceding claim, wherein generating the first secret share of the selection result comprises:
generating an order of the plurality of digital components based on the magnitude of each selection value;
determining a first secret share of an accumulated value for each selection value based on the order of the digital components and the overall candidate parameter for each digital component;
determining, for each digital component, a first secret share of a winner parameter based on (i) the overall candidate parameter for the selection value and (ii) a result of an equality test that indicates whether the accumulated value for the selection value is a particular specified value; and
for each selection value, determining a product of the winner parameter of the selection value and a digital component information element of the selection value, and determining a first secret share of a sum of products as the first secret share of the selection result.
8. The computer-implemented method of claim 7, wherein determining the first secret share of the accumulated value for each selection value comprises:
for each individual selection value, determining a number of selection values between a highest selection value and the individual selection value, including the highest selection value and the individual selection value, having a candidate parameter indicating that the second user group identifier corresponding to the selection value matches at least one of the one or more first user group identifiers.
9. The computer-implemented method of claim 7 or 8, wherein the particular specified value is one or logically true.
10. The computer-implemented method of any of claims 7 to 9, further comprising:
storing the first secret share of the winner parameter with a reference to a selection process identifier of the given digital component selection process;
receiving a notification from the client device, the notification including the selection process identifier and a first secret share of data indicating at least one of (i) whether the given digital component is displayed at the client device or (ii) whether a user has interacted with the given digital component; and
updating a first secret share of the measurement rate for the feedback controller that includes activity of the given digital component using the selection process identifier and the first secret share of the data, the data indicating at least one of (i) whether the digital component is displayed at the client device or (ii) whether the user has interacted with the given digital component.
11. The computer-implemented method of claim 10, further comprising: updating, in cooperation with the one or more second computing systems, the first secret share of the respective pacing selector parameter for the given activity based on the updated first secret share of the measurement rate and a respective second secret share of the measurement rate maintained by each of the one or more second computing systems.
12. The computer-implemented method of claim 11, wherein updating the first secret share of the respective pacing selector parameter for the given activity comprises:
updating, in cooperation with the one or more second computing systems, the first secret share of the output of the feedback controller for the given activity; and
updating, in cooperation with the one or more second computing systems, the first secret share of the pacing selector for the given activity based on an updated first secret share of the output of the feedback controller for the given activity and a respective updated second secret share of the output of the feedback controller for the given activity maintained by each of the one or more second computing systems.
13. A system, comprising:
one or more processors; and
one or more storage devices storing instructions that, when executed by the one or more processors, cause the one or more processors to perform the method of any preceding claim.
14. A computer-readable storage medium carrying instructions that, when executed by one or more processors, cause the one or more processors to perform the method of any one of claims 1-12.
15. A computer program product comprising instructions which, when executed by a computer, cause the computer to perform the steps of the method according to any one of claims 1 to 12.
16. A system, comprising:
one or more processors; and
one or more computer-readable media storing instructions that, when executed by the one or more processors, cause the one or more processors to perform operations comprising:
for each of the one or more activities:
initializing, by a first computing system of a plurality of multi-party computing MPC systems in cooperation with one or more second computing systems of the MPC systems, a feedback controller for the activity in secret shares using a secure MPC process, wherein the feedback controller includes a set point based on a target rate of the activity;
updating, by the first computing system, a first secret share of an output of the feedback controller based on an error parameter representing a difference between the setpoint and a measured rate of the activity; and
determining, by the first computing system, a first secret share of a pacing selector parameter that defines whether the activity satisfies a pacing eligibility condition for the activity based at least on the first secret share of the output;
receiving, by the first computing system, a digital component request;
performing, by the first computing system in cooperation with the one or more second computing systems, a given digital component selection process for the digital component request, wherein the digital component selection process selects a given digital component from a set of candidate digital components, each candidate digital component in the set of candidate digital components satisfying one or more qualifying conditions, the one or more qualifying conditions including being in a qualifying activity that satisfies the pacing qualifying condition; and
sending, by the first computing system, to the client device, a first secret share identifying a selection result of the given digital component.
17. The system of claim 16, wherein the target rate for the activity comprises one of a target presentation rate for the activity, a target user interaction rate for the given activity, or a target resource consumption rate for the given activity.
18. The system of claim 16, wherein the feedback controller comprises a proportional-integral-derivative (PID) controller.
19. The system of claim 16, wherein the digital component request comprises a secret share of data identifying one or more first user groups that include a user of the client device as a member.
20. The system of claim 19, wherein performing, by the first computing system in cooperation with the one or more second computing systems, the given digital component selection process for the digital component request comprises:
identifying a plurality of digital components, wherein each digital component corresponds to: (i) a respective selection value, (ii) a respective second user group identifier of a respective second user group to which the digital component is eligible to be distributed, and (iii) a respective activity that includes the digital component;
for each selection value of the plurality of selection values, determining a first secret share of an overall candidate parameter indicative of: (i) whether the second user group identifier corresponding to the selection value matches one of the one or more first user groups, and (ii) whether the pacing selector parameter for the respective activity indicates that the respective activity satisfies the pacing eligibility criterion for the respective activity; and
generating the first secret share of the selection result based on the respective selection value and the candidate parameter for each of the plurality of digital components, wherein the given digital component is a particular digital component from the set of qualified digital components having a highest selection value.
21. The system of claim 20, wherein each qualified numerical component is a numerical component for which the overall candidate parameter has a specified value, wherein the specified value indicates that: (i) the second user group identifier corresponding to the numeric component matches one of the one or more first user groups, and (ii) the respective pacing selector parameter for the activity that includes the numeric component indicates that the activity satisfies the pacing eligibility condition.
22. The system of claim 16, wherein generating the first secret share of the selection result comprises:
generating an order of the plurality of digital components based on the magnitude of each selection value;
determining a first secret share of an accumulated value for each selection value based on the order of the digital components and the overall candidate parameters for each digital component;
determining, for each digital component, a first secret share of a winner parameter based on (i) the overall candidate parameter for the selection value and (ii) a result of an equality test that indicates whether the accumulated value for the selection value is a particular specified value; and
for each selection value, determining a product of the winner parameter of the selection value and digital component information elements of the selection value, and determining a first secret share of the sum of the products as the first secret share of the selection result.
23. The system of claim 22, wherein determining the first secret share of the accumulated value for each selection value comprises:
for each individual selection value, determining a number of selection values between a highest selection value and the individual selection value, including the highest selection value and the individual selection value, having a candidate parameter indicating that the second user group identifier corresponding to the selection value matches at least one of the one or more first user group identifiers.
24. The system of claim 22, wherein the particular specified value is one or logically true.
25. The system of claim 22, wherein the operations comprise:
storing the first secret share of the winner parameter with a reference to a selection process identifier of the given digital component selection process;
receiving a notification from the client device, the notification including the selection process identifier and a first secret share of data indicating at least one of (i) whether the given digital component is presented at the client device or (ii) whether a user has interacted with the given digital component; and
updating a first secret share of the measurement rate for the feedback controller that includes activity of the given digital component using the selection process identifier and the first secret share of the data, the data indicating at least one of (i) whether the digital component is presented at the client device or (ii) whether the user has interacted with the given digital component.
26. The system of claim 25, wherein the operations comprise: updating, in cooperation with the one or more second computing systems, the first secret share of the respective pacing selector parameter for the given activity based on the updated first secret share of the measurement rate and a respective second secret share of the measurement rate maintained by each of the one or more second computing systems.
27. The system of claim 26, wherein updating the first secret share of the respective pacing selector parameter for the given activity comprises:
updating, in cooperation with the one or more second computing systems, the first secret share of the output of the feedback controller for the given activity; and
updating, in cooperation with the one or more second computing systems, the first secret share of the pacing selector for the given activity based on an updated first secret share of the output of the feedback controller for the given activity and a respective updated second secret share of the output of the feedback controller for the given activity maintained by each of the one or more second computing systems.
28. One or more non-transitory computer-readable media storing instructions that, when executed by one or more computers, cause the one or more computers to perform operations comprising:
for each of the one or more activities:
initializing, by a first computing system of a plurality of multi-party computing MPC systems in cooperation with one or more second computing systems of the MPC systems, a feedback controller for the activity in secret shares using a secure MPC process, wherein the feedback controller includes a set point based on a target rate of the activity;
updating, by the first computing system, a first secret share of an output of the feedback controller based on an error parameter representing a difference between the setpoint and a measured rate of the activity; and
determining, by the first computing system, a first secret share of a pacing selector parameter that defines whether the activity satisfies a pacing eligibility condition for the activity based at least on the first secret share of the output;
receiving, by the first computing system, a digital component request;
performing, by the first computing system in cooperation with the one or more second computing systems, a given digital component selection process for the digital component request, wherein the digital component selection process selects a given digital component from a set of candidate digital components, each candidate digital component in the set of candidate digital components satisfying one or more qualifying conditions, the one or more qualifying conditions including being in a qualifying activity that satisfies the pacing qualifying condition; and
sending, by the first computing system, a first secret share to the client device that identifies a selection result of the given digital component.
29. The one or more non-transitory computer-readable media of claim 28, wherein the target rate of the activity comprises one of a target presentation rate for the activity, a target user interaction rate for the given activity, or a target resource consumption rate for the given activity.
30. The one or more non-transitory computer-readable media of claim 28, wherein the feedback controller comprises a proportional-integral-derivative (PID) controller.
31. The one or more non-transitory computer-readable media of claim 28, wherein the digital component request includes a secret share of data identifying one or more first user groups that include a user of the client device as a member.
32. The one or more non-transitory computer-readable media of claim 31, wherein performing, by the first computing system in cooperation with the one or more second computing systems, the given digital component selection process for the digital component request comprises:
identifying a plurality of digital components, wherein each digital component corresponds to: (i) a respective selection value, (ii) a respective second user group identifier of a respective second user group to which the digital component is eligible to be distributed, and (iii) a respective activity comprising the digital component;
for each selection value of the plurality of selection values, determining a first secret share of an overall candidate parameter indicative of: (i) whether the second user group identifier corresponding to the selection value matches one of the one or more first user groups, and (ii) whether the pacing selector parameter for the respective activity indicates that the respective activity satisfies the pacing eligibility condition for the respective activity; and
generating the first secret share of the selection result based on the respective selection value and the candidate parameter for each of the plurality of digital components, wherein the given digital component is a particular digital component from the set of qualified digital components having a highest selection value.
33. The one or more non-transitory computer-readable media of claim 32, wherein each qualified numeric component is a numeric component of the overall candidate parameter having a specified value, wherein the specified value indicates that: (i) the second user group identifier corresponding to the numeric component matches one of the one or more first user groups, and (ii) a respective pacing selector parameter for the activity that includes the numeric component indicates that the activity satisfies the pacing eligibility criterion.
34. The one or more non-transitory computer-readable media of claim 28, wherein generating the first secret share of the selection result comprises:
generating an order of the plurality of digital components based on the magnitude of each selection value;
determining a first secret share of an accumulated value for each selection value based on the order of the digital components and the overall candidate parameter for each digital component;
determining, for each digital component, a first secret share of a winner parameter based on (i) the overall candidate parameter for the selection value and (ii) a result of an equality test that indicates whether the accumulated value for the selection value is a particular specified value; and
for each selection value, determining a product of the winner parameter of the selection value and a digital component information element of the selection value, and determining a first secret share of a sum of products as the first secret share of the selection result.
35. The one or more non-transitory computer-readable media of claim 34, wherein determining the first secret share of the accumulated value for each selection value comprises:
for each individual selection value, determining a number of selection values between a highest selection value and the individual selection value, including the highest selection value and the individual selection value, having a candidate parameter indicating that the second user group identifier corresponding to the selection value matches at least one of the one or more first user group identifiers.
36. The one or more non-transitory computer-readable media of claim 34, wherein the particular specified value is one or logically true.
37. The one or more non-transitory computer-readable media of claim 34, wherein the operations comprise:
storing the first secret share of the winner parameter with a reference to a selection process identifier of the given digital component selection process;
receiving a notification from the client device, the notification including the selection process identifier and a first secret share of data indicating at least one of (i) whether the given digital component is presented at the client device or (ii) whether a user has interacted with the given digital component; and
updating a first secret share of the measurement rate for the feedback controller that includes activity of the given digital component using the selection process identifier and the first secret share of the data, the data indicating at least one of (i) whether the digital component is presented at the client device or (ii) whether the user has interacted with the given digital component.
38. The one or more non-transitory computer-readable media of claim 37, wherein the operations comprise: updating, in cooperation with the one or more second computing systems, the first secret share of the respective pacing selector parameter for the given activity based on the updated first secret share of the measurement rate and a respective second secret share of the measurement rate maintained by each of the one or more second computing systems.
39. The one or more non-transitory computer-readable media of claim 38, wherein updating the first secret share of the respective pacing selector parameter for the given activity comprises:
updating, in cooperation with the one or more second computing systems, the first secret share of the output of the feedback controller for the given activity; and
updating, in cooperation with the one or more second computing systems, the first secret share of the pacing selector for the given activity based on an updated first secret share of the output of the feedback controller for the given activity and a respective updated second secret share of the output of the feedback controller for the given activity maintained by each of the one or more second computing systems.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202063125191P | 2020-12-14 | 2020-12-14 | |
US63/125,191 | 2020-12-14 | ||
PCT/US2021/063026 WO2022132618A1 (en) | 2020-12-14 | 2021-12-13 | Feedback controller using secret sharing |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114945932A true CN114945932A (en) | 2022-08-26 |
Family
ID=79316732
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202180009049.1A Pending CN114945932A (en) | 2020-12-14 | 2021-12-13 | Feedback controller using secret sharing |
Country Status (6)
Country | Link |
---|---|
US (1) | US20230077152A1 (en) |
EP (1) | EP4066199A1 (en) |
JP (1) | JP7471425B2 (en) |
KR (1) | KR20220112831A (en) |
CN (1) | CN114945932A (en) |
WO (1) | WO2022132618A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN115292994B (en) * | 2022-07-21 | 2023-06-06 | 西安电子科技大学 | Optical-mechanical coupling method for spherical light energy collection and calculation |
CN116881975B (en) * | 2023-09-08 | 2023-11-03 | 北京中奥通宇科技股份有限公司 | Integration platform data security processing method and system based on multiparty calculation |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2015194959A (en) | 2014-03-31 | 2015-11-05 | ソニー株式会社 | Information processor, information processing method and program |
US10068247B2 (en) * | 2014-12-17 | 2018-09-04 | Excalibur Ip, Llc | Pacing control for online ad campaigns |
US11245536B2 (en) * | 2019-04-16 | 2022-02-08 | Meta Platforms, Inc. | Secure multi-party computation attribution |
JP6754485B1 (en) | 2019-12-16 | 2020-09-09 | 株式会社ビデオリサーチ | Information processing device and information processing method |
-
2021
- 2021-12-13 EP EP21840745.0A patent/EP4066199A1/en active Pending
- 2021-12-13 JP JP2022542992A patent/JP7471425B2/en active Active
- 2021-12-13 WO PCT/US2021/063026 patent/WO2022132618A1/en unknown
- 2021-12-13 US US17/795,151 patent/US20230077152A1/en active Pending
- 2021-12-13 KR KR1020227024001A patent/KR20220112831A/en unknown
- 2021-12-13 CN CN202180009049.1A patent/CN114945932A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
WO2022132618A1 (en) | 2022-06-23 |
US20230077152A1 (en) | 2023-03-09 |
EP4066199A1 (en) | 2022-10-05 |
JP2023516868A (en) | 2023-04-21 |
KR20220112831A (en) | 2022-08-11 |
JP7471425B2 (en) | 2024-04-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7471425B2 (en) | Feedback Controller Using Secret Sharing | |
US20230188329A1 (en) | Using secure multi-party computation and probabilistic data structures to protect access to information | |
JP2023067928A (en) | Using secure multi-party computation to improve content selection process integrity | |
EP4081971B1 (en) | Using secure mpc and vector computations to protect access to information in content distribution | |
CN116097616A (en) | Cryptographic security control using secure multiparty computing | |
JP7471450B2 (en) | Improving the performance of secure multiparty computation | |
CN114450919B (en) | Online privacy protection method and system | |
JP7440667B2 (en) | Flexible content selection process using secure multiparty calculations | |
CN115315919A (en) | Privacy preserving measures using secure multi-party computing |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
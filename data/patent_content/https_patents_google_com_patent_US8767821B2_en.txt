US8767821B2 - System and method for providing adaptive media optimization - Google Patents
System and method for providing adaptive media optimization Download PDFInfo
- Publication number
- US8767821B2 US8767821B2 US13/103,494 US201113103494A US8767821B2 US 8767821 B2 US8767821 B2 US 8767821B2 US 201113103494 A US201113103494 A US 201113103494A US 8767821 B2 US8767821 B2 US 8767821B2
- Authority
- US
- United States
- Prior art keywords
- video
- network
- fec
- packet loss
- rate
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- H04N19/00242—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/189—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding
- H04N19/196—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/115—Selection of the code volume for a coding unit prior to coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/137—Motion inside a coding unit, e.g. average field, frame or block difference
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/14—Coding unit complexity, e.g. amount of activity or edge presence estimation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/164—Feedback from the receiver or from the transmission channel
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/164—Feedback from the receiver or from the transmission channel
- H04N19/166—Feedback from the receiver or from the transmission channel concerning the amount of transmission errors, e.g. bit error rate [BER]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/174—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a slice, e.g. a line of blocks or a group of blocks
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/188—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a video data packet, e.g. a network abstraction layer [NAL] unit
Definitions
- a video may be provided in both high definition (HD) and standard definition (SD) formats.
- HD high definition
- SD standard definition
- a method and system for providing adaptive media optimization are described. Aspects of the invention modify video encoding and network transmission settings to optimize the user viewing experience.
- the system and method sample video content to determine various content features of the video.
- the system and method use the identified content features in conjunction with network statistics to modify encoding settings and network transmission options to ensure a minimum of interruption in the transmitted video.
- Previously generated lookup tables ensure efficient mapping of video content and network conditions to encoding and transmission settings. The use of lookup tables in this manner allows for the application of the system and method in real-time operations.
- One aspect of the disclosure describes a computer-implemented method for providing adaptive media optimization.
- the method includes determining, using a processor, a content class of a video based on a set of content characteristics, determining a set of network conditions, configuring at least one of an encoding option or a transmission option based upon the content class and the network conditions, and encoding and transmitting the video in accordance with the configured encoding option or transmission option.
- the content characteristics comprise a motion level of the video.
- the encoding option is at least one of a source rate or an error resilience (ER) setting.
- the ER setting may be determined as a function of a packet loss value, an effective recovery rate, and the content class of the video.
- the transmission option may be at least one of a forward error correction (FEC) factor or a negative-acknowledgement (NACK) setting.
- the method may further include selecting a set of parameters for a distortion function based upon the content class, and using the selected parameters to configure the at least one encoding option and transmission option.
- the method may further include sampling the video to identify the one or more content characteristics.
- the content characteristics may include at least one of a frame rate, a spatial resolution, a motion level, a spatial texture level, and/or a color depth.
- the content class of the video may be determined by looking up the content characteristics in a video parameter lookup table.
- the transmission option may be configured by performing a table lookup on a FEC table indexed by the set of network statistics and the content class of the video.
- the encoding option may be configured by performing a table lookup on a Residual Packet Loss (RPL) table indexed by the set of network statistics, the content class of the video, and a FEC protection factor.
- the network statistics comprise a packet loss value, a round trip time value, and a network rate.
- the network statistics may be provided by Real-Time Transport Control Protocol (RTCP).
- RTCP Real-Time Transport Control Protocol
- the method may include extracting one or more source content characteristics from a plurality of source videos, mapping, using a processor, one or more of the plurality of source videos to a content class based on the extracted source characteristics, computing, for a given set of source videos mapped to a same content class, a distortion value over a range of simulated network rates, packet loss values, error resilience settings, and forward error correction (FEC) protection factors, determining nearest fit parameters to map a distortion value for each video in the given set of source videos to a common distortion function, and storing the nearest fit parameters in the video parameter lookup table, such that the video parameter table is indexed by content class.
- the error resilience settings are retrieved from a Residual Packet Loss (RPL) lookup table and a source motion level, and the source motion level is derived from the extracted content characteristics.
- RPL Residual Packet Loss
- the method includes specifying a packet loss model, selecting a range for a packet loss value, a network rate, and a forward error correction (FEC) redundancy factor, selecting one or more stepping values for the packet loss value, the network rate, and the FEC redundancy factor, computing, using a processor, an effective recovery rate for one or more combinations of the range of the packet loss value, the network rate, and the FEC redundancy factor using the stepping values, and storing the computed effective recovery rate in a lookup table indexed by the packet loss value, the network rate, and the FEC redundancy factor.
- FEC forward error correction
- the method includes generating a residual packet loss (RPL) lookup table, generating a video parameter lookup table, selecting a content class from the video parameter lookup table, calculating, using a processor, a FEC redundancy factor by minimizing a cost function for the selected content class and a simulated network state, and storing the FEC redundancy factor in a FEC table indexed by the content class and simulated network state.
- RPL residual packet loss
- the processing system includes at least one processor, a memory for storing a video parameter lookup table, a residual packet loss (RPL) lookup table, and a forward error correction (FEC) lookup table, and a media optimization module associated with the at least one processor.
- the memory is coupled to the at least one processor.
- the media optimization module is configured to identify one or more characteristics of a video, determine a content class of the video based on the one or more characteristics, retrieve one or more distortion model parameters from the video parameter lookup table based upon the content class, determine a set of network conditions, retrieve a FEC redundancy factor from the FEC lookup table based on the set of network conditions and the content class, and retrieve an error resilience (ER) setting from the RPL table based on the FEC redundancy factor, the set of network conditions, and the content class of the video.
- the media optimization module may also determine a source encoding rate for the video based upon the maximum network rate, the FEC redundancy factor, and the ER setting.
- the processing system further includes an encoder module to receive the source encoding rate and the ER setting from the media optimization module, and to encode the video in accordance with the source encoding rate and the ER setting.
- the processing system may also include a network module to receive a FEC redundancy factor from the media optimization module and to transmit the video in accordance with the FEC redundancy factor.
- the set of network conditions may include a packet loss value, a network rate, and a round trip time.
- the one or more characteristics of the source video may include a resolution, a frame rate, a motion level, a spatial texture level, and/or a color depth.
- FIG. 1 is a system diagram depicting a server in communication with a video source and a client device in accordance with aspects of the invention.
- FIG. 2 is a method for generating a Residual Packet Loss table in accordance with aspects of the invention.
- FIG. 3 is a method for generating a video model parameter table in accordance with aspects of the invention.
- FIG. 4 is a method for generating a forward error correction (FEC) table in accordance with aspects of the invention.
- FEC forward error correction
- FIG. 5 is a method for providing adaptive media optimization in accordance with aspects of the invention.
- FIG. 6 is a block diagram depicting data flow throughout a system for providing adaptive media optimization in accordance with aspects of the invention.
- Video encoding and network transmission settings may be modified to optimize the user viewing experience.
- the systems and methods sample video content to determine various content features of the video.
- the identified content features are used in conjunction with network statistics to modify encoding settings and network transmission options to ensure a minimum of interruption in the transmitted video.
- Previously generated lookup tables ensure efficient mapping of video content and network conditions to encoding and transmission settings. The use of lookup tables in this manner allows for the application of the system and method in real-time operations.
- a system 100 in accordance with one aspect of the invention includes a video source 102 , a media optimization server 104 , a network 106 , and a client device 108 .
- the media optimization server 104 receives video data from the video source 102 , and encodes and transmits to the video to the client device 108 via the network 106 .
- the encoding and transmission processes are optimized based upon the content of the source video and various network conditions. Such optimization is described in further detail below. (see FIGS. 2-6 ).
- the video source 102 may be any device capable of capturing or transmitting a video image.
- the video source may be a digital camera, a digital camcorder, a computer server, a webcam, a mobile phone, a personal digital assistant, or any other device capable of capturing or transmitting video.
- the media optimization server 104 may receive audio and/or video from multiple video sources 102 , and combine the sources into a single stream.
- the media optimization server 104 may include a processor 110 , a memory 112 and other components typically present in general purpose computers.
- the memory 112 may store instructions and data that are accessible by the processor 110 .
- the processor 110 may execute the instructions and access the data to control the operations of the media optimization server 104 .
- the memory 112 may be any type of memory operative to store information accessible by the processor 110 , including a computer-readable medium, or other medium that stores data that may be read with the aid of an electronic device, such as a hard-drive, memory card, read-only memory (“ROM”), random access memory (“RAM”), digital versatile disc (“DVD”) or other optical disks, as well as other write-capable and read-only memories.
- a computer-readable medium or other medium that stores data that may be read with the aid of an electronic device, such as a hard-drive, memory card, read-only memory (“ROM”), random access memory (“RAM”), digital versatile disc (“DVD”) or other optical disks, as well as other write-capable and read-only memories.
- ROM read-only memory
- RAM random access memory
- DVD digital versatile disc
- the system and method may include different combinations of the foregoing, whereby different portions of the instructions and data are stored on different types of media.
- the instructions may be any set of instructions to be executed directly (such as machine code) or indirectly (such as scripts) by the processor 110 .
- the instructions may be stored as computer code on a tangible computer-readable medium.
- the terms “instructions” and “programs” may be used interchangeably herein.
- the instructions may be stored in object code format for direct processing by the processor 110 , or in any other computer language including scripts or collections of independent source code modules that are interpreted on demand or compiled in advance. Functions, methods, and routines of the instructions are explained in more detail below (see FIGS. 2-6 ).
- Data may be retrieved, stored or modified by processor in accordance with the instructions.
- the data may be stored in computer registers, in a relational database as a table having a plurality of different fields and records, Extensible Markup Language (“XML”) documents or flat files.
- XML Extensible Markup Language
- the data may also be formatted in any computer readable format such as, but not limited to, binary values or Unicode.
- image data may be stored as bitmaps made up of grids of pixels that are stored in accordance with formats that are compressed or uncompressed, lossless (e.g., BMP) or lossy (e.g., JPEG), and bitmap or vector-based (e.g., SVG), as well as computer instructions for drawing graphics.
- the data may include any information sufficient to identify the relevant information, such as numbers, descriptive text, proprietary codes, references to data stored in other areas of the same memory or different memories (including other network locations) or information that is used by a function to calculate the relevant data.
- the processor 110 may be any well-known processor, such as processors from Intel Corporation or AMD. Alternatively, the processor may be a dedicated controller such as an application-specific integrated circuit (ASIC). The processor may also be a programmable logic device (PLD) such as a field programmable gate array (FPGA).
- PLD programmable logic device
- FPGA field programmable gate array
- FIG. 1 functionally illustrates the processor and memory as each being within a single block, it should be understood that the processor 110 and memory 112 may actually include multiple processors and memories that may or may not be stored within the same physical housing. Accordingly, references to a processor, computer, or memory will be understood to include references to a collection of processors, computers, or memories that may or may not operate in parallel.
- the media optimization server 104 may be at one node of a network and be operative to directly and indirectly communicate with other nodes of the network.
- the media optimization server 104 may include a web server that is operative to communicate with a client device via the network 106 such that the media optimization server 104 uses the network 106 to transmit and display information to a user on a display of the client device. While the concepts described herein are generally discussed with respect to a media optimization server 104 , aspects of the invention may be applied to any computing node capable of managing media encoding operations.
- the memory 112 may further include a capture module 114 , an encoder module 116 , a network module 118 , a media optimization module 120 , and a set of lookup tables 122 .
- the capture module 114 receives incoming data from the video source 102 .
- the capture module 114 may be a driver application interfacing with a webcam device, a server application receiving data from a client device transmitting a video stream, an application receiving an encoded video file from a remote source, and the like.
- the capture module 114 operates to accept the data from the video source and send a sample of the video data to the media optimization module 120 .
- the encoder module 116 manages the process by which the video received via the capture module 114 is processed into a format suitable for packetization and transmission by the network module 118 .
- the encoder module 116 receives instructions from the media optimization module 120 to configure the encoding operations, such as the format, the source encoding rate, the frame rate, the spatial resolution, and the Error Resilience (ER) settings associated with the video.
- ER is an encoder feature that forces intra-coding for some macro-blocks on P-frames (delta frames).
- the ER settings determine the amount of macro-block encoding present on the P-frames. By encoding extra data into the P-frames, ER allows for the ability to reduce error propagation in the event of errors (such as those caused by dropped or delayed packets) in one or more previous and/or subsequent frames.
- the network module 118 manages the packetization and transmission of the video as encoded by the encoder module 116 .
- the network module 118 receives instructions from the media optimization module 120 to configure the network parameters, such as the Forward Error Correction (FEC) protection/rate, and whether or not a negative acknowledgement character (“NACK”) method is used to verify that a packet has been received by a client device.
- FEC methods generally operate to send extra/redundant packets to enable the receiver to recover lost packets.
- a traditional NACK method operates by sending a notification to a sender whenever the receiver has failed to receive a data packet, either due to a timeout or receiving a next packet out of order. When the receiver sends such a notification (a NACK), the server retransmits the packet to the receiver.
- the media optimization module 120 manages the encoding, packetization, and transmission operations as performed by the encoder module 116 and the network module 118 .
- the media optimization module 120 receives a sample of video data from the capture module 114 and a set of network statistics, performs an analysis on the video sample and the network statistics using a set of lookup tables 122 , and then instructs the encoder module 116 and the network module 118 based on the analysis. Exemplary methods by which this analysis may be performed are described below (see FIGS. 2-4 ).
- the lookup tables 122 include a set of configuration parameters that are indexed by a set of video content features and network statistics.
- the lookup tables 122 are referenced by the media optimization module 120 to configure the settings of the encoder module 116 and the network module 118 .
- the media optimization module 120 accesses three separate lookup tables 122 to configure the video encoding and transmission operations. These tables may include a Residual Packet Loss (RPL) table, a video parameter table, and a forward error correction table. Methods for generating these tables are described further below (see FIGS. 2-4 ).
- RPL Residual Packet Loss
- the client device 108 is operable to store and/or display video content as received from the media optimization server 104 .
- the client device 108 may be any device capable of managing data requests via the network 106 . Examples of such client devices include a personal computer (PC), a mobile device, or a server.
- the client device 108 may also include a personal computer, a personal digital assistant (“PDA”), a tablet PC, a netbook, a smart phone, etc.
- client devices in accordance with the systems and methods described herein may include any device operative to process instructions and transmit data to and from humans and other computers such as general purpose computers, network computers lacking local storage capability, etc.
- the network 106 and the intervening nodes between the server 104 and the client device 108 may include various configurations and use various protocols such as the Internet, World Wide Web, intranets, virtual private networks, local Ethernet networks, private networks using communication protocols proprietary to one or more companies, cellular and wireless networks (e.g., Wi-Fi), instant messaging, hypertext transfer protocol (“HTTP”) and simple mail transfer protocol (“SMTP”), and various combinations of the foregoing. While only one client device 108 and server 104 are shown in FIG. 1 , it should be appreciated that a large number of connected computers may be included on the system.
- various protocols such as the Internet, World Wide Web, intranets, virtual private networks, local Ethernet networks, private networks using communication protocols proprietary to one or more companies, cellular and wireless networks (e.g., Wi-Fi), instant messaging, hypertext transfer protocol (“HTTP”) and simple mail transfer protocol (“SMTP”), and various combinations of the foregoing. While only one client device 108 and server 104 are shown in FIG. 1 , it should be appreciated that a
- information may be sent via a medium such as an optical disk or portable drive.
- information may be transmitted in a non-electronic format and manually entered into the system.
- FIG. 2 is a method 200 for generating an RPL table in accordance with aspects of the invention.
- the RPL table includes a set of data describing the effectiveness of FEC code for a given amount of network packet loss and a given network rate.
- the RPL represents the received packet loss minus the average recovery rate provided by the FEC code.
- the quantities (p, b) are input to Eq.1.
- the quantities may be received periodically as the media optimization module 120 receives updated network statistics.
- the process by which the media optimization module 120 performs the table lookup operation is described further below (see FIGS. 2-4 ).
- the total number of packets, n is related to the network bandwidth (total encoding rate) via the function:
- n R t ( FR ⁇ M ⁇ ⁇ T ⁇ ⁇ U ) ( Eq . ⁇ 2 )
- MTU the maximum network packet size ( ⁇ 1400 bytes, for example)
- R t the network rate
- FR the average frame rate of the incoming video.
- the amount of FEC packets is given as n ⁇ k.
- the FEC redundancy, ( ⁇ , the protection ratio provided by FEC) is defined as:
- the residual packet loss may be expressed as:
- RPL ⁇ ( p , b , R t FR , ⁇ ) p - R ⁇ ( p , b , R t FR , ⁇ ) ( Eq . ⁇ 4 )
- the three parameters (p,b,R,) are input to the model to determine an effective recovery rate.
- R ⁇ ( p , b , R t FR , ⁇ ) may be computed for different packet loss scenarios, including random packet loss, bursty packet loss, or constant packet loss.
- a loss model for the packet loss events is used to determine the effective recovery rate based upon the packet loss, the number of source packets, and the number of FEC packets.
- Different loss models such as a random packet loss model, a bursty packet loss model, or a consistent packet loss model, may result in different effective recovery rates.
- a random (i.e. non-bursty) loss model is used, removing the term b.
- the term b would be relevant to the calculation of the effective recovery rate.
- the effective recovery rate is defined as:
- P(t,p,b,n) is the probability of losing t packets (from n total packets), given the packet loss rate p and the burst length b
- A(t,k,n) is the average number of packets that can be recovered when t packets (from n total packets) are lost.
- A(t,k,n) is the average number of packets that can be recovered from the FEC when t packets are lost, and can be obtained directly from counting possible loss configurations given the FEC code.
- P(t,p,b,n) is the probability of losing t packets, which depends on the packet loss model.
- Example models for the packet loss events are random loss (Bernoulli process), or bursty model (two-state Markov process). Other more complicated packet loss models may be used.
- the feedback of the network state is obtained periodically and is typically an effective packet loss rate (p) and possibly a burst length (b).
- the RPL table is computed by determining the effective recovery rate R over a range of the parameters it depends on, such as the packet loss (p), network rate
- the table is generated by computing the RPL functions for a range of each of these factors.
- R is a selected packet loss model:
- the method 200 determines an effective recovery rate and residual packet loss for a particular packet loss model.
- the effective recovery rate is based upon possible input values for packet loss, packet loss burst length, number of source packets, and number of overall packets.
- the effective recovery rates and RPL values may be stored in a lookup table for use in the video and FEC lookup table generation process (see FIGS. 3-4 ) and the media optimization process (see FIG. 5 ).
- a packet loss model is specified.
- the packet loss model is associated with a particular effective recovery rate, R.
- the packet loss model describes network behavior as a result of various factors, such as the recovery rate and resistance to packet loss of a set of data transmitted with given parameters.
- the method 200 may also compare recovery rates over multiple models.
- a range for packet loss values, network rate values, and FEC redundancy factor values is selected.
- the packet loss values p may be computed for a range from 0% packet loss to 50% in steps of 1%, the network rate values,
- R t FR may be calculated from 10 kilobits to 500 kilobits, in steps of 10 kilobits, and the FEC redundancy factor value, ⁇ , may be computed from 0% redundancy to 50% redundancy, in steps of 1%.
- the packet loss may be incremented in 0.5%, 10%, or 2% steps.
- the bit rate may be incremented from 25 through 1000 kilobits in 5 kilobit increments.
- the FEC redundancy factor may be incremented in 0.5%, 10%, or 2% steps.
- a stepping value for each of the packet loss, network rate, and FEC redundancy factor is selected.
- a smaller stepping value may result in more values for the RPL function present within the data table.
- a more accurate representation of the RPL function for a given dataset may be provided.
- the packet loss values may be stepped in 1% increments, 2% increments, or 5% increments.
- the network rate may be stepped in 1 kilobit increments, 10 kilobit increments, or 25 kilobit increments.
- the FEC redundancy factor may be stepped in 1% increments, 2% increments, or 5% increments.
- a burst parameter, b is further included in the table to model for different types of packet loss.
- an effective recovery rate for each of the stepping values for packet loss, network rate, and FEC redundancy factor is calculated.
- An effective recovery rate for each possible combination of packet loss, network rate, and FEC redundancy value is calculated to be stored in the data table.
- the effective recovery rates and associated residual packet loss values are stored in a lookup table, such as the RPL table.
- the lookup table is indexed by the packet loss, network rate, and FEC redundancy factors that determined each effective recovery rate and residual packet loss value.
- the RPL table is thus indexed by packet loss, bit rate, and FEC redundancy to provide a set of values for the effective recovery rate and RPL.
- the RPL table may be associated with multiple packet loss models, and each model may include a separate further table for looking up effective recovery rates.
- FIG. 3 is a method 300 for generating a video model parameter table in accordance with aspects of the invention.
- the method 300 determines a set of optimal parameters to determine a distortion function for a given content class of video. Videos are classified as a particular content class based upon various characteristics, such as the amount of motion in the video, the resolution of the video, a spatial texture level of the video, the color depth of the video, and the like.
- the lookup table may be used to determine an optimal set of parameters to best fit simulated distortion values of a given content class of videos to a distortion function. These parameters are stored in the lookup table for use in the FEC lookup table generation process (see FIG. 4 ) and the media optimization process (see FIG. 5 ).
- the method 300 begins at block 302 , with a plurality of video clips.
- the video clips are analyzed to extract a set of characteristics of the videos.
- the videos may be given ratings for the spatial resolution of the video, the frame rate of the video, the amount of motion in the video, the spatial texture level of the video, or the color depth of the video.
- shorter segments of each video may be analyzed independent of the entire clip.
- the characteristics are extracted from the video using a preprocessor.
- the video may be analyzed to determine a motion level. The motion level may be determined by averaging the magnitude of all non-zero motion vectors for each analyzed frame. This averaged value is denoted as the MotionMag of the video.
- the motion vectors for the input frame may be computed from a pre-processing of the input.
- a system and method for pre-processing of video to extract motion levels and other characteristics is described in related U.S. patent application Ser. No. 13/097,267, filed Apr. 29, 2011, published as U.S. Publication No. 2012/0275511 A1, which is herein incorporated by reference in its entirety. The characteristics are associated with the particular video clip that they were extracted from, and the method 300 proceeds to block 304 .
- the video clips are associated with a particular content class.
- a content class corresponds to one or more of the characteristics as extracted at block 302 .
- a given video may be mapped to a content class of all videos with a 640 ⁇ 480 resolution, all videos with a particular motion level, or all videos with a 1920 ⁇ 1080 resolution, a particular motion level, and a 16 bit color depth.
- a video codec is simulated and mean-square error (MSE) distortion values are computed for each video of a given content class over a range of simulated network rates, packet loss values, and FEC redundancy factors.
- MSE mean-square error
- This simulation may be performed using an error resilience setting associated with the particular video codec.
- the error resilience setting determines the amount/percentage of macro-block intra-coding on the intermediate frames of the video. The more intra-coding, the more resilient the video is to packet loss.
- the error resilience of a given video is determined based on the effective recovery rate associated with the simulated values for packet loss, network rate, and FEC value, and the motion level of the video.
- This function allows for control of the ER for sources with different motion content.
- the distortion values for each simulated set of variables are stored and associated with the video content analyzed as part of the content class.
- the best model parameters for each content class are extracted. These parameters are extracted by fitting the distortion values of the videos of the content class to a distortion function.
- the model parameters of the distortion function may describe the contributions to the distortion from various effects, such as (1) intrinsic coding distortion (coding artifacts in absence of packet loss), (2) distortion changes from ER settings (more intra-blocks generally trade-offs quality with robustness) and (3) distortion from actual packet loss.
- f(ML) is a weight value based on the motion level of the video
- RPL is the residual packet loss associated with the simulated parameters
- ⁇ i , ⁇ i , and ⁇ i are the model parameter values.
- the first two parameters may capture the intrinsic coding distortion and effects of ER, while the third parameter may describe additional distortion from the effects of packet loss, for a best fit of the distortion values over a range of simulated values for packet loss, network rate, and FEC redundancy factor.
- the weight value for motion level may be determined by associating a particular weight with each motion level, such as 1 for a motion level of 0, 1.5 for a motion level of 1, or 2.0 for a motion level of 2.
- the distortion function is weighted to compensate for the fact that videos with more motion are more susceptible to distortion as a result of packet loss.
- the methods described herein are described with respect to a particular distortion function, it could also be applied to other distortion functions that model for different network interactions.
- the distortion function may factor in effects of color distortion.
- An example could include a weighted distortion function, with different weights for each color component.
- the total distortion or cost function might be modified to incorporate a delay term as follows:
- g ⁇ ( RTT T rtt ) is a smooth function that varies from a small number ( ⁇ 1) for RTT smaller than some threshold T rtt , and increases close to 1 as RTT increases to T rtt .
- This threshold parameter is application dependent, but in some examples may be T rtt ⁇ 100 ms, 200 ms, 250 ms, or the like.
- the meaning of the third term in (7) is that for small waiting time w, the third term becomes large and so the cost of the delay is important in the cost function (i.e., decoder/receiver does not want to wait). If the waiting time is large, then the cost of delay from NACK and FEC is less important to the total cost function (i.e., decoder/receiver can afford to wait).
- the method 300 stores the model parameters ⁇ i , ⁇ i , and ⁇ i in a lookup table indexed by the content class with which they are associated. In this manner the method 300 generates a lookup table for given model parameters as associated with a particular content class of video.
- a video parameter lookup table as generated by the method 300 might have a structure as such:
- the content class is defined by the resolution and motion level of the video.
- This table may be used to look up the parameters ⁇ i , ⁇ i , and ⁇ i associated with a video of a given resolution and motion level.
- the method 300 ends after constructing the table for all content classes.
- FIG. 4 is a method 400 for generating a forward error correction (FEC) table in accordance with aspects of the invention.
- the method 400 operates to create a lookup table including optimal FEC values for different content classes of videos and network state parameters.
- FEC forward error correction
- the FEC factor is determined as a function of both video content and network factors.
- an RPL table is generated, such as by the method described with respect to FIG. 2 .
- the RPL table is a table of values that describe an RPL value associated with particular values of packet loss, network rate, forward error correction, and the like.
- a video parameter table is generated, such as by the method 300 of FIG. 3 .
- the video parameter table is a table indexed by video content classes to define a set of parameters for associating a particular video with a particular cost function. The parameters define the cost function.
- a content class is selected from the video parameter table.
- the cost function could also be the alternate cost function associated with NACK, or any other cost function.
- an optimal FEC factor is calculated as a function of the content class and a set of simulated network statistics.
- the optimal FEC factor is calculated by determining a minimum of the cost function, such as the cost function D, for a given set of simulated network statistics.
- the content classes defined within the video parameter table have an optimal FEC factor calculated for each possible set of network statistics, such as network packet loss, network rate, and round trip time. Taking the minimum of the cost function in this manner ensures that the method compensates for the cost tradeoffs associated with increased FEC protection. Since the RPL is a function of the FEC protection factor and the network parameters, there is a dependency of the protection factor within the cost function.
- the FEC redundancy factor is computed separately for key (intra) frames and (delta/prediction) frames.
- Key frames include an entire image, while P frames include deltas from previous frames.
- key frames are more important to protect than P frames, so it is important to include extra FEC protection for key frames.
- a scale parameter greater than 1 may be provided to the FEC factor for key frames, or key frames may be automatically associated with a higher level FEC factor.
- the FEC factor as calculated at block 408 is stored in a FEC table.
- the FEC table is a lookup table that is indexed by a set of network parameters and a set of content classes of videos.
- a FEC table as generated by the method 400 might have a structure as such, where the table is indexed on the first four columns to determine the FEC protection factor:
- FIG. 5 is a method 500 for providing adaptive media optimization in accordance with aspects of the invention.
- the method 500 is performed by a media optimization module such as the media optimization module 120 .
- the method 500 is operable to analyze content of a video and statistics from a network and optimize encoding and transmission operations of an encoder module and a network module, respectively based on the content and statistics.
- the method 500 provides for efficient analysis such that it is suitable for use in real-time systems.
- the media optimization module 120 determines a content class of a video.
- the content class is typically determined by analyzing frames of the video for various characteristics, such as the video resolution, frame rate, motion level, spatial texture level, and color depth. Each analyzed characteristics may be used to select a particular content class for the video.
- the content class is determined by a preprocessor that examines the video and sends content class information to the media optimization module 120 .
- a given video may have a resolution of 640 ⁇ 480, a frame rate of 30 frames/second, and a motion level of 1.
- the preprocessing operations are performed by the capture module 114 .
- the media optimization module 120 selects a set of model parameters based on the content class of the video determined during block 502 .
- the content class is determined as discussed above, by analyzing frames of the video for various characteristics, such as the video spatial resolution, frame rate, motion level, spatial texture level, and color depth.
- the video parameters for example, the video content described with respect to block 502 would be looked up in the table by finding the values associated with a 640 ⁇ 480 resolution, a 30 frames/second frame rate, and a motion level of 1. These values might direct the method to the set of model parameters ⁇ i , ⁇ i , and ⁇ i as associated with a distortion function for the content class.
- the media optimization module 120 determines a set of network characteristics.
- the network characteristics may include a packet loss value, a round-trip-time to a receiver, a network rate, and the like. In some aspects, these network characteristics are determined using Real-Time Transport Control Protocol (RTCP).
- RTCP is a network protocol that can be used to provide feedback on network quality, including the network characteristics described above.
- the media optimization module 120 is responsible for creating and receiving RTCP requests. In some aspects, the RTCP requests and the data received in response may be provided by another aspect of the computer system 104 , such as the network module 114 .
- robustness options for the encoding and transmission of the video are selected in response to the network conditions and the identified distortion function parameters.
- the robustness options are selected by performing table lookups on an RPL table and a FEC table, such as the RPL table generated by the method 200 and the FEC table generated by the method 400 .
- the FEC table provides for a FEC factor based on the network statistics and the model parameters.
- the FEC factor may then be used to perform a lookup operation on the RPL table, where error resilience settings are determined as a function of the network statistics the FEC factor, and the motion level of the scene.
- the FEC factor and the network rate determines the encoding source rate, because the more of the network rate that is consumed by FEC protection factor, the less can be devoted to transmission of the source video.
- the method 500 also optimizes the source rate as a function of the determined FEC factor, network rate, and video content.
- the FEC factor and ER settings determine the maximum source rate, because the more of the network rate that is consumed by error correction and avoidance methods, the less can be devoted to transmission of the source video.
- the method also optimizes the source rate as a function of the determined FEC factor and ER setting.
- the FEC factor, the ER setting, and the source rate as determined at block 508 are used to optimize the encoding and transmission of the video.
- the optimization process is described further below (see FIG. 6 ).
- FIG. 6 is a block diagram depicting data flow throughout a system 600 for providing adaptive media optimization in accordance with aspects of the invention.
- the system 600 includes a capture module 602 , an encoder module 604 , a network module 606 , and a media optimization module 608 .
- the capture module 602 receives a video capture from a video source, such as the video source 102 .
- the source may be any type of device capable of supplying a video file or stream.
- the capture module 602 performs an analysis of the content of the video and sends the analysis to the media optimization module 608 .
- the analysis includes various content characteristics of the video, such as the frame rate, the resolution, the motion level, the spatial texture level, the color depth, and the like.
- the capture module 602 may transmit the unencoded video directly to the media optimization module 608 , and the media optimization module 608 may perform the content analysis.
- the media optimization module 608 uses the characteristic analysis to determine a content class of the video.
- the content class is then used to perform a lookup operation to determine a set of distortion model parameters for the video.
- the media optimization 608 also receives a set of network statistics, such as from RTCP.
- the network statistics are used in conjunction with the distortion model parameters to map the video and network state to a FEC factor and ER setting.
- the FEC and ER setting are determined by a lookup operation on the FEC table, the RPL table, and the motion level of the scene.
- the FEC factor and network statistics are then used to determine an ER setting in an RPL lookup table.
- the media optimization module 608 determines the encoding source bit rate for the video by subtracting the rate needed to preserve the FEC factor from the maximum/allowed network transmission bit rate.
- the media optimization module 608 may also control whether NACK is used, based upon the distortion function associated with the video content class. In some aspects, whether NACK is used is a setting as configured by the user. In such cases, different lookup tables may be provided for distortion models that account for NACK being enabled.
- the media optimization module sends the determined source rate and ER setting to the encoder module 604 to encode the video with these settings.
- the media optimization module sends the determined FEC factor to the network module to ensure the video is transmitted with the determined FEC factor.
- the encoder module 604 encodes the video with the settings as specified by the media optimization module 608 . After encoding the video, the encoder module 604 sends the encoded video to the network module 606 .
- the network module 606 packetizes and transmits the encoded video in accordance with the FEC protection settings as specified by the media optimization module 608 . In some aspects, the network module 606 also receives instructions from the media optimization module to enable NACK. The video is sent to the receiver from the network module 606 as one or more packets.
- the systems and methods described herein advantageously provide optimized encoding and transmission of video.
- aspects of the invention provide for an optimal mix of video robustness and quality.
- aspects of the invention ensure that the video is encoded and transmitted in the most efficient manner possible.
Abstract
Description
RPL=p−R(p,b,k,n) (Eq. 1)
where RPL is the residual packet loss, R(p,b,k,n) is the effective recovery rate, p is the input/received packet loss, b is the burst length of the packet loss, k is the total number of source packets, and n is the total number of packets.
where MTU is the maximum network packet size (˜1400 bytes, for example), Rt is the network rate, and FR is the average frame rate of the incoming video. The amount of FEC packets is given as n−k. The FEC redundancy, (Δ, the protection ratio provided by FEC) is defined as:
The three parameters (p,b,R,) are input to the model to determine an effective recovery rate.
may be computed for different packet loss scenarios, including random packet loss, bursty packet loss, or constant packet loss. A loss model for the packet loss events is used to determine the effective recovery rate based upon the packet loss, the number of source packets, and the number of FEC packets. Different loss models, such as a random packet loss model, a bursty packet loss model, or a consistent packet loss model, may result in different effective recovery rates. For the purposes of notational simplicity, a random (i.e. non-bursty) loss model is used, removing the term b. In aspects involving a bursty loss model, the term b would be relevant to the calculation of the effective recovery rate. The effective recovery rate is defined as:
where P(t,p,b,n) is the probability of losing t packets (from n total packets), given the packet loss rate p and the burst length b, and A(t,k,n) is the average number of packets that can be recovered when t packets (from n total packets) are lost. As mentioned above,
The quantity A(t,k,n) is the average number of packets that can be recovered from the FEC when t packets are lost, and can be obtained directly from counting possible loss configurations given the FEC code. The quantity P(t,p,b,n) is the probability of losing t packets, which depends on the packet loss model. Example models for the packet loss events are random loss (Bernoulli process), or bursty model (two-state Markov process). Other more complicated packet loss models may be used. The feedback of the network state is obtained periodically and is typically an effective packet loss rate (p) and possibly a burst length (b).
and the FEC redundancy factor (Δ). In some aspects, the table is generated by computing the RPL functions for a range of each of these factors. An example of such a table follows, where R is a selected packet loss model:
TABLE 1 | ||||
Packet | Bit | FEC | Effective | |
Loss | rate | Redundancy | Recovery Rate | Residual Packet Loss |
P1 |
|
Δ1 |
|
|
P2 |
|
Δ2 |
|
|
may be calculated from 10 kilobits to 500 kilobits, in steps of 10 kilobits, and the FEC redundancy factor value, Δ, may be computed from 0% redundancy to 50% redundancy, in steps of 1%. These exemplary ranges represent one possible aspect of the invention, and other ranges could be used as appropriate. For example the packet loss may be incremented in 0.5%, 10%, or 2% steps. Further, the bit rate may be incremented from 25 through 1000 kilobits in 5 kilobit increments. As an even further example, the FEC redundancy factor may be incremented in 0.5%, 10%, or 2% steps.
J=D=α i R S β
where D is the distortion function, Rs is the source encoding rate, which is related to the network rate and FEC redundancy as RS=Rt(1−Δ), f(ML) is a weight value based on the motion level of the video, RPL is the residual packet loss associated with the simulated parameters, and αi, βi, and γi are the model parameter values. The first two parameters may capture the intrinsic coding distortion and effects of ER, while the third parameter may describe additional distortion from the effects of packet loss, for a best fit of the distortion values over a range of simulated values for packet loss, network rate, and FEC redundancy factor. The weight value for motion level may be determined by associating a particular weight with each motion level, such as 1 for a motion level of 0, 1.5 for a motion level of 1, or 2.0 for a motion level of 2. In this manner, the distortion function is weighted to compensate for the fact that videos with more motion are more susceptible to distortion as a result of packet loss. Although the methods described herein are described with respect to a particular distortion function, it could also be applied to other distortion functions that model for different network interactions. For example, in addition to taking into account the motion level, the distortion function may factor in effects of color distortion. An example could include a weighted distortion function, with different weights for each color component.
where w is the average wait time before a frame can be rendered on the receiver, Tnack is the delay associated with sending a NACK notification, and Tfec is the delay associated with the redundant transmission of FEC packets. The quantity RTT is the network roundtrip time, and
is a smooth function that varies from a small number (<<1) for RTT smaller than some threshold Trtt, and increases close to 1 as RTT increases to Trtt. This threshold parameter is application dependent, but in some examples may be Trtt˜100 ms, 200 ms, 250 ms, or the like. The meaning of the third term in (7) is that for small waiting time w, the third term becomes large and so the cost of the delay is important in the cost function (i.e., decoder/receiver does not want to wait). If the waiting time is large, then the cost of delay from NACK and FEC is less important to the total cost function (i.e., decoder/receiver can afford to wait).
TABLE 2 | ||||
Motion | ||||
Resolution | Level | α | β | γ |
640 × 480 | 0 | α1 | β1 | γ1 |
640 × 480 | 1 | α2 | β2 | γ2 |
1920 × 1080 | 0 | α3 | β3 | γ3 |
1920 × 1080 | 1 | α4 | β4 | γ4 |
TABLE 3 | ||||
Network | Packet | Cost Function | Motion | FEC |
Rate | Loss | Parameters | Level | Protection |
Factor | ||||
Claims (22)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/103,494 US8767821B2 (en) | 2011-05-09 | 2011-05-09 | System and method for providing adaptive media optimization |
PCT/US2012/037055 WO2012154808A2 (en) | 2011-05-09 | 2012-05-09 | Providing adaptive media optimization |
US14/319,491 US9094663B1 (en) | 2011-05-09 | 2014-06-30 | System and method for providing adaptive media optimization |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/103,494 US8767821B2 (en) | 2011-05-09 | 2011-05-09 | System and method for providing adaptive media optimization |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/319,491 Continuation US9094663B1 (en) | 2011-05-09 | 2014-06-30 | System and method for providing adaptive media optimization |
Publications (2)
Publication Number | Publication Date |
---|---|
US20120287986A1 US20120287986A1 (en) | 2012-11-15 |
US8767821B2 true US8767821B2 (en) | 2014-07-01 |
Family
ID=46178782
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/103,494 Expired - Fee Related US8767821B2 (en) | 2011-05-09 | 2011-05-09 | System and method for providing adaptive media optimization |
US14/319,491 Active US9094663B1 (en) | 2011-05-09 | 2014-06-30 | System and method for providing adaptive media optimization |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/319,491 Active US9094663B1 (en) | 2011-05-09 | 2014-06-30 | System and method for providing adaptive media optimization |
Country Status (2)
Country | Link |
---|---|
US (2) | US8767821B2 (en) |
WO (1) | WO2012154808A2 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140286440A1 (en) * | 2013-03-19 | 2014-09-25 | Nvidia Corporation | Quality of service management system and method of forward error correction |
Families Citing this family (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10498359B2 (en) | 2011-07-14 | 2019-12-03 | Microsoft Technology Licensing, Llc | Correction data |
US9179352B2 (en) | 2012-06-13 | 2015-11-03 | All Purpose Networks LLC | Efficient delivery of real-time synchronous services over a wireless network |
US8565689B1 (en) | 2012-06-13 | 2013-10-22 | All Purpose Networks LLC | Optimized broadband wireless network performance through base station application server |
US9219541B2 (en) | 2012-06-13 | 2015-12-22 | All Purpose Networks LLC | Baseband data transmission and reception in an LTE wireless base station employing periodically scanning RF beam forming techniques |
US9137675B2 (en) | 2012-06-13 | 2015-09-15 | All Purpose Networks LLC | Operational constraints in LTE TDD systems using RF agile beam forming techniques |
US9125064B2 (en) | 2012-06-13 | 2015-09-01 | All Purpose Networks LLC | Efficient reduction of inter-cell interference using RF agile beam forming techniques |
US9179392B2 (en) | 2012-06-13 | 2015-11-03 | All Purpose Networks LLC | Efficient delivery of real-time asynchronous services over a wireless network |
US9882950B2 (en) | 2012-06-13 | 2018-01-30 | All Purpose Networks LLC | Methods and systems of an all purpose broadband network |
US9503927B2 (en) | 2012-06-13 | 2016-11-22 | All Purpose Networks LLC | Multiple-use wireless network |
US9179354B2 (en) * | 2012-06-13 | 2015-11-03 | All Purpose Networks LLC | Efficient delivery of real-time synchronous services over a wireless network |
US9131385B2 (en) | 2012-06-13 | 2015-09-08 | All Purpose Networks LLC | Wireless network based sensor data collection, processing, storage, and distribution |
US9084143B2 (en) | 2012-06-13 | 2015-07-14 | All Purpose Networks LLC | Network migration queuing service in a wireless network |
US9781447B1 (en) | 2012-06-21 | 2017-10-03 | Google Inc. | Correlation based inter-plane prediction encoding and decoding |
US9167268B1 (en) | 2012-08-09 | 2015-10-20 | Google Inc. | Second-order orthogonal spatial intra prediction |
US9344742B2 (en) | 2012-08-10 | 2016-05-17 | Google Inc. | Transform-domain intra prediction |
CN104838658B (en) * | 2012-12-14 | 2018-07-20 | 高通股份有限公司 | Interior views motion prediction in texture and depth views component with asymmetric spatial resolution |
US9774869B2 (en) * | 2013-03-25 | 2017-09-26 | Blackberry Limited | Resilient signal encoding |
US20160044384A1 (en) * | 2013-04-30 | 2016-02-11 | Anders Edenbrandt | Operating a terminal device in a communication system |
GB2521441B (en) * | 2013-12-20 | 2016-04-20 | Imagination Tech Ltd | Packet loss mitigation |
GB2525948B (en) * | 2014-11-04 | 2017-01-04 | Imagination Tech Ltd | Packet loss and bandwidth coordination |
CN112702630A (en) * | 2017-05-27 | 2021-04-23 | 华为技术有限公司 | Fault detection method, monitoring equipment and network equipment |
SE542531C2 (en) | 2017-12-22 | 2020-06-02 | Epiroc Rock Drills Ab | Controlling communication of a mining and/or construction machine |
WO2019135830A1 (en) | 2018-01-08 | 2019-07-11 | All Purpose Networks, Inc. | Internet of things system with efficient and secure communications network |
US10827019B2 (en) | 2018-01-08 | 2020-11-03 | All Purpose Networks, Inc. | Publish-subscribe broker network overlay system |
RU2732786C1 (en) * | 2020-03-24 | 2020-09-22 | Общество с ограниченной ответственность "Игровые решения" (ООО "Игровые решения") | Method and system for estimating network throughput when transmitting video signal |
CN115918091A (en) * | 2020-06-19 | 2023-04-04 | 高通股份有限公司 | Method and apparatus for reliable video transmission using acknowledgement messages |
US11683239B2 (en) * | 2021-05-12 | 2023-06-20 | L3Harris Technologies, Inc. | Synchronizing dynamic link budgets with FPGA based simulation waveform state machines |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6732323B1 (en) * | 2000-10-12 | 2004-05-04 | 3Com Corporation | Method of selecting initialization parameters for multi-channel data communication with forward error correction |
US20090219990A1 (en) * | 2005-08-30 | 2009-09-03 | Liqiao Han | Cross-Layer Optimization for Scalable Video Multicast over IEEE 802.11 Wireless Local Area Networks |
US8018850B2 (en) * | 2004-02-23 | 2011-09-13 | Sharp Laboratories Of America, Inc. | Wireless video transmission system |
US20120230390A1 (en) * | 2011-03-08 | 2012-09-13 | Gun Akkor | Adaptive Control of Encoders for Continuous Data Streaming |
Family Cites Families (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5675384A (en) | 1995-10-03 | 1997-10-07 | Nec Usa, Inc. | VBR MPEG video encoding for ATM networks with dynamic bandwidth renegotiation |
US6075768A (en) | 1995-11-09 | 2000-06-13 | At&T Corporation | Fair bandwidth sharing for video traffic sources using distributed feedback control |
US6141053A (en) | 1997-01-03 | 2000-10-31 | Saukkonen; Jukka I. | Method of optimizing bandwidth for transmitting compressed video data streams |
US6240103B1 (en) | 1997-03-21 | 2001-05-29 | Scientific-Atlanta, Inc. | Method and apparatus for detecting and preventing bandwidth overflow in a statistical multiplexer |
US6404738B1 (en) | 1998-01-21 | 2002-06-11 | Nec Usa, Inc. | Dynamic network bandwidth allocation for multimedia applications with soft quality-of-service requirements |
US6771703B1 (en) | 2000-06-30 | 2004-08-03 | Emc Corporation | Efficient scaling of nonscalable MPEG-2 Video |
FI109394B (en) | 2000-10-20 | 2002-07-15 | Hantro Products Oy | Method and apparatus for encoding and decoding a video image |
US6937770B1 (en) | 2000-12-28 | 2005-08-30 | Emc Corporation | Adaptive bit rate control for rate reduction of MPEG coded video |
FI109635B (en) | 2001-02-01 | 2002-09-13 | Hantro Products Oy | Method and device for post-processing video image |
FI109634B (en) | 2001-02-16 | 2002-09-13 | Hantro Products Oy | Method and apparatus for encoding a video image |
FI109395B (en) | 2001-03-27 | 2002-07-15 | Hantro Products Oy | Stabilizing video images by filming a scene larger than the image and compensating camera motion by shifting the image within the film scene in a direction opposite to a predicted camera motion |
US7773670B1 (en) | 2001-06-05 | 2010-08-10 | At+T Intellectual Property Ii, L.P. | Method of content adaptive video encoding |
US6535238B1 (en) | 2001-10-23 | 2003-03-18 | International Business Machines Corporation | Method and apparatus for automatically scaling processor resource usage during video conferencing |
FI110745B (en) | 2001-11-13 | 2003-03-14 | Hantro Products Oy | Encoding successive images has reference image divided into parts which includes 4x4 pixels referred to with indexes and number is formed from the values of pixels in each part to describe pixel values in a given part |
US7584475B1 (en) | 2003-11-20 | 2009-09-01 | Nvidia Corporation | Managing a video encoder to facilitate loading and executing another program |
JP2007535875A (en) * | 2004-04-30 | 2007-12-06 | ワールドゲイト・サービス・インコーポレイテッド | Adaptive video phone system |
US20060062481A1 (en) | 2004-09-21 | 2006-03-23 | Markus Suvanto | Apparatuses, computer program product and method for bit rate control of digital image encoder |
US20060188014A1 (en) | 2005-02-23 | 2006-08-24 | Civanlar M R | Video coding and adaptation by semantics-driven resolution control for transport and storage |
AR052601A1 (en) | 2005-03-10 | 2007-03-21 | Qualcomm Inc | CLASSIFICATION OF CONTENTS FOR MULTIMEDIA PROCESSING |
US20060285598A1 (en) | 2005-06-17 | 2006-12-21 | Jarno Tulkki | Apparatuses, computer program product and method for digital image quality improvement |
US20070009034A1 (en) | 2005-07-05 | 2007-01-11 | Jarno Tulkki | Apparatuses, computer program product, and method for digital image processing |
US9544602B2 (en) * | 2005-12-30 | 2017-01-10 | Sharp Laboratories Of America, Inc. | Wireless video transmission system |
CN101778275B (en) | 2009-01-09 | 2012-05-02 | 深圳市融创天下科技股份有限公司 | Image processing method of self-adaptive time domain and spatial domain resolution ratio frame |
GB2484061A (en) * | 2010-06-22 | 2012-04-04 | Gi Provision Ltd | Optimising target bit rate for wireless transmission of multiple video streams |
US20120275511A1 (en) | 2011-04-29 | 2012-11-01 | Google Inc. | System and method for providing content aware video adaptation |
-
2011
- 2011-05-09 US US13/103,494 patent/US8767821B2/en not_active Expired - Fee Related
-
2012
- 2012-05-09 WO PCT/US2012/037055 patent/WO2012154808A2/en active Application Filing
-
2014
- 2014-06-30 US US14/319,491 patent/US9094663B1/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6732323B1 (en) * | 2000-10-12 | 2004-05-04 | 3Com Corporation | Method of selecting initialization parameters for multi-channel data communication with forward error correction |
US8018850B2 (en) * | 2004-02-23 | 2011-09-13 | Sharp Laboratories Of America, Inc. | Wireless video transmission system |
US20090219990A1 (en) * | 2005-08-30 | 2009-09-03 | Liqiao Han | Cross-Layer Optimization for Scalable Video Multicast over IEEE 802.11 Wireless Local Area Networks |
US20120230390A1 (en) * | 2011-03-08 | 2012-09-13 | Gun Akkor | Adaptive Control of Encoders for Continuous Data Streaming |
Non-Patent Citations (5)
Title |
---|
Hartanto et al., Local and Metropolitan Area Networks, 1999. Selected Papers. 10th IEEE Workshop, 126-132 (1999). |
Qu et al, Vehicular Technology Conference, VTC 2003-Fall. 2003 IEEE 58th, vol. 5; 3395-3399 (2003). |
Wen et al., 2005 IEEE International Conference on Multimedia and Expo, 4 pages (2006). |
Yuk et al., IEEE Transactions on Multimedia, 3(3); 366-374 (2001). |
Zhai et al., IEEE Transactions on Image Processing, 15(1); 40-53 (2006). |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140286440A1 (en) * | 2013-03-19 | 2014-09-25 | Nvidia Corporation | Quality of service management system and method of forward error correction |
Also Published As
Publication number | Publication date |
---|---|
WO2012154808A2 (en) | 2012-11-15 |
US20120287986A1 (en) | 2012-11-15 |
US9094663B1 (en) | 2015-07-28 |
WO2012154808A3 (en) | 2013-02-21 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8767821B2 (en) | System and method for providing adaptive media optimization | |
US20120275511A1 (en) | System and method for providing content aware video adaptation | |
US10542064B2 (en) | Method, server side and system for computing bandwidth of network transmission of streaming media | |
EP2888844B1 (en) | Device and method for adaptive rate multimedia communications on a wireless network | |
US9106787B1 (en) | Apparatus and method for media transmission bandwidth control using bandwidth estimation | |
CN102685472B (en) | Method, device and system of data transmission | |
CN113271316B (en) | Multimedia data transmission control method and device, storage medium and electronic equipment | |
CN102450014B (en) | Video optimized method and video optimizer is perceived for quality | |
EP2888845B1 (en) | Device and method for adaptive rate multimedia communications on a wireless network | |
US8750293B2 (en) | Apparatus and method for rendering video with retransmission delay | |
CN103999471A (en) | Rate-distortion-complexity optimization of video encoding guided by video description length | |
US8621313B2 (en) | Method and a device for adapting error protection in a communication network, and a method and device for detecting between two states of a communication network corresponding to different losses of data | |
US8249070B2 (en) | Methods and apparatuses for performing scene adaptive rate control | |
CN113452676B (en) | Detector distribution method and Internet of things detection system | |
US20170142029A1 (en) | Method for data rate adaption in online media services, electronic device, and non-transitory computer-readable storage medium | |
US11089334B1 (en) | Methods and systems for maintaining quality of experience in real-time live video streaming | |
Edwards et al. | Quality of information-aware mobile applications | |
US9009344B2 (en) | Method of sending data and associated device | |
CN114064394A (en) | Safety monitoring method and device based on edge calculation and terminal equipment | |
US20230130410A1 (en) | Generating quantization tables for image compression | |
Reble et al. | Control over erasure channels: stochastic stability and performance of packetized unconstrained model predictive control | |
CN115767146A (en) | Data flow control method, system, device, electronic equipment and storage medium | |
CN116800371A (en) | Data processing method, device, equipment and readable storage medium | |
CN117014637B (en) | Media data transmission control method, device, computer equipment and storage medium | |
CN114845119B (en) | Thing allies oneself with gateway and verifies and compression system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:PANICONI, MARCO;KOZICA, ERMIN;SIGNING DATES FROM 20110504 TO 20110505;REEL/FRAME:026258/0217 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220701 |
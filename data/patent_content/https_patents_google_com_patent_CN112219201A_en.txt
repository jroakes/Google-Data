CN112219201A - Triggering local extensions based on inferred intent - Google Patents
Triggering local extensions based on inferred intent Download PDFInfo
- Publication number
- CN112219201A CN112219201A CN201980020444.2A CN201980020444A CN112219201A CN 112219201 A CN112219201 A CN 112219201A CN 201980020444 A CN201980020444 A CN 201980020444A CN 112219201 A CN112219201 A CN 112219201A
- Authority
- CN
- China
- Prior art keywords
- query
- search
- local
- cluster
- intent
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims abstract description 79
- 238000004590 computer program Methods 0.000 claims abstract description 24
- 230000015654 memory Effects 0.000 claims description 45
- 230000004044 response Effects 0.000 claims description 41
- 238000012545 processing Methods 0.000 claims description 28
- 230000002452 interceptive effect Effects 0.000 claims description 21
- 238000004891 communication Methods 0.000 claims description 19
- 230000001960 triggered effect Effects 0.000 claims description 18
- 230000003993 interaction Effects 0.000 claims description 15
- 230000008569 process Effects 0.000 description 44
- 238000010586 diagram Methods 0.000 description 12
- 230000005540 biological transmission Effects 0.000 description 8
- 238000013515 script Methods 0.000 description 8
- 230000009471 action Effects 0.000 description 7
- 238000004458 analytical method Methods 0.000 description 7
- 238000013473 artificial intelligence Methods 0.000 description 4
- 230000006870 function Effects 0.000 description 4
- 230000000007 visual effect Effects 0.000 description 4
- 238000013528 artificial neural network Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 3
- 238000009877 rendering Methods 0.000 description 3
- 230000001413 cellular effect Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 230000006872 improvement Effects 0.000 description 2
- 238000003032 molecular docking Methods 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 230000000644 propagated effect Effects 0.000 description 2
- 238000012797 qualification Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000000638 solvent extraction Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 238000004422 calculation algorithm Methods 0.000 description 1
- 239000002131 composite material Substances 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 230000003111 delayed effect Effects 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000011156 evaluation Methods 0.000 description 1
- 238000012854 evaluation process Methods 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 230000003116 impacting effect Effects 0.000 description 1
- 238000009434 installation Methods 0.000 description 1
- 238000002955 isolation Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 239000003550 marker Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 239000000047 product Substances 0.000 description 1
- 230000011218 segmentation Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2455—Query execution
- G06F16/24564—Applying rules; Deductive queries
- G06F16/24565—Triggers; Constraints
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/242—Query formulation
- G06F16/2428—Query predicate definition using graphical user interfaces, including menus and forms
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24575—Query processing with adaptation to user needs using context
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2458—Special types of queries, e.g. statistical queries, fuzzy queries or distributed queries
- G06F16/2471—Distributed queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/25—Integrating or interfacing systems involving database management systems
- G06F16/252—Integrating or interfacing systems involving database management systems between a Database Management System and a front-end application
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/28—Databases characterised by their database models, e.g. relational or object models
- G06F16/284—Relational databases
- G06F16/285—Clustering or classification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90324—Query formulation using system suggestions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90332—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/90335—Query processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/907—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/909—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using geographical or spatial information, e.g. location
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/04—Inference or reasoning models
Abstract
Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for obtaining cluster data, determining a portion of a search query within a given query cluster that triggers a local search feature, assigning a value to an intent flag indicating that the given cluster is a high local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature satisfies a local intent threshold, assigning a value to the intent flag indicating that the given cluster is a low local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold, and modifying a content item including adding a local content feature to the content item when the search query is determined to be included in the high local intent cluster.
Description
Background
The internet provides access to a variety of electronic documents, such as image files, audio files, video files, and web pages. The search system may identify electronic documents that are responsive to the search query. The search query may include one or more search terms, images, audio data, or a combination thereof.
The digital content system may provide content to the user in response to a particular search query. The digital content provider may periodically desire the ability to provide adjusted content to the user when the user's search query contains location intent.
Disclosure of Invention
This specification describes technologies relating to modifying the distribution of content to a user based on a determined local intent of a submitted search query provided by the same content provider.
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include obtaining, by one or more computers, cluster data that includes a plurality of query clusters, where each query cluster is a set of search queries that have been included in the same query cluster based on one or more matching query features. For each given query cluster among the plurality of query clusters, determining, by the one or more computers, a portion of the search query within the given query cluster that triggers a local search feature when input to the search system; determining whether a portion of the search query within a given query cluster that triggers a local search feature satisfies a local intent threshold; based on a determination by the one or more computers of whether the portion of the search query within the given query cluster that triggers the local search feature satisfies a local intent threshold, maintaining, in one or more computer-accessible memories, an intent flag for the given query cluster, including assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a high local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold; and assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a low local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold. The method further comprises the following steps: receiving, by one or more computers, a search query submitted by a client device and an indication of one of a plurality of clusters that includes the search query; accessing, by one or more computers, an intent flag associated with one of a plurality of clusters to determine whether the search query is included in a high local intent cluster or a low local intent cluster; and in response to the search query, including when the search query is determined to be included in a high local intent cluster, modifying, by the one or more computers in response to the search query, content items distributed to the client device, including adding local content features (local content features) to the content items, and when the search query is determined to be included in a low local intent cluster, distributing, by the one or more computers in response to the search query, the content items distributed to the client device without adding local content features.
These and other embodiments may each optionally include one or more of the following features.
In some examples, determining the portion of the search queries within the given cluster of queries that trigger the local search feature when input to the search system includes, for each given search query within the given cluster of queries, determining whether the given query triggers presentation (presentation) of a local knowledge panel in a search results page generated by the search system using the given search query, determining a total number of the given search queries that trigger presentation of the local knowledge panel, and determining the portion of the search queries based on a ratio of the total number of the given search queries that trigger presentation of the local knowledge panel to how many search queries are in the given cluster of queries.
In some examples, determining the portion of the search query within the given cluster of queries that triggers the local search feature when input to the search system includes, for each given search query within the given cluster of queries, determining whether the given query includes a local attribute that triggers presentation of one or more local elements in a search results page generated by the search system using the given search query, determining a total number of the given search query that triggers presentation of the one or more local elements, and determining the portion of the search query based on a ratio of the total number of the given search query that triggers presentation of the one or more local elements relative to how many search queries in the given cluster of queries.
In some examples, determining whether the search query is included in a high local intent cluster or a low local intent cluster, searching a plurality of different query clusters using the search query, determining whether a given query cluster determined to include the search query based on the searching has been assigned a value indicative of an intent flag that is a high local intent cluster or a low local intent cluster, and assigning a value to the intent flag that indicates that the search query is a high local intent query or a low local intent query based on the determined assigned value of the intent flag for the given query cluster that includes the search query.
In some examples, determining whether the search query is included in a high local intent cluster or a low local intent cluster, identifying the search query in a database of search queries, determining whether a high local intent flag or a low local intent flag has been set for the search query in the database, and assigning a value to the intent flag indicating that the search query is a high local intent query or a low local intent query based on the determination that the high local intent flag or the low local intent flag has been set for the search query in the database.
In some examples, the added local content feature of the modified content item comprises an interactive user interface object, and the method further comprises receiving information specifying an interaction with the interactive user interface object, and providing data causing presentation of additional content, the additional content being selected based on the interaction.
In some examples, when the search query is determined to be included in a high local intent cluster, adding the local content feature to the content item includes adding the local content feature as a graphical overlay (overlay) on the content item.
Other embodiments of this aspect may include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
In general, another innovative aspect of the subject matter described in this specification can be embodied in systems that include a data processing apparatus and a non-transitory computer-readable storage medium in data communication with the data processing apparatus and storing instructions executable by the data processing apparatus, and that, upon such execution, cause the data processing apparatus to perform operations. The operations include obtaining, by one or more computers, cluster data comprising a plurality of query clusters, wherein each query cluster is a set of search queries that have been included in the same query cluster based on one or more matching query features. For each given query cluster among the plurality of query clusters, the operations further comprise: determining, by one or more computers, a portion of a search query within a given query cluster that triggers a local search feature when input to a search system; determining whether a portion of the search query within a given query cluster that triggers a local search feature satisfies a local intent threshold; based on a determination by the one or more computers of whether the portion of the search query within the given query cluster that triggers the local search feature satisfies a local intent threshold, maintaining, in one or more computer-accessible memories, an intent flag for the given query cluster, including assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a high local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold; and assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a low local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold. The operations further comprise: receiving, by one or more computers, a search query submitted by a client device and an indication of one of a plurality of clusters that includes the search query; accessing, by one or more computers, an intent flag associated with one of a plurality of clusters to determine whether the search query is included in a high local intent cluster or a low local intent cluster; and in response to the search query, including when the search query is determined to be included in a high local intent cluster, modifying, by the one or more computers, the content items distributed to the client device in response to the search query, including adding local content features to the content items, and when the search query is determined to be included in a low local intent cluster, distributing, by the one or more computers, the content items distributed to the client device in response to the search query, without adding local content features.
In general, another innovative aspect of the subject matter described in this specification can be embodied in non-transitory computer storage media encoded with a computer program that includes instructions that, when executed by data processing apparatus, cause the data processing apparatus to perform operations. The operations include obtaining, by one or more computers, cluster data comprising a plurality of query clusters, wherein each query cluster is a set of search queries that have been included in the same query cluster based on one or more matching query features. For each given query cluster among the plurality of query clusters, the operations further comprise: determining, by one or more computers, a portion of a search query within a given query cluster that triggers a local search feature when input to a search system; determining whether a portion of the search query within a given query cluster that triggers a local search feature satisfies a local intent threshold; based on a determination by the one or more computers of whether the portion of the search query within the given query cluster that triggers the local search feature satisfies a local intent threshold, maintaining, in one or more computer-accessible memories, an intent flag for the given query cluster, including assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a high local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold; and assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a low local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold. The operations further comprise: receiving, by one or more computers, a search query submitted by a client device and an indication of one of a plurality of clusters that includes the search query; accessing, by one or more computers, an intent flag associated with one of a plurality of clusters to determine whether the search query is included in a high local intent cluster or a low local intent cluster; and in response to the search query, including when the search query is determined to be included in a high local intent cluster, modifying, by the one or more computers, the content items distributed to the client device in response to the search query, including adding local content features to the content items, and when the search query is determined to be included in a low local intent cluster, distributing, by the one or more computers, the content items distributed to the client device in response to the search query, without adding local content features.
Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. The techniques discussed herein enable a computer system to infer an intent of a query, where the intent is not directly expressive, and then utilize the intent to trigger an extension (e.g., a feature that is triggered and/or presented only when a particular condition occurs). This ability to infer intent and modify actions taken by the system based on intent that cannot be directly observed from the user input itself (e.g., a search query) enables the computer system to react differently according to the inferred intent rather than simply responding to the user input. The techniques discussed herein also enable a computer system to perform such intent-based responses to queries submitted by a user faster than using some other techniques. For example, the techniques discussed throughout this document enable a system to determine intent based on a response of a search system to a search query, and then utilize this information to inform the intent determination of the search query. Further, intent inference is performed on a cluster of all related multiple queries, and the inference is based on aggregated (aggregate) responses to queries in the cluster, such that all queries in the cluster are determined to have the same intent (e.g., local intent or non-local intent) based on aggregated search system responses to the cluster of search queries. This provides a more accurate and robust intent classification process that benefits from the search system's processing of all relevant queries in a cluster, rather than simply treating the search system's processing of a single query in isolation. This also prevents certain features of a single query (e.g., specific features related to different intents) from overriding the more general intent of the single query when considered in the context of other queries related to the single query.
In some search operations, it is desirable to provide local content features to digital content when a search query with a high positional intent is submitted, and not to provide local content features to digital content when the search query has a low positional intent. The techniques discussed herein may facilitate triggering presentation of local content features when a received search query is considered part of a high local intent query cluster and not triggering presentation of local content features when a received search query is considered part of a low local intent query cluster (or a query cluster not considered to be a high local intent query cluster). In some cases, the triggering of the local content feature results in a particular portion of the content being modified to include local intent content (or other local intent feature, such as a user interface control that triggers a further action).
Modifying content provided to a particular set or subset of users may make more efficient use of bandwidth and computing resources. For example, the amount (or size) of content (e.g., local content features) provided to a user entering a search query with high positional intent may be higher than the amount (or size) of content provided to a user entering a search query with low positional intent. At the same time, the local content features assist the user in more easily navigating to a digital content source (such as a web page), or provide local information about the digital content source directly to the user, so that the user does not need to navigate (navigator) to the digital content source, thereby reducing the time and data transfer required for the user to reach the content of interest. For example, the local content feature format may include address information, call buttons, direction buttons (if available), and the like. Thus, local content features (e.g., textual content) that do not require a long time to download may allow a user device to immediately initiate access to information from digital content. In this way, less bandwidth is utilized if the user can bypass having to use a different application on the user's device or first access the digital content website to access the location or call information now provided in the local content feature.
Moreover, partitioning an aggregated cluster of search queries into two or more subsets may improve a predictive model for automatic partitioning of clusters (clusters) of search query clusters (e.g., based on location intent of the search query). Content providers can utilize segmentation of search query clusters to specify which percentage of the local intent of the cluster should be provided with local content features and their content in response to a particular submitted query. For example, if the submitted search query belongs to a cluster determined to be greater than or equal to a local intent threshold (such as 60% or some other suitable amount), a given content provider may specify that local content features should be provided with the digital content results. Further, queries that have been grouped into clusters and that have been assigned a value of an intent flag indicating that the query cluster is a high local intent query cluster or a low local intent query cluster provide more efficient utilization of computing resources and reduce errors (e.g., layout errors within a web page) due to failing to provide or delaying providing content features. For example, after submitting a query, a digital content provider may quickly access a local intent database to determine (e.g., based on a threshold) whether the query is of high or low local intent and whether to provide local content features without having to access other databases or initiate further network data transactions (transactions). In this way, the determination of whether to provide local content features may be made more quickly with less memory/storage access and network transactions than if a search system were used to provide the information or the digital content system would make the determination as a separate process.
Further, in accordance with one or more embodiments, by determining the location intent of a query, previously unavailable information can be utilized to further enhance the analysis tool. For example, the enhanced data may improve the accuracy of predicting various results related to content, and in turn improve current systems used by content providers and content distributors to optimize the distribution of content to users based on the location intent of a search query. Such improvements to current systems may enable users to receive content that is more in line with their interests while reducing the amount of content that these users receive that is less relevant. Thus, for example, by filtering content provided to a given user based on the location intent of the query, the improvements discussed herein may result in a more personalized and more efficient (e.g., in terms of bandwidth usage) online browsing experience.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
Fig. 1A and 1B are block diagrams of example environments for distributing content.
FIG. 2 is a system flow diagram of an example local intent system for analyzing query data.
Fig. 3A and 3B are example screenshots of a mobile device presenting display data describing query results based on local intent of the query.
Fig. 4A and 4B are exemplary diagrams of digital content.
FIG. 5 is a flow diagram of an example process for using a local intent system.
Fig. 6 is a flow chart of an example process for using the digital component distribution system.
FIG. 7 is a block diagram of an example computer system that may be used to implement the methods, systems, and processes described in this disclosure.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
Systems, methods, and computer program products are described for modifying content and/or distributing content to users based on determined local intent of submitted search queries. For example, this document discusses determining a local intent of a query and triggering modification of a numeric component when the local intent of the query is determined to be above a threshold, such as, for example, including a local extension of the numeric component (e.g., phone number, address, map). Local extensions are format options that can be applied to the digital component. Some examples of local extensions include address information, call buttons, direction buttons (if available), and the like. Local extensions (also referred to herein as local content features) help a user more easily navigate to, or obtain information associated with, digital component sources.
As discussed in more detail below, local intent query cluster data is determined by analyzing existing clusters of queries provided by a pre-existing clustering algorithm, and local intent of each cluster is determined. In some cases, the local intent of each given cluster is determined based on the portion (e.g., percentage) of the query within the cluster that triggers local search features within the search system. For example, the local intent of each given cluster may be determined based on the percentage of queries in the cluster that trigger local features within the knowledge panel in search results generated using the queries. Once the local intent of a cluster of queries is determined, the received query may be assigned a value of an intent flag that indicates that the received query is a local intent query when the received query belongs to a cluster deemed to have sufficient local intent, and the digital content of the local intent query may be modified to include local content features, such as local extensions, before being provided in response to the query. An exemplary diagram illustrating local content features with digital content components is shown in fig. 4B.
These functions and additional functions will be described in detail below. For simplicity, the following description refers to user navigation among web pages and websites, but the description is also applicable to combinations of native (native) applications and/or different internet connection resources.
Fig. 1A and 1B are block diagrams of example environments 100A and 100B in which digital components are distributed for presentation on a client device using electronic documents. The example environment 100A includes a network 102, such as a Local Area Network (LAN), Wide Area Network (WAN), the internet, or a combination thereof. Network 102 connects electronic document server 104, client devices 106, digital component server 108, digital component distribution system 110 (also referred to as component distribution system or DCDS), clustering system 130, local intent system 140, and search system 160. The example environment 100 may include a plurality of different electronic document servers 104, client devices 106, and digital component servers 108.
The client device 106 is an electronic device capable of requesting and receiving resources over the network 102. Example client devices 106 include personal computers, mobile communication devices (e.g., smartphones), and other devices capable of sending and receiving data over the network 102 (e.g., tablet devices or wearable computing devices). The client device 106 typically includes a user application, such as a web browser, to facilitate sending and receiving data over the network 102, although a native application executed by the client device 106 may also facilitate sending and receiving data over the network 102.
In another example, the electronic document server 104 may include an application server from which the client device 106 may download applications. In this example, the client device 106 may download files needed to install the application at the client device 106 and then execute the downloaded application locally.
An electronic document is data that presents a set of content at a client device 106. Examples of electronic documents include web pages, word processing documents, Portable Document Format (PDF) documents, images, videos, search result pages, and feed sources. Native applications (e.g., "applications (apps)"), such as applications installed on mobile, tablet, or desktop computing devices, are also examples of electronic documents. The Electronic document may be provided to the client device 106 by an Electronic document Server 104 ("Electronic Doc Server"). For example, the electronic document server 104 may include a server hosting (host) a publisher's website. In this example, the client device 106 may initiate a request for a given publisher web page, and the electronic document server 104 hosting the given publisher web page may respond to the request by sending machine-executable instructions that initiate presentation of the given web page at the client device 106.
The electronic document may include various contents. For example, the electronic document may include static content (e.g., text or other specified content) that is within the electronic document itself and/or that does not change over time. The electronic document may also include dynamic content that may change over time or upon request. For example, a publisher of a given electronic document may maintain a data source for populating portions of the (post) electronic document. In this example, a given electronic document may include one or more tags or scripts that cause the client device 106 to request content from a data source when the given electronic document is processed (e.g., rendered or executed) by the client device 106. The client device 106 integrates the content obtained from the data source into a given electronic document to create a composite electronic document that includes the content obtained from the data source. An electronic document (also simply referred to as a document for brevity) does not necessarily correspond to a file. A document may be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files. The electronic document may be in the form of a web page, a native application user interface, or other suitable electronic format.
As used throughout this document, the phrase "digital component" refers to a discrete unit of digital content or digital information (e.g., a video clip, an audio clip, a multimedia clip, an image, text, or another unit of content). The digital component may be electronically stored in the physical memory device as a single file or collection of files, and the digital component may take the form of a video file, audio file, multimedia file, image file, or text file, and include advertising information such that the advertisement is a type of digital component.
In some cases, a given electronic document may include one or more digital component tags or digital component scripts that reference the digital component distribution system 110. In these cases, the digital component tag or digital component script is executed by the client device 106 when the client device 106 processes a given electronic document. Execution of the digital component tag or digital component script configures the client device 106 to generate a request for one or more digital components 112 (referred to as a "component request") that is transmitted over the network 102 to a digital component distribution system 110 that includes one or more digital component servers. For example, a digital component tag or digital component script may enable client device 106 to generate a packetized data request including a header and payload data. Component request 112 may include event data specifying characteristics, such as the name (or network location) of the server from which the digital component was requested, the name (or network location) of the requesting device (e.g., client device 106), and/or information that digital component distribution system 110 may use to select one or more digital components to provide in response to the request. The component request 112 is transmitted by the client device 106 to a server of the digital component distribution system 110 over the network 102 (e.g., a telecommunications network).
The artificial intelligence assistant may be implemented in a variety of devices, such as a mobile phone, a tablet device, a desktop computing device, a television, an appliance, or a dedicated assistant device. Devices that include artificial intelligence assistants typically include a microphone that receives voice input (e.g., such as commands and/or search queries) from a user and a speaker that provides an audible response to the user's voice input. These devices may also include a display capable of providing visual feedback and/or communicatively connecting to other devices (e.g., a television or other display or other speakers) to provide audio and/or visual information to a user.
In some implementations, the digital component distribution system 110 is implemented in a distributed computing system to process component requests and provide one or more digital components in response to the requests within a limited time (e.g., less than one second) to do so. For example, a distributed computing system includes a server and a set of multiple computing devices 114 that interconnect and identify and distribute digital components in response to requests 112. The set of multiple computing devices 114 operate together to identify a set of digital components (and corresponding local content features, if available) that qualify for presentation in an electronic document from among a corpus of millions of available digital components (DC 1-x). For example, millions of available digital components may be indexed in the digital component database 115. For example, the associated local content features for each respective digital component may be indexed in the local content features database 116 (if available), where each digital component index entry may reference a respective local content feature (LCF 1-LCFx). Each digital component index entry in digital component database 115 may reference a corresponding digital component and/or include distribution parameters (DP1-DPx) that facilitate (e.g., affect or limit) distribution/transmission of the corresponding digital component. For example, the distribution parameters may facilitate transmission of the digital component by requiring that the component request include at least one criterion that matches (e.g., exactly matches or has some pre-specified level of similarity to) one of the distribution parameters of the digital component. Further, when it is determined from the component request that the query matches a cluster of queries determined to be a high local intent cluster, the distribution parameters may facilitate transmission of the digital component by requesting local content features to be included in the transmission of the digital component. The transmission including the local content features and the digital component is shown in fig. 3B, 4B and described further below.
In some implementations, the distribution parameters for a particular digital component can include distribution keywords that must be matched (e.g., by electronic document, document keywords, search query, or terms specified in component request 112) in order for the digital component to qualify for presentation. In other words, the distribution parameters are used to trigger distribution (e.g., transmission) of the digital components and distribution of the corresponding local content features of the high local intent query over the network 102. The distribution parameters may also require that the component request 112 include information specifying a particular geographic area (e.g., country or state) and/or information specifying that the component request 112 originates from a particular type of client device (e.g., desktop device, mobile device, or tablet device) in order for the digital component to qualify for presentation. The distribution parameters may also specify a qualification value (e.g., a ranking score, a bid, or some other specified value) that is used to evaluate the digital component's qualification for distribution/transmission (e.g., among other available digital components).
The identification of qualifying digital components may be segmented (e.g., by the server) into a plurality of tasks 117a-117c, which are then distributed (e.g., by the server) among the computing devices (e.g., 114b, and 114c) within the collection 114. For example, different computing devices in set 114 may each analyze different portions of digital component database 115 to identify various digital components having distribution parameters that match information included in component request 112. Further, if a query is determined from component request 112, different computing devices in set 114 may each analyze different portions of local content features 116 to identify respective local content features associated with each respective digital component.
In some implementations, each given computing device in the set 114 can analyze a different data dimension (or set of dimensions) and communicate (e.g., transmit) the results of the analysis (Res 1-Res 3)118 a-118c back to the digital component distribution system 110. For example, the results 118a-118c provided by each computing device in the set 114 may identify a subset of digital components that are eligible for distribution in response to the component request 112 and/or a subset of digital components having particular distribution parameters. The identification of the subset of digital components may include, for example, comparing the event data to distribution parameters and identifying the subset of digital components having distribution parameters that match at least some characteristics of the event data.
In some implementations, the analysis results (Res 1-Res 3)118 a-118c from each given computing device in the set 114 include (LCF 1-LCF 3)119 a-119c in the same transmission, which is sent as a modified result to the digital component distribution system 110. For example, as described below, the results 118a-118c and local content features 119a-119c provided by each computing device in the set 114 may identify a subset of digital components and local content features that qualify for distribution in response to the component request 112 based on local intent analysis.
The digital component distribution system 110 aggregates the results 118a-118c received from the set of multiple computing devices 114 and uses information associated with the aggregated results to select one or more digital components to be provided in response to the request 112. As described below, the digital component distribution system 110 aggregates the results 118a-118c into an unmodified aggregated result when it is determined that no local content features are requested based on local intent analysis. Alternatively, when it is determined that local content characteristics are requested based on local intent analysis, the digital component distribution system 110 aggregates the results 118a-118c and the local content characteristics 119a-199c into a modified aggregated result. For example, the digital component distribution system 110 may select a set of digital components (one or more digital components) based on the results of one or more component evaluation processes. In turn, the digital component distribution system 110 may generate and transmit reply data 120 (e.g., digital data representing a reply) over the network 102, the reply data 120 enabling the client device 106 to integrate the set of digital components and the corresponding local content features (if applicable) into a given electronic document such that the set of digital components and the content of the electronic document are presented together on a display of the client device 106 (e.g., without the local content features as shown in fig. 3A and with the local content features as shown in fig. 3B).
In some implementations, the client device 106 executes instructions included in the reply data 120 that configure and enable the client device 106 to obtain a set of digital components and corresponding local content features (if applicable) from one or more digital component servers 108. For example, the instructions in reply data 120 may include a network location (e.g., a Uniform Resource Locator (URL)) and a script that causes client device 106 to transmit a Server Request (SR) 121 to digital component server 108 to obtain a given digital component from digital component server 108. In response to the request, digital component server 108 will identify the given digital component specified in server request 121 (e.g., within a database storing a plurality of digital components) and transmit digital component data (DC data) 122 to client device 106 that renders the given digital component in an electronic document at client device 106.
To facilitate searching of electronic documents, the environment 100 may include a search system 160 that identifies electronic documents by crawling (crawl) and indexing the electronic documents (e.g., indexing based on crawl content of the electronic documents). Data about the electronic document may be indexed based on the electronic document associated with the data. The indexed copies and optionally cached copies of the electronic documents are stored in a search index (e.g., hardware memory device (s)). The data associated with the electronic document is data representing content included in the electronic document and/or metadata of the electronic document.
The search system 160 may generate and maintain a historical query log. For each of a large number (e.g., millions) of search queries previously processed by the search system 160, the historical query log indexes the previous search queries by maintaining data specifying: (i) a previous search query, (ii) search results provided by the search system 160 in response to the previous search query, (iii) data on which the search query and/or search results triggered generation of local knowledge panel features, and (iv) user selection data specifying one or more search results selected by a user of the client device transmitting the previous search query.
The search index and historical query logs are stored within a query data store 162, which query data store 162 is accessible by the search system 160 and also by the clustering system 130 and the local intent system 140, as will be described below. In some implementations, the search index and the historical query log are separate databases.
The search query submitted by the client device 106 may be used to identify one or more numeric components for presentation with the search results page. For example, the numeric component distribution system 110 can use the search query to identify numeric components having distribution parameters that match the search query (e.g., match the same or match due to a specified level of similarity, such as a phrase match or extended qualifier (qualify) under match, including plural, stub (stub), synonyms, and other variants that are sufficiently similar to the search query). The identification of one or more numeric components using the search query may be performed in a manner similar to that discussed above.
Another example search result may include a title of the downloadable application, a snippet of text describing the downloadable application, an image depicting a user interface of the downloadable application, and/or a URL of a location where the application may be downloaded to the client device 106. In some cases, the search system 160 may be part of or interact with an application store (or online portal) from which applications may be downloaded for installation on the client device 106 in order to present information about downloadable applications related to submitted search queries.
In some implementations, the search system 160 generates a knowledge panel and presents search results (or other pages) to the knowledge panel to provide data about particular entities that have been identified as relevant to the search query. A knowledge panel is a user interface element that provides information or other content related to a particular entity referenced by a search query, such as a person, place, country, landmark, animal, historical event, organization, business, sports team, sports event, movie, song, album, game, art, or any other entity. The knowledge panel may include local features, also referred to herein as local knowledge panel features. For example, the local knowledge panel features may include a map to the location of the identified entity, or the like.
Presenting the search results to the knowledge panel reduces the number of web pages that the user must visit in order to obtain the factual information the user is searching for, thereby reducing the time required for the user to find information that meets their informational needs. Knowledge panel templates developed for a particular type of entity can display content related to the entity to a user. In some implementations, the knowledge panel provides an entity with a summary of information collected from multiple different content sources, while search results generally reference a single content source. For example, a singer's knowledge panel may include the singer's name, the singer's image, a description of the singer, one or more facts about the singer, and content identifying songs and albums recorded by the singer. Other types of information and content may also be presented in the knowledge panel.
In some implementations, to trigger the knowledge panel, when a search query is received, the search system 160 can determine whether to provide search results for the search query to the knowledge panel and whether to provide local knowledge panel features. The determination may be based in part on whether the received query is determined to reference a known entity. In some implementations, the system determines whether the received query references a known entity based on a comparison of the received query or terms of the received query to an entity index that identifies the known entity and its alias (alias). If it is determined based on the comparison that a match exists, then it is determined that the received query references a known entity, and the system can provide a knowledge panel for the matching entity. If the identified entity is linked to a known local knowledge panel feature, the knowledge panel may include a local knowledge panel feature, such as a map.
In some implementations, the knowledge panel apparatus can generate a knowledge panel by populating the identified knowledge panel template with content items and provide the generated knowledge panel to the search system 160. In turn, the search system 160 may provide the identified search results and knowledge panel to the client device 106 for presentation. The knowledge panel apparatus may determine the type of entity referenced by the received search query and retrieve an appropriate knowledge panel template for the entity, including any local knowledge panel features associated with the entity. For example, an index of content items may include data identifying the type of entity of each entity indexed therein. In another example, the index of content items may include data identifying an appropriate knowledge panel template for each entity. The knowledge panel apparatus may access the index to identify an appropriate template for the entity referenced by the received search query, which may include local knowledge panel features. For example, the knowledge panel templates may include one or more "people" templates, "places" templates, "landmarks" templates, "movies" templates, "businesses" templates, "games" templates, "sports teams" templates, "sports events" templates, and/or "disambiguation" templates. A knowledge panel template for an entity of a particular type may have placeholders (placeholders) for a different content item type than a knowledge panel template for another type of entity. For example, a knowledge panel template for a country may include placeholders for a set of images for a city in the country, while a knowledge panel template for a landmark may include placeholders for a set of images for other landmarks.
The content of the knowledge panel may include content published or otherwise provided by a plurality of resources, such as a plurality of web pages. For example, the knowledge panel of landmarks may include an image of a landmark that has been published on a first web page hosted by a first publisher. The knowledge panel may also include a set of facts about the landmark published on the second web page by a second publisher different from the first publisher.
The knowledge panel may be presented inline (inline) or adjacent to or in place of other search results for the received query. For example, standard search results that provide links to resources that are deemed to be responsive to a search query may be presented on one side of a search results page and a knowledge panel may be presented on the other side of the search results page.
The clustering system 130 is used to identify query clusters, e.g., a group of search queries that have been included in the same query cluster, based on one or more matching query features. The clustering system 130 includes a query analyzer 132 and a clustering engine 134, each of which is shown as a separate engine or server. The query analyzer 132 and the clustering engine 134 are each examples of an engine implemented as a computer program on one or more computers in one or more locations that implement the systems, components, and techniques described below. Alternatively, the query analyzer 132 and the clustering engine 134 may each reside within the same server.
The query analyzer 132 processes the query data from the query data store 162 to identify one or more query features for each query. The clustering engine 134 processes the data from the query analyzer 132 to determine similarities and matches between one or more query features and generates an index of query clusters, such as query cluster-1135A, query cluster-2135B, query cluster-N135N, and the like, and sends the index of query clusters to the cluster index 136. For example, the generated clusters of queries may be grouped into a set of queries and classified as related to the same topic. Additionally or alternatively, the generated query clusters may be grouped into a set of queries and classified to provide similar search results. The clustering technique is not important to the manner in which the system determines local intent, as the local intent system 140 and processes therein may be performed on any set of clusters provided to the system, as described below.
The local intent system 140 includes a query analyzer 142 and a local intent engine 144, each of which is shown as a separate engine or server. The query analyzer 142 and the local intent engine 144 are each examples of engines implemented as computer programs on one or more computers in one or more locations that implement the systems, components, and techniques described below. Alternatively, the query analyzer 142 and the local intent engine 144 may each reside within the same server.
The query analyzer 142 receives query data from the query data store 162 to determine which queries trigger local search features, such as local features of a knowledge panel, and sends the results to the local intent engine 144. The local intent engine 144 receives cluster index data from the cluster index 136 to analyze each individual query cluster 135A, 135B, 135N, etc. The local intent engine 144 analyzes and assigns a value to each intent tag of each query cluster that indicates the local intent of each query cluster and sends the results to the local intent index 150. The local intent index 150 then stores information identifying each analyzed cluster as a high local intent query cluster or a low local intent query cluster depending on the results of the analysis from the local intent engine 144. In some implementations, separate indexes may be created such that information identifying clusters and/or queries of high local intent queries may be stored in the high local intent index 152, while information identifying clusters and/or queries of low local intent queries may be stored in the low local intent index 154. In these implementations, determining whether the user-submitted query points to a high local intent query may be performed by identifying a query cluster that includes the user-submitted query, and determining whether the query cluster is identified in the high local intent index 154. This will reduce the amount of processing required at query time so that the determination of local intent and performing operations based on that determination can be performed faster than using less efficient processes. An example data flow for the local intent system 140 for assigning values to intent flags to indicate whether each query cluster is a high local intent cluster or a low local cluster is shown in FIG. 2.
FIG. 2 is a system flow diagram of an example local intent system 140 for assigning values to intent flags of query clusters to indicate whether each query cluster is a high local intent query cluster or a low local intent query cluster. Local intent system 140 is an example of a system implemented as a computer program on one or more computers in one or more locations that implement the systems, components, and techniques described below. As described with reference to fig. 1A, the local intent system 140 may process the query cluster data to maintain an intent flag for each cluster indicating whether each cluster is a high local intent cluster or a low local intent cluster. For example, query cluster-1135A, stored in cluster index 136, is sent to local intent system 140 as query data-1210A. The local intent system 140 analyzes the query data-1210A to determine which portion (e.g., percentage) of the queries in the cluster trigger a local search feature, such as a local knowledge panel feature. The query that triggers the local search function may be referred to as a trigger query. The local intent system 140 then compares the portion of the query in the cluster that is the trigger query to a local intent threshold (e.g., X%) to assign a value to the intent flag of the particular cluster to indicate that the particular cluster is (i) a high local intent if the portion of the trigger query satisfies the local intent threshold (e.g., greater than or equal to the threshold X%), or (ii) a low local intent if the portion of the trigger query does not satisfy the local intent threshold (e.g., greater than or equal to the threshold X%). The local intent threshold may be specified by a local intent system provider, digital component distribution provider, or other entity responsible for specifying the local intent threshold.
After the local intent system 140 compares the portion of the query that triggered the query in the query cluster-1135A to the local intent threshold X% to determine that the particular cluster satisfies the threshold X%, the local intent system 140 generates local intent data-1212A and sends it to the high local intent index 152. Similarly, as shown in FIG. 2, local intent system 140 determines that query data-2210B from query cluster-2135B and query data-3210C from query cluster-3135C do not satisfy the local intent threshold, and therefore sends local intent data-2212B and local intent data-3212C to low local intent index 154. For each query data-N210N received from each respective query cluster-N135N, the process continues such that each query cluster 135 can be assigned a value of an intent flag accordingly, and information identifying the query cluster 135 and/or each individual query can be stored in the local intent index 150 for access by the search system 160 or the digital component distribution system 110.
In some implementations, query clusters can be assigned values indicating intent flags for three or more groups of query clusters depending on the number of levels or thresholds used by the local intent system 140. For example, a digital component distribution provider may desire to provide more local content feature data for queries determined to be greater than 90% (i.e., very high local intent clusters) than for those determined to be only 60% in the cluster triggering local search features (i.e., intermediate local intent clusters). Those query clusters determined to be intermediate local intent clusters may still meet the initial local intent threshold, but are not expected to provide as much data in the corresponding local content features as clusters determined to be very high local intent clusters. For example, a very high local intent cluster may include call buttons, directional buttons, and website links in the local content feature, but an intermediate local intent cluster may include only phone numbers.
The determination of whether to distribute local content features having digital components to a given user may be informed by information regarding the location intent of the submitted search query. For example, when a given user has submitted a search query, the system may determine to distribute local content features with each digital component to the given user when a high local intent of the submitted user query is determined. Conversely, when a low local intent of the submitted user query is determined, the system may determine that no local content features are to be distributed with the digital component to the given user.
A process and example of using the digital component distribution system 110 to modify the distribution of content to a user based on a determined location intent of a query is now described with reference to fig. 3-6 below.
Fig. 3A and 3B are example screenshots of a mobile device presenting display data describing query results based on a local intent of the query.
FIG. 3A is an example screen shot after a user enters a search query in which the local intent index 150 has assigned to the intent flags a value indicating that the given search query is a low local intent query, so the digital content results do not include local content features. Fig. 3A depicts a screenshot 300A of an example user interface 310 that presents low local intent query results 312 with search result output elements 314A, 314B, 314C, 314N, etc., and numeric component results 118A, 118B, 118N, etc., in accordance with a search query. In the example screenshot 300A, after a user performs a search operation in a search application, a user interface 310 of the user device 106 enables the user to select either of the search result output element 314 or the numeric component results 118.
FIG. 3B is an example screen shot after a user enters a search query, where the local intent index 150 has assigned to the intent flags a value indicating that the given search query is a high local intent query, so the digital content results include local content features. FIG. 3B depicts a screenshot 300B of an example user interface 320 that presents high local intent query results 322 with search result output elements 324A, 324B, 324C, 324N, etc., and numeric component results 118A, 118B, 118N, etc., in accordance with a search query. The digital component results 118A, 118B, 118N are shown as having respective local content features 119A, 119B, 119N, respectively, which are displayed as graphical overlays on the respective digital component results 118. Not all of the digital component results 118 need have corresponding local content features 119, as the local content features 119 may be triggered in less than all of the digital component results 118 (e.g., only in 118A). In the example screenshot 300B, after a user performs a search operation in a search application, a user interface 320 of the user device 106 enables the user to select any of the search results output element 314, the digital component results 118, or the local content features 119. For example, the local content features 119A may include both a directions/maps feature button and a call button that corresponds to an entity or subject of the respective digital component result 119A. Both the directions/map feature button and the call button may be individually selectable by the user, and upon selection, the client device 106 will launch a corresponding application to the selection button.
Fig. 4A and 4B are exemplary diagrams of digital content. In particular, FIG. 4A depicts an example numeric component result 402 for the Coffee shop "Acme Coffee," such as numeric component result 118A from FIG. 3A, without a local content feature. FIG. 4B also depicts an example numeric component result 404 for the Coffee shop "Acme Coffee," such as numeric component result 118A from FIG. 3B. However, fig. 4B includes local content features 410 as graphical overlays on the digital component results 404. As shown in fig. 4B, the local content features 410 include an address, a phone number, and a website. In addition, local content feature 410 includes interactive user interface objects 412, 414, and 416. For example, the interactive user interface object 412 corresponds to an address and, when selected (e.g., clicked or tapped), will launch a navigation application on the client device 106 or direct the user to a web browser application that navigates a website. The interactive user interface object 414 corresponds to a telephone number and, when selected (e.g., clicked or tapped), will launch a telephony application on the client device 106. The interactive user interface object 416 corresponds to a website URL of the entity's website and, when selected, will launch a web browser application that directs the user to the entity's website www.example.com. Local content feature 410 may include any combination of interactive user interface objects 412, 414, and 416. Additionally or alternatively, local content features 410 may include different features that present local features associated with digital component 404 and/or the entity "Acme Coffee" described in digital component 404. In some cases, the local content features 410 need not include any interactive user interface objects, and will only be general location information (e.g., text only).
FIG. 5 is a flow diagram of an example process 500 for using a local intent system. For example, process 500 may be implemented by local intent system 140 of fig. 1A and 2. The operations of process 500 may also be implemented as instructions stored on a non-transitory computer readable medium, and execution of the instructions by one or more data processing apparatus may cause the one or more data processing apparatus to perform the operations of process 500.
The process 500 obtains cluster data that includes a plurality of query clusters, where each query cluster is a set of search queries that have been included in the same query cluster based on one or more matching query features (502). For example, fig. 1A shows that the local intent engine 144 of the local intent system 140 receives cluster index data from the cluster index 136 to analyze each individual query cluster 135A, 135B, 135N, etc.
After obtaining cluster data, the process 500 proceeds to step 504-510 for each given query cluster among the plurality of query clusters. The process 500 determines the portion of the search query within a given query cluster that triggers a local search feature when entered into the search system (504). For example, fig. 1A shows that the query analyzer 142 of the local intent system 140 receives query data from the query data store 162 to determine which queries trigger local search features, such as local features of a knowledge panel, and sends the results to the local intent engine 144. If the identified entity is linked to a known local knowledge panel feature, the knowledge panel may include a local knowledge panel feature, such as a map. Example local knowledge panel features may also include one or more of the interactive user interface objects 412, 414, or 416 as described herein with respect to fig. 4B, which are respectively associated as a map button (e.g., navigation directions to a location), a call button, or a website.
The process 500 determines whether the portion of the search query within a given query cluster that triggers the local search feature satisfies a local intent threshold (506). For example, as described herein with respect to fig. 2, the local intent system 140 may calculate which portion (e.g., percentage) of the search query in a given query cluster triggers the local search feature and compare that portion to a specified local intent threshold (e.g., X%). For example, the local intent of each given cluster may be determined based on the percentage of queries in the cluster that trigger local features within the knowledge panel in search results generated using the queries.
When the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold, the process 500 assigns a value to the intent flag that the given cluster is a high local intent cluster (508). For example, FIG. 2 shows query cluster-1135A stored in cluster index 136, which is sent as query data-1210A to local intent system 140. The local intent system 140 then compares the portion of the query from the cluster of query data-1210A that is the trigger query to a local intent threshold (e.g., X%) to assign a value to the intent flag to indicate that the particular cluster is high local intent because the portion of the trigger query satisfies the local intent threshold (e.g., greater than or equal to the threshold X%), and thus sends local intent data-1212A to the high local intent index 152.
When the portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold, the process 500 assigns the intent indicator a value that the given cluster is a low local intent cluster (510). For example, FIG. 2 shows query cluster-2135B stored in cluster index 136 being sent to local intent system 140 as query data-2210B. Local intent system 140 then compares the portion of the query in the cluster from query data-2210B that triggered the query to a local intent threshold (e.g., X%) to assign a value to the intent flag to indicate that the particular cluster is a low local intent because the portion that triggered the query does not meet the local intent threshold, and thus sends local intent data-2212B to low local intent index 154.
In some cases, the local intent system 140 may analyze each query in each cluster to identify which queries trigger presentation of a local knowledge panel. In these cases, the process of determining the portion of the search query within the given cluster of queries that, when input to the search system, triggers the local search feature may include, for each given search query in the given cluster of queries, determining whether the given query triggers presentation of a local knowledge panel in a search results page generated by the search system using the given search query, determining a total number of the given search query that triggers presentation of the local knowledge panel, and determining the portion of the search query based on a ratio of the total number of the given search query that triggers presentation of the local knowledge panel to how many search queries in the given cluster of queries.
For example, fig. 1A depicts the query analyzer 142 of the local intent system 140 receiving query data from the query data store 162. The query analyzer 142 determines whether each query triggers presentation of a local knowledge panel in a search results page generated by the search system using a given search query and sends the results to a local intent engine 144. If the identified entity is linked to a known local knowledge panel feature, the knowledge panel may include a local knowledge panel feature, such as a map. Example local knowledge panel features may also include one or more interactive user interface objects 412, 414, or 416, as described herein and shown in fig. 4B, respectively, associated as map buttons (e.g., navigation directions to a location), call buttons, or websites. After the local intent engine 144 receives the results from the query analyzer 142 whether the query triggered presentation of a local knowledge panel in the search results page, the local intent engine 144 determines the total number of given search queries that triggered presentation of the local knowledge panel. The local intent engine 144 then determines the portion of the search query based on a ratio of the total number of given search queries that trigger presentation of the local knowledge panel relative to how many search queries are in the given query cluster.
In some cases, the local intent system 140 may analyze local attributes of each query within each query cluster to identify which queries trigger presentation of one or more local elements in the search results page. In these cases, determining the portion of the search query within the given cluster of queries that, when input to the search system, triggers the local search feature may include, for each given search query within the given cluster of queries, determining whether the given query includes a local attribute that triggers presentation of one or more local elements in a search results page generated by the search system using the given search query, determining a total number of the given search query that triggers presentation of the one or more local elements, and determining the portion of the search query based on a ratio of the total number of the given search query that triggers presentation of the one or more local elements relative to how many search queries in the given cluster of queries.
For example, fig. 1A depicts the query analyzer 142 of the local intent system 140 receiving query data from the query data store 162. The query analyzer 142 determines whether the given query includes local attributes that trigger presentation of one or more local elements in a search results page generated by the search system using the given search query, and sends the results to a local intent engine 144. Search systems, such as search system 160, use local attributes to use and present attributes of particular entities in search results. The local elements may be specific to an entity and determined by a search engine provider or a specific entity. As discussed herein, an example local element is a map feature associated with an address of an entity. However, the local element may include several different local elements that are specific to the type of entity. For example, a restaurant may notice that they accept a reservation, or they offer a gluten-free choice, a hotel may specify whether they welcome a dog, a grocery store may highlight the organic products they offer, and so on. After the local intent engine 144 receives the results from the query analyzer 142 of whether one or more local elements are present in the search results page, the local intent engine 144 then determines the total number of given search queries that triggered the presentation of the one or more local elements. The local intent engine 144 then determines the portion of the search query based on a ratio of the total number of the given search queries that triggered the presentation of the one or more local elements relative to how many search queries are in the given query cluster.
Fig. 6 is a flow diagram of an example process 600 for using a digital component distribution system. For example, process 600 may be implemented by digital component distribution system 110 of fig. 1A and 1B. The operations of process 600 may also be implemented as instructions stored on a non-transitory computer readable medium, and execution of the instructions by one or more data processing apparatus may cause the one or more data processing apparatus to perform the operations of process 600.
The process 600 receives a search query submitted by a client device and an indication of one of a plurality of clusters that includes the search query (602). For example, fig. 1B shows digital component distribution system 110 receiving component request 112 transmitted from client device 106 over network 102.
The process 600 accesses an intent flag associated with one of the plurality of clusters to determine whether the search query is included in a high local intent cluster or a low local intent cluster (604). For example, fig. 1A illustrates the digital component distribution system 110 accessing, over the network 102, information identifying intent flags indicative of high local intent query clusters and/or queries stored in the high local intent index 152, and information identifying intent flags indicative of low local intent query clusters and/or queries stored in the low local intent index 154.
If the process 600 determines that the search query is included in the high local intent query cluster, the process 600 modifies the content item distributed to the client device in response to the search query, including adding local content features to the content item (606). For example, FIG. 3B illustrates high local intent query results, such as displaying search result output elements 324A-324N and numeric component results 118A-118N with respective associated local content features 119A-119N.
If the process 600 determines that the search query is included in the low local intent query cluster, the process 600 distributes the content item distributed to the client device in response to the search query without adding local content features (608). For example, FIG. 3A illustrates low local intent query results, such as a search that displays result output elements 314A-314N and digital component results 118A-118N without local content features.
In some cases, the digital component distribution system 110 may access and search a plurality of different query clusters. In these cases, determining whether the search query is included in the high local intent cluster or the low local intent cluster may include searching a plurality of different query clusters using the search query, determining whether a given query cluster determined to include the search query based on the searching has been assigned a value indicative of an intent flag that is either the high local intent cluster or the low local intent cluster, and assigning a value to the intent flag that indicates that the search query is either the high local intent query or the low local intent query based on the determined assigned value of the intent flag for the given query cluster that includes the search query. For example, the numeric component distribution system 110 receives the search query request 112, accesses the cluster index 136 to determine which query cluster the search query is grouped in, and accesses the local intent index 150 to determine whether the assigned value of the intent flag indicates that the search query is a high local intent query or a low local intent query for the particular query cluster.
In some cases, the digital component distribution system 110 may identify the local intent markers for a given query in a search query database. In these cases, the process of determining whether the search query is included in the high local intent cluster or the low local intent cluster may include identifying the search query in a database of search queries, determining whether a high local intent flag or a low local intent flag has been set for the search query in the database, and assigning a value to the intent flag indicating that the search query is a high local intent query or a low local intent query based on the determination that the high local intent flag or the low local intent flag has been set for the search query in the database. For example, the digital component distribution system 110 receives the search query request 112, accesses a database of search queries (e.g., the query data store 162) that includes the local intent markers for each query to determine which local intent marker is set for a given query, and assigns a value to the local intent markers that indicates whether the given query is a high local intent or a low local intent corresponding to the local intent markers.
In some implementations, the added local content feature of the modified content item includes one or more interactive user interface objects, and the method further includes receiving information specifying an interaction with one of the one or more interactive user interface objects, and providing data causing presentation of additional content, the additional content being selected based on the interaction. For example, FIG. 4B shows three interactive user interface objects 412, 414, and 416. If the user selects one of the interactive user interface objects, the client device may launch the corresponding application on the client device 106 or present a web browser application that directs the user to the corresponding website of the corresponding selected interactive user interface object 412, 414, or 416.
In some implementations, the system can generate high and low local intent tags for a particular query by processing the query using a location intent model. For example, the location intent model may be a location intent neural network system that includes a location intent detection neural network. In this example, the location intent detection neural network may be configured to process the query to generate query data that includes data defining a portion of the query that may reflect the location intent interpreted from the text of the query. For example, a search system may sample a large number of queries (e.g., millions) and perform a large-scale human evaluation to label the local intent of those queries and build a machine learning model to predict the labels, i.e., the likelihood that a query has a location intent.
In some implementations, determining the local intent of the query is based on a local intent classification of a keyword that triggers distribution of the digital component. For example, keywords specified by a content provider may be classified as having high or low local intent using techniques similar to those discussed herein. Local expansion of the digital component may be triggered when a keyword triggering distribution of the digital component (e.g., matched by a search query) has a high local intent, and not triggered when a keyword triggering distribution of the digital component has a low local intent.
FIG. 7 is a block diagram of an example computing device 700, 750, which example computing device 700, 750 may implement the systems and methods described in this document as a client or server or multiple servers. Computing device 700 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Computing device 700 is also intended to represent any other typical non-mobile device, such as a television or other electronic device having one or more processors embedded therein or attached thereto. Computing device 750 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other computing devices. The components shown herein, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
The memory 704 stores information within the computing device 700. In one implementation, the memory 704 is a computer-readable medium. In one implementation, the memory 704 is a volatile memory unit or units. In another implementation, the memory 704 is a non-volatile memory unit or units.
The storage device 706 is capable of providing mass storage for the computing device 700. In one implementation, the storage device 706 is a computer-readable medium. In various different implementations, the storage device 706 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer-readable medium or machine-readable medium, such as the memory 704, the storage device 706, or memory on processor 702.
The high-speed controller 708 manages bandwidth-intensive operations for the computing device 700, while the low-speed controller 712 manages lower bandwidth-intensive operations. This allocation of duties is merely an example. In one implementation, the high-speed controller 708 is coupled to memory 704, display 716 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 710, which may accept various expansion cards (not shown). In this implementation, the low-speed controller 712 is coupled to the storage device 706 and the low-speed bus 714. For example, various communication ports (e.g., USB, etc.) may be included,
As shown, the computing device 700 may be implemented in a number of different forms. For example, it may be implemented as a standard server 720, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 724. Further, it may be implemented in a personal computer such as a laptop computer 722. Alternatively, components from computing device 700 may be combined with other components in a mobile device (not shown), such as computing device 750. Each of such devices may contain one or more of computing device 700, 750, and an entire system may be made up of multiple computing devices 700, 750 communicating with each other.
The processor 752 can process instructions for execution within the computing device 750, including instructions stored in the memory 764. The processor may also include separate analog and digital processors. For example, the processor may provide for coordination of the other components of the computing device 750, such as control of user interfaces, applications run by the computing device 750, and wireless communication by the computing device 750.
The memory 764 stores information within the computing device 750. In one implementation, the memory 764 is a computer-readable medium. In one implementation, the memory 764 is a volatile memory unit or units. In another implementation, the memory 764 is one or more non-volatile memory units. Expansion memory 774 may also be provided and expansion memory 774 is connected to computing device 750 through expansion interface 772, which may include, for example, a Subscriber Identification Module (SIM) card interface 772. Such expansion memory 774 may provide additional storage space for computing device 750, or may also store applications or other information for computing device 750. Specifically, expansion memory 774 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, expansion memory 774 may be provided as a security module for computing device 750, and may be programmed with instructions that permit secure use of computing device 750. Furthermore, security applications as well as additional information may be provided via the SIM card, such as placing identification information on the SIM card in an unbreakable manner.
For example, as described below, the memory may include flash memory and/or MRAM memory. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as the methods described above. The information carrier is a computer-or machine-readable medium, such as the memory 764, expansion memory 774, or memory on processor 752.
As shown, computing device 750 may be implemented in a number of different forms. For example, it may be implemented as a cellular telephone 780. It may also be implemented as part of a smartphone 782, personal digital assistant, or other mobile device.
Where the systems discussed herein collect or may utilize personal information about a user, the user may be provided with an opportunity to control whether applications or features collect user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location), or whether and/or how to receive content that may be more relevant to the user. In addition, some data may be processed in one or more ways to delete personally identifiable information before it is stored or used. For example, the identity of the user may be treated so that personally identifiable information cannot be determined for the user, or the geographic location of the user may be generalized to a place where location information is obtained (such as a city, ZIP code, or state level) so that the particular location of the user cannot be determined. Thus, the user may control how information is collected about the user and used by the content server.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a computer storage medium for execution by, or to control the operation of, data processing apparatus.
The computer storage media may be or be embodied in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification may be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality or combination of the foregoing. The apparatus can include special purpose logic circuitry, e.g., a Field Programmable Gate Array (FPGA) or an application-specific integrated circuit (ASIC). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., a Field Programmable Gate Array (FPGA) or an Application Specific Integrated Circuit (ASIC).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor that performs actions in accordance with the instructions, and one or more memory devices that store the instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer does not require such a device. Furthermore, a computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable memory device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory device devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a Cathode Ray Tube (CRT) or Liquid Crystal Display (LCD) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other types of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a user computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include Local Area Networks (LANs) and Wide Area Networks (WANs), internets (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system may include a user and a server. A user and server are generally remote from each other and typically interact through a communication network. The relationship of user and server arises by virtue of computer programs running on the respective computers and having a user-server relationship to each other. In some embodiments, the server transmits data (e.g., HTML pages) to the client device (e.g., for displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any features or possible claims, but rather as descriptions of features specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Moreover, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some implementations, multitasking and parallel processing may be advantageous.
Claims (20)
1. A method, comprising:
obtaining, by one or more computers, cluster data comprising a plurality of query clusters, wherein each query cluster is a set of search queries that have been included in the same query cluster based on one or more matching query features;
for each given query cluster among the plurality of query clusters:
determining, by the one or more computers, a portion of the search query within the given query cluster that triggers a local search feature when input to a search system;
determining whether a portion of the search query within the given query cluster that triggers a local search feature satisfies a local intent threshold;
maintaining, in the one or more computer-accessible memories, an intent flag for the given query cluster based on the determination of whether the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold, including:
assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a high local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold; and
assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a low local intent cluster when a portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold;
receiving, by the one or more computers, a search query submitted by a client device and an indication of one of the plurality of clusters that includes the search query;
accessing, by the one or more computers, an intent flag associated with one of the plurality of clusters to determine whether the search query is included in the high local intent cluster or the low local intent cluster; and
in response to the search query, comprising:
modifying, by the one or more computers, a content item distributed to the client device in response to the search query, including adding a local content feature to the content item, when the search query is determined to be included in the high local intent cluster; and
distributing, by the one or more computers, content items distributed to the client device in response to the search query without adding the local content features when the search query is determined to be included in the low local intent cluster.
2. The method of claim 1, wherein determining the portion of the search query within the given query cluster that triggers a local search feature when input to a search system comprises:
for each given search query within the given cluster of queries,
determining whether the given query triggers presentation of a local knowledge panel in a search results page generated by the search system using the given search query;
determining a total number of the given search queries that triggered presentation of the local knowledge panel; and
determining a portion of the search queries based on a ratio of a total number of the given search queries that trigger presentation of the local knowledge panel relative to how many search queries are in the given query cluster.
3. The method of claim 1 or 2, wherein determining the portion of the search query within the given query cluster that triggers a local search feature when input to a search system comprises:
for each given search query within the given cluster of queries,
determining whether the given query includes a local attribute that triggers presentation of one or more local elements in a search results page generated by the search system using the given search query;
determining a total number of the given search query that triggered presentation of one or more local elements; and
determining the portion of the search query based on a ratio of a total number of the given search queries that trigger presentation of one or more local elements relative to how many search queries in the given query cluster.
4. The method of one of the preceding claims, wherein determining whether the search query is included in the high or low local intent cluster comprises:
searching a plurality of different query clusters using the search query;
determining whether a given query cluster determined to include the search query based on the search has been assigned a value of the intent flag indicating a high local intent cluster or a low local intent cluster; and
assigning a value to the intent flag indicating that the search query is a high local intent query or a low local intent query based on the determined assigned value of the intent flag for the given query cluster that includes the search query.
5. The method of one of the preceding claims, wherein determining whether the search query is included in the high or low local intent cluster comprises:
identifying a search query in a database of search queries;
determining whether a high local intent flag or a low local intent flag has been set for the search query in the database; and
based on a determination that a high local intent flag or a low local intent flag has been set for the search query in the database, assigning a value to the intent flag indicating that the search query is the high local intent query or the low local intent query.
6. The method of any preceding claim, wherein the added local content feature of the modified content item comprises an interactive user interface object, the method further comprising:
receiving information specifying interaction with the interactive user interface object; and
providing data that causes presentation of additional content, the additional content being selected based on the interaction.
7. The method of one of the preceding claims, wherein adding the local content features to the content item when the search query is determined to be included in the high local intent cluster comprises: adding the local content feature as a graphical overlay on the content item.
8. A system, comprising:
a data processing device; and
a non-transitory computer-readable storage medium in data communication with the data processing apparatus and storing instructions executable by the data processing apparatus and that, upon such execution, cause the data processing apparatus to perform operations comprising:
obtaining, by one or more computers, cluster data comprising a plurality of query clusters, wherein each query cluster is a set of search queries that have been included in the same query cluster based on one or more matching query features;
for each given query cluster among the plurality of query clusters:
determining, by the one or more computers, a portion of the search query within the given query cluster that triggers a local search feature when input to a search system;
determining whether a portion of the search query within the given query cluster that triggers a local search feature satisfies a local intent threshold;
maintaining, in the one or more computer-accessible memories, an intent flag for the given query cluster based on the determination of whether the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold, including:
assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a high local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold; and
assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a low local intent cluster when a portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold;
receiving, by the one or more computers, a search query submitted by a client device and an indication of one of the plurality of clusters that includes the search query;
accessing, by the one or more computers, an intent flag associated with one of the plurality of clusters to determine whether the search query is included in the high local intent cluster or the low local intent cluster; and
in response to the search query, comprising:
modifying, by the one or more computers, a content item distributed to the client device in response to the search query, including adding a local content feature to the content item, when the search query is determined to be included in the high local intent cluster; and
distributing, by the one or more computers, content items distributed to the client device in response to the search query without adding the local content features when the search query is determined to be included in the low local intent cluster.
9. The system of claim 8, wherein determining the portion of the search query within the given query cluster that triggers a local search feature when input to a search system comprises:
for each given search query within the given cluster of queries,
determining whether the given query triggers presentation of a local knowledge panel in a search results page generated by the search system using the given search query;
determining a total number of the given search queries that triggered presentation of the local knowledge panel; and
determining a portion of the search queries based on a ratio of a total number of the given search queries that trigger presentation of the local knowledge panel relative to how many search queries are in the given query cluster.
10. The system of claim 8 or 9, wherein determining the portion of the search query within the given query cluster that triggers a local search feature when input to a search system comprises:
for each given search query within the given cluster of queries,
determining whether the given query includes a local attribute that triggers presentation of one or more local elements in a search results page generated by the search system using the given search query;
determining a total number of the given search query that triggered presentation of one or more local elements; and
determining the portion of the search query based on a ratio of a total number of the given search queries that trigger presentation of one or more local elements relative to how many search queries in the given query cluster.
11. The system of one of the preceding claims, wherein determining whether the search query is included in the high or low local intent cluster comprises:
searching a plurality of different query clusters using the search query;
determining whether a given query cluster determined to include the search query based on the search has been assigned a value of the intent flag indicating a high local intent cluster or a low local intent cluster; and
assigning a value to the intent flag indicating that the search query is a high local intent query or a low local intent query based on the determined assigned value of the intent flag for the given query cluster that includes the search query.
12. The method of one of the preceding claims, wherein determining whether the search query is included in the high or low local intent cluster comprises:
identifying a search query in a database of search queries;
determining whether a high local intent flag or a low local intent flag has been set for the search query in the database; and
based on a determination that a high local intent flag or a low local intent flag has been set for the search query in the database, assigning a value to the intent flag indicating that the search query is the high local intent query or the low local intent query.
13. The system of any preceding claim, wherein the added local content feature of the modified content item comprises an interactive user interface object, the method further comprising:
receiving information specifying interaction with the interactive user interface object; and
providing data that causes presentation of additional content, the additional content being selected based on the interaction.
14. The system of one of the preceding claims, wherein adding the local content features to the content item when the search query is determined to be included in the high local intent cluster comprises adding the local content features as a graphical overlay on the content item.
15. A non-transitory computer storage medium encoded with a computer program, the computer program comprising instructions that when executed by data processing apparatus cause the data processing apparatus to perform operations comprising:
obtaining, by one or more computers, cluster data comprising a plurality of query clusters, wherein each query cluster is a set of search queries that have been included in the same query cluster based on one or more matching query features;
for each given query cluster among the plurality of query clusters:
determining, by the one or more computers, a portion of the search query within the given query cluster that triggers a local search feature when input to a search system;
determining whether a portion of the search query within the given query cluster that triggers a local search feature satisfies a local intent threshold;
maintaining, in the one or more computer-accessible memories, an intent flag for the given query cluster based on the determination of whether the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold, including:
assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a high local intent cluster when the portion of the search query within the given query cluster that triggers the local search feature satisfies the local intent threshold; and
assigning, by the one or more computers, a value to the intent flag indicating that the given cluster is a low local intent cluster when a portion of the search query within the given query cluster that triggers the local search feature fails to satisfy the local intent threshold;
receiving, by the one or more computers, a search query submitted by a client device and an indication of one of the plurality of clusters that includes the search query;
accessing, by the one or more computers, an intent flag associated with one of the plurality of clusters to determine whether the search query is included in the high local intent cluster or the low local intent cluster; and
in response to the search query, comprising:
modifying, by the one or more computers, a content item distributed to the client device in response to the search query, including adding a local content feature to the content item, when the search query is determined to be included in the high local intent cluster; and
distributing, by the one or more computers, content items distributed to the client device in response to the search query without adding the local content features when the search query is determined to be included in the low local intent cluster.
16. The non-transitory computer storage medium of claim 15, wherein determining the portion of the search query within the given query cluster that triggers a local search feature when input to a search system comprises:
for each given search query within the given cluster of queries,
determining whether the given query triggers presentation of a local knowledge panel in a search results page generated by the search system using the given search query;
determining a total number of the given search queries that triggered presentation of the local knowledge panel; and
determining a portion of the search queries based on a ratio of a total number of the given search queries that trigger presentation of the local knowledge panel relative to how many search queries are in the given query cluster.
17. The non-transitory computer storage medium of claim 15 or 16, wherein determining the portion of the search query within the given query cluster that triggers a local search feature when input to a search system comprises:
for each given search query within the given cluster of queries,
determining whether the given query includes a local attribute that triggers presentation of one or more local elements in a search results page generated by the search system using the given search query;
determining a total number of the given search query that triggered presentation of one or more local elements; and
determining the portion of the search query based on a ratio of a total number of the given search queries that trigger presentation of one or more local elements relative to how many search queries in the given query cluster.
18. The non-transitory computer storage medium of one of the preceding claims, wherein determining whether the search query is included in the high or low local intent cluster comprises:
searching a plurality of different query clusters using the search query;
determining whether a given query cluster determined to include the search query based on the search has been assigned a value of the intent flag indicating a high local intent cluster or a low local intent cluster; and
assigning a value to the intent flag indicating that the search query is a high local intent query or a low local intent query based on the determined assigned value of the intent flag for the given query cluster that includes the search query.
19. The non-transitory computer storage medium of one of the preceding claims, wherein determining whether the search query is included in the high or low local intent cluster comprises:
identifying a search query in a database of search queries;
determining whether a high local intent flag or a low local intent flag has been set for the search query in the database; and
based on a determination that a high local intent flag or a low local intent flag has been set for the search query in the database, assigning a value to the intent flag indicating that the search query is the high local intent query or the low local intent query.
20. The non-transitory computer storage medium of one of the preceding claims, wherein the added local content features of the modified content item comprise interactive user interface objects, the method further comprising:
receiving information specifying interaction with the interactive user interface object; and
providing data that causes presentation of additional content, the additional content being selected based on the interaction.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2019/030866 WO2020226615A1 (en) | 2019-05-06 | 2019-05-06 | Triggering local extensions based on inferred intent |
Publications (2)
Publication Number | Publication Date |
---|---|
CN112219201A true CN112219201A (en) | 2021-01-12 |
CN112219201B CN112219201B (en) | 2024-04-23 |
Family
ID=66625285
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980020444.2A Active CN112219201B (en) | 2019-05-06 | 2019-05-06 | Triggering local extensions based on inferred intent |
Country Status (6)
Country | Link |
---|---|
US (2) | US11397737B2 (en) |
EP (1) | EP3759622A1 (en) |
JP (1) | JP7233435B2 (en) |
KR (1) | KR102352654B1 (en) |
CN (1) | CN112219201B (en) |
WO (1) | WO2020226615A1 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN113515662A (en) * | 2021-07-09 | 2021-10-19 | 北京百度网讯科技有限公司 | Similar song retrieval method, device, equipment and storage medium |
CN116383454A (en) * | 2023-04-10 | 2023-07-04 | 星环信息科技(上海)股份有限公司 | Data query method of graph database, electronic equipment and storage medium |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120151479A1 (en) | 2010-12-10 | 2012-06-14 | Salesforce.Com, Inc. | Horizontal splitting of tasks within a homogenous pool of virtual machines |
US11455361B2 (en) * | 2019-08-09 | 2022-09-27 | Microsoft Technology Licensing, Llc | Query entity-experience classification |
CN115757461B (en) * | 2022-11-09 | 2023-06-23 | 北京新数科技有限公司 | Result clustering method for bank database application system |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060085392A1 (en) * | 2004-09-30 | 2006-04-20 | Microsoft Corporation | System and method for automatic generation of search results based on local intention |
US20070100801A1 (en) * | 2005-10-31 | 2007-05-03 | Celik Aytek E | System for selecting categories in accordance with advertising |
CN102117321A (en) * | 2010-01-06 | 2011-07-06 | 微软公司 | Automated discovery aggregation and organization of subject area discussions |
US20110184981A1 (en) * | 2010-01-27 | 2011-07-28 | Yahoo! Inc. | Personalize Search Results for Search Queries with General Implicit Local Intent |
CN102449625A (en) * | 2009-05-26 | 2012-05-09 | 诺基亚公司 | Method and apparatus for automatic geo-location search learning |
US9025888B1 (en) * | 2012-02-17 | 2015-05-05 | Google Inc. | Interface to facilitate browsing of items of visual content |
US20150193447A1 (en) * | 2014-01-03 | 2015-07-09 | Microsoft Corporation | Synthetic local type-ahead suggestions for search |
CN106844680A (en) * | 2017-01-25 | 2017-06-13 | 百度在线网络技术（北京）有限公司 | The methods of exhibiting and device of recommendation information |
CN108139849A (en) * | 2015-10-01 | 2018-06-08 | 谷歌有限责任公司 | For the action suggestion of user in selecting content |
CN108140055A (en) * | 2016-07-27 | 2018-06-08 | 谷歌有限责任公司 | Trigger application message |
CN108475320A (en) * | 2015-11-24 | 2018-08-31 | 谷歌有限责任公司 | Query pattern and associated aggregate statistics are identified in search inquiry |
Family Cites Families (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7747601B2 (en) * | 2006-08-14 | 2010-06-29 | Inquira, Inc. | Method and apparatus for identifying and classifying query intent |
US7860886B2 (en) | 2006-09-29 | 2010-12-28 | A9.Com, Inc. | Strategy for providing query results based on analysis of user intent |
US20080222119A1 (en) | 2007-03-08 | 2008-09-11 | Microsoft Corporation | Detecting a user's location, local intent and travel intent from search queries |
US7805450B2 (en) | 2007-03-28 | 2010-09-28 | Yahoo, Inc. | System for determining the geographic range of local intent in a search query |
US20090043749A1 (en) * | 2007-08-06 | 2009-02-12 | Garg Priyank S | Extracting query intent from query logs |
US20110208715A1 (en) * | 2010-02-23 | 2011-08-25 | Microsoft Corporation | Automatically mining intents of a group of queries |
US20120059838A1 (en) | 2010-09-07 | 2012-03-08 | Microsoft Corporation | Providing entity-specific content in response to a search query |
US9959348B2 (en) * | 2012-06-04 | 2018-05-01 | Google Llc | Applying social annotations to search results |
WO2014196980A1 (en) * | 2013-06-07 | 2014-12-11 | Hewlett-Packard Development Company, L.P. | Prioritizing log messages |
US20150278355A1 (en) * | 2014-03-28 | 2015-10-01 | Microsoft Corporation | Temporal context aware query entity intent |
US9613145B2 (en) | 2014-06-18 | 2017-04-04 | Google Inc. | Generating contextual search presentations |
US20160034951A1 (en) * | 2014-07-30 | 2016-02-04 | Microsoft Corporation | Allocating prominent display space for query answers |
US10326768B2 (en) * | 2015-05-28 | 2019-06-18 | Google Llc | Access control for enterprise knowledge |
US20170147710A1 (en) * | 2015-11-20 | 2017-05-25 | Google Inc. | Multi-format search results in dialer application |
US20170220573A1 (en) * | 2016-01-05 | 2017-08-03 | William McMichael | Systems and methods of performing searches within a text input application |
-
2019
- 2019-05-06 WO PCT/US2019/030866 patent/WO2020226615A1/en unknown
- 2019-05-06 JP JP2020550138A patent/JP7233435B2/en active Active
- 2019-05-06 EP EP19725476.6A patent/EP3759622A1/en active Pending
- 2019-05-06 KR KR1020207026913A patent/KR102352654B1/en active IP Right Grant
- 2019-05-06 CN CN201980020444.2A patent/CN112219201B/en active Active
- 2019-10-30 US US16/669,030 patent/US11397737B2/en active Active
-
2022
- 2022-06-22 US US17/846,795 patent/US20220327130A1/en active Pending
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060085392A1 (en) * | 2004-09-30 | 2006-04-20 | Microsoft Corporation | System and method for automatic generation of search results based on local intention |
US20070100801A1 (en) * | 2005-10-31 | 2007-05-03 | Celik Aytek E | System for selecting categories in accordance with advertising |
CN102449625A (en) * | 2009-05-26 | 2012-05-09 | 诺基亚公司 | Method and apparatus for automatic geo-location search learning |
CN102117321A (en) * | 2010-01-06 | 2011-07-06 | 微软公司 | Automated discovery aggregation and organization of subject area discussions |
US20110184981A1 (en) * | 2010-01-27 | 2011-07-28 | Yahoo! Inc. | Personalize Search Results for Search Queries with General Implicit Local Intent |
US9025888B1 (en) * | 2012-02-17 | 2015-05-05 | Google Inc. | Interface to facilitate browsing of items of visual content |
US20150193447A1 (en) * | 2014-01-03 | 2015-07-09 | Microsoft Corporation | Synthetic local type-ahead suggestions for search |
CN108139849A (en) * | 2015-10-01 | 2018-06-08 | 谷歌有限责任公司 | For the action suggestion of user in selecting content |
CN108475320A (en) * | 2015-11-24 | 2018-08-31 | 谷歌有限责任公司 | Query pattern and associated aggregate statistics are identified in search inquiry |
CN108140055A (en) * | 2016-07-27 | 2018-06-08 | 谷歌有限责任公司 | Trigger application message |
CN106844680A (en) * | 2017-01-25 | 2017-06-13 | 百度在线网络技术（北京）有限公司 | The methods of exhibiting and device of recommendation information |
Non-Patent Citations (2)
Title |
---|
FABIO GASPARETTI: "Personalization and Context-awareness in Social Local Search State-of-the-art and Future Research Challenges", 《PERVASIVE AND MOBILE COMPUTING》, pages 1 - 84 * |
李林旭: "基于用户大数据的特征分析及可视化", 《中国优秀硕士学位论文全文数据库 信息科技辑》, pages 138 - 297 * |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN113515662A (en) * | 2021-07-09 | 2021-10-19 | 北京百度网讯科技有限公司 | Similar song retrieval method, device, equipment and storage medium |
CN116383454A (en) * | 2023-04-10 | 2023-07-04 | 星环信息科技(上海)股份有限公司 | Data query method of graph database, electronic equipment and storage medium |
CN116383454B (en) * | 2023-04-10 | 2024-01-30 | 星环信息科技(上海)股份有限公司 | Data query method of graph database, electronic equipment and storage medium |
Also Published As
Publication number | Publication date |
---|---|
WO2020226615A1 (en) | 2020-11-12 |
US20200356569A1 (en) | 2020-11-12 |
KR102352654B1 (en) | 2022-01-18 |
US11397737B2 (en) | 2022-07-26 |
JP7233435B2 (en) | 2023-03-06 |
CN112219201B (en) | 2024-04-23 |
KR20200130319A (en) | 2020-11-18 |
JP2021526245A (en) | 2021-09-30 |
US20220327130A1 (en) | 2022-10-13 |
EP3759622A1 (en) | 2021-01-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN112219201B (en) | Triggering local extensions based on inferred intent | |
US9940659B1 (en) | Category preferred layout for items in an electronic marketplace | |
US10503803B2 (en) | Animated snippets for search results | |
US10289648B2 (en) | Enforcing category diversity | |
US11263248B2 (en) | Presenting content in accordance with a placement designation | |
WO2011121176A1 (en) | Method and apparatus for context-indexed network resources | |
US11132406B2 (en) | Action indicators for search operation output elements | |
US11669550B2 (en) | Systems and methods for grouping search results into dynamic categories based on query and result set | |
US11106707B2 (en) | Triggering application information | |
US9558294B2 (en) | Asynchronous caching to improve user experience | |
US20210406333A1 (en) | Causal selection preferences |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
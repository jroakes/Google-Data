CROSS-REFERENCE TO RELATED APPLICATIONS
This application claims the benefit of priority under 35 U.S.C. ยง 120 as a continuation of U.S. patent application Ser. No. 16/666,780, filed Oct. 29, 2019, which claims the benefit of priority under 35 U.S.C. ยง 120 as a continuation of U.S. patent application Ser. No. 16/039,204, filed Jul. 18, 2018, which claims the benefit of priority under 35 U.S.C. ยง 120 as a continuation-in-part of U.S. patent application Ser. No. 15/395,703, filed Dec. 30, 2016, each of which is hereby incorporated by reference herein in its entirety.
BACKGROUND
Transmitting data to a computing devices that is utilizing computing resources can result in excessive network transmissions, packet-based or otherwise, of network traffic data and prevent a computing device from properly processing the network traffic data, completing an operation related to the network traffic data, or timely responding to the network traffic data. The control of network transmissions corresponding to content item objects can be complicated by the large number of content item objects that can initiate network transmissions of network traffic data between computing devices.
SUMMARY
At least one aspect is directed to a system of multi-modal transmission of packetized data in a voice activated data packet based computer network environment. A natural language processor component executed by a data processing system can receive, via an interface of the data processing system, data packets comprising an input audio signal detected by a sensor of a client computing device. The natural language processor component can parse the input audio signal to identify a request and a trigger keyword corresponding to the request. A direct action application programming interface of the data processing system can generate, based on at least one of the request and the trigger keyword, a first action data structure. A content selector component executed by the data processing system can receive at least one of the request and the trigger keyword identified by the natural language processor and can select, based on at least one of the request and the trigger keyword, a content item via a real-time content selection process. An interface management component of the data processing system can poll a plurality of interfaces to identify a first candidate interface and a second candidate interface, and can determine a first resource utilization value for the first candidate interface and a second resource utilization value for the second candidate interface. The first resource utilization value and the second resource utilization value can be based on at least one of a battery status, processor utilization, memory utilization, an interface parameter, and network bandwidth utilization. The interface management component can select, based on a comparison of the first resource utilization value and the second resource utilization value, the first candidate interface as a selected interface to present the content item, and can convert the content item for delivery in a modality compatible with the selected interface selected based on the comparison of the first resource utilization value and the second resource utilization value. The interface management component can provide the first action data structure to the client computing device for rendering as audio output from the client computing device, and can transmit the content item converted for the first modality to deliver the content item for rendering from the selected interface.
At least one aspect is directed to a method of multi-modal transmission of packetized data in a voice activated data packet based computer network environment. The method can receive, by a natural language processor component executed by a data processing system, via an interface of the data processing system, data packets comprising an input audio signal detected by a sensor of a client computing device. The method can identify, by the natural language processor component, from the input audio signal, a request and a trigger keyword corresponding to the request. The method can generate, by a direct action application programming interface of the data processing system, based on at least one of and the trigger keyword, a first action data structure. The method can receive, by a content selector component executed by the data processing system, at least one of the request and the trigger keyword identified by the natural language processor and can select, based on at least one of the request and the trigger keyword, a content item via a real-time content selection process. The method can poll, by an interface management component of the data processing system, a plurality of interfaces to identify a first candidate interface and a second candidate interface. The method can determine, by the interface management component, a first resource utilization value for the first candidate interface and a second resource utilization value for the second candidate interface. The first resource utilization value and the second resource utilization value can be based on at least one of a battery status, processor utilization, memory utilization, an interface parameter, and network bandwidth utilization. The method can select, based on a comparison of the first resource utilization value and the second resource utilization value, the first candidate interface as a selected interface to present the content item. The method can convert the content item for delivery in a modality compatible with the selected interface selected based on the comparison of the first resource utilization value and the second resource utilization value. The method can provide the first action data structure to the client computing device for rendering as audio output from the client computing device. The method can transmit the content item converted for the first modality to deliver the content item for rendering from the selected interface.
At least one aspect is directed to a computer readable storage medium storing instructions that when executed by one or more data processors, cause the one or more data processors to perform operations for multi-modal transmission of packetized data in a voice activated data packet based computer network environment. The operations can receive, by a natural language processor component executed by a data processing system, via an interface of the data processing system, data packets comprising an input audio signal detected by a sensor of a client computing device. The operations can identify, by the natural language processor component, from the input audio signal, a request and a trigger keyword corresponding to the request. The operations can generate, by a direct action application programming interface of the data processing system, based on at least one of and the trigger keyword, a first action data structure. The operations can receive, by a content selector component executed by the data processing system, at least one of the request and the trigger keyword identified by the natural language processor and can select, based on at least one of the request and the trigger keyword, a content item via a real-time content selection process. The operations can poll, by an interface management component of the data processing system, a plurality of interfaces to identify a first candidate interface and a second candidate interface. The operations can determine, by the interface management component, a first resource utilization value for the first candidate interface and a second resource utilization value for the second candidate interface. The first resource utilization value and the second resource utilization value can be based on at least one of a battery status, processor utilization, memory utilization, an interface parameter, and network bandwidth utilization. The operations can select, based on a comparison of the first resource utilization value and the second resource utilization value, the first candidate interface as a selected interface to present the content item. The operations can convert the content item for delivery in a modality compatible with the selected interface selected based on the comparison of the first resource utilization value and the second resource utilization value. The operations can provide the first action data structure to the client computing device for rendering as audio output from the client computing device. The operations can transmit the content item converted for the first modality to deliver the content item for rendering from the selected interface.
At least one aspect is directed to a system of multi-modal transmission of packetized data in a voice activated data packet based computer network environment. The system can include a data processing system comprising one or more processors and memory. The data processing system can execute a natural language processor, a direct action application programming interface, a content selector or an interface management component. The natural language processor component can receive, via an interface of the data processing system, data packets comprising an input audio signal detected by a sensor of a client computing device. The natural language processor component can parse the input audio signal to identify a request and a trigger keyword corresponding to the request. The direct action application programming interface can generate, based on at least one of the request and the trigger keyword, one or more action data structures. The content selector component can receive at least one of the request and the trigger keyword identified by the natural language processor. The content selector can select, based on at least one of the request and the trigger keyword, one or more content items via a real-time content selection process. The interface management component can poll a plurality of interfaces to identify a first candidate interface and a second candidate interface within a threshold distance of the computing device. The interface management component can determine a first resource utilization value for the first candidate interface and a second resource utilization value for the second candidate interface. The interface management component can select, based on a comparison of the first resource utilization value and the second resource utilization value, the first candidate interface as a selected interface to present a first action data structures of the one or more action data structures and a first content item of the one or more content items. The interface management component can provide the first action data structure and the first content item for delivery in a modality compatible with the selected interface selected based on the comparison of the first resource utilization value and the second resource utilization value. The interface management component can transmit the first action data structure and the first content item in the modality to deliver the content item for presentation via the selected interface.
At least one aspect is directed to a method of multi-modal transmission of packetized data in a voice activated data packet based computer network environment. The method can include the data processing system receiving data packets comprising an input audio signal detected by a sensor of a client computing device. The method can include the data processing system parsing the input audio signal to identify a request and a trigger keyword corresponding to the request. The method can include the data processing system generating, based on at least one of the request and the trigger keyword, one or more action data structures. The method can include the data processing system receiving at least one of the request and the trigger keyword identified by the natural language processor. The method can include the data processing system selecting, based on at least one of the request and the trigger keyword, one or more content items via a real-time content selection process. The method can include the data processing system polling a plurality of interfaces to identify a first candidate interface and a second candidate interface within a threshold distance of the computing device. The method can include the data processing system determining a first resource utilization value for the first candidate interface and a second resource utilization value for the second candidate interface. The method can include the data processing system selecting, based on a comparison of the first resource utilization value and the second resource utilization value, the first candidate interface as a selected interface to present a first action data structures of the one or more action data structures and a first content item of the one or more content items. The method can include the data processing system providing the first action data structure and the first content item for delivery in a modality compatible with the selected interface selected based on the comparison of the first resource utilization value and the second resource utilization value. The method can include the data processing system transmitting the first action data structure and the first content item in the modality to deliver the content item for presentation via the selected interface.
These and other aspects and implementations are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and implementations, and provide an overview or framework for understanding the nature and character of the claimed aspects and implementations. The drawings provide illustration and a further understanding of the various aspects and implementations, and are incorporated in and constitute a part of this specification.
BRIEF DESCRIPTION OF THE DRAWINGS
The accompanying drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 depicts a system of multi-modal transmission of packetized data in a voice activated computer network environment;
FIG. 2 depicts a flow diagram for multi-modal transmission of packetized data in a voice activated computer network environment;
FIG. 3 depicts method of multi-modal transmission of packetized data in a voice activated computer network environment;
FIG. 4 depicts an operation of a system of multi-modal transmission of packetized data in a voice activated computer network environment; and
FIG. 5 is a block diagram illustrating a general architecture for a computer system that may be employed to implement elements of the systems and methods described and illustrated herein.
DETAILED DESCRIPTION
Following below are more detailed descriptions of various concepts related to, and implementations of, methods, apparatuses, and systems for multi-modal transmission of packetized data in a voice activated data packet based computer network environment. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways.
Systems and methods of the present disclosure relate generally to a data processing system that identifies an optimal transmission modality for data packet (or other protocol based) transmission in a voice activated computer network environment. The data processing system can improve the efficiency and effectiveness of data packet transmission over one or more computer networks by, for example, selecting a transmission modality from a plurality of options for data packet routing through a computer network of content items to one or more client computing device, or to different interfaces (e.g., different apps or programs) of a single client computing device. Data packets or other protocol based signals corresponding to the selected operations can be routed through a computer network between multiple computing devices. For example the data processing system can route a content item to a different interface than an interface from which a request was received. The different interface can be on the same client computing device or a different client computing device from which a request was received. The data processing system can select at least one candidate interface from a plurality of candidate interfaces for content item transmission to a client computing device. The candidate interfaces can be determined based on technical or computing parameters such as processor capability or utilization rate, memory capability or availability, battery status, available power, network bandwidth utilization, interface parameters or other resource utilization values. By selecting an interface to receive and provide the content item for rendering from the client computing device based on candidate interfaces or utilization rates associated with the candidate interfaces, the data processing system can reduce network bandwidth usage, latency, or processing utilization or power consumption of the client computing device that renders the content item. This saves processing power and other computing resources such as memory, reduces electrical power consumption by the data processing system and the reduced data transmissions via the computer network reduces bandwidth requirements and usage of the data processing system.
The systems and methods described herein can include a data processing system that receives an input audio query, which can also be referred to as an input audio signal. From the input audio query the data processing system can identify a request and a trigger keyword corresponding to the request. Based on the trigger keyword or the request, the data processing system can generate a first action data structure. For example, the first action data structure can include an organic response to the input audio query received from a client computing device, and the data processing system can provide the first action data structure to the same client computing device for rendering as audio output via the same interface from which the request was received.
The data processing system can also select at least one content item based on the trigger keyword or the request. The data processing system can identify or determine a plurality of candidate interfaces for rendering of the content item(s). The interfaces can include one or more hardware or software interfaces, such as display screens, audio interfaces, speakers, applications or programs available on the client computing device that originated the input audio query, or on different client computing devices. The interfaces can include java script slots for online documents for the insertion of content items, as well as push notification interfaces. The data processing system can determine utilization values for the different candidate interfaces. The utilization values can indicate power, processing, memory, bandwidth, or interface parameter capabilities, for example. Based on the utilization values for the candidate interfaces the data processing system can select a candidate interface as a selected interface for presentation or rendering of the content item. For example, the data processing system can convert or provide the content item for delivery in a modality compatible with the selected interface. The selected interface can be an interface of the same client computing device that originated the input audio signal or a different client computing device. By routing data packets via a computing network based on utilization values associated with a candidate interface, the data processing system selects a destination for the content item in a manner that can use the least amount of processing power, memory, or bandwidth from available options, or that can conserve power of one or more client computing devices.
The data processing system can provide the content item or the first action data structure by packet or other protocol based data message transmission via a computer network to a client computing device. The output signal can cause an audio driver component of the client computing device to generate an acoustic wave, e.g., an audio output, which can be output from the client computing device. The audio (or other) output can correspond to the first action data structure or to the content item. For example the first action data structure can be routed as audio output, and the content item can be routed as a text based message. By routing the first action data structure and the content item to different interfaces, the data processing system can conserve resources utilized by each interface, relative to providing both the first action data structure and the content item to the same interface. This results in fewer data processing operations, less memory usage, or less network bandwidth utilization by the selected interfaces (or their corresponding devices) than would be the case without separation and independent routing of the first action data structure and the content item.
The data processing system of the present disclosure can use multiple display to display or present information responsive to a query received by a digital assistant. For example, the data processing system can include voice-based digital assistant multi-array display interface management component. A voice-based digital assistant can receive a query and responsive to the query identify a data set for display. The data set (e.g., one or more action data structures or one or more content items) for display or other presentation can be generated by the voice-based digital assistant in response to a voice query from a user having a first account. The data processing system can split the data set into multiple data components that might be in different formats, different protocols, or use different technologies. The data processing system can identify one or more displays linked to the account. The data processing system can further determine characteristics of the identified displays, such as availability (e.g., if they are currently in-use or available to be used by the Assistant), screen size, location (e.g., same room as user), speaker available, etc. The data processing system can then match a data component of the data set to a display device. The data processing system can match the data component of the data set to the display device based on the environment of the display device, classification of the data component, or optimal surface for the data component, for example. The data processing system can then provide the matched data component to the corresponding display device for display.
For example, a query may be โMy Dayโ. The digital assistant can receive the โmy dayโ query to generate four responses: 1) Calendar; 2) Weather; 3) Traffic; and 4) News. The digital assistant can display this information as four different cards on a mobile phone. Each card can have a different data source format; e.g., the news card can be an RSS feed that is periodically being updated; the calendar data source can be receive push notification as new calendar events are added; the traffic may be real-time information. The data processing system can match each card with a corresponding available display, and then provide the card information to the matched display in the appropriate data format using the appropriate protocols. Thus, the response to the single query can be split or divided into multiple components for presentation on multiple interfaces, devices, surfaces or displays. If one of the devices is busy, the data component can be re-directed to another interface or other device.
For example, the data processing system can determine to play audio only via one screen, and display only on another screen. The data processing system can determine to provide third-party content on one or more of the screens. The data processing system can suggest different display devices to use; for example, a user may want to view pictures from a vacation. The user may request to view the pictures from their phone, but the data processing system can detect that a display device with a large screen is available, and prompt the user to determine whether the user would like to display these pictures on the large screen instead.
FIG. 1 depicts an example system 100 to for multi-modal transmission of packetized data in a voice activated data packet (or other protocol) based computer network environment. The system 100 can include at least one data processing system 105. The data processing system 105 can include at least one server having at least one processor. For example, the data processing system 105 can include a plurality of servers located in at least one data center or server farm. The data processing system 105 can determine, from an audio input signal a request and a trigger keyword associated with the request. Based on the request and trigger keyword the data processing system 105 can determine or select at least one action data structure, and can select at least one content item (and initiate other actions as described herein). The data processing system 105 can identify candidate interfaces for rendering of the action data structures or the content items, and can provide the action data structures or the content items for rendering by one or more candidate interfaces on one or more client computing devices based on resource utilization values for or of the candidate interfaces, for example as part of a voice activated communication or planning system. The action data structures (or the content items) can include one or more audio files that when rendered provide an audio output or acoustic wave. The action data structures or the content items can include other content (e.g., text, video, or image content) in addition to audio content.
The data processing system 105 can include multiple, logically-grouped servers and facilitate distributed computing techniques. The logical group of servers may be referred to as a data center, server farm or a machine farm. The servers can be geographically dispersed. A data center or machine farm may be administered as a single entity, or the machine farm can include a plurality of machine farms. The servers within each machine farm can be heterogeneousโone or more of the servers or machines can operate according to one or more type of operating system platform. The data processing system 105 can include servers in a data center that are stored in one or more high-density rack systems, along with associated storage systems, located for example in an enterprise data center. The data processing system 105 with consolidated servers in this way can improve system manageability, data security, the physical security of the system, and system performance by locating servers and high performance storage systems on localized high performance networks. Centralization of all or some of the data processing system 105 components, including servers and storage systems, and coupling them with advanced system management tools allows more efficient use of server resources, which saves power and processing requirements and reduces bandwidth usage.
The data processing system 105 can include at least one natural language processor (NLP) component 110, at least one interface 115, at least one prediction component 120, at least one content selector component 125, at least one audio signal generator component 130, at least one direct action application programming interface (API) 135, at least one interface management component 140, and at least one data repository 145. The NLP component 110, interface 115, prediction component 120, content selector component 125, audio signal generator component 130, direct action API 135, and interface management component 140 can each include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with the data repository 145 and with other computing devices (e.g., at least one client computing device 150, at least one content provider computing device 155, or at least one service provider computing device 160) via the at least one computer network 165. The network 165 can include computer networks such as the internet, local, wide, metro or other area networks, intranets, satellite networks, other computer networks such as voice or data mobile phone communication networks, and combinations thereof.
The network 165 can include or constitute a display network, e.g., a subset of information resources available on the internet that are associated with a content placement or search engine results system, or that are eligible to include third party content items as part of a content item placement campaign. The network 165 can be used by the data processing system 105 to access information resources such as web pages, web sites, domain names, or uniform resource locators that can be presented, output, rendered, or displayed by the client computing device 150. For example, via the network 165 a user of the client computing device 150 can access information or data provided by the data processing system 105, the content provider computing device 155 or the service provider computing device 160.
The network 165 can include, for example a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communication network, a computer network, an ATM (Asynchronous Transfer Mode) network, a SONET (Synchronous Optical Network) network, a SDH (Synchronous Digital Hierarchy) network, a wireless network or a wireline network, and combinations thereof. The network 165 can include a wireless link, such as an infrared channel or satellite band. The topology of the network 165 may include a bus, star, or ring network topology. The network 165 can include mobile telephone networks using any protocol or protocols used to communicate among mobile devices, including advanced mobile phone protocol (โAMPSโ), time division multiple access (โTDMAโ), code-division multiple access (โCDMAโ), global system for mobile communication (โGSMโ), general packet radio services (โGPRSโ) or universal mobile telecommunications system (โUMTSโ). Different types of data may be transmitted via different protocols, or the same types of data may be transmitted via different protocols.
The client computing device 150, the content provider computing device 155, and the service provider computing device 160 can each include at least one logic device such as a computing device having a processor to communicate with each other or with the data processing system 105 via the network 165. The client computing device 150, the content provider computing device 155, and the service provider computing device 160 can each include at least one server, processor or memory, or a plurality of computation resources or servers located in at least one data center. The client computing device 150, the content provider computing device 155, and the service provider computing device 160 can each include at least one computing device such as a desktop computer, laptop, tablet, personal digital assistant, smartphone, portable computer, server, thin client computer, virtual server, or other computing device.
The client computing device 150 can include at least one sensor 151, at least one transducer 152, at least one audio driver 153, and at least one speaker 154. The sensor 151 can include a microphone or audio input sensor. The transducer 152 can convert the audio input into an electronic signal, or vice-versa. The audio driver 153 can include a script or program executed by one or more processors of the client computing device 150 to control the sensor 151, the transducer 152 or the audio driver 153, among other components of the client computing device 150 to process audio input or provide audio output. The speaker 154 can transmit the audio output signal.
The client computing device 150 can be associated with an end user that enters voice queries as audio input into the client computing device 150 (via the sensor 151) and receives audio output in the form of a computer generated voice that can be provided from the data processing system 105 (or the content provider computing device 155 or the service provider computing device 160) to the client computing device 150, output from the speaker 154. The audio output can correspond to an action data structure received from the direct action API 135, or a content item selected by the content selector component 125. The computer generated voice can include recordings from a real person or computer generated language.
The content provider computing device 155 (or the data processing system 105 or service provider computing device 160) can provide audio based content items or action data structures for display by the client computing device 150 as an audio output. The action data structure or content item can include an organic response or offer for a good or service, such as a voice based message that states: โToday it will be sunny and 80 degrees at the beachโ as an organic response to a voice-input query of โIs today a beach day?โ. The data processing system 105 (or other system 100 component such as the content provider computing device 155 can also provide a content item as a response, such as a voice or text message based content item offering sunscreen.
The content provider computing device 155 or the data repository 145 can include memory to store a series of audio action data structures or content items that can be provided in response to a voice based query. The action data structures and content items can include packet based data structures for transmission via the network 165. The content provider computing device 155 can also provide audio or text based content items (or other content items) to the data processing system 105 where they can be stored in the data repository 145. The data processing system 105 can select the audio action data structures or text based content items and provide (or instruct the content provider computing device 155 to provide) them to the same or different client computing devices 150 responsive to a query received from one of those client computing device 150. The audio based action data structures can be exclusively audio or can be combined with text, image, or video data. The content items can be exclusively text or can be combined with audio, image or video data.
The service provider computing device 160 can include at least one service provider natural language processor (NLP) component 161 and at least one service provider interface 162. The service provider NLP component 161 (or other components such as a direct action API of the service provider computing device 160) can engage with the client computing device 150 (via the data processing system 105 or bypassing the data processing system 105) to create a back-and-forth real-time voice or audio based conversation (e.g., a session) between the client computing device 150 and the service provider computing device 160. For example, the service provider interface 162 can receive or provide data messages (e.g., action data structures or content items) to the direct action API 135 of the data processing system 105. The direct action API 135 can also generate the action data structures independent from or without input from the service provider computing device 160. The service provider computing device 160 and the content provider computing device 155 can be associated with the same entity. For example, the content provider computing device 155 can create, store, or make available content items for beach relates services, such as sunscreen, beach towels or bathing suits, and the service provider computing device 160 can establish a session with the client computing device 150 to respond to a voice input query about the weather at the beach, directions for a beach, or a recommendation for an area beach, and can provide these content items to the end user of the client computing device 150 via an interface of the same client computing device 150 from which the query was received, a different interface of the same client computing device 150, or an interface of a different client computing device. The data processing system 105, via the direct action API 135, the NLP component 110 or other components can also establish the session with the client computing device, including or bypassing the service provider computing device 160, to for example to provide an organic response to a query related to the beach.
The data repository 145 can include one or more local or distributed databases, and can include a database management system. The data repository 145 can include computer data storage or memory and can store one or more parameters 146, one or more policies 147, content data 148, or templates 149 among other data. The parameters 146, policies 147, and templates 149 can include information such as rules about a voice based session between the client computing device 150 and the data processing system 105 (or the service provider computing device 160). The content data 148 can include content items for audio output or associated metadata, as well as input audio messages that can be part of one or more communication sessions with the client computing device 150.
The system 100 can optimize processing of action data structures and content items in a voice activated data packet (or other protocol) environment. For example, the data processing system 105 can include or be part of a voice activated assistant service, voice command device, intelligent personal assistant, knowledge navigator, event planning, or other assistant program. The data processing system 105 can provide one or more instances of action data structures as audio output for display from the client computing device 150 to accomplish tasks related to an input audio signal. For example, the data processing system can communicate with the service provider computing device 160 or other third party computing devices to generate action data structures with information about a beach, among other things. For example, an end user can enter an input audio signal into the client computing device 150 of: โOK, I would like to go to the beach this weekendโ and an action data structure can indicate the weekend weather forecast for area beaches, such as โit will be sunny and 80 degrees at the beach on Saturday, with high tide at 3 pm.โ
The action data structures can include a number of organic or non-sponsored responses to the input audio signal. For example, the action data structures can include a beach weather forecast or directions to a beach. The action data structures in this example include organic, or non-sponsored content that is directly responsive to the input audio signal. The content items responsive to the input audio signal can include sponsored or non-organic content, such as an offer to buy sunscreen from a convenience store located near the beach. In this example, the organic action data structure (beach forecast) is responsive to the input audio signal (a query related to the beach), and the content item (a reminder or offer for sunscreen) is also responsive to the same input audio signal. The data processing system 105 can evaluate system 100 parameters (e.g., power usage, available displays, formats of displays, memory requirements, bandwidth usage, power capacity or time of input power (e.g., internal battery or external power source such as a power source from a wall output) to provide the action data structure and the content item to different candidate interfaces on the same client computing device 150, or to different candidate interfaces on different client computing devices 150.
The data processing system 105 can include an application, script or program installed at the client computing device 150, such as an app to communicate input audio signals (e.g., as data packets via a packetized or other protocol based transmission) to at least one interface 115 of the data processing system 105 and to drive components of the client computing device 150 to render output audio signals (e.g., for action data structures) or other output signals (e.g., content items). The data processing system 105 can receive data packets or other signal that includes or identifies an audio input signal. For example, the data processing system 105 can execute or run the NLP component 110 to receive the audio input signal.
The NLP component 110 can convert the audio input signal into recognized text by comparing the input signal against a stored, representative set of audio waveforms (e.g., in the data repository 145) and choosing the closest matches. The representative waveforms are generated across a large set of users, and can be augmented with speech samples. After the audio signal is converted into recognized text, the NLP component 110 can match the text to words that are associated, for example via training across users or through manual specification, with actions that the data processing system 105 can serve.
The audio input signal can be detected by the sensor 151 (e.g., a microphone) of the client computing device. Via the transducer 152, the audio driver 153, or other components the client computing device 150 can provide the audio input signal to the data processing system 105 (e.g., via the network 165) where it can be received (e.g., by the interface 115) and provided to the NLP component 110 or stored in the data repository 145 as content data 148.
The NLP component 110 can receive or otherwise obtain the input audio signal. From the input audio signal, the NLP component 110 can identify at least one request or at least one trigger keyword corresponding to the request. The request can indicate intent or subject matter of the input audio signal. The trigger keyword can indicate a type of action likely to be taken. For example, the NLP component 110 can parse the input audio signal to identify at least one request to go to the beach for the weekend. The trigger keyword can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken. For example, the trigger keyword โgoโ or โto go toโ from the input audio signal can indicate a need for transport or a trip away from home. In this example, the input audio signal (or the identified request) does not directly express an intent for transport, however the trigger keyword indicates that transport is an ancillary action to at least one other action that is indicated by the request.
The prediction component 120 (or other mechanism of the data processing system 105) can generate, based on the request or the trigger keyword, at least one action data structure associated with the input audio signal. The action data structure can indicate information related to subject matter of the input audio signal. The action data structure can include one or more than one action, such as organic responses to the input audio signal. For example, the input audio signal โOK, I would like to go to the beach this weekendโ can include at least one request indicating an interest for a beach weather forecast, surf report, or water temperature information, and at least one trigger keyword, e.g., โgoโ indicating travel to the beach, such as a need for items one may want to bring to the beach, or a need for transportation to the beach. The prediction component 120 can generate or identify subject matter for at least one action data structure, an indication of a request for a beach weather forecast, as well as subject matter for a content item, such as an indication of a query for sponsored content related to spending a day at a beach. From the request or the trigger keyword the prediction component 120 (or other system 100 component such as the NLP component 110 or the direct action API 135) predicts, estimates, or otherwise determines subject matter for action data structures or for content items. From this subject matter, the direct action API 135 can generate at least one action data structure and can communicate with at least one content provider computing device 155 to obtain at least one content item 155. The prediction component 120 can access the parameters 146 or policies 147 in the data repository 145 to determine or otherwise estimate requests for action data structures or content items. For example, the parameters 146 or policies 147 could indicate requests for a beach weekend weather forecast action or for content items related to beach visits, such as a content item for sunscreen.
The content selector component 125 can obtain indications of any of the interest in or request for the action data structure or for the content item. For example, the prediction component 120 can directly or indirectly (e.g., via the data repository 145) provide an indication of the action data structure or content item to the content selector component 125. The content selector component 125 can obtain this information from the data repository 145, where it can be stored as part of the content data 148. The indication of the action data structure can inform the content selector component 125 of a need for area beach information, such as a weather forecast or products or services the end user may need for a trip to the beach.
From the information received by the content selector component 125, e.g., an indication of a forthcoming trip to the beach, the content selector component 125 can identify at least one content item. The content item can be responsive or related to the subject matter of the input audio query. For example, the content item can include data message identifying as tore near the beach that has sunscreen, or offering a taxi ride to the beach. The content selector component 125 can query the data repository 145 to select or otherwise identify the content item, e.g., from the content data 148. The content selector component 125 can also select the content item from the content provider computing device 155. For example responsive to a query received from the data processing system 105, the content provider computing device 155 can provide a content item to the data processing system 105 (or component thereof) for eventual output by the client computing device 150 that originated the input audio signal, or for output to the same end user by a different client computing device 150.
The audio signal generator component 130 can generate or otherwise obtain an output signal that includes the content item (as well as the action data structure) responsive to the input audio signal. For example, the data processing system 105 can execute the audio signal generator component 130 to generate or create an output signal corresponding to the action data structure or to the content item. The interface component 115 of the data processing system 105 can provide or transmit one or more data packets that include the output signal via the computer network 165 to any client computing device 150. The interface 115 can be designed, configured, constructed, or operational to receive and transmit information using, for example, data packets. The interface 115 can receive and transmit information using one or more protocols, such as a network protocol. The interface 115 can include a hardware interface, software interface, wired interface, or wireless interface. The interface 115 can facilitate translating or formatting data from one format to another format. For example, the interface 115 can include an application programming interface that includes definitions for communicating between various components, such as software components of the system 100.
The data processing system 105 can provide the output signal including the action data structure from the data repository 145 or from the audio signal generator component 130 to the client computing device 150. The data processing system 105 can provide the output signal including the content item from the data repository 145 or from the audio signal generator component 130 to the same or to a different client computing device 150.
The data processing system 105 can also instruct, via data packet transmissions, the content provider computing device 155 or the service provider computing device 160 to provide the output signal (e.g., corresponding to the action data structure or to the content item) to the client computing device 150. The output signal can be obtained, generated, transformed to or transmitted as one or more data packets (or other communications protocol) from the data processing system 105 (or other computing device) to the client computing device 150.
The content selector component 125 can select the content item or the action data structure for the as part of a real-time content selection process. For example, the action data structure can be provided to the client computing device 150 for transmission as audio output by an interface of the client computing device 150 in a conversational manner in direct response to the input audio signal. The real-time content selection process to identify the action data structure and provide the content item to the client computing device 150 can occur within one minute or less from the time of the input audio signal and be considered real-time. The data processing system 105 can also identify and provide the content item to at least one interface of the client computing device 150 that originated the input audio signal, or to a different client computing device 150.
The action data structure (or the content item), for example obtained or generated by the audio signal generator component 130 transmitted via the interface 115 and the computer network 165 to the client computing device 150, can cause the client computing device 150 to execute the audio driver 153 to drive the speaker 154 to generate an acoustic wave corresponding to the action data structure or to the content item. The acoustic wave can include words of or corresponding to the action data structure or content item.
The acoustic wave representing the action data structure can be output from the client computing device 150 separately from the content item. For example, the acoustic wave can include the audio output of โToday it will be sunny and 80 degrees at the beach.โ In this example, the data processing system 105 obtains the input audio signal of, for example, โOK, I would like to go to the beach this weekend.โ From this information the NLP component 110 identifies at least one request or at least one trigger keyword, and the prediction component 120 uses the request(s) or trigger keyword(s) to identify a request for an action data structure or for a content item. The content selector component 125 (or other component) can identify, select, or generate a content item for, e.g., sunscreen available near the beach. The direct action API 135 (or other component) can identify, select, or generate an action data structure for, e.g., the weekend beach forecast. The data processing system 105 or component thereof such as the audio signal generator component 130 can provide the action data structure for output by an interface of the client computing device 150. For example, the acoustic wave corresponding to the action data structure can be output from the client computing device 150. The data processing system 105 can provide the content item for output by a different interface of the same client computing device 150 or by an interface of a different client computing device 150.
The packet based data transmission of the action data structure by data processing system 105 to the client computing device 150 can include a direct or real-time response to the input audio signal of โOK, I would like to go to the beach this weekendโ so that the packet based data transmissions via the computer network 165 that are part of a communication session between the data processing system 105 and the client computing device 150 with the flow and feel of a real-time person to person conversation. This packet based data transmission communication session can also include the content provider computing device 155 or the service provider computing device 160.
The content selector component 125 can select the content item or action data structure based on at least one request or at least one trigger keyword of the input audio signal. For example, the requests of the input audio signal โOK, I would like to go to the beach this weekendโ can indicate subject matter of the beach, travel to the beach, or items to facilitate a trip to the beach. The NLP component 110 or the prediction component 120 (or other data processing system 105 components executing as part of the direct action API 135) can identify the trigger keyword โgoโ โgo toโ or โto go toโ and can determine a transportation request to the beach based at least in part on the trigger keyword. The NLP component 110 (or other system 100 component) can also determine a solicitation for content items related to beach activity, such as for sunscreen or beach umbrellas. Thus, the data processing system 105 can infer actions from the input audio signal that are secondary requests (e.g., a request for sunscreen) that are not the primary request or subject of the input audio signal (information about the beach this weekend).
The action data structures and content items can correspond to subject matter of the input audio signal. The direct action API 135 can execute programs or scripts, for example from the NLP component 110, the prediction component 120, or the content selector component 125 to identify action data structures or content items for one or more of these actions. The direct action API 135 can execute a specified action to satisfy the end user's intention, as determined by the data processing system 105. Depending on the action specified in its inputs, the direct action API 135 can execute code or a dialog script that identifies the parameters required to fulfill a user request. Such code can lookup additional information, e.g., in the data repository 145, such as the name of a home automation service, or it can provide audio output for rendering at the client computing device 150 to ask the end user questions such as the intended destination of a requested taxi. The direct action API 135 can determine necessary parameters and can package the information into an action data structure, which can then be sent to another component such as the content selector component 125 or to the service provider computing device 160 to be fulfilled.
The direct action API 135 of the data processing system 105 can generate, based on the request or the trigger keyword, the action data structures. The action data structures can be generated responsive to the subject matter of the input audio signal. The action data structures can be included in the messages that are transmitted to or received by the service provider computing device 160. Based on the audio input signal parsed by the NLP component 110, the direct action API 135 can determine to which, if any, of a plurality of service provider computing devices 160 the message should be sent. For example, if an input audio signal includes โOK, I would like to go to the beach this weekend,โ the NLP component 110 can parse the input audio signal to identify requests or trigger keywords such as the trigger keyword word โto go toโ as an indication of a need for a taxi. The direct action API 135 can package the request into an action data structure for transmission as a message to a service provider computing device 160 of a taxi service. The message can also be passed to the content selector component 125. The action data structure can include information for completing the request. In this example, the information can include a pick up location (e.g., home) and a destination location (e.g., a beach). The direct action API 135 can retrieve a template 149 from the data repository 145 to determine which fields to include in the action data structure. The direct action API 135 can retrieve content from the data repository 145 to obtain information for the fields of the data structure. The direct action API 135 can populate the fields from the template with that information to generate the data structure. The direct action API 135 can also populate the fields with data from the input audio signal. The templates 149 can be standardized for categories of service providers or can be standardized for specific service providers. For example, ride sharing service providers can use the following standardized template 149 to create the data structure: {client_device_identifier; authentication_credentials; pick_up_location; destination_location; no_passengers; service_level}.
The content selector component 125 can identify, select, or obtain multiple content items resulting from a multiple content selection processes. The content selection processes can be real-time, e.g., part of the same conversation, communication session, or series of communications sessions between the data processing system 105 and the client computing device 150 that involve common subject matter. The conversation can include asynchronous communications separated from one another by a period of hours or days, for example. The conversation or communication session can last for a time period from receipt of the first input audio signal until an estimated or known conclusion of a final action related to the first input audio signal, or receipt by the data processing system 105 of an indication of a termination or expiration of the conversation. For example, the data processing system 105 can determine that a conversation related to a weekend beach trip begins at the time or receipt of the input audio signal and expires or terminates at the end of the weekend, e.g., Sunday night or Monday morning. The data processing system 105 that provides action data structures or content items for rendering by one or more interfaces of the client computing device 150 or of another client computing device 150 during the active time period of the conversation (e.g., from receipt of the input audio signal until a determined expiration time) can be considered to be operating in real-time. In this example the content selection processes and rendering of the content items and action data structures occurs in real time.
The interface management component 140 can poll, determine, identify, or select interfaces for rendering of the action data structures and of the content items related to the input audio signal. For example, the interface management component 140 can identify one or more candidate interfaces of client computing devices 150 associated with an end user that entered the input audio signal (e.g., โWhat is the weather at the beach today?โ) into one of the client computing devices 150 via an audio interface. The interfaces can include hardware such as sensor 151 (e.g., a microphone), speaker 154, or a screen size of a computing device, alone or combined with scripts or programs (e.g., the audio driver 153) as well as apps, computer programs, online documents (e.g., webpage) interfaces and combinations thereof.
The interfaces can include social media accounts, text message applications, or email accounts associated with an end user of the client computing device 150 that originated the input audio signal. Interfaces can include the audio output of a smartphone, or an app based messaging device installed on the smartphone, or on a wearable computing device, among other client computing devices 150. The interfaces can also include display screen parameters (e.g., size, resolution), audio parameters, mobile device parameters, (e.g., processing power, battery life, existence of installed apps or programs, or sensor 151 or speaker 154 capabilities), content slots on online documents for text, image, or video renderings of content items, chat applications, laptops parameters, smartwatch or other wearable device parameters (e.g., indications of their display or processing capabilities), or virtual reality headset parameters.
The interface management component 140 can poll a plurality of interfaces to identify candidate interfaces. Candidate interfaces include interfaces having the capability to render a response to the input audio signal, (e.g., the action data structure as an audio output, or the content item that can be output in various formats including non-audio formats). The interface management component 140 can determine parameters or other capabilities of interfaces to determine that they are (or are not) candidate interfaces. For example, the interface management component 140 can determine, based on parameters 146 of the content item or of a first client computing device 150 (e.g., a smartwatch wearable device), that the smartwatch includes an available visual interface of sufficient size or resolution to render the content item. The interface management component 140 can also determine that the client computing device 150 that originated the input audio signal has a speaker 154 hardware and installed program e.g., an audio driver or other script to render the action data structure.
The interface management component 140 can determine utilization values for candidate interfaces. The utilization values can indicate that a candidate interface can (or cannot) render the action data structures or the content items provided in response to input audio signals. The utilization values can include parameters 146 obtained from the data repository 145 or other parameters obtained from the client computing device 150, such as bandwidth or processing utilizations or requirements, processing power, power requirements, battery status, memory utilization or capabilities, or other interface parameters that indicate the available of an interface to render action data structures or content items. The battery status can indicate a type of power source (e.g., internal battery or external power source such as via an output), a charging status (e.g., currently charging or not), or an amount of remaining battery power. The interface management component 140 can select interfaces based on the battery status or charging status.
The interface management component 140 can order the candidate interfaces in a hierarchy or ranking based on the utilization values. For example different utilization values (e.g., processing requirements, display screen size, accessibility to the end user) can be given different weights. The interface management component 140 can rank one or more of the utilization values of the candidate interfaces based on their weights to determine an optimal corresponding candidate interface for rendering of the content item (or action data structure). Based on this hierarchy, the interface management component 140 can select the highest ranked interface for rendering of the content item.
Based on utilization values for candidate interfaces, the interface management component 140 can select at least one candidate interface as a selected interface for the content item. The selected interface for the content item can be the same interface from which the input audio signal was received (e.g., an audio interface of the client computing device 150) or a different interface (e.g., a text message based app of the same client computing device 150, or an email account accessible from the same client computing device 150.
The interface management component 140 can select an interface for the content item that is an interface of a different client computing device 150 than the device that originated the input audio signal. For example, the data processing system 105 can receive the input audio signal from a first client computing device 150 (e.g., a smartphone), and can select an interface such as a display of a smartwatch (or any other client computing device for rendering of the content item. The multiple client computing devices 150 can all be associated with the same end user. The data processing system 105 can determine that multiple client computing devices 150 are associated with the same end user based on information received with consent from the end user such as user access to a common social media or email account across multiple client computing devices 150.
The interface management component 140 can also determine that an interface is unavailable. For example the interface management component 140 can poll interfaces and determine that a battery status of a client computing device 150 associated with the interface is low, or below a threshold level such as 10%. Or the interface management component 140 can determine that the client computing device 150 associated with the interface lacks sufficient display screen size or processing power to render the content item, or that the processor utilization rate is too high, as the client computing device is currently executing another application, for example to stream content via the network 165. In these and other examples the interface management component 140 can determine that the interface is unavailable and can eliminate the interface as a candidate for rendering the content item or the action data structure.
Thus, the interface management component 140 can determine that a candidate interface accessible by the first client computing device 150 is linked to an account of an end user, and that a second candidate interface accessible by a second client computing device 150 is also linked to the same account. For example, both client computing devices 150 may have access to the same social media account, e.g., via installation of an app or script at each client computing device 150. The interface management component 140 can also determine that multiple interfaces correspond to the same account, and can provide multiple, different content items to the multiple interfaces corresponding to the common account. For example, the data processing system 105 can determine, with end user consent, that an end user has accessed an account from different client computing devices 150. These multiple interfaces can be separate instances of the same interface (e.g., the same app installed on different client computing devices 150) or different interfaces such as different apps for different social media accounts that are both linked to a common email address account, accessible from multiple client computing devices 150.
The interface management component 140 can also determine or estimate distances between client computing devices 150 associated with candidate interfaces. For example, the data processing system 105 can obtain, with user consent, an indication that the input audio signal originated from a smartphone or virtual reality headset computing device 150, and that the end user is associated with an active smartwatch client computing device 150. From this information the interface management component can determine that the smartwatch is active, e.g., being worn by the end user when the end user enters the input audio signal into the smartphone, so that the two client computing devices 150 are within a threshold distance of one another (e.g., within 1 meter, 2 meters, 3 meters, 4 meters, or 7 meters; or within audio range or visual range). The data processing system 105 can determine, with end user consent, the location of a smartphone that is the source of an input audio signal, and can also determine that a laptop account associated with the end user is currently active. For example, the laptop can be signed into a social media account indicating that the user is currently active on the laptop. In this example the data processing system 105 can determine that the end user is within a threshold distance of the smartphone and of the laptop, so that the laptop can be an appropriate choice for rendering of the content item via a candidate interface.
The interface management component 140 can determine to select an interface, device, speaker or display to present the action data structure or a content item selected for the action data structure. The interface management component 140 can determine to select one or more interfaces, one or more devices, or one or more displays, or one or more speakers to present the action data structure or the content item. The interface management component 140 can copy, split up, or device the action data structure or the content item into multiple components, and then present the multiple components on different interfaces, devices, displays, or speakers.
For example, the interface management component 140 can identify one or more other computing devices 150 that are within a threshold distance of the computing device 150 that receives the input audio signal, and then poll candidate interfaces associated with the computing devices 150 that are within the threshold distance of the computing device 150. The interface management component 140 can be configured with one or more proximity detection techniques to identify the computing devices 150 that are within the threshold distance of the computing device 150 that receives the input audio signal. Proximity detection techniques can include, for example, a sub-audible wave technique, WIFI-based technique, Bluetooth-based technique, matching input audio signal-based technique, or a token-based technique. WIFI (or Wi-Fi) can refer to a technology for wireless local area networking with computing devices based on a standard. In some cases, to identify the devices or interfaces within the threshold distance, the data processing system 105 can use a sub-audible wave. The data processing system 105 can identify the devices based on the devices being linked to an account, and the profile for the account can indicate the location of the devices or interface, such as in a living room.
The data processing system 105 (e.g., via interface management component 140) can identify a first action data structure and a second action data structure. The data processing system 105 can identify the first and second action data structures responsive to a query input into a digital assistant (e.g., via a voice-based digital assistant executing at least partially on the client computing device 150). The data processing system 105 can, responsive to the voice-based query, identify two responses. The first response can be a first action data structure, and the second response can be a second action data structure. The responses can include any data set, data component object, content item, multimedia item, application, or information that is responsive to the query. For example, the query can be โshow me my dayโ, and the response to the query can include a first action data structure that includes one or more calendar entries for the current day, and the second action data structure can include a weather report for the day. The data processing system 105 can generate additional action data structures, such as a third action data structure comprising a traffic estimate to commute from a first location to a second location (e.g., home to work), or a fourth action data structure comprising new electronic messages, or a fifth action data structure comprising news headlines.
The data processing system 105 can determine to present the different action data structures on different devices or interfaces. The data processing system 105 can determine to select different devices or interfaces to which to transmit the action data structure for execution, rendering, outputting, or playback. To do so, the data processing system 105 can identify the available devices, identify resource utilization of the devices, or identify capability or functionality of the devices. The data processing system 105 can use a machine learning engine or technique to select the optimal device based on format of the action data structure, context of the action data structure, user preference for interface for the type of action data structure, output of the device, time of day, content of the action data structure, or resource utilization of the device. The machine learning technique can be trained based on user requests for specific devices, or based on aggregated training data from a plurality of users or queries. The data processing system 105 can select the interface or device based on historical selection information.
The data processing system 105 can utilize a map data structure 164 that maps categories of action data structures or content items to types of interfaces or devices. The map data structure 164 stored in the data repository 145 can include a mapping of category of action data structure or content item to a type of interface or device type. For example, the category of the first action data structure comprising calendar entries can be: calendar; the category of the second action data structure comprising the weather forecast can be: weather; the category of the third action data structure comprising traffic estimate can be: traffic; the category of the fourth action data structure comprising electronic messages can be: messages; the category of the fifth action can be: news; and the category of the sixth action can be: photos or videos. These category of action data structure can also be used to refer to categories of content items (e.g., category of content item can be calendar, weather, traffic, messages, news, photos or videos).
Interface types can include visual display, audio display, still image, or video. Interface types can further include or indicate a characteristic or quality of the display. For example, screen size of the display, resolution of the display, decibels of the speaker, number of speakers, or surround sound capability. Device type can include computer, laptop, tablet, smart speaker, television, set top box, wearable device, mobile smartphone, smart watch, or smart glasses.
The data processing system 105 can receive the map data structure 164 from an administrator of the data processing system 105. A user of the computing device 150 can establish the map data structure. The data processing system 105 can generate the map data structure. The data processing system 105 can store a default or predetermined map data structure. The data processing system 105 can receive feedback or input from one or more users to update the map data structure 164. The data processing system 105 can have a custom map data structure for an account of an user. For example, each account can include a customized map data structure for the account that can be based on preferences or profile information for the account. The data processing system 105 can generate the map data structure using a machine learning technique. For example, the data processing system 105 can determine which features associated with the action data structure, interface type, or device type correlate with a desired feedback value or performance. For example, feedback can be in the form of the user providing an indication that the selected interface facilitated the presentation of the action data structure, or feedback can be in the form of the user requesting the same interface for the type of action data structure, or feedback can be in the form of the user interacting with the interface to manipulate or consume the action data structure.
Table 1 illustrates an example map data structure 164:
TABLE 1 |
|
Illustrative example of a map data structure that |
maps categories to interface or device types. |
|
Category |
Type of Interface or Device |
|
|
|
Calendar |
mobile display |
|
weather |
television display |
|
traffic estimate |
speaker |
|
electronic messages |
tablet computing device |
|
news |
laptop computing device |
|
photos |
television display |
|
|
The map data structure 164 can further include a mapping to specific computing device identifiers that are linked with an account. The computing device identifiers can refer to MAC addresses, IP address, or other unique identifier that can facilitate transmitting an action data structure, content item, or data component to the selected device or interface for presentation.
Using the map data structure, the data processing system 105 can, for example, select a first computing device having a first interface to present the first action data structure, and then select a second computing device having a second interface to present the second action data structure. For example, responsive to the query โmy dayโ, the data processing system 105 can select a mobile smartphone to display calendar entries, and then select a nearby laptop computer to present a video clip of the news.
The data processing system 105 can select the interface based on an output type of the action data structure corresponding to a type of the interface in a map data structure. The output type can relate to the
For example, Table 2 is illustrates a map data structure relating output types to interface types:
TABLE 2 |
|
Illustrative example of a map data structure that |
maps output types to interface or device types. |
|
Output type |
Interface type |
|
|
|
visual only |
display |
|
audio only |
speaker |
|
audio visual |
display connected to speaker |
|
|
The data processing system 105, via the content selector component 125, can select, identify, determine or otherwise obtain a content item. The data processing system 105 can select the content item via a real-time content selection process. The data processing system 105 can identify content items for each of the one or more action data structures that are generated responsive to a single voice action query received by the digital assistant or client computing device 150. For example, the data processing system 105 can determine a first content item for the first action data structure, and determine a second content item for the second action data structure. The data processing system 105 can select a first interface for the first action data structure and first content item, and then select a second interface for the second action data structure and second content item. The interface management component 140 can transmit the first action data structure and first content item to a first interface, and transmit the second action data structure and second content item to a second interface for presentation.
The interface management component 140 can determine that the first action data structure itself corresponds to multiple categories. For example, the first action data structure can be responsive to a voice-based input query and correspond to multiple categories or a single category. The interface management component 140 can determine to split up or divide the action data structure into multiple data sets or data component objects for the purpose of presenting the action data structure on multiple interfaces of devices. For example, the action data structure can include multiple news articles, and the data processing system 105 can determine to spread the multiple news articles for presentation on different displays. In another example, the action data structure can be generated to include a calendar entry, electronic message, and weather forecast. This single action data structure that is responsive to the single input query can then be split or divided by the data processing system 105 to three different data objects as follows: first data object includes the calendar entry; second data object includes the electronic message; and the third data object includes the weather forecast. The data processing system 105 (e.g., interface management component 140) can select three different interfaces or devices to present the three data objects as follows: first data object transmitted to first interface; second data object transmitted to second interface; and third data object transmitted to third interface. The data processing system 105 can use the map data structure to select the interfaces, for example. Thus, the data processing system 105 can split the first action data structure into a plurality of action data structures, and then transmit the plurality of action data structures to a plurality of candidate interfaces for presentation.
The data processing system 105 can receive requests or an indication as to which interface to select to present the action data structure or content item. However, and in some cases, the data processing system 105 can determine to override the request or indication and select a different interface or device type. For example, the data processing system 105 can receive a request to display photos on a mobile device as follows โshow me my vacation photos on my smartphoneโ. The data processing system 105 can determine, by polling devices or identifying devices linked to the account of the smartphone that are within a threshold distance, that there is a television display that is not being utilized. The data processing system 105 can generate a prompt indicating that the photos can be displayed on the television display and suggest that the photos be presented on the television display. The data processing system 105 can then receive an indication that approves the suggestion to display the photos on the television display. The data processing system 105, therefore, can then override the initial request by transmitting the photos to the television display for presentation. In some cases, the data processing system 105 can override the initial request with or without generating a prompt to approve the override. The data processing system 105 can generate the prompt with a countdown time that automatically overrides the requested interface with the suggested interface unless the data processing system 105 receives a command to block or prevent the override. For example, the prompt can state โshowing vacation photos on your tv instead of your smartphone in 5 seconds, unless canceled now.โ Thus, the data processing system 105 can receive a command to block the override.
The data processing system 105 can receive a request to present the first action data structure via the second candidate interface. The data processing system 105 can determine that a category of the first action data structure corresponds to the first candidate interface in a map data structure. The data processing system 105 can override the request responsive to the determination based on the map data structure. The data processing system 105 can select the first candidate interface to present the first action data structure responsive to the determination to override the request.
For example, the data processing system 105 can receive a request to present the first action data structure via the second candidate interface. The data processing system 105 can determine that an output type of the first content item selected for the first action data structure corresponds to the first candidate interface in a map data structure. The data processing system 105 can override the request responsive to the determination based on the map data structure. The data processing system 105 can select the first candidate interface to present the first action data structure and the first content item responsive to the determination to override the request. In some cases, the data processing system 105 can override the request based on historical interfaces used to present action data structures having the category or the output type. For example, if the account is associated with historically overriding the suggested interface for a specific category or type of content or type of query, the data processing system 105 can identify the historical override, and then apply it to the present action data structure that is responsive to the input query. If, however, the account is associated with historically blocking or preventing an override for this type of query action data structure or requested interface, the data processing system 105 can determine to block an override.
The interface management component 140 can select the interface for the content item based on at least one utilization value indicating that the selected interface is the most efficient for the content item. For example, from among candidate interfaces, the interface to render the content item at the smartwatch uses the least bandwidth due as the content item is smaller and can be transmitted with fewer resources. Or the interface management component 140 can determine that the candidate interface selected for rendering of the content item is currently charging (e.g., plugged in) so that rendering of the content item by the interface will not drain battery power of the corresponding client computing device 150. In another example, the interface management component 140 can select a candidate interface that is currently performing fewer processing operations than another, unselected interface of for example a different client computing device 150 that is currently streaming video content from the network 165 and therefore less available to render the content item without delay.
The interface management component 140 (or other data processing system 105 component) can convert the content item for delivery in a modality compatible with the candidate interface. For example, if the candidate interface is a display of a smartwatch, smartphone, or tablet computing device, the interface management component 140 can size the content item for appropriate visual display given the dimensions of the display screen associated with the interface. The interface management component 140 can also convert the content item to a packet or other protocol based format, including proprietary or industry standard format for transmission to the client computing device 150 associated with the selected interface. The interface selected by the interface management component 140 for the content item can include an interface accessible from multiple client computing devices 150 by the end user. For example, the interface can be or include a social media account that the end user can access via the client computing device 150 that originated the input audio signal (e.g., a smartphone) as well as other client computing devices such as tabled or desktop computers or other mobile computing devices.
The interface management component 140 can also select at least one candidate interface for the action data structure. This interface can be the same interface from which the input audio signal was obtained, e.g., a voice activated assistant service executed at a client computing device 150. This can be the same interface or a different interface than the interface management component 140 selects for the content item. The interface management component 140 (or other data processing system 105 components) can provide the action data structure to the same client computing device 150 that originated the input audio signal for rendering as audio output as part of the assistant service. The interface management component 140 can also transmit or otherwise provide the content item to the selected interface for the content item, in any converted modality appropriate for rendering by the selected interface.
Thus, the interface management component 140 can provide the action data structure as audio output for rendering by an interface of the client computing device 150 responsive to the input audio signal received by the same client computing device 150. The interface management component 140 can also provide the content item for rendering by a different interface of the same client computing device 150 or of a different client computing device 150 associated with the same end user. For example, the action data structure, e.g., โit will be sunny and 80 degrees at the beach on Saturdayโ can be provided for audio rendering by the client computing device as part of an assistant program interface executing in part at the client computing device 150, and the content item e.g., a text, audio, or combination content item indicating that โsunscreen is available from the convenience store near the beachโ can be provided for rendering by an interface of the same or a different computing device 150, such as an email or text message accessible by the same or a different client computing device 150 associated with the end user.
Separating the content item from the action data structure and sending the content item as, for example, a text message rather than an audio message can result in reduced processing power for the client computing device 150 that accesses the content item since, for example, text message data transmissions are less computationally intensive than audio message data transmissions. This separation can also reduce power usage, memory storage, or transmission bandwidth used to render the content item. This results in increased processing, power, and bandwidth efficiencies of the system 100 and devices such as the client computing devices 150 and the data processing system 105. This increases the efficiency of the computing devices that process these transactions, and increases the speed with which the content items can be rendered. The data processing system 105 can process thousands, tens of thousands or more input audio signals simultaneously so the bandwidth, power, and processing savings can be significant and not merely incremental or incidental.
The interface management component 140 can provide or deliver the content item to the same client computing device 150 (or a different device) as the action data structure subsequent to delivery of the action data structure to the client computing device 150. For example, the content item can be provided for rendering via the selected interface upon conclusion of audio output rendering of the action data structure. The interface management component 140 can also provide the content item to the selected interface concurrent with the provision of the action data structure to the client computing device 150. The interface management component 140 can provide the content item for delivery via the selected interface within a pre-determined time period from receipt of the input audio signal by the NLP component 110. The time period, for example, can be any time during an active length of the conversation of session. For example, if the input audio signal is โI would like to go to the beach this weekendโ the pre-determined time period can be any time from receipt of the input audio signal through the end of the weekend, e.g., the active period of the conversation. The pre-determined time period can also be a time triggered from rendering of the action data structure as audio output by the client computing device 150, such as within 5 minutes, one hour or one day of this rendering.
The interface management component 140 can provide the action data structure to the client computing device 150 with an indication of the existence of the content item. For example, the data processing system 105 can provide the action data structure that renders at the client computing device 150 to provide the audio output โit will be sunny and 80 degrees at the beach on Saturday, check your email for more information.โ The phrase โcheck your email for more informationโ can indicate the existence of a content item, e.g., for sunscreen, provided by the data processing system 105 to an interface (e.g., email). In this example, sponsored content can be provided as content items to the email (or other) interface and organic content such as the weather can be provided as the action data structure for audio output.
The data processing system 105 can also provide the action data structure with a prompt that queries the user to determine user interest in obtaining the content item. For example, the action data structure can indicate โit will be sunny and 80 degrees at the beach on Saturday, would you like to hear about some services to assist with your trip?โ The data processing system 105 can receive another audio input signal from the client computing device 150 in response to the prompt โwould you like to hear about some services to assist with your trip?โ such as โsureโ. The NLP component 110 can parse this response, e.g., โsureโ and interpret it as authorization for audio rendering of the content item by the client computing device 150. In response, the data processing system 105 can provide the content item for audio rendering by the same client computing device 150 from which the response โsureโ originated.
The data processing system 105 can delay transmission of the content item associated with the action data structure to optimize processing utilization. For example, the data processing system 105 provide the action data structure for rendering as audio output by the client computing device in real-time responsive to receipt of the input audio signal, e.g., in a conversational manner, and can delay content item transmission until an off-peak or non-peak period of data center usage, which results in more efficient utilization of the data center by reducing peak bandwidth usage, heat output or cooling requirements. The data processing system 105 can also initiate a conversion or other activity associated with the content item, such as ordering a car service responsive to a response to the action data structure or to the content item, based on data center utilization rates or bandwidth metrics or requirements of the network 165 or of a data center that includes the data processing system 105.
Based on a response to a content item or to the action data structure for a subsequent action, such as a click on the content item rendered via the selected interface, the data processing system 105 can identify a conversion, or initiate a conversion or action. Processors of the data processing system 105 can invoke the direct action API 135 to execute scripts that facilitate the conversion action, such as to order a car from a car share service to take the end user to or from the beach. The direct action API 135 can obtain content data 148 (or parameters 146 or policies 147) from the data repository 145, as well as data received with end user consent from the client computing device 150 to determine location, time, user accounts, logistical or other information in order to reserve a car from the car share service. Using the direct action API 135, the data processing system 105 can also communicate with the service provider computing device 160 to complete the conversion by in this example making the car share pick up reservation.
FIG. 2 depicts a flow diagram 200 for multi-modal transmission of packetized data in a voice activated computer network environment. The data processing system 105 can receive the input audio signal 205, e.g., โOK, I would like to go to the beach this weekend.โ In response, the data processing system generates at least one action data structure 210 and at least one content item 215. The action data structure 205 can include organic or non-sponsored content, such as a response for audio rendering stating โIt will be sunny and 80 degrees at the beach this weekendโ or โhigh tide is at 3 pm.โ The data processing system 105 can provide the action data structure 210 to the same client computing device 150 that originated the input audio signal 205, for rendering by a candidate interface of the client computing device 150, e.g., as output in a real time or conversational manner as part of of a digital or conversational assistant platform.
The data processing system 105 can select the candidate interface 220 as a selected interface for the content item 215, and can provide the content item 215 to the selected interface 220. The content item 215 can also include a data structure, converted to the appropriate modality by the data processing system 105 for rendering by the selected interface 220. The content item 215 can include sponsored content, such as an offer to rent a beach chair for the day, or for sunscreen. The selected interface 220 can be part of or executed by the same client computing device 150 or by a different device accessible by the end user of the client computing device 150. Transmission of the action data structure 210 and the content item 215 can occur at the same time or subsequent to one another. The action data structure 210 can include an indicator that the content item 215 is being or will be transmitted separately via a different modality or format to the selected interface 200, alerting the end user to the existence of the content item 215.
The action data structure 210 and the content item 215 can be provided separately for rendering to the end user. By separating the sponsored content (content item 215) from the organic response (action data structure 210) audio or other alerts indicating that the content item 215 is sponsored do not need to be provided with the action data structure 210. This can reduce bandwidth requirements associated with transmission of the action data structure 210 via the network 165 and can simplify rendering of the action data structure 210, for example without audio disclaimer or warning messages.
The data processing system 105 can receive a response audio signal 225. The response audio signal 225 can include an audio signal such as, โgreat, please book me a hotel on the beach this weekend.โ Receipt by the data processing system 105 of the response audio signal 225 can cause the data processing system to invoke the direct action API 135 to execute a conversion to, for example, book a hotel room on the beach. The direct action API 135 can also communicate with at least one service provider computing device 160 to provide information to the service provider computing device 160 so that the service provider computing device 160 can complete or confirm the booking process.
FIG. 3 depicts a method 300 of multi-modal transmission of packetized data in a voice activated computer network environment. The method 300 can receive data packets (ACT 305). For example, the NLP component 110, executed by the data processing system 105, can receive from the client computing device 105 data packets that include an input audio signal (ACT 305). The data packets can be received (ACT 305) via the network 165 as packet or other protocol based data transmissions. The method 300 can identify, from the input audio signal, requests or trigger keywords corresponding to the requests (ACT 310). For example, the NLP component 110 can parse the input audio signal to identify requests that relate to subject matter of the input audio signal, or to identify trigger keywords that can indicate, for example, actions associated with the requests.
The method 300 can generate at least one action data structure (ACT 315). For example, the direct action API 135 can generate action data structures (ACT 315) based on the requests or trigger keywords. The action data structures can indicate organic or non-sponsored content related to the input audio signal. The method 300 can select at least one content item (ACT 320). For example, the content selector component 125 can receive the request(s) or the trigger keyword(s) and based on this information can select one or more content items. The content items can include sponsored items having subject matter that relates to subject matter of the request or of the trigger keyword. The content items can be selected by the content selector component 125 via a real-time content selection process.
The method 300 can poll a plurality of interfaces to determine at least one candidate interface (ACT 325). The candidate interfaces can include candidate interfaces for rendering of the selected content item (or action data structure). For example, the interface management component 140 can query interfaces to obtain utilization values, e.g., parameter information or other characteristics about the interfaces (ACT 330). Based on the utilization values the interface management component 140 can select (ACT 335) at least one candidate interface as a selected interface for rendering of the content item (or of the action data structure). The method 300 can include converting the content item to a modality for rendering via the selected interface (ACT 340). For example the data processing system 105 or component thereof such as the interface management component 140 can convert the content item for rendering in a content item slot of an online document (e.g., for display as an email (e.g., via a selected email interface) or as a text message for display in a chat app).
The method 300 can provide the action data structure to the client computing device 150 for rendering (ACT 345) and can transmit the content item to the candidate interface selected for rendering of the content item (ACT 350). For example, via the interface 115 the interface management component 140 can provide the action data structure to the client computing device 150 for rendering as audio output responsive to the input audio signal (ACT 345). The data processing system can also transmit the content item to the selected interface on the same or a different client computing device 150 for rendering in the converted modality (ACT 350).
FIG. 4 depicts an operation of a system of multi-modal transmission of packetized data in a voice activated computer network environment. The system 400 can include one or more component or functionality depicted in FIG. 1 , FIG. 2 , FIG. 3 or FIG. 5 . For example, the system 400 can include the data processing system 105, network 165 and one or more computing devices 404, 406, and 408, and one or more output devices 408. The computing devices 404, 406 and 410 and output device 408 can be located in a room 402. The room 402 can refer to or include a physical room in a building, such as a house, apartment, condominium, office building, residential or commercial building. The room 402 can be, for example, a living room, family room, bedroom, office, restaurant, or retail location. The devices 406, 410 and 408 can be within a threshold distance of the computing device 404 because they are all located within a predetermined distance from the first computing device 404, or because the threshold distance corresponds to the devices being in the same room 402. For example, a profile for the account associated with the device 404 can indicate that the devices 406, 410 and 408 are also located in room 402. Thus, the data processing system 105 can determine, during polling for example, that the devices 410, 406 408 and 404 are all located in the same room 402.
The first computing device 404 can receive or detect an input voice query from a user. The input voice query can be, for example, โshow me my day.โ The first computing device 404 can perform some initial pre-processing or parsing of the input voice query, and transmit the query to the data processing system 105 via network 165 for further processing. The data processing system 105 can process the query received from the first computing device 404 to generate one or more action data structures that are responsive to the single input query. The data processing system 105 can process the query received from the first computing device 404 to generate a first action data structure and a second action data structure that are both responsive to the single input query. The data processing system 105 can process the query received from the first computing device 404 to generate a first action data structure, select a first content item for the first action data structure, generate a second action data structure, and select a second content item that are all responsive to the single input query.
The data processing system 105 can then select to which interfaces or devices the one or more generated action data structures or selected content items are transmitted. The data processing system 105 can use a machine learning technique, historical data, or a map data structure to select the interfaces or devices.
For example, the data processing system 105 can transmit the first action data structure to the first computing device 404 (e.g., a smartphone or tablet) for presentation, and transmit the second action data structure to the second computing device 406 to cause the second computing device 406 (e.g., a digital assistant executing on a set top box or other device connected to a television display or other display) to present the second action data structure via the first output device 408 (e.g., a television display). The second computing device 406 can be communicatively coupled to the first output device 408 (e.g., via cable such as an HDMI cable or DVI cable or USB cable). The data processing system 105 can identify a third action data structure responsive to the input query to transmit to the third computing device 410 (e.g., a laptop or desktop computer). Thus, the data processing system 105 can select or override requested interfaces to transmit action data structure to optimize resource utilization of devices as well as improve the presentation of the digital or electronic content. The data processing system 105, by splitting an action data structure or a response to a query into multiple action data structure or multiple data components, can reduce the processor utilization or batter utilization by a single device and spread the resource utilization among multiple user devices, thereby improving the longevity of the single device. Further, by intelligently selecting multiple interfaces or devices to use based on a machine learning technique or map data structure or historical use, the data processing system 105 can improve the rendering or presentation of the action data structures or data components in a manner that prevents or avoids obfuscating the data by displaying multiple action data structures or components or content items on a single, smaller display.
FIG. 5 is a block diagram of an example computer system 500. The computer system or computing device 500 can include or be used to implement the system 100, 200 or 400, or its components such as the data processing system 105. The computing system 500 includes a bus 505 or other communication component for communicating information and a processor 510 or processing circuit coupled to the bus 505 for processing information. The computing system 500 can also include one or more processors 510 or processing circuits coupled to the bus for processing information. The computing system 500 also includes main memory 515, such as a random access memory (RAM) or other dynamic storage device, coupled to the bus 505 for storing information, and instructions to be executed by the processor 510. The main memory 515 can be or include the data repository 145. The main memory 515 can also be used for storing position information, temporary variables, or other intermediate information during execution of instructions by the processor 510. The computing system 500 may further include a read only memory (ROM) 520 or other static storage device coupled to the bus 505 for storing static information and instructions for the processor 510. A storage device 525, such as a solid state device, magnetic disk or optical disk, can be coupled to the bus 505 to persistently store information and instructions. The storage device 525 can include or be part of the data repository 145.
The computing system 500 may be coupled via the bus 505 to a display 535, such as a liquid crystal display, or active matrix display, for displaying information to a user. An input device 530, such as a keyboard including alphanumeric and other keys, may be coupled to the bus 505 for communicating information and command selections to the processor 510. The input device 530 can include a touch screen display 535. The input device 530 can also include a cursor control, such as a mouse, a trackball, or cursor direction keys, for communicating direction information and command selections to the processor 510 and for controlling cursor movement on the display 535. The display 535 can be part of the data processing system 105, the client computing device 150 or other component of FIG. 1 , for example.
The processes, systems and methods described herein can be implemented by the computing system 500 in response to the processor 510 executing an arrangement of instructions contained in main memory 515. Such instructions can be read into main memory 515 from another computer-readable medium, such as the storage device 525. Execution of the arrangement of instructions contained in main memory 515 causes the computing system 500 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 515. Hard-wired circuitry can be used in place of or in combination with software instructions together with the systems and methods described herein. Systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
Although an example computing system has been described in FIG. 5 , the subject matter including the operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
For situations in which the systems discussed herein collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features that may collect personal information (e.g., information about a user's social network, social actions or activities, a user's preferences, or a user's location), or to control whether or how to receive content from a content server or other data processing system that may be more relevant to the user. In addition, certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed when generating parameters. For example, a user's identity may be anonymized so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, postal code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about him or her and used by the content server.
The subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatuses. Alternatively or in addition, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. While a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be, or be included in, one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The terms โdata processing systemโ โcomputing deviceโ โcomponentโ or โdata processing apparatusโ encompass various apparatuses, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations of the foregoing. The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures. The interface management component 140, direct action API 135, content selector component 125, prediction component 120 or NLP component 110 and other data processing system 105 components can include or share one or more data processing apparatuses, systems, computing devices, or processors.
A computer program (also known as a program, software, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program can correspond to a file in a file system. A computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of the data processing system 105) to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatuses can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
The subject matter described herein can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification, or a combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (โLANโ) and a wide area network (โWANโ), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system such as system 100 or system 500 can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network (e.g., the network 165). The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, a server transmits data (e.g., data packets representing action data structures or content items) to a client device (e.g., to the client computing device 150 for purposes of displaying data to and receiving user input from a user interacting with the client device, or to the service provider computing device 160 or the content provider computing device 155). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server (e.g., received by the data processing system 105 from the computing device 150 or the content provider computing device 155 or the service provider computing device 160).
While operations are depicted in the drawings in a particular order, such operations are not required to be performed in the particular order shown or in sequential order, and all illustrated operations are not required to be performed. Actions described herein can be performed in a different order.
The separation of various system components does not require separation in all implementations, and the described program components can be included in a single hardware or software product. For example, the NLP component 110, the content selector component 125, the interface management component 140, or the prediction component 120 can be a single component, app, or program, or a logic device having one or more processing circuits, or part of one or more servers of the data processing system 105.
Having now described some illustrative implementations, it is apparent that the foregoing is illustrative and not limiting, having been presented by way of example. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, those acts and those elements may be combined in other ways to accomplish the same objectives. Acts, elements and features discussed in connection with one implementation are not intended to be excluded from a similar role in other implementations or implementations.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of โincludingโ โcomprisingโ โhavingโ โcontainingโ โinvolvingโ โcharacterized byโ โcharacterized in thatโ and variations thereof herein, is meant to encompass the items listed thereafter, equivalents thereof, and additional items, as well as alternate implementations consisting of the items listed thereafter exclusively. In one implementation, the systems and methods described herein consist of one, each combination of more than one, or all of the described elements, acts, or components.
Any references to implementations or elements or acts of the systems and methods herein referred to in the singular may also embrace implementations including a plurality of these elements, and any references in plural to any implementation or element or act herein may also embrace implementations including only a single element. References in the singular or plural form are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to single or plural configurations. References to any act or element being based on any information, act or element may include implementations where the act or element is based at least in part on any information, act, or element.
Any implementation disclosed herein may be combined with any other implementation or embodiment, and references to โan implementation,โ โsome implementations,โ โone implementationโ or the like are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the implementation may be included in at least one implementation or embodiment. Such terms as used herein are not necessarily all referring to the same implementation. Any implementation may be combined with any other implementation, inclusively or exclusively, in any manner consistent with the aspects and implementations disclosed herein.
References to โorโ may be construed as inclusive so that any terms described using โorโ may indicate any of a single, more than one, and all of the described terms. For example, a reference to โat least one of โAโ and โBโโ can include only โAโ, only โBโ, as well as both โAโ and โBโ. Such references used in conjunction with โcomprisingโ or other open terminology can include additional items.
Where technical features in the drawings, detailed description or any claim are followed by reference signs, the reference signs have been included to increase the intelligibility of the drawings, detailed description, and claims. Accordingly, neither the reference signs nor their absence have any limiting effect on the scope of any claim elements.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. The foregoing implementations are illustrative rather than limiting of the described systems and methods. Scope of the systems and methods described herein is thus indicated by the appended claims, rather than the foregoing description, and changes that come within the meaning and range of equivalency of the claims are embraced therein.
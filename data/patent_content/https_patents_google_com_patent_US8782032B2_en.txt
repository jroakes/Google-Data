US8782032B2 - Minimizing visibility of stale content in web searching including revising web crawl intervals of documents - Google Patents
Minimizing visibility of stale content in web searching including revising web crawl intervals of documents Download PDFInfo
- Publication number
- US8782032B2 US8782032B2 US13/849,355 US201313849355A US8782032B2 US 8782032 B2 US8782032 B2 US 8782032B2 US 201313849355 A US201313849355 A US 201313849355A US 8782032 B2 US8782032 B2 US 8782032B2
- Authority
- US
- United States
- Prior art keywords
- document
- crawl
- interval
- scheduling
- tier
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related
Links
- 238000000034 method Methods 0.000 claims abstract description 38
- 230000008859 change Effects 0.000 claims description 37
- 230000009193 crawling Effects 0.000 claims description 19
- 230000006870 function Effects 0.000 claims description 10
- 230000004044 response Effects 0.000 claims description 6
- 230000003247 decreasing effect Effects 0.000 claims description 4
- 238000005070 sampling Methods 0.000 claims description 3
- 238000013459 approach Methods 0.000 description 5
- 238000004891 communication Methods 0.000 description 4
- 239000000463 material Substances 0.000 description 4
- 238000012545 processing Methods 0.000 description 4
- 238000012804 iterative process Methods 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 239000002699 waste material Substances 0.000 description 3
- 230000000875 corresponding effect Effects 0.000 description 2
- 230000002411 adverse Effects 0.000 description 1
- 210000003484 anatomy Anatomy 0.000 description 1
- 235000014510 cooky Nutrition 0.000 description 1
- 230000002596 correlated effect Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 230000003203 everyday effect Effects 0.000 description 1
- 230000008569 process Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G06F17/30864—
Definitions
- the present disclosure relates generally to the field of search engines for locating documents in a computer network system, and in particular, to a system and method for minimizing the visibility of stale data through a web search engine.
- Search engines provide a powerful tool for locating documents in a large database of documents, such as the documents on the Internet or the documents stored on the computers of an Intranet.
- a document is defined as a combination of a document address, e.g., a universal resource locator (URL), and a document content.
- a document address e.g., a universal resource locator (URL)
- URL universal resource locator
- a typical structure of a web search engine comprises a front end and a back end.
- the front end includes a query server for receiving a search query submitted by a user and displaying search results to the user, and a query processor for transforming the search query into a search request understood by the back end of the web search engine.
- the back end includes one or more web crawlers for retrieving documents from the Internet, a scheduler for providing addresses of the documents to the web crawlers, an indexer for indexing the documents retrieved by the web crawlers and one or more databases for storing information of the retrieved documents, e.g., the indexes of the documents.
- the front end Upon receipt of a search request, the front end searches the databases, identifies documents whose contents match the search request and returns them as the search results to the requester.
- the stale content in the search engine may have no particular significance, because the changes to the documents listed in a search result are minor, or the relevance of the documents remains substantially the same.
- the search result may include links to documents that no longer exist, or whose content has changed such that the result is no longer relevant to the query (or has lower relevance to the query than the prior content of the documents).
- stale content is assumed to be visible, whenever search results are returned based on the stale content, even if the search results are still useful to the user.
- a web crawling system associates an appropriate web crawl interval with a document so that the probability of the document's stale content being used by a search engine is maintained below an acceptable level. Assuming sufficient crawl bandwidth, the search engine crawls each document at its associated web crawl interval.
- a method for scheduling a document crawl interval includes: at a computer system having one or more processors and memory storing one or more programs for execution by the one or more processors: comparing a first instance of a document in a plurality of documents with a second instance of the document, thereby obtaining a document comparison.
- the first instance of the document is obtained from a remote location at a specified time before the second instance of the document is obtained from the remote location.
- the specified time is determined in accordance with a first crawl interval associated with the document.
- Each document in the plurality of documents is assigned to a tier in a plurality of tiers, each tier in the plurality of tiers having a distinct associated range of web crawl intervals, and the first crawl interval is assigned a first tier in the plurality of tiers.
- the method also includes computing a second crawl interval for the document; and determining whether the second crawl interval is in the first tier.
- the second crawl interval is a function of the document comparison. When the second crawl interval is not in the first tier, the first document is reassigned to another tier in the plurality of tiers.
- the web crawl interval of a document is identified by an iterative process that starts with an initial estimate of the web crawl interval.
- the iterative process after crawling a document multiple times at different time intervals and analyzing the content changes associated with the crawling results, converges to a time interval that is deemed most appropriate for this document. This time interval is associated with the document as its web crawl interval.
- documents are partitioned into multiple tiers, each tier including a plurality of documents sharing similar web crawl intervals. After each crawl, the search engine re-evaluates a document's web crawl interval and determines if the document should be moved from its current tier to another tier.
- changes to a document's content are divided into two categories, critical content changes referring to those changes that occur to a predetermined portion of a document and non-critical content changes covering all other changes to the document.
- critical content changes referring to those changes that occur to a predetermined portion of a document
- non-critical content changes covering all other changes to the document.
- FIG. 1 schematically represents the distribution of the content update rates of documents on the Internet as an L-shaped curve.
- FIG. 2 depicts a search engine system that implements a multi-tier data structure for the billions of documents on the Internet.
- FIG. 3 is a flowchart illustrating a dynamic crawling priority update strategy in accordance with an embodiment.
- FIG. 4 illustrates a computer-based search engine system in accordance with an embodiment.
- FIG. 1 schematically illustrates this as an L-shaped distribution of content update rates for documents.
- a search engine may incorporate a multi-tier data structure to group a certain number of documents whose content update rates fall within a particular portion of the L-shaped curve.
- tier data structure is not used and documents are not grouped into tiers for crawling purposes.
- the concepts described below would apply whether or not a tiered structure was used.
- a tiered structure may allow groups of documents to be treated together for various administrative and processing purposes.
- “Tier A” includes documents having the highest content update rates and “Tier Z” includes documents having the lowest content update rates.
- a document from a higher tier e.g., Tier A
- Tier B is given a higher crawling priority, or a higher crawl repetition rate, than any document from a lower tier, e.g., Tier B, and vice versa.
- FIG. 2 depicts a search engine system 200 that implements the multi-tier data structure as suggested above.
- Information for the documents falling into “Tier A” is stored in a database “Tier 1 ” and so on.
- Each document is characterized by a set of parameters including, e.g., a URL, a content fingerprint, a Boolean value suggesting whether there is a critical content change to the document, an actual web crawl interval identified by the search engine during previous web crawl(s) and a web crawl interval recommended for the forthcoming web crawl(s).
- the parameters could also include a past history of the N previous actual web crawl intervals. This might include information indicating for which intervals the content had changed and for which intervals the content had not changed.
- the set of parameters characterizing a document may be a subset of those identified above, or may include a subset of the parameters identified above plus other parameters not identified above.
- the multi-tier databases implementing the multi-tier data structure submit web crawl requests to a scheduler, suggesting which documents should be crawled according to their respective web crawl intervals.
- the scheduler examines the workload and capacity of its multiple web crawlers and then dispatches a particular web crawler, e.g., Crawler 3, to a web server on the Internet hosting the document.
- the web crawler After retrieving a new copy of the document from the hosting web server, the web crawler passes the new copy to a history log database.
- the history log database also has access to the previous copy of the document stored in the search engine system.
- the history log database retrieves the previous copy and submits both copies to the scheduler.
- the scheduler determines whether to modify the document's web crawl interval using information it has gathered about the document and updates one of the multi-tier databases accordingly. Of course, if this is the first time that a document has been crawled, the search engine will not have a previous copy to provide the scheduler. In this case, the scheduler assigns an initial web crawl interval to the document.
- the initial crawl interval could be determined in any of a number of ways, some of which are described below.
- FIG. 3 is a flowchart illustrating a dynamic web crawl interval update strategy in accordance with one embodiment of the present disclosure.
- one of the multi-tier databases of FIG. 2 schedules a web crawl request for the document based upon a desired web crawl interval for the document ( 302 ).
- one web crawler is invoked by the request to retrieve a new copy of the document and record it in the history log database ( 304 ).
- the history log database then passes the newly recorded document and its previous copy, if any, to the scheduler.
- the scheduler compares the content of the newly recorded document and that of the previous copy ( 306 ) to determine if the document content has changed ( 308 ).
- the determination made at 308 is whether there have been any critical content changes in the document.
- the scheduler may indicate whether or not such a change has been detected in the history log and associate it with the particular crawl interval.
- the simplest way to determine content changes is to compare the content fingerprint of the document before and after the recent crawl. If the content fingerprints are equal, the document has not changed, otherwise it has. Changes can be described as critical or non-critical and that determination may depend on the portion of the document changed, or the context of the changes, rather than the amount of text or content changed. Sometimes a change to a document may be insubstantial, e.g., the change of advertisements associated with a document. In this case, it is more appropriate to ignore those accessory materials in a document prior to making content comparisons. In other cases, e.g., as part of a product search, not every piece of information in a document is weighted equally by a potential user.
- the user may care more about the unit price of the product and the availability of the product.
- the determination of criticality or materiality is a function of the use and application of the documents.
- a document could be considered a collection of individual features which change from time to time. Changes associated with different features would be accorded different levels of importance. In this instance, a document would be considered “changed” if the combination of a set of weighted features whose values have changed exceeds a certain threshold. For example in the equation below, when C is greater than some defined value, then the document is deemed to have materially changed:
- n the number of features whose values have changed.
- n may be the total number of features and the weights may be assigned non-zero values for only those features whose values have changed.
- the scheduler sends a notice to a content indexer (not shown), which replaces index entries for the prior version of the document with index entries for the current version of the document ( 310 ).
- the scheduler computes a new web crawl interval ( 312 ) for the document based on its old interval and additional information, e.g., the document's importance (as measured by a score, such as pagerank), update rate and/or click rate. If the document's content has not been changed or if the content changes are non-critical ( 308 —No), there is no need to re-index the document ( 314 ).
- the scheduler still computes a new web crawl interval ( 316 ) for the document based on its old one and other information, in particular, based on the fact that there was no critical content change to the document.
- a new web crawl interval ( 316 ) for the document based on its old one and other information, in particular, based on the fact that there was no critical content change to the document.
- the scheduler could be configured to re-index the document and compute a new crawl interval on any change to the content, material or not.
- the scheduler records the newly determined web crawl interval at one of the multi-tier databases for later use.
- the document's web crawl interval may be different from the one used previously, the document's affiliation with a particular tier may terminate as well. More specifically, if the recomputed crawl interval belongs to the interval range associated with a different tier ( 318 —No), the document and its associate web crawl interval are moved to the other tier ( 320 ). Otherwise ( 318 —Yes), the document and its new web crawl interval are recorded in the same tier database as previously.
- the termination of whether to move the document to another tier, or to keep it in the current tier may be based on the magnitude of the change in the document's web crawl interval.
- the web search engine When determining a new crawl interval, it is desirable to choose one which will reduce the probability that in response to a user request represented by a set of query terms, the web search engine returns the address of a document matching the request based on stale content. Stale content no longer reflects the current state of the document stored on the web server.
- a probability is a function of a user view rate on the document (which is a reflection on how frequently a page is viewed); a document update rate (which is an indication of how frequently the page is updated on the web host server); and the web crawl interval (which is an indication of the time between until the crawler obtains an updated copy of the document from its web server).
- the higher a user view rate and/or the document update rate the smaller the web crawl interval must be to maintain the same relative probability (i.e., the document is crawled more frequently).
- the user view rate can be expressed as a user impression rate, a user click rate or a combination of the two.
- An impression rate is the rate at which the user is presented with the document, which includes presentation of all or part of the document in a search result, whereas the user click rate represents when a user clicks on a document to have it presented.
- the user impression rate would be combined with the user click rate multiplied by a weighting factor.
- the weighting factor allows a relationship to be created representing the relative worth of a click compared to an impression. For example, a click may be worth x impressions, where x varies from negative values to positive values.
- redirects from the origin application There are different approaches for measuring the user click rate, such as using redirects from the origin application.
- the redirect approach may be unreliable due to various spam robots which may cause the click rate to be artificially inflated.
- the effects of such could be reduced by, for example, using unique session identification information based on IP or cookie information.
- an application such as Google's NavClient could be used, which is more resistant to spam attacks than the direct approach.
- a highly desirable situation would be that the search engine crawls a document right after its update. However, this would require that a web server notify the web search engine every time it updates a document. A more practical approach is to crawl the document at a rate that is close to its “actual” update rate.
- a dynamic process to approach the near-“actual” update rate of a document would include the following steps:
- the newly completed crawl does not retrieve any new information about the document and to a certain degree, it is a waste of the search engine's limited crawling resources.
- the newly completed crawl does acquire new information about the document. In this sense, such a crawl is not a waste. However, it indicates that there must be a delay between the time when the document was updated and the time when the document was crawled even though the extent of such delay is unknown. Without knowledge of the exact update time of a document, a desirable web crawl interval for the document is the one that, when applied, alternates between the two possible outcomes.
- the web crawl interval is deemed too small and at least one of the two crawls could have been avoided to save crawling resources. Accordingly, the desirable web crawl interval should be increased. If there are two consecutive change outcomes, the web crawl interval is deemed too large and the risk that a document is “seen stale” has increased. Accordingly, the desirable web crawl interval should be decreased.
- a number of methodologies can be envisioned for producing these type of modifications to the web crawl rate. For example, the Nyquist sampling law familiar to those involved with signal processing could be applied. According to the Nyquist sampling law, a signal having a period T should be sampled at least twice during each period in order to avoid information loss.
- a document that is updated every N seconds should be sampled twice during each N seconds.
- a desirable web crawl interval would be N/2 seconds.
- the determination of a desirable web crawl interval is further made more difficult by the fact that a particular document's update rate may vary in time. As a consequence, the desired web crawl interval may vary over time.
- a dynamic desirable web crawl interval is determined as follows. Given that a web crawl interval is T 1 , if the document crawled at interval T+T 1 shows that the document has been changed, then the web crawl interval is modified to be half of the previous interval, i.e., T 1 /2. If there is no change to the document after the web crawl interval is halved, the desirable web crawl interval is modified to be somewhere between T 1 /2 and T 1 , e.g., the average of the two intervals, 3 T 1 /4.
- An iterative process can be used to refine the desired web crawl interval. Different embodiments may select the initial web crawl interval in different ways.
- the initial web crawl interval could be determined to be the average actual or average desired change interval for all documents, for all documents determined to be in a similar tier, or documents having a similarity to the document under consideration.
- the initial web crawl interval could be based, at least in part, on a document's popularity or importance (e.g., as measured by the document's pagerank). For example, two documents in the same tier, but with different pageranks, may be assigned different initial web crawl intervals in accordance with their respective pageranks.
- PageRank is used in this document mean a document importance score. PageRank is just one example of a document importance score. A detailed description of the PageRank algorithm can be found in the article “The Anatomy of a Large-Scale Hypertextual Search Engine” by S. Brin and L. Page, 7 th International World Wide Web Conference, Brisbane, Australia and U.S. Pat. No. 6,285,999, both of which are hereby incorporated by reference as background information.
- an average interval between changes is compared to an average interval between no changes. If the average interval between crawls where no change was detected is greater than the average interval between crawls where a change was detected, the crawl interval may be close to the desired crawl interval. The interval could be maintained, or could be modified in accordance with the last comparison of the document with its prior version. For example, if the last comparison detected a change, then the web crawl interval may be changed to be the average interval between crawls where change was detected. On the other hand, if the last comparison detected no change, then the web crawl interval may be changed to be the average interval between crawls where no change was detected.
- the new web crawl interval may be chosen to be the average of the two averages.
- the desired web crawl interval can be combined with other information to provide a score used to determine the crawling order for the documents to be crawled by a web search engine.
- the score takes into account various inputs to create a web crawl priority in order to reduce the probability of stale content to a desired level. For example, a document with a higher web crawl priority would receive more frequent visits from the search engine's web crawlers, resulting in a higher likelihood that the content is not stale.
- the search engine can consider each document's pagerank, user click rate, and content update rates and/or other information, and provide an appropriate web crawl priority to the document so that the resultant probability of a document being seen “dirty”, i.e., the document's stale content being used in response to a search query, is below an acceptable level.
- a document's web crawl priority will determine its web crawl order relative to other documents competing for a search engine's limited web crawl capacity.
- a document's desired web crawl interval is not necessarily identical to the document's actual web crawl interval.
- the priority given to a certain document may not allow it to be crawled at the desired interval.
- documents are grouped in tiers, that too may affect the actual crawl interval.
- a document's actual web crawl interval may be longer than the desired web crawl interval.
- the difference between the two web crawl intervals does not adversely affect the role played by the desired web crawl interval in a significant way.
- the shorter the web crawl interval of a document the higher its web crawl priority.
- P stale ⁇ (PR pagerank ,T click — rate ,T content — update — rate ,T web — crawl ).
- P stale represents a probability that the document is searched, or seen, in its stale state
- PR pagerank represents the pagerank or importance of the document
- T click rate represents the rate at which users click on the document
- T content update rate represents the rate at which the document is updated by its web server
- T web crawl represents the desired web crawl interval.
- a document's pagerank is often correlated with its user click rate, because the pagerank is indicative of the document's popularity or importance. The more popular a document is, the more visits it receives per unit of time period.
- the P stale score is used to order the crawl of documents.
- documents are crawled in decreasing order of the probability that they will be seen in their stale state.
- a document may be thought of as a collection of features which may be individually updated from time to time. As such, each feature may or may not be modified from the previous crawl. Each feature could have a feature change interval associated with it measured and stored as discussed above.
- the feature change intervals can be used to construct a document change interval where each feature is given a different weight depending on its desired importance, or other factors. For example, the document change interval could be determined by:
- n is the number of features. This change interval could then be used as described above in determining the desired web crawl interval.
- FIG. 4 illustrates an embodiment of a computer-based search engine system 400 that implements the web crawl interval update strategy discussed above.
- the system 400 includes one or more processing units (CPU's) 402 , one or more network or other communications interfaces 410 , memory 412 , and one or more communication buses 414 for interconnecting these components.
- the system 400 may optionally include a user interface 404 comprising a display device 406 and a keyboard 408 .
- Memory 412 may include high speed random access memory and may also include non-volatile memory, such as one or more magnetic disk storage devices.
- Memory 412 may include mass storage that is remotely located from the CPU's 402 .
- the memory 412 stores:
Abstract
A method includes comparing a first instance with a second instance of a document in a plurality of documents. The first instance is obtained from a remote location at a specified time before the second instance is obtained from the remote location, and (i) the specified time is determined in accordance with a first crawl interval associated with the document, (ii) each document in the plurality of documents is assigned to a tier in a plurality of tiers, each tier having a distinct associated range of web crawl intervals, and (iii) the first crawl interval is assigned a first tier. The method also includes computing a second crawl interval for the document, which is a function of the document comparison; and determining whether the second crawl interval is in the first tier. When the second crawl interval is not, the first document is reassigned to another tier.
Description
This application is a continuation of U.S. application Ser. No. 13/166,757, now U.S. Pat. No. 8,407,204, filed Jun. 22, 2011, entitled “Minimizing Visibility of Stale Content in Web Searching Including Revising Web Crawl Intervals of Documents,” which is a continuation of U.S. application Ser. No. 10/930,280, now U.S. Pat. No. 7,987,172, filed Aug. 30, 2004. All above-mentioned patents and patent applications are hereby incorporated by reference in their entities.
The present disclosure relates generally to the field of search engines for locating documents in a computer network system, and in particular, to a system and method for minimizing the visibility of stale data through a web search engine.
Search engines provide a powerful tool for locating documents in a large database of documents, such as the documents on the Internet or the documents stored on the computers of an Intranet. In the context of this application, a document is defined as a combination of a document address, e.g., a universal resource locator (URL), and a document content.
A typical structure of a web search engine comprises a front end and a back end. The front end includes a query server for receiving a search query submitted by a user and displaying search results to the user, and a query processor for transforming the search query into a search request understood by the back end of the web search engine. The back end includes one or more web crawlers for retrieving documents from the Internet, a scheduler for providing addresses of the documents to the web crawlers, an indexer for indexing the documents retrieved by the web crawlers and one or more databases for storing information of the retrieved documents, e.g., the indexes of the documents. Upon receipt of a search request, the front end searches the databases, identifies documents whose contents match the search request and returns them as the search results to the requester.
There are billions of documents accessible through the Internet. The life expectancy of a document's content (after which its contents may be replaced or changed) may vary from a few years, to a few seconds. Every day, many thousands of new and revised documents are posted by various web servers all over the world, while other documents are deleted from their hosting web servers and are therefore no longer accessible. As a result, at least some of the document information stored in a web search engine is likely to be stale, even if the web search engine is continuously crawling the web so as to update its database. Stale content in a search engine database is said to be visible when the search engine returns a result (e.g., in response to search query) that is based on stale information. In some cases, the stale content in the search engine may have no particular significance, because the changes to the documents listed in a search result are minor, or the relevance of the documents remains substantially the same. However, in other cases the search result may include links to documents that no longer exist, or whose content has changed such that the result is no longer relevant to the query (or has lower relevance to the query than the prior content of the documents). For purposes of this document, stale content is assumed to be visible, whenever search results are returned based on the stale content, even if the search results are still useful to the user.
In general, it would be desirable to keep the document information in a search engine's databases as fresh as possible, while avoiding needless refreshing of content that is highly static. More generally, it would be desirable to schedule documents for downloading by a web crawler so as to minimize the visibility of stale document information in the databases of the search engine.
A web crawling system associates an appropriate web crawl interval with a document so that the probability of the document's stale content being used by a search engine is maintained below an acceptable level. Assuming sufficient crawl bandwidth, the search engine crawls each document at its associated web crawl interval.
In some embodiments, a method for scheduling a document crawl interval, includes: at a computer system having one or more processors and memory storing one or more programs for execution by the one or more processors: comparing a first instance of a document in a plurality of documents with a second instance of the document, thereby obtaining a document comparison. The first instance of the document is obtained from a remote location at a specified time before the second instance of the document is obtained from the remote location. The specified time is determined in accordance with a first crawl interval associated with the document. Each document in the plurality of documents is assigned to a tier in a plurality of tiers, each tier in the plurality of tiers having a distinct associated range of web crawl intervals, and the first crawl interval is assigned a first tier in the plurality of tiers. The method also includes computing a second crawl interval for the document; and determining whether the second crawl interval is in the first tier. The second crawl interval is a function of the document comparison. When the second crawl interval is not in the first tier, the first document is reassigned to another tier in the plurality of tiers.
In some embodiments, the web crawl interval of a document is identified by an iterative process that starts with an initial estimate of the web crawl interval. The iterative process, after crawling a document multiple times at different time intervals and analyzing the content changes associated with the crawling results, converges to a time interval that is deemed most appropriate for this document. This time interval is associated with the document as its web crawl interval.
In one embodiment, documents are partitioned into multiple tiers, each tier including a plurality of documents sharing similar web crawl intervals. After each crawl, the search engine re-evaluates a document's web crawl interval and determines if the document should be moved from its current tier to another tier.
In another embodiment, changes to a document's content are divided into two categories, critical content changes referring to those changes that occur to a predetermined portion of a document and non-critical content changes covering all other changes to the document. During the course of updating a document's web crawl interval, the search engine takes into account only critical content changes and ignores all non-critical content changes to the document.
The aforementioned features and advantages of the embodiments disclosed herein as well as additional features and advantages thereof will be more clearly understood hereinafter as a result of a detailed description when taken in conjunction with the drawings.
Like reference numerals refer to corresponding parts throughout the several views of the drawings.
It is expected that a small number of documents on the Internet will have content that changes frequently and a larger number of documents will have content that changes rather infrequently. Document update intervals may range, for example, from once every few seconds to once every few years. FIG. 1 schematically illustrates this as an L-shaped distribution of content update rates for documents. There are a relatively small number of documents having high content update rates, as shown at the left portion of the L-shaped curve. On the other hand, as shown at the right portion of the curve, there are a large number of documents with much lower content update rates. Based on the distribution of content update rates, a search engine may incorporate a multi-tier data structure to group a certain number of documents whose content update rates fall within a particular portion of the L-shaped curve. This grouping may be used to ease the administrative overhead of scheduling efforts to obtain new copies of the documents. On the other hand, in another embodiment, such a tier data structure is not used and documents are not grouped into tiers for crawling purposes. The concepts described below would apply whether or not a tiered structure was used.
As mentioned above, a tiered structure may allow groups of documents to be treated together for various administrative and processing purposes. As shown in FIG. 1 , “Tier A” includes documents having the highest content update rates and “Tier Z” includes documents having the lowest content update rates. Typically, a document from a higher tier, e.g., Tier A, is given a higher crawling priority, or a higher crawl repetition rate, than any document from a lower tier, e.g., Tier B, and vice versa.
The multi-tier databases implementing the multi-tier data structure submit web crawl requests to a scheduler, suggesting which documents should be crawled according to their respective web crawl intervals. In response, the scheduler examines the workload and capacity of its multiple web crawlers and then dispatches a particular web crawler, e.g., Crawler 3, to a web server on the Internet hosting the document.
After retrieving a new copy of the document from the hosting web server, the web crawler passes the new copy to a history log database. The history log database also has access to the previous copy of the document stored in the search engine system. Upon receipt of the new copy, the history log database retrieves the previous copy and submits both copies to the scheduler. The scheduler determines whether to modify the document's web crawl interval using information it has gathered about the document and updates one of the multi-tier databases accordingly. Of course, if this is the first time that a document has been crawled, the search engine will not have a previous copy to provide the scheduler. In this case, the scheduler assigns an initial web crawl interval to the document. The initial crawl interval could be determined in any of a number of ways, some of which are described below.
The simplest way to determine content changes is to compare the content fingerprint of the document before and after the recent crawl. If the content fingerprints are equal, the document has not changed, otherwise it has. Changes can be described as critical or non-critical and that determination may depend on the portion of the document changed, or the context of the changes, rather than the amount of text or content changed. Sometimes a change to a document may be insubstantial, e.g., the change of advertisements associated with a document. In this case, it is more appropriate to ignore those accessory materials in a document prior to making content comparisons. In other cases, e.g., as part of a product search, not every piece of information in a document is weighted equally by a potential user. For instance, the user may care more about the unit price of the product and the availability of the product. In this case, it is more appropriate to focus on the changes associated with information that is deemed critical to a potential user rather than something that is less significant, e.g., a change in a product's color. Accordingly, the determination of criticality or materiality is a function of the use and application of the documents.
Alternatively, a document could be considered a collection of individual features which change from time to time. Changes associated with different features would be accorded different levels of importance. In this instance, a document would be considered “changed” if the combination of a set of weighted features whose values have changed exceeds a certain threshold. For example in the equation below, when C is greater than some defined value, then the document is deemed to have materially changed:
where n is the number of features whose values have changed. Alternately, n may be the total number of features and the weights may be assigned non-zero values for only those features whose values have changed.
If the document has changed materially since the last crawl (308—Yes), the scheduler sends a notice to a content indexer (not shown), which replaces index entries for the prior version of the document with index entries for the current version of the document (310). Next, the scheduler computes a new web crawl interval (312) for the document based on its old interval and additional information, e.g., the document's importance (as measured by a score, such as pagerank), update rate and/or click rate. If the document's content has not been changed or if the content changes are non-critical (308—No), there is no need to re-index the document (314). However, the scheduler still computes a new web crawl interval (316) for the document based on its old one and other information, in particular, based on the fact that there was no critical content change to the document. A more in-depth discussion regarding the determination of the new web crawl interval is provided below. Of course, the scheduler could be configured to re-index the document and compute a new crawl interval on any change to the content, material or not.
Next, the scheduler records the newly determined web crawl interval at one of the multi-tier databases for later use. However, since the document's web crawl interval may be different from the one used previously, the document's affiliation with a particular tier may terminate as well. More specifically, if the recomputed crawl interval belongs to the interval range associated with a different tier (318—No), the document and its associate web crawl interval are moved to the other tier (320). Otherwise (318—Yes), the document and its new web crawl interval are recorded in the same tier database as previously. Alternately, the termination of whether to move the document to another tier, or to keep it in the current tier, may be based on the magnitude of the change in the document's web crawl interval.
When determining a new crawl interval, it is desirable to choose one which will reduce the probability that in response to a user request represented by a set of query terms, the web search engine returns the address of a document matching the request based on stale content. Stale content no longer reflects the current state of the document stored on the web server. Such a probability is a function of a user view rate on the document (which is a reflection on how frequently a page is viewed); a document update rate (which is an indication of how frequently the page is updated on the web host server); and the web crawl interval (which is an indication of the time between until the crawler obtains an updated copy of the document from its web server). This function can be expressed as:
Probability(Seen_Stale_Data)=Function(User_View_Rate,Document_Update_Rate,Web_Crawl_Interval).
Probability(Seen_Stale_Data)=Function(User_View_Rate,Document_Update_Rate,Web_Crawl_Interval).
In one embodiment, given a desired probability, Probability_Desired, the web crawl interval can be expressed as:
Web_Crawl_Interval=Probability_Desired/(User_View_Rate*Document_Update_Rate).
Web_Crawl_Interval=Probability_Desired/(User_View_Rate*Document_Update_Rate).
In other words, the higher a user view rate and/or the document update rate, the smaller the web crawl interval must be to maintain the same relative probability (i.e., the document is crawled more frequently).
Alternatively, the user view rate can be expressed as a user impression rate, a user click rate or a combination of the two. An impression rate is the rate at which the user is presented with the document, which includes presentation of all or part of the document in a search result, whereas the user click rate represents when a user clicks on a document to have it presented. As a combination, the user impression rate would be combined with the user click rate multiplied by a weighting factor. The weighting factor allows a relationship to be created representing the relative worth of a click compared to an impression. For example, a click may be worth x impressions, where x varies from negative values to positive values.
There are different approaches for measuring the user click rate, such as using redirects from the origin application. However, the redirect approach may be unreliable due to various spam robots which may cause the click rate to be artificially inflated. The effects of such could be reduced by, for example, using unique session identification information based on IP or cookie information. Alternatively, an application such as Google's NavClient could be used, which is more resistant to spam attacks than the direct approach.
It would be desirable to accurately estimate an update rate of a particular document to be crawled. Every document on the Internet has an associated document update rate and, as mentioned earlier, some documents are updated more frequently than others. If an estimated document update rate used to determine how frequently a document is crawled is much higher than the actual document update rate, then a too small web crawl interval will be determined. Therefore, a later crawl of the document at that smaller interval is likely to retrieve a copy of the document content that is substantially or materially the same as the previous crawl(s). This unnecessary crawl wastes valuable resources of the search engine. On the other hand, an estimated document update rate that is much lower than the actual document update rate results in a longer than necessary web crawl interval. This may cause the search engine to match a user query to stale data of a document because the search engine has not indexed the current version of the document.
A highly desirable situation would be that the search engine crawls a document right after its update. However, this would require that a web server notify the web search engine every time it updates a document. A more practical approach is to crawl the document at a rate that is close to its “actual” update rate.
As described in reference to FIG. 3 above, a dynamic process to approach the near-“actual” update rate of a document, would include the following steps:
-
- 1. Crawling a URL to fetch a new copy of the document's content; and
- 2. Comparing the new content with an old content of the document to determine if the content has changed, and if so, to what extent.
There are two possible outcomes from the comparison: - 1. There is no change (or at least no material change) to the document during the web crawl interval; and
- 2. There is a content change (or at least a material change) to the document during the web crawl interval.
In the first case, the newly completed crawl does not retrieve any new information about the document and to a certain degree, it is a waste of the search engine's limited crawling resources. In the second case, the newly completed crawl does acquire new information about the document. In this sense, such a crawl is not a waste. However, it indicates that there must be a delay between the time when the document was updated and the time when the document was crawled even though the extent of such delay is unknown. Without knowledge of the exact update time of a document, a desirable web crawl interval for the document is the one that, when applied, alternates between the two possible outcomes.
If there are two consecutive no-change outcomes, the web crawl interval is deemed too small and at least one of the two crawls could have been avoided to save crawling resources. Accordingly, the desirable web crawl interval should be increased. If there are two consecutive change outcomes, the web crawl interval is deemed too large and the risk that a document is “seen stale” has increased. Accordingly, the desirable web crawl interval should be decreased. A number of methodologies can be envisioned for producing these type of modifications to the web crawl rate. For example, the Nyquist sampling law familiar to those involved with signal processing could be applied. According to the Nyquist sampling law, a signal having a period T should be sampled at least twice during each period in order to avoid information loss. In the case of web crawling, a document that is updated every N seconds should be sampled twice during each N seconds. In other words, a desirable web crawl interval would be N/2 seconds. The determination of a desirable web crawl interval is further made more difficult by the fact that a particular document's update rate may vary in time. As a consequence, the desired web crawl interval may vary over time.
In one embodiment, a dynamic desirable web crawl interval is determined as follows. Given that a web crawl interval is T1, if the document crawled at interval T+T1 shows that the document has been changed, then the web crawl interval is modified to be half of the previous interval, i.e., T1/2. If there is no change to the document after the web crawl interval is halved, the desirable web crawl interval is modified to be somewhere between T1/2 and T1, e.g., the average of the two intervals, 3 T1/4. An iterative process can be used to refine the desired web crawl interval. Different embodiments may select the initial web crawl interval in different ways. For example, the initial web crawl interval could be determined to be the average actual or average desired change interval for all documents, for all documents determined to be in a similar tier, or documents having a similarity to the document under consideration. In other embodiments, the initial web crawl interval could be based, at least in part, on a document's popularity or importance (e.g., as measured by the document's pagerank). For example, two documents in the same tier, but with different pageranks, may be assigned different initial web crawl intervals in accordance with their respective pageranks.
The term “pagerank” is used in this document mean a document importance score. PageRank is just one example of a document importance score. A detailed description of the PageRank algorithm can be found in the article “The Anatomy of a Large-Scale Hypertextual Search Engine” by S. Brin and L. Page, 7th International World Wide Web Conference, Brisbane, Australia and U.S. Pat. No. 6,285,999, both of which are hereby incorporated by reference as background information.
In another embodiment, an average interval between changes is compared to an average interval between no changes. If the average interval between crawls where no change was detected is greater than the average interval between crawls where a change was detected, the crawl interval may be close to the desired crawl interval. The interval could be maintained, or could be modified in accordance with the last comparison of the document with its prior version. For example, if the last comparison detected a change, then the web crawl interval may be changed to be the average interval between crawls where change was detected. On the other hand, if the last comparison detected no change, then the web crawl interval may be changed to be the average interval between crawls where no change was detected.
If the average interval between crawls where no change was detected is less than the average interval between crawls where a change was detected, it suggests that the desired crawl interval is between the two averages. Accordingly, the new web crawl interval may be chosen to be the average of the two averages.
The desired web crawl interval can be combined with other information to provide a score used to determine the crawling order for the documents to be crawled by a web search engine. The score takes into account various inputs to create a web crawl priority in order to reduce the probability of stale content to a desired level. For example, a document with a higher web crawl priority would receive more frequent visits from the search engine's web crawlers, resulting in a higher likelihood that the content is not stale.
In reality there are a huge number of documents competing for the limited web crawl capacity of a search engine. Therefore, it is practically inevitable that some documents will have stale content and will be presented to a user in a search result. The search engine can consider each document's pagerank, user click rate, and content update rates and/or other information, and provide an appropriate web crawl priority to the document so that the resultant probability of a document being seen “dirty”, i.e., the document's stale content being used in response to a search query, is below an acceptable level. In other words, a document's web crawl priority will determine its web crawl order relative to other documents competing for a search engine's limited web crawl capacity.
It should be noted that a document's desired web crawl interval is not necessarily identical to the document's actual web crawl interval. For example, the priority given to a certain document may not allow it to be crawled at the desired interval. Or, if documents are grouped in tiers, that too may affect the actual crawl interval. As a result, a document's actual web crawl interval may be longer than the desired web crawl interval. However, the difference between the two web crawl intervals does not adversely affect the role played by the desired web crawl interval in a significant way. Generally, the shorter the web crawl interval of a document, the higher its web crawl priority.
A generic relationship between the probability of a document being seen stale and its pagerank, user click rate, content update rate and web crawl interval can be expressed as:
P stale=ƒ(PRpagerank ,T click— rate ,T content — update — rate ,T web — crawl).
P stale=ƒ(PRpagerank ,T click
where Pstale represents a probability that the document is searched, or seen, in its stale state; PRpagerank represents the pagerank or importance of the document; Tclick rate represents the rate at which users click on the document; Tcontent update rate represents the rate at which the document is updated by its web server; and Tweb crawl represents the desired web crawl interval. The exact mathematical expression of the function ƒ is relatively arbitrary depending on how much weight each of the four parameters is allocated by the search engine in determining the probability. However, there is a set of qualitative features characterizing this relationship shared by any particular mathematical expression. For example, if the pagerank, the content update rate and the desired web crawl interval of a document are treated as fixed quantities, an increase in the user click rate will result in a higher probability of the document being seen, or searched, as stale from the search engine. Similarly, an increase in a document's content update rate, while holding fixed the other parameters, will increase the probability of stale content from the document being seen. An increase in the web crawl interval, while holding fixed the other parameters, will also increase the probability of stale content from the document being seen.
The impact of a document's pagerank on its probability of being seen stale is similar to that of the user click rate. A document's pagerank is often correlated with its user click rate, because the pagerank is indicative of the document's popularity or importance. The more popular a document is, the more visits it receives per unit of time period.
In one embodiment, the Pstale score is used to order the crawl of documents. In this embodiment, documents are crawled in decreasing order of the probability that they will be seen in their stale state.
As noted above, a document may be thought of as a collection of features which may be individually updated from time to time. As such, each feature may or may not be modified from the previous crawl. Each feature could have a feature change interval associated with it measured and stored as discussed above. The feature change intervals can be used to construct a document change interval where each feature is given a different weight depending on its desired importance, or other factors. For example, the document change interval could be determined by:
where n is the number of features. This change interval could then be used as described above in determining the desired web crawl interval.
-
- an
operating system 416 that includes procedures for handling various basic system services and for performing hardware dependent tasks; - a network communication module (or instructions) 418 for connecting the
computer system 400 to other computers via the one or more communication network interfaces 410 (wired or wireless), such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; - a system initialization module (or instructions) 420 that initializes other modules and data structures stored in
memory 412 required for the appropriate operation of thecomputer system 400; - a
query processor 422 for receiving and processing search queries submitted from various client computers, and then organizing and transmitting search results back to the corresponding client computers; - a
pageranker 424 for calculating a content-independent and structure-based pagerank of a document that is used for representing the document's relative popularity; - a
content indexer 426 for generating a set of inverted content indexes for a document based on its current content; - a
scheduler 428 for dispatching web crawlers in response to web crawling requests and determining a new web crawl interval for a crawled document; - one or more web crawlers 430 for retrieving documents from various hosting web servers;
- a
history log database 432 for storing previous web crawling results of each document; and - one or more
multi-tier databases 434, each database managing a certain number of documents' web crawl requests.
- an
The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the present disclosure to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the present disclosure and its practical applications, to thereby enable others skilled in the art to best utilize the present disclosure and various embodiments with various modifications as are suited to the particular use contemplated.
Claims (32)
1. A method for scheduling a document crawl interval, comprising:
at a computer system having one or more processors and a memory storing one or more programs for execution by the one or more processors:
comparing a first instance of a document in a plurality of documents with a second instance of the document, thereby obtaining a document comparison, wherein the first instance of the document is obtained from a remote location at a specified time before the second instance of the document is obtained from the remote location and wherein
(i) the specified time is determined in accordance with a first crawl interval associated with the document,
(ii) each document in the plurality of documents is assigned to a crawl-scheduling tier in a plurality of crawl-scheduling tiers, each crawl-scheduling tier in the plurality of crawl-scheduling tiers having a distinct associated range of web crawl intervals, and
(iii) the first crawl interval is assigned a first crawl-scheduling tier in the plurality of crawl-scheduling tiers; and
computing a second crawl interval for the document, wherein the second crawl interval is a function of the document comparison; and
determining whether the second crawl interval is in the crawl-scheduling first tier, wherein, when the second crawl interval is not in the crawl-scheduling first tier, the first document is reassigned to a crawl-scheduling tier in the plurality of crawl-scheduling tiers other than the first crawl-scheduling tier.
2. The method of claim 1 , wherein comparing the first instance with the second instance includes comparing a document fingerprint of the first instance with a document fingerprint of the second instance.
3. The method of claim 1 , wherein the first instance of the document is unchanged with respect to the second instance of the document.
4. The method of claim 1 , wherein the first instance of the document is changed compared to the second instance of the document.
5. The method of claim 1 , wherein the first instance of the document is changed with respect to the second instance of the document and wherein the second crawl interval for the document is less than the first crawl interval.
6. The method of claim 1 , wherein the document comparison produces a result corresponding to a change between the first instance and the second instance, and the result is one of: no change, a critical change, and a non-critical change.
7. The method of claim 1 , wherein the document includes a plurality of portions, each portion in the plurality of portions is associated with a comparison weight, and comparing the first instance of the document with the second instance of the document uses a comparison weight associated with a portion included in the document.
8. The method of claim 1 , wherein the second crawl interval is also a function of the first crawl interval.
9. The method of claim 1 , wherein computing the second crawl interval for the document includes:
in accordance with a determination that the document has changed, reindexing the document; and computing the second crawl interval in accordance the document change.
10. The method of claim 1 , wherein computing the second crawl interval for the document includes:
in accordance with a determination that the document has not changed, reusing the document; and computing the second crawl interval in accordance the determination that the document has not changed.
11. The method of claim 1 , wherein computing the second crawl interval for the document includes:
in accordance with a determination that the document has not changed, reusing the document; and computing the second crawl interval in accordance the determination that the document has not changed.
12. The method of claim 1 , wherein the second crawl interval for the document is associated with a lesser likelihood that a user will see stale content of the document.
13. The method of claim 1 , wherein a crawl interval for the document is determined using a desired likelihood that a user will not see stale content of the document, a user view rate of the document, and a document update rate of the document.
14. The method of claim 13 , wherein the user view rate of the document is determined using a user impression rate of the document, and a user click rate of the document.
15. The method of claim 14 , wherein the user impression rate of the document corresponds to a rate at which at least a portion of the document is presented to the user, and the user click rate of the document corresponds to a rate at which the document is clicked by the user.
16. The method of claim 14 , wherein the user click rate of the document is calculated using a number of redirects to the document from another application.
17. The method of claim 13 , wherein the desired likelihood that a user will not see stale content of the document is calculated using the document's page rank, the document's user click rate, the document's content update rate, the document's desired crawl interval.
18. The method of claim 17 , further comprising: determining crawling order for the document in accordance with the desired likelihood that a user will not see stale content of the document.
19. The method of claim 1 , wherein the steps recited in claim 1 are executed in response to obtaining a notification that the document has been updated.
20. The method of claim 1 , further comprising:
in accordance with a first document comparison having a result that the document has not changed, and a second document comparison having a result that the document has not changed:
increasing crawl interval for the document.
21. The method of claim 20 , wherein the first document comparison and the second document comparison are consecutive.
22. The method of claim 1 , further comprising:
in accordance with a first document comparison having a result that the document has changed, and a second document comparison having a result that the document has not changed:
decreasing crawl interval for the document.
23. The method of claim 22 , wherein the first document comparison and the second document comparison are consecutive.
24. The method of claim 1 , further comprising: increasing or decreasing crawl interval for the document in accordance with a Nyquist sampling law.
25. The method of claim 1 , further comprising: determining an initial crawl interval for the document in accordance with the document's importance score.
26. The method of claim 1 , further comprising: determining a desired crawl interval for the document using: (i) average interval between crawls where the document has not change and (ii) the average interval between crawls where the document has changed.
27. The method of claim 26 , wherein the desired crawl interval for the document is the average of (i) average interval between crawls where the document has not changed and (ii) the average interval between crawls where the document has changed.
28. The method of claim 26 , further comprising: determining crawling order for the document in accordance with the document's desired crawl interval.
29. The method of claim 24 , further comprising: determining crawling order for the document also in accordance with the document's crawling priority.
30. The method of claim 1 , wherein the document corresponds to a plurality of features, each feature in the plurality of features is associated with a feature change interval and a importance score; and further comprising:
determining the document's crawling interval using a respective feature's feature change interval and importance score.
31. A computer system comprising:
one or more processors;
a memory storing one or more programs for execution by the one or more processors, wherein the one or more programs comprising instructions for:
comparing a first instance of a document in a plurality of documents with a second instance of the document, thereby obtaining a document comparison, wherein the first instance of the document is obtained from a remote location at a specified time before the second instance of the document is obtained from the remote location and wherein
(i) the specified time is determined in accordance with a first crawl interval associated with the document,
(ii) each document in the plurality of documents is assigned to a crawl-scheduling tier in a plurality of crawl-scheduling tiers, each crawl-scheduling tier in the plurality of crawl-scheduling tiers having a distinct associated range of web crawl intervals, and
(iii) the first crawl interval is assigned a first crawl-scheduling tier in the plurality of crawl-scheduling tiers; and
computing a second crawl interval for the document, wherein the second crawl interval is a function of the document comparison; and
determining whether the second crawl interval is in the crawl-scheduling first tier, wherein, when the second crawl interval is not in the crawl-scheduling first tier, the first document is reassigned to a crawl-scheduling tier in the plurality of crawl-scheduling tiers other than the first crawl-scheduling tier;
determining whether the second crawl interval is in the first tier, wherein, when the second crawl interval is not in the first tier, the first document is reassigned to a tier in the plurality of tiers other than the first tier.
32. A non-transitory computer readable storage medium storing one or more programs to be executed by a computer system, the one or more programs comprising instructions for:
comparing a first instance of a document in a plurality of documents with a second instance of the document, thereby obtaining a document comparison, wherein the first instance of the document is obtained from a remote location at a specified time before the second instance of the document is obtained from the remote location and wherein
(i) the specified time is determined in accordance with a first crawl interval associated with the document,
(ii) each document in the plurality of documents is assigned to a crawl-scheduling tier in a plurality of crawl-scheduling tiers, each crawl-scheduling tier in the plurality of crawl-scheduling tiers having a distinct associated range of web crawl intervals, and
(iii) the first crawl interval is assigned a first crawl-scheduling tier in the plurality of crawl-scheduling tiers; and
computing a second crawl interval for the document, wherein the second crawl interval is a function of the document comparison; and
determining whether the second crawl interval is in the crawl-scheduling first tier, wherein, when the second crawl interval is not in the crawl-scheduling first tier, the first document is reassigned to a crawl-scheduling tier in the plurality of crawl-scheduling tiers other than the first crawl-scheduling tier.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/849,355 US8782032B2 (en) | 2004-08-30 | 2013-03-22 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/930,280 US7987172B1 (en) | 2004-08-30 | 2004-08-30 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US13/166,757 US8407204B2 (en) | 2004-08-30 | 2011-06-22 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US13/849,355 US8782032B2 (en) | 2004-08-30 | 2013-03-22 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/166,757 Continuation US8407204B2 (en) | 2004-08-30 | 2011-06-22 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
Publications (2)
Publication Number | Publication Date |
---|---|
US20130226897A1 US20130226897A1 (en) | 2013-08-29 |
US8782032B2 true US8782032B2 (en) | 2014-07-15 |
Family
ID=44280187
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/930,280 Active 2026-02-14 US7987172B1 (en) | 2004-08-30 | 2004-08-30 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US13/166,757 Active US8407204B2 (en) | 2004-08-30 | 2011-06-22 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US13/849,355 Expired - Fee Related US8782032B2 (en) | 2004-08-30 | 2013-03-22 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/930,280 Active 2026-02-14 US7987172B1 (en) | 2004-08-30 | 2004-08-30 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US13/166,757 Active US8407204B2 (en) | 2004-08-30 | 2011-06-22 | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
Country Status (1)
Country | Link |
---|---|
US (3) | US7987172B1 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN106294364A (en) * | 2015-05-15 | 2017-01-04 | 阿里巴巴集团控股有限公司 | Realize the method and apparatus that web crawlers captures webpage |
CN112219204A (en) * | 2019-05-09 | 2021-01-12 | 谷歌有限责任公司 | Context adaptive scanning |
Families Citing this family (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7725452B1 (en) | 2003-07-03 | 2010-05-25 | Google Inc. | Scheduler for search engine crawler |
US8707312B1 (en) | 2003-07-03 | 2014-04-22 | Google Inc. | Document reuse in a search engine crawler |
US7987172B1 (en) * | 2004-08-30 | 2011-07-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
WO2006055983A2 (en) | 2004-11-22 | 2006-05-26 | Truveo, Inc. | Method and apparatus for a ranking engine |
US8386459B1 (en) * | 2005-04-25 | 2013-02-26 | Google Inc. | Scheduling a recrawl |
US8666964B1 (en) | 2005-04-25 | 2014-03-04 | Google Inc. | Managing items in crawl schedule |
US7769742B1 (en) | 2005-05-31 | 2010-08-03 | Google Inc. | Web crawler scheduler that utilizes sitemaps from websites |
US7509315B1 (en) | 2005-06-24 | 2009-03-24 | Google Inc. | Managing URLs |
US8533226B1 (en) | 2006-08-04 | 2013-09-10 | Google Inc. | System and method for verifying and revoking ownership rights with respect to a website in a website indexing system |
US7599920B1 (en) * | 2006-10-12 | 2009-10-06 | Google Inc. | System and method for enabling website owners to manage crawl rate in a website indexing system |
US8243596B2 (en) | 2007-06-21 | 2012-08-14 | Intel Corporation | Distributing intelligence across networks |
US20110016471A1 (en) * | 2009-07-15 | 2011-01-20 | Microsoft Corporation | Balancing Resource Allocations Based on Priority |
US8255385B1 (en) * | 2011-03-22 | 2012-08-28 | Microsoft Corporation | Adaptive crawl rates based on publication frequency |
US8732569B2 (en) | 2011-05-04 | 2014-05-20 | Google Inc. | Predicting user navigation events |
US9769285B2 (en) | 2011-06-14 | 2017-09-19 | Google Inc. | Access to network content |
US8788711B2 (en) | 2011-06-14 | 2014-07-22 | Google Inc. | Redacting content and inserting hypertext transfer protocol (HTTP) error codes in place thereof |
US8650139B2 (en) | 2011-07-01 | 2014-02-11 | Google Inc. | Predicting user navigation events |
US9286334B2 (en) | 2011-07-15 | 2016-03-15 | International Business Machines Corporation | Versioning of metadata, including presentation of provenance and lineage for versioned metadata |
US9384193B2 (en) | 2011-07-15 | 2016-07-05 | International Business Machines Corporation | Use and enforcement of provenance and lineage constraints |
US8782031B2 (en) * | 2011-08-09 | 2014-07-15 | Microsoft Corporation | Optimizing web crawling with user history |
US9584579B2 (en) * | 2011-12-01 | 2017-02-28 | Google Inc. | Method and system for providing page visibility information |
US20130185276A1 (en) * | 2012-01-17 | 2013-07-18 | Sackett Solutions & Innovations, LLC | System for Search and Customized Information Updating of New Patents and Research, and Evaluation of New Research Projects' and Current Patents' Potential |
US9418065B2 (en) | 2012-01-26 | 2016-08-16 | International Business Machines Corporation | Tracking changes related to a collection of documents |
JP5929356B2 (en) * | 2012-03-15 | 2016-06-01 | 富士ゼロックス株式会社 | Information processing apparatus and information processing program |
US9946792B2 (en) | 2012-05-15 | 2018-04-17 | Google Llc | Access to network content |
EP2680171A3 (en) * | 2012-06-29 | 2014-01-22 | Orange | Intelligent index scheduling |
US20180285327A1 (en) * | 2012-07-13 | 2018-10-04 | Ziga Mahkovec | Determining cacheability of webpages |
US11429651B2 (en) * | 2013-03-14 | 2022-08-30 | International Business Machines Corporation | Document provenance scoring based on changes between document versions |
CN104123329B (en) * | 2013-04-25 | 2019-06-07 | 北京千橡网景科技发展有限公司 | Searching method and device |
US9311406B2 (en) | 2013-06-05 | 2016-04-12 | Microsoft Technology Licensing, Llc | Discovering trending content of a domain |
US20150172140A1 (en) * | 2013-12-18 | 2015-06-18 | Thomson Reuters Global Resources (Trgr) | System and method for dynamically scheduling network scanning tasks |
CN104063504B (en) * | 2014-07-08 | 2018-07-13 | 百度在线网络技术（北京）有限公司 | The determination method of the integrated access weights of webpage and the sort method for accessing record |
RU2634218C2 (en) * | 2014-07-24 | 2017-10-24 | Общество С Ограниченной Ответственностью "Яндекс" | Method for determining sequence of web browsing and server used |
US9767172B2 (en) * | 2014-10-03 | 2017-09-19 | Palantir Technologies Inc. | Data aggregation and analysis system |
US9501851B2 (en) | 2014-10-03 | 2016-11-22 | Palantir Technologies Inc. | Time-series analysis system |
US10216694B2 (en) * | 2015-08-24 | 2019-02-26 | Google Llc | Generic scheduling |
CN107133217A (en) * | 2017-05-26 | 2017-09-05 | 北京惠商之星网络科技有限公司 | Target topic intelligent grabbing method, system and computer-readable recording medium |
CN108416046B (en) * | 2018-03-15 | 2020-05-26 | 阿里巴巴（中国）有限公司 | Sequence crawler boundary detection method and device and server |
US10575123B1 (en) * | 2019-02-14 | 2020-02-25 | Uber Technologies, Inc. | Contextual notifications for a network-based service |
US10614636B1 (en) * | 2019-08-20 | 2020-04-07 | Capital One Services, Llc | Using three-dimensional augmented reality markers for local geo-positioning in a computing environment |
US10593128B1 (en) | 2019-08-20 | 2020-03-17 | Capital One Services, Llc | Using augmented reality markers for local positioning in a computing environment |
CN111444412B (en) * | 2020-04-03 | 2023-06-16 | 北京明朝万达科技股份有限公司 | Method and device for scheduling web crawler tasks |
CN113821705B (en) * | 2021-08-30 | 2024-02-20 | 湖南大学 | Webpage content acquisition method, terminal equipment and readable storage medium |
Citations (98)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4312009A (en) | 1979-02-16 | 1982-01-19 | Smh-Adrex | Device for projecting ink droplets onto a medium |
US5521140A (en) | 1993-10-22 | 1996-05-28 | Sony Corporation | Recording unit structure and recording device |
US5594480A (en) | 1992-10-14 | 1997-01-14 | Sony Corporation | Printing device and photographic paper |
US5634062A (en) | 1993-10-27 | 1997-05-27 | Fuji Xerox Co., Ltd. | System for managing hypertext node information and link information |
US5801702A (en) | 1995-03-09 | 1998-09-01 | Terrabyte Technology | System and method for adding network links in a displayed hierarchy |
US5832494A (en) | 1993-06-14 | 1998-11-03 | Libertech, Inc. | Method and apparatus for indexing, searching and displaying data |
US5898836A (en) | 1997-01-14 | 1999-04-27 | Netmind Services, Inc. | Change-detection tool indicating degree and location of change of internet documents by comparison of cyclic-redundancy-check(CRC) signatures |
US6003060A (en) | 1996-12-20 | 1999-12-14 | International Business Machines Corporation | Method and apparatus to share resources while processing multiple priority data flows |
US6012087A (en) | 1997-01-14 | 2000-01-04 | Netmind Technologies, Inc. | Unique-change detection of dynamic web pages using history tables of signatures |
US6049804A (en) | 1995-11-01 | 2000-04-11 | Filetek, Inc. | Method and apparatus for segmenting a database |
US6068363A (en) | 1996-07-04 | 2000-05-30 | Canon Kabushiki Kaisha | Recording head and apparatus employing multiple temperature sensors to effect temperature control |
US6189019B1 (en) | 1996-08-14 | 2001-02-13 | Microsoft Corporation | Computer system and computer-implemented process for presenting document connectivity |
US6243091B1 (en) | 1997-11-21 | 2001-06-05 | International Business Machines Corporation | Global history view |
WO2001050320A1 (en) | 1999-12-30 | 2001-07-12 | Auctionwatch.Com, Inc. | Minimal impact crawler |
US6263364B1 (en) | 1999-11-02 | 2001-07-17 | Alta Vista Company | Web crawler system using plurality of parallel priority level queues having distinct associated download priority levels for prioritizing document downloading and maintaining document freshness |
US6263350B1 (en) | 1996-10-11 | 2001-07-17 | Sun Microsystems, Inc. | Method and system for leasing storage |
US6269370B1 (en) | 1996-02-21 | 2001-07-31 | Infoseek Corporation | Web scan process |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
WO2001086507A1 (en) | 2000-05-08 | 2001-11-15 | The Johns Hopkins University | Relevant search rankings using high refresh-rate distributed crawling |
US6321265B1 (en) | 1999-11-02 | 2001-11-20 | Altavista Company | System and method for enforcing politeness while scheduling downloads in a web crawler |
US6336123B2 (en) | 1996-10-02 | 2002-01-01 | Matsushita Electric Industrial Co., Ltd. | Hierarchical based hyper-text document preparing and management apparatus |
US20020010682A1 (en) | 2000-07-20 | 2002-01-24 | Johnson Rodney D. | Information archival and retrieval system for internetworked computers |
US20020016729A1 (en) * | 2000-06-19 | 2002-02-07 | Aramark, Corporation | System and method for scheduling events and associated products and services |
US20020023158A1 (en) | 2000-04-27 | 2002-02-21 | Polizzi Kathleen Riddell | Method and apparatus for implementing search and channel features in an enterprise-wide computer system |
US6351755B1 (en) | 1999-11-02 | 2002-02-26 | Alta Vista Company | System and method for associating an extensible set of data with documents downloaded by a web crawler |
US6377984B1 (en) | 1999-11-02 | 2002-04-23 | Alta Vista Company | Web crawler system using parallel queues for queing data sets having common address and concurrently downloading data associated with data set in each queue |
US20020052928A1 (en) | 2000-07-31 | 2002-05-02 | Eliyon Technologies Corporation | Computer method and apparatus for collecting people and organization information from Web sites |
US20020065827A1 (en) | 1995-05-31 | 2002-05-30 | David Christie | Method and apparatus for workgroup information replication |
US6404446B1 (en) | 1997-08-15 | 2002-06-11 | International Business Machines Corporation | Multi-node user interface component and method thereof for use in displaying visual indication of search results |
US20020073188A1 (en) | 2000-12-07 | 2002-06-13 | Rawson Freeman Leigh | Method and apparatus for partitioning system management information for a server farm among a plurality of leaseholds |
US20020087515A1 (en) | 2000-11-03 | 2002-07-04 | Swannack Christopher Martyn | Data acquisition system |
US6418452B1 (en) | 1999-11-03 | 2002-07-09 | International Business Machines Corporation | Network repository service directory for efficient web crawling |
US6418433B1 (en) | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US6418453B1 (en) | 1999-11-03 | 2002-07-09 | International Business Machines Corporation | Network repository service for efficient web crawling |
US6424966B1 (en) | 1998-06-30 | 2002-07-23 | Microsoft Corporation | Synchronizing crawler with notification source |
US20020099602A1 (en) | 2000-12-04 | 2002-07-25 | Paul Moskowitz | Method and system to provide web site schedules |
US20020129062A1 (en) | 2001-03-08 | 2002-09-12 | Wood River Technologies, Inc. | Apparatus and method for cataloging data |
US20020143932A1 (en) * | 2001-04-02 | 2002-10-03 | The Aerospace Corporation | Surveillance monitoring and automated reporting method for detecting data changes |
US20020152201A1 (en) * | 2001-04-17 | 2002-10-17 | International Business Machines Corporation | Mining of generalised disjunctive association rules |
US20030061260A1 (en) | 2001-09-25 | 2003-03-27 | Timesys Corporation | Resource reservation and priority management |
US6547829B1 (en) | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US20030126136A1 (en) | 2001-06-22 | 2003-07-03 | Nosa Omoigui | System and method for knowledge retrieval, management, delivery and presentation |
US20030131005A1 (en) | 2002-01-10 | 2003-07-10 | International Business Machines Corporation | Method and apparatus for automatic pruning of search engine indices |
US6594662B1 (en) | 1998-07-01 | 2003-07-15 | Netshadow, Inc. | Method and system for gathering information resident on global computer networks |
US20030158839A1 (en) | 2001-05-04 | 2003-08-21 | Yaroslav Faybishenko | System and method for determining relevancy of query responses in a distributed network search mechanism |
US6631369B1 (en) | 1999-06-30 | 2003-10-07 | Microsoft Corporation | Method and system for incremental web crawling |
US6638314B1 (en) | 1998-06-26 | 2003-10-28 | Microsoft Corporation | Method of web crawling utilizing crawl numbers |
US6701350B1 (en) | 1999-09-08 | 2004-03-02 | Nortel Networks Limited | System and method for web page filtering |
US20040044962A1 (en) * | 2001-05-08 | 2004-03-04 | Green Jacob William | Relevant search rankings using high refresh-rate distributed crawling |
US20040064442A1 (en) * | 2002-09-27 | 2004-04-01 | Popovitch Steven Gregory | Incremental search engine |
US20040064432A1 (en) * | 2002-09-27 | 2004-04-01 | Oetringer Eugen H. | Method and system for maintaining documents |
US20040088369A1 (en) | 2002-10-31 | 2004-05-06 | Yeager William J. | Peer trust evaluation using mobile agents in peer-to-peer networks |
US6751612B1 (en) * | 1999-11-29 | 2004-06-15 | Xerox Corporation | User query generate search results that rank set of servers where ranking is based on comparing content on each server with user query, frequency at which content on each server is altered using web crawler in a search engine |
US20040128285A1 (en) | 2000-12-15 | 2004-07-01 | Jacob Green | Dynamic-content web crawling through traffic monitoring |
US6763362B2 (en) | 2001-11-30 | 2004-07-13 | Micron Technology, Inc. | Method and system for updating a search engine |
US6772203B1 (en) | 1999-05-14 | 2004-08-03 | Pivia, Inc. | Updating data objects for dynamic application caching |
US20040225642A1 (en) | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for web crawler data collection |
US20040225644A1 (en) * | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for search engine World Wide Web crawling |
US6836768B1 (en) | 1999-04-27 | 2004-12-28 | Surfnotes | Method and apparatus for improved information representation |
US20050071766A1 (en) * | 2003-09-25 | 2005-03-31 | Brill Eric D. | Systems and methods for client-based web crawling |
US20050086206A1 (en) | 2003-10-15 | 2005-04-21 | International Business Machines Corporation | System, Method, and service for collaborative focused crawling of documents on a network |
US20050102270A1 (en) * | 2003-11-10 | 2005-05-12 | Risvik Knut M. | Search engine with hierarchically stored indices |
US20050154746A1 (en) * | 2004-01-09 | 2005-07-14 | Yahoo!, Inc. | Content presentation and management system associating base content and relevant additional content |
US20050165778A1 (en) * | 2000-01-28 | 2005-07-28 | Microsoft Corporation | Adaptive Web crawling using a statistical model |
US20050192936A1 (en) * | 2004-02-12 | 2005-09-01 | Meek Christopher A. | Decision-theoretic web-crawling and predicting web-page change |
US20050210008A1 (en) * | 2004-03-18 | 2005-09-22 | Bao Tran | Systems and methods for analyzing documents over a network |
US6950874B2 (en) | 2000-12-15 | 2005-09-27 | International Business Machines Corporation | Method and system for management of resource leases in an application framework system |
US20050216522A1 (en) | 2004-03-23 | 2005-09-29 | Integrated Data Corporation | Multi-tier document management system |
US6952730B1 (en) | 2000-06-30 | 2005-10-04 | Hewlett-Packard Development Company, L.P. | System and method for efficient filtering of data set addresses in a web crawler |
US20050240253A1 (en) * | 2003-11-26 | 2005-10-27 | Wicab, Inc. | Systems and methods for altering vestibular biology |
US6993534B2 (en) | 2002-05-08 | 2006-01-31 | International Business Machines Corporation | Data store for knowledge-based data mining system |
US20060036605A1 (en) * | 2004-04-14 | 2006-02-16 | Microsoft Corporation | System and method for storage power, thermal and acoustic management in server systems |
US20060069663A1 (en) | 2004-09-28 | 2006-03-30 | Eytan Adar | Ranking results for network search query |
US7043473B1 (en) | 2000-11-22 | 2006-05-09 | Widevine Technologies, Inc. | Media tracking system and method |
US7047491B2 (en) | 2000-12-05 | 2006-05-16 | Schubert Daniel M | Electronic information management system for abstracting and reporting document information |
US7080073B1 (en) | 2000-08-18 | 2006-07-18 | Firstrain, Inc. | Method and apparatus for focused crawling |
US7089233B2 (en) | 2001-09-06 | 2006-08-08 | International Business Machines Corporation | Method and system for searching for web content |
US7139747B1 (en) | 2000-11-03 | 2006-11-21 | Hewlett-Packard Development Company, L.P. | System and method for distributed web crawling |
US7148991B2 (en) | 1995-04-18 | 2006-12-12 | Fuji Xerox Co., Ltd. | Job scheduling system for print processing |
US7171619B1 (en) | 2001-07-05 | 2007-01-30 | Sun Microsystems, Inc. | Methods and apparatus for accessing document content |
US7200592B2 (en) | 2002-01-14 | 2007-04-03 | International Business Machines Corporation | System for synchronizing of user's affinity to knowledge |
US7231606B2 (en) | 2000-10-31 | 2007-06-12 | Software Research, Inc. | Method and system for testing websites |
US7260543B1 (en) | 2000-05-09 | 2007-08-21 | Sun Microsystems, Inc. | Automatic lease renewal with message gates in a distributed computing environment |
US20070214133A1 (en) * | 2004-06-23 | 2007-09-13 | Edo Liberty | Methods for filtering data and filling in missing data using nonlinear inference |
US7308643B1 (en) * | 2003-07-03 | 2007-12-11 | Google Inc. | Anchor tag indexing in a web crawler system |
US7343412B1 (en) | 1999-06-24 | 2008-03-11 | International Business Machines Corporation | Method for maintaining and managing dynamic web pages stored in a system cache and referenced objects cached in other data stores |
US7346839B2 (en) | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US7447777B1 (en) | 2002-02-11 | 2008-11-04 | Extreme Networks | Switching system |
US7475069B2 (en) | 2006-03-29 | 2009-01-06 | International Business Machines Corporation | System and method for prioritizing websites during a webcrawling process |
US20090037393A1 (en) | 2004-06-30 | 2009-02-05 | Eric Russell Fredricksen | System and Method of Accessing a Document Efficiently Through Multi-Tier Web Caching |
US7565423B1 (en) | 2004-06-30 | 2009-07-21 | Google Inc. | System and method of accessing a document efficiently through multi-tier web caching |
US7725452B1 (en) | 2003-07-03 | 2010-05-25 | Google Inc. | Scheduler for search engine crawler |
US7769742B1 (en) | 2005-05-31 | 2010-08-03 | Google Inc. | Web crawler scheduler that utilizes sitemaps from websites |
US7987172B1 (en) * | 2004-08-30 | 2011-07-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US8042112B1 (en) | 2003-07-03 | 2011-10-18 | Google Inc. | Scheduler for search engine crawler |
US8180760B1 (en) * | 2007-12-20 | 2012-05-15 | Google Inc. | Organization system for ad campaigns |
US20120173552A1 (en) * | 2003-07-03 | 2012-07-05 | Huican Zhu | Assigning Document Identification Tags |
US20120317187A1 (en) * | 2004-06-30 | 2012-12-13 | Eric Russell Fredricksen | Prioritized Preloading of Documents to Client |
-
2004
- 2004-08-30 US US10/930,280 patent/US7987172B1/en active Active
-
2011
- 2011-06-22 US US13/166,757 patent/US8407204B2/en active Active
-
2013
- 2013-03-22 US US13/849,355 patent/US8782032B2/en not_active Expired - Fee Related
Patent Citations (113)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4312009A (en) | 1979-02-16 | 1982-01-19 | Smh-Adrex | Device for projecting ink droplets onto a medium |
US5594480A (en) | 1992-10-14 | 1997-01-14 | Sony Corporation | Printing device and photographic paper |
US5832494A (en) | 1993-06-14 | 1998-11-03 | Libertech, Inc. | Method and apparatus for indexing, searching and displaying data |
US5521140A (en) | 1993-10-22 | 1996-05-28 | Sony Corporation | Recording unit structure and recording device |
US5634062A (en) | 1993-10-27 | 1997-05-27 | Fuji Xerox Co., Ltd. | System for managing hypertext node information and link information |
US5801702A (en) | 1995-03-09 | 1998-09-01 | Terrabyte Technology | System and method for adding network links in a displayed hierarchy |
US7148991B2 (en) | 1995-04-18 | 2006-12-12 | Fuji Xerox Co., Ltd. | Job scheduling system for print processing |
US20020065827A1 (en) | 1995-05-31 | 2002-05-30 | David Christie | Method and apparatus for workgroup information replication |
US6049804A (en) | 1995-11-01 | 2000-04-11 | Filetek, Inc. | Method and apparatus for segmenting a database |
US6269370B1 (en) | 1996-02-21 | 2001-07-31 | Infoseek Corporation | Web scan process |
US6068363A (en) | 1996-07-04 | 2000-05-30 | Canon Kabushiki Kaisha | Recording head and apparatus employing multiple temperature sensors to effect temperature control |
US6189019B1 (en) | 1996-08-14 | 2001-02-13 | Microsoft Corporation | Computer system and computer-implemented process for presenting document connectivity |
US6336123B2 (en) | 1996-10-02 | 2002-01-01 | Matsushita Electric Industrial Co., Ltd. | Hierarchical based hyper-text document preparing and management apparatus |
US6263350B1 (en) | 1996-10-11 | 2001-07-17 | Sun Microsystems, Inc. | Method and system for leasing storage |
US6003060A (en) | 1996-12-20 | 1999-12-14 | International Business Machines Corporation | Method and apparatus to share resources while processing multiple priority data flows |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6219818B1 (en) * | 1997-01-14 | 2001-04-17 | Netmind Technologies, Inc. | Checksum-comparing change-detection tool indicating degree and location of change of internet documents |
US5898836A (en) | 1997-01-14 | 1999-04-27 | Netmind Services, Inc. | Change-detection tool indicating degree and location of change of internet documents by comparison of cyclic-redundancy-check(CRC) signatures |
US6012087A (en) | 1997-01-14 | 2000-01-04 | Netmind Technologies, Inc. | Unique-change detection of dynamic web pages using history tables of signatures |
US6404446B1 (en) | 1997-08-15 | 2002-06-11 | International Business Machines Corporation | Multi-node user interface component and method thereof for use in displaying visual indication of search results |
US6243091B1 (en) | 1997-11-21 | 2001-06-05 | International Business Machines Corporation | Global history view |
US6638314B1 (en) | 1998-06-26 | 2003-10-28 | Microsoft Corporation | Method of web crawling utilizing crawl numbers |
US6424966B1 (en) | 1998-06-30 | 2002-07-23 | Microsoft Corporation | Synchronizing crawler with notification source |
US6594662B1 (en) | 1998-07-01 | 2003-07-15 | Netshadow, Inc. | Method and system for gathering information resident on global computer networks |
US6418433B1 (en) | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US6836768B1 (en) | 1999-04-27 | 2004-12-28 | Surfnotes | Method and apparatus for improved information representation |
US6772203B1 (en) | 1999-05-14 | 2004-08-03 | Pivia, Inc. | Updating data objects for dynamic application caching |
US7343412B1 (en) | 1999-06-24 | 2008-03-11 | International Business Machines Corporation | Method for maintaining and managing dynamic web pages stored in a system cache and referenced objects cached in other data stores |
US6547829B1 (en) | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US6631369B1 (en) | 1999-06-30 | 2003-10-07 | Microsoft Corporation | Method and system for incremental web crawling |
US6701350B1 (en) | 1999-09-08 | 2004-03-02 | Nortel Networks Limited | System and method for web page filtering |
US6351755B1 (en) | 1999-11-02 | 2002-02-26 | Alta Vista Company | System and method for associating an extensible set of data with documents downloaded by a web crawler |
US6321265B1 (en) | 1999-11-02 | 2001-11-20 | Altavista Company | System and method for enforcing politeness while scheduling downloads in a web crawler |
US6377984B1 (en) | 1999-11-02 | 2002-04-23 | Alta Vista Company | Web crawler system using parallel queues for queing data sets having common address and concurrently downloading data associated with data set in each queue |
US6263364B1 (en) | 1999-11-02 | 2001-07-17 | Alta Vista Company | Web crawler system using plurality of parallel priority level queues having distinct associated download priority levels for prioritizing document downloading and maintaining document freshness |
US6418453B1 (en) | 1999-11-03 | 2002-07-09 | International Business Machines Corporation | Network repository service for efficient web crawling |
US6418452B1 (en) | 1999-11-03 | 2002-07-09 | International Business Machines Corporation | Network repository service directory for efficient web crawling |
US6751612B1 (en) * | 1999-11-29 | 2004-06-15 | Xerox Corporation | User query generate search results that rank set of servers where ranking is based on comparing content on each server with user query, frequency at which content on each server is altered using web crawler in a search engine |
WO2001050320A1 (en) | 1999-12-30 | 2001-07-12 | Auctionwatch.Com, Inc. | Minimal impact crawler |
US20050165778A1 (en) * | 2000-01-28 | 2005-07-28 | Microsoft Corporation | Adaptive Web crawling using a statistical model |
US20020023158A1 (en) | 2000-04-27 | 2002-02-21 | Polizzi Kathleen Riddell | Method and apparatus for implementing search and channel features in an enterprise-wide computer system |
WO2001086507A1 (en) | 2000-05-08 | 2001-11-15 | The Johns Hopkins University | Relevant search rankings using high refresh-rate distributed crawling |
US7260543B1 (en) | 2000-05-09 | 2007-08-21 | Sun Microsystems, Inc. | Automatic lease renewal with message gates in a distributed computing environment |
US20020016729A1 (en) * | 2000-06-19 | 2002-02-07 | Aramark, Corporation | System and method for scheduling events and associated products and services |
US6952730B1 (en) | 2000-06-30 | 2005-10-04 | Hewlett-Packard Development Company, L.P. | System and method for efficient filtering of data set addresses in a web crawler |
US20020010682A1 (en) | 2000-07-20 | 2002-01-24 | Johnson Rodney D. | Information archival and retrieval system for internetworked computers |
US20020052928A1 (en) | 2000-07-31 | 2002-05-02 | Eliyon Technologies Corporation | Computer method and apparatus for collecting people and organization information from Web sites |
US7080073B1 (en) | 2000-08-18 | 2006-07-18 | Firstrain, Inc. | Method and apparatus for focused crawling |
US20060277175A1 (en) * | 2000-08-18 | 2006-12-07 | Dongming Jiang | Method and Apparatus for Focused Crawling |
US7231606B2 (en) | 2000-10-31 | 2007-06-12 | Software Research, Inc. | Method and system for testing websites |
US7139747B1 (en) | 2000-11-03 | 2006-11-21 | Hewlett-Packard Development Company, L.P. | System and method for distributed web crawling |
US20020087515A1 (en) | 2000-11-03 | 2002-07-04 | Swannack Christopher Martyn | Data acquisition system |
US7043473B1 (en) | 2000-11-22 | 2006-05-09 | Widevine Technologies, Inc. | Media tracking system and method |
US20020099602A1 (en) | 2000-12-04 | 2002-07-25 | Paul Moskowitz | Method and system to provide web site schedules |
US7047491B2 (en) | 2000-12-05 | 2006-05-16 | Schubert Daniel M | Electronic information management system for abstracting and reporting document information |
US20020073188A1 (en) | 2000-12-07 | 2002-06-13 | Rawson Freeman Leigh | Method and apparatus for partitioning system management information for a server farm among a plurality of leaseholds |
US6950874B2 (en) | 2000-12-15 | 2005-09-27 | International Business Machines Corporation | Method and system for management of resource leases in an application framework system |
US20040128285A1 (en) | 2000-12-15 | 2004-07-01 | Jacob Green | Dynamic-content web crawling through traffic monitoring |
US20020129062A1 (en) | 2001-03-08 | 2002-09-12 | Wood River Technologies, Inc. | Apparatus and method for cataloging data |
US20020143932A1 (en) * | 2001-04-02 | 2002-10-03 | The Aerospace Corporation | Surveillance monitoring and automated reporting method for detecting data changes |
US20020152201A1 (en) * | 2001-04-17 | 2002-10-17 | International Business Machines Corporation | Mining of generalised disjunctive association rules |
US20030158839A1 (en) | 2001-05-04 | 2003-08-21 | Yaroslav Faybishenko | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20040044962A1 (en) * | 2001-05-08 | 2004-03-04 | Green Jacob William | Relevant search rankings using high refresh-rate distributed crawling |
US7299219B2 (en) | 2001-05-08 | 2007-11-20 | The Johns Hopkins University | High refresh-rate retrieval of freshly published content using distributed crawling |
US20030126136A1 (en) | 2001-06-22 | 2003-07-03 | Nosa Omoigui | System and method for knowledge retrieval, management, delivery and presentation |
US7171619B1 (en) | 2001-07-05 | 2007-01-30 | Sun Microsystems, Inc. | Methods and apparatus for accessing document content |
US7089233B2 (en) | 2001-09-06 | 2006-08-08 | International Business Machines Corporation | Method and system for searching for web content |
US20030061260A1 (en) | 2001-09-25 | 2003-03-27 | Timesys Corporation | Resource reservation and priority management |
US6763362B2 (en) | 2001-11-30 | 2004-07-13 | Micron Technology, Inc. | Method and system for updating a search engine |
US20030131005A1 (en) | 2002-01-10 | 2003-07-10 | International Business Machines Corporation | Method and apparatus for automatic pruning of search engine indices |
US7200592B2 (en) | 2002-01-14 | 2007-04-03 | International Business Machines Corporation | System for synchronizing of user's affinity to knowledge |
US7447777B1 (en) | 2002-02-11 | 2008-11-04 | Extreme Networks | Switching system |
US6993534B2 (en) | 2002-05-08 | 2006-01-31 | International Business Machines Corporation | Data store for knowledge-based data mining system |
US20040064442A1 (en) * | 2002-09-27 | 2004-04-01 | Popovitch Steven Gregory | Incremental search engine |
US20040064432A1 (en) * | 2002-09-27 | 2004-04-01 | Oetringer Eugen H. | Method and system for maintaining documents |
US20040088369A1 (en) | 2002-10-31 | 2004-05-06 | Yeager William J. | Peer trust evaluation using mobile agents in peer-to-peer networks |
US7454410B2 (en) | 2003-05-09 | 2008-11-18 | International Business Machines Corporation | Method and apparatus for web crawler data collection |
US20040225644A1 (en) * | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for search engine World Wide Web crawling |
US20040225642A1 (en) | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for web crawler data collection |
US8161033B2 (en) | 2003-07-03 | 2012-04-17 | Google Inc. | Scheduler for search engine crawler |
US20100241621A1 (en) | 2003-07-03 | 2010-09-23 | Randall Keith H | Scheduler for Search Engine Crawler |
US7725452B1 (en) | 2003-07-03 | 2010-05-25 | Google Inc. | Scheduler for search engine crawler |
US7308643B1 (en) * | 2003-07-03 | 2007-12-11 | Google Inc. | Anchor tag indexing in a web crawler system |
US20120173552A1 (en) * | 2003-07-03 | 2012-07-05 | Huican Zhu | Assigning Document Identification Tags |
US8042112B1 (en) | 2003-07-03 | 2011-10-18 | Google Inc. | Scheduler for search engine crawler |
US20120066576A1 (en) | 2003-07-03 | 2012-03-15 | Huican Zhu | Anchor Tag Indexing in a Web Crawler System |
US20050071766A1 (en) * | 2003-09-25 | 2005-03-31 | Brill Eric D. | Systems and methods for client-based web crawling |
US8639690B2 (en) * | 2003-09-30 | 2014-01-28 | Google Inc. | Document scoring based on query analysis |
US7346839B2 (en) | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US20050086206A1 (en) | 2003-10-15 | 2005-04-21 | International Business Machines Corporation | System, Method, and service for collaborative focused crawling of documents on a network |
US20050102270A1 (en) * | 2003-11-10 | 2005-05-12 | Risvik Knut M. | Search engine with hierarchically stored indices |
US20050240253A1 (en) * | 2003-11-26 | 2005-10-27 | Wicab, Inc. | Systems and methods for altering vestibular biology |
US20050154746A1 (en) * | 2004-01-09 | 2005-07-14 | Yahoo!, Inc. | Content presentation and management system associating base content and relevant additional content |
US7483891B2 (en) | 2004-01-09 | 2009-01-27 | Yahoo, Inc. | Content presentation and management system associating base content and relevant additional content |
US20050192936A1 (en) * | 2004-02-12 | 2005-09-01 | Meek Christopher A. | Decision-theoretic web-crawling and predicting web-page change |
US7310632B2 (en) | 2004-02-12 | 2007-12-18 | Microsoft Corporation | Decision-theoretic web-crawling and predicting web-page change |
US20050210008A1 (en) * | 2004-03-18 | 2005-09-22 | Bao Tran | Systems and methods for analyzing documents over a network |
US20050216522A1 (en) | 2004-03-23 | 2005-09-29 | Integrated Data Corporation | Multi-tier document management system |
US20070156774A1 (en) * | 2004-03-23 | 2007-07-05 | Integrated Data Corporation | Multi-Tier Document Management System |
US20060036605A1 (en) * | 2004-04-14 | 2006-02-16 | Microsoft Corporation | System and method for storage power, thermal and acoustic management in server systems |
US20070214133A1 (en) * | 2004-06-23 | 2007-09-13 | Edo Liberty | Methods for filtering data and filling in missing data using nonlinear inference |
US20090037393A1 (en) | 2004-06-30 | 2009-02-05 | Eric Russell Fredricksen | System and Method of Accessing a Document Efficiently Through Multi-Tier Web Caching |
US7565423B1 (en) | 2004-06-30 | 2009-07-21 | Google Inc. | System and method of accessing a document efficiently through multi-tier web caching |
US20120317187A1 (en) * | 2004-06-30 | 2012-12-13 | Eric Russell Fredricksen | Prioritized Preloading of Documents to Client |
US8407204B2 (en) * | 2004-08-30 | 2013-03-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US20110258176A1 (en) * | 2004-08-30 | 2011-10-20 | Carver Anton P T | Minimizing Visibility of Stale Content in Web Searching Including Revising Web Crawl Intervals of Documents |
US7987172B1 (en) * | 2004-08-30 | 2011-07-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US20060069663A1 (en) | 2004-09-28 | 2006-03-30 | Eytan Adar | Ranking results for network search query |
US7769742B1 (en) | 2005-05-31 | 2010-08-03 | Google Inc. | Web crawler scheduler that utilizes sitemaps from websites |
US7966337B2 (en) | 2006-03-29 | 2011-06-21 | International Business Machines Corporation | System and method for prioritizing websites during a webcrawling process |
US7475069B2 (en) | 2006-03-29 | 2009-01-06 | International Business Machines Corporation | System and method for prioritizing websites during a webcrawling process |
US8180760B1 (en) * | 2007-12-20 | 2012-05-15 | Google Inc. | Organization system for ad campaigns |
US8392396B1 (en) * | 2007-12-20 | 2013-03-05 | Google Inc. | Organization system for ad campaigns |
Non-Patent Citations (43)
Title |
---|
Ali, What's Changed? Measuring Document Change in Web Crawling for Search Engines, SPIRE 2003, LNCS 2857, 2003, p. 28-42, Springer-Verlag, Berlin, Germany. |
Arasu, Searching the Web, ACM Transactions on Internet Technology, ACM Transactions on Internet Technology, vol. 1, No. 1, Aug. 2001, pp. 2-43. |
Baeza-Yates, Balancing Volume, Quality and Freshness in Web Crawling, Center for Web Research, Dept. of Computer Science, University of Chile, 2002, pp. 1-10. |
Brandman, Crawler-Friendly Web Servers, ACM SIGMETRICS Performance Evaluatin Review, vol. 28, Issue 2, Sep. 2000, pp. 9-14. |
Brin, The Anatomy of a Large-Scale Hypertextual Web Search Engine, In Proc. of the 7th International World Wide Web Conference, 1998, pp. 1-26. |
Brusilovsky, Map-Based Horizontal Navigation in Educations Hypertext, ACM Press, Jun. 2002, pp. 1-10. |
Bullot, A Data-Mining Approach for Optimizing Performance of an Incremental Crawler, WI '03, Oct. 13-17, 2003, pp. 610-615. |
Buyukkokten, Power Browser: Efficient Web Browsing for PDA's, Apr. 1-6, 2000, 8 pgs. |
Cho, Crawling the Web: Discovery and Maintenance of Large-Scale Web Data, PhD Thesis, Dept. of Computer Science, Stanford University, Nov. 2001, 188 pages. |
Cho, Effectiver Page Refresh Policies for Web Crawlers, ACM Transactions on Database Systems, vol. 28, No. 4, Dec. 2003, pp. 390-426. |
Cho, Efficient Crawling Through URL Ordering, Computer Networks and ISDN Systems, vol. 30, Issues 1-7, Apr. 1998, pp. 161-172. |
Cho, Estimating Frequency of Change, ACM Transactions on Internet Technology, vol. 3, No. 3, Aug. 2003, p. 256-290. |
Cho, Synchronizing a Database to Improve Freshness, MOD 2000, Dallas, TX, Jun. 2000, pp. 117-128. |
Cho, The Evolution of the Web and Implications for an Incremental Crawler, Proceedings of the 26th VLDB Conf., Cairo, Egypt, 2000, pp. 200-209. |
Coffman, Optimal Robot Scheduling for Web Search Engines, Tech. Rep. RR3317, 1997, 19 pages. |
Douglis, Rate of Change and Other Metrics: a Live Study of the World Wide Web, USENIX Symposium on Internetworking Technologies and Systems, Monterey, CA, Dec. 1997, pp. 1 and 1-13. |
Douglis, The AT&T Internet Difference Engine: Tracking and Viewing Changes on the Web, World Wide Web, vol. 1, Mar. 1998, pp. 27-44. |
Fetterly, A Large-Scale Study of the Evolution of Web Pages, WWW 2003, Budapest, Hungary, May 20-24, 2003, pp. 669-678. |
Hadrien Bullot, M. K. Mohania and S.K. Gupta "A data-mining approach for optimizing performance of an incremental crawler" -Web Intelligence, 2003. WI 2003, Oct. 13-17, 2003. Proceedings. IEEE/WIC International Conference on-(pp. 1-7 or 610-615). * |
Hadrien Bullot, M. K. Mohania and S.K. Gupta "A data-mining approach for optimizing performance of an incremental crawler" -Web Intelligence, 2003. WI 2003, Oct. 13-17, 2003. Proceedings. IEEE/WIC International Conference on—(pp. 1-7 or 610-615). * |
Haveliwala, Topic-Sensitive PageRank, WWW2002, Honolulu, HI, May 7-11, 2002, 10 pages. |
Henzinger, Web Information Retrieval-an Algorithmic Perspective, ESA 2000, LNCS 1879, 2000, pp. 1-8, Springer-Verlag, Berlin, Germany. |
Henzinger, Web Information Retrieval—an Algorithmic Perspective, ESA 2000, LNCS 1879, 2000, pp. 1-8, Springer-Verlag, Berlin, Germany. |
Heydon, Mercator: A Scalable, Extensible Web Crawler, World Wide Web, vol. 2, No. 4, Dec. 1999, pp. 219-229. |
Hirai, WebBase: a Repository of Web Pages, Computer Networks, vol. 33, Jun. 2000, pp. 277-293. |
Introna, Defining the Web: The Politics of Search Engines, Computer, vol. 22, Issue 1, Jan. 2000, pp. 54-62. |
Jain, Office Action, U.S. Appl. No. 11/394,619, Sep. 23, 2010, 22 pgs. |
Jeh, Scaling Personalized Web Search, WWW2003, Budapest, Hungary, May 20-24, 2003, pp. 271-279. |
Kamvar, Exploiting the Block Structure of the Web for Computing PageRank, Stanford University Technical Report, 2003, 13 pages. |
Klemm, WebCompanion: A Friendly Client-Side Web Prefetching Agent, IEEE Transactions on Knowledge and Data Engineering, vol. 11, No. 4, Jul./Aug. 1999, pp. 577-594. |
Knut Magne Risvik and Rolf Michelsen-"Search Engines and Web Dynamics" -Computer Networks 39, (2002) pp. 289-302. * |
Knut Magne Risvik and Rolf Michelsen—"Search Engines and Web Dynamics" —Computer Networks 39, (2002) pp. 289-302. * |
Lagrange Multiplier, Wikipedia, Jun. 3, 2011, 14 pgs. |
Lee, Intelligent Agents for Matching Information Providers and Consumers on the World-Wide-Web, Proc. of the 13th Annual Hawaii International Conf. on System, 1997, 11 pages. |
Najork, Bredth-First Search Crawling Yields High Quality Pages, WWW10, May 10-12, 2001, Hong Kong, pp. 114-118. |
Najork, High-Performance Web Crawling, Sep. 26, 2001, 26 pgs. |
Nekrestyanov, Building Topic-Specific Collections With Intelligent Agents, 1999, 13 pgs. |
Pandey, Monitoring the Dynamic Web to Respond to Continuous Queries, WWW2003, Dudapest, Hungary, May 2024, 2003, pp. 659-668. |
Pretto, A Theoretical Analysis of Google's Pagerank, Sep. 11-13, 2002, 14 pgs. |
Randall, Office Action, U.S. Appl. No. 10/853,627, May 12, 2008, 12 pgs. |
Shkapenyuk, Design and Implementation of a High-Performance Distributed Web Crawler, ICDE '02, San Jose, CA, Feb. 26-Mar. 1, 2002, p. 357-368. |
Suel, Odissea: A Peer-to-Peer Architecture for Scalable Web Search and Information Retrieval, WebDB, San Diego, Ca, Jun. 12-13, 2003, pp. 1-6. |
Wolf, Optimal Crawling Strategies for Web Search Engines, WWW 2002, Honolulu, Hawaii, May 7-11, 2002, pp. 136-147. |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN106294364A (en) * | 2015-05-15 | 2017-01-04 | 阿里巴巴集团控股有限公司 | Realize the method and apparatus that web crawlers captures webpage |
CN106294364B (en) * | 2015-05-15 | 2020-04-10 | 阿里巴巴集团控股有限公司 | Method and device for realizing web crawler to capture webpage |
CN112219204A (en) * | 2019-05-09 | 2021-01-12 | 谷歌有限责任公司 | Context adaptive scanning |
CN112219204B (en) * | 2019-05-09 | 2021-10-22 | 谷歌有限责任公司 | Method, system, and computer storage medium for context adaptive scanning |
Also Published As
Publication number | Publication date |
---|---|
US8407204B2 (en) | 2013-03-26 |
US20130226897A1 (en) | 2013-08-29 |
US20110258176A1 (en) | 2011-10-20 |
US7987172B1 (en) | 2011-07-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8782032B2 (en) | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents | |
US8745183B2 (en) | System and method for adaptively refreshing a web page | |
KR101700352B1 (en) | Generating improved document classification data using historical search results | |
US7260573B1 (en) | Personalizing anchor text scores in a search engine | |
RU2419860C2 (en) | Relative search results based on user interaction | |
AU2010343183B2 (en) | Search suggestion clustering and presentation | |
US7398271B1 (en) | Using network traffic logs for search enhancement | |
US6792419B1 (en) | System and method for ranking hyperlinked documents based on a stochastic backoff processes | |
US6873982B1 (en) | Ordering of database search results based on user feedback | |
US8271546B2 (en) | Method and system for URL autocompletion using ranked results | |
US7647314B2 (en) | System and method for indexing web content using click-through features | |
US7487145B1 (en) | Method and system for autocompletion using ranked results | |
US8515952B2 (en) | Systems and methods for determining document freshness | |
US7383299B1 (en) | System and method for providing service for searching web site addresses | |
US7440968B1 (en) | Query boosting based on classification | |
US8645367B1 (en) | Predicting data for document attributes based on aggregated data for repeated URL patterns | |
US9081861B2 (en) | Uniform resource locator canonicalization | |
US20100057802A1 (en) | Method and system for updating a search engine | |
US20030018621A1 (en) | Distributed information search in a networked environment | |
US20080104502A1 (en) | System and method for providing a change profile of a web page | |
US9569504B1 (en) | Deriving and using document and site quality signals from search query streams | |
WO2002054288A1 (en) | Automated adaptive classification system for bayesian knowledge networks | |
US20070244855A1 (en) | Determining Searchable Criteria of Network Resources Based on a Commonality of Content | |
US10078702B1 (en) | Personalizing aggregated news content | |
KR20060044299A (en) | System, method and computer readable media for determining user's search intent |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
CC | Certificate of correction | ||
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.) |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
CN108140196B - System and method for reducing latency of content item interactions using client-generated click identifiers - Google Patents
System and method for reducing latency of content item interactions using client-generated click identifiers Download PDFInfo
- Publication number
- CN108140196B CN108140196B CN201680034584.1A CN201680034584A CN108140196B CN 108140196 B CN108140196 B CN 108140196B CN 201680034584 A CN201680034584 A CN 201680034584A CN 108140196 B CN108140196 B CN 108140196B
- Authority
- CN
- China
- Prior art keywords
- click
- request
- content item
- content
- identifier
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/08—Monitoring or testing based on specific metrics, e.g. QoS, energy consumption or environmental parameters
- H04L43/0876—Network utilisation, e.g. volume of load or congestion level
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/06—Resources, workflows, human or project management; Enterprise or organisation planning; Enterprise or organisation modelling
- G06Q10/063—Operations research, analysis or management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0207—Discounts or incentives, e.g. coupons or rebates
- G06Q30/0219—Discounts or incentives, e.g. coupons or rebates based on funds or budget
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/50—Network service management, e.g. ensuring proper service fulfilment according to agreements
- H04L41/5003—Managing SLA; Interaction between SLA and QoS
- H04L41/5019—Ensuring fulfilment of SLA
- H04L41/5025—Ensuring fulfilment of SLA by proactively reacting to service quality change, e.g. by reconfiguration after service quality degradation or upgrade
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9566—URL specific, e.g. using aliases, detecting broken or misspelled links
Abstract
Systems and methods for reducing latency of online network traffic are provided. The system may include a processor and a memory coupled to the processor. The memory stores computer-executable instructions that, when executed by the processor, cause the processor to: identifying an indication of an interaction with a content item presented within a content slot of an information resource; generating a click identifier that uniquely identifies the interaction; transmitting a first request comprising a click resource link to a click server, the click resource link comprising the click identifier; and transmitting a second request to access the landing page for the content item independent of transmitting the first request. The second request includes a generated resource link that identifies a resource identifier of the landing page for the content item and the click identifier.
Description
Cross Reference to Related Applications
This application claims priority to U.S. application No. 14/975,027 entitled "SYSTEMS AND METHODS FOR relative conversion IN CONTENT ITEMs interaction USING CLIENT-GENERATED CLICK IDENTIFIERS" filed on 18.12.2015, which is incorporated herein by reference IN its entirety.
Background
In a computer networked environment, such as the internet, third-party content providers provide third-party content items that are displayed on end-user computing devices. These third-party content items may be displayed on web pages associated with respective publishers. These third-party content items may include content that identifies the third-party content provider that provided the content item.
Disclosure of Invention
At least one aspect relates to a system for reducing latency of online network traffic. The system may include a processor and a memory coupled to the processor. The memory stores computer-executable instructions that, when executed by the processor, may cause the processor to identify an indication of an interaction with a content item presented within a content slot of an information resource and generate a click identifier that uniquely identifies the interaction with the content item. The content item may be received from a data processing system via a computer network. The computer-executable instructions, when executed by the processor, may further cause the processor to generate a first request including a click resource link and transmit the first request including the click resource link to a click server, the click resource link including a click identifier. The computer-executable instructions, when executed by the processor, may further cause the processor to generate a resource link that identifies i) a resource identifier of a landing page corresponding to the content item and ii) a click identifier that uniquely identifies an interaction with the content item; and transmitting a second request to access a landing page for the content item independent of transmitting the first request. The second request includes the generated resource link.
In some implementations, the memory stores computer-executable instructions that, when executed by the processor, may further cause the processor to transmit the first request to the click server at approximately the same time as transmitting the second request to access the landing page of the content item. In some implementations, the memory stores computer-executable instructions that, when executed by the processor, may further cause the processor to transmit the first request to the click server via an asynchronous interface of an application of the computing device on which the information resource is presented. In some embodiments, the asynchronous interface includes a BEACON Application Plugin (API).
In some implementations, the memory stores computer-executable instructions that, when executed by the processor, may further cause the processor to determine that the application is configured with an asynchronous interface. In some implementations, the content item received from the data processing system can also include an impression identifier that uniquely identifies an impression of the content item. The click identifier may include an impression identifier and a counter indicating a number of interactions with the content item. In some implementations, the memory stores computer-executable instructions that, when executed by the processor, may further cause the processor to identify an indication of a second interaction with a content item presented within a content slot of the information resource, and adjust a value of a counter of the click identifier in response to identifying the indication of the second interaction.
At least one aspect relates to a method for reducing latency of online network traffic. The method comprises the following steps: a content item to be presented within a content slot of an information resource is received from a data processing system via a computer network by a computing device comprising one or more processors. The method comprises the following steps: by a computing device, an indication of an interaction with a content item presented within a content slot of an information resource is identified. The method comprises the following steps: by a computing device, a click identifier is generated that uniquely identifies an interaction with a content item. The method further comprises the following steps: generating, by a computing device, a first request comprising a click on a resource link; and transmitting, by the computing device, a first request comprising a click resource link to a click server, the click resource link comprising a click identifier. The method comprises the following steps: generating, by a computing device, a resource link that identifies i) a resource identifier of a landing page corresponding to a content item and ii) a click identifier that uniquely identifies an interaction with the content item; and transmitting, by the computing device and independent of transmitting the first request, a second request to access a landing page for the content item, the second request including the generated resource link.
In some embodiments, the method further comprises: the first request is transmitted to the click server at approximately the same time as the second request to access the landing page for the content item is transmitted. In some embodiments, the method further comprises: the first request is transmitted to the click server via an asynchronous interface of an application of the computing device on which the information resource is presented. In some embodiments, the method further comprises: determining that the application is configured with an asynchronous interface. In some embodiments, the method further comprises: identifying an indication of a second interaction with the content item presented within the content slot of the information resource; and adjusting a value of a counter of the click identifier in response to identifying the indication of the second interaction.
At least one aspect relates to a method for reducing latency of online network traffic. The method comprises the following steps: a data processing system having one or more processors receives, from a client device, a content request for a content item to be presented within a content slot of an information resource. The method comprises the following steps: in response to the content request, the data processing system transmits a content item to be presented within a content slot of the information resource to the client device via the computer network. The content item includes an asynchronous click transfer script that includes computer-executable instructions. The computer-executable instructions, when executed by a processor of the client device, may cause the computing device to identify an indication of an interaction with a content item presented within a content slot of the information resource. The computer-executable instructions, when executed by a processor of the client device, may cause the client device to generate a click identifier that uniquely identifies an interaction with the content item. The computer-executable instructions, when executed by the processor of the client device, may further cause the client device to generate a first request including a click resource link and transmit the first request including the click resource link to the click server, the click resource link including a click identifier. The computer-executable instructions, when executed by the processor of the client device, may further cause the client device to generate a resource link that identifies i) a resource identifier of a landing page corresponding to the content item and ii) a click identifier that uniquely identifies an interaction with the content item; and transmitting, independent of transmitting the first request, a second request to access a landing page for the content item, the second request including the generated resource link.
In some implementations, the computer-executable instructions, when executed by the processor of the client device, may further cause the client device to transmit the first request to the click server at approximately the same time as transmitting the second request to access the landing page of the content item. In some implementations, the computer-executable instructions, when executed by the processor of the client device, may further cause the client device to transmit the first request to the click server via an asynchronous interface of an application of the computing device on which the information resource is presented.
In some implementations, the computer-executable instructions, when executed by the processor of the client device, may further cause the client device to determine that the application is configured with an asynchronous interface. In some implementations, the computer-executable instructions, when executed by the processor of the client device, may further cause the client device to identify an indication of a second interaction with the content item presented within the content slot of the information resource, and adjust a value of a counter of the click identifier in response to identifying the indication of the second interaction.
Another aspect provides a computer-readable medium containing instructions that, when executed by a computing device, cause the computing device to perform the method of the present disclosure. The computer readable medium may be a non-transitory computer readable medium, but is not limited thereto. These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide an illustration and a further understanding of the various aspects and embodiments, and are incorporated in and constitute a part of this specification. It will be understood that various aspects and embodiments may be combined, and features described in the context of one aspect or embodiment may be implemented in the context of other aspects.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is a block diagram depicting one embodiment of an environment for reducing latency of online network traffic in accordance with an illustrative embodiment.
FIG. 2 is a block diagram depicting one embodiment of an environment for reducing latency of online network traffic in accordance with an illustrative embodiment.
FIG. 3 is a block diagram depicting one embodiment of a system for reducing latency of online network traffic in accordance with an illustrative embodiment.
FIG. 4 is a block diagram illustrating an information resource having a content item provided at a client device in accordance with an illustrative embodiment.
FIG. 5 is a flowchart depicting a method for reducing latency of online network traffic in accordance with an illustrative embodiment.
FIG. 6 is a block diagram depicting an illustrative embodiment of a general architecture of a computer system that may be used to implement the elements and methods of the systems and methods described and illustrated herein.
Detailed Description
Following are more detailed descriptions of various concepts related to methods, apparatus, and systems for reducing latency of online network traffic in a computer network environment, and embodiments thereof. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways, as the concepts described are not limited to any particular implementation.
The present disclosure relates generally to systems and methods for reducing latency of online network traffic by generating a click Identifier (ID) at a client device in response to interaction with a content item (e.g., interactive content that may form part of an interactive user interface). The generated click ID is transmitted to the click server using an asynchronous request or API at substantially the same time as the server transmitting the generated click ID to the landing page for the content item.
In some methods, after a content item is clicked on at a client device, the client device sends a request to a click server indicating that a particular content item has been clicked on. In response to the request, the click server may record the click, generate a click ID indicating the click, and return a "302 redirect" (i.e., a redirect identified by HTTP status code 302) to the client device along with the generated click ID. The browser at the client device may then be redirected to a landing page for the content item based on the "302 redirect". However, this method of monitoring clicks on content items may cause a delay due to the client device sending a request to the click server and receiving a "302 redirect" from the click server before the client device can be redirected to the landing page. In some implementations with the addition of a security layer such as SSL, an additional round trip must be made before the client device is redirected to the landing page. Depending on the type of connection, for example, if the client device is on a 3G/4G network, or other network with low bandwidth or low transmission speed, the amount of time from when the content item is clicked to when the client device is redirected to a landing page may be on the order of a few seconds. This latency may be reduced by separating the click tracking process from the request to access the landing page for the content item.
The systems and methods described herein may reduce latency by generating a click ID at a client device in response to clicking on a content item, and using an asynchronous request or API to transmit the generated click ID to a click server while directing a browser to a Uniform Resource Locator (URL) of a landing page for the content item. Thus, the systems and methods described herein may avoid the step of sending a request to the click server and receiving a "302 redirect" before redirecting the browser to the landing page.
In some implementations, upon receiving a request for one or more content items, the content server can transmit the content items to the client device including an asynchronous click transfer script that can be executed at the client device. The content item may also include an impression identifier that uniquely identifies the content item impression. The asynchronous click transfer script may cause the client device to determine whether an application (e.g., a browser) at the client device is compatible with an asynchronous API (e.g., a Beacon API). If the application at the client device is compatible with the asynchronous API, the asynchronous click transmission script may cause the client device to generate a click ID at the client device that uniquely identifies an interaction (e.g., a click) with the content item. In one embodiment, the click ID may include an impression identifier and a counter. The impression identifier of the click ID may identify the content item displayed at the client device. The counter for the click ID may identify the number of clicks on the content item recorded by the client device. Thus, each click may be identified by a unique click ID.
Once the click ID is generated, the asynchronous click transmission script may cause the client device to transmit the generated click ID to the click server using an asynchronous request or API, such as the Beacon API. For example, the asynchronous click transfer script may cause an application at the client device to generate a Beacon request and transmit the Beacon request using the Beacon API. The beacon request may include a click ID generated by the client device. The asynchronous click transmission script may also cause the client device to generate a resource link by appending the generated click ID to the landing page URL and to cause an application of the client device to navigate to the landing page of the content item. In this manner, the client device may directly provide information identifying impressions and clicks to the content provider associated with the content item. In one embodiment, at about the same time as the asynchronous API is used to transmit the click ID to the click server, the asynchronous click transmission script causes the application of the client device to navigate to the landing page based on the generated resource link, thereby avoiding latency in navigating to the landing page.
FIG. 1 is a block diagram depicting one embodiment of an environment for reducing latency of online network traffic in accordance with an illustrative embodiment. The environment 100 includes at least one data processing system 110. The data processing system 110 may include at least one processor (or processing circuit) and memory. The memory stores processor-executable instructions that, when executed on the processor, cause the processor to perform one or more operations described herein. The processor may comprise a microprocessor, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), the like, or a combination thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or other storage, or transmission device capable of providing program instructions to the processor. The memory may further include a floppy disk, a CD-ROM, a DVD, a magnetic disk, a memory chip, an ASIC, an FPGA, a Read Only Memory (ROM), a Random Access Memory (RAM), an electrically erasable ROM (EEPROM), an Erasable Programmable ROM (EPROM), a flash memory, an optical medium, or any other suitable memory from which a processor may read instructions. The instructions may include code from any suitable computer programming language. The data processing system 110 may include one or more computing devices or servers that may perform various functions.
The network 105 may include a computer network such as the internet, a local area network, a wide area network, a metropolitan area network, or other area network, an intranet, a satellite network, other computer networks such as voice or data mobile telephone communication networks, and combinations thereof. The data processing system 110 of the environment 100 may communicate with at least one content provider computing device 115, at least one content publisher computing device 120, or at least one client device 125, for example, via the network 105. The network 105 may be any form of computer network that relays information between the client device 125, the data processing system 110, and one or more content sources, e.g., web servers, content servers, etc. For example, the network 105 may include the internet and/or other types of data networks, such as a Local Area Network (LAN), a Wide Area Network (WAN), a cellular network, a satellite network, or other types of data networks. The network 105 may also include any number of computing devices (e.g., computers, servers, routers, network switches, etc.) configured to receive and/or transmit data within the network 105. The network 105 may further include any number of hardwired connections and/or wireless connections. For example, the client device 125 may communicate wirelessly (e.g., via WiFi, cellular, radio, etc.) with a transceiver that is hard-wired (e.g., via fiber optic cable, CAT5 cable, etc.) to other computing devices in the network 105.
The content provider computing device 115 may comprise a server or other computing device operated by a content provider entity to provide one or more content items to be displayed on an information resource at a client device. The content provided by the content provider computing device 115 may include third party content items to be displayed on information resources, such as websites or web pages that include primary content, for example, content provided by the content provider computing device 120. Content items may also be displayed on the search results web page. For example, the content provider computing device 115 may provide or be a source of one or more content items to be displayed in a content slot of a content web page, such as a corporate web page in which the primary content of the web page is provided by a corporation, or on a search results landing page provided by a search engine. Content items associated with the content provider computing device 115 may be displayed on information resources other than web pages, such as content displayed as part of an application executing on a smartphone or other client device 125, such as a Global Positioning System (GPS) or mapping application, or other type of application.
The content publisher computing device 120 may include a server or other computing device operated by a content publishing entity to provide primary content to be displayed via the network 105. For example, the content publisher computing device 120 may include a web page operator that provides primary content to be displayed on a web page. The primary content may include content other than that provided by the content publisher computing device 120, and the web page may include a content slot configured to display a third party content item from the content provider computing device 115. For example, the content publisher computing device 120 may operate a website of a company and may provide content related to the company to be displayed on a web page of the website. The web page may include a content slot configured to display a third-party content item of the content provider computing device 115. In some implementations, the content publisher computing device 120 includes a search engine computing device (e.g., a server) that operates a search engine operator of a search engine website. The primary content of the search engine web page (e.g., results or login web page) may include search results and third party content items displayed in the content slots, such as content items from the content provider computing device 115. In some implementations, the content publisher computing device 120 can include a server for providing video content.
The client devices 125 may include computing devices configured to communicate via the network 105 to display data such as content provided by the content publisher computing device 120 (e.g., primary web page content or other information resources) and content provided by the content provider computing device 115 (e.g., third-party content items configured to be displayed in content slots of a web page). The client device 125, the content provider computing device 115, and the content publisher computing device 120 may include a desktop computer, a laptop computer, a tablet computer, a smartphone, a personal digital assistant, a mobile device, a consumer computing device, a server, a client, a digital video recorder, a television set-top box, a video game console, or any other computing device configured to communicate via the network 105. The client device 125 may be a communication device through which an end user may submit a request to receive content. The request may be a request for a search engine and the request may include a search query. In some implementations, the request can include a request to access a web page.
The content provider computing device 115, the content publisher computing device 120, and the client device 125 may include a processor and memory, i.e., processing circuitry. The memory stores machine instructions that, when executed on the processor, cause the processor to perform one or more of the operations described herein. The processor may comprise a microprocessor, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), the like, or a combination thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or other storage, or transmission device capable of providing program instructions to the processor. The memory may further include a floppy disk, a CD-ROM, a DVD, a magnetic disk, a memory chip, an ASIC, an FPGA, a Read Only Memory (ROM), a Random Access Memory (RAM), an electrically erasable ROM (EEPROM), an Erasable Programmable ROM (EPROM), a flash memory, an optical medium, or any other suitable memory from which a processor may read instructions. The instructions may include code from any suitable computer programming language.
The content provider computing device 115, the content publisher computing device 120, and the client device 125 may also include one or more user interface devices. In general, a user interface device refers to any electronic device (e.g., a keyboard, a mouse, a pointing device, a touch screen display, a microphone, etc.) that communicates data to a user by generating sensory information (e.g., visualization on a display, one or more sounds, etc.) and/or converts sensory information received from a user into electronic signals. According to various implementations, one or more user interface devices may be located inside the housings of the content provider computing device 115, the content publisher computing device 120, and the client device 125 (e.g., built-in display, microphone, etc.) or outside the housings of the content provider computing device 115, the content publisher computing device 120, and the client device 125 (e.g., a monitor connected to the user computing device 115, a speaker connected to the user computing device 115, etc.). For example, the content provider computing device 115, the content publisher computing device 120, and the client device 125 may include electronic displays that visually display web pages using web page data received from one or more content sources and/or from the data processing system 110 via the network 105. In some implementations, the content delivery campaign manager or third-party content provider may communicate with the data processing system 110 via the content provider computing device 115. In some implementations, the content delivery manager or third-party content provider can communicate with the data processing system 110 via a user interface displayed on a user interface device of the content provider computing device 115.
The data processing system 110 may include at least one server. For example, the data processing system 110 may include multiple servers located in at least one data center or server cluster. In some implementations, the data processing system 110 can include a third party content delivery system, such as a content server. The data processing system 110 can include at least one content request module 130, at least one content selection module 135, at least one script provider module 140, and at least one database 145. The content request module 130, the content selection module 135, and the script provider module 140 each can include at least one processing unit, server, virtual server, circuit, engine, agent, application, or other logic device, such as a programmable logic array configured to communicate with the database 145 and other computing devices (e.g., the content provider computing device 115, the content publisher computing device 120, or the client device 125) via the network 105.
The content request module 130, the content selection module 135, and the script provider module 140 may include or execute at least one computer program or at least one script. The content request module 130, the content selection module 135, and the script provider module 140 may be separate components, a single component, or part of the data processing system 110. The content request module 130, the content selection module 135, and the script provider module 140 may include a combination of software and hardware, such as one or more processors configured to execute one or more scripts.
The data processing system 110 may also include one or more content repositories or databases 145. The database 145 may be local to the data processing system 110. In some implementations, the database 145 may be remote from the data processing system 110, but may be in communication with the data processing system 110 via the network 105. The database 145 may include web pages, portions of web pages, third-party content items, asynchronous click-to-transfer scripts, and the like, to serve the client device 125.
The content request module 130 may receive a request for content from a client device 125. The request for content may include a request for an information resource, a request for one or more third-party content items, a request for a script (e.g., an asynchronous click-through script), or a combination thereof. In some implementations, the request for content can include a request for third-party content. In some implementations, the request for third party content can include an address or identifier of an information resource on which the third party content is to be displayed. The request for third-party content may also include or identify one or more parameters that may be used by the data processing system 110 to determine content to be provided in response to the request for content. For example, the parameter may identify the size of the content slot into which the requested content is to be inserted. The parameter may identify a type of content associated with the information resource, a type of third-party content requested (e.g., text, image, video, etc.), client device information, size information of the requested third-party content item, or a combination thereof. In some implementations, the request can identify a script, such as an asynchronous click transfer script.
In some implementations, the request for content can include a request for an information resource. The request for the information resource may include an address or identifier of the information resource. For example, a request for an information resource may include a URL (e.g., "http:// www.example.com") for a particular resource, such as a web page. The request for information resources may also include client device information (such as a device type, a device identifier, or a combination thereof).
In some implementations, the request for content can include a request for an asynchronous click transfer script. In some embodiments, the request for the asynchronous click transfer script may include an indication of the requested script, an address or identifier of the information resource, or a combination thereof. In some embodiments, the request for the asynchronous clicksransmission script may identify the asynchronous clicksransmission script. In some implementations, the content request module 130 can be configured to parse the request for content and determine to forward the request for content to the content selection module 135 or the script provider module 140. For example, if it is determined that an asynchronous click transfer script is to be sent to the client device 125 in response to receiving a request for content, the content request module 130 may forward the request for content to the script provider module 140. Otherwise, the content request module 130 may forward the request for content to the content selection module 135. In some implementations, the content request module 130 can determine that a request for content is to be forwarded to the content selection module 135 and the script provider module 140. The content request module 130 may determine whether to send the script to the client device 125 based on a type of the request for content (e.g., a request for an information resource, a request for third-party content, or a request for an asynchronous click transfer script), an indicator in the content request (e.g., an indicator indicating an asynchronous click transfer script or an indicator indicating that an information resource qualifies for asynchronous click transfer), an information resource identifier in the request for content, an indication of whether a client device may generate a click identifier, or a combination thereof. In some implementations, the content request module 130 can determine whether to send the script to the client device 125 by comparing the identification of the information resource to a list of information resource identifiers (e.g., information resource identifiers that are eligible to receive asynchronous click transfer scripts). In some implementations, the information resource identifier can be a URL. In some embodiments, the information resource identifier may be a domain to which the information resource belongs. In some implementations, the information resource identifier can be an IP address corresponding to a server hosting the information resource. In some implementations, the content request module 130 can automatically forward the request for content to the content selection module 135 without determining whether to send the script to the client device 125. In some implementations, regardless of whether the request for content includes a request for an asynchronous click transfer script, the content request module 130 can forward the request to the script provider module 140.
The content selection module 135 may be configured to: in response to receiving the request for content, content to be transmitted to the client device 125 is determined. The content selection module 135 may determine the content to send to the client device 125 based on information included in the request for content. For example, upon receiving a request for an information resource, the content selection module 135 may use an address or identifier of the information resource in the request for content to determine content to send to the client device. In the event that a request for one or more third-party content items is received, the content selection module 135 may select a third-party content item based on an address or identifier of an information resource on which the third-party content item is to be presented, content type information of the information resource (e.g., sports, news, music, movies, travel, etc.), size information of a content slot in which the third-party content item is to be displayed, client device information (e.g., device type, device identifier, device location, etc.). In some implementations, the content selection module 135 can access the database 145 and retrieve content to be sent to the client device 125.
In some implementations, the content selection module 135 can be configured to: in response to the request for content, it is determined whether a script is to be sent to the client device 125. The content selection module 135 may determine whether to send the script to the client device 125 based on the type of content request (e.g., a request for an information resource, a request for third-party content, or a request for an asynchronous click-through script), an indicator in the request for content (e.g., an indicator indicating an asynchronous click-through script), an information resource identifier in the request for content, or a combination thereof. In some implementations, the content request module 135 can determine whether to send the script to the client device 125 by comparing the identification of the information resource to a list of information resource identifiers (information resource identifiers eligible to receive asynchronous click transfer scripts). Upon determining that the script is to be sent to the client device 125, the content selection module 135 may forward the request for content, or an indication thereof, to the script provider module 140. In some implementations, the content selection module 135 can select third-party content items to be sent to the client device 125 as well as scripts, such as asynchronous click-to-transfer scripts.
The script provider module 140 may be configured to retrieve the asynchronous click transfer script from the database 145 and transmit the retrieved script to the client device 125 (or to another entity for transmission to the client device 125). In some implementations, the asynchronous click transfer script may be transmitted to the client device 125 alone or together with the third-party content item to the client device 125. For example, the script provider module 140, the content selection module 135, or another entity of the data processing system 110 may include the asynchronous click transfer script within the third-party content item prior to sending the third-party content item to the client device 125. In some implementations, the script provider module 140, the content selection module 135, or another entity of the data processing system 110 can send an asynchronous click transfer script to the client device 125 along with the requested information resource.
The asynchronous click transfer script may include computer executable instructions. The computer-executable instructions may include scripts such as hypertext markup language (HTML), extensible hypertext markup language (XHTML), extensible markup language (XML), Cascading Style Sheets (CSS), JavaScript, and the like. The computer-executable instructions may be executed within an application of the client device 125, such as an application that causes the client device 125 to transmit a content request received through the content request module 130. The application may include, for example, an internet browser, a mobile application, a gaming application, a GPS application, or any other computer program capable of reading and executing computer-executable instructions. In brief overview, the computer-executable instructions, when executed by a processor of the client device 125, may cause an application of the client device to (a) identify an indication of an interaction with a content item presented within a content slot of an information resource; (b) generating a click identifier that uniquely identifies an interaction with the content item; (c) generating a first request comprising a click resource link, the click resource link comprising a click identifier; (d) transmitting a first request comprising a click resource link to a click server, the click resource link comprising a click identifier; (e) generating a resource link that identifies i) a resource identifier of a landing page corresponding to the content item and ii) a click identifier that uniquely identifies an interaction with the content item; and (f) transmitting a second request to access the landing page for the content item independent of transmitting the first request, the second request including the generated resource link. Referring to fig. 2, 3, 4, and 5, additional details regarding the asynchronous click transfer script are further provided herein.
FIG. 2 is a block diagram depicting one embodiment of an environment for reducing latency of online network traffic in accordance with an illustrative embodiment. The client device 125 may be the device 125 in FIG. 1 as described herein and may communicate with a content server 205, a click server 210, and a landing page provider server 215 via the network 105. The content server 205 and/or the click server 210 may be servers in the data processing system 110 of FIG. 1. The content server 205 and/or the click server 210 may also comprise a server external to the data processing system 110. The landing page provider server 215 may comprise the server of the content provider computing device 115 in FIG. 1. The landing page provider server 215 may also include a server in the data processing system 110 or a server external to the content provider computing device 115 and the data processing system 110. In some implementations, the content server 205, the click server 210, and the landing page provider server 215 may include the hardware and software described herein with respect to servers in the data processing system 110, the client device 125, the content provider computing device 115, or the content publisher computing device 125. In some implementations, the content server 205 can include the content request module 130, the content selection module 135, and the script provider module 140 of fig. 1 as described herein.
Referring now to fig. 1 and 2 concurrently, in some implementations, the data processing system 110 can receive a content request from a client device 125 via the computer network 105 for a content item to be presented within a content slot of an information resource. For example, the content server 205 or the content request module 130 of the data processing system 110 may receive a content request from the client device 125 for content (or a content item) to be presented within a content slot of an information resource (e.g., a web page).
In some implementations, in response to the content request, the data processing system 110 can transmit, via the computer network 105, the content item to be presented within the content slot of the information resource. For example, the content server 205 or the content request module 130 of the data processing system 110 may transmit a content item to be presented within a content slot of an information resource to the client device 125. In some implementations, the content item can be selected by the data processing system 110 or the content server 205. In some implementations, one or more content items can be selected and transmitted to the client device 125. In some implementations, the content item can include a script, such as an asynchronous click transfer script, that includes computer-executable instructions. The computer-executable instructions may be executed at the client device 125 to cause one or more processors of the client device 125 to perform operations as described herein. One example of a system related to asynchronous click transfer scripts is shown in FIG. 3.
FIG. 3 is a block diagram depicting one embodiment of a system 300 for reducing latency of online network traffic in accordance with an illustrative embodiment. The asynchronous click transmission system 300 may include an application 305, an information resource 310, a configuration determination module 320, a click identifier generation module 325, a first request generation module 330, and a second request generation module 335. In some embodiments, the configuration determination module 320, the click identifier generation module 325, the first request generation module 330, and the second request generation module 335 may be modules within the asynchronous click transmission script 315. The asynchronous click transmission system 300 may be executed or carried out by one or more processors of a computing device, such as those described below in FIG. 6. In some embodiments, any of the configuration determination module 320, the click identifier generation module 325, the first request generation module 330, and the second request generation module 335 may be part of the application 305, the information resource 310, or the asynchronous click transfer script 315.
The applications 305 may include, for example, an internet browser, a mobile application, a gaming application, a GPS application, or any other computer program capable of executing or invoking computer-executable instructions, such as computer-executable instructions included within the information resource 310, the configuration determination module 320, the click identifier generation module 325, the first request generation module 330, and the second request generation module 335. The application 305 may obtain or receive the information resource 310 from a server hosting the information resource, such as a server of the content publisher 120, a server of the content provider 115, or a server of the data processing system 110. For example, application 305 may send a request including an address or identifier of information resource 310 to a server hosting the information resource and, in response, receive information resource 310. The information resource 310 may include one or more content portions (or content elements). The information resource 310 may specify the location of one or more content elements. In some implementations, the information resource 310 can include portions of primary content and portions of third-party content or content items.
Referring now to fig. 1, 2, and 3 concurrently, in some embodiments, a configuration determination module 320 executing on the client device 125 may cause the client device 125 to determine whether the application 305 is configured with an asynchronous interface or asynchronous Application Programming Interface (API). As described in more detail below, the asynchronous interface or asynchronous API may be a BEACON interface or BEACON API. Some applications, for example, some browsers or some older versions of some browsers, may not support or may not be compatible with asynchronous interfaces or asynchronous APIs. In some implementations, the configuration determination module 320 can determine that the browser or application 305 executing on the client device 125 is configured with an asynchronous interface or asynchronous API by examining the version of the application and comparing the version to a list of applications known to be configured with asynchronous interfaces or asynchronous APIs. In some implementations, the configuration determination module 320 may run one or more tests to determine whether the application 305 is configured with an asynchronous interface or an asynchronous API. For example, configuration determination module 320 may cause the application to execute one or more instructions that cause the application executing on the client device to send a request to a destination address using an asynchronous interface or an asynchronous API. The configuration determination module 320 may then confirm whether the application is able to send the request by analyzing the activity log or by receiving confirmation from the server of the destination address indicating that the request from the application 305 has been received. If configuration determination module 320 determines that application 305 is not configured with or is incompatible with an asynchronous interface, a method utilizing "302 redirect" as described above may be invoked. Conversely, if the configuration determination module 320 determines that the application 305 is configured with or compatible with an asynchronous interface, a method utilizing a click identifier generated at the client device may be invoked as described below.
In some implementations, the click identifier generation module 325 executing on the client device 125 can cause the client device 125 to identify an indication of an interaction with a content item presented within a content slot of an information resource. In some implementations, the content item or third-party content item received by the client device 125 from the data processing system 110 or the content server 205 can be presented within a content slot of the information resource 310 of the client device 125. One example of an information resource with third party content items is illustrated in fig. 4.
FIG. 4 is a block diagram illustrating an information resource 400 having content items provided at a client device 125 in accordance with an illustrative embodiment. The information resource 400 may be a web page or other document displayed on the client device 125. As shown in fig. 4, a news article 405, which is the main content of the information resource 400, is located in one section of the information resource 400. The content items or third party content items 410, 415, and 420 are located in different portions of the information resource 400. In some implementations, various functions associated with content items 410, 415, and 420 can be implemented by including one or more tags within information resource code located in HTML and/or other files. For example, the HTML file may include a tag that specifies that the content item slot is to be located at the location of the content item 410. Another tag may request the content item from a remote location, for example, from the database 145 of the data processing system 110. Such a request may include one or more keywords or other data (e.g., a Cookie) used by the data processing system 110 to select the content item to provide to the user device 125.
In some implementations, when interacting with a content item (such as content item 410) presented within a content slot (such as content slot 412) of the information resource 400, a click identifier generation module 325 executing on the client device 125 can cause the client device 125 to recognize such interaction. For example, the interaction may include the user clicking on or selecting the content item 410 using a mouse, keypad, or other input device. The user may also interact with the content item displayed on the touch screen by using a stylus/pen or one or more fingers. For example, as shown in FIG. 4, content item 410 is clicked on. In some implementations, the application 305 on which the information resource 400 is presented can execute instructions that can cause a client device to deploy a listener or other agent to detect interactions performed through an input device (such as a keyboard, mouse, or touch screen, etc.). In some implementations, the client device can deploy a listener, such as an onscreen listener, to detect actions performed by the input device. Via the listener, the client device may detect click events on the content item 410. The application may cause the client device to generate a signal or event indicating a click event.
In some implementations, the click identifier generation module 325 executing on the client device 125 may generate a click identifier that uniquely identifies an interaction with a content item. For example, in response to identifying a click on the content item 410, a click identifier generation module 325 executing on the client device 125 may cause the client device to generate a click identifier. In some implementations, the click identifier can include an impression identifier and a counter. The impression identifier may uniquely identify an impression of the content item. The counter may indicate a number of interactions with the content item at the client device. In some implementations, the click identifier may be generated using a random number generator or using a mapping routine (e.g., a hash function).
In some implementations, the content item received from the data processing system 110 or the content server 205 can include an impression identifier that uniquely identifies an impression of the content item. In some implementations, each instance of the transmission of a content item from the data processing system 110 (or the content server 205) to a client device can be treated as an impression and can be identified by an impression identifier. For example, the data processing system 110 (or the content server 205) may generate and include within the content item a unique identifier that uniquely identifies an impression of the content item. The impression identifier may be a combination of information associated with an impression of the content item. For example, the impression identifier may include an identifier or name of the content item (e.g., this content item is content item number 50 from this particular content provider), the time of day the content item was selected or transmitted by the data processing system 110, the location of the client device requesting the content item (e.g., geographic location, Internet Protocol (IP) address), a URL or other identifier identifying a domain (website) or web page in which the content item is to be displayed, keywords, an identifier of a content slot in which the content item is presented, a search query, a topic of an information resource, a type of client device, profile information, or any other information associated with the content item and/or request for the content item. In other implementations, the impression identifier may be generated by a random number generator of the data processing system 110 or the content server 205.
In some implementations, each time a content item presented within a content slot of an information resource is interacted with, an application of a client device on which the content item is presented can cause the client device to adjust a value of a counter used to generate a click identifier. For example, each time the content item 410 is clicked, the value of the counter of the click identifier is adjusted. For example, the counter may have an initial value (e.g., 0, 10, 100, etc.), and may be incremented or decremented each time the content item 410 is clicked. Thus, in these embodiments, each click on a content item may be uniquely identified. As an example, in some implementations, content items transmitted from the data processing system 110 or the content server 205 may be cached at the client device 125. In this case, when the user reloads the information resource in which the content item was previously displayed (e.g., by refreshing the information resource presented on the application), the cached content item may again be displayed within the same content slot of the information resource. Thus, in these embodiments, the impression identifiers of the content items may remain consistent. However, by using a counter, each time a content item is clicked, a different counter value may be generated even if the impression identifier remains consistent. Thus, the click identifier, which may include the impression identifier and the counter, may be unique such that each click on the content item may be uniquely identified. In some implementations, the click identifier may be generated using one or more additional parameters. For example, in some implementations, the click identifier may be generated using a combination of system time, or other system data, to ensure that: even if the counter data is lost during the reloading of the web page, a different unique click ID is generated for each subsequent click.
In some implementations, the first request generation module 330 executing on the client device 125 can cause the client device to generate a first request that includes a click resource link that includes a click identifier. In some implementations, when clicking on or accessing or interacting with a content item, the client device can generate a request (e.g., a hypertext transfer protocol (HTTP) request) with a click resource link that includes a click identifier, e.g., as follows: example.g. click.net/pagead/aclkai ═ the expression identifier } & p ═ COUNTER }.
As described above, the click identifier may include an impression identifier and a counter. The counter may be adjusted (e.g., incremented or decremented) each time the content item is clicked. For example, for a first click on a content item, clicking on a resource link may be as follows:
example.g.click.net/pagead/aclkai＝{the impression identifier}&p＝0。
continuing with the example, when clicking on a content item a second time, clicking on a resource link may be as follows:
example.g.click.net/pagead/aclkai＝{the impression identifier}&p＝1。
in some implementations, the first request generation module 330 executing on the client device 125 can cause the client device to transmit a first request including a click resource link to the click server 210 via the network 105, the click resource link including a click identifier. As described above, the click server 210 may be a server within the data processing system 110 or external to the data processing system 110. Click server 210 may be used to record clicks (interactions with content items) on content items at client device 125. In response to the client device transmitting a generated click identifier that uniquely identifies an interaction with the content item to the click server, the click server may record each click on the content item (or each interaction with the content item). Such recordings can be used for many purposes. For example, by recording clicks on content items displayed on the information resources of a content publisher (e.g., content publisher 120), if the number of clicks is one of the criteria that the content provider (e.g., content provider 115) pays the content publisher for placement of the content provider's content on the content publisher's information resources, then payment may be made to the content publisher of the information resources based on the number of clicks on the content item. In addition, the content provider may determine whether they will have their content placed on the information resources of a particular content publisher based on the number of clicks they receive. In some implementations, in response to the first request, the click server 210 can return a response message to the client device 125. The response message may contain completion status information for the first request and may contain other information in the message body.
In some implementations, the first request generation module 330 executing on the client device 125 can transmit the first request to the click server 210 via an asynchronous interface of the application 305 of the client device 125 on which the information resource 310 is presented. For example, the first request generation module 330 may cause the application 305 to use an asynchronous Application Program Interface (API) to rank asynchronous requests to generated click resource links. In some implementations, the first request generation module 330 may cause the application 305 to use the BEACON API or application plug-in to rank the BEACON request to the generated click resource link. In some implementations, the asynchronous interface can be part of an application 305 of the client device 125 on which the information resource 310 is displayed. In other embodiments, the asynchronous interface may be a stand-alone application. By using an asynchronous interface to transmit the generated click identifier to the click server, the client device 125 may transmit the generated click identifier to the click server independent of and separate from a request to access a landing page for the content item. Further, the client device 125 may transmit the generated click identifier via a process separate from the request to access the landing page. As such, the click server may receive the generated click identifier and store the received click identifier in a data structure maintained by the click server.
In some implementations, the navigator.sendbeacon () method can be used to asynchronously transmit smaller HTTP data from a client device to a server. In some embodiments, the syntax of this method is as follows: sendbeacon (URL, data), where the URL parameter indicates a parsed URL in which data is to be transmitted and the data parameter is the data to be transmitted. In some implementations, the URL parameter may correspond to a URL of the click server, and the data parameter may include a value corresponding to the generated click identifier. The sendBeacon method may transfer data provided by the data parameter to the URL provided by the URL parameter. The client device may transmit data at the earliest available opportunity, but the priority of data transmission may be lower compared to other network traffic. In some embodiments, the sendBeacon method may return a true value if the client device is able to successfully queue data for transmission. Otherwise, the sendBeacon method may return a false value.
In some implementations, the second request generation module 335 executing on the client device 125 can cause the client device to generate a resource link that identifies (i) a resource identifier of a landing page corresponding to the content item and (ii) a click identifier that uniquely identifies an interaction with the content item. The resource link may be used to access a landing page for the content item. The landing page may be a web page or other document that is presented for display on the client device in response to an action taken on the content item when the content item is presented on the client device. For example, the second request generation module 335 may cause the client device 125 to generate the resource link by appending the click identifier to a resource identifier (e.g., a URL) of the landing page. The resource identifier of the landing page may be a URL or other identifier of the landing page. The landing page may be a web page of a content provider of the content item and may provide more information of the content item.
In some implementations, the second request generation module 335 executing on the client device 125 can transmit, via the network 105, a second request to access a landing page for the content item, independent of transmitting the first request. The second request may include the generated resource link. In some implementations, the second request generation module 335 can cause the application 305 to submit an HTML request including the generated resource link to the landing page provider server 215. The generated resource link may identify (i) a resource identifier of a landing page corresponding to the content item and (ii) a click identifier that uniquely identifies an interaction with the content item. For example, the landing page provider server 215 may be a server of the content provider computing device 115 and may host a landing page for the content item. By including a click identifier within the resource link that uniquely identifies an interaction with the content item, the transition that occurs at the landing page may be associated with a particular interaction or click at the client device and may be recorded by the data processing system 110 or the content server 210. In some implementations, in response to the second request, the landing page provider server 215 can return a response message to the client device 125. The response message may contain completion status information of the second request and may include the requested content in the message body. For example, the requested landing page may be transmitted to the client device 125 and displayed at the client device 125.
In some implementations, the second request generation module 335 executing on the client device 125 can transmit a second request to access the landing page independent of the first request generation module 330 transmitting the first request including the click identifier to the click server. In some implementations, while the first request generation module 330 transmits the first request to the click server 210, the second request generation module 335 transmits a second request to access the landing page before (or without waiting for) a response message to be returned from the click server to the client device 125. In other implementations, the second request generation module 335 may first transmit a second request to access the landing page and the first request generation module 330 transmits the first request to the click server 210 before a response message is returned from the landing page provider server 215 to the client device 125 (or without waiting for a response message to be returned from the landing page provider server 215 to the client device 125). In these embodiments, both the first request to the click server 210 and the second request to the landing page provider server 215 may be transmitted independently of each other. This mechanism may reduce latency because the landing page may be presented to the user without having to wait for the click server 210 to return a "302 redirect" or other message or request to the client device 125. By avoiding the step of waiting for the click server to return a "302 redirect" to the client device and then navigate to the landing page, the landing page can be presented to the user at the client device faster or in less time than the "302 redirect" approach described above.
In some implementations, the first request generation module 330 executing on the client device 125 can transmit the first request to the click server 210 at approximately the same time as the second request generation module 335 executing on the client device 125 transmits the second request to access the landing page for the content item. In some implementations, once the first request generation module 330 causes the client device 125 to transmit the first request to the click server 210, the second request generation module 335 causes the client device 125 to transmit the second request to the landing page provider server 215. In other implementations, the first request generation module 330 may cause the client device 125 to transmit the first request to the click server 210 immediately after the second request generation module 335 causes the client device 125 to transmit the second request to the landing page provider server 215. In some implementations, the amount of time between transmitting the two requests can be based on the processing power of the client device. In some implementations, the application 305 may cause the client device 125 to execute a first set of instructions to transmit a first request and then execute a second set of instructions to transmit a second request. The amount of time it takes for the client device to execute the second set of instructions after executing the first set of instructions may be less than 100 milliseconds, equal to 100 to 500 milliseconds, or more than 500 milliseconds. In some implementations, the application may cause the client device to transmit one of the first request or the second request after executing the other instructions for the information resource. In some such implementations, the amount of time between the two requests may be based on other factors, including the number and type of instructions that the client device has to execute, etc. In some implementations, the application can cause the client device to delay transmission of the first request to the click server based on network traffic and resource availability.
As described above, in some examples that do not implement the systems and methods for reducing latency described herein, after a content item is clicked on at a client device, the client device sends a request to a click server indicating that the particular content item has been clicked on. In response to the request, the click server may record the click, generate a click ID indicating the click, and return a "302 redirect" to the client device along with the generated click ID. In some implementations, the click server may be further configured to set a small text file on the client device that is included in the "302 redirect". However, in some implementations, for example, if the user clicks on a content item to install a mobile application on the mobile device, the click server does not set a small text file on the client device. Instead, the conversion is tracked using the content identifier or IDFA associated with the mobile device that the content provider can use.
In some examples that do not implement the systems and methods for reducing latency described herein, for example, a content item may be presented to a client device to install a mobile application on the client device. In response to a user of the client clicking on a content item, the client device generates a request to be directed to a URL of a click server associated with the content item. The click server may be configured to append the click identifier generated by the click server to a URL of a landing page for the content item (which is a URL that causes the client device to run another application, such as a marketplace application from which the mobile application may be installed). The client device may then run the marketplace application. In response to a client device receiving a request to install a mobile application via a marketplace application, the client device may annotate a referrer parameter via a translation tracking Software Development Kit (SDK) that may be included within the marketplace application and issue a ping command to the data processing system 110 that may be recorded as a translation.
In some embodiments implementing the systems and methods for reducing latency described herein, the application installation process is different from the process described above. In one such implementation, a content item may be presented to a client device to install a mobile application on the client device. In response to a user of the client device clicking on a content item, the client device may generate a click identifier at the client device based on a random Universally Unique Identifier (UUID) generated on the client device or a number generated by the server. The client device may then append the generated click identifier to the URL of the landing page and transmit a request to access the URL of the landing page that includes the generated click identifier. The client device may then run the marketplace application. The client device may annotate the referrer parameters via a conversion tracking Software Development Kit (SDK), which may be included within the marketplace application, and issue a ping command to the data processing system 110 that may be recorded as a conversion. In some implementations, the data processing system 110 may be configured to perform a lookup on the generated click identifier to attribute the conversion to the impression or click identified by the generated click identifier.
Fig. 5 is a flowchart depicting a method 500 for reducing latency of online network traffic in accordance with an illustrative embodiment. In brief overview, the method 500 may include: the client device transmits a content request to the data processing system for a content item to be presented within a content slot of the information resource (block 505). The method 500 may include: the data processing system receives a content request for a content item (block 510); and, in response, transmitting the content item including the asynchronous click transfer script to the client device (block 515). The method 500 may include: the client device receives a content item including an asynchronous click transfer script from the data processing system (block 520). The method 500 may include: upon executing the asynchronous click transfer script, the client device identifies an indication of interaction with the content item (block 525); generating a click identifier that uniquely identifies the interaction (block 530); generating a first request comprising a click resource link, the click resource link comprising a click identifier (block 535); transmitting a first request including a click identifier to a click server (block 540); generating a resource link that identifies (i) a resource identifier of the landing page and (ii) a click identifier (block 545); and transmitting a second request to access the landing page including the resource link, independent of transmitting the first request (block 550).
In further detail, the method 500 may include: the client device transmits a content request for a content item within a content slot of an information resource to be presented at the client device to a data processing system via a computer network (block 505). For example, the client device or application thereof may send a request to the data processing system for a content item that includes an address or identifier of an information resource, an identifier of a content slot, and transmit other information (e.g., keywords, queries, etc.) to the data processing system or content server.
The method 500 may include: the data processing system receives a content request for a content item (block 510); and, in response, transmitting the content item including the asynchronous click transfer script to the client device (block 515). For example, a content request module or a content server of the data processing system may receive a content request and transmit a content item including an asynchronous click transfer script to a client device. In some implementations, the content item transmitted to the client device can further include an impression identifier that uniquely identifies an impression of the content item at the client device.
The method 500 may include: the client device receives a content item including an asynchronous click transfer script from a data processing system or a content server (block 520). The asynchronous click transmission script includes computer-executable instructions that, when executed by one or more processors of the client device, may cause the client device to perform the method steps described below. In some implementations, the configuration determination module of the asynchronous click transfer script can cause the client device to determine whether an application (e.g., a browser) of the client device on which the information resource (e.g., a web page) is presented is configured with an asynchronous interface (e.g., a BEACON API).
The method 500 may include: the client device identifies an indication of an interaction with a content item presented within a content slot of the information resource (block 525). For example, a click identifier generation module of the asynchronous click transmission script may cause the client device to identify an interaction (e.g., click, selection, touch, command, etc.) with a content item presented within a content slot of the information resource. In some implementations, once a content item is clicked, a signal or event indicating the click may be generated and detected by an application executing on the client device or an asynchronous click transmission script.
The method 500 may include: the client device generates a click identifier that uniquely identifies an interaction with the content item (block 530). For example, a click identifier generation module of the asynchronous click transmission script may cause the client device to generate a click identifier that uniquely identifies an interaction with the content item. In some implementations, the generated click identifier includes an impression identifier and a counter transmitted with the content item from the data processing system. The counter indicates a number of interactions with the content item at the client device. For example, the value of the counter of the click identifier may be adjusted (e.g., incremented or decremented) upon identifying an indication of interaction with a content item presented within a content slot of the information resource.
The method 500 may include: the client device generates a first request that includes a click resource link that includes a click identifier (block 535). For example, a first request generation module of the asynchronous click transmission script may cause the client device to generate a first request that includes a click resource link that includes a click identifier. In some implementations, when a content item is clicked, a request (e.g., a hypertext transfer protocol (HTTP) request) may be generated that includes a click resource link that includes a click identifier that uniquely identifies the click of the content item.
The method 500 may include: the client device transmits a first request to the click server that includes a click resource link that includes a click identifier (block 540). For example, a first request generation module of an asynchronous click transfer script may cause a client device to transmit a first request to a click server. In some implementations, the first request can be transmitted to the click server via an asynchronous interface of an application of the client device on which the information resource is presented. For example, the asynchronous interface may be a BEACON Application Plugin (API).
The method 500 may include: the client device generates a resource link (block 545) that identifies (i) a resource identifier of a landing page corresponding to the content item and (ii) a click identifier that uniquely identifies an interaction with the content item. For example, the second request generation module of the asynchronous click transmission script may cause the client device to generate the resource link by appending the click identifier to a resource identifier of the landing page. The landing page may be a web page or other document that is displayed to the user when the user clicks on a content item. The resource identifier of the landing page may be a URL or other identifier of the landing page.
The method 500 may include: independent of transmitting the first request, the client device transmits a second request to access the landing page that includes the generated resource link (block 550). For example, the asynchronous click transfer script may cause the client device to transfer the first request and the second request independently of each other's transfer. In some implementations, the second request may be transmitted without waiting for a response message from the client device to receive the first request. In some implementations, the first request may be transmitted without waiting for a response message from the client device to receive the second request. In some implementations, the first request can be transmitted to the click server at approximately the same time that the second request is transmitted to the landing page provider server. For example, the second request may be transmitted immediately upon transmission of the first request, and vice versa. For example, the first request and the second request may be transmitted in parallel.
For the case where the system discussed herein collects or otherwise makes available personal information about a user, the user may be provided with the following opportunities: control whether programs or features may gather personal information (e.g., information about a user's social network, social actions or activities, a user's preferences, or a user's current location), or control whether and/or how to receive content from a content server that may be more relevant to the user. In addition, prior to storing or using the particular data, the particular data may be processed in one or more ways such that particular information related to the user is removed when generating the parameters (e.g., demographic parameters). For example, the identity of the user may be processed such that the user's identifying information cannot be determined, or the geographic location of the user from which the location information is obtained may be generalized (such as a city, zip code, or state level) such that the user's particular location cannot be determined. Thus, the user can control: how to collect information about the user and how the content server uses the information.
Fig. 6 shows a general architecture of an illustrative computer system 600 that may be used to implement any of the computer systems discussed herein (including the system 110 and its components, such as the content request module 130, the content selection module 135, and the script provider module 140), according to some embodiments. Computer system 600 may be used to provide information to be displayed via network 105. The computer system 600 of fig. 6 includes one or more processors 620 communicatively coupled to a memory 625, one or more communication interfaces 605, and one or more output devices 610 (e.g., one or more display units) and one or more input devices 615. The processor 620 may be included within the data processing system 110 or other components of the system 110, such as the content request module 130 and the content selection module 135.
In computer system 600 in fig. 6, memory 625 may include any computer-readable storage medium and may store computer instructions, such as processor-executable instructions for the respective system to implement the various functions described herein, as well as any data related thereto, generated thereby, or received via a communication interface or input device, if present. Referring again to the system 110 of FIG. 1, the data processing system 110 may include a memory 625 to store information regarding the availability of an inventory of one or more content units, the retention of one or more content units, and the like. The memory 625 may include a database 145. The processor 620 shown in fig. 6 may be used to execute instructions stored in the memory 625 and, as such, may also read from or write to the memory various information processed and/or generated in accordance with the execution of the instructions.
The processor 620 of the computer system 600 shown in fig. 6 may also be communicatively coupled to the communication interface 605 or control the communication interface 605 to transmit or receive various information according to the execution of instructions. For example, communication interface 605 may be coupled to a wired or wireless network, bus, or other communication device, which may enable computer system 600 to transmit information to other devices (e.g., other computer systems) or receive information from other devices (e.g., other computer systems). Although not explicitly shown in the system of fig. 1, one or more communication interfaces facilitate the flow of information between components of the system 600. In some implementations, the communication interface may be configured to provide a web page (e.g., via various hardware or software components) as a portal to access at least some aspects of the computer system 600. Examples of the communication interface 605 include a user interface (e.g., a web page) through which a user can communicate with the data processing system 110.
The output device 610 of the computer system 600 shown in fig. 6 may be provided to enable various information to be viewed or perceived, for example, in connection with execution of instructions. For example, an input device 615 may be provided to enable a user to make manual adjustments, make selections, input data, or interact with the processor in any of a variety of ways during execution of instructions. Additional information regarding the general computer system architecture that may be used for the various systems discussed herein is further provided herein.
Embodiments of the subject matter and the operations described in this specification can be implemented with digital electronic circuitry, or with computer software, firmware, or hardware (including the structures disclosed in this specification and their structural equivalents) embodied in tangible media, or with a combination of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a computer storage medium for execution by, or to control the operation of, data processing apparatus. The program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage media may be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, when the computer storage medium is not a propagated signal, the computer storage medium can comprise a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The features disclosed herein may be implemented on a smart television module (or connected television module, hybrid television module, etc.), which may include a processing module configured to integrate internet connectivity with more traditional television programming sources (e.g., received via cable, satellite, wireless, or other signals). The smart television module may be physically incorporated into a television or may comprise a separate device, such as a set-top box, a blu-ray or other digital media player, a game console, a hotel television system, and other companion devices. The smart television module may be configured to enable viewers to search for and locate videos, movies, photos, and other content on a network, on a local cable TV channel, on a satellite TV channel, or stored on a local hard drive. A set-top box (STB) or set-top unit (STU) may include an information appliance that may include a tuner and that is connected to a television and an external signal source to convert the signal into content that is then displayed on a television screen or other display device. The smart television module may be configured to provide a home screen or top-level screen that includes icons for a plurality of different applications, such as a web browser and a plurality of streaming media services, connected cable or satellite media sources, other network "channels," and so forth. The smart television module may be further configured to provide an electronic viewing guide to the user. A companion application that is applied to the smart television module may operate on the mobile computing device to provide additional information to the user about available programming, to enable the user to control the smart television module, and so on. In alternative embodiments, these features may be implemented on a laptop or other personal computer, a smartphone, other mobile phone, handheld computer, tablet PC, or other computing device.
The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored in one or more computer-readable storage devices or received from other sources.
The terms "data processing apparatus," "data processing system," "user device," or "computing device" encompass all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or many or a combination of the foregoing. An apparatus may comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code for creating an execution environment for a computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The device and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. The content request module 130 and the content selection module 135 may include or share one or more data processing devices, computing devices, or processors.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
A processor adapted to execute a computer program comprises: such as a general purpose microprocessor, a special purpose microprocessor, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of the computer are: a processor for performing actions in accordance with instructions, and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, the computer need not have such a device. Also, for example, the computer may be embedded in another device, e.g., a mobile phone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game player, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including: for example, semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices), magnetic disks (e.g., internal hard disk or removable disk), magneto-optical disks, CD-ROM disks, and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having: a display device for displaying information to a user, for example, a CRT (cathode ray tube), plasma, or LCD (liquid crystal display) monitor; and a keyboard and a pointing device, such as a mouse or a trackball, by which a user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can include any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. In addition, the computer may interact with the user by sending documents to a device used by the user and receiving documents from the device, for example, by sending web pages to a web browser on the user's client device in response to requests received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an embodiment of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include: local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
A computing system, such as system 600 or system 110, may include clients and servers. For example, the data processing system 110 may include one or more servers in one or more data centers or server clusters. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., HTML pages) to the client device (e.g., for displaying data to a user interacting with the client device and receiving user input from the user). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of the disclosure or of what may be claimed, but rather as descriptions of features specific to particular implementations of the systems and methods described herein. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results.
In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products. For example, the content request module 130 and the content selection module 135 may be part of the data processing system 110, a single module, a logical device with one or more processing modules, a portion of one or more servers, or a portion of a search engine.
Having now described some illustrative embodiments and implementations, it will be apparent that the foregoing is illustrative and not limiting, having been presented by way of example. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, these acts and these elements may be combined in other ways to accomplish the same objectives. Acts, elements and features discussed only in connection with one embodiment are not intended to be excluded from a similar role in other embodiments or implementations.
In embodiments of the present disclosure, the content or content item may be any suitable content. In some applications, the content or content item may be an advertisement ("ad"), although the disclosure is not so limited. When the content or content item is an advertisement, the content server 205 may be an advertisement server and/or the third-party content provider may be an advertiser.
In some implementations, the request for the third-party content item can also include displaying a minimum revenue amount (or minimum bid value) for the third-party content item on the information resource. In some implementations, the content selection module 135 can communicate with an auction system (e.g., an ad auction system) and provide auction system information included within a request for third-party content received from a client device. The content selection module 135 may also receive one or more third-party content items from the auction system in response to providing information included in the request for third-party content.
In some implementations, the data processing system 110 can include an auction system configured to host an auction, such as an advertising auction system. In some implementations, the data processing system 110 does not include an auction system, but is configured to communicate with the auction system via the network 105.
In some implementations, the landing page can include additional product information for the product advertised in the content item. Transitions related to the content item may occur at the landing page, for example, a user may purchase a product or service advertised by the content item via the landing page. A conversion may occur when a user clicks on a content item and then takes an action (e.g., purchase, sign-up, registration, etc.) via a landing page.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "characterized by," "characterized in" and variations thereof herein is meant to encompass the items listed thereafter and equivalents and additions thereof as well as alternative embodiments consisting only of the items listed thereafter. In one embodiment, the systems and methods described herein consist of one, each combination of a plurality, or all of the described elements, acts, or components.
Any reference to embodiments or elements of the systems and methods herein referred to in the singular may also encompass embodiments comprising a plurality of these elements, and any reference to the plural of any embodiment or element or act herein may also encompass embodiments comprising only a single element. References in the singular or plural form are not intended to limit the presently disclosed system or method, its components, acts, or elements to a single or multiple configurations. References to any behavior or element based on any information, behavior, or element can include implementations in which the behavior or element is based, at least in part, on the information, behavior, or element.
Any embodiment disclosed herein may be combined with any other embodiment, and references to "an embodiment," "some embodiments," "an alternate embodiment," "various embodiments," "one embodiment," etc. are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment. The terms used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, including, either exclusively or exclusively, in any manner consistent with aspects and embodiments disclosed herein.
References to "or" may be construed as inclusive such that any term described using "or" may refer to a single term, multiple terms, and all terms described.
Where technical features in the drawings, detailed description or any claim are followed by reference signs, the reference signs have been included for the sole purpose of increasing the intelligibility of the drawings, detailed description, and claims. Accordingly, neither the reference signs nor the absence of reference signs have any limiting effect on the scope of any claim elements.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. Although the examples provided herein relate to controlling the display of content of information resources, the systems and methods described herein may include adaptation to other environments. The foregoing embodiments are illustrative, and not limiting, of the described systems and methods. The scope of the systems and methods described herein is thus indicated by the appended claims rather than by the foregoing description, and all changes that come within the meaning and range of equivalency of the claims are intended to be embraced therein.
Claims (18)
1. A system for reducing latency of online network traffic, comprising:
a processor; and
a memory coupled to the processor, the memory storing computer-executable instructions that, when executed by the processor, cause the processor to:
identifying an indication of an interaction with a content item presented within a content slot of an information resource, wherein the content item is received from a data processing system via a computer network;
generating a click identifier that uniquely identifies the interaction with the content item;
generating a first request comprising a click resource link, the click resource link comprising the click identifier;
transmitting the first request including the click resource link including the click identifier to a click server;
generating a resource link that identifies i) a resource identifier of a landing page corresponding to the content item and ii) the click identifier that uniquely identifies the interaction with the content item;
transmitting, independent of transmitting the first request, a second request to access the landing page for the content item, the second request including the generated resource link; and
transmitting the first request to the click server at the same time as transmitting the second request to access the landing page of the content item.
2. The system of claim 1, wherein the memory stores the computer-executable instructions that, when executed by the processor, further cause the processor to transmit the first request to the click server via an asynchronous interface of an application of a computing device presenting the information resource.
3. The system of claim 2, wherein the asynchronous interface comprises a BEACON application plug-in.
4. The system of claim 2 or 3, wherein the memory stores the computer-executable instructions that, when executed by the processor, further cause the processor to determine that the application is configured with the asynchronous interface.
5. The system of any one of claims 1 to 3,
wherein the content item received from the data processing system further comprises an impression identifier that uniquely identifies an impression of the content item, an
Wherein the click identifier comprises the impression identifier and a counter indicating a number of interactions with the content item.
6. The system of claim 5, wherein the memory stores the computer-executable instructions that, when executed by the processor, further cause the processor to:
identifying an indication of a second interaction with the content item presented within the content slot of the information resource; and
adjusting a value of the counter of the click identifier in response to the indication identifying the second interaction.
7. A method of reducing latency of online network traffic, comprising:
receiving, by a computing device comprising one or more processors from a data processing system via a computer network, a content item for presentation within a content slot of an information resource;
identifying, by the computing device, an indication of an interaction with the content item presented within the content slot of the information resource;
generating, by the computing device, a click identifier that uniquely identifies the interaction with the content item;
generating, by the computing device, a first request comprising a click resource link, the click resource link comprising the click identifier;
transmitting, by the computing device, the first request including the click resource link including the click identifier to a click server;
generating, by the computing device, a resource link that identifies i) a resource identifier of a landing page corresponding to the content item and ii) the click identifier that uniquely identifies the interaction with the content item;
transmitting, by the computing device, a second request to access the landing page for the content item independent of transmitting the first request, the second request including the generated resource link; and
transmitting the first request to the click server at the same time as transmitting the second request to access the landing page of the content item.
8. The method of claim 7, further comprising: transmitting the first request to the click server via an asynchronous interface of an application of a computing device presenting the information resource.
9. The method of claim 8, wherein the asynchronous interface comprises a BEACON application plug-in.
10. The method of claim 8 or 9, further comprising: determining that the application is configured with the asynchronous interface.
11. The method of any one of claims 7 to 9,
wherein the content item received from the data processing system further comprises an impression identifier that uniquely identifies an impression of the content item, an
Wherein the click identifier comprises the impression identifier and a counter indicating a number of interactions with the content item;
the method optionally further comprises:
identifying an indication of a second interaction with the content item presented within the content slot of the information resource; and
adjusting a value of the counter of the click identifier in response to the indication identifying the second interaction.
12. A method of reducing latency of online network traffic, comprising:
receiving, by a data processing system having one or more processors, a content request from a client device via a computer network for a content item for presentation within a content slot of an information resource; and
transmitting, by the data processing system, the content item for presentation within the content slot of the information resource to the client device via the computer network in response to the content request, the content item comprising an asynchronous click-to-transmit script comprising computer-executable instructions that, when executed by a processor of the client device, cause the client device to:
identifying an indication of an interaction with the content item presented within the content slot of the information resource;
generating a click identifier that uniquely identifies the interaction with the content item;
generating a first request comprising a click resource link, the click resource link comprising the click identifier;
transmitting the first request including the click resource link including the click identifier to a click server;
generating a resource link that identifies i) a resource identifier of a landing page corresponding to the content item and ii) the click identifier that uniquely identifies the interaction with the content item;
transmitting, independent of transmitting the first request, a second request to access the landing page for the content item, the second request including the generated resource link; and
transmitting the first request to the click server at the same time as transmitting the second request to access the landing page of the content item.
13. The method of claim 12, wherein the computer-executable instructions, when executed by the processor of the client device, further cause the client device to:
transmitting the first request to the click server via an asynchronous interface of an application of the client device that presents the information resource.
14. The method of claim 13, wherein the asynchronous interface comprises a BEACON application plug-in.
15. The method of claim 13 or 14, wherein the computer-executable instructions, when executed by the processor of the client device, further cause the client device to:
determining that the application is configured with the asynchronous interface.
16. The method of any one of claims 12 to 14,
wherein the content item transmitted to the client device further comprises an impression identifier that uniquely identifies an impression of the content item at the client device, an
Wherein the click identifier comprises the impression identifier and a counter indicating a number of interactions with the content item at the client device.
17. The method of claim 16, wherein the computer-executable instructions, when executed by the processor of the client device, further cause the client device to:
identifying an indication of a second interaction with the content item presented within the content slot of the information resource; and
adjusting a value of the counter of the click identifier in response to the indication identifying the second interaction.
18. A computer-readable medium containing instructions that, when executed by a computing device, cause the computing device to perform the method defined in any one of claims 7 to 11.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202111495078.1A CN114625993A (en) | 2015-12-18 | 2016-11-15 | System and method for reducing latency of content item interactions using client-generated click identifiers |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/975,027 US10892968B2 (en) | 2015-12-18 | 2015-12-18 | Systems and methods for latency reduction in content item interactions using client-generated click identifiers |
US14/975,027 | 2015-12-18 | ||
PCT/US2016/062111 WO2017105730A1 (en) | 2015-12-18 | 2016-11-15 | Systems and methods for latency reduction in content item interactions using client-generated click identifiers |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202111495078.1A Division CN114625993A (en) | 2015-12-18 | 2016-11-15 | System and method for reducing latency of content item interactions using client-generated click identifiers |
Publications (2)
Publication Number | Publication Date |
---|---|
CN108140196A CN108140196A (en) | 2018-06-08 |
CN108140196B true CN108140196B (en) | 2021-12-28 |
Family
ID=57472048
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680034584.1A Active CN108140196B (en) | 2015-12-18 | 2016-11-15 | System and method for reducing latency of content item interactions using client-generated click identifiers |
CN202111495078.1A Pending CN114625993A (en) | 2015-12-18 | 2016-11-15 | System and method for reducing latency of content item interactions using client-generated click identifiers |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202111495078.1A Pending CN114625993A (en) | 2015-12-18 | 2016-11-15 | System and method for reducing latency of content item interactions using client-generated click identifiers |
Country Status (4)
Country | Link |
---|---|
US (2) | US10892968B2 (en) |
EP (1) | EP3295414A1 (en) |
CN (2) | CN108140196B (en) |
WO (1) | WO2017105730A1 (en) |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9866586B2 (en) * | 2014-04-30 | 2018-01-09 | Twitter, Inc. | Facilitating cross-platform content access |
US11120486B2 (en) * | 2017-07-24 | 2021-09-14 | Walmart Apollo Llc | Systems and methods for distributing online advertisements |
KR102239281B1 (en) | 2019-04-16 | 2021-04-12 | 구글 엘엘씨 | Aggregated Conversion Measurement |
US20210004481A1 (en) * | 2019-07-05 | 2021-01-07 | Google Llc | Systems and methods for privacy preserving determination of intersections of sets of user identifiers |
CN113867553B (en) * | 2020-06-15 | 2023-09-26 | 武汉斗鱼鱼乐网络科技有限公司 | Quick click processing method and device, storage medium and electronic equipment |
US11736940B2 (en) * | 2020-07-27 | 2023-08-22 | HyeRiseInv LLC | L8p8 secure transmission system and method |
US11282107B1 (en) * | 2020-11-19 | 2022-03-22 | Ebay Inc. | Tracking advertisements using a single URL without redirection |
CN113407239B (en) * | 2021-06-09 | 2023-06-13 | 中山大学 | Pipeline processor based on asynchronous monorail |
CN115474098B (en) * | 2022-08-09 | 2024-03-26 | 北京达佳互联信息技术有限公司 | Resource processing method and device, electronic equipment and storage medium |
US11683361B1 (en) | 2022-09-15 | 2023-06-20 | Permissionize LLC | Systems and methods for asynchronous transfer of user-provided information upon user-provided permission |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102866945A (en) * | 2012-07-25 | 2013-01-09 | 百度时代网络技术（北京）有限公司 | Method and device for providing first application test information corresponding to users |
CN103984686A (en) * | 2013-02-07 | 2014-08-13 | 阿里巴巴集团控股有限公司 | Page-switching method and device |
CN104580348A (en) * | 2013-10-15 | 2015-04-29 | 谷歌公司 | Accessing location-based content |
Family Cites Families (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6484149B1 (en) | 1997-10-10 | 2002-11-19 | Microsoft Corporation | Systems and methods for viewing product information, and methods for generating web pages |
AU6898400A (en) | 1999-08-11 | 2001-03-05 | Flycast Communications Corp. | Easily modifiable macro tag for internet advertising |
WO2001035291A2 (en) | 1999-11-10 | 2001-05-17 | Amazon.Com, Inc. | Method and system for allocating display space |
US20030115074A1 (en) | 2001-12-19 | 2003-06-19 | Freeman Mark Douglas | Tracking system and method |
JP3984086B2 (en) | 2002-03-27 | 2007-09-26 | 株式会社東芝 | Cache server, data transfer device, and program |
US7752072B2 (en) | 2002-07-16 | 2010-07-06 | Google Inc. | Method and system for providing advertising through content specific nodes over the internet |
US7886067B2 (en) * | 2003-08-14 | 2011-02-08 | Rich Hedia Club, LLC | Internet-based system and method for distributing interstitial advertisements |
US10373173B2 (en) * | 2004-06-14 | 2019-08-06 | Facebook, Inc. | Online content delivery based on information from social networks |
US8321269B2 (en) | 2004-10-26 | 2012-11-27 | Validclick, Inc | Method for performing real-time click fraud detection, prevention and reporting for online advertising |
US8134999B2 (en) | 2005-04-05 | 2012-03-13 | Cisco Technology, Inc. | Generic provisioning of voice over internet protocol (VoIP) |
US9092807B1 (en) | 2006-05-05 | 2015-07-28 | Appnexus Yieldex Llc | Network-based systems and methods for defining and managing multi-dimensional, advertising impression inventory |
US8001105B2 (en) | 2006-06-09 | 2011-08-16 | Ebay Inc. | System and method for keyword extraction and contextual advertisement generation |
CN101075908B (en) | 2006-11-08 | 2011-04-20 | 腾讯科技（深圳）有限公司 | Method and system for accounting network click numbers |
US8060601B1 (en) * | 2007-03-07 | 2011-11-15 | Comscore, Inc. | Detecting content and user response to content |
US8145762B2 (en) | 2007-05-22 | 2012-03-27 | Kount Inc. | Collecting information regarding consumer click-through traffic |
US8019700B2 (en) | 2007-10-05 | 2011-09-13 | Google Inc. | Detecting an intrusive landing page |
US8271329B2 (en) | 2007-10-18 | 2012-09-18 | Linkshare Corporation | Methods and systems for tracking electronic commerce transactions |
EP2206285B1 (en) | 2007-10-26 | 2012-03-21 | Research In Motion Limited | Anonymous navigation method, apparatus and system |
US20110238495A1 (en) | 2008-03-24 | 2011-09-29 | Min Soo Kang | Keyword-advertisement method using meta-information related to digital contents and system thereof |
US8180376B1 (en) | 2008-05-01 | 2012-05-15 | Nokia Corporation | Mobile analytics tracking and reporting |
US20110213655A1 (en) | 2009-01-24 | 2011-09-01 | Kontera Technologies, Inc. | Hybrid contextual advertising and related content analysis and display techniques |
US20100324989A1 (en) | 2009-06-23 | 2010-12-23 | Craig Stephen Etchegoyen | System and Method for Monitoring Efficacy of Online Advertising |
WO2011041465A1 (en) | 2009-09-30 | 2011-04-07 | Tracking.Net | Enhanced website tracking system and method |
US20110153411A1 (en) * | 2009-12-23 | 2011-06-23 | Kenshoo Ltd. | Method and system for identification of an online purchase without notification of making the purchase |
EP2531969A4 (en) | 2010-02-01 | 2013-12-04 | Jumptap Inc | Integrated advertising system |
KR101101162B1 (en) * | 2010-03-10 | 2012-01-05 | 김진우 | Apparatus and method of processing the multimedia file in the web page |
US20120173345A1 (en) | 2010-12-30 | 2012-07-05 | Microsoft Corporation | Unified Tracking and Reporting Across Multiple Publishers |
US9282158B2 (en) | 2011-06-06 | 2016-03-08 | Google Inc. | Reducing redirects |
US20130110585A1 (en) | 2011-11-02 | 2013-05-02 | Invisiblehand Software Ltd. | Data Processing |
US20130275547A1 (en) * | 2012-04-16 | 2013-10-17 | Kindsight Inc. | System and method for providing supplemental electronic content to a networked device |
US20150206177A1 (en) | 2013-10-18 | 2015-07-23 | Google Inc. | Using content selection urls |
US20150186913A1 (en) * | 2014-01-01 | 2015-07-02 | Kankado Cellular Solutions Ltd. | Tracker-mediated mobile in-app contentredemption system for app advertisers over the internet |
-
2015
- 2015-12-18 US US14/975,027 patent/US10892968B2/en active Active
-
2016
- 2016-11-15 CN CN201680034584.1A patent/CN108140196B/en active Active
- 2016-11-15 CN CN202111495078.1A patent/CN114625993A/en active Pending
- 2016-11-15 EP EP16805635.6A patent/EP3295414A1/en not_active Withdrawn
- 2016-11-15 WO PCT/US2016/062111 patent/WO2017105730A1/en active Application Filing
-
2020
- 2020-12-10 US US17/118,127 patent/US11477103B2/en active Active
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102866945A (en) * | 2012-07-25 | 2013-01-09 | 百度时代网络技术（北京）有限公司 | Method and device for providing first application test information corresponding to users |
CN103984686A (en) * | 2013-02-07 | 2014-08-13 | 阿里巴巴集团控股有限公司 | Page-switching method and device |
CN104580348A (en) * | 2013-10-15 | 2015-04-29 | 谷歌公司 | Accessing location-based content |
Also Published As
Publication number | Publication date |
---|---|
US20170180229A1 (en) | 2017-06-22 |
US11477103B2 (en) | 2022-10-18 |
US10892968B2 (en) | 2021-01-12 |
US20210099372A1 (en) | 2021-04-01 |
CN108140196A (en) | 2018-06-08 |
EP3295414A1 (en) | 2018-03-21 |
CN114625993A (en) | 2022-06-14 |
WO2017105730A1 (en) | 2017-06-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN108140196B (en) | System and method for reducing latency of content item interactions using client-generated click identifiers | |
US10489395B2 (en) | Methods and systems for providing functional extensions with a landing page of a creative | |
EP2973337B1 (en) | Prioritized and contextual display of aggregated account notifications | |
US20210064206A1 (en) | Systems and methods for dynamically appending supplemental content to an information resource responsive to scroll activity | |
US20230368250A1 (en) | Systems and methods for dynamically inserting content item slots in an information resource | |
CN108463822B (en) | Dynamic rendering interaction statistics for content elements of an information resource using visual styles | |
CN107832409B (en) | Accessing location-based content | |
CN108140195B (en) | System and method for automatically managing placement of content slots in information resources | |
JP6626540B2 (en) | Application install conversion and identification | |
US20210352150A1 (en) | Maintaining session identifiers across multiple webpages for content selection | |
US11354245B2 (en) | Systems and methods for prefetching content items | |
US20160379276A1 (en) | Electronic asset delivery and event tracking system | |
US9083676B2 (en) | Systems and methods for reliably using ping to account for interactions with electronic content | |
US9319451B2 (en) | Systems and methods for selecting an accounting technique for interactions with electronic content | |
US9479615B1 (en) | Systems and methods for providing interstitial content |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
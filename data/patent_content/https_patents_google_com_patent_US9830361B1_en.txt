US9830361B1 - Facilitating content entity annotation while satisfying joint performance conditions - Google Patents
Facilitating content entity annotation while satisfying joint performance conditions Download PDFInfo
- Publication number
- US9830361B1 US9830361B1 US14/096,950 US201314096950A US9830361B1 US 9830361 B1 US9830361 B1 US 9830361B1 US 201314096950 A US201314096950 A US 201314096950A US 9830361 B1 US9830361 B1 US 9830361B1
- Authority
- US
- United States
- Prior art keywords
- content
- initial
- scores
- component
- entities
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G06F17/3053—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/28—Databases characterised by their database models, e.g. relational or object models
- G06F16/284—Relational databases
- G06F16/285—Clustering or classification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G06F17/30598—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/169—Annotation, e.g. comment data or footnotes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/289—Phrasal analysis, e.g. finite state techniques or chunking
- G06F40/295—Named entity recognition
-
- G06F17/241—
-
- G06F17/278—
Definitions
- This disclosure relates to processing that facilitates content annotation while satisfying joint performance conditions.
- a system includes memory storing computer executable components; and a processor configured to execute the computer executable components stored in the memory.
- the computer executable components include: an aggregation component that aggregates signals indicative of initial entities for content and initial scores associated with the initial entities generated by one or more content annotation sources; and a mapping component that maps the initial scores to calibrated scores within a defined range.
- the computer executable components also include a linear aggregation component that: applies selected weights to the calibrated scores, wherein the selected weights are based on joint performance conditions; and combines the weighted, calibrated scores based on a selected linear aggregation model of a plurality of linear aggregation models to generate a final score.
- the computer executable components also include an annotation component that determines whether to annotate the content with at least one of the initial entities based on a comparison of the final score and a defined threshold value.
- a system in another embodiment, includes memory storing computer executable components; and a processor configured to execute the computer executable components stored in the memory.
- the computer executable components include a communication component that: facilitates a display of information indicative of an option to select a linear aggregation model from a plurality of linear aggregation models for generation of a score, the score to be utilized to determine whether to annotate content with a defined entity generated by a content annotation source; and facilitates a display of information indicative of an option to indicate one or more values corresponding to joint performance conditions associated with annotation of the content with the defined entity.
- the computer executable components also include a processing component that: determines the score based on weighing one or more calibrated scores, and combining the weighed calibrated scores based on the linear aggregation model; compares the score to a defined threshold determined based on the one or more values corresponding to the joint performance conditions; and annotates the content with the defined entity based on whether a defined condition with the score and the defined threshold is met.
- a system in another embodiment, includes memory storing computer executable components; and a processor configured to execute the computer executable components stored in the memory.
- the computer executable components include a processing component that identifies a defined entity with which content is annotated.
- the processing component also selects advertisement for association with the content based, at least, on a defined relationship between the defined entity and subject matter of the advertisement.
- the content is annotated with the defined entity based on satisfaction of joint performance conditions upon employing a numerical score associated with the defined entity in a selected linear aggregation model of a plurality of linear aggregation models.
- a method in another embodiment, includes: selecting, by a device including a processor, a linear aggregation model for evaluation of one or more candidate entities generated for content by one or more respective content annotation sources; and generating one or more weights for the linear aggregation model based on joint performance conditions.
- the method also includes applying the one or more weights to the one or more candidate entities, and combining the weighted result to generate a score; and annotating the content with at least one of the one or more candidate entities based on a comparison of the score and a defined threshold value.
- One or more of the embodiments can advantageously provide entity annotations for content that satisfies joint criteria for completeness, coverage and/or quality.
- the one or more embodiments include the features hereinafter fully described and particularly pointed out in the claims.
- the following description and the annexed drawings set forth in this disclosure detail certain illustrative aspects of the one or more embodiments. These aspects are indicative, however, of but a few of the various ways in which the principles of various embodiments can be employed, and the described embodiments are intended to include all such aspects and their equivalents.
- FIG. 1 is an illustration of a block diagram of a non-limiting system that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- FIG. 2 is an illustration of a block diagram of a non-limiting linear aggregation component of the content annotation system of FIG. 1 that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- FIG. 3 is an illustration of a block diagram of a non-limiting weight and threshold generation component of a content annotation system of FIG. 1 that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- FIG. 4 is an illustration of a block diagram of a non-limiting communication system of a content annotation system of FIG. 1 that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- FIGS. 5-9 are illustrations of non-limiting user interfaces for a content annotation system that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- FIGS. 10, 11, 12 and 13 are illustrations of non-limiting flow diagrams of methods that facilitate content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- FIG. 14 is an illustration of a schematic diagram of a non-limiting operating environment for implementing one or more embodiments described in this disclosure.
- FIG. 15 is an illustration of a schematic diagram of a non-limiting computing environment for implementing one or more embodiments described in this disclosure.
- Annotation of content is particularly useful and improves efficiency of use and/or further processing of content.
- An entity for content is information (e.g., label) associated with or descriptive of one or more features of content.
- the features can include the images or subject matter of the content.
- content can be annotated with one or more entities to facilitate use of the content for a number of different tasks including, but not limited to, improved search engine results, relating one person/business entity to another person/business entity and/or targeted advertisements.
- improved search engine results relating one person/business entity to another person/business entity and/or targeted advertisements.
- entities that meet a number of joint performance conditions.
- the entity can be a label descriptive of the content of a video.
- a video about a dog might include an entity such as “dog,” for example.
- there are also requirements such as a requirement to annotate a defined number of videos, for example (e.g., half a billion videos).
- a content annotation system can be designed to maximize the quality of the entities while satisfying coverage and completeness constraints.
- Completeness, coverage and quality can be important metrics in content entity annotation.
- completeness refers to the number (or average number) of entity annotations per particular content (e.g., video).
- the measure of completeness provides an estimate of the level of detail of the content provided from entity annotations. A higher completeness measure refers to a higher number of entity annotations for the content while a lower completeness refers to a lower number of entity annotations for the content.
- coverage refers to a portion, or fraction, of content within a set of content, that have at least one entity annotation.
- coverage can represent the percentage of videos within a set of videos that has at least one entity annotation.
- the term “quality” refers to the numeric centrality of an entity for content. Numeric centrality refers to the level of relatedness that an entity is relative to particular content. For example, an entity of quality less than a defined value can be considered to be off-topic, or unrelated, to the content while an entity of quality greater than or substantially equal to the defined value can be considered to be central or relevant to the content. In the embodiments described herein, an entity that is central to the content has a higher quality than an entity that is relevant to the content.
- One or more embodiments described herein can advantageously select one or more entities for content annotation while satisfying specified quality, coverage and/or completeness constraints.
- FIG. 1 is an illustration of a block diagram of a non-limiting system that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- system 100 includes content 102 , content annotation sources 104 , 106 , 108 and content annotation system 114 .
- Content annotation sources 104 , 106 , 108 can be electrically and/or communicatively coupled to content annotation system 114 to perform one or more functions of system 100 .
- content annotation system 114 can determine whether to annotate content 102 with one or more entities output from content annotation sources 104 , 106 , 108 such that joint quality, coverage and completeness constraints are satisfied.
- content annotation system 114 includes communication system 109 , aggregation component 110 , mapping component 116 (which can include isotonic regression components 118 , 120 . 122 ), linear aggregation component 124 , joint performance conditions component 126 , isotonic regression component 128 , weight and threshold generation component 130 , threshold component 132 and/or entity annotation component 134 .
- one or more of communication system 109 , aggregation component 110 , mapping component 116 , linear aggregation component 124 , joint performance conditions component 126 , isotonic regression component 128 , weight and threshold generation component 130 , threshold component 132 and/or entity annotation component 134 can be electrically and/or communicatively coupled to one another to perform one or more functions of content annotation system 114 .
- Communication system 109 of content annotation system 114 can transmit and/or receive information from/to content annotation system 114 .
- communication system 109 can receive entity and score information from content annotation sources 104 , 106 , 108 .
- communication system 109 can generally transmit and/or receive any number of different types of information, including, but not limited to, one or more entities, one or more corresponding scores for the one or more entities, content (e.g., video, audio), text, joint performance condition values/constraints or the like.
- communication system 109 can display information via a user interface (UI) for configuring content annotation system 114 with joint performance condition information, selecting content, or the like.
- UI user interface
- content annotation sources 104 , 106 , 108 can access or receive content 102 .
- content 102 can be stored at a location remote from content annotation sources 104 , 106 , 108 in some embodiments while being stored at or received by content annotation sources 104 , 106 , 108 in other embodiments.
- Content annotation sources 104 , 106 , 108 can evaluate content 102 and determine one or more entities for content 102 .
- the entities can be central, relevant or off-topic relative to content 102 . Scores can characterize whether the entities are central, relevant or off-topic.
- content annotation sources 104 , 106 , 108 can output to content annotation sources 114 information indicative of one or more entities for content 102 and corresponding initial scores for the one or more entities. For example, for a particular content 102 , content annotation sources 104 , 106 , 108 can output three entities and three respective scores for the entities.
- content annotation source 104 can output a first entity for content 102
- content annotation source 104 can output a second entity for content 102
- content annotation source 106 can output a third entity for content 102
- content annotation sources 104 , 106 , 108 can each output an entity, which can be combined to generate a set of entities.
- Each of the entities output can be candidate entities for annotation of content 102 .
- content annotation sources 104 , 106 , 108 can also output information indicative of a numerical score associated with the particular entity.
- central, relevant and off-topic entities can be mapped to various integer values for processing described herein to maximize quality while satisfying defined coverage and/or completeness criteria.
- Each entity can be rated as “central”, “relevant” or “off-topic”.
- central, relevant and off-topic entities for content can be assigned values 2, 1, and ⁇ 3, respectively, by content annotation sources 104 , 106 , 108 .
- the numerical scores output by content annotation sources 104 , 106 , 108 can have non-negative values.
- a percentage of the score (e.g., 40% of the score) can be obtained and isotonic regression can be performed by one or more of isotonic regression components 118 , 120 , 122 to map the numerical score output from content annotation sources 104 , 106 , 108 to respective values in the range [ 0 , 1 ].
- the percentage of the score employed can vary or change from time to time based on user-specified constraints and/or system defined parameters.
- communication system 109 can output the entities and scores received from content annotation sources to aggregation component 110 .
- Aggregation component 110 can accumulate, sort, categorize and/or rank the various entities and/or scores received from content annotation sources 104 , 106 , 108 . For example, in some embodiments, aggregation component 110 can sort entities according to the numerical value of the scores associated with the entities.
- Mapping component 116 can include one or more isotonic regression components configured to perform isotonic regression on the scores received from content annotation sources 104 , 106 , 108 .
- Isotonic regression components 118 , 120 , 122 can perform isotonic regression and map the initial scores output from content annotation sources 104 , 106 , 108 to a numerical score within a defined range acceptable for subsequent processing by content annotation system 114 .
- whether an entity is considered by content annotation source that generated the entity to be central, relevant or off-topic can be employed to allow mapping component 116 to obtain a score in [0,1] for each initial score output from content annotation sources 104 , 106 , 108 .
- isotonic regression components 118 , 120 , 122 can map each received score to a centrality score that lies in the range [0, 1]. As such, because the mapped, or calibrated, scores are within the range [0, 1], the calibrated scores can be interpreted as probabilities. For example, a calibrated score of 0.4 output from an isotonic regression component can be considered a probability of 40% while a calibrated score of 0.7 can be interpreted as a probability of 70%. In some embodiments, isotonic regression components 118 , 120 , 122 can map the initial scores output from content annotation sources 104 , 106 , 108 to scores in the range [0, inf.].
- Each score (e.g., 0.25, 0.95, 0.5) can be a candidate entity that represents the content. For example, one score can represent “dog,” while another score can represent “cat.”
- isotonic regression components 118 , 120 , 120 can re-scale scores for the three entities as 1, 0.8 and 0, respectively. Moreover, since each entity is positively correlated with the centrality score, higher scores output from content annotation sources 104 , 106 , 108 can be mapped to higher centrality scores.
- Equation 1 Equation 1
- each initial score generated by a content annotation source (e.g., content annotation sources 104 , 106 , 108 ) can be mapped (e.g., by mapping component 116 ) to a centrality score that lies in the range [0,1].
- centrality scores are shown as calibrated scores output from isotonic regression components 118 , 120 , 122 .
- a function f t (s) can be determined that closely approximates the mapped value of the score output from content annotation system, t.
- one or more entities can be aggregated for a particular content annotation system, t.
- the same process can be employed to learn the function f t (s) for every content annotation system, t.
- a centrality score, c can be determined such that c ⁇ [0,1] based on an initial score associated with the entity.
- Each entity from the content annotation system, t can also be accompanied with a score from the respective content annotation system s E [0, ⁇ ].
- the entities are sorted by the value for s i as s i ⁇ s i+1 . Accordingly, the entities can be sorted based on increasing value of s i . For example, aggregation component 110 can sort entities by associated initial score.
- isotonic regression components 118 , 120 , 122 can provide the estimated centrality score, ⁇ i , for every i that minimizes Equation 2 shown below: ⁇ i ( c i ⁇ i ) 2 (Equation 2) such that ⁇ i ⁇ i+1 . Equation 2 can be solved using standard methods of isotonic regression.
- the mapped score in the set [0, 1] from the information generated by content annotation sources 104 , 106 , 108 along with the scores or discrete features are concatenated to form a dense input vector.
- the calibrated centrality scores in [0, 1] output from isotonic regression components 118 , 120 , 122 can be interpreted as a probability that an entity is central given the score from the individual content annotation source.
- Linear aggregation component 124 can weigh and combine the information output from mapping component 116 to generate a final score, and threshold component 132 can compare the final score to a defined threshold value.
- Entity annotation component 134 can determine whether to annotate content 102 with one or more of the entities output from content annotation sources 104 , 106 , 108 based on whether the final score is less than, greater than or equal to (or substantially equal to) the defined threshold value.
- weight and threshold generation component 130 can generate one or more weights and/or the defined threshold based on information generated by joint performance conditions component 126 .
- Joint performance conditions component 126 can generate an equation, or steps to be performed to calculate a value, based on specified quality, coverage and/or completeness conditions and/or assumptions about the content annotation sources 104 , 106 , 108 and/or the independence of content annotation sources 104 , 106 , 108 .
- the weights and/or defined threshold value can be provided to linear aggregation component 124 for training linear aggregation component 124 and/or one or more components of linear aggregation component 124 and/or content annotation system 114 .
- One of a plurality of candidate linear aggregation models can be selected using one or more of the weights that allows the quality, coverage and/or completeness conditions specified to be met.
- weight and threshold generation component 130 can generate a first weight and a second weight.
- the two weights can be received by linear aggregation component 124 and used to weight the calibrated scores output from isotonic regression components 118 , 120 , 122 according to one or more of three different linear aggregation models of linear aggregation component 124 .
- linear aggregation component 124 can select the linear aggregation model, weight and/or threshold that results in the joint performance conditions specified in joint performance conditions component 126 being met.
- the linear aggregation model can be pre-selected and/or statically determined irrespective of the weights and/or threshold generated by weight and threshold generation component 130 .
- the combination can be employed with subsequent entities and scores output from content annotation sources 104 , 106 , 108 .
- one or more of the weights and/or threshold and/or linear model can be generated and/or selected anew with one or more new entities and/or scores output from content annotations sources 104 , 106 , 108 . If/when the joint conditions change, the weight and threshold generation component 130 can generate new weight and threshold information and select a new linear aggregation model to meet the joint conditions.
- Memory 136 can store information transmitted to, received by and/or processed by content annotation system 114 (and/or any components of content annotation system 114 ).
- memory 136 can store information including, but not limited to, one or more entities generated by content annotation sources 104 , 106 , 108 , one or more initial scores associated with the one or more entities, one or more calibrated scores, one or more weights and/or a defined threshold value, linear aggregation model information, isotonic regression information, properties associated with the calibrated scores or the like.
- Processor 138 can perform any number of functions described herein including, but not limited to, performing random initialization or gradient-based initialization of weights, performing linear aggregation operations, aggregating one or more entities and/or scores, performing isotonic regression, training linear aggregation component 124 or the like.
- processor 138 can determine a calibrated score from one or more initial scores, perform linear aggregation, generate a defined threshold value, derive one or more equations (or processes for performing one or more analyses) based on joint performance conditions or the like.
- processor 138 can apply the entity annotation to the content if the final score meets a defined condition relative to the defined threshold value.
- Linear aggregation component 124 will be described in greater detail with reference to FIG. 2 .
- Linear aggregation component 124 can include probability-based aggregation (PBA) component 200 , probability threshold-based aggregation component (PTBA) component 202 , modified probability threshold-based aggregation component (MPTBA) component 204 , weight information component 206 , memory 136 and/or processor 138 .
- PBA probability-based aggregation
- PTBA probability threshold-based aggregation component
- MPTBA modified probability threshold-based aggregation component
- weight information component 206 , memory 136 and/or processor 138
- memory 136 and/or processor 138 can be electrically and/or communicatively coupled to one another to perform one or more functions of linear aggregation component 124 .
- Repetitive description of like elements employed in other embodiments described herein is omitted for sake of brevity.
- linear aggregation component 124 can include structure and/or functionality for implementing one or more different linear aggregation models.
- PBA component 200 , PTBA component 202 and MPTBA component 204 perform one or more operations/acts in accordance with one or more respective linear aggregation models.
- different linear aggregation models of linear aggregation component 124 can be employed for combining calibrated scores output from isotonic regression components 118 , 120 , 122 to determine whether to annotate content 102 with one or more entities from content annotation sources 104 , 106 , 108 .
- PBA component 200 performs linear aggregation of probabilities.
- PBA component 200 includes structure and/or functionality to perform linear aggregation based on considering centrality scores as probabilities.
- calibrated scores from isotonic regression components 118 , 120 , 122 can be interpreted as probabilities. These scores can be weighted and combined by PBA component 200 .
- the numerical scores weighed can be indicative of the probability that an entity, a, is central for a particular content.
- the calibrated centrality score from the content annotation source, t ⁇ C can be denoted as f t a (s t ).
- the Boolean variable associated with the discrete signal t ⁇ W can be denoted as b r a .
- the rule identified by Equation 3 below can be employed to determine whether an entity, a, will be associated with particular content (e.g., content 102 ) (or not associated with the particular content).
- weight and threshold generation component 130 can generate the weights as described in greater detail with reference to FIG. 3 .
- Weights, ⁇ t can be applied to the initial scores from a content annotation system, t, (or to the calibrated scores), where C is the entire set of content annotation sources and I is the summation index.
- a comparison to a defined threshold value, ⁇ can be employed to determine whether to select one or more of the entities for annotation.
- weighted and combined scores result in a final score. If the final score is within an acceptable range such that the final score is not too high or too low, the entity is selected for annotation of the content.
- the acceptable range is set such that the defined threshold value is not too high or too low so as to obtain satisfactory coverage and/or completeness while maximizing quality.
- the threshold, ⁇ can be chosen to maximize the number of entities that are central while also reducing the number of entities that are off-topic.
- Equation 3 if Equation 3 is true, and the weighted scores are therefore greater than or equal to the threshold, then one or more of the entities is associated with the particular content. Accordingly, the entities that pass the threshold of the linear aggregation component (e.g., linear aggregation component 124 ) can be used to annotate the content. If Equation 3 is not true, and the weighted scores are therefore less than the threshold, then the one or more entities is not associated with the particular content.
- the linear aggregation component e.g., linear aggregation component 124
- PTBA component 202 performs linear aggregation based on thresholding the product of the log of the probabilities (e.g., initial scores or calibrated scores) generated for the one or more entities. For example, PTBA component 202 can interpret the centrality scores generated from the isotonic regression component as probabilities and threshold the product of the probabilities.
- s t ) represents the probability that an entity, a, is central given the score, s t , from content annotation source, t.
- the score s t is the raw score and P t a (c
- Equation 4 is as follows: P a ( c
- ) P a ( s 1:
- Equation 4 can be decomposed as shown in Equation 5 below: P a ( c
- ) P ( c ) ⁇ t ⁇ c ⁇ w P a t ( c
- Equation 6 The rule identified by Equation 6 below can be employed to determine whether particular content will be annotated with entity, a.
- an entity, a is associated with particular content if the entity is considered to be central with a confidence probability of at least q. ⁇ t ⁇ C ⁇ w log( P a t ( c
- s t )) ⁇ (Equation 6) where ⁇ is as described in Equation 7 below: ⁇ log q +(
- Equation 6 if Equation 6 is true, and the weighted scores are therefore greater than or equal to the threshold, then the content is annotated with entity, a. If Equation 6 is not true, and the weighted scores are therefore less than the threshold, then the content is not annotated with entity, a.
- MPTBA component 204 performs linear aggregation based on thresholding the product of the log of the probabilities (e.g., initial scores or calibrated scores) generated for the one or more entities (while assuming weak dependence between the content annotation sources). While PTBA component 204 assumes the content annotation sources are independent, MPTBA component 204 assumes a dependence (albeit a weak dependence) between content annotations sources.
- the probabilities e.g., initial scores or calibrated scores
- A can be a non-unit weight.
- the non-unit weight, ⁇ t can be applied to the log-probabilities to capture weak dependence between the content annotation sources.
- Equation 8 The modified rule for the second embodiment of the linear aggregation component shown in Equation 6 above is then Equation 8 shown below: ⁇ t ⁇ C ⁇ w ⁇ t log( P a t ( c
- Equation 8 If Equation 8 is true, and the weighted scores are therefore greater than or equal to the threshold, then the content is annotated with the entity. If Equation 8 is not true, and the weighted scores are therefore less than the threshold, then the content is not annotated with entity, a.
- x a can be employed to denote the union of the set of mapped centrality scores from various continuous content annotation sources and the boolean variables from the discrete content annotation sources.
- s t ), calibrated scores f t a (s t ) can be employed as a proxy.
- the variable A can denote the corresponding vector of ⁇ t used to determine the weight given to each content annotation source, t, by linear aggregation component 124 (or PBA component 200 , PTBA component 202 and/or MPTBA component 204 ).
- A can be the set of ⁇ t from the linear aggregation model. The A are then provided in the completeness, coverage and quality equations.
- Weight information component 206 can include weights and/or information indicative of weights for use by one or more of PBA component 200 , PTBA component 202 and/or MPTBA component 204 . Weights and/or information indicative of weights can be employed by PBA component 200 , PTBA component 202 and/or MPTBA component 204 to weigh the various calibrated scores associated with the entities. The one or more weights and/or a defined threshold value can be calculated to satisfy quality, coverage and/or completeness constraints.
- joint performance conditions component 126 of FIG. 1 information can be determined for computing quality, coverage and/or completeness equations in various embodiments.
- the problem of finding A and T is common for linear aggregation models associated with PBA component 200 and/or MPTBA component 204 , and the solution can be addressed as follows by joint performance conditions component 126 .
- the quality, or numeric centrality score can be maximized for specified completeness and coverage thresholds.
- optimization of quality, or numeric centrality can be provided given that an entity annotation meets or exceeds a fixed threshold of completeness and a fixed threshold of coverage.
- Optimization of quality, or numeric centrality, with joint optimization of completeness and coverage is advantageous compared to optimization of completeness alone, for example, because if only completeness optimization was performed, a single piece of content (e.g., single video) may receive numerous annotations (and most videos would not receive any annotations). Accordingly, it is desirable to jointly optimize coverage and completeness while optimizing quality, or numeric centrality.
- Joint performance conditions component 126 assumes an array of N annotations, each associated with a dense D-dimensional vector of mapped centrality scores from various classes denoted as x a ⁇ R D . Accordingly, x a can be a dense D-dimensional vector whose values can be anywhere between ⁇ and + ⁇ . In the embodiment described, D can be the number of input fusion signals for a particular content annotation pair.
- Each entity, a can correspond to a pair of identifiers, 1 a and id a .
- Each entity, a can also have an accompanying centrality score (e.g., quality score), s a .
- centrality score e.g., quality score
- Equation 11 Equation 11
- Equations 12, 13 and 14 Given a D-dimensional vector weight vector, ⁇ , and a threshold, ⁇ , completeness, coverage and quality/numeric centrality can be defined as shown in Equations 12, 13 and 14, respectively:
- Equation 15 The problem of maximizing quality/numeric centrality given a minimum level of completeness and coverage can be solved using the following Equation 15 below: argmax ⁇ , ⁇ (numeric centrality( ⁇ , ⁇ ) such that completeness( ⁇ , ⁇ ) ⁇ C min and coverage( ⁇ , ⁇ ) ⁇ G min ) (Equation 15) where C min and G min are the specified minimum desired levels of completeness and coverage. Equation 15 provides a solution to the problem of finding ⁇ and ⁇ for PBA component 200 and/or MPTBA component 204 .
- Joint performance conditions component 126 can store one or more information, operations/acts or processes for computing Equations 12, 13 and/or 14.
- Completeness can be viewed as an integer constraint and the coverage as a set cover constraint. If the constraint was on completeness alone, Equation 12 could be solved using integer programming. Integer programming employs mathematical optimization or feasibility in which one or more of the variables are restricted to be integers. However, the constraint on the coverage (in addition to completeness) makes the problem more complex. Therefore, the power of computing can be employed to solve the optimization.
- FIG. 3 shown is an illustration of a block diagram of a non-limiting weight and threshold generation component of a content annotation system of FIG. 1 that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- Weight and threshold generation component 130 can include random initialization-based component 300 , gradient update-based component 302 , support vector machine-based component 304 , threshold generation component 306 , memory 136 and/or processor 138 .
- random initialization-based component 300 , gradient update-based component 302 , support vector machine-based component 304 , threshold generation component 306 , memory 136 and/or processor 138 can be electrically and/or communicatively coupled to one another to perform one or more functions of weight and threshold generation component 130 . Repetitive description of like elements employed in other embodiments described herein is omitted for sake of brevity.
- weight and threshold generation component 130 can determine one or more linear aggregation model weights, ⁇ t , and/or a threshold value to employ with PBA component 200 , PTBA component 202 and/or MPTBA component 204 of linear aggregation component 124 to meet the joint quality, completeness and coverage constraints.
- the weights and/or threshold information can be employed by linear aggregation component 124 in one or more of PBA component 200 , PTBA component 202 and/or MPTBA component 204 to determine which model outputs the best joint performance and such model can then be employed in various embodiments of determining whether the current and/or future entities are associated with various content.
- weight and threshold generation component 130 can determine the weights by performing a heuristic search. Different methods can be employed by random initialization-based component 300 , gradient update-based component 302 and/or support vector machine-based component 304 .
- random initialization-based component 300 can perform the following operations to generate one or more weights for use by linear aggregation component 124 . For all t, initialize values for linear aggregation model weights, ⁇ t , randomly within the range of values [0,1]. Random initialization-based component 300 can then set a step size value to be equal to (or substantially equal to) a value for s max . While the step size is greater than or equal to s min , for each t, random initialization-based component 300 can iteratively adjust the value for each linear aggregation model weights, ⁇ t , from ⁇ 1 to 1 in steps of s.
- random initialization-based component 300 can determine a value for a threshold, ⁇ , in O(N) such that the number of entities meeting or exceeding the coverage and completeness thresholds satisfies the minimum requirements of completeness and coverage. For the current setting of values for the weight vector and threshold, ⁇ , ⁇ , random initialization-based component 300 can determine the required quality.
- random initialization-based component 300 can select the ⁇ t that yields the highest quality. In some embodiments, selecting the ⁇ t can result in optimizing an estimate ⁇ circumflex over ( ⁇ ) ⁇ t in O(N/s).
- Random initialization-based component 300 can then optimize an estimate ⁇ circumflex over ( ⁇ ) ⁇ t in O(N/s) based on selection of the ⁇ t that yields the highest quality, and replace the older value of ⁇ t with ⁇ circumflex over ( ⁇ ) ⁇ t .
- random initialization-based component 300 can reduce the step size by half of the current step size value while the step size is greater than or equal to s min .
- Random initialization-based component 300 can perform numerous random initializations of, and corresponding processing of, ⁇ t , as described above. For example, random initializations can be performed substantially in parallel employing one or more devices using flume.
- linear aggregation component 124 can receive the generated weights and select a linear aggregation model that, in conjunction with the weights, maximizes accuracy on the data of linear aggregation component 124 .
- the data of linear aggregation component 124 is training data.
- the entities and/or calibrated scores are actual data output from content annotation sources for content to be annotated.
- the entities and/or calibrated scores are training data used to train the linear aggregation component 124 such that quality, coverage and completeness requirements are satisfied for entities and/or calibrated scores received by linear aggregation component 124 in the future.
- Gradient update-based component 302 is another component of weight and threshold generation component 130 that can be employed to generate ⁇ t while satisfying minimum coverage and completeness constraints. As with the random initialization-based component 300 , gradient update-based component 302 can, for all t, initialize values for linear aggregation model weights, ⁇ t , randomly within the range of values [0,1].
- Gradient update-based component 302 can increase or decrease a step size value and/or a learning rate to increase the likelihood of an improvement in objective function.
- a resilient backpropagation (RPROP) method is employed to update the weights of the linear aggregation model.
- RPROP considers only the sign (as opposed to the magnitude) of a partial derivative over all patterns, and acts independently on each linear aggregation model weight.
- the updated value for that weight is multiplied by a factor ⁇ ⁇ , where n ⁇ ⁇ 1.
- the updated valued for the weight is multiplied by a factor of ⁇ + , where ⁇ + >1.
- the updated values can be calculated for each weight in the above manner, and each weight can be changed by its own update value, in the opposite direction of that weight's partial derivative, so as to minimize the total error function.
- the value of ⁇ + can be empirically set to 1.2 and the value of ⁇ ⁇ can be set to 0.5.
- gradient update-based component 302 can compute the approximate gradient, g (w) from the difference in the objective function as shown in Equation 16 below:
- gradient update-based component 302 can employ a gradient-based approach to facilitate solving for ⁇ t while satisfying minimum coverage and completeness requirements.
- gradient update-based component 302 can, for all t, initialize values for linear aggregation model weights, ⁇ t , randomly within the range of values [0,1].
- gradient update-based component 302 can perform gradient-based updating to the linear aggregation model weights, ⁇ t , until convergence.
- gradient update-based component 302 can employ operations/acts based on or in accordance with adaptive gradient algorithm (e.g., ADAGRAD).
- ADAGRAD is an adaptive gradient approach that can be employed to determine the weights of the linear aggregation in some embodiments.
- the adaptive gradient approach computes the next set of updated weights by solving the minimization problem in Equation 17 (shown below) given the learning rates and the various regularization parameters.
- Equation 17 can be solved exactly and has a closed form.
- a weight value update similar to that which would be employed for ADAGRAD can be as follows in Equation 17 below: w t+1 min w [ ⁇ ( ⁇ g ( w t ) T w+ ⁇ 1 ⁇ w ⁇ 1 + ⁇ w ⁇ 2 2 ) (Equation 17)
- random initialization of values for linear aggregation model weights, ⁇ t as described with reference to random initialization-based component 300 and/or gradient update-based component 302 can be performed substantially in parallel employing one or more devices using flume. Corresponding processing of ⁇ t can be performed.
- weight and threshold generation component 130 can include support vector machine (SVM)-based component 304 to facilitate solving for ⁇ t while satisfying minimum coverage and completeness requirements.
- SVM-based component 304 can perform SVM-based initialization of linear aggregation model weights, ⁇ t .
- SVM-based component 304 can perform parameter sweeping over L2 weight and negative-class weight of lib-linear. For graded settings where ⁇ (v,e) takes multiple values, ⁇ t can be varied.
- the lib-linear weight, ⁇ t can be set to Equation 18:
- the threshold can be specified to be a value such that the defined/requested coverage and completeness constraints are satisfied.
- the threshold can be adjusted based on the constraints. For example, if higher coverage is desired, the threshold can be specified to be a lower value. If less coverage is desired, the threshold can be specified to be a higher value.
- linear aggregation component 124 learning can be facilitated in a manner that combines the estimates of centrality scores for content and are able to improve quality.
- the weights, ⁇ t , obtained at linear aggregation component 124 can be input into Equations 12, 13 and 14 stored and/or provided by joint performance conditions component 126 .
- Communication system 109 can include transceiver component 402 , user interface component 404 , memory 136 and/or processor 138 .
- transceiver component 402 can be electrically and/or communicatively coupled to one another to perform one or more functions of communication system 109 .
- Repetitive description of like elements employed in other embodiments described herein is omitted for sake of brevity.
- Transceiver component 402 can be configured to transmit and/or receive various different types of information from/to content annotation system 114 .
- the information can be any number of different types of media (e.g., video, audio, text, or a combination of the video, audio and/or text), data, graphs or the like.
- the information can include one or more entities, one or more initial scores or the like.
- transceiver component 402 can receive information indicative of content for which annotation is to be performed, information indicative of one or more linear aggregation models that can be selected for use in determining an entity with which the content is to be annotated, information indicative of one or more values for completeness, coverage and/or quality requirements to be met with the entity selected for annotation of the content or the like. In some embodiments, transceiver component 402 can output annotated content, a selected entity with which content will be annotated or the like.
- User interface component 404 can generate one or more UIs and/or facilitate processing of information received via the one or more UIs. In various embodiments, user interface component 404 can generate a UI that displays information that can be selected to perform content annotation. In some embodiments, user interface component 404 can display any embodiment of user interface 500 described and/or shown with reference to FIGS. 5-9 .
- FIGS. 5-9 are illustrations of non-limiting user interfaces for a content annotation system that facilitates content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- the content annotation system for which user interface 500 will be shown and described can include structure and/or functionality of one or more components of content annotation system 114 in various embodiments.
- User interface 500 can be generated by user interface component 404 of FIG. 4 . Repetitive description of like elements employed in other embodiments described herein is omitted for sake of brevity.
- UI 500 can include a first display region 501 that can display information indicative of content 102 , 502 , 504 .
- Content 102 , 502 , 504 can be candidate content that content annotation system 114 can determine whether to annotate with one or more entities output from one or more content annotation sources, for example.
- content 102 , 502 , 504 can be or include video content (e.g., sports video, weather video, news video), social media content (e.g., information about friends or other connections in FACEBOOK® system) and/or website content (e.g., advertisement information, search information, search result information).
- video content e.g., sports video, weather video, news video
- social media content e.g., information about friends or other connections in FACEBOOK® system
- website content e.g., advertisement information, search information, search result information
- One or more of content 102 , 502 , 504 can be selected by user activation of a portion of UI 500 corresponding to content 102 , 502 , 504 .
- one or more portions of UI 500 is a touch screen.
- one or more portions of UI 500 is configured to receive information entered via textbox or by selection via computer mouse. As such, any number of different approaches can be employed to select or provide information for any aspect of information provided via UI 500 .
- User interface 500 can also include a second display region 506 that displays one or more numerical scores associated with one or more respective entities for selected content.
- a first content annotation source can provide a first entity describing content 102 and an initial score. The initial score can be mapped to 0.25 by an isotonic regression component.
- a second content annotation source can provide a second entity describing content 102 and an initial score that can be mapped to 0.95.
- a third content annotation source can provide a third entity and an initial score that can be mapped to 0.5.
- User interface 500 can also include a third display region 508 that displays information associated with joint performance requirements for entity annotation for content.
- a first subregion 510 of UI 500 can be provided for receiving information indicative of a desired coverage threshold
- a second subregion 512 of UI 500 can be provided for receiving information indicative of a desired quality threshold
- a third subregion 514 of UI 500 can be provided for receiving information indicative of a desired completeness threshold.
- coverage, quality and/or completeness thresholds can be specified by via UI 500 .
- coverage, quality and/or completeness can be accessed by content annotation system 114 (e.g., over a network from a location remote from content annotation system 114 ), stored at content annotation system 114 or the like.
- User interface 500 can also include a fourth display region 516 that displays information associated with linear aggregation models that can be selected for use by the content annotation system.
- a first subregion 518 of UI 500 can be provided for selection of PBA model 518 (e.g., performed by PBA component 200 )
- second subregion 520 of UI 500 can be provided for selection of PTBA model 520 (e.g., performed by PTBA component 202 )
- third subregion 522 of UI 500 can be provided for selection of MPTBA model 522 (e.g., performed by MPTBA component 204 ).
- UI 500 can also include a fifth display region 524 including information that can be selected to perform one or more different acts/processes including, but not limited to, generating weight information for use by the linear aggregation model, generating a final score (which is then employed to determine whether a final entity annotation will be applied to the content), generating a final entity if the entity annotation will be applied to the content and/or annotating the content with the entity.
- a fifth display region 524 including information that can be selected to perform one or more different acts/processes including, but not limited to, generating weight information for use by the linear aggregation model, generating a final score (which is then employed to determine whether a final entity annotation will be applied to the content), generating a final entity if the entity annotation will be applied to the content and/or annotating the content with the entity.
- a portion of UI 500 can be activated to generate weight information (e.g., weights 600 ).
- the weights can be used by the linear aggregation model towards the goal of satisfying the joint performance conditions.
- a threshold can also be generated.
- the weights generated are 0.40, 0.45 and 0.15.
- the weights can be the values for one or more, ⁇ t .
- a portion of UI 500 can be activated to generate a final score by applying the weights generated by the content annotation system to the calibrated entity scores output from one or more isotonic regression component and combining the weighted scores. If the final score (e.g., 0.7625) is greater than the threshold (which is calculated to satisfy joint quality, coverage and/or completeness requirements), the entity corresponding to the final score is applied to the content. Otherwise, the entity is not applied to the content.
- the threshold which is calculated to satisfy joint quality, coverage and/or completeness requirements
- a portion of UI 500 can be activated to determine or select one or more entities associated with the final score, or final entities. For example, a final score of 0.7625 can be associated with the entity “animals.”
- a portion of UI 500 can be activated to annotate selected content 102 with the final entity if the final score associated with the final entity is great than or substantially equal to the threshold.
- content 102 is annotated with entity “animals.”
- one or more of the embodiments can be employed to annotate content uploaded to the content annotation system and/or accessed by the content annotations system.
- Advertisement targeting can be performed for annotated content based on the entities with which the content is annotated.
- advertisement can be identified and/or selected for playing while the entity annotated content is playing based on similarity between the entity with which the content is annotated and the subject matter of the advertisement.
- search engine results can be improved utilizing the entity annotation.
- embodiments described herein can be employed to determine likelihood that different information has a defined level of relatedness. For example, when a first person sets a second person as a friend status (or any other type of relationship status), there are different ways to figure out the relationship between people. For example, same interest, same geographical region and/or friend of a friend. Different content annotation sources can generate different scores based on whether the annotation source evaluates interest, geographical region and/or whether the second person is a friend of a friend of the first person. The scores can be calibrated and weighed to generate a final score. The final score can be compared to a threshold to determine whether the second person is likely to have a desire to be friends (or have some other relationship) with the first person.
- UI 500 is described as a UI for a content annotation system, in various embodiments, there can be desktop, laptop, tablet, and mobile device versions of user interface 500 to account for and optimize utilization of the screen for these different devices.
- FIGS. 10, 11, 12 and 13 are illustrations of non-limiting flow diagrams of methods that facilitate content entity annotation while satisfying joint performance conditions in accordance with one or more embodiments described herein.
- One or more of methods 1000 , 1100 , 1200 , 1300 can be utilized in various systems including, but not limited to, network systems, computer network systems, communication systems, router systems, server systems, high availability server systems (e.g., Telecom server systems), web server systems, file server systems, content server systems, disk array systems, powered insertion board systems and/or cloud-based systems.
- method 1000 can include aggregating signals indicative of initial entities for content and initial scores associated with the initial entities generated by one or more content annotation sources (e.g., using aggregation component 110 ).
- method 1000 can include mapping the initial scores to calibrated scores within a defined range (e.g., using mapping component 116 ).
- method 1000 can include applying weights to the calibrated scores, wherein the selected weights are selected based on satisfaction of joint performance conditions (e.g., using linear aggregation component 124 ).
- method 1000 can include combining the calibrated scores based on a selected linear aggregation model of a plurality of linear aggregation models to generate a final score (e.g., using linear aggregation component 124 ).
- method 1000 can include determining whether to annotate the content with at least one of the one or more entities based on a comparison of the final score and a defined threshold value (e.g., entity annotation component 134 ).
- a defined threshold value e.g., entity annotation component 134
- method 1100 can include facilitating a display of information indicative of an option to select a linear aggregation model from a plurality of linear aggregation models for generation of a score, the score to be utilized to determine whether to annotate content with a defined entity generated by a content annotation source (e.g., using user interface component 404 and/or user interface 500 ).
- method 1100 can include facilitating a display of information indicative of an option to indicate one or more values corresponding to joint performance conditions associated with annotation of the content with the defined entity (e.g., using user interface component 404 and/or user interface 500 ).
- method 1100 can include determining the score based on weighing one or more calibrated scores, and combining the weighed calibrated scores based on the linear aggregation model (e.g., using linear aggregation component 124 ).
- method 1100 can include comparing the score to a defined threshold determined based on the one or more values corresponding to the joint performance conditions (e.g., using threshold component 132 ).
- method 1100 can include annotating the content with the defined entity based on whether a defined condition with the score and the defined threshold is met (e.g., using entity annotation component 134 ).
- method 1200 can include selecting, by a device comprising a processor, a linear aggregation model for evaluation of one or more candidate entities generated for content by one or more respective content annotation sources (e.g., using linear aggregation component 124 ).
- method 1200 can include generating one or more weights for the linear aggregation model based on joint performance conditions (e.g., using weight and threshold generation component 130 ).
- method 1200 can include applying the one or more weights to the one or more candidate entities, and combining the weighted result to generate a score (e.g., using linear aggregation component 124 ).
- method 1200 can include annotating the content with at least one of the one or more candidate entities based on a comparison of the score and a defined threshold value (e.g., using entity annotation component 134 ).
- method 1300 can include identifying a defined entity with which content is annotated (e.g., using processor 138 ).
- a component other than content annotation system 114 can be employed.
- method 1300 can include selecting advertisement for association with the content based, at least, on a defined relationship between the defined entity and subject matter of the advertisement, wherein the content is annotated with the defined entity based on satisfaction of joint performance conditions upon employing a numerical score associated with the defined entity in a selected linear aggregation model of a plurality of linear aggregation models (e.g., using processor 138 ).
- a component other than content annotation system 114 can be employed.
- FIG. 14 is an illustration of a schematic diagram of a non-limiting operating environment for implementing one or more embodiments described in this disclosure.
- the systems and processes described below can be embodied within hardware, such as a single integrated circuit (IC) chip, multiple ICs, an application specific integrated circuit (ASIC), or the like. Further, the order in which some or all of the process blocks appear in each process should not be deemed limiting. Rather, it should be understood that some of the process blocks can be executed in a variety of orders, not all of which may be explicitly illustrated in this disclosure.
- a suitable environment 1400 for implementing various embodiments described herein is or can include a computer 1402 .
- the computer 1402 includes a processing unit 1404 , a system memory 1406 , a codec 1405 , and a system bus 1408 .
- the system bus 1408 couples system components including, but not limited to, the system memory 1406 to the processing unit 1404 .
- the processing unit 1404 can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit 1404 .
- the system bus 1408 can be any of several types of bus structure(s) including the memory bus or memory controller, a peripheral bus or external bus, and/or a local bus using any variety of available bus architectures including, but not limited to, Industrial Standard Architecture (ISA), Micro-Channel Architecture (MSA), Extended ISA (EISA), Intelligent Drive Electronics (IDE), VESA Local Bus (VLB), Peripheral Component Interconnect (PCI), Card Bus, Universal Serial Bus (USB), Advanced Graphics Port (AGP), Personal Computer Memory Card International Association bus (PCMCIA), Firewire (IEEE 1394), and Small Computer Systems Interface (SCSI).
- ISA Industrial Standard Architecture
- MSA Micro-Channel Architecture
- EISA Extended ISA
- IDE Intelligent Drive Electronics
- VLB VESA Local Bus
- PCI Peripheral Component Interconnect
- Card Bus Universal Serial Bus
- USB Universal Serial Bus
- AGP Advanced Graphics Port
- PCMCIA Personal Computer Memory Card International Association bus
- Firewire IEEE 1394
- SCSI Small Computer Systems Interface
- the system memory 1406 includes volatile memory 1410 and non-volatile memory 1412 .
- the basic input/output system (BIOS) containing the basic routines to transfer information between elements within the computer 1402 , such as during start-up, is stored in non-volatile memory 1412 .
- codec 1405 may include at least one of an encoder or decoder, wherein the at least one of an encoder or decoder may consist of hardware, a combination of hardware and software, or software. Although, codec 1405 is depicted as a separate component, codec 1405 may be contained within non-volatile memory 1412 .
- non-volatile memory 1412 can include read only memory (ROM), programmable ROM (PROM), electrically programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), or flash memory.
- Volatile memory 1410 includes random access memory (RAM), which acts as external cache memory. According to present aspects, the volatile memory may store the write operation retry logic (not shown in FIG. 14 ) and the like.
- RAM is available in many forms such as static RAM (SRAM), dynamic RAM (DRAM), synchronous DRAM (SDRAM), double data rate SDRAM (DDR SDRAM), and enhanced SDRAM (ESDRAM.
- Disk storage 1414 includes, but is not limited to, devices like a magnetic disk drive, solid state disk (SSD) floppy disk drive, tape drive, Jaz drive, Zip drive, LS-70 drive, flash memory card, or memory stick.
- disk storage 1414 can include storage medium separately or in combination with other storage medium including, but not limited to, an optical disk drive such as a compact disk ROM device (CD-ROM), CD recordable drive (CD-R Drive), CD rewritable drive (CD-RW Drive) or a digital versatile disk ROM drive (DVD-ROM).
- CD-ROM compact disk ROM
- CD-R Drive CD recordable drive
- CD-RW Drive CD rewritable drive
- DVD-ROM digital versatile disk ROM drive
- a removable or non-removable interface is typically used, such as interface 1416 .
- FIG. 14 describes software that acts as an intermediary between users and the basic computer resources described in the suitable operating environment 1400 .
- Such software includes an operating system 1418 .
- Operating system 1418 which can be stored on disk storage 1414 , acts to control and allocate resources of the computer 1402 .
- Applications 1420 take advantage of the management of resources by operating system 1418 through program modules 1424 , and program data 1426 , such as the boot/shutdown transaction table and the like, stored either in system memory 1406 or on disk storage 1414 . It is to be appreciated that the claimed subject matter can be implemented with various operating systems or combinations of operating systems.
- Input devices 1428 include, but are not limited to, a pointing device such as a mouse, trackball, stylus, touch pad, keyboard, microphone, joystick, game pad, satellite dish, scanner, TV tuner card, digital camera, digital video camera, web camera, and the like.
- These and other input devices connect to the processing unit 1404 through the system bus 1408 via interface port(s) 1430 .
- Interface port(s) 1430 include, for example, a serial port, a parallel port, a game port, and a universal serial bus (USB).
- Output device(s) 1436 use some of the same type of ports as input device(s).
- a USB port may be used to provide input to computer 1402 , and to output information from computer 1402 to an output device 1436 .
- Output adapter 1434 is provided to illustrate that there are some output devices 1436 like monitors, speakers, and printers, among other output devices 1436 , which require special adapters.
- the output adapters 1434 include, by way of illustration and not limitation, video and sound cards that provide a means of connection between the output device 1436 and the system bus 1408 . It should be noted that other devices and/or systems of devices provide both input and output capabilities such as remote computer(s) 1438 .
- Computer 1402 can operate in a networked environment using logical connections to one or more remote computers, such as remote computer(s) 1438 .
- the remote computer(s) 1438 can be a personal computer, a server, a router, a network PC, a workstation, a microprocessor based appliance, a peer device, a smart phone, a tablet, or other network node, and typically includes many of the elements described relative to computer 1402 .
- only a memory storage device 1440 is illustrated with remote computer(s) 1438 .
- Remote computer(s) 1438 is logically connected to computer 1402 through a network interface 1442 and then connected via communication connection(s) 1444 .
- Network interface 1442 encompasses wire and/or wireless communication networks such as local-area networks (LAN) and wide-area networks (WAN) and cellular networks.
- LAN technologies include Fiber Distributed Data Interface (FDDI), Copper Distributed Data Interface (CDDI), Ethernet, Token Ring and the like.
- WAN technologies include, but are not limited to, point-to-point links, circuit switching networks like Integrated Services Digital Networks (ISDN) and variations thereon, packet switching networks, and Digital Subscriber Lines (DSL).
- ISDN Integrated Services Digital Networks
- DSL Digital Subscriber Lines
- Communication connection(s) 1444 refers to the hardware/software employed to connect the network interface 1442 to the bus 1408 . While communication connection 1444 is shown for illustrative clarity inside computer 1402 , it can also be external to computer 1402 .
- the hardware/software necessary for connection to the network interface 1442 includes, for exemplary purposes only, internal and external technologies such as, modems including regular telephone grade modems, cable modems and DSL modems, ISDN adapters, and wired and wireless Ethernet cards, hubs, and routers.
- the system 1500 includes one or more client(s) 1502 (e.g., laptops, smart phones, PDAs, media players, computers, portable electronic devices, tablets, and the like).
- the client(s) 1502 can be hardware and/or software (e.g., threads, processes, computing devices).
- the system 1500 also includes one or more server(s) 1504 .
- the server(s) 1504 can also be hardware or hardware in combination with software (e.g., threads, processes, computing devices).
- the servers 1504 can house threads to perform transformations by employing aspects of this disclosure, for example.
- One possible communication between a client 1502 and a server 1504 can be in the form of a data packet transmitted between two or more computer processes wherein the data packet may include video data.
- the data packet can include a metadata, e.g., associated contextual information, for example.
- the system 1500 includes a communication framework 1508 (e.g., a global communication network such as the Internet, or mobile network(s)) that can be employed to facilitate communications between the client(s) 1502 and the server(s) 1504 .
- a communication framework 1508 e.g., a global communication network such as the Internet, or mobile network(s)
- the client(s) 1502 include or are operatively connected to one or more client data store(s) 1510 that can be employed to store information local to the client(s) 1502 (e.g., associated contextual information).
- the server(s) 1504 are operatively include or are operatively connected to one or more server data store(s) 1510 that can be employed to store information local to the servers 1504 .
- a client 1502 can transfer an encoded file, in accordance with the disclosed subject matter, to server 1504 .
- Server 1504 can store the file, decode the file, or transmit the file to another client 1502 .
- a client 1502 can also transfer uncompressed file to a server 1504 and server 1504 can compress the file in accordance with the disclosed subject matter.
- server 1504 can encode video information and transmit the information via communication framework 1508 to one or more clients 1502 .
- the illustrated aspects of the disclosure may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network.
- program modules can be located in both local and remote memory storage devices.
- various components described in this description can include electrical circuit(s) that can include components and circuitry elements of suitable value in order to implement the one or more of the embodiments described herein.
- many of the various components can be implemented on one or more IC chips.
- a set of components can be implemented in a single IC chip.
- one or more of respective components are fabricated or implemented on separate IC chips.
- a component may be, but is not limited to being, a process running on a processor (e.g., digital signal processor), a processor, an object, an executable, a thread of execution, a program, and/or a computer.
- a processor e.g., digital signal processor
- an application running on a controller and the controller can be a component.
- One or more components may reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers.
- a “device” can come in the form of specially designed hardware; generalized hardware made specialized by the execution of software thereon that enables the hardware to perform specific function; software stored on a computer readable storage medium; software transmitted on a computer readable transmission medium; or a combination thereof.
- example or “exemplary” are used in this disclosure to mean serving as an example, instance, or illustration. Any aspect or design described in this disclosure as “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X employs A or B” is intended to mean any of the natural inclusive permutations.
- Computer-readable storage media can be any available storage media that can be accessed by the computer, is typically of a non-transitory nature, and can include both volatile and nonvolatile media, removable and non-removable media.
- Computer-readable storage media can be implemented in connection with any method or technology for storage of information such as computer-readable instructions, program modules, structured data, or unstructured data.
- Computer-readable storage media can include, but are not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or other tangible and/or non-transitory media which can be used to store desired information.
- Computer-readable storage media can be accessed by one or more local or remote computing devices, e.g., via access requests, queries or other data retrieval protocols, for a variety of operations with respect to the information stored by the medium.
- communications media typically embody computer-readable instructions, data structures, program modules or other structured or unstructured data in a data signal that can be transitory such as a modulated data signal, e.g., a carrier wave or other transport mechanism, and includes any information delivery or transport media.
- modulated data signal or signals refers to a signal that has one or more of its characteristics set or changed in such a manner as to encode information in one or more signals.
- communication media include wired media, such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared and other wireless media.
- RF radio frequency
Abstract
Description
f t : R→[0,1] and s′≧s
Σi(c i −ĉ i)2 (Equation 2)
such that ĉi≦ĉi+1.
I(ΣtεCλt f t a(s t)+ΣtεWλt b t a≧τ) (Equation 3)
where λt are the weights employed by linear aggregation component 124 (or the linear aggregation model used by linear aggregation component 124). In some embodiments, weight and
P a(c|s 1:|C|+|W|)=P a(s 1:|C|+|W| |c)P(c)/P a(s 1:|C|+|W|) (Equation 4)
P a(c|s 1:|C|+|W|)=P(c)Πtεc∩w P a t(c|s t)/P(c) (Equation 5)
Σt εC ∩w log(P a t(c|s t))≧τ (Equation 6)
where τ is as described in Equation 7 below:
τ=log q+(|C∩W|−1)log P(c) (Equation 7)
ΣtεC∩wλt log(P a t(c|s t))≧τ (Equation 8)
ΛT x a≧τ (Equation 9)
{id a,1a ,x a ,s a}a=1 to N (Equation 10)
{id: id εidεid a }⊂V (Equation 11)
quality/numeric centrality(Λ,τ)=(Σa s a I(ΛT x a≧τ))/(Σa I(ΛT x a≧τ)) (Equation 14)
argmax{Λ,τ}(numeric centrality(Λ,τ) such that completeness(Λ,τ)≧C min and coverage(Λ,τ)≧G min) (Equation 15)
where Cmin and Gmin are the specified minimum desired levels of completeness and coverage. Equation 15 provides a solution to the problem of finding Λ and τ for
w t+1 minw[η(−g(w t)T w+λ 1 ∥w∥ 1 +∥w∥ 2 2) (Equation 17)
Claims (19)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/096,950 US9830361B1 (en) | 2013-12-04 | 2013-12-04 | Facilitating content entity annotation while satisfying joint performance conditions |
US15/819,050 US11042553B2 (en) | 2013-12-04 | 2017-11-21 | Facilitating content entity annotation while satisfying joint performance conditions |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/096,950 US9830361B1 (en) | 2013-12-04 | 2013-12-04 | Facilitating content entity annotation while satisfying joint performance conditions |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/819,050 Continuation US11042553B2 (en) | 2013-12-04 | 2017-11-21 | Facilitating content entity annotation while satisfying joint performance conditions |
Publications (1)
Publication Number | Publication Date |
---|---|
US9830361B1 true US9830361B1 (en) | 2017-11-28 |
Family
ID=60407612
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/096,950 Active 2034-10-28 US9830361B1 (en) | 2013-12-04 | 2013-12-04 | Facilitating content entity annotation while satisfying joint performance conditions |
US15/819,050 Active 2035-04-13 US11042553B2 (en) | 2013-12-04 | 2017-11-21 | Facilitating content entity annotation while satisfying joint performance conditions |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/819,050 Active 2035-04-13 US11042553B2 (en) | 2013-12-04 | 2017-11-21 | Facilitating content entity annotation while satisfying joint performance conditions |
Country Status (1)
Country | Link |
---|---|
US (2) | US9830361B1 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210312121A1 (en) * | 2020-12-11 | 2021-10-07 | Apollo Intelligent Connectivity (Beijing) Technology Co., Ltd. | Annotation tool generation method, annotation method, electronic device and storage medium |
US11620558B1 (en) * | 2020-08-25 | 2023-04-04 | Amazon Technologies, Inc. | Iterative machine learning based techniques for value-based defect analysis in large data sets |
Citations (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020075310A1 (en) * | 2000-12-20 | 2002-06-20 | Prabhu Prasad V. | Graphical user interface adapted to allow scene content annotation of groups of pictures in a picture database to promote efficient database browsing |
US20020169823A1 (en) * | 2001-05-08 | 2002-11-14 | Nokia Mobile Phones | Method and apparatus for transcoding content with permissible operations authorized by content creator |
US20040205482A1 (en) * | 2002-01-24 | 2004-10-14 | International Business Machines Corporation | Method and apparatus for active annotation of multimedia content |
US6973616B1 (en) * | 1999-06-24 | 2005-12-06 | Microsoft Corporation | Associating annotations with a content source |
US20060161838A1 (en) * | 2005-01-14 | 2006-07-20 | Ronald Nydam | Review of signature based content |
US20070136656A1 (en) * | 2005-12-09 | 2007-06-14 | Adobe Systems Incorporated | Review of signature based content |
US7254593B2 (en) * | 2004-01-16 | 2007-08-07 | International Business Machines Corporation | System and method for tracking annotations of data sources |
US20070226606A1 (en) * | 2006-03-27 | 2007-09-27 | Peter Noyes | Method of processing annotations using filter conditions to accentuate the visual representations of a subset of annotations |
US20080005064A1 (en) * | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20090024580A1 (en) * | 2007-07-20 | 2009-01-22 | Pere Obrador | Compositional balance and color driven content retrieval |
US7493293B2 (en) * | 2006-05-31 | 2009-02-17 | International Business Machines Corporation | System and method for extracting entities of interest from text using n-gram models |
US20090164572A1 (en) * | 2007-12-20 | 2009-06-25 | Motorola, Inc. | Apparatus and method for content item annotation |
US20100057699A1 (en) * | 2008-08-27 | 2010-03-04 | Satyam Computer Services Limited Of Mayfair Centre | System and method for annotation aggregation |
US20100095196A1 (en) * | 2008-10-09 | 2010-04-15 | International Business Machines Corporation | Credibility of Text Analysis Engine Performance Evaluation by Rating Reference Content |
US20100287236A1 (en) * | 2009-04-16 | 2010-11-11 | Brian Amento | Collective asynchronous media review |
US7844607B2 (en) * | 2003-08-21 | 2010-11-30 | International Business Machines Corporation | Annotation of query components |
US20100325557A1 (en) * | 2009-06-17 | 2010-12-23 | Agostino Sibillo | Annotation of aggregated content, systems and methods |
US7958068B2 (en) * | 2007-12-12 | 2011-06-07 | International Business Machines Corporation | Method and apparatus for model-shared subspace boosting for multi-label classification |
US20110258526A1 (en) * | 2010-04-20 | 2011-10-20 | International Business Machines Corporation | Web content annotation management web browser plug-in |
US20120246175A1 (en) * | 2011-03-23 | 2012-09-27 | International Business Machines Corporation | Annotating schema elements based on associating data instances with knowledge base entities |
US20120269436A1 (en) * | 2011-04-20 | 2012-10-25 | Xerox Corporation | Learning structured prediction models for interactive image labeling |
US20130183022A1 (en) * | 2010-08-11 | 2013-07-18 | Hirotaka Suzuki | Information Processing Device, Information Processing Method and Program |
US8510287B1 (en) * | 2012-04-08 | 2013-08-13 | Microsoft Corporation | Annotating personalized recommendations |
US8571850B2 (en) * | 2007-09-13 | 2013-10-29 | Microsoft Corporation | Dual cross-media relevance model for image annotation |
US20140108460A1 (en) * | 2012-10-11 | 2014-04-17 | Nuance Communications, Inc. | Data store organizing data using semantic classification |
US8732010B1 (en) * | 2011-08-24 | 2014-05-20 | Google Inc. | Annotated advertisements and advertisement microsites |
US20140244660A1 (en) * | 2013-02-25 | 2014-08-28 | Google Inc. | Ranking media content sources |
US20140317488A1 (en) * | 2013-04-19 | 2014-10-23 | David Lutz | System and method for annotating and manipulating electronic documents |
US8909563B1 (en) * | 2011-06-17 | 2014-12-09 | Google Inc. | Methods, systems, and programming for annotating an image including scoring using a plurality of trained classifiers corresponding to a plurality of clustered image groups associated with a set of weighted labels |
US20150026105A1 (en) * | 2013-07-19 | 2015-01-22 | A6 Corporation | Systems and method for determining influence of entities with respect to contexts |
US20150032442A1 (en) * | 2013-07-26 | 2015-01-29 | Nuance Communications, Inc. | Method and apparatus for selecting among competing models in a tool for building natural language understanding models |
US20150161176A1 (en) * | 2009-12-29 | 2015-06-11 | Google Inc. | Query Categorization Based on Image Results |
US9275135B2 (en) * | 2012-05-29 | 2016-03-01 | International Business Machines Corporation | Annotating entities using cross-document signals |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7805431B2 (en) * | 2006-06-30 | 2010-09-28 | Amazon Technologies, Inc. | System and method for generating a display of tags |
US7870474B2 (en) * | 2007-05-04 | 2011-01-11 | Yahoo! Inc. | System and method for smoothing hierarchical data using isotonic regression |
US8880529B2 (en) * | 2007-05-15 | 2014-11-04 | Tivo Inc. | Hierarchical tags with community-based ratings |
US8447767B2 (en) * | 2010-12-15 | 2013-05-21 | Xerox Corporation | System and method for multimedia information retrieval |
US9519685B1 (en) * | 2012-08-30 | 2016-12-13 | deviantArt, Inc. | Tag selection, clustering, and recommendation for content hosting services |
-
2013
- 2013-12-04 US US14/096,950 patent/US9830361B1/en active Active
-
2017
- 2017-11-21 US US15/819,050 patent/US11042553B2/en active Active
Patent Citations (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6973616B1 (en) * | 1999-06-24 | 2005-12-06 | Microsoft Corporation | Associating annotations with a content source |
US20020075310A1 (en) * | 2000-12-20 | 2002-06-20 | Prabhu Prasad V. | Graphical user interface adapted to allow scene content annotation of groups of pictures in a picture database to promote efficient database browsing |
US20020169823A1 (en) * | 2001-05-08 | 2002-11-14 | Nokia Mobile Phones | Method and apparatus for transcoding content with permissible operations authorized by content creator |
US20040205482A1 (en) * | 2002-01-24 | 2004-10-14 | International Business Machines Corporation | Method and apparatus for active annotation of multimedia content |
US8239400B2 (en) * | 2003-08-21 | 2012-08-07 | International Business Machines Corporation | Annotation of query components |
US7849074B2 (en) * | 2003-08-21 | 2010-12-07 | International Business Machines Corporation | Annotation of query components |
US7844607B2 (en) * | 2003-08-21 | 2010-11-30 | International Business Machines Corporation | Annotation of query components |
US7254593B2 (en) * | 2004-01-16 | 2007-08-07 | International Business Machines Corporation | System and method for tracking annotations of data sources |
US20060161838A1 (en) * | 2005-01-14 | 2006-07-20 | Ronald Nydam | Review of signature based content |
US20080005064A1 (en) * | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20070136656A1 (en) * | 2005-12-09 | 2007-06-14 | Adobe Systems Incorporated | Review of signature based content |
US20070226606A1 (en) * | 2006-03-27 | 2007-09-27 | Peter Noyes | Method of processing annotations using filter conditions to accentuate the visual representations of a subset of annotations |
US7493293B2 (en) * | 2006-05-31 | 2009-02-17 | International Business Machines Corporation | System and method for extracting entities of interest from text using n-gram models |
US20090024580A1 (en) * | 2007-07-20 | 2009-01-22 | Pere Obrador | Compositional balance and color driven content retrieval |
US8571850B2 (en) * | 2007-09-13 | 2013-10-29 | Microsoft Corporation | Dual cross-media relevance model for image annotation |
US7958068B2 (en) * | 2007-12-12 | 2011-06-07 | International Business Machines Corporation | Method and apparatus for model-shared subspace boosting for multi-label classification |
US20090164572A1 (en) * | 2007-12-20 | 2009-06-25 | Motorola, Inc. | Apparatus and method for content item annotation |
US20100057699A1 (en) * | 2008-08-27 | 2010-03-04 | Satyam Computer Services Limited Of Mayfair Centre | System and method for annotation aggregation |
US20100095196A1 (en) * | 2008-10-09 | 2010-04-15 | International Business Machines Corporation | Credibility of Text Analysis Engine Performance Evaluation by Rating Reference Content |
US8554848B2 (en) * | 2009-04-16 | 2013-10-08 | At&T Intellectual Property 1, L.P. | Collective asynchronous media review |
US20100287236A1 (en) * | 2009-04-16 | 2010-11-11 | Brian Amento | Collective asynchronous media review |
US20100325557A1 (en) * | 2009-06-17 | 2010-12-23 | Agostino Sibillo | Annotation of aggregated content, systems and methods |
US20150161176A1 (en) * | 2009-12-29 | 2015-06-11 | Google Inc. | Query Categorization Based on Image Results |
US20110258526A1 (en) * | 2010-04-20 | 2011-10-20 | International Business Machines Corporation | Web content annotation management web browser plug-in |
US20130183022A1 (en) * | 2010-08-11 | 2013-07-18 | Hirotaka Suzuki | Information Processing Device, Information Processing Method and Program |
US20120246175A1 (en) * | 2011-03-23 | 2012-09-27 | International Business Machines Corporation | Annotating schema elements based on associating data instances with knowledge base entities |
US20120269436A1 (en) * | 2011-04-20 | 2012-10-25 | Xerox Corporation | Learning structured prediction models for interactive image labeling |
US8909563B1 (en) * | 2011-06-17 | 2014-12-09 | Google Inc. | Methods, systems, and programming for annotating an image including scoring using a plurality of trained classifiers corresponding to a plurality of clustered image groups associated with a set of weighted labels |
US8732010B1 (en) * | 2011-08-24 | 2014-05-20 | Google Inc. | Annotated advertisements and advertisement microsites |
US8510287B1 (en) * | 2012-04-08 | 2013-08-13 | Microsoft Corporation | Annotating personalized recommendations |
US9275135B2 (en) * | 2012-05-29 | 2016-03-01 | International Business Machines Corporation | Annotating entities using cross-document signals |
US20140108460A1 (en) * | 2012-10-11 | 2014-04-17 | Nuance Communications, Inc. | Data store organizing data using semantic classification |
US20140244660A1 (en) * | 2013-02-25 | 2014-08-28 | Google Inc. | Ranking media content sources |
US9235625B2 (en) * | 2013-02-25 | 2016-01-12 | Google Inc. | Ranking media content sources |
US20140317488A1 (en) * | 2013-04-19 | 2014-10-23 | David Lutz | System and method for annotating and manipulating electronic documents |
US20150026105A1 (en) * | 2013-07-19 | 2015-01-22 | A6 Corporation | Systems and method for determining influence of entities with respect to contexts |
US20150032442A1 (en) * | 2013-07-26 | 2015-01-29 | Nuance Communications, Inc. | Method and apparatus for selecting among competing models in a tool for building natural language understanding models |
Non-Patent Citations (2)
Title |
---|
Fan, R.-E., et al., "LIBLINEAR: A Library for Large Linear Classification," Journal of Machine Learning Research, 2008, pp. 1871-1874, No. 9. |
Freund, Y., et al., "Using and Combining Predictors That Specialize," Proceedings of the Twenty-Ninth Annual ACM Symposium on the Theory of Computing, 1997, pp. 1-10. |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11620558B1 (en) * | 2020-08-25 | 2023-04-04 | Amazon Technologies, Inc. | Iterative machine learning based techniques for value-based defect analysis in large data sets |
US20210312121A1 (en) * | 2020-12-11 | 2021-10-07 | Apollo Intelligent Connectivity (Beijing) Technology Co., Ltd. | Annotation tool generation method, annotation method, electronic device and storage medium |
US11727200B2 (en) * | 2020-12-11 | 2023-08-15 | Apollo Intelligent Connectivity (Beijing) Technology Co., Ltd. | Annotation tool generation method, annotation method, electronic device and storage medium |
Also Published As
Publication number | Publication date |
---|---|
US20180089200A1 (en) | 2018-03-29 |
US11042553B2 (en) | 2021-06-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11922308B2 (en) | Generating neighborhood convolutions within a large network | |
US10489688B2 (en) | Personalized digital image aesthetics in a digital medium environment | |
US9811765B2 (en) | Image captioning with weak supervision | |
WO2017219548A1 (en) | Method and device for predicting user attributes | |
US8938407B2 (en) | Information propagation probability for a social network | |
US20170200066A1 (en) | Semantic Natural Language Vector Space | |
US9679337B2 (en) | System, method and computer program product for classification of social streams | |
US8965814B1 (en) | Selection of most effective machine learning kernel from a training set of documents | |
US20230394245A1 (en) | Adversarial Bootstrapping for Multi-Turn Dialogue Model Training | |
US8977617B1 (en) | Computing social influence scores for users | |
CN109471978B (en) | Electronic resource recommendation method and device | |
US20200118033A1 (en) | Method for approximate k-nearest-neighbor search on parallel hardware accelerators | |
US20210201154A1 (en) | Adversarial network systems and methods | |
US11042553B2 (en) | Facilitating content entity annotation while satisfying joint performance conditions | |
US11233761B1 (en) | Determining topic cohesion between posted and linked content | |
US11775813B2 (en) | Generating a recommended target audience based on determining a predicted attendance utilizing a machine learning approach | |
US20240054326A1 (en) | Extreme classification processing using graphs and neural networks | |
US8639773B2 (en) | Discrepancy detection for web crawling | |
Han et al. | Building text classifiers using positive, unlabeled and ‘outdated’examples | |
CN105357583A (en) | Method and device for discovering interest and preferences of intelligent television user | |
US20230214676A1 (en) | Prediction model training method, information prediction method and corresponding device | |
Sun et al. | Enabling 5G: sentimental image dominant graph topic model for cross-modality topic detection | |
Peng et al. | A general framework for multi-label learning towards class correlations and class imbalance | |
US20230267373A1 (en) | End-to-end artificial intelligence system with universal training and deployment | |
US11711581B2 (en) | Multimodal sequential recommendation with window co-attention |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:VARADARAJAN, BALAKRISHNAN;TODERICI, GEORGE DAN;NATSEV, APOSTOL;AND OTHERS;SIGNING DATES FROM 20131203 TO 20131204;REEL/FRAME:031720/0510 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: MERGER AND CHANGE OF NAME;ASSIGNORS:GOOGLE INC.;GOOGLE LLC;REEL/FRAME:045093/0546Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
CN108604204B - Selecting and distributing records of applications executing on computing devices in a network environment - Google Patents
Selecting and distributing records of applications executing on computing devices in a network environment Download PDFInfo
- Publication number
- CN108604204B CN108604204B CN201680040914.8A CN201680040914A CN108604204B CN 108604204 B CN108604204 B CN 108604204B CN 201680040914 A CN201680040914 A CN 201680040914A CN 108604204 B CN108604204 B CN 108604204B
- Authority
- CN
- China
- Prior art keywords
- application
- client device
- record
- interaction
- data processing
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/30—Monitoring
- G06F11/34—Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation ; Recording or statistical evaluation of user activity, e.g. usability assessment
- G06F11/3438—Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation ; Recording or statistical evaluation of user activity, e.g. usability assessment monitoring of user actions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/30—Monitoring
- G06F11/34—Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation ; Recording or statistical evaluation of user activity, e.g. usability assessment
- G06F11/3409—Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation ; Recording or statistical evaluation of user activity, e.g. usability assessment for performance assessment
- G06F11/3414—Workload generation, e.g. scripts, playback
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/30—Monitoring
- G06F11/34—Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation ; Recording or statistical evaluation of user activity, e.g. usability assessment
- G06F11/3447—Performance evaluation by modeling
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
- G06F9/453—Help systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2201/00—Indexing scheme relating to error detection, to error correction, and to monitoring
- G06F2201/86—Event-based monitoring
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y02—TECHNOLOGIES OR APPLICATIONS FOR MITIGATION OR ADAPTATION AGAINST CLIMATE CHANGE
- Y02D—CLIMATE CHANGE MITIGATION TECHNOLOGIES IN INFORMATION AND COMMUNICATION TECHNOLOGIES [ICT], I.E. INFORMATION AND COMMUNICATION TECHNOLOGIES AIMING AT THE REDUCTION OF THEIR OWN ENERGY USE
- Y02D10/00—Energy efficient computing, e.g. low power processors, power management or thermal management
Abstract
Systems and methods for automatically generating a tutorial for an application are provided herein. The server may receive a first request from a first client device. The server may transmit an application and a recorder script to the first client device to record execution of an application running on the first client device. The server may receive the record of the application. The server may receive a second request from a second client device. The server may transmit the application and an interaction measurement script to the second client device to generate an interaction log of interactions with the application. The server may receive the interaction log. The server may receive a third request from a third client device. The server may select the record for the application based on the recorded performance metrics. The server may transmit a record of the selection of the application to the application.
Description
Background
In a computer network environment (such as the internet), client devices may download applications from servers. An end user at a client device may interact with an application displayed on the client device while the application is executing.
Disclosure of Invention
Many end users may find it difficult to operate and use the first installed computer program. Some end users may take a long time to find a particular interface element. Other end users may not be able to find particular features of the computer program due to lack of knowledge or awareness. Such difficulties arising in operating a computer program can cause frustration to the end user, leading to worsening human-computer interaction (HCI) between the end user and the computer program, and in turn, higher power consumption, network bandwidth usage, and processor time due to increased time a user learns the way to operate the computer program to perform tasks. A software developer or publisher may create text or video tutorials to guide end users in the manner in which computer programs are used and operated to alleviate some of these problems. However, these courses may still lack specific details regarding the computer program associated with the end user, as the creator of such a course may not know a priori what the end user seeks from the computer program. Furthermore, creating such courses can be time consuming and require technical expertise to understand the computer program to generate an effective course for a particular computer program. In situations where a large number of computer programs already exist without associated courses, creating courses for existing computer programs may be prohibitive. Thus, there remains a technical challenge associated with generating effective tutorials for computer programs.
To address these and other technical challenges, the present disclosure provides systems and methods for automatically generating a tutorial video for guiding an end user in the manner of using a computer program. In general, for the first N users downloading an application, a server (e.g., a data processing system) may send additional scripts to record videos of those first few users operating the application on respective client devices. The server may then send one of these recorded videos to the next user who downloads the application. The server may receive one or more records of an application executing on the first client device and provide the records of the application executing on the first client device as a tutorial. To identify the subset of videos that perform best, the server may log the next set of user interactions with the application. Then, an interaction with the application can be detected, and a record of the application can be subsequently modified based on the interaction with the application. Based on the user interactions received from the next user, the server may maintain a model to compute performance metrics for each of the recorded videos. The server may also iteratively adjust the model to recalculate the performance metrics as the server logs more and more user interactions. This process may be iteratively repeated until a subset of the best performing videos is identified.
In some implementations, the server can receive a request from a client device to download an application. The server may identify the number of recorded videos for the application running on each client device. If the number of recorded videos is below a predetermined number, the server may transmit the application along with the video recording script. The video recording script may be configured to record video of an application running on the client device when the end user interacts with the application, as permitted by the user. After a predefined period of time, the video recording script may be configured to transmit the video of the application to the server. The server may repeat transmitting the application using the video recording script, and may accumulate the recorded videos until the number of recorded videos is greater than or equal to a predetermined number.
After accumulating several recorded videos, when an additional request to download an application is received from another client device, the server may identify the number of times the application has been downloaded or installed by the other client device. A null number of downloads may indicate that the client device is associated with the first end user of the application. The server may then select the recorded video and may transmit an application to the client device along with the interaction measurement script. The interaction measurement script may be configured to play a transmitted recorded video showing the manner in which another end user operates the application. The interaction measurement script may be further configured to: after playing the recorded video, a user interaction event with an application at the client device is logged in, and the logged user interaction event is transmitted back to the server.
Using the logged user interaction events, the server may generate performance metrics for the corresponding recorded video. The performance metric may indicate or correspond to a degree of information content of the recorded video. The server may also maintain a model (e.g., an artificial neural network) with weights for each of the recorded videos and the user interaction events as inputs to compute a performance metric for each of the recorded videos. As the server receives more logged user interaction events, the server may adjust the model accordingly to recalculate the performance metrics. The parameters of the model may eventually converge, thereby associating a subset of the recorded videos with the highest performance metric.
When the server receives an additional request to download from another set of client devices, the server may select one of the recorded videos based on the performance metrics from the model. The server may then transmit the selected recorded video and application to the respective client device. The client device may play the selected recorded video to guide the manner in which the end user uses the application. By selecting and presenting appropriate videos of the application, the present disclosure may thereby reduce execution time of the application by training the user to correctly use and run the application, thereby saving client-side power consumption, network bandwidth, and computer processing time. Further, by optimizing the selection of recorded videos, the server may discard low-performing videos, save server-side storage space, and allow other computing devices (e.g., edge cache servers, content redistribution systems, etc.) to cache and retransmit selected videos, thereby reducing server bandwidth consumption.
In at least one aspect, the present disclosure is directed to a method of automatically selecting and distributing a record of an application executing on an end-user computing device. An application executing on a data processing system having one or more processors may receive a first request from a first client device to download an application. In response to receiving the first request, a record aggregator executing on the data processing system may determine that a number of execution records of the application is below a threshold. In response to a determination that the number of records is below the threshold, the application distributor may transmit the application and the recorder script to the first client device. The receipt of the recorder script may trigger the first client device to record execution of an application running on the first client device and transmit the record to the data processing system. The record aggregator may receive, from a first client device, a record of an application executing on the first client device.
In some implementations, after receiving the record of the application from the first client device, the application distributor may receive a second request to download the application from the second client device. In some implementations, the record aggregator may determine that a number of execution records of the application is greater than a threshold. In some implementations, the application distributor may transmit a record of the application executing on the first client device to the second client device in response to the number of execution records of the application being greater than the threshold.
In some implementations, transmitting the record of the application executing on the first client device to the second client device may include: and transmitting the interaction measurement script. In some implementations, receiving the interaction measurement script triggers the second client device to play a record of the application executing on the first client device. In some implementations, the receipt of the interaction measurement script may trigger the second client device to generate, after playing the record, an interaction log of one or more interaction events with an application running on the second client device. In some implementations, receipt of the interaction measurement script may trigger the second client device to transmit the generated interaction log to the data processing system.
In some implementations, a video selector executing on the data processing system can receive the generated interaction log from the second client device. In some implementations, the video selector can generate a recorded performance metric for the application based on one or more interaction events identified in the generated interaction log.
In some implementations, the application distributor can receive a third request to download the application from a third client device. In some implementations, in response to receiving the third request to download the application, the video selector may select the recording of the application executing on the first client device based on the recorded performance metric of the application executing on the first client device exceeding the recorded second performance metric of the application running on the second client device. In some implementations, the application distributor can transmit the application and the player script to a third client device. In some implementations, receiving the player script may trigger the third client device to play a recording of an application executing on the first client device.
In some implementations, generating the performance metric can further include: a number of plays of a record for an application at a plurality of client devices is identified. In some implementations, generating the performance metric can further include: it is determined that the number of plays of the recording for the application is above a second threshold. In some implementations, generating the performance metric can further include: in response to determining that the number of plays of the record for the application is above a second threshold, a performance metric is calculated based on one or more interaction events identified in the generated interaction log received from the second client device.
In some implementations, generating the performance metric can further include: an event type for each of the one or more interactivity events identified in the generated interactivity log received from the second client device is identified. In some implementations, generating the performance metric can further include: the performance metrics are generated based on an event type of each of the one or more interactivity events.
In some implementations, generating the performance metric can further include: an aggregate performance model is maintained for a plurality of execution records applied on a plurality of client devices. In some implementations, generating the performance metric can further include: in response to receiving a record from a first client device, an initial value is assigned to a weight in an aggregate performance model for an application executing the record on the first client device. In some implementations, the weight is adjusted from the initial value to the second value in the aggregate performance model in response to receiving a generated interaction log of the one or more interactions from the second client device.
In some implementations, the video selector may determine a start time and an end time for the application to perform the recording on the first client device based on the performance metrics and one or more interaction events by the second client device with the application. In some implementations, the video selector can set a length of time for the application to perform the recording on the first client device based on the start time and the end time. In some embodiments, wherein transmitting the application and the player script to the third client device may further comprise: the recording is transmitted with a time length set to the start time and the end time.
In some implementations, in response to receiving a first request to download an application, the application distributor can identify a number of times the application has been downloaded by a first client device. In some implementations, the application distributor may determine that the number of times the application has been downloaded by the first client device is equal to zero. In some implementations, transmitting the recorder script to the first client device may further include: in response to determining that the number of times the application has been downloaded by the first client device is equal to zero, transmitting a recorder script to the first client device.
In some implementations, transmitting the application and recorder script to the first client device may further include: the application and the recorder script are transmitted to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record one or more second interactions with the application. In some implementations, receipt of the interaction measurement script may trigger the first client device to transmit one or more second interactions to the data processing system. In some implementations, the record aggregator may generate the record based on the application and one or more second interaction events with the application on the first client device.
In some implementations, transmitting the application and recorder script to the first client device may further include: the application and the recorder script are transmitted to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to determine that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to initialize an execution record of the application in response to determining that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record the output of the application executing on the first client device for a predefined time.
In some implementations, transmitting the application and recorder script to the first client device may further include: the application and the recorder script are transmitted to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to monitor one or more second interaction events with the application on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to determine that a number of the one or more second interaction events exceeds a predetermined number of events. In some implementations, the receiving of the recorder script may trigger the first client device to terminate recording of execution of the application running on the first client device in response to determining that the number of the one or more second interaction events exceeds the predetermined number of events.
In some implementations, the video selector may identify one or more features within a recording of an application running on the first client device. In some implementations, generating the performance metric can further include: a performance metric is generated based on the one or more identified features.
In another aspect, the present disclosure is directed to a system for automatically selecting and distributing a record of an application executing on an end-user computing device. The system comprises: an application distributor executing on a data processing system having one or more processors. The application distributor may receive a first request to download an application from a first client device. The system comprises: a record aggregator executing on the data processing system. In response to receiving the first request, the record aggregator may determine that a number of execution records of the application is below a threshold. In response to a determination that the number of records is below the threshold, the application distributor may transmit the application and the recorder script to the first client device. The receipt of the recorder script may trigger the first client device to record execution of an application running on the first client device and transmit the record to the data processing system. The record aggregator may receive, from a first client device, a record of an application executing on the first client device.
In some implementations, after receiving the record of the application from the first client device, the application distributor may receive a second request to download the application from the second client device. In some implementations, the record aggregator determines that a number of execution records of the application is greater than a threshold. In some implementations, the application distributor may transmit a record of the application executing on the first client device to the second client device in response to the number of execution records of the application being greater than the threshold.
In some implementations, the application distributor can transmit the interaction measurement script. In some implementations, receipt of the interaction measurement script may trigger the second client device to play a record of an application executing on the first client device. In some implementations, the receipt of the interaction measurement script may trigger the second client device to generate, after playing the record, an interaction log of one or more interaction events with an application running on the second client device. In some implementations, receipt of the interaction measurement script may trigger the second client device to transmit the generated interaction log to the data processing system.
In some embodiments, the system may further comprise: a video selector executing on the data processing system. In some implementations, the video selector can receive the generated interaction log from the second client device. In some implementations, the video selector can generate a recorded performance metric for the application based on one or more interaction events identified in the generated interaction log.
In some implementations, the application distributor can transmit the interaction measurement script. In some implementations, receipt of the interaction measurement script may trigger the second client device to play a record of an application executing on the first client device. In some implementations, the receipt of the interaction measurement script may trigger the second client device to generate, after playing the record, an interaction log of one or more interaction events with an application running on the second client device. In some implementations, receipt of the interaction measurement script may trigger the second client device to transmit the generated interaction log to the data processing system.
In some embodiments, the system may further comprise: a video selector executing on the data processing system. In some implementations, the video selector can receive the generated interaction log from the second client device. In some implementations, the video selector can generate a recorded performance metric for the application based on one or more interaction events identified in the generated interaction log.
In some implementations, the application distributor can receive a third request to download the application from a third client device. In some implementations, in response to receiving the third request to download the application, the video selector may select the recording of the application executing on the first client device based on the recorded performance metric of the application executing on the first client device exceeding the recorded second performance metric of the application running on the second client device. In some implementations, the application distributor can transmit the application and the player script to a third client device. In some implementations, receiving the player script may trigger the third client device to play a recording of an application executing on the first client device.
In some implementations, the video selector can identify a number of plays of a recording for an application at a plurality of client devices. In some implementations, the video selector can determine that the number of plays of the recording for the application is above a second threshold. In some implementations, in response to a determination that the number of plays for the record of the application is above a second threshold, the video selector can calculate the performance metric based on one or more interaction events identified in the generated interaction log received from the second client device.
In some implementations, the video selector may identify an event type for each of the one or more interactivity events identified in the generated interactivity log received from the second client device. In some implementations, the video selector can generate the performance metric based on an event type of each of the one or more interactivity events.
In some implementations, the video selector may maintain an aggregate performance model for multiple execution records applied on multiple client devices. In some implementations, in response to receiving a record from a first client device, an initial value is assigned to a weight in an aggregate performance model for an application executing the record on the first client device. In some implementations, the video selector may adjust the weight from the initial value to the second value in the aggregate performance model in response to receiving a generated interaction log of one or more interactions from the second client device.
In some implementations, the video selector may determine a start time and an end time for the application to perform the recording on the first client device based on the performance metrics and one or more interaction events by the second client device with the application. In some implementations, the video selector can set a length of time for the application to perform the recording on the first client device based on the start time and the end time. In some implementations, the application distributor can transmit a record having a length of time set to a start time and an end time.
In some implementations, in response to receiving a first request to download an application, the application distributor can identify a number of times the application has been downloaded by a first client device. In some implementations, the application distributor may determine that the number of times the application has been downloaded by the first client device is equal to zero. In some implementations, in response to determining that the number of times the application has been downloaded by the first client device is equal to zero, the application distributor may transmit a recorder script to the first client device.
In some implementations, the application distributor can transmit the application and the recorder script to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record one or more second interaction events with the application. In some implementations, receipt of the recorder script may trigger the first client device to transmit one or more second interactions to the data processing system. In some implementations, the record aggregator may generate the record based on the application and one or more second interaction events with the application on the first client device.
In some implementations, the application distributor can transmit the application and the recorder script to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to determine that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to initialize an execution record of the application in response to determining that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record the output of the application executing on the first client device for a predefined time.
In some implementations, the application distributor can transmit the application and the recorder script to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to monitor one or more second interaction events with the application on the first client device. In some implementations, receiving the recorder script triggers the first client device to determine that a number of the one or more second interaction events exceeds a predetermined number of events. In some implementations, receiving the recorder script triggers the first client device to terminate recording of execution of the application running on the first client device in response to determining that the number of the one or more second interaction events exceeds the predetermined number of events.
In some implementations, the video selector may identify one or more features within a recording of an application running on the first client device. In some implementations, the video selector can identify to generate the performance metric based on one or more identified features.
In another aspect, the present disclosure is directed to a method of automatically selecting and distributing, at a data processing system, a record of an application executing on an end-user device. The data processing system may receive at least one record of an application executing on a first client device. The data processing system may transmit at least one record of an application executing on the first client device to the second client device. The data processing system may transmit the interaction measurement script to the second client device. The receiving of the interaction measurement script may trigger the second client device to play at least one record of the application executing on the first client device. The receiving of the interaction measurement script may trigger the second client device to generate an interaction log of one or more interaction events with the application running on the second client device after playing the at least one record. Receipt of the interaction measurement script may trigger the second client device to transmit the generated interaction log to the data processing system. The data processing system may receive the generated interaction log. The data processing system may modify at least one record of an application executing on the first client device based on the generated interaction log.
In some implementations, the at least one record of the application executing on the first client device may include a plurality of records of the application executing on the respective first client devices. In some implementations, transmitting at least one record of an application executing on a first client device may include: a record of the plurality of records is selected. In some implementations, modifying at least one record of an application executing on the first client device may include: a record of the plurality of records is selected.
In some implementations, the data processing system can generate at least one recorded performance metric for the application based on one or more interaction events identified in the generated interaction log. In some implementations, modifying at least one record of the application can be based on the performance metric.
In some implementations, generating the performance metric can include: a number of plays of a record for an application at a plurality of client devices is identified. In some implementations, generating the performance metric can include: determining that the number of plays of the record for the application is above a threshold. In some implementations, generating the performance metric can include: in response to determining that the number of plays of the record for the application is above a threshold, a performance metric is calculated based on one or more interaction events identified in the generated interaction log received from the second client device.
In some implementations, generating the performance metric can include: an event type for each of the one or more interactivity events identified in the generated interactivity log received from the second client device is identified. In some implementations, generating the performance metric can include: the performance metrics are generated based on an event type of each of the one or more interactivity events.
In some implementations, generating the performance metric can include: an aggregate performance model is maintained for a plurality of execution records applied on a plurality of client devices. In some implementations, in response to receiving a record from a first client device, an initial value is assigned to a weight in an aggregate performance model for an application executing the record on the first client device. In some implementations, generating the performance metric can include: the method further includes adjusting the weight from the initial value to a second value in the aggregate performance model in response to receiving the generated interaction log of the one or more interactions from the second client device.
In some implementations, the data processing system may determine a start time and an end time of a recording of an application executing on a first client device based on the performance metrics and one or more interaction events by a second client device with the application. In some implementations, the data processing system can modify the length of time of the recording of the application based on the start time and the end time. In some implementations, the data processing system may identify one or more features within a record of an application executing on the first client device. In some implementations, generating the performance metric can include: a performance metric is generated based on the one or more identified features. In some implementations, at least one record of the application executing on the first client device may be modified based on at least one further record of the application executing on the first client device, the at least one further record obtained based on the generated interaction log.
In some implementations, a data processing system may receive a first request to download an application from a first client device. In some implementations, in response to receiving the first request, the data processing system may determine that a number of execution records of the application is below a threshold. In some implementations, in response to a determination that the number of records is below the threshold, the data processing system may transmit the application and the recorder script to the first client device. The receipt of the recorder script may trigger the first client device to record execution of an application running on the first client device and transmit the record to the data processing system. In some implementations, a data processing system may receive, from a first client device, a record of an application executing on the first client device.
In some implementations, after receiving the record of the application from the first client device, the data processing system may receive a second request to download the application from the second client device. In some implementations, the data processing system can determine that a number of execution records of the application is greater than a threshold. In some implementations, transmitting at least one record of the application executing on the first client device to the second client device may be in response to determining that a number of execution records of the application is greater than a threshold.
In some implementations, in response to receiving a first request to download an application, the data processing system can identify a number of times the application has been downloaded by a first client device. In some implementations, the data processing system may determine that the number of times the application has been downloaded by the first client device is equal to zero. In some implementations, transmitting the recorder script to the first client device may include: in response to determining that the number of times the application has been downloaded by the first client device is equal to zero, transmitting a recorder script to the first client device.
In some implementations, transmitting the application and recorder script to the first client device may include: the application and the recorder script are transmitted to the first client device. The receipt of the recorder script may trigger the first client device to record one or more second interaction events with the application and transmit the one or more second interactions to the data processing system. In some implementations, the data processing system may generate the record based on the application and one or more second interaction events with the application on the first client device.
In some implementations, the data processing system may transmit the application and the recorder script to the first client device may include: the application and the recorder script are transmitted to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to determine that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to initialize an execution record of the application in response to determining that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record the output of the application executing on the first client device for a predefined time.
In some implementations, transmitting the application and recorder script to the first client device may include: the application and the recorder script are transmitted to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to monitor one or more second interaction events with the application on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to determine that a number of the one or more second interaction events exceeds a predetermined number of events. In some implementations, the receiving of the recorder script may trigger the first client device to terminate recording of execution of the application running on the first client device in response to determining that the number of the one or more second interaction events exceeds the predetermined number of events.
In another aspect, the present disclosure is directed to a system for automatically selecting and distributing, at a data processing system, a record of an application executing on an end-user device. The data processing system may receive at least one record of an application executing on a first client device. The data processing system may transmit at least one record of an application executing on the first client device to the second client device. The data processing system may transmit the interaction measurement script to the second client device. The receiving of the interaction measurement script may trigger the second client device to play at least one record of the application executing on the first client device. The receiving of the interaction measurement script may trigger the second client device to generate an interaction log of one or more interaction events with the application running on the second client device after playing the at least one record. Receipt of the interaction measurement script may trigger the second client device to transmit the generated interaction log to the data processing system. The data processing system may receive the generated interaction log. The data processing system may modify at least one record of an application executing on the first client device based on the generated interaction log.
In some implementations, the at least one record of the application executing on the first client device may include a plurality of records of the application executing on the respective first client devices. In some implementations, the data processing system may transmit at least one record of an application executing on the first client device by selecting a record of the plurality of records. In some implementations, the data processing system may modify at least one record of an application executing on the first client device by selecting a record of the plurality of records.
In some implementations, the data processing system can generate at least one recorded performance metric for the application based on one or more interaction events identified in the generated interaction log. In some implementations, the data processing system can modify at least one record of the application based on the performance metric.
In some implementations, the data processing system can generate the performance metric by identifying a number of times a record for the application is played at the plurality of client devices. In some implementations, the data processing system can generate the performance metric by determining that a number of plays of the record for the application is above a threshold. In some implementations, the data processing system may generate the performance metric by calculating the performance metric based on one or more interaction events identified in the generated interaction log received from the second client device in response to a determination that the number of plays of the record for the application is above a threshold.
In some implementations, the data processing system may generate the performance metric by identifying an event type for each of the one or more interactivity events identified in the generated interactivity log received from the second client device. In some implementations, the data processing system can generate the performance metrics by generating the performance metrics based on an event type of each of the one or more interactivity events.
In some implementations, the data processing system may generate the performance metrics by maintaining an aggregate performance model for a plurality of execution records applied on a plurality of client devices. In some implementations, the data processing system may generate the performance metric by, in response to receiving the record from the first client device, assigning an initial value to a weight in an aggregate performance model for the application executing the record on the first client device. In some implementations, the data processing system may generate the performance metric by adjusting the weight from the initial value to a second value in the aggregate performance model in response to receiving a generated interaction log of the one or more interactions from the second client device.
In some implementations, the data processing system may determine a start time and an end time of a recording of an application executing on a first client device based on the performance metrics and one or more interaction events by a second client device with the application. In some implementations, the data processing system can modify the length of time of the recording of the application based on the start time and the end time.
In some implementations, the data processing system may identify one or more features within a record of an application executing on the first client device. In some implementations, the data processing system can generate performance metrics based on one or more identified features. In some implementations, at least one record of the application executing on the first client device may be modified based on at least one further record of the application executing on the first client device, the at least one further record obtained based on the generated interaction log.
In some implementations, a data processing system may receive a first request to download an application from a first client device. In some implementations, in response to receiving the first request, the data processing system may determine that a number of execution records of the application is below a threshold. In some implementations, in response to a determination that the number of records is below the threshold, the data processing system may transmit the application and the recorder script to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record execution of an application running on the first client device and transmit the record to the data processing system. In some implementations, a data processing system may receive, from a first client device, a record of an application executing on the first client device.
In some implementations, after receiving the record of the application from the first client device, the data processing system may receive a second request to download the application from the second client device. In some implementations, the data processing system can determine that a number of execution records of the application is greater than a threshold. In some implementations, in response to a determination that the number of execution records of the application is greater than the threshold, the data processing system may transmit at least one record of the application executing on the first client device to the second client device.
In some implementations, in response to receiving a first request to download an application, the data processing system can identify a number of times the application has been downloaded by a first client device. In some implementations, the data processing system may determine that the number of times the application has been downloaded by the first client device is equal to zero. In some implementations, in response to determining that the number of times the application has been downloaded by the first client device is equal to zero, the data processing system may transmit a recorder script to the first client device.
In some implementations, the data processing system can transmit the application and the recorder script to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record one or more second interaction events with the application and transmit the one or more second interactions to the data processing system. In some implementations, the data processing system may generate the record based on the application and one or more second interaction events with the application on the first client device.
In some implementations, the data processing system can transmit the application and the recorder script to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to determine that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to initialize an execution record of the application in response to determining that the application is executing on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to record the output of the application executing on the first client device for a predefined time.
In some implementations, the data processing system can transmit the application and the recorder script to the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to monitor one or more second interaction events with the application on the first client device. In some implementations, the receipt of the recorder script may trigger the first client device to determine that a number of the one or more second interaction events exceeds a predetermined number of events. In some implementations, the receiving of the recorder script may trigger the first client device to terminate recording of execution of the application running on the first client device in response to determining that the number of the one or more second interaction events exceeds the predetermined number of events.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide an illustration and a further understanding of the various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is a diagram depicting one embodiment of a tutorial video for selecting and distributing applications executing on an end-user computing device in accordance with an illustrative embodiment;
FIG. 2 is a block diagram depicting one embodiment of an environment for automatically selecting and distributing records of applications executing on end-user computing devices in a computer network environment in accordance with an illustrative embodiment;
3A-3C are flowcharts depicting a method of automatically selecting and distributing a record of an application executing on an end-user computing device in accordance with an illustrative embodiment; and
FIG. 4 is a block diagram illustrating a general architecture of a computer system that may employ elements to implement the systems and methods described and illustrated herein, in accordance with an illustrative embodiment.
Detailed Description
The following is a more detailed description of various concepts related to methods, apparatus, and systems for automatically selecting and distributing records of applications executing on end-user computing devices in a computer network environment, and embodiments of the methods, apparatus, and systems. The various concepts introduced above and discussed in greater detail below may be implemented in any of a number of ways, as the described concepts are not limited to implementation in any particular manner.
Many end users may find it difficult to operate and use the first installed computer program. Some end users may take a long time to find a particular interface element. Other end users may not be able to find particular features of the computer program due to lack of knowledge or awareness. Such difficulties arising in operating a computer program can cause frustration to the end user, leading to worsening human-computer interaction (HCI) between the end user and the computer program, and in turn, higher power consumption, network bandwidth usage, and processor time due to increased time a user learns the way to operate the computer program to perform tasks. A software developer or publisher may create text or video tutorials to guide end users in the manner in which computer programs are used and operated to alleviate some of these problems. However, these courses may still lack specific details regarding the computer program associated with the end user, as the creator of such a course may not know a priori what the end user seeks from the computer program. Furthermore, creating such courses can be time consuming and require technical expertise to understand the computer program to generate an effective course for a particular computer program. In situations where a large number of computer programs already exist without associated courses, creating courses for existing computer programs may be prohibitive. Thus, there remains a technical challenge associated with generating effective tutorials for computer programs.
To address these and other technical challenges, the present disclosure provides systems and methods for automatically generating a tutorial video for guiding an end user in the manner of using a computer program. Referring now to FIG. 1, FIG. 1 illustrates an embodiment of automatically selecting and distributing a record of an application executing on an end-user computing device. In this example, a first set of client devices 105A-105N (often referred to as client device(s) 105) may have transmitted a request to a server to download an application. The server may then determine that there is no recorded instructional video for the application, or that the number of recorded videos is less than a preset threshold. After performing this determination, the server may transmit the application along with additional scripts to record video of the application operating on the client devices 105A-105N. After executing the application, the additional script may record videos 110A-110N (commonly referred to as video(s) 110, record(s) 110, tutorial(s) 110, or any other similar name) of client devices 105A-105N running the downloaded and installed application. The first set of client devices 105A-105N may then send back the recorded videos 110A-110N for further distribution.
After a number of recorded videos have been accumulated, the server may then begin transmitting videos along with additional scripts to measure the interaction rate of the second set of client devices 105'a to 105' N after receiving additional requests to download the application. Each of the second set of client devices 105'a to 105' N may neither execute an application nor play any of the recorded videos prior to the request. After the respective client device 105 'a-105' N plays the recorded video 110A-110N of the application executing on one of the first set of client devices 105A-105N, the client device 105 'a-105' N may execute the application, and the accompanying script may then post the interaction (e.g., click, slide, scroll, etc.) of the client device 105 'a-105' N with the application itself. Once the script completes logging the interaction, the client devices 105 'a-105' N may send the interaction log back to the server.
Using the received interaction log, the server may identify one of the recorded videos 110A-110N as the highest performance instructional video. The server may determine performance metrics (e.g., interaction rates 115A-115N (commonly referred to as interaction rate(s) 115), interaction level(s) 115, interaction volume(s) 115, application progress(s) 115, or any other similar term) for each respective recorded video 110A-110N through the interaction log. The performance metric may indicate or correspond to a degree of information content of the recorded videos 110A-110N. The server may also maintain a model having a weight for each of the recorded videos 110A-110N, and may adjust the model using the interaction rates from the second set 105 'a-105' N of client devices as parameters. As the server receives more and more logged interaction events, the server may adjust the model accordingly to recalculate the performance metrics. The parameters of the model may eventually converge, thereby associating a subset of the recorded videos with the highest performance metric. In the example of fig. 1, the recorded video 110C originating from the client device 105C may correspond to the video with the highest interaction rate. Based on the performance metrics, the server may then select the recorded video 110C as the instructional video for the application, and deselect or remove other recorded videos from future distribution.
In turn, the server may provide the recorded video 110C for all future downloads of the application. When the third set 105 "a-105" N of client devices that neither execute an application nor play any of the recorded videos 110A-110N transmits a request to download an application, the server may transmit the application along with the selected recorded video 110C. By selecting and presenting appropriate videos of applications, the present disclosure may thus reduce execution time of applications by training users to properly use and run the applications, thereby saving power consumption, network bandwidth, and computer processing time.
FIG. 2 is a block diagram depicting one embodiment of an environment for automatically selecting and distributing records of applications executing on end-user computing devices in a computer network environment. The environment 200 includes at least one data processing system 210. The data processing system 210 may include at least one processor and memory, i.e., processing circuitry. The memory stores processor-executable instructions that, when executed by the processor, cause the processor to perform one or more of the operations described herein. The processor may include: a microprocessor, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), etc., or a combination thereof. The memory may include, but is not limited to: electronic storage, optical storage, magnetic storage, or any other storage or transmission device capable of providing a processor with program instructions. The memory may further include: a floppy disk, a CD-ROM, DVD, magnetic disk, memory chip, ASIC, FPGA, Read Only Memory (ROM), Random Access Memory (RAM), electrically erasable ROM (EEPROM), Erasable Programmable ROM (EPROM), flash memory, optical media, or any other suitable memory from which instructions may be read by a processor. The instructions may include code from any suitable computer programming language. The data processing system may include one or more computing devices or servers that may perform various functions.
The network 205 may include: computer networks (such as the internet), local networks, wide area networks, metropolitan area networks or other area networks, intranets, satellite networks, other computer networks (such as voice or data mobile telephone communication networks), and combinations thereof. The data processing system 210 of the system 200 may communicate via the network 105 or at least one client device 105. Network 205 may be any form of computer network that relays information between client device 105, data processing system 210, and one or more content sources (e.g., web servers, etc.). In some embodiments, the network 205 may include: the internet and/or other types of data networks, such as a Local Area Network (LAN), a Wide Area Network (WAN), a cellular network, a satellite network, or other types of data networks. The network 205 may also include any number of computing devices (e.g., computers, servers, routers, network switches, etc.) configured to receive and/or transmit data within the network 205. The network 205 may further include any number of hardwired connections and/or wireless connections. In some implementations, the client device 105 may communicate wirelessly (e.g., via WiFi, cellular, radio, etc.) via the network interface 232 or via a hard-wired (e.g., via fiber optic cable, CAT5 cable, etc.) to other computing devices in the network 205. The client device 105 may also communicate wirelessly with computing devices of the network 205 by using the network interface 232.
The client device 105 may include a computing device configured to communicate via the network 205 or to display data (e.g., applications or video) via the network 205. The client device 105 may include: a desktop computer, a laptop computer, a tablet computer, a smart phone, a personal digital assistant, a mobile device, a consumer computing device, a server, a client, a digital video recorder, a set-top box for a television, a video game console, or any other computing device configured to communicate via the network 205. The client device 105 may communicate with other computing devices via the network 205 through the network interface 232.
The data processing system 210 may include at least one server. For example, the data processing system 210 may include a plurality of servers located in at least one data center or server farm. The data processing system 210 may include: at least one application distributor 218, at least one application database 220, at least one record aggregator 222, at least one recorded video database 224, at least one video selector 226, and at least one interaction log database 228. The application distributor 218, the record aggregator 222, and the video selector 226 may each include at least one processing unit, server, virtual server, circuitry, engine, agent, appliance, or other logic device (such as a programmable logic array) configured to communicate with the application database 220, the recorded video database 224, and the interaction log database 228, as well as with other computing devices (e.g., client device 105) via the network 205.
The application distributor 218, the record aggregator 222, and the video selector 226 may include or execute at least one computer program or at least one script. The application distributor 218, the record aggregator 222, and the video selector 226 may be separate components, a single component, or part of the data processing system 210. The application distributor 218, the record aggregator 222, and the video selector 226 may include a combination of software and hardware, such as one or more processors 212 configured to execute one or more scripts stored on the memory 214. Thus, in some embodiments, the application distributor 218, the record aggregator 222, and/or the video selector 226 may comprise an application, service, server, daemon, routine, or other executable logic for performing the functions described herein. In some implementations, the data processing system 210 can communicate with other computing devices (e.g., client device 105) via the network 205 using the network interface 216.
The data processing system 210 may also include one or more content repositories or databases (e.g., an application database 220, a recorded video database 224, and an interaction log database 228). The database may be local to the data processing system 210. In some embodiments, the database may be remote from the data processing system 210, but may be in communication with the data processing system 210 via the network 205. The database may include applications, programs, software, video content, audiovisual content, etc. to serve client device 105. Additional details of the contents of the database will be provided below.
In the context of fig. 1, for a first set of client devices 105A-105N, the application distributor 218 may provide, distribute, or transmit an application 238 and a recorder script 240 to record the application 238 executing on the client devices 105A-105N. In some implementations, the application distributor 218 can receive a request from the client device 105 to download the application 238. The client device 105 may be part of the first set of client devices 105A-105N and may not have downloaded, installed, or executed the application 238. The application 238 may comprise a computer program, software, executable file, or any format of machine executable format for execution at the client device 105. The application 238 may be a mobile application such as a word processor, enterprise software, or video game, among others. The applications 238 may be provided by third party computing devices to the data processing system 210 for storage at the application database 220. In some implementations, the request to download the application 238 can be from a program running on the client device 105, such as an application distribution platform (e.g., a mobile application store, a software catalog, etc.). The application distribution platform may list applications that are downloadable from the application database 220. The application distribution platform may include the application 238 as one of the listed applications available for download.
In response to receiving a request to download from the client device 105, the record aggregator 222 may determine whether the number of records 110 executed by the application 238 is less than a threshold. The threshold may be used to aggregate or accumulate more records 110 of the application 238 executing on the plurality of client devices 105. The record aggregator 222 may identify the number of records 110 from the video database of records 224. The recorded video database 224 may list or include the recordings 110 of the applications executing on the first set of client devices 105. In some implementations, the recorded video database 224 may maintain a counter or index for counting the number of records 110. In some embodiments, the threshold may be a predefined arbitrary number. In some embodiments, the threshold may be preset by a third party computing device providing the application 238.
If the record aggregator 222 determines that the number of records 110 of execution of the application 238 is less than the threshold, the application distributor 218 may transmit the application 238 and the recorder script 240 to the client device 105 via the network 205. In some implementations, prior to transmission, the application distributor 218 can determine whether the client device 105 has previously downloaded or installed the application 238. In some implementations, the application distributor 218 can identify the number of times the application 238 has been downloaded by the client device 105. This number may be maintained by the application distributor 218 in the application database 220. If the application distributor 218 determines that the number of times is equal to zero, the application distributor 218 may determine that the client device 105 has not previously downloaded or installed the application 238. In response to determining that client device 105 has not previously downloaded or installed application 238, application distributor 218 may transmit application 238 and recorder script 240 to client device 105. In some implementations, the application distributor 218 can determine that the client device 105 has previously downloaded or installed the application 238 based on the request. In some implementations, the request to download the application 238 may include an indicator specifying whether the application 238 has been installed or downloaded by the client device 105. The user of the client device 105 may have previously installed the application 238, but later uninstalled the application 238 from the client device 105. In some implementations, based on the indicator of the request, the application distributor 218 can transmit the application 238 and the recorder script 240 to the client device 105. In some implementations, the application distributor 218 can send a prompt to the client device 105 in order to send the recorder script 240 for recording the execution of the application 238 on the client device 105 prior to providing the recorder script 240 to the client device 105.
The client device 105 may receive the application 238 and the recorder script 240 from the application distributor 218 via the network 205. Upon receiving the application 238 and the recorder script 240, the client device 105 may store or install the application 238 and the recorder script 240 onto the memory 236. In some implementations, receipt of the application 238 and the recorder script 240 may cause or trigger the client device 105 to perform the functions specified in the application 238 or the recorder script 240. The client device 105 may execute the application 238 by using the processor 230. Recorder script 240 may determine whether application 238 is executing. In some implementations, the recorder script 240 may monitor the processor 230 and memory 236 of the client device 105 to detect an instantiation of the application 238. If the recorder script 240 determines that the application 238 has not yet executed on the client device 105, the recorder script 240 may continue to monitor the instantiation of the application 238 on the client device 105.
If the recorder script 240 determines that the application 238 is executing on the client device 105, the recorder script 240 may begin recording the execution of the application 238 on the client device 105. In some implementations, the recorder script 240 can record the output of an application executing on the client device 105. In some embodiments, the recorder script 240 may instantiate or write a video file in any format (e.g., audio video interleave (. avi), QuickTime (. mov), MPEG (. mp4), Ogg (. Ogg), etc.). In some implementations, although referred to as "video," the recorder script 240 may record a set of interactions (e.g., selecting menu 1 at time 00: 01; selecting menu item a at time 00: 03; clicking at coordinates 100,200 at time 00: 08; typing the character "abc" at time 00: 12; etc.). This may allow interactions to be recorded with reduced bandwidth or storage space, greater compression, and so on. In some implementations, such recording may be re-executed by the server in a virtual machine or sandboxed application and the actual video of the rendered output captured. In some implementations, the recorder script 240 may continue to write the video file on the memory 236 while the application 238 is executing on the client device 105. In some implementations, the recorder script 240 can record the entire display (e.g., what the end user would see when displaying on an electronic display of the client device 105) while the application 238 is executing on the client device 105. In some implementations, the recorder script 240 can identify the dimensions of the application 238 executing on the client device 105. In some implementations, the recorder script 240 can limit the recording 110 of the application 238 executing on the client device 105 to the identified dimension of the application 238.
In some implementations, the recorder script 240 may record the output of the application 238 executing on the client device 105 for a predefined time. In some implementations, the recorder script 240 may maintain a timer for recording the time of the recording 110 of the execution of the application 238 on the client device 105. In some implementations, the recorder script 240 can compare the recording time to a predefined time or a maximum time frame. The maximum time frame may correspond to a maximum time of recording 110 of execution of the application 238 on the client device 105. In some implementations, the maximum time frame may be predefined based on an amount of storage at the data processing system 210. In some implementations, the maximum time frame can be preset by a third-party computing device providing the application 238. The recorder script 240 may terminate recording of execution of the application 238 on the client device 105 if the recording time is greater than or equal to the maximum time frame. If the recording time is less than the maximum time frame, the recorder script 240 may continue to record the execution of the application 238 on the client device 105.
In some implementations, the recorder script 240 can maintain a number of interactions the client device 105 makes with the application 238 by using a counter. Recorder script 240 may use an event listener or event handler to monitor interactions with application 238. The interaction may correspond to a user interaction event with respect to the application 238. In some implementations, recorder script 240 may identify the type of interaction (e.g., click, swipe, scroll, etc.) with application 238 for each detected interaction. In some implementations, recorder script 240 may determine whether the identified interaction type is one of a predefined set of interactions. If the type of interaction is one of a predefined set of interactions, recorder script 240 may increment a counter. In some implementations, the recorder script 240 can compare the number of interactions to a maximum number of interactions. If the recorder script 240 determines that the number of interactions is greater than or equal to the maximum number of interactions, the recorder script 240 may terminate the recording 110 of the application 238 executing on the client device 105. If recorder script 240 determines that the number of interactions is less than the maximum number of interactions, recorder script 240 may continue to record application 238 executing on client device 105.
In some implementations, the recorder script 240 can maintain a log of client device 105 interactions with the application 238. The interaction log may include the type of interaction, the time of the interaction, and the coordinates of the interaction. The recorder script 240 may record screen tap events that occur at a pixel location (e.g., 340,125) on a display on the client device 105 into an interaction log. In some implementations, the recorder script 240 can determine whether the application 238 is executing on the client device 105. In some implementations, in response to determining that the application 238 is executing, the recorder script 240 can initiate or begin recording an interaction log. In some implementations, the maintenance of the interaction log may last for a predefined period of time. In some implementations, the recorder script 240 can transmit the log of interactions of the client device 105 with the application 238 to the record aggregator 222 via the network interface 232 and the network 205.
Once the recording of the application 238 executing on the client device 105 is terminated, the recorder script 240 may transmit the recording 110 (e.g., videos 110A-110N) to the recording aggregator 222 via the network interface 232 and the network 205. After the client device 105 transmits the application 238 and the record 110 for the application 238, the record aggregator 222 may save or store the received record 110 onto the recorded video database 224. The record aggregator 222 may assign a record identifier to the received record 110 in the recorded video database 224. The record aggregator 222 may assign or associate the records 110 with the corresponding applications 238 using the application identifiers. In some implementations, in response to receiving a record of the application 238 executing on the client device 105, the record aggregator 222 may increment a counter for the records 110A-110N.
In some implementations, if the record aggregator 222 receives an interaction log (no records) of the client device 105 with the application 238, the record aggregator 222 can generate the record 110 of the application 238 executing on the client device 105 from the interaction log. In some implementations, the record aggregator 222 can access images (e.g., skin or screenshots) of the applications 238. In some implementations, the record aggregator 222 can identify the type of interaction, the time of the interaction, and the coordinates of the interaction for each interaction recorded in the interaction log. In some implementations, the record aggregator 222 can generate corresponding images (e.g., mouse icons) for the respective interactions. In some implementations, the record aggregator 222 can overlay, on a frame-by-frame basis, corresponding images over the images of the applications 238 for each interaction recorded in the interaction log to generate the record 110 of the application 238 executing on the client device 105.
The video selector 226 may generate the performance metrics for each received recording 110 for the application 238 in the recorded video database 224. In some implementations, the video selector 226 can set the performance metric of each received recording 110 to an initial value. The initial value may correspond to a default starting value to be adjusted based on subsequent data. The performance metrics may later be used to select one or more of the records 110 of the application 238 executing on the client device 105. The performance metrics may later be used to select one or more of the records 110 of the application 238 executing on the client device 105. The performance metric may be an interaction rate, a duration of time the record 110 is played on another client device 105, a conversion rate, etc., or any combination thereof. In some embodiments, the performance metric may be a metric associated with the computer program itself, such as an obtained level, a number of features utilized, a number of predetermined achievements obtained, or any other such identification. In some implementations, the video selector 226 can store the received performance metrics of the recording 110 at the recorded video database 224.
In some implementations, the video selector 226 may maintain an aggregate performance model for the record 110 of received executions of the application 238 on one or more client devices 105. The video selector 226 may later use the aggregate performance model to select one or more of the records 110 of the application 238 to be distributed to other client devices 105. The aggregate performance model may be used for any model of machine learning, such as an Artificial Neural Network (ANN), a Support Vector Machine (SVM), a deep structure learning model, an unsupervised learning model, a supervised learning model, or the like. In some implementations, in the aggregate performance model, the video selector 226 may assign initial values to the weights of the individual records 110 of the application 238 in the record video database 224. The initial values may be equal for each record 110 of the application 238. If there are N recordings 110 of the application 238 and the aggregate performance model used is an artificial neural network, the video selector 226 may initially assign 1/N to each recording as an initial weight. In some implementations, the video selector 226 may store the aggregate performance model for the received record 110 at the recorded video database 224.
In some implementations, the initial values of the aggregate performance model settings for the received records 110 for the application 238 executing on the client device 105 may be based on one or more features identified from the records. In some implementations, the initial values of the performance metric settings for the received record 110 for the application 238 executing on the client device 105 may be based on one or more features identified from the record. In some implementations, the video selector 226 may use an image recognition algorithm to identify one or more features within the recording 110 of the application 238 executing on the client device 105. The image recognition algorithm may include: for example, an edge detection algorithm, a corner detection algorithm, a blob detection algorithm, a scene cut algorithm, or any other machine learning technique for identifying objects within the records 110 of the application 238 executing on the client device. In some implementations, the video selector 226 may set the initial value set for the record 110 based on the number of features or the type of features identified from the respective record. If the video selector 226 detects a scene cut at some time during the recording, the video selector 226 may assign a higher initial score than the recording 110 without a scene cut. In some embodiments, the initial value set based on the number of features or the type of features may be adjusted by using a multiplication factor. The higher the number of features identified in the recording, the higher the multiplication factor used by video selector 226 to set the initial value of the performance metric for recording 110 of application 238 executing on client device 105.
Subsequently, for the second set 105 'of client devices, the application distributor 218 may provide, distribute, or transmit the application 238 and the interaction measurement script 242 to post the interaction of the client device 105' with the application 238 after playing one of the records 110. If the application distributor 218 determines that the number of records 110 of execution of the application 238 is greater than or equal to the threshold, the record aggregator 222 may determine whether the number of plays made for the records 110 of execution of the application 238 is less than the threshold number of plays. The threshold number of plays may represent a minimum number of samples for collecting interaction data across multiple client devices 105 to determine whether any of the records 110 are effective in guiding a user through the manner in which the application 238 is used. After storing the records 110 of the execution of the application 238, the record aggregator 222 may maintain counters for the number of plays at the plurality of client devices 105 in all records 110 of the execution of the application 238. The record aggregator 222 may increment a counter for the number of plays each time any one of the records 110 is played by another client device 105.
If the record aggregator 222 determines that the number of plays of the records 110 for execution of the application 238 is less than the threshold number of times, the video selector 226 may select one of the records 110 from the recorded video database 224. In some implementations, if the record aggregator 222 determines that the number of plays of the records 110 for execution of the application 238 is less than a threshold number of times, the video selector 226 may randomly select one of the records 110 from the recorded video database 224 by using a pseudo-number generator. The pseudo-number generator may allow video selector 226 to avoid a locally optimal selection of recording 110 by using the aggregate performance model, rather than a globally optimal selection of recording 110.
In some implementations, the video selector 226 can select a record 110 from a plurality of records 110 in the recorded video database 224 based on the performance metrics of the respective record. In some implementations, the video selector 226 may use an aggregate performance model to calculate performance metrics for individual ones of the records 110. In some embodiments, the application distributor 218 may set or adjust the performance metric according to random weights generated by the pseudo-number generator when selecting a record. In some implementations, the video selector 226 can rank the records 110 in the recorded video database 224 by the respective performance metrics. In some implementations, the video selector 226 can select the record 110 corresponding to the highest ranked performance metric. In some implementations, the video selector 226 may randomly select a record 110 from the subset of records 110 having the highest N ranked performance metrics.
In response to selecting one of the records 110 from the recorded video database 224, the application distributor 218 may transmit the application 238, the selected record, and the interaction measurement script 242 to the client device 105 via the network 205. In some implementations, after receiving the record 110 of the application 238 executing on the first client device 105, the application distributor 218 can receive a request from another client device 105 to download the application 238. The interaction measurement script 242 may be used to post interactions at the application 238 on the client device 105 to allow the video selector 226 to select an optimal video when instructing the end user how to operate the application 238.
In some implementations, prior to transmitting the interaction measurement script 242 and the record, the application distributor 218 can determine whether the client device 105 has previously downloaded or installed the application 238. In some implementations, the application distributor 218 can identify the number of times the application 238 has been downloaded by the client device 105. This number may be maintained by the application distributor 218 in the application database 220. If the application distributor 218 determines that the number of times is equal to zero, the application distributor 218 may determine that the client device 105 has not previously downloaded or installed the application 238. In response to determining that client device 105 has not previously downloaded or installed application 238, application distributor 218 may transmit application 238 and interaction measurement script 242 to client device 105. In some implementations, the application distributor 218 can determine that the client device 105 has previously downloaded or installed the application 238 based on the request. In some implementations, the request to download the application 238 may include an indicator specifying whether the application 238 has been installed or downloaded by the client device 105. The user of the client device 105 may have previously installed the application 238, but later uninstalled the application 238 from the client device 105. In some implementations, based on an indicator specifying a request that the client device 105 has not installed the application 238, the application distributor 218 can transmit the application 238, the selected record, and the interaction measurement script 242 to the client device 105. In some implementations, the application distributor 218 may send a prompt to the client device 105 before providing the interaction measurement script 240 to the client device 105 in order to allow transmission of the interaction measurement script 240 for recording interactions of the client device 105 with the application 238.
The client device 105 may receive the application 238, the selected record, and the interaction measurement script 242 from the application distributor 218 via the network 205. In some implementations, the client device 105 can also receive a record identifier corresponding to the selected record. Upon receiving application 238 and interaction measurement script 242, client device 105 may store or install application 238 and interaction measurement script 242 onto memory 236. In some implementations, receipt of the application 238 and the interaction measurement script 242 may cause or trigger the client device 105 to perform functions specified in the application 238 or the interaction measurement script 242. The client device 105 may play the selected record 110 of the program 238 executing on another client device 105. After playing the recording, the client device 105 may execute the application 238 by using the processor 230. Interaction measurement script 242 may determine whether application 238 is executing. In some implementations, the interaction measurement script 242 may monitor the processor 230 and memory 236 of the client device 105 to detect instantiation of the application 238. If interaction measurement script 242 determines that application 238 has not yet executed on the client device, interaction measurement script 242 may continue to monitor the instantiation of application 238 on client device 105 for a predetermined period of time.
If the interaction measurement script 242 determines that the application 238 is executing on the client device 105, the interaction measurement script 242 may begin logging or recording one or more interactions with the application 238 executing on the client device 105. After playing the record, the interaction measurement script 242 may generate an interaction log. The interaction measurement script 242 may instantiate, create, or generate an interaction log file on the memory 236 of the client device 105 that records interactions. The interaction measurement script 242 may monitor the triggering (e.g., scrolling, tapping, clicking, sliding, pressing a key, etc.) of an event listener or event handler while the application is executing on the client device 105. In some implementations, the interaction measurement script 242 can identify the type of interaction, the coordinates of the interaction, and the time of the interaction. Interaction measurement script 242 may write a log file into memory 236 whenever a trigger of an event listener or event handler is detected. In some implementations, the interaction measurement script 242 may write the type of interaction identified, the coordinates of the interaction, and the time of the interaction. In some implementations, the interaction measurement script 242 may transmit the type of identified interaction, coordinates of the interaction, and time of the interaction by the client device 105 with the application 238 when a corresponding event listener or event process is triggered.
In some implementations, the interaction measurement script 242 may record interactions with the application 238 executing on the client device 105 for a predefined time. In some implementations, the interaction measurement script 242 may maintain a timer of the recording time of the record 110 for interactions of the client device 105 with the application 238. In some implementations, the interaction measurement script 242 may compare the recording time to a predefined time or a maximum time frame. The maximum time frame may correspond to a maximum time of the recording 110 of the interaction of the client device 105 with the application 238. In some implementations, the maximum time frame may be predefined based on an amount of storage at the data processing system 210. In some implementations, the maximum time frame can be preset by a third-party computing device providing the application 238. If the recording time is greater than or equal to the maximum time frame, the interaction measurement script 242 may terminate the recording of the interaction of the client device 105 with the application 238. If the recording time is less than the maximum time frame, the interaction measurement script 242 may continue to record interactions of the client device 105 with the application 242.
In some implementations, the interaction measurement script 242 may maintain a number of interactions by the client device 105 with the application 238 by using a counter. In some implementations, the interaction measurement script 242 may determine whether the identified interaction type is one of a predefined set of interactions. Interaction measurement script 242 may record clicks and keystrokes, but exclude slides and scrolls from the interaction log. If the type of interaction is one of a predefined set of interactions, interaction measurement script 242 may increment a counter. In some implementations, the interaction measurement script 242 may compare the number of interactions to a maximum number of interactions. If the interaction measurement script 242 determines that the number of interactions is greater than or equal to the maximum number of interactions, the interaction measurement script 242 may terminate the recording of the interactions by the client device 105 with the application 238. If interaction measurement script 242 determines that the number of interactions is less than the maximum number of interactions, interaction measurement script 242 may continue to record interactions by client device 105 with application 238.
If the interaction measurement script 242 determines that the application 238 has not executed on the client device 105 within the predefined time period, the interaction measurement script 242 may set the interaction log to null, indicating a lack of interaction by the client device 105 with the application 238. The interaction measurement script 242 may transmit the interaction log set to null to the video selector 226 via the network interface 232. In some implementations, interaction measurement script 242 may transmit an indicator specifying the lack of interaction of the client device with application 238. The interaction measurement script 242 may utilize the identifier or the interaction log set to null to transmit a record identifier corresponding to the record 110 played at the client device 105 to the video selector 226.
The video selector 226 may receive an interaction log from the client device 105 recording interactions of the client device 105 with the application 238 after playing the recording. Upon receiving the interaction log from the client device 105, the video selector 226 may save or store the interaction log to the interaction log database 228. The interaction log database 228 may maintain an interaction log in terms of records 110 of execution of the application 238. The video selector 226 may associate the interaction log with the corresponding record 110 by using the record identifier of the record. In some implementations, in response to receiving the interaction log, the video selector 226 can increment a counter for the number of play records 110.
For each record 110 in the recorded video database 224, the video selector 226 may update the performance metric based on the corresponding received interaction log from the client device 105. The video selector 226 may update the aggregate performance model for the record 110 based on the interaction log from the client device 105. The video selector 226 may identify which record 110 corresponds to the interaction log based on the record identifier. In some implementations, the video selector 226 can access the interaction log database 228 to retrieve or retrieve interaction logs to update performance metrics or aggregate performance models. In some implementations, the video selector 226 may update the performance metrics or the aggregate performance model at periodic intervals. In some implementations, in response to receiving the interaction log, the video selector 226 may adjust one or more weights of the aggregate performance model to another value.
In some implementations, the video selector 226 may update the performance metrics or the aggregate performance model of the record 110 of the execution of the application 238 after the number of times the record 110 is played reaches a threshold. The video selector 226 may identify the number of times the record 110 of execution of the application 238 is played at the plurality of client devices 105. In some implementations, the video selector 226 can access the recorded video database 224 to identify the number of times the record 110 is played. In some implementations, the video selector 226 can determine whether the record 110 was played a number of times greater than or equal to a threshold number of plays. The threshold number of plays may indicate or specify a cutoff of sufficient sample size for updating the performance metrics or the calculation of the aggregate performance model. If the video selector 226 determines that the number of recordings 110 of execution of the application 238 is greater than or equal to the threshold number, the video selector 226 may update the performance metrics or the aggregate performance model. If the video selector 226 determines that the number of recordings 110 of execution of the application 238 is less than the threshold number, the video selector 226 may continue to accumulate interaction logs from the plurality of client devices 105 for the recordings 110 of execution of the application 238.
To update the performance metrics or aggregate performance model for the individual records, the video selector 226 may iterate through each interaction in the interaction log for the record 110 of execution of the application 238. In some implementations, the video selector 226 may update the performance metrics or aggregate performance model with the identified individual interactions, individual interaction logs, or with all interaction logs for the record 110 of the execution of the application 238. By iterating through the interactions recorded in the various interaction logs, video selector 226 may identify the type of interaction (event type), the coordinates of the interaction (event coordinates, orientation, or position), and the time of the interaction (event time). The video selector 226 may use the type of interaction identified, the coordinates of the interaction, and the time of the interaction in updating the recorded performance metrics or the calculation of the aggregate performance model.
Based on the type of interaction, the video selector 226 may calculate, adjust, or update performance metrics of the recording 110 of the execution of the application 238. In some implementations, the video selector 226 can identify a positive or negative adjustment to the performance metric of the record 110 from an initial value or another value based on the type of interaction. The positive and negative adjustments may each be a fixed constant (e.g., a multiple factor greater or less than 1) or a range of values depending on the type of interaction. In some implementations, the video selector 226 can identify whether the identified interaction type belongs to a set of orthogonal interaction types or a set of negative interaction types. The set of orthogonal interaction types may correspond to the type of interaction being adjusted (e.g., click, screen tap, scroll down, etc.). The set of negative interaction types may correspond to the type of interaction that is negatively adjusted (e.g., mouse movement, scroll up, hover, etc.). In general, the set of orthogonal interaction types may instruct the user to properly operate the application 238 in a skilled manner after viewing the recording. Conversely, a set of negative interaction types may indicate that the user is operating the application 238 in an untrained or undesirable manner after viewing the recording. If the type of interaction is identified as belonging to the positive set, video selector 226 may increment, modify, or adjust the performance metric by a positive adjustment. If the type of interaction is identified as belonging to a negative set, video selector 226 may increment, modify, or adjust the performance metric by a negative adjustment.
In some implementations, the video selector 226 may adjust, change, or update the aggregate performance model based on the type of interaction. In some implementations, using the type of interaction, the video selector 226 can adjust, change, or update one or more weights of the aggregate performance model. In some implementations, the video selector 226 can identify a positive or negative weight adjustment to one or more weights of the aggregate performance model for the recording 110, starting from an initial value or another value, based on the type of interaction. The positive and negative weight adjustments may each be a fixed constant (e.g., a multiplication factor greater or less than 1) or a range of values depending on the type of interaction. A positive weight adjustment of one or more weights of the aggregate performance model may result in a higher likelihood of selecting a corresponding record 110 of execution of the application 238 in response to a future request to download the application 238. A negative weight adjustment to one or more weights of the aggregate performance model may result in a lower likelihood of selecting a corresponding record 110 of execution of the application 238 in response to a future request to download the application 238. In some implementations, the video selector 226 can identify whether the type of interaction identified belongs to a set of orthogonal interaction types or a set of negative interaction types. If the type of interaction is identified as belonging to a positive set, the video selector 226 may increment, modify, or adjust one or more weights of the aggregate performance model by positive weight adjustment. If the type of interaction is identified as belonging to a negative set, the video selector 226 may increment, modify, or adjust one or more weights of the aggregate performance model by a negative weight adjustment.
Based on the coordinates of the interaction, the video selector 226 may calculate, adjust, or update performance metrics of the recording 110 of the execution of the application 238. In some implementations, the video selector 226 can identify a positive or negative adjustment to the performance metric of the recording 110 based on the coordinates of the interaction. The positive and negative adjustments may each be a fixed constant (e.g., a multiplication factor greater or less than 1) or a range of values depending on the coordinates of the interaction. In some implementations, the video selector 226 can identify whether the identified type of interaction belongs to a positive coordinate range or a negative coordinate range. The positive coordinate range may correspond to the coordinates of the interaction being positively adjusted. The positive coordinate range may correspond to the coordinates of the interaction being positively adjusted. In general, the positive coordinate range may indicate that the user is operating the application 238 correctly in a skilled manner after viewing the recording. On the other hand, a negative coordinate range may indicate that a user operates an application 238 in an untrained or undesirable manner even after viewing another user operating the application 238. In some embodiments, the positive coordinate range and the negative coordinate range may be predefined. In some implementations, the video selector 226 can set the positive coordinate range and the negative coordinate range using one or more features in the record 110 identified using the image recognition algorithm. By applying the image recognition algorithm, the video selector 226 may detect a command button of the user interface, recognize a coordinate range of the command button, and set the recognized coordinate range as a positive coordinate range. If the coordinates of the interaction are identified as belonging to a positive range, the video selector 226 may increment, modify, or adjust the performance metric by a positive adjustment. If the coordinates of the interaction are identified as belonging to a negative range, video selector 226 may increment, modify, or adjust the performance metric by a negative adjustment.
In some implementations, the video selector 226 may adjust, change, or update the aggregate performance model based on the coordinates of the interaction. In some implementations, the video selector 226 can identify a positive or negative weight adjustment to one or more weights of the aggregate performance model for the recording 110 based on the coordinates of the interaction. The positive and negative weight adjustments may each be a fixed constant (e.g., a multiplication factor greater or less than 1) or a range of values depending on the coordinates of the interaction. In some implementations, the video selector 226 can identify whether the coordinates of the identified interaction fall within a positive coordinate range or a negative coordinate range. A positive weight adjustment of one or more weights of the aggregate performance model may result in a higher likelihood of selecting a corresponding record 110 of execution of the application 238 in response to a future request to download the application 238. A negative weight adjustment to one or more weights of the aggregate performance model may result in a lower likelihood of selecting a corresponding record 110 of execution of the application 238 in response to a future request to download the application 238. If the coordinates of the interaction are identified as belonging to a positive range, the video selector 226 may increment, modify, or adjust one or more weights of the aggregate performance model by positive weight adjustment. If the coordinates of the interaction are identified as belonging to a negative range, the video selector 226 may increment, modify, or adjust one or more weights of the aggregate performance model by a negative weight adjustment.
Based on the time of interaction, the video selector 226 may calculate, adjust, or update performance metrics of the recording 110 of the execution of the application 238. The time of interaction may be related to the start of execution of the application 238 after the recording is played. In some implementations, the video selector 226 can identify a positive adjustment or a negative adjustment from an initial value or another value based on the time of the interaction. The positive and negative adjustments may each be a fixed constant (e.g., a multiplication factor greater or less than 1) or a range of values depending on the time of interaction. In some implementations, the video selector 226 can identify whether the time of the identified interaction falls within a positive or negative time range. The positive time range may correspond to the time of the interaction making the positive adjustment. The negative time range may correspond to the time of the interaction making the negative adjustment. In general, the positive time range may indicate that the user is operating the application 238 in a skilled manner after viewing the recording, and may correspond to interactions that occur early in the interaction log. On the other hand, a negative time range may indicate that the user is operating the application 238 in an untrained or undesirable manner even after viewing another user operating the record 110 of the application 238, and may correspond to an interaction that occurs later in the interaction log. If the time of interaction is identified as being within a positive range, the video selector 226 may increment, modify, or adjust the performance metric by a positive adjustment. If the time of interaction is identified as belonging to a negative range, video selector 226 may increment, modify, or adjust the performance metric by a negative adjustment.
In some implementations, the video selector 226 may calculate, adjust, or update performance metrics of the recording 110 of the execution of the application based on multiple interactions. In some implementations, the video selector 226 can identify multiple interactions. In some implementations, the video selector 226 can determine or calculate a density of the multiple interactions. The density of the multiple interactions may indicate the immediacy or sparseness between the individual interactions recorded in the interaction log. In some instances, the greater the density of the multiple interactions, the more likely the user operating application 238 will be to correctly use application 238 after viewing recording 110. In some implementations, the video selector 226 can determine whether the density of the multiple interactions is greater than or equal to a threshold density. If the video selector 226 determines that the density is greater than or equal to the threshold density, the video selector 226 may adjust the performance metric by a positive adjustment. If the video selector 226 determines that the density is less than the threshold density, the video selector 226 may adjust the performance metric by a negative adjustment.
In some implementations, the video selector 226 may adjust, change, or update the aggregate performance model based on the time of interaction. In some implementations, the video selector 226 can identify a positive or negative weight adjustment to one or more weights of the aggregate performance model for the recording 110 based on the time of the interaction. The positive and negative weight adjustments may each be a fixed constant (e.g., a multiplication factor greater or less than 1) or a range of values depending on the time of interaction. In some implementations, the video selector 226 can identify whether the time of the identified interaction falls within a positive or negative time range. A positive weight adjustment of one or more weights of the aggregate performance model may result in a higher likelihood of selecting a corresponding record 110 of execution of the application 238 in response to a future request to download the application 238. A negative weight adjustment to one or more weights of the aggregate performance model may result in a lower likelihood of selecting a corresponding record 110 of execution of the application 238 in response to a future request to download the application 238. If the time of interaction is identified as being within a positive range, the video selector 226 may increment, modify, or adjust one or more weights of the aggregate performance model by positive weight adjustment. If the time of interaction is identified as belonging to a negative range, the video selector 226 may increment, modify, or adjust one or more weights of the aggregate performance model by a negative weight adjustment.
In some implementations, the video selector 226 may calculate, adjust, or update one or more weights of the aggregate performance model of the record 110 for execution of the application based on multiple interactions. In some implementations, the video selector 226 can identify multiple interactions. In some implementations, the video selector 226 can determine or calculate a density of the multiple interactions. In some implementations, the video selector 226 can determine whether the density of the multiple interactions is greater than or equal to a threshold density. If the video selector 226 determines that the density is greater than or equal to the threshold density, the video selector 226 may adjust one or more weights of the aggregate performance model by a positive weight adjustment. If the video selector 226 determines that the density is less than the threshold density, the video selector 226 may adjust one or more weights of the aggregate performance model by negative weight adjustment.
The video selector 226 may truncate the recording 110 of the execution of the application 238. The video selector 226 may set the length of time of the recording 110 of the execution of the application 238 based on the start time and the end time. In some implementations, the video selector 226 can determine the start time and the end time based on interactions recorded in the recorded interaction log. In some implementations, the video selector 226 can identify a first time of the interaction and a last time of the interaction through the log of interactions of the record 110 of the application 238. In some implementations, the video selector 226 can set a first time of the interaction as a start time of the recording 110 and a last time of the interaction as an end time of the recording. In some implementations, the video selector 226 can determine the average first time and the average last time from the interaction logs of the records 110 from the plurality of client devices 105. In some implementations, the video selector 226 can set the average first time of interaction as the start time of the recording 110 and the average end time of interaction as the end time of the recording. In some implementations, the video selector 226 may determine, through the log of interactions of the record 110 of the application 238, a density or rolling average over various time windows of the time of the interaction with the application 238. In some implementations, the video selector 226 can identify the time range for which the density or rolling average is highest. In some implementations, the video selector 226 can determine the start time and the end time based on the identified range of times corresponding to the highest density or rolling average.
In some implementations, in response to receiving the recorded interaction logs, the video selector 226 may determine the start time and end time of the corresponding record 110 based on the respective performance metrics or an aggregate performance model. In some implementations, as interactions in the various interaction logs of the record 110 are iterated and the performance metrics are updated, the video selector 226 may identify an initial time at which the performance metrics are updated by a positive weight adjustment and a subsequent time at which the performance metrics are updated by a negative weight adjustment. In some implementations, while iterating through the interactions in the respective interaction logs of the records 110 and updating the aggregate performance model, the video selector 226 can identify an initial time to update one or more weights of the aggregate performance model with a positive weight adjustment and a subsequent time to update one or more weights of the aggregate performance model with a negative weight adjustment. Using the identified initial time and subsequent time, the video selector 226 may set the start time of the recording 110 to the identified initial time and the end time of the recording 110 to the identified subsequent time. In some implementations, the video selector 226 may apply an offset to the identified initial time and subsequent times before setting the start time and end time of the recording 110 of the execution of the application 238.
Thereafter, for the third set 105 "of client devices, the application distributor 218 may provide, distribute, or transmit the application 238 and player script 244 to play the selected record 110. If the record aggregator 222 determines that the number of plays for the records 110 of the execution of the application 238 is greater than or equal to a threshold number of times, the video selector 226 may select one of the records 110 of the application 238. In some implementations, the video selector 226 may rank the records 110 of the application 238 by a performance metric. In some implementations, the video selector 226 can identify the recording of the application 238 having the highest performance metric. In some implementations, in response to receiving a request to download the application 238, the video selector 22 may generate the performance metrics by one or more weights of the aggregate performance model for each of the records 110 of the execution of the application 238. In some implementations, in conjunction with the video selector 226, the application distributor 218 can transmit the application 238 and the selected video 110.
The client device 105 may receive the application 238, the selected record 110, and the player script 244 from the application distributor 218 via the network 205. In some implementations, the client device 105 can receive the application 238 and the selected record 110 from the application distributor 218 via the network 205. In some implementations, there may already be another application (e.g., a media player, a web browser, etc.) for playing the selected recording 110 at the client device 105. Upon receiving the application 238 and the player script 244, the client device 105 may store or install the application 238 and the player script 244 onto the memory 236. In some implementations, receipt of the application 238 and player script 244 may cause or trigger the client device 105 to perform the functions specified in the application 238 or player script 244. In some implementations, the player script 244 can play the record 110. In some implementations, receiving the selected recording 110 may cause or trigger the client device 105 to play the recording 110 using a pre-installed application (e.g., a previously installed media player or web browser, etc.). In some implementations, the client device 105 can play the selected record 110 by using a pre-installed application. After playing the recording, the client device 105 may execute the application 238 by using the processor 230.
By exchanging data between the data processing system 210 and the client device 105 (or multiple client devices 105) in this manner, the system 200 may automatically generate records 110 of the application 238 executing on multiple client devices 110, and then select the most appropriate or optimal record 110 from the records 110 to guide or train the user to operate the application 238 at the client device 105. Likewise, the system 200 described in detail herein may thus reduce the execution time of the application 238 by training the user to properly use and run the application 238, thereby saving client-side power consumption, network bandwidth, and computer processing time at the client device 105, the data processing system 210, and the network 205.
3A-3C are flow diagrams depicting a method 300 of a client-side computing device dynamically modifying attributes of content elements within an information resource in accordance with an illustrative embodiment. The functions described herein with respect to the method 300 may be performed or carried out by the data processing system 210 or the client device 105 as shown in fig. 2, the content rendering modification system 300 as shown in fig. 3, or a computing device as shown in fig. 4, or any combination thereof.
In more detail, the client device 105 may transmit a request to download an application (step 302). The data processing system 210 may receive a request to download an application (step 304). In some implementations, the client device 105 may not have previously downloaded, installed, or executed an application. The request to download the application may be triggered by a program running on the client device 105, such as an application distribution platform that lists various applications available for download.
The data processing system 210 may determine whether the number of recorded videos applied is less than a threshold number of recorded videos (step 306). The data processing system 210 may use the threshold to accumulate or integrate more records of the application executing or operating on the client device. If the number of recorded videos is greater than or equal to the threshold number, the method 300 proceeds to stage B310 (see FIG. 3B). If the number of recorded videos is less than the threshold number, the data processing system 210 may transmit an application and recorder script (step 308). The client device 105 may receive the application and the recorder script (step 312). The recorder script may cause or trigger the client device 105 to perform the functions specified in the recorder script.
If the application has executed, client device 105 may begin recording video of the application running on client device 105 (step 316). In some implementations, the client device 105 may begin writing video files in any format on a memory at the client device 105 to record the video. Client device 105 may identify dimensions (e.g., pixel coordinates and size) of the application running thereon. The recording of video may be limited by the dimensionality of the application.
The data processing system 210 may receive the recorded video from the client device 105 (step 330). The data processing system 210 may generate a performance model for the recorded video (step 332). In some implementations, the data processing system 210 can maintain a performance model for the recorded video by using an Artificial Neural Network (ANN), a Support Vector Machine (SVM), a deep structure learning model, an unsupervised learning model, a supervised learning model, or the like. The data processing system 210 may identify features in the recorded video (step 334). In some implementations, the data processing system 210 can use image recognition algorithms to identify features within frames of the recorded video. Examples of image recognition algorithms include: an edge detection algorithm, a corner detection algorithm, a blob detection algorithm, a scene cut algorithm, or any other machine learning technique. The data processing system 210 may set initial weights in the performance model of the recorded video (step 336).
Moving to stage B310, the data processing system 210 may determine whether the number of times the video was played is less than a threshold number of times (step 338). If the video is played a number of times greater than or equal to the threshold number of times, the method 300 may move to stage C340 (see FIG. 3C). If the number of times the video is played is greater than or equal to the threshold number of times, the data processing system 210 may select one of the recorded videos (step 342). In some implementations, the data processing system 210 can use the performance metrics of all recorded videos to identify one video with the highest performance metric. In another example, the data processing system 210 may randomly select a recorded video. Data processing system 210 may transmit the application and interaction measurement script (step 344).
The data processing system 210 may receive the interaction log (step 362). The data processing system 210 may then continue traversing the interactions recorded in the interaction log to update the performance metrics of the video in steps 364 through 374. The data processing system 210 may identify the type of interaction (step 364). The data processing system 210 can identify coordinates of the interaction (step 366). The data processing system 210 may identify the time of the interaction (step 368).
Using the identified type of interaction, coordinates of the interaction, and time of the interaction, the data processing system 210 may update a performance model of the video (step 370). In some implementations, the data processing system 210 can identify whether to apply positive weight adjustments to the performance model to increase the likelihood of selecting a video, or to apply negative weight adjustments to the performance model to decrease the likelihood of selecting a video. The data processing system 210 may determine whether the type of interaction identified, the coordinates of the interaction, and the time of the interaction belong to a positive set or a positive range or a negative set or a negative range. A positive set or range may correspond to the application of positive weight adjustments and a negative set or range may correspond to the application of negative weight adjustments. Based on the identification, the data processing system 210 may adjust a performance model of the video.
To determine whether to continue traversing, the data processing system 210 can determine whether the number of interactions traversed is less than or equal to the length of the interaction log (step 372). If the number of interactions traversed is less than or equal to the length of the interaction log, the data processing system 210 may identify the next interaction on the interaction log (step 374). The data processing system 210 repeats the functions in steps 364 through 372 for the next identified interaction.
If the number of interactions traversed is greater than the length of the interaction log, the data processing system 210 may calculate a performance metric for the video through the performance model (step 376). In some implementations, the performance metrics can indicate the effectiveness of the video in guiding the manner in which the end user operates the corresponding application. The data processing system 210 may determine the start time and end time of the video by the performance metrics and the interaction time from the interaction log (step 378). In some implementations, the data processing system 210 can determine a rolling average of the number of interactions over the time window and calculate the start and end times of the video based on at which time window the rolling average is greatest. The data processing system 210 can truncate the video to a start time and an end time (step 380).
Continuing to stage C340, the data processing system 210 can select the video with the highest performance metric (step 382). In some implementations, the data processing system 210 can rank the videos by performance metric and select the video with the highest performance metric. The data processing system 210 may transmit the application and the selected video (step 384). Client device 105 may receive the application and the selected video (step 386). Client device 105 may play the video (step 388). Client device 105 may execute an application (step 390).
Fig. 4 shows a general architecture of an illustrative computer system 400 that may be employed to implement any of the computer systems discussed herein (including: the system 210 and its components, such as the application distributor 218, the record aggregator 222, and the video selector 226 or the application 238 and its modules, the recorder script 240, the player script 244, and the interaction measurement script 242 and its components), according to some embodiments. Computer system 400 may be used to provide information for display via network 205. The computer system 400 of fig. 4 includes one or more processors communicatively coupled to a memory 425, one or more communication interfaces 405, and one or more output devices 410 (e.g., one or more display units), and one or more input devices 415. The processor 420 may be included in the data processing system 210 or other components of the system 210, such as the application distributor 218, the recording aggregator 222, and the video selector 226. The processor may be included in client device 105 or modules thereof, such as application 238, recorder script 240, interaction measurement script 242, and player script 244.
In computer system 400 of fig. 4, memory 425 may comprise any computer-readable storage medium and may store computer instructions (such as instructions for the respective system to implement the various functions described herein) and any data related thereto, any data generated thereby, or any data received via the communication interface(s) or input device(s), if any. Referring again to the system 210 of fig. 1, the data processing system 210 may include a memory 425 to store information regarding the inventory of one or more content units, the availability of reservations of one or more content units, and the like. The memory 425 may include a database 245. The processor(s) 420 shown in fig. 4 may be used to execute instructions stored in the memory 425, and in so doing, may also read from and write to the memory various information processed and/or generated in accordance with the execution of the instructions.
The processor 420 of the computer system 400 shown in fig. 4 may also be communicatively coupled to or control the communication interface(s) 405 to transmit or receive various information in accordance with the execution of instructions. In some embodiments, the communication interface(s) 405 may be coupled to a wired or wireless network, bus, or other communication device, and thus, may allow the computer system 400 to transmit information to and receive information from other devices (e.g., other computer systems). Although not explicitly shown in the system of fig. 1, one or more communication interfaces facilitate the flow of information between components of the system 400. In some implementations, the communication interface(s) can be configured (e.g., via various hardware or software components) as a website that provides access to at least some aspects of the computer system 400. Examples of the communication interface 405 include a user interface (e.g., a web page) through which a user may communicate with the data processing system 210.
An output device 410 of the computer system 400 shown in fig. 4 may be provided to allow various information related to the execution of the instructions to be viewed or otherwise perceived. Input device(s) 415 may be provided to allow a user to manually adjust, select, enter data, or interact with the processor during execution of instructions. Additional information regarding the general computer system architecture that the various systems discussed herein may employ is further provided herein.
Implementations and operations of the subject matter described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware embodied in tangible media, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. The program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, when the computer storage medium is not a propagated signal, the computer storage medium can comprise a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The features disclosed herein may be implemented on a smart television module (or connected television module, hybrid television module, etc.) that may include processing circuitry configured to integrate internet connectivity with a more traditional television program source (e.g., received via cable, satellite, wireless, or other signals). The smart television module may be physically incorporated into the television, or may comprise a separate device, such as a set-top box, a blu-ray or other digital media player, a game console, a hotel television system, and other companion devices. The smart television module may be configured to allow viewers to search for and find videos, movies, photos, and other content on a network, on a local cable television channel, on a satellite television channel, or stored on a local hard drive. A set-top box (STB) or set-top unit (STU) may include an information application device that may contain a tuner and connect to a television and an external signal source, convert the signal to content, and then display the content on a television screen or other display device. The smart television module may be configured to provide a home screen or top-level screen that includes icons for a number of different applications, such as a web browser and various streaming media services, connected cable or satellite media sources, other network "channels," and so forth. The smart television module may be further configured to provide an electronic program guide to the user. A companion application for the smart television module may operate on the mobile computing device to provide additional information to the user about available programming, to allow the user to control the smart television module, and so on. In alternative embodiments, the features may be implemented on a laptop or other personal computer, smart phone, other mobile phone, handheld computer, tablet PC, or other computing device.
The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored in one or more computer-readable storage devices or received from other sources.
The terms "data processing apparatus," "data processing system," "user device," or "computing device" encompass all kinds of apparatus, devices, and machines for processing data, including: such as a programmable processor, a computer, a system on a chip, or a combination or multiple of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The device and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. The application distributor 218, the application database 220, the record aggregator 222, the recorded video database 240, the video selector 226, and the interaction log database 228 may include or share one or more data processing devices, computing devices, or processors. Application 238, recorder script 240, interaction measurement script 242, and player script 244 can include or share one or more data processing devices, computing devices, or processors.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
A processor adapted to execute a computer program comprises: such as a general purpose microprocessor, a special purpose microprocessor, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of the computer are: a processor for performing actions in accordance with instructions, and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, the computer need not have such a device. Further, the computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game player, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including: for example, semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices), magnetic disks (e.g., internal hard disk or removable disk), magneto-optical disks, CD-ROM disks, and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having: a display device for displaying information to a user, for example, a CRT (cathode ray tube), plasma, or LCD (liquid crystal display) monitor; and a keyboard and a pointing device, such as a mouse or a trackball, by which a user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. In addition, the computer may transmit the document to a device used by the user and receive the document from the device; the user is interacted with by sending a web page to a web browser on the user device of the user in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a user computer having a graphical user interface or a web browser through which a user can interact with an embodiment of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include: local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
A computing system, such as system 400 or system 210, may include clients and servers. In some embodiments, the data processing system 210 may include one or more servers in one or more data centers or server farms. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., an HTML page) to the client device (e.g., for displaying data to and receiving user input from a user interacting with the client device). Data generated on the client device (e.g., a result of the user interaction) may be received from the client device at the server.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of the systems and methods described herein. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a second embodiment. And claimed combinations may be directed to subcombinations or variations of subcombinations.
Also, while operations are shown in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order described or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results.
In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products. In some implementations, the application distributor 218, the application database 220, the record aggregator 222, the recorded video database 240, the video selector 226, and the interaction log database 228 can be part of the data processing system 210, a single module, a logical device with one or more processing modules, one or more servers, or part of a search engine. In addition, the application 238, recorder script 240, and interaction measurement script 242, as well as player script 244 may comprise or may be part of the client device 105, a single module, or a logical device having one or more processing modules.
Having now described some illustrative embodiments and implementations, it is apparent that the foregoing is illustrative and not limiting, having been presented by way of example. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, those acts and those elements may be combined in other ways to accomplish the same objectives. Acts, elements and features discussed only in connection with one embodiment are not intended to be excluded from a similar role in other embodiments or implementations.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "characterized by," "characterized in that" and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and alternative embodiments consisting of the items listed thereafter. In one embodiment, the systems and methods described herein consist of one of the described elements, acts, or components, individual combinations of more than one of the described elements, acts, or components, or all of the described elements, acts, or components.
Any reference to embodiments or elements or acts of the systems and methods herein in the singular may also include the following embodiments: this embodiment includes a plurality of these elements, and any reference herein in plural to any embodiment or element or action may also include the following embodiments: this embodiment comprises only a single element. References in the singular or plural form are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to a single or multiple configurations. Reference to any action or element being based on any information, action, or element may include an implementation in which the action or element is based, at least in part, on any information, action, or element.
Any embodiment disclosed herein may be combined with any other embodiment, and references to "an embodiment," "some embodiments," "an alternate embodiment," "various embodiments," "one embodiment," etc. are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment. Such terms as used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, including, or exclusive of, in any manner consistent with the aspects and embodiments disclosed herein.
References to "or" may be interpreted as being inclusive such that any term described using "or" may indicate any of a single described term, more than one described term, and all described terms.
Where technical features in the drawings, detailed description or any claim are provided with reference signs, the reference signs have been included for the purpose of increasing the intelligibility of the drawings, detailed description, and claims. Accordingly, neither the reference numerals nor the absence of reference numerals will limit the scope of any claim element in any way.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. While the examples provided herein relate to attributing a scrolling event with respect to an application, the systems and methods described herein may include application to other environments. The above-described embodiments are illustrative and not restrictive of the described systems and methods. The scope of the systems and methods described herein is, therefore, indicated by the appended claims rather than by the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.
Claims (36)
1. A method for automatically selecting and distributing at a data processing system a record of an application executing on an end-user device, the method comprising:
receiving, at the data processing system, at least one record of an application executing on a first client device;
transmitting the at least one record of the application executing on the first client device from the data processing system to a second client device;
transmitting an interaction measurement script to the second client device, the reception of the interaction measurement script triggering the second client device to:
playing the at least one recording of the application executing on the first client device,
after playing the at least one record, generating an interaction log of one or more interaction events with the application running on the second client device, and
transmitting the generated interaction log to the data processing system;
receiving, at the data processing system, the generated interaction log; and
selecting a record of the at least one record of the application executing on the respective first client device based on the generated interaction log.
2. The method of claim 1, wherein transmitting the at least one record of the application executing on the first client device comprises selecting a record from a plurality of records of the application executing on the first client device.
3. The method of claim 1, further comprising:
generating performance metrics for the at least one record of the application based on the one or more interaction events identified in the generated interaction log, wherein selecting a record of the at least one record of the application executing on the respective first client device is further based on the performance metrics.
4. The method of claim 3, wherein generating the performance metric further comprises:
identifying a number of plays of the record for the application at a plurality of client devices;
determining that a number of plays of the recording for the application is above a threshold; and
in response to determining that the number of plays of the record for the application is above the threshold, calculating the performance metric based on the one or more interaction events identified in the generated interaction log received from the second client device.
5. The method of claim 3, wherein generating the performance metric further comprises:
identifying an event type for each of the one or more interactivity events identified in the generated interactivity log received from the second client device; and
generating the performance metric based on the event type for each of the one or more interactivity events.
6. The method of claim 3, wherein generating the performance metric further comprises:
maintaining an aggregate performance model for a plurality of execution records of the application on a plurality of client devices;
in response to receiving the record from the first client device, assigning an initial value to a weight in the aggregate performance model for the execution record of the application on the first client device; and
adjusting the weight from the initial value to a second value in the aggregate performance model in response to receiving the generated interaction log of the one or more interactions from the second client device.
7. The method of claim 3, further comprising:
determining a start time and an end time of the recording of the application executing on the first client device based on the performance metrics and the one or more interaction events with the application by the second client device; and
modifying a length of time of the recording of the application based on the start time and the end time.
8. The method of claim 3, further comprising: identifying one or more features within the record of the application executing on the first client device; and
wherein generating the performance metric further comprises: generating an initial value for the performance metric based on one or more identified features.
9. The method of any of claims 1 to 8, further comprising: modifying a record of the at least one record of the application executing on the respective first client device based on at least one further record of the application executing on the first client device, the at least one further record obtained based on a log of interactions of the application executing on the first client device.
10. The method of any of claims 1 to 8, further comprising:
receiving a first request from the first client device to download an application;
in response to receiving the first request, determining that a number of execution records of the application is below a threshold;
in response to determining that the number of records is below the threshold, transmitting the application and a recorder script to the first client device, the receiving of the recorder script triggering the first client device to record execution of the application running on the first client device and transmit the records to the data processing system; and
receiving, from the first client device, the record of the application executing on the first client device.
11. The method of claim 10, further comprising:
receiving, from the second client device, a second request to download the application after receiving the record of the application from the first client device;
determining that the number of execution records of the application is greater than the threshold;
wherein transmitting the at least one record of the application executing on the first client device to the second client device is in response to determining that the number of execution records of the application is greater than the threshold.
12. The method of claim 10, further comprising:
in response to receiving the first request to download the application, identifying a number of times the application has been downloaded by the first client device;
determining that the number of times the application has been downloaded by the first client device is equal to zero; and
wherein transmitting the recorder script to the first client device further comprises: transmitting the recorder script to the first client device in response to determining that the number of times the application has been downloaded by the first client device is equal to zero.
13. The method of claim 10, wherein transmitting the application and the recorder script to the first client device further comprises: transmitting the application and the recorder script to the first client device, receipt of the recorder script triggering the first client device to record one or more second interaction events with the application and transmit the one or more second interactions to the data processing system; and the method further comprises:
generating the record based on the application and the one or more second interaction events with the application on the first client device.
14. The method of claim 10, wherein transmitting the application and the recorder script to the first client device further comprises: transmitting the application and the recorder script to the first client device, the receiving of the recorder script triggering the first client device to:
determining that the application is executing on the first client device,
in response to determining that the application is executing on the first client device, initializing an execution record for the application, an
Recording output of the application executing on the first client device for a predefined time.
15. The method of claim 10, wherein transmitting the application and the recorder script to the first client device further comprises: transmitting the application and the recorder script to the first client device, the receiving of the recorder script triggering the first client device to:
monitor one or more second interaction events with the application on the first client device,
determining that the number of the one or more second interaction events exceeds a predetermined number of events, an
In response to determining that the number of the one or more second interaction events exceeds the predetermined number of events, terminating the recording of the execution of the application running on the first client device.
16. A non-transitory computer-readable storage medium carrying computer-executable instructions that, when executed by a processor, cause the processor to perform the method of any one of claims 1-15.
17. A system for automatically selecting and distributing, at a data processing system, a record of an application executing on an end-user device, the system comprising:
the data processing system comprising a processor, a network interface, and a memory storage device, the processor configured to perform the method of any of claims 1-15.
18. A method for automatically selecting and distributing a record of an application executing on an end-user computing device, comprising:
receiving, by a data processing system, a first request to download an application from each of a plurality of first client devices;
determining, by the data processing system, that a number of records of execution of the application is below a threshold in response to receiving the first request;
in response to a determination that the number of records is below the threshold, transmitting, by the data processing system, the application and recorder script to each of the plurality of first client devices to generate and provide to the data processing system a record of execution of the application running on a corresponding client device of the plurality of first client devices; and
generating, by the data processing system, for each record of execution of the application received from a corresponding client device of the plurality of first client devices, a performance metric based on one or more interaction events with the application on the corresponding client device;
maintaining, by the data processing system, a plurality of records using the records of the applications executing on corresponding ones of the plurality of first client devices and a plurality of performance metrics generated for the corresponding plurality of client devices;
receiving, by the data processing system, a second request from a second client device to download the application after receiving the record of the application from the plurality of first client devices;
determining, by the data processing system, that a number corresponding to a plurality of records of execution of the application is greater than the threshold;
in response to determining that the number of records is greater than the threshold, selecting, by the data processing system, a record from the plurality of records based on a performance metric of the record; and
transmitting, by the data processing system, a selected record from the plurality of records of the application to the second client device.
19. The method of claim 18, wherein transmitting the record of the application executing on the first client device to the second client device further comprises transmitting an interaction measurement script, receipt of which triggers the second client device to:
playing the recording of the application executing on the first client device,
after playing the record, generating an interaction log of one or more interaction events with the application running on the second client device, and transmitting the generated interaction log to the data processing system; and
receiving, by the data processing system, the generated interaction log from the second client device; and
updating, by the data processing system, the recorded performance metrics of the application based on the one or more interaction events identified in the generated interaction log.
20. The method of claim 19, further comprising:
receiving, by the data processing system, a third request to download the application from a third client device;
selecting, by the data processing system, a record of the application having a highest performance metric in response to receiving the third request to download the application; and
transmitting, by the data processing system, the application and a player script to the third client device, the receiving of the player script triggering the third client device to play the record of the application having the highest performance metric.
21. The method of claim 20, wherein generating the performance metric further comprises:
identifying a number of plays of the record for the application at a plurality of client devices;
determining that the number of plays of the recording for the application is above a second threshold; and
in response to determining that the number of plays of the record for the application is above the second threshold, calculating the performance metric based on the one or more interaction events identified in the generated interaction log received from the second client device.
22. The method of claim 20, wherein generating the performance metric further comprises:
maintaining an aggregate performance model for a plurality of execution records of the application on a plurality of client devices;
in response to receiving the record from the first client device, assigning an initial value to a weight in the aggregate performance model for the execution record of the application on the first client device; and
adjusting the weight from the initial value to a second value in the aggregate performance model in response to receiving the generated interaction log of the one or more interactions from the second client device.
23. The method of claim 20, further comprising:
determining, by the data processing system, a start time and an end time for an execution record of the application on the first client device based on the performance metrics and the one or more interaction events conducted on the application by the second client device;
setting, by the data processing system, a length of time for which the application executes a record on the first client device based on the start time and the end time; and
wherein transmitting the application and the player script to the third client device further comprises: transmitting the record having the length of time set to the start time and the end time.
24. The method of claim 19, further comprising:
identifying, by the data processing system, a number of times the application has been downloaded by the first client device in response to receiving the first request to download the application;
determining, by the data processing system, that the number of times the application has been downloaded by the first client device is equal to zero; and
wherein transmitting the recorder script to the first client device further comprises: transmitting the recorder script to the first client device in response to determining that the number of times the application has been downloaded by the first client device is equal to zero.
25. The method of claim 19, wherein transmitting the application and the recorder script to the first client device further comprises: transmitting the application and the recorder script to the first client device, receipt of the recorder script triggering the first client device to record one or more second interaction events with the application and transmit the one or more second interactions to the data processing system; and further comprising:
generating, by the data processing system, the record based on the application and the one or more second interaction events with the application on the first client device.
26. The method of claim 19, wherein transmitting the application and the recorder script to the first client device further comprises: transmitting the application and the recorder script to the first client device, the receiving of the recorder script triggering the first client device to:
determining that the application is executing on the first client device,
in response to determining that the application is executing on the first client device, initializing an execution record for the application, an
Recording output of the application executing on the first client device for a predefined time.
27. The method of claim 19, wherein transmitting the application and the recorder script to the first client device further comprises: transmitting the application and the recorder script to the first client device, the receiving of the recorder script triggering the first client device to:
monitor one or more second interaction events with the application on the first client device,
determining that the number of the one or more second interaction events exceeds a predetermined number of events, an
In response to determining that the number of the one or more second interaction events exceeds the predetermined number of events, terminating the recording of the execution of the application running on the first client device.
28. A system for automatically selecting and distributing a record of an application executing on an end-user computing device, comprising:
a data processing system having one or more processors coupled with a memory, the data processing system configured to:
receiving a first request to download an application from each of a plurality of first client devices; and
in response to receiving the first request, determining that a number of execution records of the application stored in the memory storage is below a threshold;
in response to determining that the number of records is below the threshold, transmitting the application and recorder script to each of the plurality of first client devices to generate and provide to the data processing system a record of execution of the application running on a corresponding client device of the plurality of first client devices;
generating, for each record of execution of the application received from a corresponding client device of the plurality of client devices, a performance metric based on one or more interaction events with the application on the corresponding client device;
maintaining a plurality of records using the records of the applications executing on corresponding ones of the plurality of first client devices;
receiving, from a second client device, a second request to download the application after receiving the record of the application from the plurality of first client devices and the plurality of performance metrics generated for the corresponding plurality of client devices;
determining that a number corresponding to a plurality of records of execution of the application is greater than the threshold; and
in response to determining that the number of records is greater than the threshold, selecting a record from the plurality of records based on a performance metric of the record; and
transmitting, to the second client device, a selected record from the plurality of records of the application.
29. The system of claim 28, wherein the data processing system is further configured to transmit an interaction measurement script, receipt of the interaction measurement script triggering the second client device to:
playing the recording of the application executing on the first client device,
after playing the record, generating an interaction log of one or more interaction events with the application running on the second client device, and
transmitting the generated interaction log to the data processing system; and
wherein the data processing system is further configured to receive the generated interaction log from the second client device and update the recorded performance metrics of the application based on the one or more interaction events identified in the generated interaction log.
30. The system of claim 29, wherein the data processing system is further configured to:
receiving a third request from a third client device to download the application;
in response to receiving the third request to download the application, selecting a record of the application having a highest performance metric; and
transmitting the application and a player script to the third client device, receipt of the player script triggering the third client device to play the record of the application having the highest performance metric.
31. The system of claim 29, wherein the data processing system is further configured to:
identifying a number of plays of the record for the application at a plurality of client devices;
determining that the number of plays of the recording for the application is above a second threshold; and
in response to determining that the number of plays of the record for the application is above the second threshold, calculating the performance metric based on the one or more interaction events identified in the generated interaction log received from the second client device.
32. The system of claim 29, wherein the data processing system is further configured to:
identifying an event type for each of the one or more interactivity events identified in the generated interactivity log received from the second client device; and
generating the performance metric based on the event type for each of the one or more interactivity events.
33. The system of claim 29, wherein the data processing system is further configured to:
maintaining an aggregate performance model for a plurality of execution records of the application on a plurality of client devices;
in response to receiving the record from the first client device, assigning an initial value to a weight in the aggregate performance model for the execution record of the application on the first client device; and
adjusting the weight from the initial value to a second value in the aggregate performance model in response to receiving the generated interaction log of the one or more interactions from the second client device.
34. The system of claim 29, wherein the data processing system is further configured to:
determining a start time and an end time of the execution record of the application on the first client device based on the performance metrics and the one or more interaction events by the second client device with the application;
setting a length of time for the execution recording of the application on the first client device based on the start time and the end time; and
transmitting the record having the length of time set to the start time and the end time.
35. The system of claim 29, wherein the data processing system is further configured to:
transmitting the application and the recorder script to the first client device, the receiving of the recorder script triggering the first client device to record one or more second interaction events with the application and transmit the one or more second interaction events to the data processing system; and
generating the record based on the application and the one or more second interaction events with the application on the first client device.
36. The system of claim 29, wherein the data processing system is further configured to transmit the application and the recorder script to the first client device, the receipt of the recorder script triggering the first client device to:
monitor one or more second interaction events with the application on the first client device,
determining that the number of the one or more second interaction events exceeds a predetermined number of events, an
In response to determining that the number of the one or more second interaction events exceeds the predetermined number of events, terminating the recording of the execution of the application running on the first client device.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2016/065026 WO2018106214A1 (en) | 2016-12-05 | 2016-12-05 | Automatically selecting and distributing recordings of applications executing on computer devices over networked environments |
Publications (2)
Publication Number | Publication Date |
---|---|
CN108604204A CN108604204A (en) | 2018-09-28 |
CN108604204B true CN108604204B (en) | 2021-10-19 |
Family
ID=57629688
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680040914.8A Active CN108604204B (en) | 2016-12-05 | 2016-12-05 | Selecting and distributing records of applications executing on computing devices in a network environment |
Country Status (4)
Country | Link |
---|---|
US (1) | US11036526B2 (en) |
EP (2) | EP3356942B1 (en) |
CN (1) | CN108604204B (en) |
WO (1) | WO2018106214A1 (en) |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10845953B1 (en) * | 2017-06-28 | 2020-11-24 | Amazon Technologies, Inc. | Identifying actionable content for navigation |
EP3627400A1 (en) * | 2018-09-20 | 2020-03-25 | Visa International Service Association | Continuous learning neural network system using rolling window |
US10708382B2 (en) * | 2018-11-08 | 2020-07-07 | Citrix Systems, Inc. | Systems and methods for latency masking via prefix caching |
US11822943B2 (en) * | 2019-01-18 | 2023-11-21 | Apple Inc. | User interfaces for presenting information about and facilitating application functions |
US11178112B2 (en) * | 2019-07-23 | 2021-11-16 | Microsoft Technology Licensing, Llc | Enforcing security policies on client-side generated content in cloud application communications |
US10922105B1 (en) * | 2020-03-02 | 2021-02-16 | International Business Machines Corporation | Realtime generated assistance video |
US11221937B1 (en) * | 2021-06-11 | 2022-01-11 | App Annie Inc. | Using machine learning model to make action recommendation to improve performance of client application |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2003075178A2 (en) * | 2002-03-01 | 2003-09-12 | Sap Aktiengesellschaft | Method and system for recording user interaction with an application |
WO2007113573A3 (en) * | 2006-04-05 | 2008-12-18 | Box Uk Ltd | Automated measuring of interaction with user interfaces |
CN101399821A (en) * | 2007-09-28 | 2009-04-01 | 国际商业机器公司 | Recording/reproducing system, recorder/player, and method |
CN103152363A (en) * | 2006-10-20 | 2013-06-12 | 思杰系统有限公司 | Methods and systems for recording and real-time playback and seeking of a presentation layer protocol data stream |
CN104598133A (en) * | 2015-01-30 | 2015-05-06 | 广东欧珀移动通信有限公司 | Instruction book generating method and device for object |
CN105208082A (en) * | 2015-08-14 | 2015-12-30 | 努比亚技术有限公司 | Method and device used for guiding user to use terminal, and terminal |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7653896B2 (en) * | 2004-06-30 | 2010-01-26 | Microsoft Corporation | Smart UI recording and playback framework |
US9166882B1 (en) * | 2011-12-13 | 2015-10-20 | Amazon Technologies, Inc. | Remote browsing session management |
US10003847B2 (en) * | 2016-04-22 | 2018-06-19 | Google Llc | Watch-time clustering for improving video searches, selection and provision |
-
2016
- 2016-12-05 WO PCT/US2016/065026 patent/WO2018106214A1/en active Application Filing
- 2016-12-05 CN CN201680040914.8A patent/CN108604204B/en active Active
- 2016-12-05 US US15/737,264 patent/US11036526B2/en active Active
- 2016-12-05 EP EP16819391.0A patent/EP3356942B1/en active Active
- 2016-12-05 EP EP19174779.9A patent/EP3543859B1/en active Active
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2003075178A2 (en) * | 2002-03-01 | 2003-09-12 | Sap Aktiengesellschaft | Method and system for recording user interaction with an application |
WO2007113573A3 (en) * | 2006-04-05 | 2008-12-18 | Box Uk Ltd | Automated measuring of interaction with user interfaces |
CN103152363A (en) * | 2006-10-20 | 2013-06-12 | 思杰系统有限公司 | Methods and systems for recording and real-time playback and seeking of a presentation layer protocol data stream |
CN101399821A (en) * | 2007-09-28 | 2009-04-01 | 国际商业机器公司 | Recording/reproducing system, recorder/player, and method |
CN104598133A (en) * | 2015-01-30 | 2015-05-06 | 广东欧珀移动通信有限公司 | Instruction book generating method and device for object |
CN105208082A (en) * | 2015-08-14 | 2015-12-30 | 努比亚技术有限公司 | Method and device used for guiding user to use terminal, and terminal |
Also Published As
Publication number | Publication date |
---|---|
WO2018106214A1 (en) | 2018-06-14 |
US20190286461A1 (en) | 2019-09-19 |
CN108604204A (en) | 2018-09-28 |
US11036526B2 (en) | 2021-06-15 |
EP3543859A1 (en) | 2019-09-25 |
EP3356942B1 (en) | 2019-06-05 |
EP3543859B1 (en) | 2021-12-01 |
EP3356942A1 (en) | 2018-08-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN108604204B (en) | Selecting and distributing records of applications executing on computing devices in a network environment | |
US10489395B2 (en) | Methods and systems for providing functional extensions with a landing page of a creative | |
US11677806B2 (en) | Platform-independent content generation for thin client applications | |
US20230179818A1 (en) | Intelligent multi-device content distribution based on internet protocol addressing | |
US20140279075A1 (en) | Interactive advertising | |
US20230368250A1 (en) | Systems and methods for dynamically inserting content item slots in an information resource | |
US10120839B2 (en) | Methods and systems for identifying elements of a mobile application | |
CN113099246B (en) | Network traffic distribution for streaming content | |
US20170017382A1 (en) | System and method for interaction between touch points on a graphical display | |
US10424273B2 (en) | Methods, systems, and media for presenting interstitial animations | |
US11625472B2 (en) | Converting static content items into interactive content items |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
US20170061025A1 - Enforcing category diversity - Google Patents
Enforcing category diversity Download PDFInfo
- Publication number
- US20170061025A1 US20170061025A1 US15/350,377 US201615350377A US2017061025A1 US 20170061025 A1 US20170061025 A1 US 20170061025A1 US 201615350377 A US201615350377 A US 201615350377A US 2017061025 A1 US2017061025 A1 US 2017061025A1
- Authority
- US
- United States
- Prior art keywords
- poi
- category
- entities
- candidate
- particular category
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/29—Geographical information databases
-
- G06F17/30867—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G06F17/30241—
-
- G06F17/3053—
-
- G06F17/30554—
Definitions
- This specification generally relates to search engines, and one particular implementation relates to an enhancement for a local search engine.
- a local search engine may identify points of interest (POIs), such as business, parks or museums, that are located near the user.
- POIs points of interest
- one innovative aspect of the subject matter described in this specification can be embodied in methods that enforce the category diversity or sub-category diversity of POIs that are identified in response to a local search. For example, listings associated with over-represented categories or sub-categories can be demoted, and listings associated with under-represented categories or sub-categories can be promoted.
- a method includes receiving a request to identify points of interest (POIs), obtaining data identifying (i) candidate points of interest (POIs) that satisfy the request, (ii) a respective category associated with each candidate POI, and (iii) a non-scaled score associated with each candidate POI, ranking, for each of one or more of the categories, the candidate POIs associated with the category, based on the respective non-scaled scores, scaling, for each of the one or more categories, the non-scaled scores of the ranked candidate POIs associated with the category, ranking the candidate POIs using the scaled scores, for the candidate POIs that are associated with the one or more categories, and the non-scaled scores, for the candidate POIs that are not associated with the one or more categories, and providing data that identifies two or more of the candidate POIs, as ranked according to the scaled scores and the non-scaled scores.
- the method includes selecting, as the one or more categories, one or more categories that are each associated with more than a predetermined number of candidate POIs; the predetermined number is two; the method includes selecting, as the one or more categories, one or more categories that are each associated with one or more candidate POI; scaling, for each of the one or more categories that are associated with only one candidate POI, the non-scaled score of the ranked candidate POI associated with the category comprises multiplying the non-scaled score of the ranked candidate POI associated with the category by a factor of one; scaling the non-scaled scores of the ranked, candidate POIs includes increasing the respective non-scaled scores of the top n ranked candidate POIs; scaling the non-scaled scores of the ranked, candidate POIs includes leaving unchanged the non-scaled scores of one or more of the top n ranked candidate POIs; scaling the non-scaled scores of the ranked, candidate POIs includes decreasing the non-scaled
- FIG. 1 is a block diagram of an example system that diversifies POIs using category scaling, at the server-side.
- FIG. 2 is a flow diagram illustrating an example process for providing diversified POIs based on category scaling and ranking.
- FIG. 3 is a block diagram of an example system that diversifies POIs using category scaling, at the client-side.
- FIG. 1 is a block diagram of an example system 100 that diversifies POIs using category scaling, at the server-side.
- a “category” refers to a class of POIs that share a particular characteristic or particular characteristics.
- Example POI categories include “shop,” “restaurant,” “museum,” “park,” or “government building.”
- a “sub-category” refers to a class of POIs that shares a particular characteristic or particular characteristics with other POIs in the same category, but that does not share a particular characteristic or particular characteristics with other POIs of another class in the same category.
- Example POI sub-categories include “Restaurant: Indian” and “Restaurant: Mexican” for the category “Restaurant,” and “Government Building: Airport” and “Government Building: Post Office” for the category “Government Building.”
- the system 100 when a user requests to receive POI information relating to a particular location, the system 100 generates a collection of candidate POIs and receives information relating to each candidate POI's respective category and the score and rank within the respective category, and, for categories selected for scaling, promotes or demotes the score of each ranked candidate POI within its respective category through a scaling process. The system 100 then re-ranks the scaled candidate POIs from the selected categories and the non-scaled candidate POIs from the other categories into one category-diversified POI collection over all categories, and returns the category-diversified POI collection to the client.
- the system 100 includes a client device 101 , a network 102 , a gateway 104 , a POI identification (ID) engine 105 , and a category diversification engine 106 .
- ID POI identification
- an “engine” refers to a software implemented input/output system that provides an output that is different from the input.
- An engine can be an encoded block of functionality, such as a library, a platform, a Software Development Kit (“SDK”), or an object.
- the network 102 may include, for example, one or more of the Internet, Wide Area Networks (WANs), Local Area Networks (LANs), analog or digital wired and wireless telephone networks (e.g., a PSTN, Integrated Services Digital Network (ISDN), and Digital Subscriber Line (xDSL)), radio, television, cable, satellite, and/or any other delivery or tunneling mechanism for carrying data services.
- Networks may include multiple networks or subnetworks, each of which may include, for example, a wired or wireless data pathway.
- the client device 101 may be a mobile phone, a laptop computer, a PDA (Personal Digital Assistant), a smart phone, a music player, a tablet computer, an e-book reader, or another portable or mobile device operated by a user.
- the client device 101 includes an input device to send requests for POIs through the network 102 , and a display 131 for showing category-diversified POIs to the user.
- the client device 101 is not portable or mobile, but rather is a desktop computer or a server.
- the gateway 104 coordinates the requests and responses among the client device 101 , the POI ID engine 105 , and the category diversification engine 106 .
- the request can be routed to the gateway 104 through the network 102 .
- the gateway 104 forwards the request to the POI ID engine 105 .
- the gateway 104 forwards data referencing the POI collection to the category diversification engine 106 .
- the category diversification engine 106 re-ranks the POIs using a category diversity scaling process, the re-ranked collection is forwarded to the gateway 104 to return to the client device 101 .
- the POI ID engine 105 receives a request from the gateway 104 as an input.
- the request can contain user-specific information, e.g. user location, user-defined preferences, and time of the request.
- the POI ID engine 105 maintains or has access to a database containing candidate POIs and information related to the candidate POIs. Based on the request from the gateway 104 , the POI ID engine 105 analyzes the request and generates a POI collection 111 from the database.
- the POI collection 111 is, for example, a list or other data structure that specifies name and location information of the candidate POIs, as well as the category and score associated with each candidate POI.
- the scores associated with the candidate POIs can be determined by various criteria.
- the criteria can be the number of reviews from other users, the quality of the reviews (e.g. one to five stars), the distance between a candidate POI to the user, the time of the request, etc.
- Each criterion can have a different weight, and the weighted scores are combined to construct a POI score for each candidate POI in the POI collection 111 .
- the weights of the scores can be determined by the user's preferences, which are included in the POI request.
- the POI ID engine 105 can sort the candidate POIs in the POI collection 111 based on the categories and the POI scores within each respective category.
- the POI ID engine 105 can also determine the number of candidate POIs to be included in the POI collection 111 based on predetermined thresholds.
- the POI ID engine 105 can use a minimum POI score as a threshold.
- the POI ID engine 105 can use a maximum distance between a candidate POI and the user as a threshold.
- the output from the POI ID engine 105 can be the POI collection 111 , which is forwarded to another engine, e.g. the gateway 104 or the category diversification engine 106 .
- the category diversification engine 106 receives the POI collection 111 as an input.
- the collection 111 can come directly from the POI ID engine 105 , or indirectly through the gateway 104 .
- the category diversification engine 106 sorts the candidate POIs into their respective categories, and ranks the candidate POIs within each of selected categories based on the POI scores in the POI collection 111 . In one implementation, if there is only one candidate POI in a category, the category diversification engine 106 would not select the category and would not scale the one candidate POI. In another implementation, if there is only one candidate POI in a category, the category diversification engine 106 would select the category and scale the one candidate POI. The category diversification engine 106 then promotes or demotes the POI scores in the POI collection 111 through scaling of the POI scores across all selected categories.
- the category diversification engine 106 scales that particular POI score through a scaling factor in a POI rank scaling table 112 .
- the POI rank scaling table 112 is, for example, a list or other data structure that specifies scaling factors across some or all selected categories. The scaling factors can be derived manually or automatically. For each selected category, the scaling factors vary with the POI ranks.
- a candidate POI with a higher rank can be promoted, which means the POI score associated with the higher-ranked candidate POI will become higher after scaling.
- a candidate POI with a lower rank can be demoted, which means the POI score associated with the lower-ranked candidate POI will become lower after scaling.
- the magnitude, or strength, of the scaling can vary with ranks, meaning as ranks go lower, the corresponding candidate POIs can be demoted more significantly.
- the scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category.
- a candidate POI with a higher rank can be neither promoted nor demoted, which means the POI score associated with the higher-ranked candidate POI will remain the same after scaling.
- a candidate POI with a lower rank can be neither promoted nor demoted, which means the POI score associated with the lower-ranked candidate POI will remain the same after scaling.
- a scaling of the candidate POI is not required, although scaling can occur by, for example, multiplying a score associated with a candidate POI by a factor of 1.
- the candidate POIs with the scaled scores in the selected categories and the candidate POIs with the non-scaled scores in other non-selected categories are collected in a category-diversified POI collection 113 .
- the category-diversified POI collection 113 is, for example, a list or other data structure that specifies scaled and non-scaled scores for all candidate POIs included in the POI collection 111 .
- all candidate POIs are ranked by their scores and are not sorted by categories.
- the scaled scores can allow a top candidate in an unpopular category to appear higher in ranks in the category-diversified POI collection 113 .
- the category-diversified POI collection 113 can provide the user with more top search results across different categories.
- the category information associated with each candidate POI can be stored in the category-diversified POI collection 113 , so the user can still sort the candidate POIs by categories if required.
- the output from the category diversification engine 106 can be the category-diversified POI collection 113 , and is forwarded to another engine, e.g. the gateway 104 .
- FIG. 1 also illustrates an example flow of data, shown in states (A) to (H). States (A) to (H) may occur in the illustrated sequence, or they may occur in a sequence that is different than in the illustrated sequence.
- states (A) to (H) may occur in the illustrated sequence, or they may occur in a sequence that is different than in the illustrated sequence.
- a user operating a client device 101 makes a request 121 to receive POI information relating to a particular location, and the request 121 is routed to a gateway 104 through a network 102 .
- the specific location can be the current location of the client device 101 , or can be a location of which the user is interested in exploring.
- the request 121 may include other user information, e.g. user preferences, time of request, etc.
- the gateway 104 determines that the request 121 is related to identifying POIs near a location, and sends a request 122 to a POI ID engine 105 to retrieve candidate POI information.
- the POI ID engine 105 receives the request 122 , and constructs a POI collection 111 based on the request 122 .
- the POI collection 111 contains seven candidate POI entries 141 to 147 , and the POI collection 111 includes information on candidate POI names, as well as the categories and scores associated with the candidate POIs 141 to 147 .
- the scores can be determined by various criteria, which in one implementation can be weighted scores associated with factors such as the distances between the user and the candidate POIs, the number of reviews by other users provided to the candidate POIs, the quality of the candidate POI reviews, the time of the request, etc.
- the candidate POIs 141 to 147 in the POI collection 111 are [ 141 (Restaurant), 142 (Restaurant), 143 (Restaurant), 147 (Shop), 145 (Museum), 146 (Museum), 144 (Restaurant)].
- the top three candidate POIs are all associated with the category “Restaurant,” which may not be helpful information for a user who is not looking for a place to eat.
- the over-representation of the POIs in the category “Restaurant” may also limit the number of POI categories the user can view on the client device 101 , as the display on a portable or mobile device may only be large enough to show a few POIs to the user at a time.
- one instance of over-representation can occur when candidate POIs in a category (i.e. “Restaurant”) have higher POI scores than candidate POIs in other categories, due to the fact that more reviewers have reviewed POIs associated with the category (i.e. “Restaurant”) than have reviewed POIs associated with other categories (i.e. “Museum”).
- Another instance where an over-representation of candidate POIs in a particular category may occur is in a user-specified location (i.e. a hospital building) where many candidate POIs in the same category are densely-clustered (i.e. doctors' offices inside the hospital complex); the user can easily overlook a candidate POI in a different category (i.e. a gift shop inside the same hospital complex) if it is not placed near the top of the rank.
- the POI collection 111 is forwarded in a message 124 from the POI ID engine 105 to the gateway 104 .
- the POI collection 111 can be forwarded in its entirety to the gateway 104 .
- the POI ID engine 105 can provide the gateway 104 with a location pointer of which the POI collection 111 is stored and can be retrieved.
- the gateway 104 sends the POI collection 111 in a message 125 to a category diversification engine 106 .
- the POI collection 111 can be forwarded in its entirety to the category diversification engine 106 .
- the gateway 104 can provide the category diversification engine 106 with a location pointer of which the POI collection 111 is stored and can be retrieved.
- the category diversification engine 106 Upon receiving the POI collection 111 , the category diversification engine 106 sorts the candidate POIs in the POI collection 111 into their respective categories. Then the category diversification engine 106 determines and selects which categories should be ranked and scaled. For example, for a singleton candidate POI, which is the only candidate POI present in a category, no ranking and scaling steps are required for the singleton candidate POI, since a category with one POI is not considered an over-represented category. For the selected, over-represented categories, the category diversification engine 106 ranks the candidate POIs within each selected category by their POI scores. The ranked POI scores are then promoted or demoted with a POI rank scaling table 112 .
- the POI rank scaling table 112 contains scaling factors associated with all ranks and categories in the POI collection 111 .
- a scaling factor is a numerical function which takes a POI score as the input, and transforms the POI score into a new score through a defined mechanism.
- the scaling factor is a percentage multiplier, where a POI score is multiplied by a scaling factor associated with the candidate POIs category and the candidate POIs rank within that category.
- the scaling factors can be pre-determined manually by an administrator of the category diversification engine 106 , or automatically by a software module.
- the scaling factors vary depending on the rank and the category of the candidate POIs.
- a table entry 151 in the POI rank scaling table 112 indicates that for the top-ranked candidate POIs in each category, the POI scores associated with the categories “Restaurant” and “Museum” will be promoted by scaling factors “120%” and “130%”, respectively; however, the POI score associated with the category “Shop” will be neither promoted or demoted, as the corresponding scaling factor here is “100%.”
- candidate POIs can be further demoted at lower ranks. The increasing demotions of lower-ranked candidate POIs within a category allow top-ranked candidate POIs in other categories to emerge in the displayed search results.
- the scaling factors can be determined dynamically upon the category diversification engine 106 receiving the POI collection 111 .
- the scaling factors can be determined based on the distribution of various categories among all candidate POIs in the POI collection 111 .
- the category diversification engine 106 may generate or adjust scaling factors to demote lower-ranked candidate POIs in the over-represented category more significantly than lower-ranked candidate POIs in other categories.
- the scaling factors of the candidate POIs in a particular category can be determined dynamically based on the non-scaled score of a top-ranked candidate POI in a different category.
- the category diversification engine 106 may generate or adjust scaling factors for the particular category to significantly promote the top-candidate of the particular category, to guarantee or increase the chance that the top-candidate of the particular category will appear among the top search results of a local search.
- the non-scaled POI score for the singleton candidate POI in the POI collection 111 can be used to compare with the scaled POI scores.
- the candidate POI 147 is a singleton candidate POI, and the non-scaled POI score for the candidate POI 147 can be used to compare with the scaled POI scores without going through ranking and scaling in the category diversification engine 106 .
- the category diversification engine 106 applies the POI rank scaling table 112 to the selected categories, and then re-ranks the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories via a process 127 into a category-diversified POI collection 113 .
- the process 127 can be performed by a software module.
- the candidate POIs in the category-diversified POI collection 113 are [ 141 (Restaurant), 145 (Museum), 147 (Shop), 142 (Restaurant), 143 (Restaurant), 146 (Museum), 144 (Restaurant)].
- the re-ranked category-diversified POI collection 113 provides an enforcement of category diversity because through candidate POI promotions and demotions, the top candidate POIs in each category is here placed near the top of the search results.
- the category-diversified POI collection 113 is forwarded in a message 128 to the gateway 104 from the category diversification engine 106 .
- the category-diversified POI collection 113 can be forwarded in its entirety to the gateway 104 .
- the category diversification engine 106 can provide the gateway 104 with a location pointer of which the category-diversified POI collection 113 is stored and can be retrieved.
- the gateway constructs a message 130 including the category-diversified POI collection 113 , where the message 130 can be interpreted by the client device 101 .
- the gateway 104 sends the message 130 to the client device 101 through the network 102 .
- the information related to the category-diversified POI collection 113 is received and analyzed by the client device 101 , and displayed to the user via the display 131 .
- the top three results 141 , 145 , and 147 belong to categories “Restaurant,” “Museum,” and “Shop,” respectively, and provide the user more category diversities in candidate POI choices.
- the displayed results can be further filtered by the user by category if required.
- the user can choose to display POIs in the category “Restaurant” only, and the displayed list would be ranked from high to low by scaled scores as POIs 141 , 142 , 143 , and 144 .
- This rank is the same as when the candidate POIs in the “Restaurant” category are ranked in the POI collection 111 . Therefore the integrity of the candidate POI rank within a category is preserved even after scaling.
- FIG. 2 is a flow diagram 200 illustrating an example process for providing diversified POIs based on category scaling and ranking.
- the process 200 enforces category diversification for a user-defined search, including a local or point-of-interest (POI) search.
- POI point-of-interest
- the process 200 will be described as being performed by a computer system comprising one or more computers, for example, the category diversification engine 106 as shown in FIG. 1 .
- the process 200 describes enforcing POI category diversification for a POI-related search on a client device; however, the process 200 can be, in general, applied to enforcing search result type diversification for a user-specified search on a computer system.
- the system receives a request to identify POIs ( 202 ).
- the request is issued by a client device operated by a user.
- the request contains specific location information of the client device, or the request may contain a location of which the user is interested in exploring.
- the request may include other user information, e.g. user preferences, time of request, etc.
- the system obtains data identifying the POIs that satisfy the request, and the data includes a respective category associated with each POI, and a score associated with each POI ( 204 ).
- the data can be provided by a POI ID engine.
- the POI ID engine maintains or has access to a database containing candidate POIs and information related to the candidate POIs.
- the POI ID engine analyzes the request and generates a POI collection from the database.
- the POI ID engine can determine the number of candidate POIs to be included in the POI collection based on predetermined thresholds.
- the POI ID engine can use a minimum POI score as a threshold.
- the POI ID engine can use a maximum distance between a candidate POI and the user as a threshold.
- the POI ID engine may use criteria associated with category diversity as thresholds. For example, the POI ID engine may choose to include at least one candidate POI from each selected category. In some implementations, the number of candidate POIs to be included in the POI collection by the POI ID engine may be more than the number of candidate POIs requested by the user or the number of candidate POIs allowed to be displayed on the client device.
- the POI collection is, for example, a list or other data structure that specifies name and location information of the candidate POIs, as well as the category and score associated with each candidate POI.
- the scores associated with the candidate POIs can be determined by various criteria.
- the criteria can be the number of reviews from other users, the quality of the reviews (e.g. one to five stars), the distance between a candidate POI to the user, the time of the request, etc.
- Each criterion can have a different weight, and the weighted scores are combined to construct a POI score for each candidate POI in the POI collection.
- the weights of the scores can be determined by the user's preferences, which are included in the POI request.
- the system ranks, for each of the selected categories, the candidate POIs associated with the category, based on the respective scores ( 206 ). In one implementation, upon receiving the POI collection, the system sorts the candidate POIs in the POI collection into their respective categories. Then the system selects which categories need to be ranked. For example, the system may only rank a category if there are more than one candidate POIs in that category.
- the system may perform the ranking ( 206 ) on the server side.
- a gateway may send the POI collection to a category diversification engine on the server side for ranking the candidate POIs within each of the selected categories.
- the POI ID engine may rank the POIs within each of the selected categories prior to forwarding the candidate POI collection to the system.
- the system may perform the ranking ( 206 ) on the client side.
- a gateway may send the POI collection to a client device, and a scaling engine inside the client device may perform the ranking of the candidate POIs within each of the selected categories.
- sub-categories i.e. “Restaurant”
- the system scales, for each of the selected categories, the scores of the ranked, candidate POIs associated with the category ( 208 ).
- the system promotes or demotes the POI scores of the candidate POIs through scaling of the POI scores across all selected categories.
- the system scales the POI score associated with the particular candidate POI.
- the scaling can be performed through a scaling factor in a POI rank scaling table.
- the POI rank scaling table is, for example, a list or other data structure that specifies scaling factors across each and all selected categories. For each selected category, the scaling factors vary with the POI ranks.
- a candidate POI with a higher rank can be promoted, which means the POI score associated with the higher-ranked candidate POI will become higher after scaling.
- a candidate POI with a lower rank can be demoted, which means the POI score associated with the lower-ranked candidate POI will become lower after scaling.
- the magnitude, or strength, of the scaling can vary with ranks, meaning as ranks go lower, the corresponding candidate POIs can be demoted more significantly.
- the scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category.
- a candidate POI with a higher rank can be neither promoted nor demoted, which means the POI score associated with the higher-ranked candidate POI will remain the same after scaling.
- a candidate POI with a lower rank can be neither promoted nor demoted, which means the POI score associated with the lower-ranked candidate POI will remain the same after scaling.
- a scaling of the candidate POI is not required.
- a singleton candidate POI which is the only candidate POI present in a category
- no scaling is required for the singleton candidate POI.
- the non-scaled POI score for the singleton candidate POI can be used to compare with the scaled POI scores in the selected categories.
- scaling can be applied to a singleton candidate POI, as defined in a POI rank scaling table.
- the scaled POI score for the singleton candidate POI can be used to compare with the scaled POI scores in the selected categories.
- the scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category.
- the system ranks the candidate POIs across all categories, using the scaled POI scores in the selected categories and the non-scaled POI scores in the other categories ( 210 ). In some implementations, the system stores the ranked candidate POIs in a category-diversified POI collection.
- the system may perform the ranking ( 210 ) on the server side.
- a category diversification engine may rank the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories, and store the ranked candidate POIs into a category-diversified POI collection.
- the system may perform the ranking ( 210 ) on the client side.
- a ranking engine inside the client device may rank the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories, and store the ranked candidate POIs into a category-diversified POI collection.
- the system provides data that identifies two or more of the ranked, candidate POIs ( 212 ).
- the number of ranked candidate POIs identified by the system can be determined by a server, e.g. a gateway, or by a client device.
- the ranked candidate POIs are stored in a category-diversified POI collection on the server side, and system returns the category-diversified POI collection to the client device.
- the ranked candidate POIs are provided by a ranking engine within the client device.
- the ranked candidate POIs provided by the system can be displayed on the client device, or can be further processed by the client device.
- FIG. 3 is a block diagram of an example system 300 that diversifies POIs using category scaling, at the client side.
- the system 300 when a user requests to receive POI information in a particular location, the system 300 generates a collection of POIs and receives information relating to each candidate POI's respective category and the score and rank within the respective category. The system 300 then returns the POI collection to the client, and, for categories selected for scaling, promotes or demotes the score of each ranked candidate POI within its respective category through a scaling mechanism. The system 300 then re-ranks the scaled and non-scaled POIs into one category-diversified POI collection over all categories, and displays the category-diversified POI collection on the client device.
- the system 300 includes a client device 301 , a network 302 , a gateway 304 , and a POI identification (ID) engine 305 .
- ID POI identification
- the client device 301 may be a mobile phone, a laptop computer, a PDA (Personal Digital Assistant), a smart phone, a music player, a tablet computer, an e-book reader, or another portable or mobile device operated by a user.
- the client device 301 includes one or more processors 312 , a display 314 , one or more input devices 315 , a network interface 316 , a user preference module 317 , a scaling engine module 318 , and a ranking engine module 319 .
- the client device 301 is not portable or mobile, but rather is a desktop computer or a server. In a further implementation, some of these structural elements are omitted or combined.
- the client device 301 may be connected to the network 302 and possibly to one or more other networks over the network interface 316 .
- the network 302 may include, for example, one or more of the Internet, Wide Area Networks (WANs), Local Area Networks (LANs), analog or digital wired and wireless telephone networks (e.g., a PSTN, Integrated Services Digital Network (ISDN), and Digital Subscriber Line (xDSL)), radio, television, cable, satellite, and/or any other delivery or tunneling mechanism for carrying data services.
- WANs Wide Area Networks
- LANs Local Area Networks
- analog or digital wired and wireless telephone networks e.g., a PSTN, Integrated Services Digital Network (ISDN), and Digital Subscriber Line (xDSL)
- radio television, cable, satellite, and/or any other delivery or tunneling mechanism for carrying data services.
- Networks may include multiple networks or subnetworks, each of which may include, for example, a wired or wireless data pathway.
- the gateway 304 coordinates the requests and responses between the client device 301 , and the POI ID engine 305 .
- the request can be routed to the gateway 304 through the network 302 .
- the gateway 304 forwards the request to the POI ID engine 305 .
- the gateway 304 upon receiving a response containing a POI collection from the POI ID engine 305 , the gateway 304 returns the POI collection to the client device 301 .
- the POI ID engine 305 receives a request from the gateway 304 as an input.
- the request can contain user-specific information, e.g. user location, user-defined preferences, and time of the request.
- the POI ID engine 305 maintains or has access to a database containing POIs and information related to POIs.
- the POI ID engine 305 analyzes the request and generates a POI collection 311 from the database.
- the POI collection 311 is, for example, a list or other data structure that specifies name and location information of the candidate POIs, as well as the category and score associated with each candidate POI.
- the scores associated with the candidate POIs can be determined by various criteria.
- the criteria can be the number of reviews from other users, the quality of the reviews (e.g. one to five stars), the distance between a candidate POI to the user, the time of the request, etc.
- Each criterion can have a different weight, and the weighted scores are combined to construct a POI score for each candidate POI in the POI collection 311 .
- the weights of the scores can be determined by the user's preferences, which are included in the POI request.
- the POI ID engine 305 can sort the candidate POIs in the POI collection 311 based on the categories and the POI scores within each respective category.
- the POI ID engine can also determine the number of candidate POI entries to be included in the POI collection 311 based on predetermined thresholds.
- the POI ID engine 305 can use a minimum POI score as a threshold.
- the POI ID engine 305 can use a maximum distance between a candidate POI and the user as a threshold.
- the output from the POI ID engine 305 can be the POI collection 311 , which is forwarded to another engine, e.g. the gateway 304 .
- the scaling engine 318 in the client device 301 receives the POI collection 311 as an input.
- the collection 311 can be received from the gateway 304 by the network interface 316 and then be transferred to the scaling engine 318 .
- the scaling engine 318 sorts the candidate POIs into their respective categories, and ranks the candidate POIs within each of selected categories based on the POI scores in the POI collection 311 .
- the scaling engine 318 would not select the category and would not scale the one candidate POI.
- the scale engine 318 promotes or demotes the POI scores in the POI collection 311 through scaling of the POI scores across all selected categories. For each candidate POI entry in the selected categories, the scaling engine 318 scales that particular POI score through a scaling factor in a POI rank scaling table 321 .
- the POI rank scaling table 321 is, for example, a list or other data structure that specifies scaling factors across some or all selected categories. The scaling factors can be derived manually or automatically. For each selected category, the scaling factors vary with the POI ranks.
- a candidate POI with a higher rank can be promoted, which means the POI score associated with the higher-ranked candidate POI will become higher after scaling.
- a candidate POI with a lower rank can be demoted, which means the POI score associated with the lower-ranked candidate POI will become lower after scaling.
- the magnitude, or strength, of the scaling can vary with ranks, meaning as ranks go lower, the corresponding candidate POIs can be demoted more significantly.
- the scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category.
- a candidate POI with a higher rank can be neither promoted nor demoted, which means the POI score associated with the higher-ranked candidate POI will remain the same after scaling.
- a candidate POI with a lower rank can be neither promoted nor demoted, which means the POI score associated with the lower-ranked candidate POI will remain the same after scaling.
- a scaling of the candidate POI is not required.
- the candidate POIs with the scaled scores in the selected categories and the candidate POIs with the non-scaled scores in other non-selected categories are collected ranked by a ranking engine 319 and are collected in a category-diversified POI collection 322 .
- the category-diversified POI collection 322 is, for example, a list or other data structure that specifies scaled and non-scaled scores for all candidate POIs included in the POI collection 311 . In the category-diversified POI collection 322 , all candidate POIs are ranked by their scores and are not sorted by categories.
- the scaled scores can allow a top candidate in an unpopular category to appear higher in ranks in the category-diversified POI collection 322 .
- the category-diversified POI collection 322 can provide the user with more top search results across different categories.
- the category information associated with each candidate POI can be stored in the category-diversified POI collection 322 so the user can still sort the candidate POIs by categories if required.
- the output from the ranking engine 319 can be the category-diversified POI collection 322 , and can be displayed on the display 314 in the client device 301 .
- FIG. 3 also illustrates an example flow of data, shown in states (A) to (G). States (A) to (G) may occur in the illustrated sequence, or they may occur in a sequence that is different than in the illustrated sequence.
- states (A) to (G) may occur in the illustrated sequence, or they may occur in a sequence that is different than in the illustrated sequence.
- a user operating a client device 301 makes a request 331 to receive POI information relating to a particular location, and the request 331 is routed to a gateway 304 through a network 302 .
- the specific location can be the current location of the client device 301 , or can be a location of which the user is interested in exploring.
- the request 331 may include other user information, e.g. user preferences, time of request, etc.
- the gateway 304 determines that the request 331 is related to identifying POIs near a location, and sends a request 332 to a POI ID engine 305 to retrieve candidate POIs.
- the POI ID engine 305 receives the request 332 , and constructs a POI collection 311 based on the request 332 .
- the POI collection 311 contains seven candidate POI entries 341 to 347 , and the POI collection 311 includes information on candidate POI names, as well as the categories and scores associated with the candidate POIs 341 to 347 .
- the scores can be determined by various criteria, which in one implementation can be weighted scores associated with factors such as the distances between the user and the candidate POIs, the number of reviews by other users provided to the candidate POIs, the quality of the candidate POI reviews, the time of the request, etc.
- the candidate POIs 341 to 347 in the POI collection 311 are [ 341 (Restaurant), 342 (Restaurant), 343 (Restaurant), 347 (Shop), 345 (Museum), 346 (Museum), 344 (Restaurant)].
- the top three candidate POIs are all associated with the category “Restaurant,” which may not be helpful information for a user who is not looking for a place to eat.
- the over-representation of the POIs in the category “Restaurant” may also limit the number of POI categories the user can view on the client device 301 , as the display on a portable or mobile device may only be large enough to show a few POIs to the user at a time.
- one instance of over-representation can occur when candidate POIs in a category (i.e. “Restaurant”) have higher POI scores than candidate POIs in other categories, due to the fact that more reviewers have reviewed POIs associated with the category (i.e. “Restaurant”) than have reviewed POIs associated with other categories (i.e. “Museum”).
- Another instance where an over-representation of candidate POIs in a particular category may occur is in a user-specified location (i.e. a hospital building) where many candidate POIs in the same category are densely-clustered (i.e. doctors' offices inside the hospital complex); the user can easily overlook a candidate POI in a different category (i.e. a gift shop inside the same hospital complex) if it is not placed near the top of the rank.
- the POI collection 311 is forwarded in a message 334 from the POI ID engine 305 to the gateway 304 .
- the POI collection 311 can be forwarded in its entirety to the gateway 304 .
- the POI ID engine 305 can provide the gateway 304 with a location pointer of which the POI collection 311 is stored and can be retrieved.
- the gateway constructs a message 335 including the POI collection 311 , where the message 335 can be interpreted by the client device 301 .
- the gateway 304 sends the message 335 to the network interface 316 of the client device 301 through the network 302 .
- the scaling engine 318 sorts the candidate POIs in the POI collection 311 into their respective categories. Then the scaling engine 318 determines and selects which categories should be ranked and scaled. For example, for a singleton candidate POI, which is the only candidate POI present in a category, no ranking and scaling steps may be required for the singleton candidate POI, since a category with one POI is not considered an over-represented category. For the selected, over-represented categories, the scaling engine 318 ranks the POIs within each selected category by their POI scores. The ranked POI scores are then promoted or demoted by applying the POI rank scaling table 321 to the selected categories.
- the POI rank scaling table 321 contains scaling factors associated with all ranks and categories in the POI collection 311 .
- a scaling factor is a numerical function which takes a POI score as the input, and transforms the POI score into a new score through a pre-determined mechanism.
- the scaling factor is a percentage multiplier, where a POI score is multiplied by a scaling factor associated with the candidate POIs category and the candidate POIs rank within that category.
- the scaling factors can be pre-determined automatically by the scaling engine 318 .
- the scaling factors vary depending on the rank and the category of the POIs.
- a table entry 351 in the POI rank scaling table 321 indicates that for the top-ranked POIs in each category, the POI scores associated with the categories “Restaurant” and “Museum” will be promoted by scaling factors “120%” and “130%”, respectively; however, the POI score associated with the category “Shop” will be neither promoted or demoted, as the corresponding scaling factor here is “100%.”
- POIs can be further demoted at lower ranks. The increasing demotions of lower-ranked POIs within a category allow promoted top-ranked POIs in other categories to emerge in the displayed search results.
- the scaling factors can be determined dynamically upon the scaling engine 318 receiving the POI collection 311 .
- the scaling factors can be determined based on the distribution of various categories among all candidate POIs in the POI collection 311 .
- the scaling engine 318 may generate or adjust scaling factors to demote lower-ranked candidate POIs in the over-represented category more significantly than lower-ranked candidate POIs in other categories
- the non-scaled POI score for the singleton candidate POI in the POI collection 311 can be used to compare with the scaled POI scores.
- the candidate POI 347 is a singleton candidate POI, and the non-scaled POI score for the candidate POI 347 can be used to compare with the scaled POI scores without going through ranking and scaling by the scaling engine 318 .
- the ranking engine 319 re-ranks the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories.
- the re-ranked data is stored into a category-diversified POI collection 322 .
- the candidate POIs in the category-diversified POI collection 322 re-ranked by the scaled and non-scaled POI scores from the highest to the lowest, are [ 341 (Restaurant), 345 (Museum), 347 (Shop), 342 (Restaurant), 343 (Restaurant), 346 (Museum), 344 (Restaurant)].
- the re-ranked category-diversified POI collection 322 provides an enforcement of category diversity because through candidate POI promotions and demotions, the top candidate POIs in each category is here placed near the top of the search results.
- the information related to the category-diversified POI collection 322 is displayed on the display 314 in the client device 301 .
- the top three results 341 , 345 , and 347 belong to categories “Restaurant,” “Museum,” and “Shop,” respectively, and provide the user more category diversities in POI choices.
- the displayed results can be further filtered by the user by category if required.
- the user can choose to display POIs in the category “Restaurant” only, and the displayed list would be ranked from high to low by scaled scores as POIs 341 , 342 , 343 , and 344 .
- This rank is the same as when the POIs in the “Restaurant” category are ranked in the POI collection 311 . Therefore the integrity of the POI rank within a category is preserved even after scaling.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- a system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions.
- One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
Abstract
Description
- This is a continuation of U.S. application Ser. No. 13/252,258, filed Oct. 4, 2011, the contents of which are incorporated by reference.
- This specification generally relates to search engines, and one particular implementation relates to an enhancement for a local search engine.
- When informed with a user's location, a local search engine may identify points of interest (POIs), such as business, parks or museums, that are located near the user.
- In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that enforce the category diversity or sub-category diversity of POIs that are identified in response to a local search. For example, listings associated with over-represented categories or sub-categories can be demoted, and listings associated with under-represented categories or sub-categories can be promoted.
- According to another innovative aspect of the subject matter described in this specification, a method includes receiving a request to identify points of interest (POIs), obtaining data identifying (i) candidate points of interest (POIs) that satisfy the request, (ii) a respective category associated with each candidate POI, and (iii) a non-scaled score associated with each candidate POI, ranking, for each of one or more of the categories, the candidate POIs associated with the category, based on the respective non-scaled scores, scaling, for each of the one or more categories, the non-scaled scores of the ranked candidate POIs associated with the category, ranking the candidate POIs using the scaled scores, for the candidate POIs that are associated with the one or more categories, and the non-scaled scores, for the candidate POIs that are not associated with the one or more categories, and providing data that identifies two or more of the candidate POIs, as ranked according to the scaled scores and the non-scaled scores.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- These and other embodiments can each optionally include one or more of the following features. For instance, the method includes selecting, as the one or more categories, one or more categories that are each associated with more than a predetermined number of candidate POIs; the predetermined number is two; the method includes selecting, as the one or more categories, one or more categories that are each associated with one or more candidate POI; scaling, for each of the one or more categories that are associated with only one candidate POI, the non-scaled score of the ranked candidate POI associated with the category comprises multiplying the non-scaled score of the ranked candidate POI associated with the category by a factor of one; scaling the non-scaled scores of the ranked, candidate POIs includes increasing the respective non-scaled scores of the top n ranked candidate POIs; scaling the non-scaled scores of the ranked, candidate POIs includes leaving unchanged the non-scaled scores of one or more of the top n ranked candidate POIs; scaling the non-scaled scores of the ranked, candidate POIs includes decreasing the non-scaled scores of one or more of the top n ranked candidate POIs; the method includes dynamically determining a scaling factor to use to scale one or more non-scaled scores of the ranked, candidate POIs of a particular category based on a non-scaled score associated with a top ranked candidate POI of a different category; and/or the method includes dynamically determining a scaling factor to use to scale one or more non-scaled scores of the ranked, candidate POIs of a particular category based on a quantity of the candidate POIs of the particular category identified in the data.
- The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
FIG. 1 is a block diagram of an example system that diversifies POIs using category scaling, at the server-side. -
FIG. 2 is a flow diagram illustrating an example process for providing diversified POIs based on category scaling and ranking. -
FIG. 3 is a block diagram of an example system that diversifies POIs using category scaling, at the client-side. - Like reference numbers and designations in the various drawings indicate like elements.
-
FIG. 1 is a block diagram of anexample system 100 that diversifies POIs using category scaling, at the server-side. As used by this specification, a “category” refers to a class of POIs that share a particular characteristic or particular characteristics. Example POI categories include “shop,” “restaurant,” “museum,” “park,” or “government building.” A “sub-category” refers to a class of POIs that shares a particular characteristic or particular characteristics with other POIs in the same category, but that does not share a particular characteristic or particular characteristics with other POIs of another class in the same category. Example POI sub-categories include “Restaurant: Indian” and “Restaurant: Mexican” for the category “Restaurant,” and “Government Building: Airport” and “Government Building: Post Office” for the category “Government Building.” - Briefly, when a user requests to receive POI information relating to a particular location, the
system 100 generates a collection of candidate POIs and receives information relating to each candidate POI's respective category and the score and rank within the respective category, and, for categories selected for scaling, promotes or demotes the score of each ranked candidate POI within its respective category through a scaling process. Thesystem 100 then re-ranks the scaled candidate POIs from the selected categories and the non-scaled candidate POIs from the other categories into one category-diversified POI collection over all categories, and returns the category-diversified POI collection to the client. In general, thesystem 100 includes aclient device 101, anetwork 102, agateway 104, a POI identification (ID)engine 105, and acategory diversification engine 106. - As used in this specification, an “engine” (or “software engine”) refers to a software implemented input/output system that provides an output that is different from the input. An engine can be an encoded block of functionality, such as a library, a platform, a Software Development Kit (“SDK”), or an object. The
network 102 may include, for example, one or more of the Internet, Wide Area Networks (WANs), Local Area Networks (LANs), analog or digital wired and wireless telephone networks (e.g., a PSTN, Integrated Services Digital Network (ISDN), and Digital Subscriber Line (xDSL)), radio, television, cable, satellite, and/or any other delivery or tunneling mechanism for carrying data services. Networks may include multiple networks or subnetworks, each of which may include, for example, a wired or wireless data pathway. - The
client device 101 may be a mobile phone, a laptop computer, a PDA (Personal Digital Assistant), a smart phone, a music player, a tablet computer, an e-book reader, or another portable or mobile device operated by a user. Theclient device 101 includes an input device to send requests for POIs through thenetwork 102, and adisplay 131 for showing category-diversified POIs to the user. In another implementation, theclient device 101 is not portable or mobile, but rather is a desktop computer or a server. - In general, the
gateway 104 coordinates the requests and responses among theclient device 101, thePOI ID engine 105, and thecategory diversification engine 106. For example, when a user operating theclient device 101 requests to receive POI information relating to a particular location, the request can be routed to thegateway 104 through thenetwork 102. Thegateway 104 forwards the request to thePOI ID engine 105. Then, upon receiving a response including a POI collection from thePOI ID engine 105, thegateway 104 forwards data referencing the POI collection to thecategory diversification engine 106. Once thecategory diversification engine 106 re-ranks the POIs using a category diversity scaling process, the re-ranked collection is forwarded to thegateway 104 to return to theclient device 101. - In more detail, the POI
ID engine 105 receives a request from thegateway 104 as an input. In some implementations, the request can contain user-specific information, e.g. user location, user-defined preferences, and time of the request. ThePOI ID engine 105 maintains or has access to a database containing candidate POIs and information related to the candidate POIs. Based on the request from thegateway 104, thePOI ID engine 105 analyzes the request and generates aPOI collection 111 from the database. - The
POI collection 111 is, for example, a list or other data structure that specifies name and location information of the candidate POIs, as well as the category and score associated with each candidate POI. The scores associated with the candidate POIs can be determined by various criteria. For example, the criteria can be the number of reviews from other users, the quality of the reviews (e.g. one to five stars), the distance between a candidate POI to the user, the time of the request, etc. Each criterion can have a different weight, and the weighted scores are combined to construct a POI score for each candidate POI in thePOI collection 111. In some implementations, the weights of the scores can be determined by the user's preferences, which are included in the POI request. - In some implementations, the
POI ID engine 105 can sort the candidate POIs in thePOI collection 111 based on the categories and the POI scores within each respective category. ThePOI ID engine 105 can also determine the number of candidate POIs to be included in thePOI collection 111 based on predetermined thresholds. In one implementation, thePOI ID engine 105 can use a minimum POI score as a threshold. In another implementation, thePOI ID engine 105 can use a maximum distance between a candidate POI and the user as a threshold. The output from the POIID engine 105 can be thePOI collection 111, which is forwarded to another engine, e.g. thegateway 104 or thecategory diversification engine 106. - In more detail, the
category diversification engine 106 receives thePOI collection 111 as an input. Thecollection 111 can come directly from the POIID engine 105, or indirectly through thegateway 104. Thecategory diversification engine 106 sorts the candidate POIs into their respective categories, and ranks the candidate POIs within each of selected categories based on the POI scores in thePOI collection 111. In one implementation, if there is only one candidate POI in a category, thecategory diversification engine 106 would not select the category and would not scale the one candidate POI. In another implementation, if there is only one candidate POI in a category, thecategory diversification engine 106 would select the category and scale the one candidate POI. Thecategory diversification engine 106 then promotes or demotes the POI scores in thePOI collection 111 through scaling of the POI scores across all selected categories. - For each candidate POI in the selected categories, the
category diversification engine 106 scales that particular POI score through a scaling factor in a POI rank scaling table 112. The POI rank scaling table 112 is, for example, a list or other data structure that specifies scaling factors across some or all selected categories. The scaling factors can be derived manually or automatically. For each selected category, the scaling factors vary with the POI ranks. - In some implementations, a candidate POI with a higher rank can be promoted, which means the POI score associated with the higher-ranked candidate POI will become higher after scaling. A candidate POI with a lower rank can be demoted, which means the POI score associated with the lower-ranked candidate POI will become lower after scaling. The magnitude, or strength, of the scaling can vary with ranks, meaning as ranks go lower, the corresponding candidate POIs can be demoted more significantly. The scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category. In some implementations, a candidate POI with a higher rank can be neither promoted nor demoted, which means the POI score associated with the higher-ranked candidate POI will remain the same after scaling. A candidate POI with a lower rank can be neither promoted nor demoted, which means the POI score associated with the lower-ranked candidate POI will remain the same after scaling. When a candidate POI is neither promoted nor demoted, a scaling of the candidate POI is not required, although scaling can occur by, for example, multiplying a score associated with a candidate POI by a factor of 1.
- The candidate POIs with the scaled scores in the selected categories and the candidate POIs with the non-scaled scores in other non-selected categories are collected in a category-diversified
POI collection 113. The category-diversifiedPOI collection 113 is, for example, a list or other data structure that specifies scaled and non-scaled scores for all candidate POIs included in thePOI collection 111. In the category-diversifiedPOI collection 113, all candidate POIs are ranked by their scores and are not sorted by categories. The scaled scores can allow a top candidate in an unpopular category to appear higher in ranks in the category-diversifiedPOI collection 113. The category-diversifiedPOI collection 113 can provide the user with more top search results across different categories. In some implementations, the category information associated with each candidate POI can be stored in the category-diversifiedPOI collection 113, so the user can still sort the candidate POIs by categories if required. The output from thecategory diversification engine 106 can be the category-diversifiedPOI collection 113, and is forwarded to another engine, e.g. thegateway 104. -
FIG. 1 also illustrates an example flow of data, shown in states (A) to (H). States (A) to (H) may occur in the illustrated sequence, or they may occur in a sequence that is different than in the illustrated sequence. During state (A), a user operating aclient device 101 makes arequest 121 to receive POI information relating to a particular location, and therequest 121 is routed to agateway 104 through anetwork 102. The specific location can be the current location of theclient device 101, or can be a location of which the user is interested in exploring. In some implementations, therequest 121 may include other user information, e.g. user preferences, time of request, etc. - During state (B), the
gateway 104 determines that therequest 121 is related to identifying POIs near a location, and sends arequest 122 to aPOI ID engine 105 to retrieve candidate POI information. ThePOI ID engine 105 receives therequest 122, and constructs aPOI collection 111 based on therequest 122. In this present example, thePOI collection 111 contains sevencandidate POI entries 141 to 147, and thePOI collection 111 includes information on candidate POI names, as well as the categories and scores associated with thecandidate POIs 141 to 147. The scores can be determined by various criteria, which in one implementation can be weighted scores associated with factors such as the distances between the user and the candidate POIs, the number of reviews by other users provided to the candidate POIs, the quality of the candidate POI reviews, the time of the request, etc. - In this present example, among the seven
candidate POIs 141 to 147 in thePOI collection 111, four candidate POIs (141 to 144) belong to the category “Restaurant,” two candidate POIs (145 and 146) belong to “Museum,” and one candidate POI (147) belong to “Shop.” Here, thecandidate POIs 141 to 147 in thePOI collection 111, ranked by the POI scores from the highest to the lowest, are [141 (Restaurant), 142 (Restaurant), 143 (Restaurant), 147 (Shop), 145 (Museum), 146 (Museum), 144 (Restaurant)]. The top three candidate POIs are all associated with the category “Restaurant,” which may not be helpful information for a user who is not looking for a place to eat. The over-representation of the POIs in the category “Restaurant” may also limit the number of POI categories the user can view on theclient device 101, as the display on a portable or mobile device may only be large enough to show a few POIs to the user at a time. - In general, one instance of over-representation can occur when candidate POIs in a category (i.e. “Restaurant”) have higher POI scores than candidate POIs in other categories, due to the fact that more reviewers have reviewed POIs associated with the category (i.e. “Restaurant”) than have reviewed POIs associated with other categories (i.e. “Museum”). Another instance where an over-representation of candidate POIs in a particular category may occur is in a user-specified location (i.e. a hospital building) where many candidate POIs in the same category are densely-clustered (i.e. doctors' offices inside the hospital complex); the user can easily overlook a candidate POI in a different category (i.e. a gift shop inside the same hospital complex) if it is not placed near the top of the rank.
- During state (C), the
POI collection 111 is forwarded in amessage 124 from thePOI ID engine 105 to thegateway 104. In one implementation, thePOI collection 111 can be forwarded in its entirety to thegateway 104. In another implementation, thePOI ID engine 105 can provide thegateway 104 with a location pointer of which thePOI collection 111 is stored and can be retrieved. - During state (D), the
gateway 104 sends thePOI collection 111 in amessage 125 to acategory diversification engine 106. In one implementation, thePOI collection 111 can be forwarded in its entirety to thecategory diversification engine 106. In another implementation, thegateway 104 can provide thecategory diversification engine 106 with a location pointer of which thePOI collection 111 is stored and can be retrieved. - Upon receiving the
POI collection 111, thecategory diversification engine 106 sorts the candidate POIs in thePOI collection 111 into their respective categories. Then thecategory diversification engine 106 determines and selects which categories should be ranked and scaled. For example, for a singleton candidate POI, which is the only candidate POI present in a category, no ranking and scaling steps are required for the singleton candidate POI, since a category with one POI is not considered an over-represented category. For the selected, over-represented categories, thecategory diversification engine 106 ranks the candidate POIs within each selected category by their POI scores. The ranked POI scores are then promoted or demoted with a POI rank scaling table 112. - The POI rank scaling table 112 contains scaling factors associated with all ranks and categories in the
POI collection 111. In general, a scaling factor is a numerical function which takes a POI score as the input, and transforms the POI score into a new score through a defined mechanism. In this present example, the scaling factor is a percentage multiplier, where a POI score is multiplied by a scaling factor associated with the candidate POIs category and the candidate POIs rank within that category. - The scaling factors can be pre-determined manually by an administrator of the
category diversification engine 106, or automatically by a software module. Here, the scaling factors vary depending on the rank and the category of the candidate POIs. For example, atable entry 151 in the POI rank scaling table 112 indicates that for the top-ranked candidate POIs in each category, the POI scores associated with the categories “Restaurant” and “Museum” will be promoted by scaling factors “120%” and “130%”, respectively; however, the POI score associated with the category “Shop” will be neither promoted or demoted, as the corresponding scaling factor here is “100%.” Within each selected category, candidate POIs can be further demoted at lower ranks. The increasing demotions of lower-ranked candidate POIs within a category allow top-ranked candidate POIs in other categories to emerge in the displayed search results. - In some implementations, the scaling factors can be determined dynamically upon the
category diversification engine 106 receiving thePOI collection 111. In one example, the scaling factors can be determined based on the distribution of various categories among all candidate POIs in thePOI collection 111. In the case of over-representation of candidate POIs in a category, thecategory diversification engine 106 may generate or adjust scaling factors to demote lower-ranked candidate POIs in the over-represented category more significantly than lower-ranked candidate POIs in other categories. In another example, the scaling factors of the candidate POIs in a particular category can be determined dynamically based on the non-scaled score of a top-ranked candidate POI in a different category. In the case where the non-scaled score of the top-ranked candidate POI in the different category is much higher than the non-scaled score of the top-ranked candidate POI in the particular category, thecategory diversification engine 106 may generate or adjust scaling factors for the particular category to significantly promote the top-candidate of the particular category, to guarantee or increase the chance that the top-candidate of the particular category will appear among the top search results of a local search. - In some implementations, for a singleton candidate POI where a scaling factor is “100%”, no ranking and scaling steps are required for the singleton candidate POI. The non-scaled POI score for the singleton candidate POI in the
POI collection 111 can be used to compare with the scaled POI scores. In this present example, thecandidate POI 147 is a singleton candidate POI, and the non-scaled POI score for thecandidate POI 147 can be used to compare with the scaled POI scores without going through ranking and scaling in thecategory diversification engine 106. - During state (E), the
category diversification engine 106 applies the POI rank scaling table 112 to the selected categories, and then re-ranks the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories via aprocess 127 into a category-diversifiedPOI collection 113. Theprocess 127 can be performed by a software module. - Here, the candidate POIs in the category-diversified
POI collection 113, re-ranked by the scaled and non-scaled POI scores from the highest to the lowest, are [141 (Restaurant), 145 (Museum), 147 (Shop), 142 (Restaurant), 143 (Restaurant), 146 (Museum), 144 (Restaurant)]. The re-ranked category-diversifiedPOI collection 113 provides an enforcement of category diversity because through candidate POI promotions and demotions, the top candidate POIs in each category is here placed near the top of the search results. - During state (F), the category-diversified
POI collection 113 is forwarded in amessage 128 to thegateway 104 from thecategory diversification engine 106. In one implementation, the category-diversifiedPOI collection 113 can be forwarded in its entirety to thegateway 104. In another implementation, thecategory diversification engine 106 can provide thegateway 104 with a location pointer of which the category-diversifiedPOI collection 113 is stored and can be retrieved. - During state (G), the gateway constructs a
message 130 including the category-diversifiedPOI collection 113, where themessage 130 can be interpreted by theclient device 101. Thegateway 104 sends themessage 130 to theclient device 101 through thenetwork 102. - During state (H), the information related to the category-diversified
POI collection 113 is received and analyzed by theclient device 101, and displayed to the user via thedisplay 131. The top threeresults POIs POI collection 111. Therefore the integrity of the candidate POI rank within a category is preserved even after scaling. -
FIG. 2 is a flow diagram 200 illustrating an example process for providing diversified POIs based on category scaling and ranking. In general, theprocess 200 enforces category diversification for a user-defined search, including a local or point-of-interest (POI) search. Theprocess 200 will be described as being performed by a computer system comprising one or more computers, for example, thecategory diversification engine 106 as shown inFIG. 1 . In this specific example process, theprocess 200 describes enforcing POI category diversification for a POI-related search on a client device; however, theprocess 200 can be, in general, applied to enforcing search result type diversification for a user-specified search on a computer system. - The system receives a request to identify POIs (202). In general, the request is issued by a client device operated by a user. In some implementations, the request contains specific location information of the client device, or the request may contain a location of which the user is interested in exploring. In some implementations, the request may include other user information, e.g. user preferences, time of request, etc.
- The system obtains data identifying the POIs that satisfy the request, and the data includes a respective category associated with each POI, and a score associated with each POI (204). In one implementation, the data can be provided by a POI ID engine. The POI ID engine maintains or has access to a database containing candidate POIs and information related to the candidate POIs. Based on the POI request (202), the POI ID engine analyzes the request and generates a POI collection from the database. The POI ID engine can determine the number of candidate POIs to be included in the POI collection based on predetermined thresholds. In one implementation, the POI ID engine can use a minimum POI score as a threshold. In another implementation, the POI ID engine can use a maximum distance between a candidate POI and the user as a threshold.
- In another implementation, the POI ID engine may use criteria associated with category diversity as thresholds. For example, the POI ID engine may choose to include at least one candidate POI from each selected category. In some implementations, the number of candidate POIs to be included in the POI collection by the POI ID engine may be more than the number of candidate POIs requested by the user or the number of candidate POIs allowed to be displayed on the client device.
- The POI collection is, for example, a list or other data structure that specifies name and location information of the candidate POIs, as well as the category and score associated with each candidate POI. The scores associated with the candidate POIs can be determined by various criteria. For example, the criteria can be the number of reviews from other users, the quality of the reviews (e.g. one to five stars), the distance between a candidate POI to the user, the time of the request, etc. Each criterion can have a different weight, and the weighted scores are combined to construct a POI score for each candidate POI in the POI collection. In some implementations, the weights of the scores can be determined by the user's preferences, which are included in the POI request.
- The system ranks, for each of the selected categories, the candidate POIs associated with the category, based on the respective scores (206). In one implementation, upon receiving the POI collection, the system sorts the candidate POIs in the POI collection into their respective categories. Then the system selects which categories need to be ranked. For example, the system may only rank a category if there are more than one candidate POIs in that category.
- In some implementations, the system may perform the ranking (206) on the server side. For example, a gateway may send the POI collection to a category diversification engine on the server side for ranking the candidate POIs within each of the selected categories. As another example, the POI ID engine may rank the POIs within each of the selected categories prior to forwarding the candidate POI collection to the system.
- In some implementations, the system may perform the ranking (206) on the client side. For example, a gateway may send the POI collection to a client device, and a scaling engine inside the client device may perform the ranking of the candidate POIs within each of the selected categories.
- In some implementations, there may be a category hierarchy associated with the system, where multiple levels of categories exist. For example, for candidate POIs in a “Restaurant” parent-category, the system may further sort these candidate POIs into sub-categories “Restaurant: Italian”, “Restaurant: Chinese”, and “Restaurant: American.” In one implementation, the system may select and separately rank candidate POIs in one or more sub-categories (i.e. “Restaurant: Italian”) associated with one parent-category (i.e. “Restaurant”). In another implementation, the system may select the parent-category and rank all candidate POIs in that parent category (i.e. “Restaurant”) regardless of the sub-categories (i.e. “Restaurant: Italian”) to which the candidate POIs belonged.
- The system scales, for each of the selected categories, the scores of the ranked, candidate POIs associated with the category (208). In general, the system promotes or demotes the POI scores of the candidate POIs through scaling of the POI scores across all selected categories. For each candidate POI in the selected categories, the system scales the POI score associated with the particular candidate POI. In some implementation, the scaling can be performed through a scaling factor in a POI rank scaling table. The POI rank scaling table is, for example, a list or other data structure that specifies scaling factors across each and all selected categories. For each selected category, the scaling factors vary with the POI ranks. In some implementations, a candidate POI with a higher rank can be promoted, which means the POI score associated with the higher-ranked candidate POI will become higher after scaling. A candidate POI with a lower rank can be demoted, which means the POI score associated with the lower-ranked candidate POI will become lower after scaling. The magnitude, or strength, of the scaling can vary with ranks, meaning as ranks go lower, the corresponding candidate POIs can be demoted more significantly. The scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category. In some implementations, a candidate POI with a higher rank can be neither promoted nor demoted, which means the POI score associated with the higher-ranked candidate POI will remain the same after scaling. A candidate POI with a lower rank can be neither promoted nor demoted, which means the POI score associated with the lower-ranked candidate POI will remain the same after scaling. When a candidate POI is neither promoted nor demoted, a scaling of the candidate POI is not required.
- In some implementations, for a singleton candidate POI, which is the only candidate POI present in a category, no scaling is required for the singleton candidate POI. The non-scaled POI score for the singleton candidate POI can be used to compare with the scaled POI scores in the selected categories. In another implementation, scaling can be applied to a singleton candidate POI, as defined in a POI rank scaling table. The scaled POI score for the singleton candidate POI can be used to compare with the scaled POI scores in the selected categories. In some implementations, the scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category.
- The system ranks the candidate POIs across all categories, using the scaled POI scores in the selected categories and the non-scaled POI scores in the other categories (210). In some implementations, the system stores the ranked candidate POIs in a category-diversified POI collection.
- In some implementations, the system may perform the ranking (210) on the server side. For example, a category diversification engine may rank the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories, and store the ranked candidate POIs into a category-diversified POI collection.
- In some implementations, the system may perform the ranking (210) on the client side. For example, a ranking engine inside the client device may rank the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories, and store the ranked candidate POIs into a category-diversified POI collection.
- The system provides data that identifies two or more of the ranked, candidate POIs (212). The number of ranked candidate POIs identified by the system can be determined by a server, e.g. a gateway, or by a client device. In one implementation, the ranked candidate POIs are stored in a category-diversified POI collection on the server side, and system returns the category-diversified POI collection to the client device. In another implementation, the ranked candidate POIs are provided by a ranking engine within the client device. The ranked candidate POIs provided by the system can be displayed on the client device, or can be further processed by the client device.
-
FIG. 3 is a block diagram of anexample system 300 that diversifies POIs using category scaling, at the client side. Briefly, when a user requests to receive POI information in a particular location, thesystem 300 generates a collection of POIs and receives information relating to each candidate POI's respective category and the score and rank within the respective category. Thesystem 300 then returns the POI collection to the client, and, for categories selected for scaling, promotes or demotes the score of each ranked candidate POI within its respective category through a scaling mechanism. Thesystem 300 then re-ranks the scaled and non-scaled POIs into one category-diversified POI collection over all categories, and displays the category-diversified POI collection on the client device. In general, thesystem 300 includes aclient device 301, anetwork 302, agateway 304, and a POI identification (ID)engine 305. - The
client device 301 may be a mobile phone, a laptop computer, a PDA (Personal Digital Assistant), a smart phone, a music player, a tablet computer, an e-book reader, or another portable or mobile device operated by a user. Theclient device 301 includes one ormore processors 312, adisplay 314, one ormore input devices 315, anetwork interface 316, auser preference module 317, ascaling engine module 318, and aranking engine module 319. In another implementation, theclient device 301 is not portable or mobile, but rather is a desktop computer or a server. In a further implementation, some of these structural elements are omitted or combined. - The
client device 301 may be connected to thenetwork 302 and possibly to one or more other networks over thenetwork interface 316. Thenetwork 302 may include, for example, one or more of the Internet, Wide Area Networks (WANs), Local Area Networks (LANs), analog or digital wired and wireless telephone networks (e.g., a PSTN, Integrated Services Digital Network (ISDN), and Digital Subscriber Line (xDSL)), radio, television, cable, satellite, and/or any other delivery or tunneling mechanism for carrying data services. Networks may include multiple networks or subnetworks, each of which may include, for example, a wired or wireless data pathway. - In general, the
gateway 304 coordinates the requests and responses between theclient device 301, and thePOI ID engine 305. For example, when a user operating theclient device 301 requests to receive POI information relating to a particular location, the request can be routed to thegateway 304 through thenetwork 302. Thegateway 304 forwards the request to thePOI ID engine 305. Then, upon receiving a response containing a POI collection from thePOI ID engine 305, thegateway 304 returns the POI collection to theclient device 301. - In more detail, the
POI ID engine 305 receives a request from thegateway 304 as an input. In some implementations, the request can contain user-specific information, e.g. user location, user-defined preferences, and time of the request. ThePOI ID engine 305 maintains or has access to a database containing POIs and information related to POIs. Based on the request from thegateway 304, thePOI ID engine 305 analyzes the request and generates aPOI collection 311 from the database. ThePOI collection 311 is, for example, a list or other data structure that specifies name and location information of the candidate POIs, as well as the category and score associated with each candidate POI. The scores associated with the candidate POIs can be determined by various criteria. For example, the criteria can be the number of reviews from other users, the quality of the reviews (e.g. one to five stars), the distance between a candidate POI to the user, the time of the request, etc. Each criterion can have a different weight, and the weighted scores are combined to construct a POI score for each candidate POI in thePOI collection 311. In some implementations, the weights of the scores can be determined by the user's preferences, which are included in the POI request. - In some implementations, the
POI ID engine 305 can sort the candidate POIs in thePOI collection 311 based on the categories and the POI scores within each respective category. The POI ID engine can also determine the number of candidate POI entries to be included in thePOI collection 311 based on predetermined thresholds. In one implementation, thePOI ID engine 305 can use a minimum POI score as a threshold. In another implementation, thePOI ID engine 305 can use a maximum distance between a candidate POI and the user as a threshold. The output from thePOI ID engine 305 can be thePOI collection 311, which is forwarded to another engine, e.g. thegateway 304. - In more detail, the
scaling engine 318 in theclient device 301 receives thePOI collection 311 as an input. Thecollection 311 can be received from thegateway 304 by thenetwork interface 316 and then be transferred to thescaling engine 318. Thescaling engine 318 sorts the candidate POIs into their respective categories, and ranks the candidate POIs within each of selected categories based on the POI scores in thePOI collection 311. - In some implementations, if there is only one candidate POI in a category, the
scaling engine 318 would not select the category and would not scale the one candidate POI. Thescale engine 318 promotes or demotes the POI scores in thePOI collection 311 through scaling of the POI scores across all selected categories. For each candidate POI entry in the selected categories, thescaling engine 318 scales that particular POI score through a scaling factor in a POI rank scaling table 321. The POI rank scaling table 321 is, for example, a list or other data structure that specifies scaling factors across some or all selected categories. The scaling factors can be derived manually or automatically. For each selected category, the scaling factors vary with the POI ranks. - In some implementations, a candidate POI with a higher rank can be promoted, which means the POI score associated with the higher-ranked candidate POI will become higher after scaling. A candidate POI with a lower rank can be demoted, which means the POI score associated with the lower-ranked candidate POI will become lower after scaling. The magnitude, or strength, of the scaling can vary with ranks, meaning as ranks go lower, the corresponding candidate POIs can be demoted more significantly. The scaling factors for a given rank can vary across different categories to reflect the relative importance of ranks within each respective category. In some implementations, a candidate POI with a higher rank can be neither promoted nor demoted, which means the POI score associated with the higher-ranked candidate POI will remain the same after scaling. A candidate POI with a lower rank can be neither promoted nor demoted, which means the POI score associated with the lower-ranked candidate POI will remain the same after scaling. When a candidate POI is neither promoted nor demoted, a scaling of the candidate POI is not required.
- The candidate POIs with the scaled scores in the selected categories and the candidate POIs with the non-scaled scores in other non-selected categories are collected ranked by a
ranking engine 319 and are collected in a category-diversifiedPOI collection 322. The category-diversifiedPOI collection 322 is, for example, a list or other data structure that specifies scaled and non-scaled scores for all candidate POIs included in thePOI collection 311. In the category-diversifiedPOI collection 322, all candidate POIs are ranked by their scores and are not sorted by categories. - The scaled scores can allow a top candidate in an unpopular category to appear higher in ranks in the category-diversified
POI collection 322. The category-diversifiedPOI collection 322 can provide the user with more top search results across different categories. In some implementations, the category information associated with each candidate POI can be stored in the category-diversifiedPOI collection 322 so the user can still sort the candidate POIs by categories if required. The output from theranking engine 319 can be the category-diversifiedPOI collection 322, and can be displayed on thedisplay 314 in theclient device 301. -
FIG. 3 also illustrates an example flow of data, shown in states (A) to (G). States (A) to (G) may occur in the illustrated sequence, or they may occur in a sequence that is different than in the illustrated sequence. During state (A), a user operating aclient device 301 makes arequest 331 to receive POI information relating to a particular location, and therequest 331 is routed to agateway 304 through anetwork 302. The specific location can be the current location of theclient device 301, or can be a location of which the user is interested in exploring. In some implementations, therequest 331 may include other user information, e.g. user preferences, time of request, etc. - During state (B), the
gateway 304 determines that therequest 331 is related to identifying POIs near a location, and sends arequest 332 to aPOI ID engine 305 to retrieve candidate POIs. ThePOI ID engine 305 receives therequest 332, and constructs aPOI collection 311 based on therequest 332. In this present example, thePOI collection 311 contains sevencandidate POI entries 341 to 347, and thePOI collection 311 includes information on candidate POI names, as well as the categories and scores associated with thecandidate POIs 341 to 347. The scores can be determined by various criteria, which in one implementation can be weighted scores associated with factors such as the distances between the user and the candidate POIs, the number of reviews by other users provided to the candidate POIs, the quality of the candidate POI reviews, the time of the request, etc. - In this present example, among the seven
candidate POIs 341 to 347, four candidate POIs (341 to 344) belong to the category “Restaurant,” two candidate POIs (345 and 346) belong to “Museum,” and one candidate POI (347) belong to “Shop.” Here, thecandidate POIs 341 to 347 in thePOI collection 311, ranked by the POI scores from the highest to the lowest, are [341 (Restaurant), 342 (Restaurant), 343 (Restaurant), 347 (Shop), 345 (Museum), 346 (Museum), 344 (Restaurant)]. The top three candidate POIs are all associated with the category “Restaurant,” which may not be helpful information for a user who is not looking for a place to eat. The over-representation of the POIs in the category “Restaurant” may also limit the number of POI categories the user can view on theclient device 301, as the display on a portable or mobile device may only be large enough to show a few POIs to the user at a time. - In general, one instance of over-representation can occur when candidate POIs in a category (i.e. “Restaurant”) have higher POI scores than candidate POIs in other categories, due to the fact that more reviewers have reviewed POIs associated with the category (i.e. “Restaurant”) than have reviewed POIs associated with other categories (i.e. “Museum”). Another instance where an over-representation of candidate POIs in a particular category may occur is in a user-specified location (i.e. a hospital building) where many candidate POIs in the same category are densely-clustered (i.e. doctors' offices inside the hospital complex); the user can easily overlook a candidate POI in a different category (i.e. a gift shop inside the same hospital complex) if it is not placed near the top of the rank.
- During state (C), the
POI collection 311 is forwarded in amessage 334 from thePOI ID engine 305 to thegateway 304. In one implementation, thePOI collection 311 can be forwarded in its entirety to thegateway 304. In another implementation, thePOI ID engine 305 can provide thegateway 304 with a location pointer of which thePOI collection 311 is stored and can be retrieved. - During state (D), the gateway constructs a
message 335 including thePOI collection 311, where themessage 335 can be interpreted by theclient device 301. Thegateway 304 sends themessage 335 to thenetwork interface 316 of theclient device 301 through thenetwork 302. - During state (E), upon receiving the
POI collection 311 from thenetwork interface 316, thescaling engine 318 sorts the candidate POIs in thePOI collection 311 into their respective categories. Then the scalingengine 318 determines and selects which categories should be ranked and scaled. For example, for a singleton candidate POI, which is the only candidate POI present in a category, no ranking and scaling steps may be required for the singleton candidate POI, since a category with one POI is not considered an over-represented category. For the selected, over-represented categories, thescaling engine 318 ranks the POIs within each selected category by their POI scores. The ranked POI scores are then promoted or demoted by applying the POI rank scaling table 321 to the selected categories. - The POI rank scaling table 321 contains scaling factors associated with all ranks and categories in the
POI collection 311. In general, a scaling factor is a numerical function which takes a POI score as the input, and transforms the POI score into a new score through a pre-determined mechanism. In this present example, the scaling factor is a percentage multiplier, where a POI score is multiplied by a scaling factor associated with the candidate POIs category and the candidate POIs rank within that category. - The scaling factors can be pre-determined automatically by the
scaling engine 318. Here, the scaling factors vary depending on the rank and the category of the POIs. For example, atable entry 351 in the POI rank scaling table 321 indicates that for the top-ranked POIs in each category, the POI scores associated with the categories “Restaurant” and “Museum” will be promoted by scaling factors “120%” and “130%”, respectively; however, the POI score associated with the category “Shop” will be neither promoted or demoted, as the corresponding scaling factor here is “100%.” Within each category, POIs can be further demoted at lower ranks. The increasing demotions of lower-ranked POIs within a category allow promoted top-ranked POIs in other categories to emerge in the displayed search results. - In some implementations, the scaling factors can be determined dynamically upon the
scaling engine 318 receiving thePOI collection 311. For example, the scaling factors can be determined based on the distribution of various categories among all candidate POIs in thePOI collection 311. In the case of over-representation of candidate POIs in a category, thescaling engine 318 may generate or adjust scaling factors to demote lower-ranked candidate POIs in the over-represented category more significantly than lower-ranked candidate POIs in other categories - In some implementations, for a singleton candidate POI where a scaling factor is “100%”, no ranking and scaling steps are required for the singleton candidate POI. The non-scaled POI score for the singleton candidate POI in the
POI collection 311 can be used to compare with the scaled POI scores. In this present example, thecandidate POI 347 is a singleton candidate POI, and the non-scaled POI score for thecandidate POI 347 can be used to compare with the scaled POI scores without going through ranking and scaling by thescaling engine 318. - During state (F), the
ranking engine 319 re-ranks the candidate POIs by the scaled scores in the selected categories and the non-scaled scores in the other categories. The re-ranked data is stored into a category-diversifiedPOI collection 322. Here, the candidate POIs in the category-diversifiedPOI collection 322, re-ranked by the scaled and non-scaled POI scores from the highest to the lowest, are [341 (Restaurant), 345 (Museum), 347 (Shop), 342 (Restaurant), 343 (Restaurant), 346 (Museum), 344 (Restaurant)]. The re-ranked category-diversifiedPOI collection 322 provides an enforcement of category diversity because through candidate POI promotions and demotions, the top candidate POIs in each category is here placed near the top of the search results. - During state (G), the information related to the category-diversified
POI collection 322 is displayed on thedisplay 314 in theclient device 301. The top threeresults POIs POI collection 311. Therefore the integrity of the POI rank within a category is preserved even after scaling. - Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- The term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- A system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (21)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/350,377 US10289648B2 (en) | 2011-10-04 | 2016-11-14 | Enforcing category diversity |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/252,258 US9507801B2 (en) | 2011-10-04 | 2011-10-04 | Enforcing category diversity |
US15/350,377 US10289648B2 (en) | 2011-10-04 | 2016-11-14 | Enforcing category diversity |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/252,258 Continuation US9507801B2 (en) | 2011-10-04 | 2011-10-04 | Enforcing category diversity |
Publications (2)
Publication Number | Publication Date |
---|---|
US20170061025A1 true US20170061025A1 (en) | 2017-03-02 |
US10289648B2 US10289648B2 (en) | 2019-05-14 |
Family
ID=53368656
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/252,258 Active 2032-05-28 US9507801B2 (en) | 2011-10-04 | 2011-10-04 | Enforcing category diversity |
US15/350,377 Active US10289648B2 (en) | 2011-10-04 | 2016-11-14 | Enforcing category diversity |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/252,258 Active 2032-05-28 US9507801B2 (en) | 2011-10-04 | 2011-10-04 | Enforcing category diversity |
Country Status (1)
Country | Link |
---|---|
US (2) | US9507801B2 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210374336A1 (en) * | 2020-05-29 | 2021-12-02 | EMC IP Holding Company LLC | Information uniqueness assessment using string-based collection frequency |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9727595B2 (en) * | 2013-09-20 | 2017-08-08 | Uber Technologies, Inc. | Location searching with category indices |
US10303725B2 (en) * | 2014-05-01 | 2019-05-28 | Airbnb, Inc. | Re-ranking search results for location refining and diversity |
US11042595B2 (en) * | 2016-05-04 | 2021-06-22 | Ebay Inc. | Dissimilar but relevant search engine results |
AU2017264072B2 (en) * | 2016-05-10 | 2019-10-10 | Beijing Didi Infinity Technology And Development Co., Ltd. | Systems and methods for recommending personalized content |
US10018480B2 (en) | 2016-10-24 | 2018-07-10 | Google Llc | Point of interest selection based on a user request |
EP3488355A1 (en) * | 2016-10-24 | 2019-05-29 | Google LLC | Point of interest selection based on a user request |
CN110741227B (en) | 2017-12-05 | 2024-03-29 | 谷歌有限责任公司 | Landmark assisted navigation |
US10939236B1 (en) * | 2018-11-30 | 2021-03-02 | Snap Inc. | Position service to determine relative position to map features |
EP3901884A1 (en) | 2020-04-24 | 2021-10-27 | Naver Corporation | Object recommendation using ambient mindsets |
CN113554871B (en) * | 2021-07-19 | 2023-03-21 | 联想(北京)有限公司 | Internet of vehicles data processing method and electronic equipment |
Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020022956A1 (en) * | 2000-05-25 | 2002-02-21 | Igor Ukrainczyk | System and method for automatically classifying text |
US20060287810A1 (en) * | 2005-06-16 | 2006-12-21 | Pasha Sadri | Systems and methods for determining a relevance rank for a point of interest |
US7284008B2 (en) * | 2000-08-30 | 2007-10-16 | Kontera Technologies, Inc. | Dynamic document context mark-up technique implemented over a computer network |
US20090177652A1 (en) * | 2008-01-08 | 2009-07-09 | Taptu Ltd. | Mobile search service |
US20100121712A1 (en) * | 2008-11-12 | 2010-05-13 | Yahoo! Inc. | Diversity of ads displayed on a publisher page |
US20100195914A1 (en) * | 2009-02-02 | 2010-08-05 | Michael Isard | Scalable near duplicate image search with geometric constraints |
US20100257234A1 (en) * | 2009-04-03 | 2010-10-07 | Caughey David | Method and apparatus for providing content to mobile recipients |
US20100331016A1 (en) * | 2009-05-27 | 2010-12-30 | Geodelic, Inc. | Location-based promotion for a mobile communication network |
US20110137895A1 (en) * | 2009-12-03 | 2011-06-09 | David Petrou | Hybrid Use of Location Sensor Data and Visual Query to Return Local Listings for Visual Query |
US20110145228A1 (en) * | 2009-12-15 | 2011-06-16 | Mapquest, Inc. | Computer-implemented methods and systems for multi-level geographic query |
US20110173194A1 (en) * | 2008-03-14 | 2011-07-14 | Microsoft Corporation | Implicit user interest marks in media content |
US20110238670A1 (en) * | 2010-03-23 | 2011-09-29 | Microsoft Corporation | Crowd-sourcing and contextual reclassification of rated content |
US20110289090A1 (en) * | 2010-05-20 | 2011-11-24 | Google Inc. | Classifying locations for ad presentation |
US20120095819A1 (en) * | 2010-10-14 | 2012-04-19 | Phone Through, Inc. | Apparatuses, methods, and computer program products enabling association of related product data and execution of transaction |
US20120209861A1 (en) * | 2011-02-15 | 2012-08-16 | Telenav, Inc. | Navigation system with rule based point of interest classification mechanism and method of operation thereof |
US20120301014A1 (en) * | 2011-05-27 | 2012-11-29 | Microsoft Corporation | Learning to rank local interest points |
US20130073988A1 (en) * | 2010-06-02 | 2013-03-21 | Layar B.V. | Acquiring, ranking and displaying points of interest for use in an augmented reality service provisioning system and graphical user interface for displaying such ranked points of interest |
US8407211B1 (en) * | 2010-12-16 | 2013-03-26 | Google Inc. | Determining relevance scores for locations |
US8433512B1 (en) * | 2009-11-12 | 2013-04-30 | Google Inc. | Enhanced identification of interesting points-of-interest |
US8738612B1 (en) * | 2011-07-27 | 2014-05-27 | Google Inc. | Resolving ambiguous queries |
Family Cites Families (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6532301B1 (en) * | 1999-06-18 | 2003-03-11 | Microsoft Corporation | Object recognition with occurrence histograms |
US6453315B1 (en) * | 1999-09-22 | 2002-09-17 | Applied Semantics, Inc. | Meaning-based information organization and retrieval |
US20020111847A1 (en) * | 2000-12-08 | 2002-08-15 | Word Of Net, Inc. | System and method for calculating a marketing appearance frequency measurement |
US7249126B1 (en) * | 2003-12-30 | 2007-07-24 | Shopping.Com | Systems and methods for dynamically updating relevance of a selected item |
US7778878B2 (en) * | 2003-12-31 | 2010-08-17 | Amazon Technologies, Inc. | Profiling item sellers to inform item purchasing decisions and build trust in a multiple-seller marketplace |
US7565630B1 (en) * | 2004-06-15 | 2009-07-21 | Google Inc. | Customization of search results for search queries received from third party sites |
US7725463B2 (en) * | 2004-06-30 | 2010-05-25 | Microsoft Corporation | System and method for generating normalized relevance measure for analysis of search results |
US20060218146A1 (en) * | 2005-03-28 | 2006-09-28 | Elan Bitan | Interactive user-controlled relevance ranking of retrieved information in an information search system |
US8903810B2 (en) * | 2005-12-05 | 2014-12-02 | Collarity, Inc. | Techniques for ranking search results |
US8429184B2 (en) * | 2005-12-05 | 2013-04-23 | Collarity Inc. | Generation of refinement terms for search queries |
US9177124B2 (en) * | 2006-03-01 | 2015-11-03 | Oracle International Corporation | Flexible authentication framework |
US7624104B2 (en) * | 2006-06-22 | 2009-11-24 | Yahoo! Inc. | User-sensitive pagerank |
US8442972B2 (en) * | 2006-10-11 | 2013-05-14 | Collarity, Inc. | Negative associations for search results ranking and refinement |
WO2008046104A2 (en) * | 2006-10-13 | 2008-04-17 | Collexis Holding, Inc. | Methods and systems for knowledge discovery |
US20080140641A1 (en) * | 2006-12-07 | 2008-06-12 | Yahoo! Inc. | Knowledge and interests based search term ranking for search results validation |
US20080155426A1 (en) * | 2006-12-21 | 2008-06-26 | Microsoft Corporation | Visualization and navigation of search results |
US7966321B2 (en) * | 2007-01-17 | 2011-06-21 | Google Inc. | Presentation of local results |
US9053195B2 (en) * | 2007-07-19 | 2015-06-09 | Grant Chieh-Hsiang Yang | Method and system for user and reference ranking in a database |
US20090037342A1 (en) * | 2007-07-31 | 2009-02-05 | Echostar Satellite Llc | Systems & methods for determining a value of an intellectual asset portfolio |
US20090164929A1 (en) * | 2007-12-20 | 2009-06-25 | Microsoft Corporation | Customizing Search Results |
US7949643B2 (en) * | 2008-04-29 | 2011-05-24 | Yahoo! Inc. | Method and apparatus for rating user generated content in search results |
US8156120B2 (en) * | 2008-10-22 | 2012-04-10 | James Brady | Information retrieval using user-generated metadata |
US20100121842A1 (en) * | 2008-11-13 | 2010-05-13 | Dennis Klinkott | Method, apparatus and computer program product for presenting categorized search results |
US20100235343A1 (en) * | 2009-03-13 | 2010-09-16 | Microsoft Corporation | Predicting Interestingness of Questions in Community Question Answering |
US20100268651A1 (en) * | 2009-04-20 | 2010-10-21 | Olga Raskina | Automatic generation of a scenario used to optimize a bid award schedule |
US8600993B1 (en) * | 2009-08-26 | 2013-12-03 | Google Inc. | Determining resource attributes from site address attributes |
US20110093331A1 (en) * | 2009-10-19 | 2011-04-21 | Donald Metzler | Term Weighting for Contextual Advertising |
US9836482B2 (en) * | 2009-12-29 | 2017-12-05 | Google Inc. | Query categorization based on image results |
US10692093B2 (en) * | 2010-04-16 | 2020-06-23 | Microsoft Technology Licensing, Llc | Social home page |
US8463772B1 (en) * | 2010-05-13 | 2013-06-11 | Google Inc. | Varied-importance proximity values |
US8515980B2 (en) * | 2010-07-16 | 2013-08-20 | Ebay Inc. | Method and system for ranking search results based on categories |
US8577915B2 (en) * | 2010-09-10 | 2013-11-05 | Veveo, Inc. | Method of and system for conducting personalized federated search and presentation of results therefrom |
US20120158685A1 (en) * | 2010-12-16 | 2012-06-21 | Microsoft Corporation | Modeling Intent and Ranking Search Results Using Activity-based Context |
US8996495B2 (en) * | 2011-02-15 | 2015-03-31 | Ebay Inc. | Method and system for ranking search results based on category demand normalized using impressions |
US8458213B2 (en) * | 2011-02-28 | 2013-06-04 | Ebay Inc. | Method and system for classifying queries to improve relevance of search results |
-
2011
- 2011-10-04 US US13/252,258 patent/US9507801B2/en active Active
-
2016
- 2016-11-14 US US15/350,377 patent/US10289648B2/en active Active
Patent Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020022956A1 (en) * | 2000-05-25 | 2002-02-21 | Igor Ukrainczyk | System and method for automatically classifying text |
US7284008B2 (en) * | 2000-08-30 | 2007-10-16 | Kontera Technologies, Inc. | Dynamic document context mark-up technique implemented over a computer network |
US20060287810A1 (en) * | 2005-06-16 | 2006-12-21 | Pasha Sadri | Systems and methods for determining a relevance rank for a point of interest |
US20090177652A1 (en) * | 2008-01-08 | 2009-07-09 | Taptu Ltd. | Mobile search service |
US20110173194A1 (en) * | 2008-03-14 | 2011-07-14 | Microsoft Corporation | Implicit user interest marks in media content |
US20100121712A1 (en) * | 2008-11-12 | 2010-05-13 | Yahoo! Inc. | Diversity of ads displayed on a publisher page |
US20100195914A1 (en) * | 2009-02-02 | 2010-08-05 | Michael Isard | Scalable near duplicate image search with geometric constraints |
US20100257234A1 (en) * | 2009-04-03 | 2010-10-07 | Caughey David | Method and apparatus for providing content to mobile recipients |
US20100331016A1 (en) * | 2009-05-27 | 2010-12-30 | Geodelic, Inc. | Location-based promotion for a mobile communication network |
US8433512B1 (en) * | 2009-11-12 | 2013-04-30 | Google Inc. | Enhanced identification of interesting points-of-interest |
US20110137895A1 (en) * | 2009-12-03 | 2011-06-09 | David Petrou | Hybrid Use of Location Sensor Data and Visual Query to Return Local Listings for Visual Query |
US20110145228A1 (en) * | 2009-12-15 | 2011-06-16 | Mapquest, Inc. | Computer-implemented methods and systems for multi-level geographic query |
US20110238670A1 (en) * | 2010-03-23 | 2011-09-29 | Microsoft Corporation | Crowd-sourcing and contextual reclassification of rated content |
US20110289090A1 (en) * | 2010-05-20 | 2011-11-24 | Google Inc. | Classifying locations for ad presentation |
US20130073988A1 (en) * | 2010-06-02 | 2013-03-21 | Layar B.V. | Acquiring, ranking and displaying points of interest for use in an augmented reality service provisioning system and graphical user interface for displaying such ranked points of interest |
US20120095819A1 (en) * | 2010-10-14 | 2012-04-19 | Phone Through, Inc. | Apparatuses, methods, and computer program products enabling association of related product data and execution of transaction |
US8407211B1 (en) * | 2010-12-16 | 2013-03-26 | Google Inc. | Determining relevance scores for locations |
US20120209861A1 (en) * | 2011-02-15 | 2012-08-16 | Telenav, Inc. | Navigation system with rule based point of interest classification mechanism and method of operation thereof |
US20120301014A1 (en) * | 2011-05-27 | 2012-11-29 | Microsoft Corporation | Learning to rank local interest points |
US8738612B1 (en) * | 2011-07-27 | 2014-05-27 | Google Inc. | Resolving ambiguous queries |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210374336A1 (en) * | 2020-05-29 | 2021-12-02 | EMC IP Holding Company LLC | Information uniqueness assessment using string-based collection frequency |
US11769005B2 (en) * | 2020-05-29 | 2023-09-26 | EMC IP Holding Company LLC | Information uniqueness assessment using string-based collection frequency |
Also Published As
Publication number | Publication date |
---|---|
US9507801B2 (en) | 2016-11-29 |
US10289648B2 (en) | 2019-05-14 |
US20150169573A1 (en) | 2015-06-18 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10289648B2 (en) | Enforcing category diversity | |
US9116982B1 (en) | Identifying interesting commonalities between entities | |
KR101667344B1 (en) | Method and system for providing search results | |
KR101503864B1 (en) | Interleaving search results | |
AU2012340952B2 (en) | Grouped search query refinements | |
KR101514588B1 (en) | System and method for providing contextual actions on a search results page | |
US9081481B2 (en) | Adjusting list views based on list sorting and item highlighting | |
US20130268533A1 (en) | Graph-based search queries using web content metadata | |
US20080215416A1 (en) | Searchable interactive internet advertisements | |
EP2973028A2 (en) | Query intent expression for search in an embedded application context | |
EP2062169A2 (en) | Search document generation and use to provide recommendations | |
US11132406B2 (en) | Action indicators for search operation output elements | |
US20120109932A1 (en) | Related links | |
US9275147B2 (en) | Providing query suggestions | |
US9183577B2 (en) | Selection of images to display next to textual content | |
US9411857B1 (en) | Grouping related entities | |
US11397737B2 (en) | Triggering local extensions based on inferred intent | |
US20140330770A1 (en) | Context-aware implicit and explicit search | |
US20170169055A1 (en) | Semantic geotokens | |
US20240086479A1 (en) | Identification and Issuance of Repeatable Queries | |
US9152698B1 (en) | Substitute term identification based on over-represented terms identification | |
US20150227583A1 (en) | Managing search results | |
US9558233B1 (en) | Determining a quality measure for a resource | |
JP2007148476A (en) | Information retrieval support system, information retrieval support method, retrieval support module program and information retrieval support program | |
US9116996B1 (en) | Reverse question answering |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ARORA, NEHA;YANG, KE;YANG, ZUGUANG;REEL/FRAME:040310/0217Effective date: 20111003 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
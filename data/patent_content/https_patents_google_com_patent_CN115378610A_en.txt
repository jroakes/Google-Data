CN115378610A - Location-based access controlled access to resources - Google Patents
Location-based access controlled access to resources Download PDFInfo
- Publication number
- CN115378610A CN115378610A CN202211006095.9A CN202211006095A CN115378610A CN 115378610 A CN115378610 A CN 115378610A CN 202211006095 A CN202211006095 A CN 202211006095A CN 115378610 A CN115378610 A CN 115378610A
- Authority
- CN
- China
- Prior art keywords
- resource
- token
- location
- access
- client device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 51
- 230000015654 memory Effects 0.000 claims description 66
- 230000004044 response Effects 0.000 claims description 43
- 238000012360 testing method Methods 0.000 description 17
- 238000004891 communication Methods 0.000 description 15
- 230000008569 process Effects 0.000 description 15
- 230000008520 organization Effects 0.000 description 14
- 238000010200 validation analysis Methods 0.000 description 13
- 238000012795 verification Methods 0.000 description 12
- 238000004590 computer program Methods 0.000 description 7
- 235000014510 cooky Nutrition 0.000 description 6
- 239000004065 semiconductor Substances 0.000 description 6
- 238000012545 processing Methods 0.000 description 5
- 238000010586 diagram Methods 0.000 description 4
- 230000006870 function Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 239000000463 material Substances 0.000 description 3
- 239000000758 substrate Substances 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 2
- 239000007787 solid Substances 0.000 description 2
- 238000013475 authorization Methods 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 239000003795 chemical substances by application Substances 0.000 description 1
- 238000007796 conventional method Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000012544 monitoring process Methods 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000012421 spiking Methods 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000001960 triggered effect Effects 0.000 description 1
- 230000003442 weekly effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/321—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving a third party or a trusted authority
- H04L9/3213—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving a third party or a trusted authority using tickets or tokens, e.g. Kerberos
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/10—Network architectures or network communication protocols for network security for controlling access to devices or network resources
- H04L63/107—Network architectures or network communication protocols for network security for controlling access to devices or network resources wherein the security policies are location-dependent, e.g. entities privileges depend on current location or allowing specific operations only from locally connected terminals
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/02—Network architectures or network communication protocols for network security for separating internal from external traffic, e.g. firewalls
- H04L63/0272—Virtual private networks
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
- H04L63/0807—Network architectures or network communication protocols for network security for authentication of entities using tickets, e.g. Kerberos
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
- H04L63/0876—Network architectures or network communication protocols for network security for authentication of entities based on the identity of the terminal or configuration, e.g. MAC address, hardware or software configuration or device fingerprint
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/10—Network architectures or network communication protocols for network security for controlling access to devices or network resources
- H04L63/108—Network architectures or network communication protocols for network security for controlling access to devices or network resources when the policy decisions are valid for a limited amount of time
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3297—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving time stamps, e.g. generation of time stamps
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2463/00—Additional details relating to network architectures or network communication protocols for network security covered by H04L63/00
- H04L2463/121—Timestamp
Abstract
A method and system for location-based access controlled access to a resource is provided, the method comprising: receiving a request for a controlled access resource from a client device, the request having a location; determining that the location is not an approved location; determining that the request includes a token, the token including a timestamp, a random number, and licensed resource information, the licensed resource information identifying resources available to the client device via the sanctioned location; determining that the token has not expired based on the timestamp; determining that the resource identified by the granted resource information matches the requested resource; and providing the controlled access resource to the client device, wherein the client device would otherwise be denied access to the controlled access resource.
Description
This application is a divisional application of the following applications,
international application No. of the original application: PCT/US2019/042061
International filing date of the original application: in 2019, the period of 7, 16,
national application number of the original application: 201980010007.2,
the invention name of the original application: location-based access controlled access to resources
RELATED APPLICATIONS
This application claims priority from U.S. application No. 16/122,294 filed on 5.9.2018 and U.S. provisional application No. 62/718,309 filed on 13.8.2018, which are incorporated herein by reference in their entirety.
Background
Some systems control access to resources based on approved locations, such as IP addresses (e.g., proxy servers, VPNs, etc.), physical locations, and so forth. For example, a university may have an agreement with a particular publisher allowing anyone using a computer on a campus or a WiFi network on a campus to access some or all of the articles managed by the publisher. As another example, an employee may access a web page inside a company (e.g., through a VPN or proxy server) while using enterprise software. Access to these resources will be blocked when outside the authorized location, e.g., for requests associated with IP addresses that do not match the authorized location.
Disclosure of Invention
Embodiments enable secure, seamless access to controlled access resources outside of authorized locations without the use of personally identifiable information or the need for a login procedure, while still enabling the resource owner/manager to monitor access and handle potential abuse. Embodiments create state data for a client device when the client device accesses a controlled access resource from an approved location, for example, using WiFi within a campus or logging in through a Virtual Private Network (VPN). The status data may include a timestamp, a device identifier, and licensed resource information. The licensed resource information may be any information for identifying the resource of the user based on the authorized location. In other words, the licensed resource information represents resources available to the client based on membership of the client device and the institution associated with the authorized location. The device identifier may be a cookie generated by a server or other computer associated with the approved location (e.g., a campus or library website or proxy server), or may be another identifier such as a mobile number or a user account identifier. In some embodiments, such identifiers may be hashed in the state data records. For example, the status data expires after a predetermined time has elapsed after the status data is generated.
Embodiments use state data to enable a client device to access a controlled access resource later outside of an approved location. For example, once a student leaves a campus, embodiments enable the student to access resources for a limited time, as if the student were still on the campus. Thus, embodiments provide seamless access. When the system receives a request for controlled access to a resource from outside the authorized location, the system checks the device for unexpired status data. In response to the location of the unexpired state data, the system provides a link, e.g., a URL, to the controlled access resource, the link including an encrypted token, e.g., added to the URL. The resource owner/manager identifies the presence of the token in the request, decrypts the token, and performs one or more validation tests using the unencrypted token data. The tests may include whether the token is expired, how many times the token is presented, and/or whether the token presented by the client device is too far from the location of the request to generate the token. These tests may prevent another client device from accessing, for example, by sharing a URL.
In one general aspect, a method includes: receiving a request for a controlled access resource from a client device, the request including a client device identifier, determining that the request is not associated with an approved location, authenticating state data for the client device identifier, generating, at a server, a link for accessing the controlled access resource, generating an encrypted token including a timestamp, a random number, and licensed resource information from the state data, including the encrypted token in the link, and providing the link to the client device. The link is configured for use by the client device to request controlled access to the resource. That is, the client device uses the link to request controlled access to the resource.
The request may be a first request, the controlled access resource may be a first controlled access resource, and prior to receiving the first request, the method may further include receiving a second request from the client device, the second request including a client device identifier, determining that the second request is associated with an approved location, generating status data for the client device; and storing the state data in a memory.
The status data may include a timestamp, a client device identifier, and licensed resource information.
The granted resource information may represent an approved location.
The granted resource information represents the sanctioned location and the controlled resource information available to the sanctioned location.
The approved location may be a domain name.
The approved location may be an Internet Protocol (IP) address.
The request may be a query and the controlled access resource may be a resource responsive to the query.
The client device identifier may be a user account.
The client device may request the controlled access resource using the link, where using the link includes sending the link to the controlled resource server in the request.
The method may further include, at the controlled resource server, receiving a link in a request for a controlled access resource, authenticating a token in the link, decrypting the token, verifying the token by determining that the token has not expired based on the timestamp, and determining that the controlled access resource is available based on the licensed resource information, and providing the controlled access resource to the client device in response to the token for which the token was verified.
Verifying the token may further include determining that the IP subnet contained in the token matches the IP subnet of the IP address from which the request was received. That is, the IP address of the client device can be determined by the controlled resource server, and the IP subnet can be determined and compared to the IP subnet contained in the token. In this way, it can prevent
The above-described method may be implemented in a system comprising one or more servers and/or one or more client devices.
In one general aspect, a system includes at least one processor, a data store storing data records for storing state data records of client devices, and a memory storing instructions that when executed by the at least one processor cause the system to perform operations. Operations include receiving a query from a client device, the client device having a device identifier, and determining that at least one resource responsive to the query is a controlled access resource. In response to determining that the query is associated with an endorsement location for the controlled access resource, the operations include generating a link to the controlled access resource and generating a state data record for the client device in the data store, the state data including a client device identifier, a timestamp, and an association with the endorsement location. In response to determining that the query is not associated with an approved location, the operations include authenticating an unexpired status data record for the client device identifier in the data store, and, in response to authenticating the unexpired status data record, generating a token and including the token in a link to the controlled access resource, the token including a random number, a timestamp, and licensed resource information from the status data record. In response to failing to identify a status data record for the client device identifier in the data store, generating a link that does not contain the token and returning a search result to the client device, the search result comprising a link to the resource, wherein the client device requests the resource from a controlled access server using the link to the resource, the controlled access server configured to provide access to the resource from a request associated with the approved location.
Providing access to a resource from a request associated with an authorized location, wherein the controlled access server is configurable to: receiving a link from a particular client device to a controlled access resource, the link having an associated location; determining whether the location is an authorized location; providing a controlled access resource in response to determining that the location is an approved location; and in response to determining that the location is not an approved location. In response to determining that the link includes a token that has not expired; a controlled access resource is provided and access to the controlled access resource is denied in response to determining that the link lacks a token or that a token contained in the link has expired.
The token may further include an IP subnet for the requested IP address, and the controlled access server is further configured to: in response to determining that the location is not an approved location and that the link includes an unexpired token: determining whether the IP subnet of the particular client device matches the IP subnet in the token; and denying access to the controlled access resource in response to determining that the IP subnet does not match.
The authorized location may represent a physical location.
The approved location may be an IP address.
The token may be encrypted before being incorporated into the link.
In one general aspect, a method includes: receiving a request from a client device for controlled access to a resource, the request having a location; determining that the location is not an approved location; determining that the request includes a token, the token including a timestamp, a nonce, and licensed resource information; determining that the token has not expired based on the timestamp; determining that the resource identified by the granted resource information matches the requested resource; and providing the controlled access resource to the client device, wherein the client device is additionally to be denied access to the controlled access resource.
The token may be encrypted and the method may further comprise decrypting the token.
The token may further include an IP subnet, and the method may further include determining that the IP address of the client device has an IP subnet that matches the IP subnet contained in the token.
The method may further comprise: incrementing a counter for the token, the token being determined by a random number; and determining that the counter of the token has not reached a threshold.
Optional features of one aspect may be combined with another aspect where appropriate.
In one general aspect, a computer program product embodied on a computer-readable storage device includes instructions that, when executed by at least one processor formed in a substrate, cause a computing device to perform any of the methods, operations, or processes disclosed. Another general aspect includes a system and/or a method for generating and maintaining state data for a client device, the system and/or a system and/or method for triggering generation of a restricted token for seamless access to a controlled access resource based on location data, the system and/or method substantially as shown in the claims and/or described in connection with at least one of the figures.
One or more embodiments illustrated herein may achieve one or more of the following advantages. As an example, this embodiment protects the privacy of the user because each link used to access a resource has a unique token that lacks personally identifiable information, thereby preventing network/ISP level monitoring from concatenating multiple accesses of a user using the token. As another example, recording licensed resource information (e.g., subscription information, organization identifier, etc.) instead of recording the IP address of the client device in the state data and token avoids recording a particular device location, thereby further protecting user privacy. As another example, some embodiments prevent malicious actors from discovering affiliations between a particular user/client device and an organization by encrypting the token. As another example, some embodiments prevent a malicious actor from discovering affiliations between a particular user/client device and an organization because the status data includes information that authenticates a resource or set of resources, rather than location. As another example, the disclosed embodiments reduce processing cycles and bandwidth consumption of the client device by eliminating the need for a login process for requests outside of an authorized location. The login process consumes processing cycles and bandwidth and often must be repeated because of a timeout (e.g., inactivity for a period of time). Reducing the use of bandwidth and processing cycles is particularly important in a mobile environment, for example where the client device is a mobile phone or tablet computer, as this may save battery life. Eliminating the login process also improves the user experience by seamlessly accessing, i.e., the user does not need to set up additional flows or provide additional input to access the controlled resource. Thus, the present embodiment reduces the time and computing resources consumed by a user accessing a controlled resource outside of an approved location. Seamless access may also increase the use (i.e., demand) for resources, increasing the incentive for organizations and resource owners to provide such services.
The details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features may be derived from the description, drawings, and claims.
Drawings
Fig. 1A and 1B illustrate block diagrams of example systems in accordance with the disclosed subject matter.
FIG. 2 illustrates an example data structure in accordance with the disclosed subject matter.
FIG. 3 is a flow diagram of an example process for accessing a controlled resource outside of an authorized location in accordance with the disclosed embodiments.
FIG. 4 illustrates an example of a computer device that may be used to implement the described technology.
FIG. 5 illustrates an example of a distributed computer device that may be used to implement the described technology.
Like reference symbols in the various drawings indicate like elements.
Detailed Description
FIG. 1 is a block diagram of a controlled access system according to an example embodiment. The system 100 can be used to seamlessly enable a client device to access location-based controlled access resources outside of an authorized location for a limited time. This access is seamless because the user of the client device can access the resource from the approved location and from locations other than the approved location in the same manner. In other words, there is no difference to the user in accessing the controlled access resource from the authorized location and accessing the resource from a location other than the authorized location, as long as it is done within a limited time. The access is time limited to ensure that the user remains associated with the authorized location. The system 100 can grant access rights without using individual identification information, thereby guaranteeing user privacy. The system 100 records status data of the device when the device accesses the controlled resource through the approved location. The status data record identifies information for licensed resources obtained through membership between the client device and an authorized location. The status data may expire after a period of time, e.g., valid for a limited time. Each time a client device accesses a resource through an approved location, the state data is updated, e.g., a new record written or a record of the client device is updated. If the client device attempts to access the controlled resource outside of the approved location, the system 100 identifies the status date of the client device and uses the licensed resource information in the status data to generate a token that is passed to the owner of the resource. The owner can identify the token and allow access to the resource. The token is valid only for a short time to prevent misuse and may be encrypted to ensure privacy and further limit the chance of abuse. System 100 in fig. 1 is illustrated as a system including a resource access server 110 and a controlled resource server 180. However, the resource access server 110 need not be used, and the functions performed by the resource access server 110 may be performed at the controlled resource server 180. Thus, embodiments are not limited to the precise configurations described.
The approval location 160 may be an IP address or physical location associated with a particular institution, such as a library, educational institution, company, hospital, enterprise system, or the like. The organization may provide access to controlled access items via the approval location 160, for example, through a subscription agreement, employment agreement, or other contractual arrangement. In some embodiments, the institution may be the owner/manager/operator of the controlled resource server 180. For ease of illustration, references to the owner of the controlled resource server 180 as used herein also refer to the manager of the resource and/or the operator of the controlled resource server 180. In some embodiments, the organization may enter into an agreement with the owner of the controlled resource server 180. In both cases, the organization may provide the user with access to the controlled access item via the approval location 160. The authorized location 160 has associated location information. In some embodiments, the approved location information may be an Internet Protocol (IP) address or a portion thereof. This can be a complete IP address, an IP subnet, a domain (e.g., static. Net), a subdomain (e.g., description. Instruction. Net or www. Instruction. Net/description), an email domain, etc. In some embodiments, the location information may be physical location information. For example, an IP address or a portion thereof may be mapped to a physical location. As another example, a browser on the client may include a geo-location API, and this information may be used as location information. Other similar types of information may be used for the location information used to authenticate the authorized location 160.
The controlled access system 100 may include a resource access server 110, and the resource access server 110 may be one or more computing devices in the form of many different devices, such as standard servers, clusters or rack server systems of such servers. For example, the resource access server 110 may be implemented in a distributed manner among multiple computing devices. In addition, the server 110 may be implemented in a personal computer or distributed among multiple personal computers. The resource access server 110 may be an example of a computer device 400 as shown in FIG. 4, or an example of a computer device 500 as shown in FIG. 5. The resource access server 110 may include one or more processors formed in a substrate that are configured to execute one or more machine-executable instructions or software, firmware, or a combination thereof. Processors may be semiconductor-based — that is, processors may comprise semiconductor materials that may perform digital logic.
The resource access server 110 may also include one or more computer memories. A memory, such as a main memory, may be configured to store one or more data temporarily, permanently, semi-permanently, or a combination thereof. The memory may include any type of storage device that stores information in a format that can be read and/or executed by one or more processors. The memory may include volatile memory, non-volatile memory, or a combination thereof, and stores modules or engines that perform certain operations when executed by the one or more processors. In some embodiments, the modules may be stored in an external storage device and loaded into memory of server 110. In some embodiments, the modules may include an access engine 120 and a verification engine 122. The access engine 120 represents a web site or web portal for searching and providing access to various resources. In some embodiments, the access engine 120 may be a search engine and may use the index 112 to provide search results in response to a query. The index 112 may be any type of index for looking up resources that are responsive to a query. The index 112 may include resources from several different servers, for example, resources available on the internet. Index 112 may include resources from multiple (not shown) controlled resource servers 180. Index 112 may include resources from multiple controlled resource servers 180 and other servers (not shown) with uncontrolled resources. In some embodiments, index 112 may be an index of one or more resources available via the internet. In some embodiments, index 112 may be an index of resources provided over an intranet. In some embodiments, the index 112 may be an index of one or more particular categories of resources, such as e-books, songs, videos, academic articles, white papers, and the like. The index 112 may be stored in a memory of the resource access server 110. The index 112 may be distributed in the memory of multiple computing devices, collectively referred to as the resource access server 110. All or a portion of the index 112 may be stored in a memory separate from the resource access server 110 but accessible to the resource access server 110.
The resource access server 110 may also include an access database 116. The access database 116 may be stored in a memory of the resource access server 110. The access database 116 may be stored in a memory accessible to the resource access server 110. Access database 116 may include information indicating which locations are identified for particular controlled access resources and/or particular controlled resource servers. For example, for each controlled access resource, the access database 116 may indicate which locations are identified. As another example, for each location, the access database 116 may indicate controlled access resources that are accessible to the location. As another example, for one category of controlled access resources, the access database 116 may indicate which locations are authorized locations. As another example, for a particular controlled resource server 180, the access database 116 may include information indicating which locations are identified. For example, for each controlled resource server 180, the access database 116 may indicate that access is granted to all controlled access resources at the server 180 as a location of authorized locations for that server. Other similar combinations are possible. In some embodiments, the access database 116 is incorporated into the index 112. For example, for each resource in the index, the index entry may include an association with a location that is considered an approved location for the resource. In some embodiments, if a resource is determined to be responsive to a query, the resource access server 110 includes the resource (i.e., a URL or other link to the resource) in the search results when the query is associated with and/or from an approved location for the resource. In some embodiments, the resource access server 110 includes one link for a resource when the request is associated with (e.g., from) the approved location, and the resource access server 110 includes a different link when the request is not associated with the approved location.
The verification engine 122 may apply the access database 116 to the index 112 in response to the query. For example, the verification engine 122 can determine whether the query originated from, was associated with, or was unrelated to the approved location. When the query originates from an approved location of the controlled access resource that is responsive to the query, the access engine 120 can generate a link to the controlled access resource for inclusion in the query results. When the query is associated with, but not originated from, the endorsed location, the access engine 120 may generate an encrypted token and include the encrypted token with the link in the search results. In some embodiments, an encrypted token may be added to the link. In some embodiments, an encrypted token may be inserted into the link. In some embodiments, the link with the encrypted token, without the encrypted token, is the same as the link for the request originating from the authorized location. The authentication engine 122 may encrypt the token using the encryption key 118. The encryption key 118 is shared with the controlled resource server 180 so that the controlled resource server 180 can accept and validate the link including the encrypted token. The verification engine 122 may use the state data 114 to determine whether a query that does not originate from an approved location is associated with an approved location.
FIG. 2 illustrates an exemplary data structure for storing state data. The data structure of the state data 205 is an example of a record in the state data 114. In the example of fig. 2, the state data 205 includes a timestamp 210. The timestamp 210 is used to impose a time limit on the affiliation. The status data 205 may be valid for some set period of time (e.g., 30 days, 7 days, 1 day, etc.), which time limit may be contractually specified, for example, by an organization associated with the approved location, the owner of the controlled access resource, or a combination of these. For example, a particular university may require students to refresh status data at least weekly or monthly, e.g., by accessing the campus via their devices and using campus WiFi. The timestamp 210 may be the time at which the status data expires. Timestamp 210 may be a time at which state data was generated and/or updated and state data 205 expired after a predetermined time. The state data 205 also includes a device identifier 215. The device identifier 215 identifies the requesting client device, e.g., client device 170. In some embodiments, the device identifier 215 may be a value from a cookie. The cookie may be provided to the client device 170 by the institution using conventional methods. In some embodiments, the device identifier 215 may be a user account. In such embodiments, the state data 205 may be considered an attribute of the user account. The device identifier 215 may be any information used to uniquely identify the client device. The state data 205 may also include licensed resource information 220. Licensed resource information 220 may be used to identify resources available to the client device, for example, based on the client device making a request via an approved location. For example, the licensed resource information 220 can be, for example, an IP address for campus WiFi, a domain name for a library website, a user identifier for a company agent or authorized location, or a location code, etc.
The resource access server 110 may generate or update the client device's state data each time the resource access server 110 receives a request from the client device through the approved location. Generating the state data includes writing a new record for the client device and the approved location. The update status data includes a timestamp for an existing record in the client device and authorized location update status data 114. Expiration of the status data 114 ensures that access to resources outside of the sanctioned location is granted to people who have active, persistent membership to the sanctioned location. In some embodiments, the state data 114 may be stored in the server along with cookie information. In some embodiments, the status data 114 may be associated with a user account. For example, a user may have an account with the resource access server 110, and the status data may be associated with the user account. For example, a user may log into a user account on the resource access server 110 while using a library portal at a library. In some embodiments, the association with the approved location of the library may be stored as part of the user account. In some embodiments, the association between the approved location of the library and the user account is recorded in a separate data store of the resource access server.
If the controlled access resource responds to a query that does not originate from an approved location but is associated with unexpired state data, the access engine 120 may generate a token for the resource. In some embodiments, each resource has a respective token. Fig. 2 illustrates an exemplary token 250. The token 250 includes a timestamp 225. Timestamp 225 may represent the time of token generation or timestamp 255 may represent the time of token expiration. In either case, the system may use the timestamp 225 to verify that the token has not expired. The window of validity of the token may be small, e.g., one or several hours. The token 250 may also include a random number 230. The random number ensures that the token is unique. Uniqueness enables the validation engine 186 of the controlled resource server 180 to ensure that the token is not used too many times. In some embodiments, the token is for limited use, e.g., for a particular resource identified by a URL, and may only be valid for a period of about one hour. While a limited number of accesses may be allowed, e.g., by a "back" button or a "forward" button of the browser, without generating a new token, an excessive number of accesses may be an indication of a shared link. The random number 230 may be of a size suitable for the environment to ensure uniqueness. In some embodiments, this may be a 64-bit number, but may be larger or smaller depending on the implementation environment. The token 250 may also include licensed resource information 235. The licensed resource information 235 is used to identify resources available to the client device. The licensed resource information 235 can include an identifier for the authorized location. The licensed resource information 235 may include an identifier of the resource. The licensed resource information 235 can include a set identifier for a set of resources available from the controlled resource server. The licensed resource information 235 may include a physical location identifier. Granted resources information 235 is any information that enables controlled resource server 180 to determine whether a requestor has access to a requested resource, as is done for a request from an approved location. In some embodiments, the licensed resource information may be optional, for example, if another server or process has verified whether the requestor has access rights before generating the URL and/or token. Token 250 may also include an IP subnet 245 of the client device that triggered the generation of the token. The IP subnet 245 enables the controlled resource server 180 to identify abuse. For example, IP subnet 245 may allow a user riding a subway to access a resource after switching to a different base station, but not if the device travels outside the IP subnet. Thus, the distribution of tokens to others is prevented, coupled with the expiration of the token and allowing the presentation several times without exceeding some threshold number.
Once generated, each token may be encrypted using encryption key 118 and included in a link (e.g., a URL) to the controlled access resource of the response. The link enables a query requestor, e.g., a user of client device 170, to request the resource from controlled resource server 180.
The controlled access system 100 may include a controlled resource server 180, and the controlled resource server 180 may also be one or more computing devices, which may be a number of different forms of devices, such as standard servers, clusters of such servers, or rack-mounted server systems. For example, controlled resource server 180 may be implemented in a distributed manner among multiple computing devices, in a personal computer, or distributed among multiple personal computing devices. Controlled resource server 180 may be an example of computer device 400, as shown in FIG. 4, or an example of computer device 500, as shown in FIG. 5. The controlled resource server 180 may include one or more processors formed in a baseboard configured to execute one or more machine-executable instructions or one or more pieces of software, firmware, or a combination thereof. The processor may be semiconductor-based, i.e., the processor may comprise semiconductor material that may perform digital logic.
Controlled resource server 180 may include one or more computer memories. A memory, e.g., main memory, cache memory, disk memory, etc., may be configured to store one or more data temporarily, permanently, semi-permanently, or a combination thereof. The memory may include any type of storage device that stores information in a format that is readable and/or executable by the one or more processors. The memory may include volatile memory, non-volatile memory, or a combination thereof, and store data and/or modules or engines that perform certain operations when executed by the one or more processors. In some embodiments, the data and/or modules may be stored in an external storage device and loaded into memory of the controlled resource server 180. Controlled resource server 180 may include controlled access resources 182, with controlled access resources 182 stored in one or more memories. Controlled access resource 182 may be a repository of any type of resource, such as a document, audio file (e.g., music or audio book), video file, image, web page, application or other executable file, product, etc., or a collection of any type of resource therein, such as a song album, product catalog, or article journal. In some embodiments, controlled access resource 182 may be distributed across multiple computing devices.
Controlled resource server 180 may include a validation engine 186 stored as modules in one or more memories. The verification engine 186 controls access to the controlled access resource 182. For example, the validation engine 186 may provide controlled access to the resource 182 in response to a request from an approved location. An approved location is any information identified by controlled resource server 180 as having access to one or more controlled access resources 182. The location may be approved because the organization has an agreement (e.g., permission, subscription) with the owner or operator of the controlled resource server 180. For example, a university may have a subscription from a publisher to access certain periodicals, journal articles, books, and the like. The publisher may identify the request from the IP address within the campus as a request from an approved location. As another example, a library might enter into an agreement with a provider of audio books or other publishers to obtain certain audio books or electronic books. . The audio reader provider can identify the request originating from the library domain as an approved location. As another example, a company may grant employees using a particular Virtual Private Network (VPN), enterprise server, or proxy server access to certain web pages or internal files. The company may identify the request from the VPN as coming from an approved location. In another example, a company may grant access to outsourced services based on a request from a proxy server, such as a customer relationship management system (CRM), pending tasks/instruments management system, inventory management system, and so forth. This list is not exhaustive, but only non-limiting examples.
The verification engine 186 may perform a series of tests on incoming resource requests. One of the tests may be whether the authorized location has access to the requested resource. As indicated above, not all of the controlled access resources 182 may be available for a particular authorized location. In such embodiments, the verification engine 186 may deny the access request in response to determining that the requested resource cannot be accessed from the approved location. In some embodiments, the verification engine 186 may determine whether the request is from an approved location. In some embodiments, if the request is from an approved location, validation engine 186 may provide the requested resource from controlled access resource 182 to the requestor. The requested resource is a resource identified by a link (e.g., a URL). In some embodiments, controlled resource server 180 may perform additional validation, e.g., using known processes to monitor for spiking or abuse behavior.
If the request is not from an approved location, the validation engine 186 can determine whether the request includes a token. The token may be encrypted and used by the system to provide access to controlled access resource 182 for a limited time as if the request came from an approved location. The verification engine 186 may decrypt the token using the encryption key 188. Encryption key 188 is shared between controlled resource server 180 and a server that tracks and maintains state data for client devices (e.g., resource access server 110). As discussed above with respect to token 250, the token may include data that is used by authentication engine 186 to perform additional authentication of the request. If the request with token passes the validation request, the validation engine 186 provides the requested resource as if the request came from an approved location.
The controlled access system 100 may include a client device 170. Client device 170 may be any computing device belonging to a user, such as a smartphone or other handheld computing device, a tablet, a wearable computing device, a laptop, a netbook, an e-reader, a personal computer, a smart speaker, a television with a processor, etc., that is capable of requesting resources through authorization location 160 as well as through other locations. As shown in fig. 4, client device 170 may be an example of a computer device 400 or 450.
The client device 170 may include one or more processors formed in a substrate that are configured to execute one or more machine-executable instructions or one or more software, firmware, or a combination thereof. The processor may be semiconductor-based, i.e., the processor may comprise semiconductor material that may perform digital logic. Thus, the client device 170 may include one or more computer memories configured to store one or more data temporarily, permanently, semi-permanently, or a combination thereof. The client device 170 may be associated with an identifier 175. The identifier 175 may be provided by the resource access server 110, for example, via a cookie. The identifier 175 may be a user identifier of a user account, such as a unique username. The client device 170 may include an application (not shown), such as a browser, that represents machine-executable instructions in the form of software, firmware, or a combination thereof. The client device 170 may use these applications to request and access resources. In some embodiments, the application may be a mobile application.
Client devices 170, resource access server 110, and/or controlled resource server 180 may communicate with each other and other client devices and servers over one or more networks. These networks (not shown) may be, for example, the internet, wired or wireless Local Area Networks (LANs), wiFi connections, ethernet connections, wide Area Networks (WANs), cellular data networks, and/or communications networks, among others, implemented using, for example, gateway devices, bridges, switches, cables, routers, and/or the like.
In the embodiment of FIG. 1A, the client device 170 connects to the resource access server 110 through the approval location 160. The connection may be a WiFi, ethernet, intranet, or other similar type of connection. The connection may also be a VPN or internet connection, for example by logging in. The client device 170 requests a resource (e.g., arrow 1) via 160. Resource access server 110 represents a common access portal such as a search engine web site, a library portal, a hospital portal, etc. The request (e.g., arrow 1) may be in the form of a general query or a query directed to a particular resource. The resource access server 110 generates a response (e.g., arrow 2) that includes one or more resource links in response to the query. If the request is a general query, resource access server 110 can provide a link to a responsive resource, which can include one or more controlled access resources. If the request is for a particular resource, the response may be a single link to the resource. The resource access server 110 also generates status data for the client device 170, recording the association between the client device 170 and the authorized location. Thus, the response (e.g., arrow 2) is a link, e.g., a URL, to the controlled access resource (or URLs of two or more resources in response to a general query). Since the request is made through an approved location, the link may be a conventional link, e.g., containing no token. The search results may be displayed to a user of the client device (not shown), and the user may request a particular resource by selecting a link (e.g., arrow 3) for one of the controlled access resources. The request is made to controlled resource server 180 through an approval location 160. Controlled resource server 180 identifies the request as a request from an approval location (e.g., arrow 3) and provides the resource (via the validated licensed resource information) to client device 170 via approval location 160 (e.g., arrow 4).
Later, the client device 170 may make another request for controlled access to the resource beyond the approval location 160 (e.g., arrow 5). For example, a library sponsor may request access to audio books from a public access portal at home. The request may also be in the form of a query. Resource access server 110 may determine that the resource is a controlled access resource and that the request is outside of the approved location for the resource. In response, the resource access server 110 may locate state data for the client device 170 and, in response, may generate and include an encrypted token in the resource link to the client device (e.g., arrow 6). Client device 170 may use the link to request the resource from controlled resource server 180 (e.g., arrow 7). Controlled resource server 180 may authenticate the token in the link and provide client device 170 with access to the resource (e.g., arrow 8) if the information in the token passes an additional check. If the resource access server 110 fails to authenticate the unexpired state data of the client device 170, a token will not be generated and the client device 170 will be unable to successfully request the resource from the controlled resource server 180. Likewise, if the information in the token fails the additional checks, the resource cannot be provided by the controlled resource server 180.
Controlled access system 100 represents one exemplary configuration, and embodiments may incorporate other configurations. For example, some embodiments may combine one or more components of resource access server 110 and controlled resource server 180, or may combine one or more components of access engine 120, validation engine 122, and validation engine 186 into a single module or engine. Similarly, in some embodiments, index 112, state data 114, access database 116, and/or controlled access resource 182 may be combined into a single data store, may be distributed across multiple computing devices, or may be stored on another accessible computing device.
Fig. 1B is another example of an alternative configuration 100' of the system 100. In the example of system 100', controlled resource server 180' includes the functionality described above in connection with resource access server 110. In other words, controlled resource server 180' may include state data 114 and access engine 120, and verification engine 186 may include the described functionality performed by verification engine 122. In this embodiment, the client device 170 requests a resource from a controlled resource server 180' (e.g., arrow 1) through the approval location 160. As the location is identified, controlled resource server 180' provides a link to the requested resource (e.g., arrow 2) and also generates status data 114 for client device 170, e.g., logging information used to identify resources available to the client as described herein due to membership to an approved location. The link to the resource is provided to the client device 170. The user of the client device 170 may select the link (e.g., arrow 3) and access the resource through the approval location 160, e.g., the resource is provided to the client device 170 through the approval location 160 (arrow 4). Subsequently, client device 170 may request resources from controlled resource server 180' through a location other than authorized location 160 (e.g., arrow 5). In response to controlled resource server 180 'determining that the request is not a request through the approval location 160 and identifying the unexpired status data 114 for the client device 170, controlled resource server 180' may provide a link to the resource (arrow 6). The link may be a single link or may be multiple links included in the search results. The user of client device 170 may select the link, which includes the token, and send a request for the resource to the controlled resource server (arrow 7). If the information in the token passes the additional validation test, the resource is provided to the client device 170 (arrow 8). In some embodiments, since controlled resource server 180 'maintains state data 114, the use of tokens is optional, and controlled resource server 180' can perform the token validation tests described herein based on state data 114. Fig. 1A and 1B are used as examples only, and embodiments thereof include other configurations.
FIG. 3 illustrates a flow diagram of an example process 300 for accessing a controlled resource outside of an authorized location in accordance with the disclosed embodiments. Process 300 may be performed by a controlled access system, such as system 100 of FIG. 1A or system 100' of FIG. 1B. Process 300 may be used to generate state data for a plurality of client devices accessing a controlled resource from an authorized location and, in particular instances, to generate a temporary, encrypted token using the state data for accessing the controlled resource outside of the authorized location. Process 300 may be implemented without affecting a user of the client device. In other words, the user of the client device need not perform any additional steps, nor provide any additional input, to access the resource from outside the authorized location. This improves the user experience and saves resources on the client device. Process 300 may begin with a request for a resource being made through a recognized location (305). For example, a client device, such as client device 170 of fig. 1A, may send a request using a proxy, a secure connection (e.g., VPN) or ethernet or WiFi connection, a physical location authenticated by a browser geo-location API or the like, which is an approved location, i.e., a location identified as having access to certain resources. In some embodiments, the request may be received by a resource access server (e.g., a search engine, resource portal, or other resource access site) (310). For example, the access server uses one or more data stores to determine that the request is a request for controlled access to a resource, and that the request is from an approved location space. In some embodiments, the request may be a query, and the resource may be responsive to the query. The access server generates state data for the client using the client identifier received with the request (315). For example, the request may include a cookie value for the device. As another example, the request may include a unique number of the device, such as a telephone number. As another example, the request may be issued from a device associated with a user account (e.g., a social media account) identified by the access server. In other words, the user may log into an account on the device, and the access server may identify the login status. A user account, e.g. a user name, is also considered a device identifier. The state data generated for the client device includes a device identifier, a timestamp, and licensed resource information. In some embodiments, the device identifier in the state data may be hashed. The licensed resource information represents any information of a resource accessible to the client device, for example, any information based on a membership between a user of the client device and an approved location. Non-limiting examples include a resource collection identifier, an IP address of the authorized location, an organization code associated with the authorized location, subscription information, and the like. Generating the state data may include updating a timestamp and licensed resource information of an existing state data record of the client device. Generating the state data may include writing a new state data record for the client device. The status data record expires based on the timestamp. Thus, access outside the authorized location is temporary. The length of the time period for which the status data is in an active state (i.e., unexpired) may be based on a contractual agreement with the owner of the controlled resource and/or an organization associated with the approved location. The length of the time period may be several days, one week, two weeks, one month, etc. To maintain the seamless nature of access outside of the approved location, the client device may access the resource through the approved location before the status data expires. For example, if the status data expires after two weeks, the student may access the campus before the end of the two weeks and access the resources using campus WiFi. Doing so will restart the two week period. Expiration ensures that the user of the client device remains actively associated with the institution represented by the authorized location.
Resource access server 110 generates a response to the request that includes a link to the controlled access resource (320). If the request is a general query, generating a response may include determining which resources respond to the query and, in those response resources, generating corresponding links to the response resources that are accessible through the approved location. Thus, the link may be provided as part of the search results. Links to the requested resources may also be provided separately. The link may be provided to the client device through an approved location, and a user of the client device may select the link to access the resource (325). The request to access the resource through the link may be processed by the controlled resource server, e.g., at 330. The order in which tests are performed by the controlled resource server shown in FIG. 3 is provided as one example, and embodiments are not limited to the test order illustrated in FIG. 3. The controlled resource server may determine whether the request includes a token 330. In other words, the controlled resource server may look up the token in the URL. If the token is not found (330, no), the controlled resource server may determine whether the requestor has access to the requested resource (350). For requests that do not include a token, the controlled access server may use the origin location of the request to determine whether the requestor has access to the requested resource. In some embodiments, the location may be an IP address or domain. In some embodiments, the location may be a combination of a location (e.g., an IP address or domain) and the requested resource. In some embodiments, the location may be an identifier of an authorized location. In other words, controlled resource server 180 may use the database to determine whether the requested resource is accessible at the location associated with the request. For example, a publisher may enter into a separate agreement with a separate organization regarding resources accessible by a particular organization. A university at new york may have access to medical journals, while a university at new mexico state may have access to engineering journals. Thus, not all locations may be approved locations for all resources on the server side of the controlled resource. Accordingly, the controlled resource server may determine whether the location of the request is an approved location for the particular resource being requested. The controlled resource server may also perform other tests, such as determining the number of requests from a particular location as part of determining whether the location is identified.
If the requestor is able to access the requested resource (350, yes), the controlled resource server provides the requested resource to the requestor (355). The client device receives access rights to the resource through the approved location (365). If the requestor cannot access the requested resource (350, no), the controlled resource server denies access to the requested item (360). This may include providing error information, providing a resource summary with a purchase access link, etc. The client device receives a rejection over the approved location (365).
The client device may also request access controlled access resources from outside the authorized location (370). The request may be in the form of a query to an access server. The access server may determine whether the client device has unexpired, i.e., active, status data (375). The state data is generated (e.g., at 315) when the client device accesses the access server through the approved location access. An approved location in this sense refers to any location identified by the controlled resource server, regardless of the particular resource. The status data is unexpired if the expiration date has not passed since the generation of the status data. The status data includes a timestamp set when the status data is generated. The timestamp may indicate the time at which the status data expired. The timestamp may represent the time when the status data was generated and the status data expires after the expiration date. As described above, the term of validity is fixed in advance, but may be different depending on the owner of the organization or the controlled resource. If the client device's status data cannot be found or the status data has expired (375, no), the access server may deny access to the resource (390). Denying access may include not providing a link to the resource in the search results even if the resource responds to the query. Denying access may include providing a link to the resource in the response, but not providing the token. This is effectively a denial of access, as the controlled resource server will determine that the request is not from an approved location. Denying access may include providing some other link, such as providing a snippet of the search results and a link that enables the user to subscribe to purchase a process to access the resource.
If the client device's state data exists and has not expired (375, yes), the access server generates a token for the resource (380). The token includes data from which the controlled resource server can verify that the request is associated with an approval location. In some embodiments, for example, when the request is a query, the access server may generate a token for each controlled access resource that responds to the query. In some embodiments, the token may be encrypted to prevent misbehaviours. The token includes a timestamp. The timestamp may ensure that the token is valid for a short time. This short time may accommodate the client device re-requesting the resource, for example, using a "back" or "forward" button on the browser. This short time is typically much shorter than the validity period of the status data. For example, the term for which the token is valid may be one hour or less. This time period may be set by the owner of the resource. As with the state data, the timestamp of the token may be the time at which the token was generated or the time at which the token expired, depending on the implementation. The token also includes a random number. The random number ensures the uniqueness of the token. Thus, the random number may be long enough to ensure uniqueness. For example, the random number may be 64 bits. The token may also include licensed resource information. Licensed resource information is information used by the controlled resource server to determine which resources the client device may access. The information may be a key to access or subscribe to the database, may be a key-value pair, may be an identifier of an authorized location, etc. In some embodiments, the token may also include an IP subnet used by the client device in generating the token. The IP subnet can be used to authenticate fraudulent (e.g., sharing, copying) requests as explained in more detail herein. In some embodiments, the token may be encrypted. The encryption key may be a key known to or shared with the controlled access server. The encryption of the token limits the chance of abuse, e.g., spoofing the token. A token, e.g., an encrypted token, is included in a link to a respective resource and provided to the client device. The client device may then access the resource from outside the authorized location using the link with the token (395).
The controlled resource server receives the request via the URL with the token, identifies the token (330, yes) and decrypts the token using the encryption key (335). The controlled resource server performs a series of checks, or tests, on the data from the token. For example, the controlled resource server may determine whether the token has expired (340). As described above, the token may be valid for a short time, e.g., one hour. This short time prevents and limits opportunities for abuse, such as sharing the link with others. A token may also be considered to be out of date if it is seen too many times. The random number makes the token unique. In some embodiments, the controlled resource server may count the number of times the token is presented. If the token is presented too many times, the token may be considered to be out of date. This type of expiration also limits the chance of abuse. The number of times a token can be presented may be small, e.g., three or four times, so that the user can use the "return" and "forward" functions in the browser a limited number of times. Tokens presented more than this number of times may be rejected, e.g. considered as expired. If the token has expired (340, yes), the controlled resource server denies access to the requested item (360). For example, at 365, a message may be displayed indicating that the resource must be accessed through an approved location, or a message may be displayed with a link to purchase access, a link to a login screen, etc.
If the token is not expired (340, no), the controlled resource server may determine if the IP subnet of the token matches the IP subnet of the IP address from which the request was received (345). This test is performed if the token includes IP subnet information. This test limits the chance of abuse by limiting token distribution, while allowing valid users to switch to different cell towers or WiFi routers within the same area. However, if the link is shared, requests from IP addresses outside the IP subnet using the link will be blocked. Thus, if the token's IP subnet does not match the requesting IP subnet (345, NO), the controlled resource server denies access to the resource (360). If the IP subnets match, or if the token lacks IP subnet data, the controlled resource server may determine whether the requestor has access to the requested resource (350). For links with tokens, the controlled access server may use the licensed resource information in the token for this test. The licensed resource information in the token is taken from the client device's state data and can be any information used by the controlled resource server to identify the client device as being associated with the sanctioned location, such as identifying resources available as a result of being associated with the sanctioned location, a collection of resources, a subscription to such a collection, and the like. The controlled resource server uses the granted resource information in the token to determine whether the requestor has permission to access the requested resource. If the granted resource information does not match the requested resource (350, no), the system denies access to the resource (360). If the granted resource information does match the requested resource (350, yes), the system provides the requested resource as described above and the number of token accesses may be increased (355). Tracking token access enables the controlled resource server to limit the number of times a token is successfully presented. The token test, e.g., steps 340 through 350, is optional and may be done in any order. Some embodiments may not perform any testing. Some embodiments may perform additional tests. It will be appreciated that process 300 may be repeated simultaneously for a plurality of different client devices and different authorized locations. It will also be appreciated that in some embodiments, certain steps performed by the access server may be performed by the controlled resource server. Thus, embodiments are not limited to the exact configuration represented by fig. 3.
FIG. 4 illustrates an example of a general purpose computing device 400, the computing device 400 operable as the server 110, server 160, server 180, and/or client device 170 of FIG. 1A, the computing device 400 usable with the techniques described herein. Computing device 400 is intended to represent various exemplary forms of computing devices, such as laptops, desktops, workstations, personal digital assistants, mobile phones, smartphones, tablets, servers, and other computing devices, including wearable devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed herein.
The processor 402 may process instructions for execution within the computing device 400, including instructions stored in the memory 404 or on the storage device 406, for displaying graphical information on an external input/output device, such as display 416. The display screen 416 may be a display or a flat touch screen display. In some embodiments, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Moreover, multiple computing devices 400 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
The memory 404 stores information within the computing device 400. In one embodiment, memory 404 is a volatile memory unit or units. In another embodiment, memory 404 is a non-volatile memory unit or units. The memory 404 may also be another form of computer-readable medium, such as a magnetic or optical disk. In some embodiments, memory 404 may include expansion memory provided through an expansion interface.
The storage device 406 is capable of providing mass storage for the computing device 400. In one embodiment, the storage device 406 may be or include a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state storage device, or an array of devices including devices in a storage area network or other configurations. A computer program product may be tangibly embodied in such a computer-readable medium. The computer program product may also include instructions that, when executed, perform one or more methods, such as those described above. The computer or machine readable medium is a storage device, such as the memory 404, the storage device 406, or memory on the processor 402.
FIG. 5 illustrates an example of a general purpose computing device 500, which computing device 500 may be server 110, server 160, or server 180 of FIG. 1A, which may be used with the techniques shown herein. Computing device 500 is intended to represent various example forms of large-scale data processing equipment, such as servers, blade servers, data centers, mainframes, and other large-scale computing devices. Computing device 500 may be a distributed system with multiple processors, possibly including network-connected storage nodes, interconnected by one or more communication networks. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed herein.
The distributed computing system 500 may include any number of computing devices 580. Computing device 580 may include a server or a rack-mounted server, a mainframe, etc. that communicates over a local or wide area network, dedicated optical link, modem, bridge, router, switch, wired or wireless network, etc.
In some embodiments, each computing device may include multiple racks. For example, the computing device 580a includes a plurality of racks 558a-558n. Each rack may include one or more processors, such as processors 552a-552n and 562a-562n. These processors may include data processors, network attached storage devices, and other computer controlled devices. In some embodiments, one processor may operate as a main processor and control scheduling and data allocation tasks. The processors may be interconnected through one or more rack switches 558, and one or more racks may be connected through a switch 578. The switch 578 can handle communication between multiple connected computing devices 500.
Each chassis may include memory, such as memory 554 and memory 564, as well as memory 556 and 566. The memories 556 and 566 may provide mass storage and may include volatile or non-volatile storage, such as a network-connected magnetic disk, floppy disk, hard disk, optical disk, magnetic tape, flash memory or other similar solid state storage device, or an array of devices including in a storage area network or other configurations. Memory 556 or 566 may be shared among multiple processors, multiple racks, or multiple computing devices, and may include a computer-readable medium that stores instructions executable by one or more processors. The memory 554 and 564 may include, for example, volatile memory units, non-volatile memory units, and/or other forms of computer-readable media such as magnetic or magneto-optical disks, flash memory, cache, random Access Memory (RAM), read Only Memory (ROM), and combinations thereof. Memory, such as memory 554, may also be shared among the processors 552a-552 n. Data structures, such as indexes, may be stored. For example, storage may be across memory 556 and memory 554. Computing device 500 may include other components not shown, such as controllers, buses, input/output devices, communication modules, and so forth.
An entire system, such as system 100, 100', or 100", may be made up of multiple computing devices 500 in communication with each other. For example, device 580a may communicate with devices 580b, 580c, and 580d, and these devices may be collectively referred to as server 110, server 160, or server 180. As another example, the system 100 of fig. 1 may include one or more computing devices 500. Some of the computing devices may be physically close to each other, while other computing devices may be physically distant. The layout of system 500 is merely an example, and the system may take on other layouts or configurations.
According to certain aspects of the present application, a method is provided that includes receiving a request for a controlled access resource from a client device, the request including a client device identifier, determining that the request is not associated with an approved location, authenticating state data for the client device identifier, generating a link at a server for accessing the controlled access resource, generating an encrypted token, the encrypted token including a timestamp, a random number, and licensed resource information from the state data, and including the encrypted token in the link, and providing the link to the client device, the client device using the link to request the controlled access resource.
This application and other aspects may include one or more of the following features, alone or in combination. For example, the request may be a first request and the controlled access resource is a first controlled access resource, and prior to receiving the first request, the method further includes receiving a second request for a second controlled access resource from the client device, the second request including a client device identifier, determining that the second request is associated with an approved location, generating state data for the client device, and storing the state data in the memory. As another example, the status data may include a timestamp, a client device identifier, and licensed resource information. As another example, the granted resources information may represent an approved location. In some embodiments, the granted resource information indicates the approved location and the controlled resources available to the approved location. As another example, the approved location may be a domain name, a geographic location, and/or an Internet Protocol (IP) address. As another example, the request may be a query and the controlled access resource is a resource that responds to the query. As another example, the client device identifier may be a user account. As another embodiment, requesting a controlled access resource by a client device using a link may include, at a controlled resource server, receiving a link in a request for the controlled access resource, authenticating a token in the link, decrypting the token, determining that the token has not expired based on a timestamp, and determining that the controlled access resource is available based on the granted resource information, and providing the controlled access resource to the client device in response to the token being verified.
According to certain aspects of the present application, a system includes at least one processor, a data store storing data records for storing state data records of client devices, and a memory storing instructions that, when executed by the at least one processor, cause the system to perform operations. Operations include receiving a query from a client device, the client device having a device identifier, and determining that at least one resource that is responsive to the query is a controlled access resource. In response to determining that the query is associated with an endorsement location for the controlled access resource, the operations include generating a link to the controlled access resource and generating a state data record for the client device in the data store, the state data including a client device identifier, a timestamp, and an association with the endorsement location. In response to determining that the query is not associated with an approved location, the operations include identifying an unexpired status data record for the client device identifier in the data store, and, in response to identifying the unexpired status data record, generating a token and including the token in a link to the controlled access resource, the token including a random number, a timestamp, and licensed resource information from the status data record. In response to failing to identify a state data record for the client device identifier in the data store, generating a link that does not contain the token and returning a query result to the client device, the query result including a link to the resource, wherein the client device requests the resource from a controlled access server using the link to the resource, the controlled access server configured to provide access to the resource from a request associated with the approved location.
This application and other aspects may include one or more of the following features, alone or in combination. For example, in providing resource access from a request associated with an approved location, the controlled access server is configured to receive a link to the controlled access resource from a particular client device, the link having an associated location, determine whether the location is an approved location, and in response to determining that the location is an approved location. Providing a controlled access resource and, in response to determining that the location is not an approved location and that the link includes an unexpired token, providing the controlled access resource and, in response to determining that the location is not an approved location and that the link lacks a token or that a token included in the link has expired, denying access to the controlled access resource. In some embodiments, the token further includes an IP subnet for the requested IP address, and the controlled access server is further configured to, in response to determining that the location is not an approved location and the link includes an unexpired token, determine whether the IP subnet of the particular client device matches the IP subnet in the token, and in response to determining that the IP subnet does not match, deny access to the controlled access resource. As another example, the approved location may represent a geographic location and/or an IP address. As another embodiment, the token is encrypted before being incorporated into the link.
According to certain aspects of the present disclosure, a method is provided that includes receiving a request for controlled access to a resource from a client device, the request having a location, determining that the location is not an approved location, determining that the request includes a token, the token including a timestamp, a nonce, and granted resource information. Determining from the timestamp that the token has not expired, determining that the resource identified by the granted resource information matches the requested resource, and providing the controlled access resource to the client device, wherein the client device is otherwise denied access to the controlled access resource.
This application and other aspects may include one or more of the following features, alone or in combination. For example, the token may be encrypted and the method further comprises decrypting the token. As another embodiment, the token may further include an IP subnet, and the method further includes determining that the IP address of the client device has an IP subnet that matches the IP subnet contained in the token. As another embodiment, the method may further include incrementing a counter for the token, the token being identified by a random number; and determining that the counter of the token has not reached a threshold.
Various embodiments may include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
A computer program (also known as a program, software application, or code) in the present application includes machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium" "computer-readable medium" refers to any non-transitory computer program product, apparatus and/or device (e.g., magneto-optical disks, memory (including read-access memory), programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor.
The systems and techniques in this application can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an embodiment of the systems and techniques described herein), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the internet.
The computing system may include clients and servers. A client and server are generally remote and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client and server relationship to each other.
Various embodiments are shown in the present application. Nevertheless, various modifications may be made without departing from the spirit and scope of the invention. Further, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or removed, from the described flows, and other components may be added to, or deleted from, the described systems. Accordingly, other embodiments are within the scope of the following claims.
Claims (15)
1. A method for location-based access to a controlled access resource, comprising:
receiving a request from a client device for the controlled access resource, the request having a location;
determining that the location is not an approved location;
determining that the request includes a token, the token including a timestamp, a nonce, and licensed resource information, the licensed resource information identifying resources available to the client device via the sanctioned location;
determining that the token is not expired based on the timestamp;
determining that the resource identified by the granted resource information matches the requested resource; and
providing the controlled access resource to the client device, wherein the client device would otherwise be denied access to the controlled access resource.
2. The method of claim 1, wherein the token is encrypted, and further comprising decrypting the token.
3. The method of claim 1, wherein the token further comprises an IP subnet, and wherein the method further comprises determining that the IP address of the client device has an IP subnet that matches the IP subnet included in the token.
4. The method of claim 1, further comprising:
incrementing a counter for the token, the token being authenticated by the nonce; and
determining that the counter of the token has not reached a threshold.
5. The method of claim 1, wherein the licensed resource information is obtained from a status data record associated with the client device, the status data record being recorded when the client device accesses a controlled access resource via the approved location.
6. The method of claim 1, wherein the licensed resource information represents a geographic location or the approved location.
7. The method of claim 1, wherein the granted resource information indicates the grant location and the controlled access resource available to the grant location.
8. The method of claim 1, wherein the non-repudiation location is a domain name or an Internet Protocol (IP) address.
9. The method of any preceding claim, wherein the request for the controlled access resource excludes login credentials.
10. A system for controlled access to resources based on location, comprising:
at least one processor; and
a memory storing instructions that, when executed by the at least one processor, cause the system to:
receiving a request for the controlled access resource from a client device via a first network connection, the request having a location;
determining that the location is not an approved location;
in response to determining that the location is not a non-sanctioned location and that the request received via the first network connection includes a token including a timestamp, a nonce, and licensed resource information:
determining that the token has not expired based on the timestamp,
determining that a resource accessible using the granted resource information matches the requested controlled access resource, an
Providing the controlled access resource to the client device via the first network connection; and
providing, via the first network connection, denial of access to the controlled access resource in response to determining that the location is not an approved location and that the request received via the first network connection lacks a token.
11. The system of claim 10, wherein the token is encrypted, and the operations further comprise decrypting the token.
12. The system of claim 10, wherein the token further includes an IP subnet, and wherein determining that a resource accessible using the granted resource information matches the requested controlled access resource includes determining that the IP address of the client device has an IP subnet that matches the IP subnet included in the token.
13. The system of claim 10, wherein the operations further comprise:
incrementing a counter for the token, the token being authenticated by the nonce; and
determining that the counter of the token has not reached a threshold.
14. The system of claim 10, wherein the operations further comprise providing, via the first network connection, denied access to the controlled access resource if the token expires or if a resource accessible using the granted resource information fails to match the requested controlled access resource.
15. The system of any of claims 10 to 14, wherein the request for the controlled access resource excludes login credentials.
Applications Claiming Priority (6)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862718309P | 2018-08-13 | 2018-08-13 | |
US62/718,309 | 2018-08-13 | ||
US16/122,294 | 2018-09-05 | ||
US16/122,294 US11558193B2 (en) | 2018-08-13 | 2018-09-05 | Location-based access to controlled access resources |
CN201980010007.2A CN111869179B (en) | 2018-08-13 | 2019-07-16 | Location-based access controlled access to resources |
PCT/US2019/042061 WO2020036701A1 (en) | 2018-08-13 | 2019-07-16 | Location-based access to controlled access resources |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980010007.2A Division CN111869179B (en) | 2018-08-13 | 2019-07-16 | Location-based access controlled access to resources |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115378610A true CN115378610A (en) | 2022-11-22 |
Family
ID=69406522
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980010007.2A Active CN111869179B (en) | 2018-08-13 | 2019-07-16 | Location-based access controlled access to resources |
CN202211006095.9A Pending CN115378610A (en) | 2018-08-13 | 2019-07-16 | Location-based access controlled access to resources |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980010007.2A Active CN111869179B (en) | 2018-08-13 | 2019-07-16 | Location-based access controlled access to resources |
Country Status (10)
Country | Link |
---|---|
US (2) | US11558193B2 (en) |
EP (1) | EP3701732B1 (en) |
JP (1) | JP7049480B2 (en) |
KR (2) | KR102595830B1 (en) |
CN (2) | CN111869179B (en) |
AU (1) | AU2019322806B2 (en) |
CA (1) | CA3095637C (en) |
IL (1) | IL277361B2 (en) |
SG (1) | SG11202009561UA (en) |
WO (1) | WO2020036701A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPWO2020116193A1 (en) * | 2018-12-07 | 2020-06-11 | ||
JP7322283B2 (en) * | 2019-09-03 | 2023-08-07 | グーグル エルエルシー | Systems and methods for secure identity retrieval |
US11669627B1 (en) * | 2020-10-13 | 2023-06-06 | Wells Fargo Bank, N.A. | System for data access token management |
US11362821B2 (en) * | 2020-10-15 | 2022-06-14 | Google Llc | Secure selective rules driven token invalidation |
US20230269262A1 (en) * | 2022-02-24 | 2023-08-24 | Microsoft Technology Licensing, Llc | Detecting mass control plane operations |
WO2023239418A1 (en) | 2022-06-10 | 2023-12-14 | Playback Health Inc. | Multi-party controlled transient user credentialing for interaction with patient health data |
Family Cites Families (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2003330961A (en) | 2002-05-13 | 2003-11-21 | Nippon Telegr & Teleph Corp <Ntt> | Token type contents provision system and method |
US7900245B1 (en) * | 2002-10-15 | 2011-03-01 | Sprint Spectrum L.P. | Method and system for non-repeating user identification in a communication system |
SE532098C2 (en) * | 2005-08-23 | 2009-10-20 | Smarttrust Ab | Authentication system and procedure |
JP5340173B2 (en) | 2007-01-26 | 2013-11-13 | インターデイジタル テクノロジー コーポレーション | Location information and method and apparatus for ensuring access control using location information |
GB2460275B (en) | 2008-05-23 | 2012-12-19 | Exacttrak Ltd | A Communications and Security Device |
EP2397868A1 (en) | 2010-06-15 | 2011-12-21 | The European Union, represented by the European Commission | Method of providing an authenticable time-and-location indication |
US9009258B2 (en) * | 2012-03-06 | 2015-04-14 | Google Inc. | Providing content to a user across multiple devices |
US9256722B2 (en) | 2012-07-20 | 2016-02-09 | Google Inc. | Systems and methods of using a temporary private key between two devices |
US9104838B2 (en) * | 2012-11-14 | 2015-08-11 | Google Inc. | Client token storage for cross-site request forgery protection |
EP3047626B1 (en) | 2013-09-20 | 2017-10-25 | Oracle International Corporation | Multiple resource servers with single, flexible, pluggable oauth server and oauth-protected restful oauth consent management service, and mobile application single sign on oauth service |
JP2015201030A (en) | 2014-04-08 | 2015-11-12 | 富士通株式会社 | Terminal device, information management server, terminal program, information management program, and system |
WO2016049636A2 (en) * | 2014-09-26 | 2016-03-31 | Visa International Service Association | Remote server encrypted data provisioning system and methods |
US10510072B2 (en) | 2014-09-29 | 2019-12-17 | The Toronto-Dominion Bank | Systems and methods for administering mobile applications using pre-loaded tokens |
US9854384B2 (en) | 2014-10-31 | 2017-12-26 | Dropbox, Inc. | Proximity based content sharing |
US9984371B2 (en) * | 2015-03-27 | 2018-05-29 | Ca, Inc. | Payment de-tokenization with risk evaluation for secure transactions |
US9578505B2 (en) * | 2015-04-21 | 2017-02-21 | International Business Machines Corporation | Authentication of user computers |
JP6459749B2 (en) | 2015-04-27 | 2019-01-30 | 富士通株式会社 | Service providing method, service providing system, and service providing apparatus |
EP3257226B1 (en) | 2015-04-30 | 2018-07-11 | Palmaso ApS | Method for identifying unauthorized access of an account of an online service |
WO2016182555A1 (en) | 2015-05-11 | 2016-11-17 | Interactive Intelligence Group, Inc. | System and method for multi-factor authentication |
US10693859B2 (en) * | 2015-07-30 | 2020-06-23 | Oracle International Corporation | Restricting access for a single sign-on (SSO) session |
CA2999150A1 (en) * | 2015-09-18 | 2017-03-23 | First Data Corporation | System for validating a biometric input |
JP2019508763A (en) | 2016-01-29 | 2019-03-28 | グーグル エルエルシー | Local device authentication |
US10951627B2 (en) | 2016-10-14 | 2021-03-16 | PerimeterX, Inc. | Securing ordered resource access |
RU2766438C2 (en) * | 2017-05-09 | 2022-03-15 | Нетворк Некст, Инк. | Methods for bidirectional packet exchange via nodal paths |
US11126670B2 (en) * | 2017-05-10 | 2021-09-21 | Verizon Patent And Licensing Inc. | Token and device location-based automatic client device authentication |
US11134071B2 (en) * | 2018-04-23 | 2021-09-28 | Oracle International Corporation | Data exchange during multi factor authentication |
-
2018
- 2018-09-05 US US16/122,294 patent/US11558193B2/en active Active
-
2019
- 2019-07-16 KR KR1020227037972A patent/KR102595830B1/en active IP Right Grant
- 2019-07-16 CN CN201980010007.2A patent/CN111869179B/en active Active
- 2019-07-16 JP JP2020555490A patent/JP7049480B2/en active Active
- 2019-07-16 KR KR1020207030270A patent/KR102462894B1/en active IP Right Grant
- 2019-07-16 CN CN202211006095.9A patent/CN115378610A/en active Pending
- 2019-07-16 WO PCT/US2019/042061 patent/WO2020036701A1/en unknown
- 2019-07-16 IL IL277361A patent/IL277361B2/en unknown
- 2019-07-16 EP EP19753211.2A patent/EP3701732B1/en active Active
- 2019-07-16 CA CA3095637A patent/CA3095637C/en active Active
- 2019-07-16 AU AU2019322806A patent/AU2019322806B2/en active Active
- 2019-07-16 SG SG11202009561UA patent/SG11202009561UA/en unknown
-
2022
- 2022-12-16 US US18/067,319 patent/US20230120723A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US11558193B2 (en) | 2023-01-17 |
US20200052896A1 (en) | 2020-02-13 |
CA3095637C (en) | 2023-03-14 |
CN111869179B (en) | 2022-09-13 |
CA3095637A1 (en) | 2020-02-20 |
KR20200135458A (en) | 2020-12-02 |
WO2020036701A1 (en) | 2020-02-20 |
KR102462894B1 (en) | 2022-11-03 |
JP2021527858A (en) | 2021-10-14 |
SG11202009561UA (en) | 2020-10-29 |
IL277361B1 (en) | 2023-06-01 |
IL277361A (en) | 2020-11-30 |
KR20220149638A (en) | 2022-11-08 |
JP7049480B2 (en) | 2022-04-06 |
AU2019322806B2 (en) | 2022-01-06 |
EP3701732A1 (en) | 2020-09-02 |
CN111869179A (en) | 2020-10-30 |
KR102595830B1 (en) | 2023-10-27 |
EP3701732B1 (en) | 2021-02-17 |
AU2019322806A1 (en) | 2020-11-26 |
IL277361B2 (en) | 2023-10-01 |
US20230120723A1 (en) | 2023-04-20 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN111869179B (en) | Location-based access controlled access to resources | |
US11507680B2 (en) | System and method for access control using network verification | |
US10505928B2 (en) | Facilitation of service login | |
US9225704B1 (en) | Unified management of third-party accounts | |
US9209973B2 (en) | Delegate authorization in cloud-based storage system | |
JP2020536304A (en) | Enable multi-tenant data access on a single industrial network | |
US10148637B2 (en) | Secure authentication to provide mobile access to shared network resources | |
KR20040049272A (en) | Methods and systems for authentication of a user for sub-locations of a network location | |
US9602540B1 (en) | Enforcing restrictions on third-party accounts | |
US11146552B1 (en) | Decentralized application authentication | |
US20200210565A1 (en) | System and method of changing the password of an account record under a threat of unlawful access to user data | |
US11700280B2 (en) | Multi-tenant authentication framework | |
US20230254288A1 (en) | Secure System and Method for Sharing Online Accounts | |
EP3674933A1 (en) | System and method of changing the password of an account record under a threat of unlawful access to user data | |
Ots et al. | Workload Protection–Data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
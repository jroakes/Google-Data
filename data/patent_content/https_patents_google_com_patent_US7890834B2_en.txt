US7890834B2 - Apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer - Google Patents
Apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer Download PDFInfo
- Publication number
- US7890834B2 US7890834B2 US11/765,921 US76592107A US7890834B2 US 7890834 B2 US7890834 B2 US 7890834B2 US 76592107 A US76592107 A US 76592107A US 7890834 B2 US7890834 B2 US 7890834B2
- Authority
- US
- United States
- Prior art keywords
- bits
- circular buffer
- block
- systematic
- parity bits
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/004—Arrangements for detecting or preventing errors in the information received by using forward error control
- H04L1/0056—Systems characterized by the type of code used
- H04L1/0067—Rate matching
- H04L1/0068—Rate matching by puncturing
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/18—Automatic repetition systems, e.g. Van Duuren systems
- H04L1/1812—Hybrid protocols; Hybrid automatic repeat request [HARQ]
- H04L1/1819—Hybrid protocols; Hybrid automatic repeat request [HARQ] with retransmission of additional or different redundancy
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/27—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes using interleaving techniques
- H03M13/2703—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes using interleaving techniques the interleaver involving at least two directions
- H03M13/271—Row-column interleaver with permutations, e.g. block interleaving with inter-row, inter-column, intra-row or intra-column permutations
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/63—Joint error correction and other techniques
- H03M13/635—Error control coding in combination with rate matching
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/63—Joint error correction and other techniques
- H03M13/635—Error control coding in combination with rate matching
- H03M13/6356—Error control coding in combination with rate matching by repetition or insertion of dummy data, i.e. rate reduction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/004—Arrangements for detecting or preventing errors in the information received by using forward error control
- H04L1/0056—Systems characterized by the type of code used
- H04L1/0071—Use of interleaving
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/18—Automatic repetition systems, e.g. Van Duuren systems
- H04L1/1867—Arrangements specially adapted for the transmitter end
- H04L1/1874—Buffer management
Definitions
- the present invention relates generally to communication systems and in particular, to a method and apparatus for assigning redundancy versions to a circular buffer within a communication system.
- error control techniques are used to protect a signal against impairment during transmission over a channel.
- a codeword is produced for every information block.
- the codeword is resized via a rate matching algorithm before being sent over the physical channel.
- the rate matching algorithm provides a desired number of bits to be sent over the channel via puncturing or repetition of the codeword.
- the rate matching algorithm is important in that it can significantly impact the system performance and implementation efficiency.
- FEC forward error correction
- HARQ Hybrid Automatic Repeat reQuest
- One way to perform the rate matching function is to define puncturing/repetition patterns for every information block size and code rate the system may encounter.
- this method is inflexible.
- it becomes impractical if the system involves thousands of information block size and code rate combinations, such as in a 3GPP communication system.
- Another way to perform rate matching is to define a rule that steps through the codeword bits one by one and determines if a codeword bit should be punctured (removed) or repeated.
- Such a method has the benefit of flexibility and is defined in 3GPP Rel-99.
- Such a method suffers from implementation inefficiency.
- a circular buffer based rate matching algorithm may be designed to provide good performance with low implementation complexity.
- the codeword bits are rearranged to form a circular buffer. If N desired coded bits are needed for transmission, a length-N desired block of consecutive bits are taken from the circular buffer (wrapped around to the beginning if last bit of the circular buffer is reached). Therefore, puncturing and repetition can be achieved using a single method.
- the circular-buffering technique has advantages in flexibility, performance, and ease of implementation.
- redundancy version a parameter such as redundancy version (RV) can be used as an input to the circular buffer based rate matching algorithm.
- the redundancy versions may define starting positions within the circular buffer for selecting the slice of the codeword for transmission.
- the allowable starting positions of the RVs are evenly distributed over the circular buffer containing the sequence of codeword bits after rearrangement, which makes it difficult to implement each transmission of HARQ. Therefore, a need exists for a method and apparatus for assigning redundancy versions to a circular buffer within a communication system that improves the efficiency of the circular buffer based rate matching algorithm.
- FIG. 1 is a block diagram of a prior-art transmitter.
- FIG. 2 illustrates sub-block interleaving and interlacing.
- FIG. 3 is a block diagram of a transmitter.
- FIG. 4 and FIG. 5 illustrate sub-block interleaving and interlacing.
- FIG. 6 illustrates a dummy-removed circular buffer may presented in matrix format.
- FIG. 7 illustrates redundancy versions circular buffer that has dummy bits.
- FIG. 8 illustrates the use of a virtual circular buffer.
- FIG. 9 illustrates a first-stage rate matching with circular buffering.
- FIG. 10 illustrates systematic bit puncturing
- FIG. 11 illustrates the skipping of a small portion of systematic bits within a circular buffer.
- FIG. 12 is a flow chart showing operation of the transmitter of FIG. 3 .
- FIG. 13 is a flow chart showing operation of the transmitter of FIG. 3 .
- a method and apparatus for assigning redundancy versions to a circular buffer within a communication system is provided herein.
- a circular buffer is created where only redundancy versions are defined to start at the tops (i.e., on the first row) of the constituent sub-block interleavers.
- RV positions as described above results in an easier implementation of HARQ. More particularly this technique allows a memoryless RV definition that is very useful in supporting a large number of input block sizes with circular buffer rate matching (RM).
- RM circular buffer rate matching
- the above RV placement allows the implementation of a virtual circular buffer (i.e., a physical circular buffer is not implemented) which allows a desired number of bits to be directly selected from an encoder output stream starting from any RV in the circular buffer.
- the present invention encompasses a method for assigning redundancy versions to a circular buffer.
- the method comprises the steps of receiving systematic bits, a first block of parity bits, and a second block of parity bits.
- the systematic bits, the first block of parity bits, and the second block of parity bits all comprise dummy bits.
- the systematic bits, first block of parity bits, and second block of parity bits are individually block interleaved and the first block of parity bits are interlaced with the second block of parity bits to create interlaced parity bits.
- the interleaved systematic bits are prepended to the interlaced parity bits to create a circular buffer and redundancy versions are defined to start in a particular row of the circular buffer. When a redundancy version (RV) and a number of desired bits are received, the number of desired bits are output starting at the RV bit position.
- RV redundancy version
- the present invention comprises an apparatus comprising an encoder outputting systematic bits, a first block of parity bits, and a second block of parity bits.
- Rate matching circuitry is provided receiving the systematic bits, first block of parity bits, and second block of parity bits and creating a circular buffer having dummy bits.
- a particular row of the circular buffer is used as redundancy versions (RVs), and the rate matching circuitry outputs non-dummy bits from the circular buffer to a transmitter starting at a particular RV.
- transmission circuitry is provided receiving the non-dummy bits and transmitting the non-dummy bits.
- the present invention comprises an apparatus comprising an encoder outputting systematic bits, a first block of parity bits, and a second block of parity bits, each of length K stream .
- the apparatus additionally comprises rate matching circuitry for receiving the systematic bits, first block of parity bits, and second block of parity bits and interleaving the systematic bits, first block of parity bits, and second block of parity bits.
- the stream comprises the interleaved systematic bits, and an interleaved and interlaced first and second block of parity bits.
- transmission circuitry is provided for receiving non-dummy bits starting at a particular RV and transmitting the non-dummy bits.
- FIG. 1 and FIG. 2 illustrate the functionality of a circular buffer based rate matching method. More particularly, FIG. 1 is a block diagram of a transmitter and FIG. 2 illustrates sub-block interleaving and interlacing.
- encoder 101 outputs a systematic bit stream and at least two parity streams.
- encoder 101 comprises a rate-1 ⁇ 3 turbo coder adopted in the 3GPP standardization. It is noted that the following concepts can be adapted to other types of error correction codes, such as turbo codes with other code rates, low-density parity check (LDPC) codes, convolutional codes, etc.
- LDPC low-density parity check
- Encoder 101 outputs three streams corresponding to the systematic bit stream and the two parity streams.
- the systematic stream may contain several (e.g., 4) bits that are not systematic, e.g., due to tail bits as for the 3GPP turbo code. (Tail bits are absent when tail-biting encoding is used.)
- the streams may also contain filler bits inserted prior to turbo encoding. For simplicity, all the bits in the systematic stream are referred to as systematic bits, and all the bits in the respective parity streams are referred to as parity 0 bits and parity 1 bits, respectively.
- Rate matching circuitry 102 receives the streams output from encoder 101 and performs sub-block interleaving on each stream individually. This is illustrated in FIG. 2 where S′, P 0 ′ and P 1 ′ are systematic bit stream, parity 0 bit stream and parity 1 bit stream, respectively. Each stream is rearranged (interleaved) with its own sub-block interleaver (not shown in FIG. 1 or 2 ) to produce S, P 0 and P 1 . P 0 and P 1 are then interlaced with each other to produce interlaced P 0 and P 1 portion 201 .
- a single output buffer 105 (also called circular buffer) is formed by storing the rearranged systematic bits S in the beginning followed by interlaced P 0 and P 1 portion 201 .
- the number of coded bits N desired to be selected for transmission is calculated and passed to logic circuitry 104 as an input.
- Logic circuitry 104 simply reads out a length-N desired block of consecutive bits from the sequence the circular buffer (wrapped around to the beginning if last bit of the circular buffer is exceeded) from a certain starting point. Therefore, puncturing and repetition can be achieved using a single method.
- the circular-buffering technique has an advantage in flexibility (in code rates achieved) and granularity (in streams sizes). Circular buffer rate matching selects parity bits approximately evenly distributed over the code trellis irrespective of desired code rate of operation if the sub-block interleavers are designed properly.
- FIG. 3 is a block diagram of transmitter 300 .
- Transmitter 300 comprises encoder 301 and rate matching circuitry 303 .
- Rate matching circuitry 303 additionally comprises logic circuitry 305 and memory 307 .
- Logic circuitry 305 is preferably a microprocessor, microcontroller, digital signal processors (DSPs), or such other devices known to those having ordinary skill in the art. The particular operations/functions of logic circuitry 305 thus of transmitter 300 is determined by an execution of software instructions and routines.
- Memory 307 comprises a random access memory (RAM), dynamic random access memory (DRAM), and/or read only memory (ROM) or equivalents thereof, that is used as a circular buffer.
- RAM random access memory
- DRAM dynamic random access memory
- ROM read only memory
- Encoder 301 is preferably a rate-1 ⁇ 3 3GPP turbo coder, however, the techniques described herein for operating transmitter 300 may be applied to other encoders, including, but not limited to turbo coders performing turbo coding with other code rates, with tail bits or no tail bits, tail-biting, binary or duo-binary turbo coders, with or without filler bits insertion, . . . , etc.
- encoder 301 outputs three streams corresponding to the systematic bit stream and the two parity streams.
- Logic circuitry 305 receives the streams output from encoder 301 and performs sub-block interleaving on each stream individually. Logic circuitry 305 then interlaces P 0 ′ and P 1 ′.
- a single output buffer 307 (circular buffer) is formed by storing the rearranged systematic bits S in the beginning followed by interlaced P 0 and P 1 .
- the sub-block interleaver may be any permuter, usually a rectangle interleaver (also called block interleaver) of N r rows and N c columns is used for simplicity.
- a rectangle interleaver also called block interleaver
- the operations are straightforward if the stream size K stream of each stream is equal to the rectangle interleaver size N r ⁇ N c (i.e., the block is full). However, often the stream size is less than N r ⁇ N c , thus (N r ⁇ N c ⁇ K stream ) dummy bits are needed to fill up the block.
- FIG. 4 and FIG. 5 This process of forming the circular buffer is illustrated in FIG. 4 and FIG. 5 with 4 dummy bits inserted in each stream.
- systematic bits 401 having dummy bits 407 added, are block interleaved to produce permuted systematic bits S 402 .
- parity bits P 0 ′ and P 1 ′ 403 (having dummy bits added) are interleaved to produce parity bits P 0 and P 1 404 .
- the dummy bits are appended to the streams so that the block interleaver is full for each stream.
- P 0 and P 1 are interlaced to produce interlaced portion interlaced P 0 and P 1 portion 405 .
- the two matrices S and P 0-1 are combined as shown in FIG. 5 and stored in buffer 307 .
- Buffer 307 is read out column-wise, starting at the top of the matrix.
- the dummy bits are inserted after a stream, in certain embodiments, they can also be inserted before the stream.
- a number of coded bits N desired to be selected for transmission is calculated and passed to logic circuitry 305 .
- Logic circuitry 305 simply reads out a length-N desired block of consecutive bits from the output buffer 307 (wrapped around to the beginning if last bit of the output buffer is exceeded) from a certain starting point.
- a parameter redundancy version (RV)
- RV redundancy version
- FEC is equivalent to HARQ with one transmission only, FEC can also be defined with an RV value.
- logic circuitry 305 receives an RV value and the number of coded bits N desired to be selected for transmission.
- N desired bits are read out of buffer 307 starting at the position defined by RV. These bits are typically output to transmitter 311 for subsequent modulation and transmission.
- the dummy bits are kept in the circular buffer, it is called a dummy-padded circular buffer.
- the size of the dummy-padded circular buffer is equal to the summation of the input stream sizes and the total number of dummy bits inserted.
- the dummy-padded circular buffer may be in matrix format as illustrated in FIG. 5 , or in sequence format (i.e., a single dimensional array or data stream) as illustrated in FIG. 2 .
- the dummy bits are removed, it is called a dummy-removed circular buffer.
- the size of the dummy-removed circular buffer is equal to the summation of the input stream sizes.
- the dummy-removed circular buffer may be presented in matrix format as in FIG. 6 where discontinuities exist wherever dummy bits were removed, or in sequence format.
- Prior art RVs are approximately evenly distributed over the dummy-removed circular buffer, which makes it difficult to implement each transmission of HARQ as the precise RV starting position in the encoder output stream needs to be calculated using non-trivial operations for each case.
- a dummy-padded circular buffer 307 may be used to define a starting position for a redundancy version.
- the subblock interleaver may use 32 columns when 8 RVs are to be defined. Often 2 c RVs need to be defined, where c is an integer.
- N c 2 d , where d is an integer greater than or equal to c.
- d is an integer greater than or equal to c.
- the evenly distributed RVs can be defined to always start at the tops (i.e., first row) of the columns of the constituent sub-block interleavers if the dummy bits are not discarded prior to defining the starting position of the RVs, thus avoiding complex operations such as division and modulo discussed above.
- FIG. 6 shows a dummy-removed circular buffer (i.e., after discarding dummy bits) with 8 RVs defined. Note that there are discontinuities wherever dummy bits were discarded; dummy-removed circular buffer in sequence format (may be used in buffer 307 ) is obtained by reading the matrix elements column-wise from the left top corner onwards. The lack of regularity in RV distribution in the rectangles causes difficulty in HARQ operation where any RV value may be input to the RM block. The row and column indices for the starting point of the RV have to be computed based upon the stream size (and the number of dummy bits), thus leading to complicated hardware.
- the dummy bits are discarded after the RVs are defined as shown in FIG. 7 .
- the dummy bits are left in the circular buffer (dummy-padded circular buffer), and since the dummy-padded circular buffer size is a multiple of 8, it is possible to define eight RVs that are equally spaced for any stream size K stream .
- the eight RVs can be defined to start at the top of a sub-block interleaver column. It is convenient, in general, to assign the RVs to any positions in the first row (i.e., at the top of a column) of the sub-block interleaver.
- this RV definition is memoryless for a dummy-padded circular buffer, in the sense that it is easy to start outputting the desired code bits from any RV without knowing the starting position of previous RVs.
- the dummy bits are discarded when the bits are being read out of the dummy-padded circular buffer.
- the column top is used in the discussion above as a simple way to define starting positions of the RVs, other convenient positions may be used as well.
- the starting positions of the RVs are all located in a particular row r of the dummy-padded circular buffer, where 0 ⁇ r ⁇ N r .
- the circular buffer 307 (dummy-removed or dummy padded) is physically formed, for example, by storing the bits of the circular buffer in a memory.
- the virtual circular buffer concept that directly generates the desired output bits without forming the physical circular buffer 307 .
- the rate matching functionality is fulfilled without the intermediate storage. This concept is shown in FIG. 8 .
- the intermediate step of forming the physical circular buffer can be avoided by finding an algebraic rule to easily generate a desired portion of the physical circular buffer without having to go through the entire physical circular buffer formation process.
- the rate matching algorithm initializes its address generator to an appropriate starting value based on the input parameters (RV number and input size). Then it directly starts outputting the bits by following the address generation rule as described by the sub-block permutations of the input streams.
- the address generation rule defines the sequence of positions in the encoder output stream from which the bits are outputted.
- the virtual circular buffer can be operated as both a dummy-padded circular buffer and a dummy-removed circular buffer.
- the RVs may start anywhere in the circular buffer (in the matrix format) as illustrated in FIG. 6 .
- the RV starting points may need to be explicitly stored, costing memory.
- the RV starting points may be derived for each case but the address initialization in the virtual circular buffer operation becomes complicated to implement in hardware.
- the RVs start at the top of the sub-block interleaver columns and hence the address initialization in the virtual circular buffer operation becomes more efficient. Whenever the address generator points to a dummy bit, the address generator is automatically advanced without outputting a bit.
- a 1st stage rate matching technique may be needed when the receiver has a limited amount of soft buffer size.
- the transmitter may have knowledge of the soft buffer capability of the receiver, and hence it is permitted to only transmit no more code bits than can be stored in the receiver's soft buffer.
- the maximum soft buffer size may impose a certain constraint on the rate matching with the circular buffer.
- the circular buffer for each code block may be further limited as shown in FIG. 9 .
- the wrap around in the circular buffer may happen at an earlier point than the end of the circular buffer.
- each segment of the TB may have its own circular buffer (or virtual circular buffer) (Note that it is not necessary to create physical circular buffers for each segment.).
- N IR is the total soft buffer size per HARQ process (or max buffer size corresponding to a TB).
- N cw size of all codewords (from all transport blocks) cannot exceed N IR , which is the soft buffer size of all TBs.
- N IR the soft buffer size of all TBs.
- the 1 st stage RM of the per code word RM in LTE can take N cw as input.
- Options for 1st stage rate matching may include:
- the RV starting points can also be defined on a per-codeword basis although it is preferable to signal a single RV per TB for efficient HARQ operation.
- the RV definition discussed above can be refined to accommodate a performance-enhancing technique called systematic puncturing.
- Systematic bit puncturing is used to avoid excessive puncturing of parity bits, which would otherwise lead to poor minimum distances at higher coding rates and therefore inferior performance.
- coding rates may perhaps be as high as 5 ⁇ 6 (or even higher) and hence such systems should be able to handle a small fraction of puncturing of systematic bits. Note such partially systematic codes are still self-decodable.
- ⁇ K(R) denote the fraction of systematic bits that are punctured at code rate R.
- the circular buffer can be re-configured to include systematic bit puncturing.
- the circular buffer in sequence format is used to illustrate the techniques, and the circular buffer can be dummy-padded or dummy-removed.
- the mother code rate is 1 ⁇ 3, and the bits are always taken sequentially starting from the first bit in the circular buffer.
- K info denotes information block size
- K stream denotes the length of a stream.
- systematic bits in S A may not be located in the front of the subblock interleaved systematic stream S′, rather in the middle or at the end of S′. It may also be taken from discontinuous locations of S′, such as one bit for every x bits of S′, x>1.
- the new modification is shown as an additional step performed after forming the circular buffer, this step could be combined directly into the definition of the circular buffer.
- Option 2 may not be preferable as the systematic bit puncturing is fixed for all the rates almost close to 1 ⁇ 3. Simulations suggest that for LTE, systematic bit puncturing of around 5% may be preferred for high rates such as 3 ⁇ 4 or 5 ⁇ 6, while 0% is preferred for lower coding rates such as 2 ⁇ 3 or 1 ⁇ 2. Therefore, it may be preferable to place the systematic bits in portions of the buffer as dictated by such reasons. Alternatively, it has been suggested to use RV 7 at low coding rates to switch off systematic bit puncturing.
- the same reconfigured circular buffer can be used in the context of HARQ with multiple transmissions per information block.
- Different redundancy versions for HARQ transmission may be obtained by taking different sections of the reconfigured circular buffer, where the section size is equal to the length required for the current physical channel transmission.
- RV redundancy versions
- N tx bits are read starting with position A i , wrap around to the beginning of the circular buffer if the end the buffer is reached. For a given information block, N tx may be different for each transmission.
- the systematic bit puncturing can be switched on by setting ⁇ to be a value greater than 0 (modulo 3 ⁇ N c ) for 3 streams (i.e., mother code rate 1 ⁇ 3), thus skipping a small fraction of systematic bits when reading out bits for RV 0 .
- RV 0 (the first redundancy version) is defined to start at the top of ⁇ -th column, where ⁇ is the number of offset columns. This is shown in FIG. 11 .
- Other values of ⁇ can also be considered.
- the RV definition may need to be modified to meet the following requirements:
- the implementation may be illustrated as follows.
- the 1 st stage RM is achieved by deleting one or more columns (preferably from the last column of the virtual circular buffer) from the circular buffer to form a shortened circular buffer.
- systematic bits can be punctured by defining the first redundancy version to start at a position with an offset relative to the beginning of the shortened circular buffer.
- the systematic bit puncturing may be achieved by defining RV 0 at a certain non-zero column number in the sub-block interleaver of the systematic sub-block interleaver.
- the first stage rate-matching may be considered to applied on a per-codeword (or per segment) basis.
- the shortened circular buffer is also referred to as circular buffer after 1 st stage rate matching is applied. This distinction should be clear from the context.
- RVs For example if 8 RVs is used as the baseline (when 1 st stage RM is absent), then the following options are available for defining RVs with 1 st stage RM.
- C indicates the number of columns between two adjacent RVs
- Y is the number of RVs defined.
- Similar RV modification can be applied if other number (e.g., 4) of RVs are defined before 1 st stage rate matching. For example if 4 RVs is used as the baseline (when 1 st stage RM is absent), then the following options are available for defining RVs with 1 st stage RM.
- the circular buffer contains bits of position j, where 0 ⁇ j ⁇ N cw ⁇ 1.
- FIG. 12 is a flow chart showing operation of the transmitter of FIG. 3 .
- the logic flow of FIG. 12 shows the steps for assigning redundancy versions to circular buffer 307 , and the subsequent transmission of bits from circular buffer 307 .
- the logic flow begins as step 1201 where logic circuitry 305 receives systematic bits, a first block of parity bits, and a second block of parity bits. These bits are output from encoder 301 .
- the systematic bits, the first block of parity bits, and the second block of parity bits all comprise dummy bits.
- Logic circuitry 305 individually block interleaves the systematic bits, first block of parity bits, and second block of parity bits using interleaver 309 (step 1203 ).
- logic circuitry 305 interlaces the first block of parity bits with the second block of parity bits and prepends the interleaved systematic bits to the interlaced parity bits to create circular buffer 307 .
- logic circuitry 305 then defines redundancy versions within a particular row of the circular buffer.
- the particular row comprises the top row of the circular buffer, for example, 8 or 4 sub-block interleaver column tops.
- Logic circuitry 305 receives a redundancy version and a number of desired bits (step 1209 ) and outputs to a transmitter the number of desired bits starting at the RV bit position (step 1211 ).
- FIG. 13 is a flow chart showing operation of the transmitter of FIG. 3 .
- the logic flow of FIG. 13 shows the steps for assigning redundancy versions to a virtual circular buffer, and the subsequent transmission of bits from the virtual circular buffer.
- the logic flow begins as step 1301 where logic circuitry 305 receives systematic bits, a first block of parity bits, and a second block of parity bits.
- the systematic bits, the first block of parity bits, and the second block of parity bits all comprise dummy bits.
- Logic circuitry 305 individually block interleaving the systematic bits, first block of parity bits, and second block of parity bits using interleaver 309 (step 1303 ).
- logic circuitry 305 interlaces the first block of parity bits with the second block of parity bits and prepends the interleaved systematic bits to the interlaced parity bits.
- the stream of data comprises the interleaved systematic bits, and an interlaced first block of interleaved parity bits and second block of interleaved parity bits.
- Logic circuitry 305 receives a redundancy version and a number of desired bits (step 1309 ) and outputs to a transmitter the number of desired bits starting at the RV bit position (step 1311 ).
- the procedure is explained the dummy bits may not be added to the streams and later removed from the circular buffer, rather the same effect is realized by other ways such as generating the addresses properly.
- starting RVs from a particular row (e.g., column tops) of the circular buffer can be equivalent to start RVs from a particular row in the subblock interleavers for each stream while dummy bits are present. Mapping the starting points to their location within the subblock interleaver may be more convenient for certain implementation, while defining the RV starting points in the circular buffer may be more convenient for other implementations.
Abstract
Description
-
- Kinfo refers to the information block size (or length of the message packet)
- KFEC refers to an input block size supported by the FEC encoder (KFEC is equal to the interleaver size for binary turbo code, and is equal to twice the interleaver size for duo-binary turbo code.)
- Kfiller refers to the number of filler bits added to the information block to obtain an input size that is supported for the FEC encoder. Kfiller=KFEC−Kinfo.
- Kstream=K is referred to as stream length, which is equal to slightly greater than the KFEC depending upon the trellis termination method used in the turbo code. For the 3GPP turbo code, there are three streams, each of length Kstream=KFEC+4, consisting of the systematic bits, Parity bits out of the first and second encoders, respectively, and 12 tail bits are distributed uniformly into the three streams.
- Nr refers to the number of rows in the sub-block interleaver used in the circular buffer.
- Nc refers to the number of columns in the sub-block interleaver used in the circular buffer.
- Krect=Nr×Nc is the dimension of the sub-block interleaver used in the circular buffer. In general Krect is chosen to be greater than or equal to Kstream though it can also be chosen to be greater than or equal to KFEC if the filler bits are discarded as part of the rate-matching algorithm.
-
- If the RV starting points are stored, then a total of 188×7 starting points need to be stored, costing memory. Note that there are 188 QPP interleaver sizes, and 7 RVs that need to be stored for each size.
- If the RV starting points are calculated on the fly, then two difficult operations need to be programmed in the hardware to find out the row and column indices of a point within the rectangle of the systematic bits or the rectangle of the parity-0/parity-1 rectangle. For example, if an RV starts at the L-th index within the systematic stream, then the two operations are:
- Division to find out the column index=floor(L/_Nr) assuming the column index starts at 0. Since Nr changes with Kstream if Nc fixed to 30, and Nr is most likely not a power of 2, the division is not trivial in hardware.
- Modulo to find out the row index=mod(L, Nc)=mod(L,30). Since 30 is not power of 2, the modulo operation is also not trivial in hardware.
-
- The permutation of each stream (or sub-block interleaver) is described as Krect=Nr×Nc rectangular array with dummy bits.
- When Ksteam=Nr×Nc, the bits of each stream are written into the rectangle row-wise and read out column-wise (after column permutation).
- When Ksteam<Nr×Nc the bits of each stream are written into the rectangle row-wise and read out column-wise, and (Nr×Nc−Kstream) dummy bits are padded to completely fill up the rectangle. The dummy bits are deleted or “pruned” before transmission over the channel.
- It should be noted that when the rectangle is full (dummy bits used or not), the permutation of each stream has a closed-form expression, which means it is easy to determine the inverse permutation. If it is easy to determine the inverse permutation, it is therefore also easy to determine the position in the encoder output stream corresponding to a particular RV. If the rectangle is partially filled (no dummy bits and Kstream<Nr×Nc), the permutation of each stream does not have a closed-form expression. In this case, it is difficult to determine the inverse permutation, and therefore also difficult to determine the position in the encoder output stream corresponding to a particular RV.
- The permutation of each stream (or sub-block interleaver) is described as Krect=Nr×Nc rectangular array with dummy bits.
-
- 1. Limiting the buffer size to a set maximum value for the UE class (over all TBs, all codewords of a given TTI. A User Equipment (UE) class defines a set of transmitter/receiver capabilities in 3GPP and 3GPP LTE.). Determine the per TB and per codeword limit from NIR via scaling. For example, Ncw=floor(NIR/C), where C is the number of turbo codewords for the concatenated TBs, determined by the code block segmentation rule. It is possible to determine per-codeword limit in a manner similar to the code-block segmentation rule.
- 2. Limiting the buffer to a set maximum value N′IR for the UE class (set the limit per TB). Determine the per codeword limit from this maximum via scaling.
- 3. Limiting the buffer to a set maximum value per codeword for the UE class.
With any of these three options, the per codeword limit may be defined by deleting entire columns from the virtual circular buffer (in individual segments).
For RV definitions, the choices include: -
Scheme 1. Only allow a subset of possible RVs. If Y RVs are defined without 1st stage rate matching (i.e., 1st rate matching is transparent), then Y′ RVs out of the Y available RVs may be kept when 1st stage rate matching is not transparent, Y′<=Y. For example, RV-i, i=0, 1, . . . , Y′−1, are used, where starting point of RV-Y′ is less than Ncw. -
Scheme 2. Redefine the RVs such that a full set of Y RVs is available inside the allowed maximum circular buffer size. The RVs are redefined such that they start at top of columns of the circular buffer with dummy bits inserted. The amount of systematic bit puncturing is unchanged, such thatRV 0 starts in the same position for all UE classes. For example, if Ncol columns of the dummy-padded circular buffer (containing 3×Nc columns before 1st stage rate matching) remain after 1st stage rate matching, then the Y RVs can start at column tops of column index floor((Ncol−2)/Y)×i+2, i=0, 1, . . . , Y−1.
-
- 1.
Option 1 inFIG. 10 describes the normal circular buffer in sequence format where all systematic bits are transmitted first, followed by some or all parity bits. - 2.
Option 2 inFIG. 10 contains the same bits as the normal circular buffer, but the circular buffer is modified; some of the systematic bits (SA) are taken from the systematic portion of the circular buffer and placed at the end of the buffer. Therefore, in the first transmission, the systematic bits in SA are punctured at many of the code rates.Option 2 may also be achieved by simply placing RV0 at the start at a position with an offset relative to the beginning of the circular buffer. This offset may be determined based on the amount of systematic bit puncturing required. For code rate R>=Kinfo/(3×L−SA), systematic bits in SA are always punctured. - 3.
Option 3 is same asOption 2 in that the circular buffer is modified; However, the systematic bits (SA) taken from the systematic portion of the circular buffer are placed in the buffer after X bits from the parity streams. Therefore, in the first transmission, some of the systematic bits are punctured at many of the code rates. For code rate R>=Kinfo/(SB+X), systematic bits in SA are always punctured.- a. From code rate K/(SB+X)>R>Kinfo/(SB+X+SA), part of systematic bits in SA are punctured.
- b. For code rates Kinfo/(SB+X+SA)>=R, all systematic bits are transmitted.
- 4.
Option 4 is same asOption 3 in that the circular buffer is modified. However, the systematic bits (SA) taken from the systematic portion of the circular buffer are distributed in the buffer in a certain range. Therefore, in the first transmission, some of the systematic bits are punctured at many of the code rates.Option 4 allows more flexibility in the design of a circular buffer, optimizing the systematic puncturing ratio ΔK(R). For example, systematic bits in SA may be evenly distributed within a range; or they are distributed in increasing density of systematic bits within a range; or they are distributed in decreasing density of systematic bits within a range.
- 1.
-
- Dummy bits included in the circular buffer to ease RV definition (i.e., dummy-padded circular buffer).
- Easy to start each RV for HARQ retransmissions. For example, the RVs are defined to start at the top (i.e., first row) of the sub-block interleaver columns in the circular buffer of matrix format. More specifically,
- If 8 RVs need to be defined, RVi would start with position Nr×(Nc×⅜×i+σ)=Nr×(12×i+σ)=┌Kstream/32┐(12×i+σ), i=0, 1, . . . , 7, in dummy-padded circular buffer of sequence format. In matrix format, RVi starts at the top of (12×i+σ)-th column.
- If only 4 RVs are defined, each RV starts at the top of the (24×i+σ)-th column (with σ=2). Equivalently, in sequence format, RVi starts with bit position Nr×(Nr×¾×i+σ)=Nr×(24×i+σ)=┌Kstream/32┐(24×i+σ), i=0, 1, . . . , 3.
-
- Although 32 columns are used in the proposed design, other values, especially powers of 2 such as 8, 16, 64 or 128, can be used as Nc.
- Although a particular column permutation is used in the design example, other permutation can be used to permute the columns as well.
- If two or more Nc are used in the rate matching design, then each Nc can be used for numerous interleaver sizes.
- The subblock interleaver may not be the same for all the streams. For example, the subblock interleaver can be the same for both systematic and
parity 1 streams, but the subblock interleaver ofparity 2 stream can be different. - Although for ease of description, the RVs are defined to start at the tops of the sub-block interleaver columns, they can also be defined to start at other convenient locations in the dummy-padded circular buffer. For example, all the RVs may start in the same row r of the constituent sub-block interleavers, where 0≦r<Nr.
-
- Ease of RV definition by including dummy bits in the circular buffer (i.e., dummy-padded circular buffer).
- Ease of starting the address generation for each RV for HARQ retransmissions. For example, the RVs could be defined to start at the tops of the sub-block interleaver columns (i.e., the first row in a sub-block interleaver column) in the circular buffer of matrix format.
- Keeping the starting positions of the RVs within range of the circular buffer limits after 1st stage rate matching.
-
- With
RV definition Scheme 1, the 8 RV starting positions may be kept but not necessarily used always. Only the original RV starting positions that lie within the range (0≦j≦Ncw−1) in the circular buffer may be allowed. This can also be stated using the following condition: only RV-i with Nr×σ<=Nr(12×i+σ)<=Ncw−1 are used, resulting in possibly fewer than 8 RVs in some cases. The last RV index i allowed is thus floor(((Ncw−1)/Nr−σ)/12). - With
RV definition Scheme 2, 8 RVs are still needed (in all cases), then RV starting positions can be Nr(C×i+σ), i=0, 1, . . . , 7, where C is the maximum integer such that Nr(C×i+σ)<=Ncw−1. In other words, C=floor(((Ncw−1)/Nr−σ)/7).
- With
-
- With
RV definition Scheme 1, the 4 RV starting positions are kept, then only RV-i with Nr×2<=Nr×(24×i+σ)<=Ncw−1 are used, resulting in possibly fewer than 4 RVs. - With
RV definition Scheme
- With
Claims (31)
Priority Applications (17)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/765,921 US7890834B2 (en) | 2007-06-20 | 2007-06-20 | Apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
CN2008800199821A CN101682486B (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
EP16187271.8A EP3136638A1 (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
PCT/US2008/067175 WO2008157523A2 (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
EP08771231.1A EP2171908B9 (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
ES08771231.1T ES2610818T3 (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular temporary store and method for assigning redundancy versions to a circular temporary store |
KR1020157036856A KR101701083B1 (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
RU2010101681/08A RU2467484C2 (en) | 2007-06-20 | 2008-06-17 | Apparatus having circular buffer and method of assigning redundancy versions to circular buffer |
JP2010510563A JP5499366B2 (en) | 2007-06-20 | 2008-06-17 | Method for assigning a redundancy version to a circular buffer and apparatus comprising a circular buffer |
BRPI0813136-8A2A BRPI0813136A2 (en) | 2007-06-20 | 2008-06-17 | APPARATUS UNDERSTANDING A CIRCULAR BUFFER AND A METHOD FOR ALLOCATING REDUNDANCE VERSIONS TO A CIRCULAR BUFFER |
MYPI20095041A MY149949A (en) | 2007-06-20 | 2008-06-17 | Apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
KR1020097026467A KR101593700B1 (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
CA2689587A CA2689587C (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
EP12003025A EP2485426A1 (en) | 2007-06-20 | 2008-06-17 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
ZA200908521A ZA200908521B (en) | 2007-06-20 | 2009-12-01 | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
RU2012118754/08A RU2604992C2 (en) | 2007-06-20 | 2012-05-04 | Apparatus comprising circular buffer and method for assigning redundancy versions to circular buffer |
JP2014000626A JP5791161B2 (en) | 2007-06-20 | 2014-01-06 | How to assign a redundancy version to a circular buffer |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/765,921 US7890834B2 (en) | 2007-06-20 | 2007-06-20 | Apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
Publications (2)
Publication Number | Publication Date |
---|---|
US20080320353A1 US20080320353A1 (en) | 2008-12-25 |
US7890834B2 true US7890834B2 (en) | 2011-02-15 |
Family
ID=39941691
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/765,921 Active 2029-12-15 US7890834B2 (en) | 2007-06-20 | 2007-06-20 | Apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer |
Country Status (12)
Country | Link |
---|---|
US (1) | US7890834B2 (en) |
EP (3) | EP2485426A1 (en) |
JP (2) | JP5499366B2 (en) |
KR (2) | KR101593700B1 (en) |
CN (1) | CN101682486B (en) |
BR (1) | BRPI0813136A2 (en) |
CA (1) | CA2689587C (en) |
ES (1) | ES2610818T3 (en) |
MY (1) | MY149949A (en) |
RU (2) | RU2467484C2 (en) |
WO (1) | WO2008157523A2 (en) |
ZA (1) | ZA200908521B (en) |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080301522A1 (en) * | 2005-06-27 | 2008-12-04 | Agere Systems Inc. | Structured de-interleaving scheme for product code decoders |
US20090181663A1 (en) * | 2008-01-11 | 2009-07-16 | Chunhua Hu | Transmission of Data Bursts on a Constant Data Rate Channel |
US20100199157A1 (en) * | 2007-10-01 | 2010-08-05 | Panasonic Corporation | Wireless communication device and circular buffer control method |
US20100218075A1 (en) * | 2009-02-02 | 2010-08-26 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US8942277B2 (en) | 2008-03-12 | 2015-01-27 | Panasonic Intellectual Property Corporation Of America | Wireless communication apparatus and wireless communication method |
US9337871B2 (en) | 2012-11-16 | 2016-05-10 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data |
US20180227077A1 (en) * | 2017-02-06 | 2018-08-09 | Mediatek Inc. | Method and apparatus for communication |
US10680764B2 (en) | 2018-02-09 | 2020-06-09 | Qualcomm Incorporated | Low-density parity check (LDPC) parity bit storage for redundancy versions |
US10999010B2 (en) * | 2016-01-29 | 2021-05-04 | Apple Inc. | Rate matching using low-density parity-check codes |
US11025277B2 (en) | 2017-03-09 | 2021-06-01 | Huawei Technologies Co., Ltd. | Data processing method, data processing apparatus, and communications device |
US11070316B2 (en) * | 2017-06-19 | 2021-07-20 | Huawei Technologies Co., Ltd. | Information processing method, apparatus, communications device, and communications system |
Families Citing this family (69)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8069400B2 (en) * | 2007-08-13 | 2011-11-29 | Broadcom Corporation | Optimal circular buffer rate matching for turbo code |
KR20090030378A (en) * | 2007-09-20 | 2009-03-25 | 삼성전자주식회사 | Apparatus and method for block interleaving in mobile communication system |
US7986741B2 (en) * | 2007-09-28 | 2011-07-26 | Samsung Electronics Co., Ltd. | Method and apparatus of improved circular buffer rate matching for turbo-coded MIMO-OFDM wireless systems |
KR20090036534A (en) * | 2007-10-09 | 2009-04-14 | 엘지전자 주식회사 | Method of transmitting data using constellation rearrangement |
US8225165B2 (en) * | 2007-10-12 | 2012-07-17 | Industrial Technology Research Institute | Methods and devices for encoding data in communication systems |
WO2009057922A1 (en) * | 2007-10-29 | 2009-05-07 | Lg Electronics Inc. | Method of data transmission using harq |
US8234551B2 (en) * | 2007-11-02 | 2012-07-31 | Broadcom Corporation | Single CRC polynomial for both turbo code block CRC and transport block CRC |
US8532012B2 (en) * | 2007-12-07 | 2013-09-10 | Industrial Technology Research Institute | Methods and devices for scalable reception in wireless communication systems |
KR101476203B1 (en) * | 2008-01-08 | 2014-12-24 | 엘지전자 주식회사 | Method For Transmitting Signals Using HARQ Scheme To Guarantee Constellation Rearrangement Gain |
US8665720B2 (en) * | 2008-03-12 | 2014-03-04 | Broadcom Corporation | Method and system for determining limited soft buffer size on transport blocks for rate matching |
US8514888B2 (en) * | 2008-09-12 | 2013-08-20 | Industrial Technology Research Institute | Methods and devices for wireless broadcasting service communication environment |
KR101216102B1 (en) | 2009-02-02 | 2012-12-26 | 엘지전자 주식회사 | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US20120033752A1 (en) * | 2009-04-24 | 2012-02-09 | Panasonic Corporation | Wireless communication device and wireless communication method |
US8516351B2 (en) * | 2009-07-21 | 2013-08-20 | Ramot At Tel Aviv University Ltd. | Compact decoding of punctured block codes |
US8516352B2 (en) * | 2009-07-21 | 2013-08-20 | Ramot At Tel Aviv University Ltd. | Compact decoding of punctured block codes |
US9397699B2 (en) * | 2009-07-21 | 2016-07-19 | Ramot At Tel Aviv University Ltd. | Compact decoding of punctured codes |
US8375278B2 (en) * | 2009-07-21 | 2013-02-12 | Ramot At Tel Aviv University Ltd. | Compact decoding of punctured block codes |
US8290073B2 (en) * | 2009-10-08 | 2012-10-16 | Intel Corporation | Device, system and method of communicating data over wireless communication symbols with check code |
US8677209B2 (en) * | 2009-11-19 | 2014-03-18 | Lsi Corporation | Subwords coding using different encoding/decoding matrices |
US8537755B2 (en) * | 2010-05-11 | 2013-09-17 | Qualcomm Incorporated | Rate matching device |
JP2011249914A (en) * | 2010-05-24 | 2011-12-08 | Panasonic Corp | Radio transmitting apparatus, radio receiving apparatus, radio transmitting method, and radio receiving method |
US8621289B2 (en) | 2010-07-14 | 2013-12-31 | Lsi Corporation | Local and global interleaving/de-interleaving on values in an information word |
CN101895374B (en) * | 2010-07-20 | 2012-09-05 | 华为技术有限公司 | Method and device for velocity matching |
US8402324B2 (en) | 2010-09-27 | 2013-03-19 | Lsi Corporation | Communications system employing local and global interleaving/de-interleaving |
US8724742B2 (en) * | 2010-10-06 | 2014-05-13 | Motorola Mobility Llc | Method and apparatus for soft buffer management for carrier aggregation |
US8976876B2 (en) | 2010-10-25 | 2015-03-10 | Lsi Corporation | Communications system supporting multiple sector sizes |
US8588223B2 (en) | 2010-11-09 | 2013-11-19 | Lsi Corporation | Multi-stage interconnection networks having smaller memory requirements |
US8782320B2 (en) | 2010-11-09 | 2014-07-15 | Lsi Corporation | Multi-stage interconnection networks having fixed mappings |
CN102215097B (en) * | 2011-06-01 | 2017-12-29 | 深圳市中兴微电子技术有限公司 | A kind of method and device for managing hybrid automatic repeat request cache |
CN111181708B (en) * | 2012-04-12 | 2022-09-02 | 北京三星通信技术研究有限公司 | Data processing method and device |
US9143291B2 (en) | 2012-12-27 | 2015-09-22 | Google Technology Holdings LLC | Method and apparatus for device-to-device communication |
US9185697B2 (en) | 2012-12-27 | 2015-11-10 | Google Technology Holdings LLC | Method and apparatus for device-to-device communication |
US9042938B2 (en) | 2012-12-27 | 2015-05-26 | Google Technology Holdings LLC | Method and apparatus for device-to-device communication |
US9370035B2 (en) | 2013-08-12 | 2016-06-14 | Google Technology Holdings LLC | Methods and devices for mobile station device-to-device beacon window determination |
US9392615B2 (en) | 2013-08-20 | 2016-07-12 | Google Technology Holdings LLC | Methods and devices for allocating resources in device-to-device communication |
US9727611B2 (en) * | 2013-11-08 | 2017-08-08 | Samsung Electronics Co., Ltd. | Hybrid buffer management scheme for immutable pages |
CN105637791A (en) * | 2014-05-27 | 2016-06-01 | 华为技术有限公司 | Cyclic mapping method and device |
CN105337684B (en) * | 2014-07-25 | 2019-09-13 | 华为技术有限公司 | A kind of method, base station and terminal transmitted, store downlink data |
CN106533611A (en) * | 2015-09-14 | 2017-03-22 | 中兴通讯股份有限公司 | Data sending method and device for convolutional codes |
CN105187162B (en) * | 2015-09-24 | 2018-04-27 | 北京思朗科技有限责任公司 | A kind of parallel dissociation rate matching method of more granularities and device |
US10784901B2 (en) | 2015-11-12 | 2020-09-22 | Qualcomm Incorporated | Puncturing for structured low density parity check (LDPC) codes |
CN108432167B (en) * | 2016-01-14 | 2021-07-30 | 苹果公司 | Apparatus, system, and computer readable medium for encoding and decoding a message |
US9819445B1 (en) * | 2016-05-05 | 2017-11-14 | Mbit Wireless, Inc. | Method and apparatus for joint rate matching and deinterleaving |
US11043966B2 (en) | 2016-05-11 | 2021-06-22 | Qualcomm Incorporated | Methods and apparatus for efficiently generating multiple lifted low-density parity-check (LDPC) codes |
US10454499B2 (en) | 2016-05-12 | 2019-10-22 | Qualcomm Incorporated | Enhanced puncturing and low-density parity-check (LDPC) code structure |
EP3902142A1 (en) | 2016-05-12 | 2021-10-27 | MediaTek Inc. | Qc-ldpc coding methods and apparatus |
US9917675B2 (en) | 2016-06-01 | 2018-03-13 | Qualcomm Incorporated | Enhanced polar code constructions by strategic placement of CRC bits |
US10469104B2 (en) | 2016-06-14 | 2019-11-05 | Qualcomm Incorporated | Methods and apparatus for compactly describing lifted low-density parity-check (LDPC) codes |
JP2019165269A (en) * | 2016-07-28 | 2019-09-26 | シャープ株式会社 | Base station device, terminal device and communication method |
DK3308469T3 (en) * | 2016-08-12 | 2020-06-02 | Ericsson Telefon Ab L M | Rate matching methods for LDPC codes |
WO2018068001A1 (en) * | 2016-10-06 | 2018-04-12 | Intel Corporation | Circular buffer rate matching for polar code |
CN108173621B (en) * | 2016-12-07 | 2022-06-14 | 华为技术有限公司 | Data transmission method, transmitting device, receiving device and communication system |
WO2018103638A1 (en) * | 2016-12-07 | 2018-06-14 | 华为技术有限公司 | Data transmission method, sending device, receiving device and communication system |
US10581457B2 (en) | 2017-01-09 | 2020-03-03 | Mediatek Inc. | Shift coefficient and lifting factor design for NR LDPC code |
US10630319B2 (en) | 2017-01-24 | 2020-04-21 | Mediatek Inc. | Structure of interleaver with LDPC code |
US10432227B2 (en) * | 2017-01-24 | 2019-10-01 | Mediatek Inc. | Location of interleaver with LDPC code |
CN108400844B (en) * | 2017-02-04 | 2021-07-20 | 华为技术有限公司 | Information processing method and device, communication equipment and communication system |
CN108400832B (en) * | 2017-02-06 | 2022-09-09 | 华为技术有限公司 | Data processing method and communication device |
US10348329B2 (en) * | 2017-02-13 | 2019-07-09 | Qualcomm Incorporated | Low density parity check (LDPC) circular buffer rate matching |
WO2018174569A1 (en) | 2017-03-22 | 2018-09-27 | Samsung Electronics Co., Ltd. | Apparatus and method of transmission using harq in communication or broadcasting system |
KR20180107692A (en) * | 2017-03-22 | 2018-10-02 | 삼성전자주식회사 | Apparatus and method of transmission using harq in communication or broadcasting system |
US10567116B2 (en) | 2017-05-12 | 2020-02-18 | Mediatek Inc. | Wireless communication using codebooks from a QC-LDPC code for shorter processing latency and improved decoder throughput efficiency |
US10484013B2 (en) | 2017-05-12 | 2019-11-19 | Mediatek Inc. | Shift-coefficient table design of QC-LDPC code for smaller code block sizes in mobile communications |
US10484011B2 (en) | 2017-05-12 | 2019-11-19 | Mediatek Inc. | Shift-coefficient table design of QC-LDPC code for larger code block sizes in mobile communications |
US20180367245A1 (en) * | 2017-06-19 | 2018-12-20 | Qualcomm Incorporated | COMMUNICATION TECHNIQUES WITH SELF-DECODABLE REDUNDANCY VERSIONS (RVs) USING SYSTEMATIC CODES |
US11044047B2 (en) | 2017-08-10 | 2021-06-22 | Nokia Technologies Oy | Method and apparatus for using at least one redundancy version for transmission of a data unit |
WO2019100236A1 (en) * | 2017-11-22 | 2019-05-31 | Qualcomm Incorporated | Circular buffer based hybrid automatic retransmission request for polar codes |
CN112753178B (en) * | 2018-09-28 | 2024-04-30 | 中兴通讯股份有限公司 | Bit selection for hybrid automatic repeat request |
WO2020114572A1 (en) * | 2018-12-03 | 2020-06-11 | Huawei Technologies Co., Ltd. | Devices, methods and computer programs for spatial diversity via enhanced rate matching in wireless communications |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090086849A1 (en) * | 2007-09-28 | 2009-04-02 | Jiannan Tsai | Method and apparatus of improved circular buffer rate matching for turbo-coded MIMO-OFDM wireless systems |
Family Cites Families (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
ES2196668T3 (en) * | 1993-12-18 | 2003-12-16 | Sony Corp | DATA PLAYBACK AND DATA STORAGE ENVIRONMENT. |
GB9814960D0 (en) * | 1998-07-10 | 1998-09-09 | Koninkl Philips Electronics Nv | Coding device and communication system using the same |
US6628723B1 (en) * | 1999-10-15 | 2003-09-30 | Cisco Technology | Coding rate reduction for turbo codes |
DE60128993T2 (en) * | 2001-02-06 | 2008-02-28 | Nortel Networks S.A. | Multi-rate ring buffer and corresponding operating method |
RU2251794C2 (en) * | 2001-05-08 | 2005-05-10 | Самсунг Электроникс Ко.,Лтд | Device and method for generating codes in communication system |
KR20030004978A (en) * | 2001-07-07 | 2003-01-15 | 삼성전자 주식회사 | Initial transmission and re-transmission method of in mobile communication system |
AU2003247088A1 (en) * | 2002-08-01 | 2004-02-23 | Koninklijke Philips Electronics N.V. | Coding and decoding for rate matching in data transmission |
-
2007
- 2007-06-20 US US11/765,921 patent/US7890834B2/en active Active
-
2008
- 2008-06-17 EP EP12003025A patent/EP2485426A1/en not_active Withdrawn
- 2008-06-17 CA CA2689587A patent/CA2689587C/en active Active
- 2008-06-17 BR BRPI0813136-8A2A patent/BRPI0813136A2/en not_active Application Discontinuation
- 2008-06-17 MY MYPI20095041A patent/MY149949A/en unknown
- 2008-06-17 ES ES08771231.1T patent/ES2610818T3/en active Active
- 2008-06-17 JP JP2010510563A patent/JP5499366B2/en active Active
- 2008-06-17 EP EP16187271.8A patent/EP3136638A1/en not_active Withdrawn
- 2008-06-17 KR KR1020097026467A patent/KR101593700B1/en active Application Filing
- 2008-06-17 WO PCT/US2008/067175 patent/WO2008157523A2/en active Application Filing
- 2008-06-17 KR KR1020157036856A patent/KR101701083B1/en active IP Right Grant
- 2008-06-17 CN CN2008800199821A patent/CN101682486B/en active Active
- 2008-06-17 EP EP08771231.1A patent/EP2171908B9/en active Active
- 2008-06-17 RU RU2010101681/08A patent/RU2467484C2/en active
-
2009
- 2009-12-01 ZA ZA200908521A patent/ZA200908521B/en unknown
-
2012
- 2012-05-04 RU RU2012118754/08A patent/RU2604992C2/en active
-
2014
- 2014-01-06 JP JP2014000626A patent/JP5791161B2/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090086849A1 (en) * | 2007-09-28 | 2009-04-02 | Jiannan Tsai | Method and apparatus of improved circular buffer rate matching for turbo-coded MIMO-OFDM wireless systems |
Non-Patent Citations (9)
Title |
---|
3GPP TS 25.212 v6.4.0 (Mar. 2005): "Multiplexing and Channel Coding (FDD) (Release 6)". 17 pages. |
Crozier, et al., "On Designing Turbo-Codes with Data Puncturing," Proceedings of the 2005 Canadian Workshop on Information Theory (CWIT 2005), Montréal, Quebec, Canada, Jun. 5-8, 2005., 4 Pages. |
Ericsson, Motorola, Broadcom, ZTE, Nokia, Texas Instruments, Qualcomm Europe, Freescale, CATT, ITRI, NTT DoCoMo, Panasonic, Samsung, Mitsubishi, Nortel, "R1-071195, QPP Interleaver parameters," 3GPP RAN1#48, St. Louis (USA), Feb. 12-16, 2007. |
Land, et al., "Partially Systematic Rate ½ Turbo Codes," Proc. 2nd Intl Symp. on Turbo Codes, Brest, France, pp. 287-290, Sep. 4-7, 2000. |
MCC Support, "Draft Report of 3GPP TSG RAN WG1 #48 v0.2.0," 3GPP RAN1#48, St. Julians, Malta, Mar. 26-30, 2007. |
Motorola, "Redudancy Version Definition for Circular Buffer Rate Matching, R1-072138", 3GPP TSG RAN 1, May 11, 2007, XP002504204. |
Motorola, France Telecom, GET, Orange, "R1-061050, EUTRA FEC Enhancement," 3GPP TSG RAN WG1#44bis, Athens, Greece. Mar. 27-31, 2006, 14 pages. |
Rowitch, et al., "On the performance of hybrid FEC/ARQ systems using rate compatible punctured turbo (RCPT) codes", Communications, IEEE Transactions on vol. 48, Issue 6, Jun. 2000 pp. 948-959. |
Samsung, Qualcomm, LGE, ITRI, "Circular Buffer Rate Matching for LTE, R1-072245", 3GPP TSG RAN Meeting 49, May 11, 2007, XP002504205. |
Cited By (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8205147B2 (en) * | 2005-06-27 | 2012-06-19 | Agere Systems Inc. | Structured de-interleaving scheme for product code decoders |
US20080301522A1 (en) * | 2005-06-27 | 2008-12-04 | Agere Systems Inc. | Structured de-interleaving scheme for product code decoders |
US20100199157A1 (en) * | 2007-10-01 | 2010-08-05 | Panasonic Corporation | Wireless communication device and circular buffer control method |
US8560910B2 (en) * | 2007-10-01 | 2013-10-15 | Panasonic Corporation | Wireless communication device and circular buffer control method |
US20090181663A1 (en) * | 2008-01-11 | 2009-07-16 | Chunhua Hu | Transmission of Data Bursts on a Constant Data Rate Channel |
US8934890B2 (en) * | 2008-01-11 | 2015-01-13 | Texas Instruments Incorporated | Transmission of data bursts on a constant data rate channel |
US10206198B2 (en) | 2008-03-12 | 2019-02-12 | Panasonic Intellectual Property Corporation Of America | Communication apparatus and communication method |
US11129144B2 (en) * | 2008-03-12 | 2021-09-21 | Panasonic Intellectual Property Corporation Of America | Integrated circuit |
US10694506B2 (en) | 2008-03-12 | 2020-06-23 | Panasonic Intellectual Property Corporation Of America | Integrated circuit |
US8942277B2 (en) | 2008-03-12 | 2015-01-27 | Panasonic Intellectual Property Corporation Of America | Wireless communication apparatus and wireless communication method |
US9276706B2 (en) | 2008-03-12 | 2016-03-01 | Panasonic Intellectual Property Corporation Of America | Communication apparatus and communication method |
US8375260B2 (en) | 2009-02-02 | 2013-02-12 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US8214696B2 (en) * | 2009-02-02 | 2012-07-03 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US20100218075A1 (en) * | 2009-02-02 | 2010-08-26 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US9966973B2 (en) | 2012-11-16 | 2018-05-08 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data |
US9337871B2 (en) | 2012-11-16 | 2016-05-10 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data |
US10554224B2 (en) | 2012-11-16 | 2020-02-04 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data with polar encoding |
US10999010B2 (en) * | 2016-01-29 | 2021-05-04 | Apple Inc. | Rate matching using low-density parity-check codes |
US20180227077A1 (en) * | 2017-02-06 | 2018-08-09 | Mediatek Inc. | Method and apparatus for communication |
US10601544B2 (en) * | 2017-02-06 | 2020-03-24 | Mediatek Inc. | Method and apparatus for communication |
US11296821B2 (en) | 2017-02-06 | 2022-04-05 | Mediatek Inc. | Method and apparatus for communication |
US11025277B2 (en) | 2017-03-09 | 2021-06-01 | Huawei Technologies Co., Ltd. | Data processing method, data processing apparatus, and communications device |
US11070316B2 (en) * | 2017-06-19 | 2021-07-20 | Huawei Technologies Co., Ltd. | Information processing method, apparatus, communications device, and communications system |
US10680764B2 (en) | 2018-02-09 | 2020-06-09 | Qualcomm Incorporated | Low-density parity check (LDPC) parity bit storage for redundancy versions |
Also Published As
Publication number | Publication date |
---|---|
RU2467484C2 (en) | 2012-11-20 |
EP2171908B9 (en) | 2017-04-19 |
JP5791161B2 (en) | 2015-10-07 |
JP5499366B2 (en) | 2014-05-21 |
RU2012118754A (en) | 2013-11-10 |
KR20160006249A (en) | 2016-01-18 |
EP2171908A2 (en) | 2010-04-07 |
EP2171908B1 (en) | 2016-10-19 |
EP2485426A1 (en) | 2012-08-08 |
US20080320353A1 (en) | 2008-12-25 |
KR101593700B1 (en) | 2016-02-12 |
CN101682486B (en) | 2013-04-10 |
JP2014060814A (en) | 2014-04-03 |
KR20100031575A (en) | 2010-03-23 |
RU2010101681A (en) | 2011-07-27 |
CA2689587A1 (en) | 2008-12-24 |
KR101701083B1 (en) | 2017-01-31 |
JP2010529756A (en) | 2010-08-26 |
RU2604992C2 (en) | 2016-12-20 |
CN101682486A (en) | 2010-03-24 |
CA2689587C (en) | 2012-11-13 |
WO2008157523A2 (en) | 2008-12-24 |
MY149949A (en) | 2013-11-15 |
WO2008157523A3 (en) | 2009-02-19 |
BRPI0813136A2 (en) | 2014-12-23 |
EP3136638A1 (en) | 2017-03-01 |
ZA200908521B (en) | 2010-08-25 |
ES2610818T3 (en) | 2017-05-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7890834B2 (en) | Apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer | |
US7924763B2 (en) | Method and appratus for rate matching within a communication system | |
US7260770B2 (en) | Block puncturing for turbo code based incremental redundancy | |
JP5457535B2 (en) | Rate matching and channel interleaving for communication systems | |
EP1601109B1 (en) | Adaptive channel encoding method and device | |
US9240808B2 (en) | Methods, apparatus, and systems for coding with constrained interleaving | |
US6289486B1 (en) | Adaptive channel encoding method and device | |
EP2111703B1 (en) | Method for sub -packet generation with adaptive bit index | |
KR20040081785A (en) | Improved turbo code based incremental redundancy | |
US7836376B2 (en) | Method and apparatus for encoding blocks of data with a blocks oriented code and for decoding such blocks with a controllable latency decoding, in particular for a wireless communication system of the WLAN or WPAN type | |
US9112534B2 (en) | Methods, apparatus, and systems for coding with constrained interleaving | |
EP3306844B1 (en) | Unequal error protection-based data transmission method and apparatus | |
US7272769B1 (en) | System and method for interleaving data in a wireless transmitter | |
KR20080010736A (en) | Appaturus and method for convolutional turbo codes encoding in broadband wireless access communication system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BLANKENSHIP, YUFEI W.;BLANKENSHIP, T. KEITH;CLASSON, BRIAN K.;AND OTHERS;REEL/FRAME:019456/0947Effective date: 20070620 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034500/0001Effective date: 20141028 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
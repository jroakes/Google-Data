EP2442310A2 - Power management for memory circuit - Google Patents
Power management for memory circuit Download PDFInfo
- Publication number
- EP2442310A2 EP2442310A2 EP12150807A EP12150807A EP2442310A2 EP 2442310 A2 EP2442310 A2 EP 2442310A2 EP 12150807 A EP12150807 A EP 12150807A EP 12150807 A EP12150807 A EP 12150807A EP 2442310 A2 EP2442310 A2 EP 2442310A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- dram
- circuits
- memory
- circuit
- address
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Images
Classifications
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C5/00—Details of stores covered by group G11C11/00
- G11C5/02—Disposition of storage elements, e.g. in the form of a matrix array
- G11C5/04—Supports for storage elements, e.g. memory modules; Mounting or fixing of storage elements on such supports
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F1/00—Details not covered by groups G06F3/00 - G06F13/00 and G06F21/00
- G06F1/26—Power supply means, e.g. regulation thereof
- G06F1/32—Means for saving power
- G06F1/3203—Power management, i.e. event-based initiation of a power-saving mode
- G06F1/3206—Monitoring of events, devices or parameters that trigger a change in power modality
- G06F1/3215—Monitoring of peripheral devices
- G06F1/3225—Monitoring of peripheral devices of memory devices
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C11/00—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor
- G11C11/21—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements
- G11C11/34—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements using semiconductor devices
- G11C11/40—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements using semiconductor devices using transistors
- G11C11/401—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements using semiconductor devices using transistors forming cells needing refreshing or charge regeneration, i.e. dynamic cells
- G11C11/4063—Auxiliary circuits, e.g. for addressing, decoding, driving, writing, sensing or timing
- G11C11/407—Auxiliary circuits, e.g. for addressing, decoding, driving, writing, sensing or timing for memory cells of the field-effect type
- G11C11/4074—Power supply or voltage generation circuits, e.g. bias voltage generators, substrate voltage generators, back-up power, power control circuits
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C5/00—Details of stores covered by group G11C11/00
- G11C5/06—Arrangements for interconnecting storage elements electrically, e.g. by wiring
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C5/00—Details of stores covered by group G11C11/00
- G11C5/14—Power supply arrangements, e.g. power down, chip selection or deselection, layout of wirings or power grids, or multiple supply levels
- G11C5/148—Details of power up or power down circuits, standby circuits or recovery circuits
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2213/00—Indexing scheme relating to interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units
- G06F2213/0038—System on Chip
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C11/00—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor
- G11C11/21—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements
- G11C11/34—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements using semiconductor devices
- G11C11/40—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements using semiconductor devices using transistors
- G11C11/401—Digital stores characterised by the use of particular electric or magnetic storage elements; Storage elements therefor using electric elements using semiconductor devices using transistors forming cells needing refreshing or charge regeneration, i.e. dynamic cells
- G11C11/406—Management or control of the refreshing or charge-regeneration cycles
- G11C11/40611—External triggering or timing of internal or partially internal refresh operations, e.g. auto-refresh or CAS-before-RAS triggered refresh
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C2207/00—Indexing scheme relating to arrangements for writing information into, or reading information out from, a digital store
- G11C2207/22—Control and timing of internal memory operations
- G11C2207/2272—Latency related aspects
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C2211/00—Indexing scheme relating to digital stores characterized by the use of particular electric or magnetic storage elements; Storage elements therefor
- G11C2211/401—Indexing scheme relating to cells needing refreshing or charge regeneration, i.e. dynamic cells
- G11C2211/406—Refreshing of dynamic cells
- G11C2211/4067—Refresh in standby or low power modes
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11C—STATIC STORES
- G11C8/00—Arrangements for selecting an address in a digital store
- G11C8/12—Group selection circuits, e.g. for memory block selection, chip selection, array selection
Definitions
- This invention relates generally to memory.
- a memory subsystem including an interface circuit adapted for coupling with a plurality of memory circuits and a system.
- the interface circuit is operable to interface the memory circuits and the system for emulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of memory circuits.
- Such aspect includes a signal, a capacity, a timing, and/or a logical interface.
- a memory subsystem including an interface circuit adapted for communication with a system and a majority of address or control signals of a first number of memory circuits.
- the interface circuit includes emulation logic for emulating at least one memory circuit of a second number.
- a memory circuit power management system and method are provided.
- an interface circuit is in communication with a plurality of physical memory circuits and a system.
- the interface circuit is operable to interface the physical memory circuits and the system for simulating at least one virtual memory circuit with a first power behavior that is different from a second power behavior of the physical memory circuits.
- a memory circuit power management system and method are provided.
- an interface circuit is in communication with a plurality of memory circuits and a system.
- the interface circuit is operable to interface the memory circuits and the system for performing a power management operation in association with at least a portion of the memory circuits.
- Such power management operation is performed during a latency associated with one or more commands directed to at least a portion of the memory circuits.
- an apparatus and method are provided for communicating with a plurality of physical memory circuits.
- at least one virtual memory circuit is simulated where at least one aspect (e.g. power-related aspect, etc.) of such virtual memory circuit(s) is different from at least one aspect of at least one of the physical memory circuits.
- such simulation may be carried out by a system (or component thereof), an interface circuit, etc.
- an power saving system and method are provided.
- at least one of a plurality of memory circuits is identified that is not currently being accessed.
- a power saving operation is initiated in association with the at least one memory circuit.
- FIG. 1 illustrates a system 100 including a system device 106 coupled to an interface circuit 102, which is in turn coupled to a plurality of physical memory circuits 104A-N.
- the physical memory circuits may be any type of memory circuits.
- each physical memory circuit is a separate memory chip.
- each may be a DDR2 DRAM.
- the memory circuits may be symmetrical, meaning each has the same capacity, type, speed, etc., while in other embodiments they may be asymmetrical. For ease of illustration only, three such memory circuits are shown, but actual embodiments may use any plural number of memory circuits.
- the memory chips may optionally be coupled to a memory module (not shown), such as a DIMM.
- the system device may be any type of system capable of requesting and/or initiating a process that results in an access of the memory circuits.
- the system may include a memory controller (not shown) through which it accesses the memory circuits.
- the interface circuit may include any circuit or logic capable of directly or indirectly communicating with the memory circuits, such as a buffer chip, advanced memory buffer (AMB) chip, etc.
- the interface circuit interfaces a plurality of signals 108 between the system device and the memory circuits. Such signals may include, for example, data signals, address signals, control signals, clock signals, and so forth. In some embodiments, all of the signals communicated between the system device and the memory circuits are communicated via the interface circuit. In other embodiments, some other signals 110 are communicated directly between the system device (or some component thereof, such as a memory controller, an AMB, or a register) and the memory circuits, without passing through the interface circuit. In some such embodiments, the majority of signals are communicated via the interface circuit, such that L>M.
- the interface circuit presents to the system device an interface to emulated memory devices which differ in some aspect from the physical memory circuits which are actually present.
- the interface circuit may tell the system device that the number of emulated memory circuits is different than the actual number of physical memory circuits.
- the terms “emulating”, “emulated”, “emulation”, and the like will be used in this disclosure to signify emulation, simulation, disguising, transforming, converting, and the like, which results in at least one characteristic of the memory circuits appearing to the system device to be different than the actual, physical characteristic.
- the emulated characteristic may be electrical in nature, physical in nature, logical in nature (e.g.
- an emulated electrical characteristic might be a signal, or a voltage level.
- An example of an emulated physical characteristic might be a number of pins or wires, a number of signals, or a memory capacity.
- An example of an emulated protocol characteristic might be a timing, or a specific protocol such as DDR3.
- an emulated signal such signal may be a control signal such as an address signal, a data signal, or a control signal associated with an activate operation, precharge operation, write operation, mode register read operation, refresh operation, etc.
- the interface circuit may emulate the number of signals, type of signals, duration of signal assertion, and so forth. It may combine multiple signals to emulate another signal.
- the interface circuit may present to the system device an emulated interface to e.g. DDR3 memory, while the physical memory chips are, in fact, DDR2 memory.
- the interface circuit may emulate an interface to one version of a protocol such as DDR2 with 5-5-5 latency timing, while the physical memory chips are built to another version of the protocol such as DDR2 with 3-3-3 latency timing.
- the interface circuit may emulate an interface to a memory having a first capacity that is different than the actual combined capacity of the physical memory chips.
- An emulated timing may relate to latency of e.g. a column address strobe (CAS) latency, a row address to column address latency (tRCD), a row precharge latency (tRP), an activate to precharge latency (tRAS), and so forth.
- CAS latency is related to the timing of accessing a column of data.
- tRCD is the latency required between the row address strobe (RAS) and CAS.
- tRP is the latency required to terminate an open row and open access to the next row.
- tRAS is the latency required to access a certain row of data between an activate operation and a precharge operation.
- the interface circuit may be operable to receive a signal from the system device and communicate the signal to one or more of the memory circuits after a delay (which may be hidden from the system device). Such delay may be fixed, or in some embodiments it may be variable. If variable, the delay may depend on e.g. a function of the current signal or a previous signal, a combination of signals, or the like. The delay may include a cumulative delay associated with any one or more of the signals. The delay may result in a time shift of the signal forward or backward in time with respect to other signals. Different delays may be applied to different signals.
- the interface circuit may similarly be operable to receive a signal from a memory circuit and communicate the signal to the system device after a delay.
- the interface circuit may take the form of, or incorporate, or be incorporated into, a register, an AMB, a buffer, or the like, and may comply with Joint Electron Device Engineering Council (JEDEC) standards, and may have forwarding, storing, and/or buffering capabilities.
- JEDEC Joint Electron Device Engineering Council
- the interface circuit may perform operations without the system device's knowledge.
- One particularly useful such operation is a power-saving operation.
- the interface circuit may identify one or more of the memory circuits which are not currently being accessed by the system device, and perform the power saving operation on those. In one such embodiment, the identification may involve determining whether any page (or other portion) of memory is being accessed.
- the power saving operation may be may be a power down operation, such as a precharge power down operation.
- the interface circuit may include one or more devices which together perform the emulation and related operations.
- the interface circuit may be coupled or packaged with the memory devices, or with the system device or a component thereof, or separately.
- the memory circuits and the interface circuit are coupled to a DIMM.
- FIG. 2 illustrates one embodiment of a system 200 including a system device (e.g. host system 204, etc.) which communicates address, control, clock, and data signals with a memory subsystem 201 via an interface.
- a system device e.g. host system 204, etc.
- FIG. 2 illustrates one embodiment of a system 200 including a system device (e.g. host system 204, etc.) which communicates address, control, clock, and data signals with a memory subsystem 201 via an interface.
- a system device e.g. host system 204, etc.
- the memory subsystem includes a buffer chip 202 which presents the host system with emulated interface to emulated memory, and a plurality of physical memory circuits which, in the example shown, are DRAM chips 206A-D.
- the DRAM chips are stacked, and the buffer chip is placed electrically between them and the host system.
- a stack may refer to any collection of memory circuits (e.g. DRAM circuits, flash memory circuits, or combinations of memory circuit technologies, etc.).
- the buffer chip buffers communicates signals between the host system and the DRAM chips, and presents to the host system an emulated interface to present the memory as though it were a smaller number of larger capacity DRAM chips, although in actuality there is a larger number of smaller capacity DRAM chips in the memory subsystem. For example, there may be eight 512Mb physical DRAM chips, but the buffer chip buffers and emulates them to appear as a single 4Gb DRAM chip, or as two 2Gb DRAM chips. Although the drawing shows four DRAM chips, this is for ease of illustration only; the invention is, of course, not limited to using four DRAM chips.
- the buffer chip is coupled to send address, control, and clock signals 208 to the DRAM chips via a single, shared address, control, and clock bus, but each DRAM chip has its own, dedicated data path for sending and receiving data signals 210 to/from the buffer chip.
- the reference number 1 will be used to denote the interface between the host system and the buffer chip
- the reference number 2 will be used to denote the address, control, and clock interface between the buffer chip and the physical memory circuits
- the reference number 3 will be used to denote the data interface between the buffer chip and the physical memory circuits, regardless of the specifics of how any of those interfaces is implemented in the various embodiments and configurations described below.
- FIG. 2 there is a single address, control, and clock interface channel 2 and four data interface channels 3; this implementation may thus be said to have a "1A4D" configuration (wherein “1A” means one address, control, and clock channel in interface 2, and "4D” means four data channels in interface 3).
- the DRAM chips are physically arranged on a single side of the buffer chip.
- the buffer chip may, optionally, be a part of the stack of DRAM chips, and may optionally be the bottommost chip in the stack. Or, it may be separate from the stack.
- FIG. 3 illustrates another embodiment of a system 301 in which the buffer chip 303 is interfaced to a host system 304 and is coupled to the DRAM chips 307A-307D somewhat differently than in the system of FIG. 2 .
- Each shared bus has two or more DRAM chips coupled to it. As shown, the sharing need not necessarily be the same in the data busses as it is in the address, control, and clock busses. This embodiment has a "2A2D" configuration.
- FIG. 4 illustrates another embodiment of a system 411 in which the buffer chip 413 is interfaced to a host system 404 and is coupled to the DRAM chips 417A-417D somewhat differently than in the system of FIGS. 2 or 3 .
- Each shared bus has two or more DRAM chips coupled to it.
- This implementation has a "1A2D" configuration.
- FIG. 5 illustrates another embodiment of a system 521 in which the buffer chip 523 is interfaced to a host system 504 and is coupled to the DRAM chips 527A-527D somewhat differently than in the system of FIGS. 2 through 4 .
- This implementation has a "1A1D" configuration.
- FIG. 6 illustrates another embodiment of a system 631 in which the buffer chip 633 is interfaced to a host system 604 and is coupled to the DRAM chips 637A-637D somewhat differently than in the system of FIGS. 2 through 5 .
- Each shared bus has two or more DRAM chips coupled to it. Further, in the example shown, the DRAM chips are physically arranged on both sides of the buffer chip. There may be, for example, sixteen DRAM chips, with the eight DRAM chips on each side of the buffer chip arranged in two stacks of four chips each. This implementation has a "2A4D" configuration.
- FIGS. 2 through 6 are not intended to be an exhaustive listing of all possible permutations of data paths, busses, and buffer chip configurations, and are only illustrative of some ways in which the host system device can be in electrical contact only with the load of the buffer chip and thereby be isolated from whatever physical memory circuits, data paths, busses, etc. exist on the (logical) other side of the buffer chip.
- FIG. 7 illustrates one embodiment of a method 700 for storing at least a portion of information received in association with a first operation, for use in performing a second operation.
- a method may be practiced in a variety of systems, such as, but not limited to, those of FIGS. 1-6 .
- the method may be performed by the interface circuit of FIG. 1 or the buffer chip of FIG. 2 .
- first information is received (702) in association with a first operation to be performed on at least one of the memory circuits (DRAM chips).
- the first information may be received prior to, simultaneously with, or subsequent to the instigation of the first operation.
- the first operation may be, for example, a row operation, in which case the first information may include e.g. address values received by the buffer chip via the address bus from the host system. At least a portion of the first information is then stored (704).
- the buffer chip also receives (706) second information associated with a second operation. For convenience, this receipt is shown as being after the storing of the first information, but it could also happen prior to or simultaneously with the storing.
- the second operation may be, for example, a column operation.
- the buffer chip performs (708) the second operation, utilizing the stored portion of the first information, and the second information.
- the buffer chip may receive from the host system's memory controller more address bits than are required to address any given one of the DRAM chips.
- the extra address bits may be decoded by the buffer chip to individually select the DRAM chips, utilizing separate chip select signals (not shown) to each of the DRAM chips in the stack.
- a stack of four x4 1 Gb DRAM chips behind the buffer chip may appear to the host system as a single x4 4Gb DRAM circuit, in which case the memory controller may provide sixteen row address bits and three bank address bits during a row operation (e.g. an activate operation), and provide eleven column address bits and three bank address bits during a column operation (e.g. a read or write operation).
- the individual DRAM chips in the stack may require only fourteen row address bits and three bank address bits for a row operation, and eleven column address bits and three bank address bits during a column operation.
- the buffer chip may receive two address bits more than are needed by any of the DRAM chips.
- the buffer chip stores (704) these two extra bits during the row operation (in addition to using them to select the correct one of the DRAM chips), then uses them later, during the column operation, to select the correct one of the DRAM chips.
- mapping between a system address (from the host system to the buffer chip) and a device address (from the buffer chip to a DRAM chip) may be performed in various manners.
- lower order system row address and bank address bits may be mapped directly to the device row address and bank address bits, with the most significant system row address bits (and, optionally, the most significant bank address bits) being stored for use in the subsequent column operation.
- what is stored is the decoded version of those bits; in other words, the extra bits may be stored either prior to or after decoding.
- the stored bits may be stored, for example, in an internal lookup table (not shown) in the buffer chip, for one or more clock cycles.
- the buffer chip may have four 512Mb DRAM chips with which it emulates a single 2Gb DRAM chip.
- the system will present fifteen row address bits, from which the buffer chip may use the fourteen low order bits (or, optionally, some other set of fourteen bits) to directly address the DRAM chips.
- the system will present three bank address bits, from which the buffer chip may use the two low order bits (or, optionally, some other set of two bits) to directly address the DRAM chips.
- the most significant bank address bit (or other unused bit) and the most significant row address bit (or other unused bit) are used to generate the four DRAM chip select signals, and are stored for later reuse.
- the stored bits are again used to generate the four DRAM chip select signals.
- the unused bank address is not stored during the row operation, as it will be re-presented during the subsequent column operation.
- addresses may be mapped between four 1Gb DRAM circuits to emulate a single 4Gb DRAM circuit.
- Sixteen row address bits and three bank address bits come from the host system, of which the low order fourteen address bits and all three bank address bits are mapped directly to the DRAM circuits.
- the two most significant row address bits are decoded to generate four chip select signals, and are stored using the bank address bits as the index.
- the stored row address bits are again used to generate the four chip select signals.
- a particular mapping technique may be chosen, to ensure that there are no unnecessary combinational logic circuits in the critical timing path between the address input pins and address output pins of the buffer chip.
- Corresponding combinational logic circuits may instead be used to generate the individual chip select signals. This may allow the capacitive loading on the address outputs of the buffer chip to be much higher than the loading on the individual chip select signal outputs of the buffer chip.
- the address mapping may be performed by the buffer chip using some of the bank address signals from the host system to generate the chip select signals.
- the buffer chip may store the higher order row address bits during a row operation, using the bank address as the index, and then use the stored address bits as part of the DRAM circuit bank address during a column operation.
- four 512Mb DRAM chips may be used in emulating a single 2Gb DRAM.
- Fifteen row address bits come from the host system, of which the low order fourteen are mapped directly to the DRAM chips.
- Three bank address bits come from the host system, of which the least significant bit is used as a DRAM circuit bank address bit for the DRAM chips.
- the most significant row address bit may be used as an additional DRAM circuit bank address bit.
- the two most significant bank address bits are decoded to generate the four chip select signals.
- the most significant row address bit may be stored during the row operation, and reused during the column operation with the least significant bank address bit, to form the DRAM circuit bank address.
- the column address from the host system memory controller may be mapped directly as the column address to the DRAM chips in the stack, since each of the DRAM chips may have the same page size, regardless any differences in the capacities of the (asymmetrical) DRAM chips.
- address bit A[10] may be used by the memory controller to enable or disable auto-precharge during a column operation, in which case the buffer chip may forward that bit to the DRAM circuits without any modification during a column operation.
- the simulated DRAM circuit may be desirable to determine whether the simulated DRAM circuit behaves according to a desired DRAM standard or other design specification. Behavior of many DRAM circuits is specified by the JEDEC standards, and it may be desirable to exactly emulate a particular JEDEC standard DRAM.
- the JEDEC standard defines control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals.
- the JEDEC specification for DDR2 DRAM is known as JESD79-2B. If it is desired to determine whether a standard is met, the following algorithm may be used. Using a set of software verification tools, it checks for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as the desired standard or other design specification.
- Suitable verification tools include: Magellan, supplied by Synopsys, Inc. of 700 E. Middlefield Rd., Mt. View, California 94043; Incisive, supplied by Cadence Design Systems, Inc., of 2655 Sealy Ave., San Jose, California 95134; tools supplied by Jasper Design Automation, Inc. of 100 View St. #100, Mt. View, California 94041; Verix, supplied by Real Intent, Inc., of 505 N. Mathilda Ave. #210, Sunnyvale, California 94085; 0-In, supplied by Mentor Graphics Corp. of 8005 SW Boeckman Rd., Wilsonville, Oregon 97070; and others. These software verification tools use written assertions that correspond to the rules established by the particular DRAM protocol and specification. These written assertions are further included in the code that forms the logic description for the buffer chip. By writing assertions that correspond to the desired behavior of the emulated DRAM circuit, a proof may be constructed that determines whether the desired design requirements are met.
- an assertion may be written that no two DRAM control signals are allowed to be issued to an address, control, and clock bus at the same time.
- the verification process allows a designer to prove that the emulated DRAM circuit exactly meets the required standard etc. If, for example, an address mapping that uses a common bus for data and a common bus for address, results in a control and clock bus that does not meet a required specification, alternative designs for buffer chips with other bus arrangements or alternative designs for the sideband signal interconnect between two or more buffer chips may be used and tested for compliance.
- Such sideband signals convey the power management signals, for example.
- FIG. 8 illustrates a high capacity DIMM 800 using a plurality of buffered stacks of DRAM circuits 802 and a register device 804, according to one embodiment of this invention.
- the register performs the addressing and control of the buffered stacks.
- the DIMM may be an FB-DIMM, in which case the register is an AMB.
- the emulation is performed at the DIMM level.
- FIG. 9 is a timing diagram illustrating a timing design 900 of a buffer chip which makes a buffered stack of DRAM chips mimic a larger DRAM circuit having longer CAS latency, in accordance with another embodiment of this invention.
- Any delay through a buffer chip may be made transparent to the host system's memory controller, by using such a method. Such a delay may be a result of the buffer chip being located electrically between the memory bus of the host system and the stacked DRAM circuits, since some or all of the signals that connect the memory bus to the DRAM circuits pass through the buffer chip. A finite amount of time may be needed for these signals to traverse through the buffer chip.
- the buffer chip may cause a one-half clock cycle delay between the buffer chip receiving address and control signals from the host system memory controller (or, optionally, from a register chip or an AMB), and the address and control signals being valid at the inputs of the stacked DRAM circuits.
- Data signals may also have a one-half clock cycle delay in either direction to/from the host system. Other amounts of delay are, of course, possible, and the half-clock cycle example is for illustration only.
- the cumulative delay through the buffer chip is the sum of a delay of the address and control signals and a delay of the data signals.
- FIG. 9 illustrates an example where the buffer chip is using DRAM chips having a native CAS latency of i clocks, and the buffer chip delay is j clocks, thus the buffer chip emulates a DRAM having a CAS latency of i+j clocks.
- the DRAM chips have a native CAS latency 906 of four clocks (from t1 to t5), and the total latency through the buffer chip is two clocks (one clock delay 902 from t0 to t1 for address and control signals, plus one clock delay 904 from t5 to t6 for data signals), and the buffer chip emulates a DRAM having a six clock CAS latency 908.
- the reference numbers 1, 2, and/or 3 at the left margin indicate which of the interfaces correspond to the signals or values illustrated on the associated waveforms.
- the "Clock” signal shown as a square wave on the uppermost waveform is indicated as belonging to the interface 1 between the host system and the buffer chip; the "Control Input to Buffer” signal is also part of the interface 1; the "Control Input to DRAM” waveform is part of the interface 2 from the buffer chip to the physical memory circuits; the "Data Output from DRAM” waveform is part of the interface 3 from the physical memory circuits to the buffer chip; and the “Data Output from Buffer” shown in the lowermost waveform is part of the interface 1 from the buffer chip to the host system.
- FIG. 10 is a timing diagram illustrating a timing design 1000 of write data timing expected by a DRAM circuit in a buffered stack.
- Emulation of a larger capacity DRAM circuit having higher CAS latency may, in some implementations, create a problem with the timing of write operations.
- the DDR2 SDRAM protocol may specify that the write CAS latency 1002 is one less than the read CAS latency. Therefore, since the buffered stack appears as a DDR2 SDRAM with a read CAS latency of six clocks, the memory controller may use a buffered stack write CAS latency of five clocks 1004 when scheduling a write operation to the memory.
- the waveform "Write Data Expected by DRAM” is not shown as belonging to interface 1, interface 2, or interface 3, for the simple reason that there is no such signal present in any of those interfaces. That waveform represents only what is expected by the DRAM, not what is actually provided to the DRAM.
- FIG. 11 is a timing illustrating a timing design 1100 showing how the buffer chip does this.
- the memory controller issues the write operation at t0.
- the write operation appeared at the DRAM circuits one clock later at t1, due to the inherent delay through the buffer chip.
- FIG. 12 is a timing diagram illustrating operation of an FB-DIMM's AMB, which may be designed to send write data earlier to buffered stacks instead of delaying the write address and operation (as in FIG. 11 ). Specifically, it may use an early write CAS latency 1202 to compensate the timing of the buffer chip write operation. If the buffer chip has a cumulative (address and data) inherent delay of two clocks, the AMB may send the write data to the buffered stack two clocks early. This may not be possible in the case of registered DIMMs, in which the memory controller sends the write data directly to the buffered stacks (rather than via the AMB). In another embodiment, the memory controller itself could be designed to send write data early, to compensate for the j clocks of cumulative inherent delay caused by the buffer chip.
- the memory controller issues the write operation at t0.
- the write operation arrives at the DRAM at t1.
- FIG. 13 is a timing diagram 1300 illustrating bus conflicts which can be caused by delayed write operations.
- the delaying of write addresses and write operations may be performed by a buffer chip, a register, an AMB, etc. in a manner that is completely transparent to the memory controller of the host system. And, because the memory controller is unaware of this delay, it may schedule subsequent operations such as activate or precharge operations, which may collide with the delayed writes on the address bus to the DRAM chips in the stack.
- the memory controller issues a write operation 1302 at time t0.
- the buffer chip or AMB delays the write operation, such that it appears on the bus to the DRAM chips at time t3.
- the memory controller issued an activate operation (control signal) 1304 which, after a one-clock inherent delay through the buffer chip, appears on the bus to the DRAM chips at time t3, colliding with the delayed write.
- FIGS. 14 and 15 are a timing diagram 1400 and a timing diagram 1500 illustrating methods of avoiding such collisions. If the cumulative latency through the buffer chip is two clock cycles, and the native read CAS latency of the DRAM chips is four clock cycles, then in order to hide the delay of the address and control signals and the data signals through the buffer chip, the buffer chip presents the host system with an interface to an emulated memory having a read CAS latency of six clock cycles. And if the tRCD and tRP of the DRAM chips are four clock cycles each, the buffer chip tells the host system that they are six clock cycles each in order to allow the buffer chip to delay the activate and precharge operations to avoid collisions in a manner that is transparent to the host system.
- the memory controller may schedule a column operation to a bank six clock cycles (at time t6) after an activate (row) operation (at time t0) to the same bank.
- the DRAM chips in the stack actually have a tRCD of four clock cycles. This gives the buffer chip time to delay the activate operation by up to two clock cycles, avoiding any conflicts on the address bus between the buffer chip and the DRAM chips, while ensuring correct read and write timing on the channel between the memory controller and the buffered stack.
- the buffer chip may issue the activate operation to the DRAM chips one, two, or three clock cycles after it receives the activate operation from the memory controller, register, or AMB.
- the actual delay selected may depend on the presence or absence of other DRAM operations that may conflict with the activate operation, and may optionally change from one activate operation to another. In other words, the delay may be dynamic.
- a one-clock delay (1402A, 1502A) may be accomplished simply by the inherent delay through the buffer chip.
- a two-clock delay (1402B, 1502B) may be accomplished by adding one clock of additional delay to the one-clock inherent delay
- a three-clock delay 1402C, 1502C
- a read, write, or activate operation issued by the memory controller at time t6 will, after a one-clock inherent delay through the buffer chip, be issued to the DRAM chips at time t7.
- a preceding activate or precharge operation issued by the memory controller at time t0 will, depending upon the delay, be issued to the DRAM chips at time t1, t2, or t3, each of which is at least the tRCD or tRP of four clocks earlier than the t7 issuance of the read, write, or activate operation.
- the memory controller may schedule a subsequent activate (row) operation to a bank a minimum of six clock cycles after issuing a precharge operation to that bank.
- the buffer chip may have the ability to delay issuing the precharge operation to the DRAM chips by up to two clock cycles, in order to avoid any conflicts on the address bus, or in order to satisfy the tRAS requirements of the DRAM chips.
- the precharge operation to the same bank may be delayed by the buffer chip to satisfy the tRAS requirements of the DRAM.
- the buffer chip may issue the precharge operation to the DRAM chips one, two, or three clock cycles after it is received. The delay selected may depend on the presence or absence of address bus conflicts or tRAS violations, and may change from one precharge operation to another.
- FIG. 16 illustrates a buffered stack 1600 according to one embodiment of this invention.
- the buffered stack includes four 512Mb DDR2 DRAM circuits (chips) 1602 which a buffer chip 1604 maps to a single 2Gb DDR2 DRAM.
- the multiple DRAM chips appear to the memory controller as though they were a single, larger DRAM, the combined power dissipation of the actual DRAM chips may be much higher than the power dissipation of a monolithic DRAM of the same capacity. In other words, the physical DRAM may consume significantly more power than would be consumed by the emulated DRAM.
- a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM of the same actual capacity using monolithic DRAM circuits.
- This increased power dissipation may limit the widespread adoption of DIMMs that use buffered stacks.
- the DRAM circuits may be opportunistically placed in low power states or modes.
- the DRAM circuits may be placed in a precharge power down mode using the clock enable (CKE) pin of the DRAM circuits.
- CKE clock enable
- a single rank registered DIMM may contain a plurality of buffered stacks, each including four x4 512Mb DDR2 SDRAM chips and appear (to the memory controller via emulation by the buffer chip) as a single x4 2Gb DDR2 SDRAM.
- the JEDEC standard indicates that a 2Gb DDR2 SDRAM may generally have eight banks, shown in FIG. 16 as Bank 0 to Bank 7. Therefore, the buffer chip may map each 512Mb DRAM chip in the stack to two banks of the equivalent 2Gb DRAM, as shown; the first DRAM chip 1602A is treated as containing banks 0 and 1, 1602B is treated as containing banks 2 and 4, and so forth.
- the memory controller may open and close pages in the DRAM banks based on memory requests it receives from the rest of the host system. In some embodiments, no more than one page may be able to be open in a bank at any given time. In the embodiment shown in FIG. 16 , each DRAM chip may therefore have up to two pages open at a time. When a DRAM chip has no open pages, the power management scheme may place it in the precharge power down mode.
- the clock enable inputs of the DRAM chips may be controlled by the buffer chip, or by another chip (not shown) on the R-DIMM, or by an AMB (not shown) in the case of an FB-DIMM, or by the memory controller, to implement the power management technique.
- the power management technique may be particularly effective if it implements a closed page policy.
- Another optional power management technique may include mapping a plurality of DRAM circuits to a single bank of the larger capacity emulated DRAM.
- a buffered stack (not shown) of sixteen x4 256Mb DDR2 SDRAM chips may be used in emulating a single x4 4Gb DDR2 SDRAM.
- the 4Gb DRAM is specified by JEDEC as having eight banks of 512Mbs each, so two of the 256Mb DRAM chips may be mapped by the buffer chip to emulate each bank (whereas in FIG. 16 one DRAM was used to emulate two banks).
- the memory controller since only one page can be open in a bank at any given time, only one of the two DRAM chips emulating that bank can be in the active state at any given time. If the memory controller opens a page in one of the two DRAM chips, the other may be placed in the precharge power down mode. Thus, if a number p of DRAM chips are used to emulate one bank, at least p-1 of them may be in a power down mode at any given time; in other words, at least p-1 of the p chips are always in power down mode, although the particular powered down chips will tend to change over time, as the memory controller opens and closes various pages of memory.
- the power saving operation may comprise operating in precharge power down mode except when refresh is required.
- FIG. 17 is a flow chart 1700 illustrating one embodiment of a method of refreshing a plurality of memory circuits.
- a refresh control signal is received (1702) e.g. from a memory controller which intends to refresh an emulated memory circuit.
- a plurality of refresh control signals are sent (1704) e.g. by a buffer chip to a plurality of physical memory circuits at different times.
- These refresh control signals may optionally include the received refresh control signal or an instantiation or copy thereof. They may also, or instead, include refresh control signals that are different in at least one aspect (format, content, etc.) from the received signal.
- At least one first refresh control signal may be sent to a first subset of the physical memory circuits at a first time, and at least one second refresh control signal may be sent to a second subset of the physical memory circuits at a second time.
- Each refresh signal may be sent to one physical memory circuit, or to a plurality of physical memory circuits, depending upon the particular implementation.
- the refresh control signals may be sent to the physical memory circuits after a delay in accordance with a particular timing.
- the timing in which they are sent to the physical memory circuits may be selected to minimize an electrical current drawn by the memory, or to minimize a power consumption of the memory. This may be accomplished by staggering a plurality of refresh control signals.
- the timing may be selected to comply with e.g. a tRFC parameter associated with the memory circuits.
- physical DRAM circuits may receive periodic refresh operations to maintain integrity of data stored therein.
- a memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits. After a refresh control signal is issued, a minimum time tRFC may be required to elapse before another control signal may be issued to that DRAM circuit.
- the tRFC parameter value may increase as the size of the DRAM circuit increases.
- the buffer chip When the buffer chip receives a refresh control signal from the memory controller, it may refresh the smaller DRAM circuits within the span of time specified by the tRFC of the emulated DRAM circuit. Since the tRFC of the larger, emulated DRAM is longer than the tRFC of the smaller, physical DRAM circuits, it may not be necessary to issue any or all of the refresh control signals to the physical DRAM circuits simultaneously. Refresh control signals may be issued separately to individual DRAM circuits or to groups of DRAM circuits, provided that the tRFC requirements of all physical DRAMs has been met by the time the emulated DRAM's tRFC has elapsed. In use, the refreshes may be spaced in time to minimize the peak current draw of the combination buffer chip and DRAM circuit set during a refresh operation.
- FIG. 18 illustrates one embodiment of an interface circuit such as may be utilized in any of the above-described memory systems, for interfacing between a system and memory circuits.
- the interface circuit may be included in the buffer chip, for example.
- the interface circuit includes a system address signal interface for sending/receiving address signals to/from the host system, a system control signal interface for sending/receiving control signals to/from the host system, a system clock signal interface for sending/receiving clock signals to/from the host system, and a system data signal interface for sending/receiving data signals to/from the host system.
- the interface circuit further includes a memory address signal interface for sending/receiving address signals to/from the physical memory, a memory control signal interface for sending/receiving control signals to/from the physical memory, a memory clock signal interface for sending/receiving clock signals to/from the physical memory, and a memory data signal interface for sending/receiving data signals to/from the physical memory.
- the host system includes a set of memory attribute expectations, or built-in parameters of the physical memory with which it has been designed to work (or with which it has been told, e.g. by the buffer circuit, it is working). Accordingly, the host system includes a set of memory interaction attributes, or built-in parameters according to which the host system has been designed to operate in its interactions with the memory. These memory interaction attributes and expectations will typically, but not necessarily, be embodied in the host system's memory controller.
- the physical memory itself has a set of physical attributes.
- These expectations and attributes may include, by way of example only, memory timing, memory capacity, memory latency, memory functionality, memory type, memory protocol, memory power consumption, memory current requirements, and so forth.
- the interface circuit includes memory physical attribute storage for storing values or parameters of various physical attributes of the physical memory circuits.
- the interface circuit further includes system emulated attribute storage. These storage systems may be read/write capable stores, or they may simply be a set of hard-wired logic or values, or they may simply be inherent in the operation of the interface circuit.
- the interface circuit includes emulation logic which operates according to the stored memory physical attributes and the stored system emulation attributes, to present to the system an interface to an emulated memory which differs in at least one attribute from the actual physical memory.
- the emulation logic may, in various embodiments, alter a timing, value, latency, etc. of any of the address, control, clock, and/or data signals it sends to or receives from the system and/or the physical memory. Some such signals may pass through unaltered, while others may be altered.
- the emulation logic may be embodied as, for example, hard wired logic, a state machine, software executing on a processor, and so forth.
- the physical memory circuits employed in practicing this invention may be any type of memory whatsoever, such as: DRAM, DDR DRAM, DDR2 DRAM, DDR3 DRAM, SDRAM, QDR DRAM, DRDRAM, FPM DRAM, VDRAM, EDO DRAM, BEDO DRAM, MDRAM, SGRAM, MRAM, IRAM, NAND flash, NOR flash, PSRAM, wetware memory, etc.
- the physical memory circuits may be coupled to any type of memory module, such as: DIMM, R-DIMM, SO-DIMM, FB-DIMM, unbuffered DIMM, etc.
- the system device which accesses the memory may be any type of system device, such as: desktop computer, laptop computer, workstation, server, consumer electronic device, television, personal digital assistant (PDA), mobile phone, printer or other peripheral device, etc.
- desktop computer laptop computer, workstation, server, consumer electronic device, television, personal digital assistant (PDA), mobile phone, printer or other peripheral device, etc.
- PDA personal digital assistant
- FIG. 19 illustrates a multiple memory circuit framework 1900, in accordance with one embodiment. As shown, included are an interface circuit 1902, a plurality of memory circuits 1904A, 1904B, 1904N, and a system 1906. In the context of the present description, such memory circuits 1904A, 1904B, 1904N may include any circuit capable of serving as memory.
- At least one of the memory circuits 1904A, 1904B, 1904N may include a monolithic memory circuit, a semiconductor die, a chip, a packaged memory circuit, or any other type of tangible memory circuit.
- the memory circuits 1904A, 19048, 1904N may take the form of a dynamic random access memory (DRAM) circuit.
- DRAM dynamic random access memory
- Such DRAM may take any form including, but not limited to, synchronous DRAM (SDRAM), double data rate synchronous DRAM (DDR SDRAM, DDR2 SDRAM, DDR3 SDRAM, etc.), graphics double data rate DRAM (GDDR, GDDR2, GDDR3, etc.), quad data rate DRAM (QDR DRAM), RAMBUS XDR DRAM (XDR DRAM), fast page mode DRAM (FPM DRAM), video DRAM (VDRAM), extended data out DRAM (EDO DRAM), burst EDO RAM (BEDO DRAM), multibank DRAM (MDRAM), synchronous graphics RAM (SGRAM), and/or any other type of DRAM.
- SDRAM synchronous DRAM
- DDR SDRAM double data rate synchronous DRAM
- DDR2 SDRAM DDR2 SDRAM, DDR3 SDRAM, etc.
- graphics double data rate DRAM GDDR, GDDR2, GDDR3, etc.
- quad data rate DRAM QDR DRAM
- RAMBUS XDR DRAM XDR DRAM
- At least one of the memory circuits 1904A, 1904B, 1904N may include magnetic random access memory (MRAM), intelligent random access memory (IRAM), distributed network architecture (DNA) memory, window random access memory (WRAM), flash memory (e.g. NAND, NOR, etc.), pseudostatic random access memory (PSRAM), wetware memory, memory based on semiconductor, atomic, molecular, optical, organic, biological, chemical, or nanoscale technology, and/or any other type of volatile or nonvolatile, random or non-random access, serial or parallel access memory circuit.
- MRAM magnetic random access memory
- IRAM intelligent random access memory
- DNA distributed network architecture
- WRAM window random access memory
- PSRAM pseudostatic random access memory
- wetware memory memory based on semiconductor, atomic, molecular, optical, organic, biological, chemical, or nanoscale technology, and/or any other type of volatile or nonvolatile, random or non-random access, serial or parallel access memory circuit.
- the memory circuits 1904A, 1904B, 1904N may or may not be positioned on at least one dual in-line memory module (DIMM) (not shown).
- the DIMM may include a registered DIMM (R-DIMM), a small outline-DIMM (SO-DIMM), a fully buffered DIMM (FB-DIMM), an unbuffered DIMM (UDIMM), single inline memory module (SIMM), a MiniDIMM, a very low profile (VLP) R-DIMM, etc.
- the memory circuits 1904A, 1904B, 1904N may or may not be positioned on any type of material forming a substrate, card, module, sheet, fabric, board, carrier or other any other type of solid or flexible entity, form, or object.
- the memory circuits 1904A, 1904B, 1904N may or may not be positioned in or on any desired entity, form, or object for packaging purposes.
- the memory circuits 1904A, 1904B, 1904N may or may not be organized into ranks. Such ranks may refer to any arrangement of such memory circuits 1904A, 1904B, 1904N on any of the foregoing entities, forms, objects, etc.
- the system 1906 may include any system capable of requesting and/or initiating a process that results in an access of the memory circuits 1904A, 1904B, 1904N. As an option, the system 1906 may accomplish this utilizing a memory controller (not shown), or any other desired mechanism.
- a memory controller not shown
- such system 1906 may include a system in the form of a desktop computer, a lap-top computer, a server, a storage system, a networking system, a workstation, a personal digital assistant (PDA), a mobile phone, a television, a computer peripheral (e.g. printer, etc.), a consumer electronics system, a communication system, and/or any other software and/or hardware, for that matter.
- PDA personal digital assistant
- the interface circuit 1902 may, in the context of the present description, refer to any circuit capable of interfacing (e.g. communicating, buffering, etc.) with the memory circuits 1904A, 1904B, 1904N and the system 1906.
- the interface circuit 1902 may, in the context of different embodiments, include a circuit capable of directly (e.g. via wire, bus, connector, and/or any other direct communication medium, etc.) and/or indirectly (e.g. via wireless, optical, capacitive, electric field, magnetic field, electromagnetic field, and/or any other indirect communication medium, etc.) communicating with the memory circuits 1904A, 1904B, 1904N and the system 1906.
- the communication may use a direct connection (e.g.
- point-to-point single-drop bus, multi-drop bus, serial bus, parallel bus, link, and/or any other direct connection, etc.
- indirect connection e.g. through intermediate circuits, intermediate logic, an intermediate bus or busses, and/or any other indirect connection, etc.
- the interface circuit 1902 may include one or more circuits, such as a buffer (e.g. buffer chip, etc.), register (e.g. register chip, etc.), advanced memory buffer (AMB) (e.g. AMB chip, etc.), a component positioned on at least one DIMM, etc.
- the register may, in various embodiments, include a JEDEC Solid State Technology Association (known as JEDEC) standard register (a JEDEC register), a register with forwarding, storing, and/or buffering capabilities, etc.
- JEDEC JEDEC Solid State Technology Association
- the register chips, buffer chips, and/or any other interface circuit(s) 1902 may be intelligent, that is, include logic that are capable of one or more functions such as gathering and/or storing information; inferring, predicting, and/or storing state and/or status; performing logical decisions; and/or performing operations on input signals, etc.
- the interface circuit 1902 may optionally be manufactured in monolithic form, packaged form, printed form, and/or any other manufactured form of circuit, for that matter.
- a plurality of the aforementioned interface circuits 1902 may serve, in combination, to interface the memory circuits 1904A, 1904B, 1904N and the system 1906.
- one, two, three, four, or more interface circuits 1902 may be utilized for such interfacing purposes.
- multiple interface circuits 1902 may be relatively configured or connected in any desired manner.
- the interface circuits 1902 may be configured or connected in parallel, serially, or in various combinations thereof.
- the multiple interface circuits 1902 may use direct connections to each other, indirect connections to each other, or even a combination thereof.
- any number of the interface circuits 1902 may be allocated to any number of the memory circuits 1904A, 1904B, 1904N.
- each of the plurality of interface circuits 1902 may be the same or different. Even still, the interface circuits 1902 may share the same or similar interface tasks and/or perform different interface tasks.
- memory circuits 1904A, 1904B, 1904N, interface circuit 1902, and system 1906 are shown to be separate parts, it is contemplated that any of such parts (or portion(s) thereof) may be integrated in any desired manner.
- such optional integration may involve simply packaging such parts together (e.g. stacking the parts to form a stack of DRAM circuits, a DRAM stack, a plurality of DRAM stacks, a hardware stack, where a stack may refer to any bundle, collection, or grouping of parts and/or circuits, etc.) and/or integrating them monolithically.
- At least one interface circuit 1902 may be packaged with at least one of the memory circuits 1904A, 1904B, 1904N.
- a DRAM stack may or may not include at least one interface circuit (or portion(s) thereof).
- different numbers of the interface circuit 1902 (or portion(s) thereof) may be packaged together. Such different packaging arrangements, when employed, may optionally improve the utilization of a monolithic silicon implementation, for example.
- the interface circuit 1902 may be capable of various functionality, in the context of different embodiments.
- the interface circuit 1902 may interface a plurality of signals 1908 that are connected between the memory circuits 1904A, 1904B, 1904N and the system 1906.
- the signals may, for example, include address signals, data signals, control signals, enable signals, clock signals, reset signals, or any other signal used to operate or associated with the memory circuits, system, or interface circuit(s), etc.
- the signals may be those that: use a direct connection, use an indirect connection, use a dedicated connection, may be encoded across several connections, and/or may be otherwise encoded (e.g. time-multiplexed, etc.) across one or more connections.
- the interfaced signals 1908 may represent all of the signals that are connected between the memory circuits 1904A, 1904B, 1904N and the system 1906. In other aspects, at least a portion of signals 1910 may use direct connections between the memory circuits 1904A, 1904B, 1904N and the system 1906. Moreover, the number of interfaced signals 1908 (e.g. vs. a number of the signals that use direct connections 1910, etc.) may vary such that the interfaced signals 1908 may include at least a majority of the total number of signal connections between the memory circuits 1904A, 1904B, 1904N and the system 1906 (e.g. L > M, with L and M as shown in FIG. 19 ). In other embodiments, L may be less than or equal to M. In still other embodiments L and/or M may be zero.
- the interface circuit 1902 may or may not be operable to interface a first number of memory circuits 1904A, 1904B, 1904N and the system 1906 for simulating a second number of memory circuits to the system 1906.
- the first number of memory circuits 1904A, 1904B, 1904N shall hereafter be referred to, where appropriate for clarification purposes, as the "physical" memory circuits or memory circuits, but are not limited to be so.
- the physical memory circuits may include a single physical memory circuit
- the at least one simulated memory circuit seen by the system 1906 shall hereafter be referred to, where appropriate for clarification purposes, as the at least one "virtual" memory circuit.
- the second number of virtual memory circuits may be more than, equal to, or less than the first number of physical memory circuits 1904A, 1904B, 1904N.
- the second number of virtual memory circuits may include a single memory circuit Of course, however, any number of memory circuits may be simulated.
- the term simulated may refer to any simulating, emulating, disguising, transforming, modifying, changing, altering, shaping, converting, etc., that results in at least one aspect of the memory circuits 1904A, 1904B, 1904N appearing different to the system 1906.
- such aspect may include, for example, a number, a signal, a memory capacity, a timing, a latency, a design parameter, a logical interface, a control system, a property, a behavior (e.g. power behavior including, but not limited to a power consumption, current consumption, current waveform, power parameters, power metrics, any other aspect of power management or behavior, etc.), and/or any other aspect, for that matter.
- the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner. For instance, in the context of electrical simulation, a number of pins, wires, signals, etc. may be simulated. In the context of logical simulation, a particular function or behavior may be simulated. In the context of protocol, a particular protocol (e.g. DDR3, etc.) may be simulated. Further, in the context of protocol, the simulation may effect conversion between different protocols (e.g. DDR2 and DDR3) or may effect conversion between different versions of the same protocol (e.g. conversion of 4-4-4 DDR2 to 6-6-6 DDR2).
- the interface circuit 1902 may or may not be operable to interface the memory circuits 1904A, 1904B, 1904N and the system 1906 for simulating at least one virtual memory circuit, where the virtual memory circuit includes at least one aspect that is different from at least one aspect of one or more of the physical memory circuits 1904A, 1904B, 1904N.
- Such aspect may, in one embodiment, include power behavior (e.g. a power consumption, current consumption, current waveform, any other aspect of power management or behavior, etc.).
- the interface circuit 1902 is operable to interface the physical memory circuits 1904A, 1904B, 1904N and the system 1906 for simulating at least one virtual memory circuit with a first power behavior that is different from a second power behavior of the physical memory circuits 1904A, 1904B, 1904N.
- Such power behavior simulation may effect or result in a reduction or other modification of average power consumption, reduction or other modification of peak power consumption or other measure of power consumption, reduction or other modification of peak current consumption or other measure of current consumption, and/or modification of other power behavior (e.g. parameters, metrics, etc.).
- such power behavior simulation may be provided by the interface circuit 1902 performing various power management.
- the interface circuit 1902 may perform a power management operation in association with only a portion of the memory circuits.
- a portion of memory circuits may refer to any row, column, page, bank, rank, sub-row, sub-column, sub-page, sub-bank, sub-rank, any other subdivision thereof, and/or any other portion or portions of one or more memory circuits.
- such portion may even refer to an entire one or more memory circuits (which may be deemed a portion of such multiple memory circuits, etc.).
- the portion of memory circuits may refer to any portion or portions of one or more memory circuits. This applies to both physical and virtual memory circuits.
- the power management operation may be performed by the interface circuit 1902 during a latency associated with one or more commands directed to at least a portion of the plurality of memory circuits 1904A, 1904B, 1904N.
- command(s) may refer to any control signal (e.g. one or more address signals; one or more data signals; a combination of one or more control signals; a sequence of one or more control signals; a signal associated with an activate (or active) operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation, or other encoded or direct operation, command or control signal; etc.).
- control signal e.g. one or more address signals; one or more data signals; a combination of one or more control signals; a sequence of one or more control signals; a signal associated with an activate (or active) operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation, or other encoded or direct operation, command or control signal;
- such virtual memory circuit(s) may include a first latency that is different than a second latency associated with at least one of the plurality of memory circuits 1904A, 1904B, 1904N. In use, such first latency may be used to accommodate the power management operation.
- the interface circuit 1902 performs the power management operation in association with at least a portion of the memory circuits, in an autonomous manner.
- Such autonomous performance refers to the ability of the interface circuit 1902 to perform the power management operation without necessarily requiring the receipt of an associated power management command from the system 1906.
- interface circuit 1902 may receive a first number of power management signals from the system 1906 and may communicate a second number of power management signals that is the same or different from the first number of power management signals to at least a portion of the memory circuits 1904A, 1904B, 1904N.
- power management signals may refer to any signal associated with power management, examples of which will be set forth hereinafter during the description of other embodiments.
- the second number of power management signals may be utilized to perform power management of the portion(s) of memory circuits in a manner that is independent from each other and/or independent from the first number of power management signals received from the system 1906 (which may or may not also be utilized in a manner that is independent from each other).
- a number of the aforementioned ranks may be less than the first number of power management signals.
- the interface circuit 1902 may be capable of a power management operation that takes the form of a power saving operation.
- the term power saving operation may refer to any operation that results in at least some power savings.
- the aforementioned simulation of a different power behavior may be achieved utilizing a power saving operation.
- the power management, power behavior simulation, and thus the power saving operation may optionally include applying a power saving command to one or more memory circuits based on at least one state of one or more memory circuits.
- a power saving command may include, for example, initiating a power down operation applied to one or more memory circuits.
- such state may depend on identification of the current, past or predictable future status of one or more memory circuits, a predetermined combination of commands issued to the one or more memory circuits, a predetermined pattern of commands issued to the one or more memory circuits, a predetermined absence of commands issued to the one or more memory circuits, any command(s) issued to the one or more memory circuits, and/or any command(s) issued to one or more memory circuits other than the one or more memory circuits.
- such status may refer to any property of the memory circuit that may be monitored, stored, and/or predicted.
- At least one of a plurality of memory circuits may be identified that is not currently being accessed by the system. Such status identification may involve determining whether a portion(s) is being accessed in at least one of the plurality of memory circuits. Of course, any other technique may be used that results in the identification of at least one of the memory circuits (or portion(s) thereof) that is not being accessed, e.g. in a non-accessed state. In other embodiments, other such states may be detected or identified and used for power management.
- a power saving operation may be initiated in association with the non-accessed memory circuit (or portion thereof).
- such power saving operation may involve a power down operation (e.g. entry into a precharge power down mode, as opposed to an exit therefrom, etc.).
- a power management signal including, but not limited to a clock enable signal (CKE), chip select signal, in combination with other signals and optionally commands.
- CKE clock enable signal
- use of a non-power management signal e.g. control signal, etc.
- any non-power management signal e.g. control signal, etc.
- the interface circuit may be operable to interface the memory circuits and the system for simulating at least one virtual memory circuit, where the virtual memory circuit includes at least one aspect that is different from at least one aspect of one or more of the physical memory circuits.
- the virtual memory circuit includes at least one aspect that is different from at least one aspect of one or more of the physical memory circuits.
- such aspect may include, for example, a signal, a memory capacity, a timing, a logical interface, etc.
- one or more of such aspects may be simulated for supporting a power management operation.
- the simulated timing may include a simulated latency (e.g. time delay, etc.).
- a simulated latency may include a column address strobe (CAS) latency (e.g. a latency associated with accessing a column of data).
- CAS column address strobe
- tRCD row address to column address latency
- the latency may be that between the row address strobe (RAS) and CAS.
- the simulated latency may include a row precharge latency (tRP).
- the tRP may include the latency to terminate access to an open row.
- the simulated latency may include an activate to precharge latency (tRAS).
- the tRAS may include the latency between an activate operation and a precharge operation.
- the simulated latency may include a row cycle time (tRC).
- the tRC may include the latency between consecutive activate operations to the same bank of a DRAM circuit.
- the simulated latency may include a read latency, write latency, or latency associated with any other operation(s), command(s), or combination or sequence of operations or commands.
- the simulated latency may include simulation of any latency parameter that corresponds to the time between two events.
- a first interface circuit may delay address and control signals for certain operations or commands by a clock cycles.
- a may not necessarily include the register delay (which is typically a one clock cycle delay through a JEDEC register).
- a second interface circuit may delay data signals by d clock cycles.
- the first and second interface circuits may be the same or different circuits or components in various embodiments.
- the delays a and d may or may not be different for different memory circuits.
- the delays a and d may apply to address and/or control and/or data signals.
- the delays a and d may not be integer or even constant multiples of the clock cycle and may be less than one clock cycle or zero.
- the interface circuits may make the stack of DRAM circuits appear to a memory controller (or any other component, system, or part(s) of a system) as one (or more) larger capacity virtual DRAM circuits with a read latency of i + j clocks, where i is the inherent read latency of the physical DRAM circuits.
- the interface circuits may be operable for simulating at least one virtual memory circuit with a first latency that may be different (e.g. equal, longer, shorter, etc.) than a second latency of at least one of the physical memory circuits.
- the interface circuits may thus have the ability to simulate virtual DRAM circuits with a possibly different (e.g. increased, decreased, equal, etc.) read or other latency to the system, thus making transparent the delay of some or all of the address, control, clock, enable, and data signals through the interface circuits.
- This simulated aspect may be used to accommodate power management of the DRAM circuits. More information regarding such use will be set forth hereinafter in greater detail during reference to different embodiments outlined in subsequent figures.
- the interface circuit may be operable to receive a signal from the system and communicate the signal to at least one of the memory circuits after a delay.
- the signal may refer to one of more of a control signal, a data signal, a clock signal, an enable signal, a reset signal, a logical or physical signal, a combination or pattern of such signals, or a sequence of such signals, and/or any other signal for that matter.
- such delay may be fixed or variable (e.g. a function of a current signal, and/or a previous signal, and/or a signal that will be communicated, after a delay, at a future time, etc.).
- the interface circuit may be operable to receive one or more signals from at least one of the memory circuits and communicate the signal(s) to the system after a delay.
- the signal delay may include a cumulative delay associated with one or more of the aforementioned signals. Even still, the signal delay may result in a time shift of the signal (e.g. forward and/or back in time) with respect to other signals. Of course, such forward and backward time shift may or may not be equal in magnitude.
- the time shifting may be accomplished utilizing a plurality of delay functions which each apply a different delay to a different signal.
- the aforementioned time shifting may be coordinated among multiple signals such that different signals are subject to shifts with different relative directions/magnitudes. For example, such time shifting may be performed in an organized manner. Yet again, more information regarding such use of delay in the context of power management will be set forth hereinafter in greater detail during reference to subsequent figures.
- FIGS. 20A-E show a stack of DRAM circuits 2000 that utilize one or more interface circuits, in accordance with various embodiments.
- the stack of DRAM circuits 2000 may be implemented in the context of the architecture of FIG. 19 .
- the stack of DRAM circuits 2000 may be implemented in any other desired environment (e.g. using other memory types, using different memory types within a stack, etc.). It should also be noted that the aforementioned definitions may apply during the present description.
- one or more interface circuits 2002 may be placed electrically between an electronic system 2004 and a stack of DRAM circuits 2006A-D. Thus the interface circuits 2002 electrically sit between the electronic system 2004 and the stack of DRAM circuits 2006A-D.
- the interface circuit(s) 2002 may include any interface circuit that meets the definition set forth during reference to FIG. 19 .
- the interface circuit(s) 2002 may be capable of interfacing (e.g. buffering, etc.) the stack of DRAM circuits 2006A-D to electrically and/or logically resemble at least one larger capacity virtual DRAM circuit to the system 2004.
- a stack or buffered stack may be utilized. In this way, the stack of DRAM circuits 2006A-D may appear as a smaller quantity of larger capacity virtual DRAM circuits to the system 2004.
- the stack of DRAM circuits 2006A-D may include eight 512Mb DRAM circuits.
- the interface circuit(s) 2002 may buffer the stack of eight 512Mb DRAM circuits to resemble a single 4Gb virtual DRAM circuit to a memory controller (not shown) of the associated system 2004.
- the interface circuit(s) 2002 may buffer the stack of eight 512Mb DRAM circuits to resemble two 2Gb virtual DRAM circuits to a memory controller of an associated system 2004.
- the stack of DRAM circuits 2006A-D may include any number of DRAM circuits.
- the interface circuit(s) 2002 may be connected to 1, 2, 4, 8 or more DRAM circuits 2006A-D.
- the interface circuit(s) 2002 may be connected to an odd number of DRAM circuits 2006A-D.
- the DRAM circuits 2006A-D may be arranged in a single stack. Of course, however, the DRAM circuits 2006A-D may also be arranged in a plurality of stacks
- the DRAM circuits 2006A-D may be arranged on, located on, or connected to a single side of the interface circuit(s) 2002, as shown in FIGS. 20A-D .
- the DRAM circuits 2006A-D may be arranged on, located on, or connected to both sides of the interface circuit(s) 2002 shown in FIG. 20E .
- the interface circuit(s) 2002 may be connected to 16 DRAM circuits with 8 DRAM circuits on either side of the interface circuit(s) 2002, where the 8 DRAM circuits on each side of the interface circuit(s) 2002 are arranged in two stacks of four DRAM circuits.
- other arrangements and numbers of DRAM circuits are possible (e.g. to implement error-correction coding, ECC, etc.)
- the interface circuit(s) 2002 may optionally be a part of the stack of DRAM circuits 2006A-D. Of course, however, interface circuit(s) 2002 may also be separate from the stack of DRAM circuits 2006A-D. In addition, interface circuit(s) 2002 may be physically located anywhere in the stack of DRAM circuits 2006A-D, where such interface circuit(s) 2002 electrically sits between the electronic system 2004 and the stack of DRAM circuits 2006A-D.
- the interface circuit(s) 2002 may be located at the bottom of the stack of DRAM circuits 2006A-D (e.g. the bottom-most circuit in the stack) as shown in FIGS. 20A-2D .
- the interface circuit(s) 2002 may be located in the middle of the stack of DRAM circuits 2006A-D.
- the interface circuit(s) 2002 may be located at the top of the stack of DRAM circuits 2006A-D (e.g. the top-most circuit in the stack).
- the interface circuit(s) 2002 may also be located anywhere between the two extremities of the stack of DRAM circuits 2006A-D.
- the interface circuit(s) 2002 may not be in the stack of DRAM circuits 2006A-D and may be located in a separate package(s).
- the electrical connections between the interface circuit(s) 2002 and the stack of DRAM circuits 2006A-D may be configured in any desired manner.
- address, control (e.g. command, etc.), and clock signals may be common to all DRAM circuits 2006A-D in the stack (e.g. using one common bus).
- each DRAM circuit 2006A-D there may be individual address, control and clock busses to each DRAM circuit 2006A-D.
- data signals may be wired as one common bus, several busses, or as an individual bus to each DRAM circuit 2006A-D.
- any combinations of such configurations may also be utilized.
- the DRAM circuits 2006A-D may have one common address, control and clock bus 2008 with individual data busses 2010.
- the DRAM circuits 2006A-D may have two address, control and clock busses 2008 along with two data busses 2010.
- the DRAM circuits 2006A-D may have one address, control and clock bus 2008 together with two data busses 2010.
- the DRAM circuits 2006A-D may have one common address, control and clock bus 2008 and one common data bus 2010. It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized.
- the interface circuit(s) 2002 may be split into several chips that, in combination, perform power management functions. Such power management functions may optionally introduce a delay in various signals.
- register chip there may be a single register chip that electrically sits between a memory controller and a number of stacks of DRAM circuits.
- the register chip may, for example, perform the signaling to the DRAM circuits.
- Such register chip may be connected electrically to a number of other interface circuits that sit electrically between the register chip and the stacks of DRAM circuits. Such interface circuits in the stacks of DRAM circuits may then perform the aforementioned delay, as needed.
- each DRAM stack there may be no need for an interface circuit in each DRAM stack.
- the register chip may perform the signaling to the DRAM circuits directly.
- each stack may be a single memory (e.g. DRAM) circuit.
- combinations of the above implementations may be used.
- register chips may be used in combination with other interface circuits, or registers may be utilized alone.
- FIGS. 21A-D show a memory module 2100 which uses DRAM circuits or stacks of DRAM circuits (e.g. DRAM stacks) with various interface circuits, in accordance with different embodiments.
- the memory module 2100 may be implemented in the context of the architecture and environment of FIGS. 19 and/or 20. Of course, however, the memory module 2100 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- FIG. 21A shows two register chips 2104 driving address and control signals to DRAM circuits 2102.
- the DRAM circuits 2102 may send/receive data signals to and/or from a system (e.g. memory controller) using the DRAM data bus, as shown.
- a system e.g. memory controller
- FIG. 21B shows one register chip 2104 driving address and control signals to DRAM circuits 2102.
- register chips 2104 may be utilized, in various embodiments.
- FIG. 21C shows register chips 2104 driving address and control signals to DRAM circuits 2102 and/or intelligent interface circuits 2103.
- the DRAM data bus is connected to the intelligent interface circuits 2103 (not shown explicitly).
- the register chip(s) 2104 may drive some, all, or none of the control and/or address signals to intelligent interface circuits 2103.
- FIG. 21D shows register chips 2104 driving address and control signals to the DRAM circuits 2102 and/or intelligent interface circuits 2103. Furthermore, this FIG. illustrates that the register chip(s) 2104 may drive some, all, or none of the control and/or address signals to intelligent interface circuits 2103. Again, the DRAM data bus is connected to the intelligent interface circuits 2103. Additionally, this FIG. illustrates that either one (in the case of DRAM stack 2106) or two (in the case of the other DRAM stacks 2102) stacks of DRAM circuits 2102 may be associated with a single intelligent interface circuit 2103.
- any number of stacks of DRAM circuits 2102 may be associated with each intelligent interface circuit 2103.
- an AMB chip may be utilized with an FB-DIMM, as will be described in more detail with respect to FIGS. 22A-E .
- FIGS. 22A-E show a memory module 2200 which uses DRAM circuits or stacks of DRAM circuits (e.g. DRAM stacks) 2202 with an AMB chip 2204, in accordance with various embodiments.
- the memory module 2200 may be implemented in the context of the architecture and environment of FIGS. 19-21 .
- the memory module 2200 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- FIG. 22A shows the AMB chip 2204 driving address and control signals to the DRAM circuits 2202.
- the AMB chip 2204 sends/receives data to/from the DRAM circuits 2202.
- FIG. 22B shows the AMB chip 2204 driving address and control signals to a register 2206.
- the register 2206 may drive address and control signals to the DRAM circuits 2202.
- the DRAM circuits send/receive data to/from the AMB.
- a DRAM data bus may be connected to the AMB chip 2204.
- FIG. 22C shows the AMB chip 2204 driving address and control to the register 2206.
- the register 2206 may drive address and control signals to the DRAM circuits 2202 and/or the intelligent interface circuits 2203.
- FIG. illustrates that the register 2206 may drive zero, one, or more address and/or control signals to one or more intelligent interface circuits 2203.
- each DRAM data bus is connected to the interface circuit 2203 (not shown explicitly).
- the intelligent interface circuit data bus is connected to the AMB chip 2204.
- the AMB data bus is connected to the system.
- FIG. 22D shows the AMB chip 2204 driving address and/or control signals to the DRAM circuits 2202 and/or the intelligent interface circuits 2203.
- This FIG. illustrates that the AMB chip 2204 may drive zero, one, or more address and/or control signals to one or more intelligent interface circuits 2203.
- each DRAM data bus is connected to the intelligent interface circuits 2203 (not shown explicitly).
- the intelligent interface circuit data bus is connected to the AMB chip 2204.
- the AMB data bus is connected to the system.
- FIG. 22E shows the AMB chip 2204 driving address and control to one or more intelligent interface circuits 2203.
- the intelligent interface circuits 2203 then drive address and control to each DRAM circuit 2202 (not shown explicitly).
- each DRAM data bus is connected to the intelligent interface circuits 2203 (also not shown explicitly).
- the intelligent interface circuit data bus is connected to the AMB chip 2204 .
- the AMB data bus is connected to the system.
- register chips may be utilized in conjunction with the intelligent interface circuits.
- register chips may be utilized alone and/or with or without stacks of DRAM circuits.
- FIG. 23 shows a system 2300 in which four 512Mb DRAM circuits appear, through simulation, as (e.g. mapped to) a single 2Gb virtual DRAM circuit, in accordance with yet another embodiment.
- the system 2300 may be implemented in the context of the architecture and environment of FIGS. 19-22 .
- the system 2300 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- a stack of memory circuits that is interfaced by the interface circuit for the purpose of simulation may include four 512Mb physical DRAM circuits 2302A-D that appear to a memory controller as a single 2Gb virtual DRAM circuit.
- the buffered stack may include various numbers of physical DRAM circuits including two, four, eight, sixteen or even more physical DRAM circuits that appear to the memory controller as a single larger capacity virtual DRAM circuit or multiple larger capacity virtual DRAM circuits.
- the number of physical DRAM circuits in the buffered stack may be an odd number. For example, an odd number of circuits may be used to provide data redundancy or data checking or other features.
- one or more control signals (e.g. power management signals) 2306 may be connected between the interface circuit 2304 and the DRAM circuits 2302A-D in the stack.
- the interface circuit 2304 may be connected to a control signal (e.g. power management signal) 2308 from the system, where the system uses the control signal 2308 to control one aspect (e.g. power behavior) of the 2Gb virtual DRAM circuit in the stack.
- the interface circuit 2304 may control the one aspect (e.g. power behavior) of all the DRAM circuits 2302A-D in response to a control signal 2308 from the system to the 2Gb virtual DRAM circuit.
- the interface circuit 2304 may also, using control signals 2306, control the one aspect (e.g. power behavior) of one or more of the DRAM circuits 2302A-D in the stack in the absence of a control signal 2308 from the system to the 2Gb virtual DRAM circuit.
- the buffered stacks 2300 may also be used in combination together on a DIMM such that the DIMM appears to the memory controller as a larger capacity DIMM.
- the buffered stacks may be arranged in one or more ranks on the DIMM. All the virtual DRAM circuits on the DIMM that respond in parallel to a control signal 2308 (e.g. chip select signal, clock enable signal, etc.) from the memory controller belong to a single rank.
- the interface circuit 2304 may use a plurality of control signals 2306 instead of control signal 2308 to control DRAM circuits 2302A-D.
- the interface circuit 2304 may use all the control signals 2306 in parallel in response to the control signal 2308 to do power management of the DRAM circuits 2302A-D in one example.
- the interface circuit 2304 may use at least one but not all the control signals 2306 in response to the control signal 2308 to do power management of the DRAM circuits 2302A-D. In yet another example, the interface circuit 2304 may use at least one control signal 2306 in the absence of the control signal 2308 to do power management of the DRAM circuits 2302A-D.
- the number of banks per DRAM circuit may be defined by JEDEC standards for many DRAM circuit technologies.
- multiple physical DRAM circuits 2302A-D may be stacked and interfaced by an interface circuit 2304 and may appear as at least one larger capacity virtual DRAM circuit to the memory controller.
- the stack may include four 512Mb DDR2 physical SDRAM circuits that appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit.
- each bank of a virtual DRAM circuit seen by the memory controller may correspond to a portion of a physical DRAM circuit. That is, each physical DRAM circuit may be mapped to multiple banks of a virtual DRAM circuit
- each physical DRAM circuit may be mapped to multiple banks of a virtual DRAM circuit
- four 512Mb DDR2 physical SDRAM circuits through simulation may appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit.
- a 2Gb DDR2 SDRAM may have eight banks as specified by the JEDEC standards. Therefore, in this embodiment, the interface circuit 2304 may map each 512Mb physical DRAM circuit to two banks of the 2Gb virtual DRAM.
- a one-circuit-to-many-bank configuration one physical DRAM circuit to many banks of a virtual DRAM circuit may be utilized.
- each physical DRAM circuit may be mapped to a single bank of a virtual DRAM circuit.
- eight 512Mb DDR2 physical SDRAM circuits may appear to the memory controller, through simulation, as a single 4Gb virtual DDR2 SDRAM circuit.
- a 4Gb DDR2 SDRAM may have eight banks as specified by the JEDEC standards. Therefore, the interface circuit 2304 may map each 512Mb physical DRAM circuit to a single bank of the 4Gb virtual DRAM. In this way, a one-circuit-to-one-bank configuration (one physical DRAM circuit to one bank of a virtual DRAM circuit) may be utilized.
- a plurality of physical DRAM circuits may be mapped to a single bank of a virtual DRAM circuit.
- sixteen 256Mb DDR2 physical SDRAM circuits may appear to the memory controller, through simulation, as a single 4Gb virtual DDR2 SDRAM circuit.
- a 4Gb DDR2 SDRAM circuit may be specified by JEDEC to have eight banks, such that each bank of the 4Gb DDR2 SDRAM circuit may be 512Mb.
- two of the 256Mb DDR2 physical SDRAM circuits may be mapped by the interface circuit 2304 to a single bank of the 4Gb virtual DDR2 SDRAM circuit seen by the memory controller. Accordingly, a many-circuit-to-one-bank configuration (many physical DRAM circuits to one bank of a virtual DRAM circuit) may be utilized.
- multiple physical DRAM circuits 2302A-D in the stack may be buffered by the interface circuit 2304 and may appear as at least one larger capacity virtual DRAM circuit to the memory controller.
- the buffered stack may include four 512Mb DDR2 physical SDRAM circuits that appear to the memory controller as a single 2Gb DDR2 virtual SDRAM circuit.
- the combined power dissipation of all four DRAM circuits 2302A-D in the stack when they are active may be higher than the power dissipation of a monolithic (e.g. constructed without stacks) 2Gb DDR2 SDRAM.
- the power dissipation of a DIMM constructed from buffered stacks may be much higher than a DIMM constructed without buffered stacks.
- a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM built using monolithic DRAM circuits.
- power management may be utilized to reduce the power dissipation of DIMMs that contain buffered stacks of DRAM circuits.
- power management schemes may be utilized for one-circuit-to-many-bank, one-circuit-to-one-bank, and many-circuit-to-one-bank configurations.
- Memory e.g. DRAM
- DDR2 SDRAM for example, power management may be initiated using the CKE and chip select (CS#) inputs and optionally in combination with a command to place the DDR2 SDRAM in various power down modes.
- CS# chip select
- DDR2 SDRAM Four power saving modes for DDR2 SDRAM may be utilized, in accordance with various different embodiments (or even in combination, in other embodiments).
- two active power down modes, precharge power down mode, and self-refresh mode may be utilized. If CKE is de-asserted while CS# is asserted, the DDR2 SDRAM may enter an active or precharge power down mode. If CKE is de-asserted while CS# is asserted in combination with the refresh command, the DDR2 SDRAM may enter the self refresh mode.
- the DDR2 SDRAM may enter precharge power down mode. If power down occurs when there are no rows active in any bank, the DDR2 SDRAM may enter one of the two active power down modes.
- the two active power down modes may include fast exit active power down mode or slow exit active power down mode.
- the selection of fast exit mode or slow exit mode may be determined by the configuration of a mode register.
- the maximum duration for either the active power down mode or the precharge power down mode may be limited by the refresh requirements of the DDR2 SDRAM and may further be equal to tRFC(MAX).
- DDR2 SDRAMs may require CKE to remain stable for a minimum time of tCKE(MIN). DDR2 SDRAMs may also require a minimum time of tXP(MIN) between exiting precharge power down mode or active power down mode and a subsequent non-read command. Furthermore, DDR2 SDRAMs may also require a minimum time of tXARD(MIN) between exiting active power down mode (e.g. fast exit) and a subsequent read command. Similarly, DDR2 SDRAMs may require a minimum time of tXARDS(MIN) between exiting active power down mode (e.g. slow exit) and a subsequent read command.
- the SDRAM may require a power down entry latency of three clock cycles.
- the SDRAM may require a power down exit latency of two clock cycles.
- the power down entry latency and power down exit latency may be different, but this does not necessarily affect the operation of power management described here.
- a minimum total of five clock cycles may be required to enter and then immediately exit a power down mode (e.g. three cycles to satisfy tCKE(min) due to entry latency plus two cycles to satisfy tXP(MIN) or tXARD(MIN) due to exit latency). These five clock cycles may be hidden from the memory controller if power management is not being performed by the controller itself.
- the minimum power down entry latency for a DRAM circuit may be n clocks.
- n 3 cycles may be required to satisfy tCKE(MIN).
- the minimum power down exit latency of a DRAM circuit may be x clocks.
- x 2 cycles may be required to satisfy tXP(MIN) and tXARD(MIN).
- DRAM operations such as precharge or activate may require a certain period of time to complete.
- the DRAM, or portion(s) thereof (e.g. bank, etc.) to which the operation is directed may be unable to perform another operation.
- a precharge operation in a bank of a DRAM circuit may require a certain period of time to complete (specified as tRP for DDR2).
- the memory controller may not necessarily be allowed to direct another operation (e.g. activate, etc.) to the same bank of the DRAM circuit.
- the period of time between the initiation of an operation and the completion of that operation may thus be a command operation period.
- the memory controller may not necessarily be allowed to direct another operation to a particular DRAM circuit or portion thereof during a command operation period of various commands or operations.
- the command operation period of a precharge operation or command may be equal to tRP.
- the command operation period of an activate command may be equal to tRCD.
- the command operation period need not be limited to a single command.
- a command operation period can also be defined for a sequence, combination, or pattern of commands.
- the power management schemes described herein thus need not be limited to a single command and associated command operation period; the schemes may equally be applied to sequences, patterns, and combinations of commands.
- a command may have a first command operation period in a DRAM circuit to which the command is directed to, and also have a second command operation period in another DRAM circuit to which the command is not directed to.
- the first and second command operation periods need not be the same.
- a command may have different command operation periods in different mappings of physical DRAM circuits to the banks of a virtual DRAM circuit, and also under different conditions.
- command operation periods may be specified in nanoseconds.
- tRP may be specified in nanoseconds, and may vary according to the speed grade of a DRAM circuit.
- tRP may be defined in JEDEC standards (e.g. currently JEDEC Standard No. 21-C for DDR2 SDRAM).
- JEDEC standards e.g. currently JEDEC Standard No. 21-C for DDR2 SDRAM.
- tRP may be measured as an integer number of clock cycles.
- the tRP may not necessarily be specified to be an exact number clock cycles.
- the minimum value of tRP may be equivalent to three clock cycles or more.
- power management schemes may be based on an interface circuit identifying at least one memory (e.g. DRAM, etc.) circuit that is not currently being accessed by the system.
- a power saving operation may be initiated in association with the at least one memory circuit.
- such power saving operation may involve a power down operation, and in particular, a precharge power down operation, using the CKE pin of the DRAM circuits (e.g. a CKE power management scheme).
- a power down operation and in particular, a precharge power down operation, using the CKE pin of the DRAM circuits (e.g. a CKE power management scheme).
- Other similar power management schemes using other power down control methods and power down modes, with different commands and alternative memory circuit technologies, may also be used.
- the presence of the scheme may be transparent to the memory controller. Accordingly, the power down entry latency and the power down exit latency may be hidden from the memory controller. In one embodiment, the power down entry and exit latencies may be hidden from the memory controller by opportunistically placing at least one first DRAM circuit into a power down mode and, if required, bringing at least one second DRAM circuit out of power down mode during a command operation period when the at least one first DRAM circuit is not being accessed by the system.
- the identification of the appropriate command operation period during which at least one first DRAM circuit in a stack may be placed in power down mode or brought out of power down mode may be based on commands directed to the first DRAM circuit (e.g. based on commands directed to itself) or on commands directed to a second DRAM circuit (e.g. based on commands directed to other DRAM circuits).
- the command operation period of the DRAM circuit may be used to hide the power down entry and/or exit latencies.
- the existing command operation periods of the physical DRAM circuits may be used to the hide the power down entry and/or exit latencies if the delays associated with one or more operations are long enough to hide the power down entry and/or exit latencies.
- the command operation period of a virtual DRAM circuit may be used to hide the power down entry and/or exit latencies by making the command operation period of the virtual DRAM circuit longer than the command operation period of the physical DRAM circuits.
- the interface circuit may simulate a plurality of physical DRAM circuits to appear as at least one virtual DRAM circuit with at least one command operation period that is different from that of the physical DRAM circuits.
- This embodiment may be used if the existing command operation periods of the physical DRAM circuits are not long enough to hide the power down entry and/or exit latencies, thus necessitating the interface circuit to increase the command operation periods by simulating a virtual DRAM circuit with at least one different (e.g. longer, etc.) command operation period from that of the physical DRAM circuits.
- Row cycle time based power management is an example of a power management scheme that uses the command operation period of DRAM circuits to hide power down entry and exit latencies.
- the interface circuit may place at least one first physical DRAM circuit into power down mode based on the commands directed to a second physical DRAM circuit.
- Power management schemes such as a row cycle time based scheme may be best suited for a many-circuit-to-one-bank configuration of DRAM circuits.
- a plurality of physical DRAM circuits may be mapped to a single bank of a larger capacity virtual DRAM circuit seen by the memory controller.
- sixteen 256Mb DDR2 physical SDRAM circuits may appear to the memory controller as a single 4Gb virtual DDR2 SDRAM circuit. Since a 4Gb DDR2 SDRAM circuit is specified by the JEDEC standards to have eight physical banks, two of the 256Mb DDR2 physical SDRAM circuits may be mapped by the interface circuit to a single bank of the virtual 4Gb DDR2 SDRAM circuit.
- bank 0 of the virtual 4Gb DDR2 SDRAM circuit may be mapped by the interface circuit to two 256Mb DDR2 physical SDRAM circuits (e.g. DRAM A and DRAM B).
- DRAM A and DRAM B 256Mb DDR2 physical SDRAM circuits
- bank 0 of the virtual 4Gb DDR2 SDRAM circuit may be mapped by the interface circuit to two 256Mb DDR2 physical SDRAM circuits (e.g. DRAM A and DRAM B).
- a first activate (e.g. page open, etc.) command to bank 0 of the 4Gb virtual DRAM, that command may be directed by the interface circuit to either DRAM A or DRAM B, but not to both.
- the memory controller may be unable to issue a second activate command to bank 0 of the 4Gb virtual DRAM until a period tRC has elapsed from the time the first activate command was issued by the memory controller.
- the command operation period of an activate command may be tRC.
- the parameter tRC may be much longer than the power down entry and exit latencies.
- the interface circuit may place DRAM B in the precharge power down mode during the activate command operation period (e.g. for period tRC).
- the first activate command is directed by the interface circuit to DRAM B, then it may place DRAM A in the precharge power down mode during the command operation period of the first activate command.
- the power saving operation may, for example, comprise operating in precharge power down mode except when refresh is required. Of course, power savings may also occur in other embodiments without such continuity.
- Row precharge time based power management is an example of a power management scheme that, in one embodiment, uses the precharge command operation period (that is the command operation period of precharge commands, tRP) of physical DRAM circuits to hide power down entry and exit latencies.
- a row precharge time based power management scheme may be implemented that uses the precharge command operation period of virtual DRAM circuits to hide power down entry and exit latencies.
- the interface circuit may place at least one DRAM circuit into power down mode based on commands directed to the same at least one DRAM circuit.
- Power management schemes such as the row precharge time based scheme may be best suited for many-circuit-to-one-bank and one-circuit-to-one-bank configurations of physical DRAM circuits.
- a row precharge time based power management scheme may be particularly efficient when the memory controller implements a closed page policy.
- a row precharge time based power management scheme may power down a physical DRAM circuit after a precharge or autoprecharge command closes an open bank. This power management scheme allows each physical DRAM circuit to enter power down mode when not in use. While the specific memory circuit technology used in this example is DDR2 and the command used here is the precharge or autoprecharge command, the scheme may be utilized in any desired context. This power management scheme uses an algorithm to determine if there is any required delay as well as the timing of the power management in terms of the command operation period.
- the interface circuit may place that DRAM circuit into precharge power down mode during the command operation period of the precharge or autoprecharge command.
- the precharge power down mode may be initiated following the precharge or autoprecharge command to the open bank in that physical DRAM circuit.
- the physical DRAM circuit may be brought out of precharge power down mode before the earliest time a subsequent activate command may arrive at the inputs of the physical DRAM circuit.
- the power down entry and power down exit latencies may be hidden from the memory controller.
- a plurality of physical DRAM circuits may appear to the memory controller as at least one larger capacity virtual DRAM circuit with a tRP(virtual) that is larger than that of the physical DRAM circuits [e.g. larger than tRP(physical)].
- the physical DRAM circuits may, through simulation, appear to the memory controller as a larger capacity virtual DRAM with tRP(virtual) equal to tRP(physical) + m, where m may be an integer multiple of the clock cycle, or may be a non-integer multiple of the clock cycle, or may be a constant or variable multiple of the clock cycle, or may be less than one clock cycle, or may be zero. Note that m may or may not be equal to j.
- the interface circuit may place a physical DRAM circuit into precharge power down mode in a subsequent clock cycle after a precharge or autoprecharge command to the open bank in the physical DRAM circuit has been received by the physical DRAM circuit. Additionally, the physical DRAM circuit may be brought out of precharge power down mode before the earliest time a subsequent activate command may arrive at the inputs of the physical DRAM circuit. Thus, the power down entry and power down exit latency may be hidden from the memory controller.
- the interface circuit may make the stack of physical DRAM circuits appear to the memory controller as at least one larger capacity virtual DRAM circuit with tRP(virtual) and tRCD(virtual) that are larger than that of the physical DRAM circuits in the stack [e.g. larger than tRP(physical) and tRCD(physical) respectively, where tRCD(physical) is the tRCD of the physical DRAM circuits].
- the stack of physical DRAM circuits may appear to the memory controller as a larger capacity virtual DRAM with tRP(virtual) and tRCD(virtual) equal to [tRP(physical) + m] and tRCD(physical) + 1] respectively.
- 1 may be an integer multiple of the clock cycle, or may be a non-integer multiple of the clock cycle, or may be constant or variable multiple of the clock cycle, or may be less than a clock cycle, or may be zero.
- I may or may not be equal to j and/or m.
- the interface circuit may use the following sequence of events to implement a row precharge time based power management scheme and also hide the power down entry and exit latencies from the memory controller.
- the interface circuit may place that physical DRAM circuit into precharge power down mode in a subsequent clock cycle after the precharge or autoprecharge command has been received by that physical DRAM circuit.
- the interface circuit may continue to keep the physical DRAM circuit in the precharge power down mode until the interface circuit receives a subsequent activate command to that physical DRAM circuit.
- the interface circuit may then bring the physical DRAM circuit out of precharge power down mode by asserting the CKE input of the physical DRAM in a following clock cycle.
- the interface circuit may also delay the address and control signals associated with the activate command for a minimum of x clock cycles before sending the signals associated with the activate command to the physical DRAM circuit.
- the row precharge time based power management scheme described above is suitable for many-circuit-to-one-bank and one-circuit-to-one-bank configurations since there is a guaranteed minimum period of time (e.g. a keep-out period) of at least tRP(physical) after a precharge command to a physical DRAM circuit during which the memory controller will not issue a subsequent activate command to the same physical DRAM circuit.
- the command operation period of a precharge command applies to the entire DRAM circuit.
- a precharge command to a first portion(s) e.g.
- the command operation period of a precharge command applies only to a portion of the physical DRAM circuit.
- four 512Mb physical DDR2 SDRAM circuits through simulation may appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit with eight banks. Therefore, the interface circuit may map two banks of the 2Gb virtual DRAM circuit to each 512Mb physical DRAM circuit.
- banks 0 and 1 of the 2Gb virtual DRAM circuit may be mapped to a single 512Mb physical DRAM circuit (e.g. DRAM C).
- bank 0 of the virtual DRAM circuit may have an open page while bank 1 of the virtual DRAM circuit may have no open page.
- the interface circuit may signal DRAM C to enter the precharge power down mode after the precharge or autoprecharge command has been received by DRAM C.
- the interface circuit may accomplish this by de-asserting the CKE input of DRAM C during a clock cycle subsequent to the clock cycle in which DRAM C received the precharge or autoprecharge command.
- the memory controller may issue an activate command to the bank 1 of the 2Gb virtual DRAM circuit on the next clock cycle after it issued the precharge command to bank 0 of the virtual DRAM circuit.
- DRAM C may have just entered a power down mode and may need to exit power down immediately.
- the command operation period of the precharge command to bank 0 of the 2Gb virtual DRAM circuit may not be sufficiently long enough to hide the power down entry latency of DRAM C even if the command operation period of the activate command to bank 1 of the 2Gb virtual DRAM circuit is long enough to hide the power down exit latency of DRAM C, which would then cause the simulated 2Gb virtual DRAM circuit to not be in compliance with the DDR2 protocol. It is therefore difficult, in a simple fashion, to hide the power management latency during the command operation period of precharge commands in a one-circuit-to-many-bank configuration.
- Row activate time based power management is a power management scheme that, in one embodiment, may use the activate command operation period (that is the command operation period of activate commands) of DRAM circuits to hide power down entry latency and power down exit latency.
- a row activate time based power management scheme may be used for one-circuit-to-many-bank configurations.
- the power down entry latency of a physical DRAM circuit may be hidden behind the command operation period of an activate command directed to a different physical DRAM circuit.
- the power down exit latency of a physical DRAM circuit may be hidden behind the command operation period of an activate command directed to itself.
- the activate command operation periods that are used to hide power down entry and exit latencies may be tRRD and tRCD respectively.
- a row activate time based power management scheme may be used for many-circuit-to-one-bank and one-circuit-to-one-bank configurations.
- the power down entry and exit latencies of a physical DRAM circuit may be hidden behind the command operation period of an activate command directed to itself.
- the command operation period of an activate command may be tRCD.
- a row activate time based power management scheme may place a first DRAM circuit that has no open banks into a power down mode when an activate command is issued to a second DRAM circuit if the first and second DRAM circuits are part of a plurality of physical DRAM circuits that appear as a single virtual DRAM circuit to the memory controller.
- This power management scheme may allow each DRAM circuit to enter power down mode when not in use.
- This embodiment may be used in one-circuit-to-many-bank configurations of DRAM circuits.
- the scheme may be utilized in any desired context
- the scheme uses an algorithm to determine if there is any required delay as well as the timing of the power management in terms of the command operation period.
- a plurality of banks of a virtual DRAM circuit may be mapped to a single physical DRAM circuit.
- four 512Mb DDR2 SDRAM circuits through simulation may appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit with eight banks. Therefore, the interface circuit may map two banks of the 2Gb virtual DRAM circuit to each 512Mb physical DRAM circuit.
- banks 0 and 1 of the 2Gb virtual DRAM circuit may be mapped to a first 512Mb physical DRAM circuit (e.g. DRAM P).
- banks 2 and 3 of the 2Gb virtual DRAM circuit may be mapped to a second 512Mb physical DRAM circuit (e.g.
- banks 4 and 5 of the 2Gb virtual DRAM circuit may be mapped to a third 512Mb physical DRAM circuit (e.g. DRAM R), and banks 6 and 7 of the 2Gb virtual DRAM circuit may be mapped to a fourth 512Mb physical DRAM circuit (e.g. DRAM S).
- a third 512Mb physical DRAM circuit e.g. DRAM R
- banks 6 and 7 of the 2Gb virtual DRAM circuit may be mapped to a fourth 512Mb physical DRAM circuit (e.g. DRAM S).
- bank 0 of the virtual DRAM circuit may have an open page while all the other banks of the virtual DRAM circuit may have no open pages.
- the interface circuit may not be able to place DRAM P in precharge power down mode after the precharge or autoprecharge command has been received by DRAM P. This may be because the memory controller may issue an activate command to bank 1 of the 2Gb virtual DRAM circuit in the very next cycle.
- a row precharge time based power management scheme may not be used in a one-circuit-to-many-bank configuration since there is no guaranteed keep-out period after a precharge or autoprecharge command to a physical DRAM circuit.
- the memory controller may ensure a minimum period of time, tRRD(MIN), between activate commands to the single 2Gb virtual DRAM circuit.
- tRRD(MIN) a minimum period of time between activate commands to the single 2Gb virtual DRAM circuit.
- the active bank N to active bank M command period tRRD may be variable with a minimum value of tRRD(MIN) (e.g. 2 clock cycles, etc.).
- the parameter tRRD may be specified in nanoseconds and may be defined in JEDEC Standard No. 21-C.
- tRRD may be measured as an integer number of clock cycles.
- tRRD may not be specified to be an exact number of clock cycles.
- the tRRD parameter may mean an activate command to a second bank B of a DRAM circuit (either physical DRAM circuit or virtual DRAM circuit) may not be able to follow an activate command to a first bank A of the same DRAM circuit in less than tRRD clock cycles.
- a first number of physical DRAM circuits that have no open pages may be placed in power down mode when an activate command is issued to another physical DRAM circuit that through simulation is part of the same virtual DRAM circuit.
- the interface circuit may keep DRAM P in precharge standby mode until the memory controller issues an activate command to one of DRAM Q, DRAM R, and DRAM S.
- the interface circuit may then immediately place DRAM P into precharge power down mode if tRRD(MIN) ⁇ n.
- the additional typical one clock cycle delay through a JEDEC register helps to hide the power down entry latency if tRRD(MIN) by itself is not sufficiently long to hide the power down entry latency.
- a row activate time power management scheme require I to be larger than or equal to x (where x is the power down exit latency) so that when the memory controller issues an activate command to a bank of the virtual DRAM circuit, and if the corresponding physical DRAM circuit is in precharge power down mode, the interface circuit can hide the power down exit latency of the physical DRAM circuit behind the row activate time tRCD of the virtual DRAM circuit.
- the interface circuit when the interface circuit receives an activate command that is directed to a DRAM circuit that is in precharge power down mode, it will delay the activate command by at least x clock cycles while simultaneously bringing the DRAM circuit out of power down mode. Since 1 ⁇ x, the command operation period of the activate command may overlap the power down exit latency, thus allowing the interface circuit to hide the power down exit latency behind the row activate time.
- DRAM P may be placed into precharge power down mode after the memory controller issued a precharge or autoprecharge command to the last open page in DRAM P and then issued an activate command to one of DRAM Q, DRAM R, and DRAM S.
- the interface circuit may immediately bring DRAM P out of precharge power down mode while delaying the activate command to DRAM P by at least x clock cycles. Since 1 ⁇ x, DRAM P may be ready to receive the delayed activate command when the interface circuit sends the activate command to DRAM P.
- each physical DRAM circuit is mapped to one bank (or portion(s) thereof) of a larger capacity virtual DRAM circuit, it may be certain that no command may be issued to a physical DRAM circuit for a minimum of tRCD(viriual) clock cycles after an activate command has been issued to the physical DRAM circuit.
- the interface circuit may place the physical DRAM circuit into active power down mode on the clock cycle after the activate command has been received by the physical DRAM circuit and bring the physical DRAM circuit out of active power down mode before the earliest time a subsequent read or write command may arrive at the inputs of the physical DRAM circuit.
- the power down entry and power down exit latencies may be hidden from the memory controller.
- the command and power down mode used for the activate command based power-management scheme may be the activate command and precharge or active power down modes, but other similar power down schemes may use different power down modes, with different commands, and indeed even alternative DRAM circuit technologies may be used.
- Refresh cycle time based power management is a power management scheme that uses the refresh command operation period (that is the command operation period of refresh commands) of virtual DRAM circuits to hide power down entry and exit latencies.
- the interface circuit places at least one physical DRAM circuit into power down mode based on commands directed to a different physical DRAM circuit.
- a refresh cycle time based power management scheme that uses the command operation period of virtual DRAM circuits may be used for many-circuit-to-one-bank, one-circuit-to-one-bank, and one-circuit-to-many-bank configurations.
- Refresh commands to a DRAM circuit may have a command operation period that is specified by the refresh cycle time, tRFC.
- the minimum and maximum values of the refresh cycle time, tRFC may be specified in nanoseconds and may further be defined in the JEDEC standards (e.g. JEDEC Standard No. 21-C for DDR2 SDRAM, etc.).
- the minimum value of tRFC e.g. tRFC(MIN)] may vary as a function of the capacity of the DRAM circuit. Larger capacity DRAM circuits may have larger values of tRFC(MIN) than smaller capacity DRAM circuits.
- the parameter tRFC may be measured as an integer number of clock cycles, although optionally the tRFC may not be specified to be an exact number clock cycles.
- a memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits.
- a minimum time e.g. denoted by tRFC
- tRFC refresh cycle time
- the interface circuit When the interface circuit receives a refresh command from the memory controller, it may refresh the smaller capacity physical DRAM circuits within the span of time specified by the tRFC associated with the larger capacity virtual DRAM circuit Since the tRFC of the virtual DRAM circuit may be larger than that of the associated physical DRAM circuits, it may not be necessary to issue refresh commands to all of the physical DRAM circuits simultaneously. Refresh commands may be issued separately to individual physical DRAM circuits or may be issued to groups of physical DRAM circuits, provided that the tRFC requirement of the physical DRAM circuits is satisfied by the time the tRFC of the virtual DRAM circuit has elapsed.
- the interface circuit may place a physical DRAM circuit into power down mode for some period of the tRFC of the virtual DRAM circuit when other physical DRAM circuits are being refreshed.
- four 512Mb physical DRAM circuits e.g. DRAM W, DRAM X, DRAM Y, DRAM Z
- the memory controller issues a refresh command to the 2Gb virtual DRAM circuit, it may not issue another command to the 2Gb virtual DRAM circuit at least until a period of time, tRFC(MIN)(virtual), has elapsed.
- the interface circuit may stagger the refresh commands to DRAM W, DRAM X, DRAM Y, DRAM Z such that that total time needed to refresh all the four physical DRAM circuits is less than or equal to the tRFC(MIN)(virtual) of the virtual DRAM circuit.
- the interface circuit may place each of the physical DRAM circuits into precharge power down mode either before or after the respective refresh operations.
- the interface circuit may place DRAM Y and DRAM Z into power down mode while issuing refresh commands to DRAM W and DRAM X.
- the interface circuit may bring DRAM Y and DRAM Z out of power down mode and issue refresh commands to both of them.
- the interface circuit may place both of them in a power down mode.
- the interface circuit may optionally bring DRAM W and DRAM X out of power down mode such that when DRAM Y and DRAM Z have finished their refresh operations, all four DRAM circuits are in the precharge standby state and ready to receive the next command from the memory controller.
- the memory controller may place DRAM W, DRAM X, DRAM Y, and DRAM Z into precharge power down mode after the respective refresh operations if the power down exit latency of the DRAM circuits may be hidden behind the command operation period of the activate command of the virtual 2Gb DRAM circuit.
- FIG. 24 shows a memory system 2400 comprising FB-DIMM modules using DRAM circuits with AMB chips, in accordance with another embodiment.
- the memory system 2400 may be implemented in the context of the architecture and environment of FIGS. 19-23 .
- the memory system 2400 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- the memory circuit power management scheme may be associated with an FB-DIMM memory system that uses DDR2 SDRAM circuits.
- DDR3 SDRAM may provide similar control inputs and modes for power management and the example described in this section can be used with other types of buffering schemes and other memory circuit technologies. Therefore, the description of the specific example should not be construed as limiting in any manner.
- a memory controller 2402 may place commands and write data into frames and send the frames to interface circuits (e.g. AMB chip 2404, etc.). Further, in the FB-DIMM memory system 2400, there may be one AMB chip 2404 on each of a plurality of DIMMs 2406A-C. For the memory controller 2402 to address and control DRAM circuits, it may issue commands that are placed into frames.
- interface circuits e.g. AMB chip 2404, etc.
- the command frames or command and data frames may then be sent by the memory controller 2402 to the nearest AMB chip 2404 through a dedicated outbound path, which may be denoted as a southbound lane.
- the AMB chip 2404 closest to the memory controller 2402 may then relay the frames to the next AMB chip 2404 via its own southbound lane. In this manner, the frames may be relayed to each AMB chip 2404 in the FB-DIMM memory channel.
- each AMB chip 2404 may partially decode the frames to determine if a given frame contains commands targeted to the DRAM circuits on that the associated DIMM 2406A-C. If a frame contains a read command addressed to a set of DRAM circuits on a given DIMM 2406A-C, the AMB chip 2404 on the associated DIMM 2406A-C accesses DRAM circuits 2408 to retrieve the requested data. The data may be placed into frames and returned to the memory controller 2402 through a similar frame relay process on the northbound lanes as that described for the southbound lanes.
- variable-latency scheduling Two classes of scheduling algorithms may be utilized for AMB chips 2404 to return data frames to the memory controller 2402, including variable-latency scheduling and fixed-latency scheduling.
- variable latency scheduling after a read command is issued to the DRAM circuits 2408, the DRAM circuits 2408 return data to the AMB chip 2404.
- the AMB chip 2404 then constructs a data frame, and as soon as it can, places the data frame onto the northbound lanes to return the data to the memory controller 2402.
- the variable latency scheduling algorithm may ensure the shortest latency for any given request in the FB-DIMM channel.
- DRAM circuits 2408 located on the DIMM e.g. the DIMM 2406A, etc.
- DRAM circuits 2408 located on the DIMM e.g. the DIMM 2406C, etc.
- the memory controller 2402 may be sophisticated, such that command frames may be scheduled appropriately to ensure that data return frames do not collide on the northbound lanes.
- variable latency scheduling may be easily performed since there may be limited situations where data frames may collide on the northbound lanes.
- variable latency scheduling may be far more difficult if the memory controller 2402 has to be designed to account for situations where the FB-DIMM channel can be configured with one DIMM, eight DIMMs, or any other number of DIMMs. Consequently, the fixed latency scheduling algorithm may be utilized in an FB-DIMM memory system 2400 to simplify memory controller design.
- every DIMM 2406A-C is configured to provide equal access latency from the perspective of the memory controller 2402.
- the access latency of every DIMM 2406A-C may be equalized to the access latency of the slowest-responding DIMM (e.g. the DIMM 2406C, etc.).
- the AMB chips 2404 that are not the slowest responding AMB chip 2404 e.g. the AMB chip 2404 of the DIMM 2406C, etc.
- AMB chips 2404 may then hold the data for a number of cycles before this data is returned to the memory controller 2402 via the northbound lanes.
- the data return delay may be different for each AMB chip 2404 in the FB-DIMM channel.
- the data return delay value may depend on the distance of the DIMM 2406A-C from the memory controller 2402 as well as the access latency of the DRAM circuits 2408 (e.g. the respective delay values may be computed for each AMB chip 2404 in a given FB-DIMM channel, and programmed into the appropriate AMB chip 2404.
- the AMB chips 2404 may use the programmed delay values to perform differing classes of memory circuit power management algorithms.
- the large delay value ensures that the AMB chip 2404 can place DRAM circuits 2408 into power down modes and move them to active modes as needed.
- the AMB chip 2404 can place DRAM circuits 2408 into power down modes selectively after certain commands, as long as these commands provide the required command operation periods to hide the minimum power down entry latency. For example, the AMB chip 2404 can choose to place the DRAM circuits 2408 into a power down mode after a refresh command, and the DRAM circuits 2408 can be kept in the power down mode until a command is issued by the memory controller 2402 to access the specific set of DRAM circuits 2408. Finally, in cases where the programmed data delay is smaller than x, the AMB chip 2404 may choose to implement power management algorithms to a selected subset of DRAM circuits 2408.
- CKE power management there are various optional characteristics and benefits available when using CKE power management in FB-DIMMs.
- the schemes described are not limited to be used by themselves. For example, it is possible to use a trigger that is more complex than a single command in order to initiate power management.
- power management schemes may be initiated by the detection of combinations of commands, or patterns of commands, or by the detection of an absence of commands for a certain period of time, or by any other mechanism.
- Power management schemes may also use multiple triggers including forming a class of power management schemes using multiple commands or multiple combinations of commands. Power management schemes may also be used in combination. Thus, for example, a row precharge time based power management scheme may be used in combination with a row activate time command based power management scheme.
- An interface circuit may optionally be a part of the stack of DRAM circuits. Of course, however, the interface circuit may also be separate from the stack of DRAM circuits. In addition, the interface circuit may be physically located anywhere in the stack of DRAM circuits, where such interface circuit electrically sits between the electronic system and the stack of DRAM circuits.
- the interface circuit may be split into several chips that in combination perform the power management functions described.
- the register chip may optionally perform the signaling to the DRAM circuits.
- the register chip may further be connected electrically to a number of interface circuits that sit electrically between the register chip and a stack of DRAM circuits.
- the interface circuits in the stacks of DRAM circuits may then perform the required delay if it is needed.
- a plurality of register chips and buffer chips may sit electrically between the stacks of DRAM circuits and the system, where both the register chips and the buffer chips perform the signaling to the DRAM circuits as well as delaying the address, control, and data signals to the DRAM circuits.
- each stack may be a single memory circuit.
- the power management schemes described for the DRAM circuits may also be extended to the interface circuits.
- the interface circuits have information that a signal, bus, or other connection will not be used for a period of time. During this period of time, the interface circuits may perform power management on themselves, on other interface circuits, or cooperatively. Such power management may, for example, use an intelligent signaling mechanism (e.g. encoded signals, sideband signals, etc.) between interface circuits (e.g. register chips, buffer chips, AMB chips, etc.).
- an intelligent signaling mechanism e.g. encoded signals, sideband signals, etc.
- the simulated DRAM circuit including any power management scheme or CAS latency simulation or any other simulation behaves according to a desired DRAM standard or other design specification.
- a behavior of many DRAM circuits is specified by the JEDEC standards and it may be desirable, in some embodiments, to exactly simulate a particular JEDEC standard DRAM.
- the JEDEC standard may define control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals.
- the JEDEC specification for a DDR2 SDRAM may include JESD79-2B (and any associated revisions).
- an algorithm may be used. Such algorithm may check, using a set of software verification tools for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as a desired standard or other design specification. This formal verification may be feasible because the DRAM protocol described in a DRAM standard may, in various embodiments, be limited to a few protocol commands (e.g. approximately 15 protocol commands in the case of the JEDEC DDR2 specification, for example).
- Examples of the aforementioned software verification tools include MAGELLAN supplied by SYNOPSYS, or other software verification tools, such as INCISIVE supplied by CADENCE, verification tools supplied by JASPER, VERIX supplied by REAL INTENT, 0-IN supplied by MENTOR CORPORATION, etc. These software verification tools may use written assertions that correspond to the rules established by the DRAM protocol and specification.
- the written assertions may be further included in code that forms the logic description for the interface circuit.
- a proof may be constructed that determines whether the desired design requirements are met. In this way, one may test various embodiments for compliance with a standard, multiple standards, or other design specification.
- assertions may be written that there are no conflicts on the address bus, command bus or between any clock, control, enable, reset or other signals necessary to operate or associated with the interface circuits and/or DRAM circuits.
- the aforementioned algorithm may allow a designer to prove that the simulated DRAM circuit exactly meets the required standard or other design specification. If, for example, an address mapping that uses a common bus for data and a common bus for address results in a control and clock bus that does not meet a required specification, alternative designs for the interface circuit with other bus arrangements or alternative designs for the interconnect between the components of the interface circuit may be used and tested for compliance with the desired standard or other design specification.
- FIG. 25 illustrates a multiple memory circuit framework 2500, in accordance with one embodiment. As shown, included are an interface circuit 2502, a plurality of memory circuits 2504A, 2504B, 2504N, and a system 2506. In the context of the present description, such memory circuits 2504A, 2504B, 2504N may include any circuit capable of serving as memory.
- At least one of the memory circuits 2504A, 2504B, 2504N may include a monolithic memory circuit, a semiconductor die, a chip, a packaged memory circuit, or any other type of tangible memory circuit.
- the memory circuits 2504A, 2504B, 2504N may take the form of a dynamic random access memory (DRAM) circuit.
- DRAM dynamic random access memory
- Such DRAM may take any form including, but not limited to, synchronous DRAM (SDRAM), double data rate synchronous DRAM (DDR SDRAM, DDR2 SDRAM, DDR3 SDRAM, etc.), graphics double data rate synchronous DRAM (GDDR SDRAM, GDDR2 SDRAM, GDDR3 SDRAM, etc.), quad data rate DRAM (QDR DRAM), RAMBUS XDR DRAM (XDR DRAM), fast page mode DRAM (FPM DRAM), video DRAM (VDRAM), extended data out DRAM (EDO DRAM), burst EDO RAM (BEDO DRAM), multibank DRAM (MDRAM), synchronous graphics RAM (SGRAM), and/or any other type of DRAM.
- SDRAM synchronous DRAM
- DDR SDRAM double data rate synchronous DRAM
- DDR2 SDRAM DDR2 SDRAM
- DDR3 SDRAM graphics double data rate synchronous DRAM
- QDR DRAM quad data rate DRAM
- RAMBUS XDR DRAM XDR DRAM
- FPM DRAM
- At least one of the memory circuits 2504A, 2504B, 2504N may include magnetic random access memory (MRAM), intelligent random access memory (IRAM), distributed network architecture (DNA) memory, window random access memory (WRAM), flash memory (e.g.
- MRAM magnetic random access memory
- IRAM intelligent random access memory
- DRAM distributed network architecture memory
- WRAM window random access memory
- flash memory e.g.
- NAND NAND, NOR, etc.
- pseudostatic random access memory PSRAM
- LP-SDRAM Low-Power Synchronous Dynamic Random Access Memory
- PFRAM Polymer Ferroelectric RAM
- OFUM OVONICS Unified Memory
- PCM Phase-change Memory
- PRAM Phase-change Random Access Memory
- FeRAM Ferroelectric RAM
- R-RAM or RRAM Resistance RAM
- the memory circuits 2504A, 2504B, 2504N may or may not be positioned on at least one dual in-line memory module (DIMM) (not shown).
- the DIMM may include a registered DIMM (R-DIMM), a small outline-DIMM (SO-DIMM), a fully buffered DIMM (FB-DIMM), an unbuffered DIMM (UDIMM), single inline memory module (SIMM), a MiniDIMM, a very low profile (VLP) R-DIMM, etc.
- the memory circuits 2504A, 2504B, 2504N may or may not be positioned on any type of material forming a substrate, card, module, sheet, fabric, board, carrier or other any other type of solid or flexible entity, form, or object.
- the memory circuits 2504A, 2504B, 2504N may or may not be positioned in or on any desired entity, form, or object for packaging purposes.
- the memory circuits 2504A, 2504B, 2504N may or may not be organized, either as a group (or as groups) collectively, or individually, into one or more portion(s).
- portion(s) e.g.
- a memory circuit(s) shall refer to any physical, logical or electrical arrangement(s), partition(s), subdivision(s) (e.g. banks, sub-banks, ranks, sub-ranks, rows, columns, pages, etc.), or any other portion(s), for that matter.
- the system 2506 may include any system capable of requesting and/or initiating a process that results in an access of the memory circuits 2504A, 2504B, 2504N. As an option, the system 2506 may accomplish this utilizing a memory controller (not shown), or any other desired mechanism.
- a memory controller not shown
- such system 2506 may include a system in the form of a desktop computer, a lap-top computer, a server, a storage system, a networking system, a workstation, a personal digital assistant (PDA), a mobile phone, a television, a computer peripheral (e.g. printer, etc.), a consumer electronics system, a communication system, and/or any other software and/or hardware, for that matter.
- PDA personal digital assistant
- the interface circuit 2502 may, in the context of the present description, refer to any circuit capable of communicating (e.g. interfacing, buffering, etc.) with the memory circuits 2504A, 2504B, 2504N and the system 2506.
- the interface circuit 2502 may, in the context of different embodiments, include a circuit capable of directly (e.g. via wire, bus, connector, and/or any other direct communication medium, etc.) and/or indirectly (e.g. via wireless, optical, capacitive, electric field, magnetic field, electromagnetic field, and/or any other indirect communication medium, etc.) communicating with the memory circuits 2504A, 2504B, 2504N and the system 2506.
- the communication may use a direct connection (e.g.
- point-to-point single-drop bus, multi-drop bus, serial bus, parallel bus, link, and/or any other direct connection, etc.
- indirect connection e.g. through intermediate circuits, intermediate logic, an intermediate bus or busses, and/or any other indirect connection, etc.
- the interface circuit 2502 may include one or more circuits, such as a buffer (e.g. buffer chip, multiplexer/de-multiplexer chip, synchronous multiplexer/de-multiplexer chip, etc.), register (e.g. register chip, data register chip, address/control register chip, etc.), advanced memory buffer (AMB) (e.g. AMB chip, etc.), a component positioned on at least one DIMM, etc.
- a buffer e.g. buffer chip, multiplexer/de-multiplexer chip, synchronous multiplexer/de-multiplexer chip, etc.
- register e.g. register chip, data register chip, address/control register chip, etc.
- AMB advanced memory buffer
- a component positioned on at least one DIMM etc.
- a buffer chip may be used to interface bidirectional data signals, and may or may not use a clock to re-time or re-synchronize signals in a well known manner.
- a bidirectional signal is a well known use of a single connection to transmit data in two directions.
- a data register chip may be a register chip that also interfaces bidirectional data signals.
- a multiplexer/demultiplexer chip is a well known circuit that may interface a first number of bidirectional signals to a second number of bidirectional signals.
- a synchronous multiplexer/demultiplexer chip may additionally use a clock to re-time or re-synchronize the first or second number of signals.
- a register chip may be used to interface and optionally re-time or re-synchronize address and control signals.
- address/control register chip may be used to distinguish a register chip that only interfaces address and control signals from a data register chip, which may also interface data signals.
- the register may, in various embodiments, include a JEDEC Solid State Technology Association (known as JEDEC) standard register (a JEDEC register), a register with forwarding, storing, and/or buffering capabilities, etc.
- JEDEC Joint Electronic Device
- the registers, buffers, and/or any other interface circuit(s) 2502 may be intelligent, that is, include logic that are capable of one or more functions such as gathering and/or storing information; inferring, predicting, and/or storing state and/or status; performing logical decisions; and/or performing operations on input signals, etc.
- the interface circuit 2502 may optionally be manufactured in monolithic form, packaged form, printed form, and/or any other manufactured form of circuit, for that matter.
- a plurality of the aforementioned interface circuits 2502 may serve, in combination, to interface the memory circuits 2504A, 2504B, 2504N and the system 2506.
- one, two, three, four, or more interface circuits 2502 may be utilized for such interfacing purposes.
- multiple interface circuits 2502 may be relatively configured or connected in any desired manner.
- the interface circuits 2502 may be configured or connected in parallel, serially, or in various combinations thereof.
- the multiple interface circuits 2502 may use direct connections to each other, indirect connections to each other, or even a combination thereof.
- any number of the interface circuits 2502 may be allocated to any allocated to any number of the memory circuits 2504A, 2504B, 2504N.
- each of the plurality of interface circuits 2502 may be the same or different. Even still, the interface circuits 2502 may share the same or similar interface tasks and/or perform different interface tasks.
- memory circuits 2504A, 2504B, 2504N, interface circuit 2502, and system 2506 are shown to be separate parts, it is contemplated that any of such parts (or portion(s) thereof) may be integrated in any desired manner.
- such optional integration may involve simply packaging such parts together (e.g. stacking the parts to form a stack of DRAM circuits, a DRAM stack, a plurality of DRAM stacks, a hardware stack, where a stack may refer to any bundle, collection, or grouping of parts and/or circuits, etc.) and/or integrating them monolithically.
- At least one interface circuit 2502 may be packaged with at least one of the memory circuits 2504A, 2504B, 2504N.
- a DRAM stack may or may not include at least one interface circuit (or portion(s) thereof).
- different numbers of the interface circuit 2502 (or portion(s) thereof) may be packaged together. Such different packaging arrangements, when employed, may optionally improve the utilization of a monolithic silicon implementation, for example.
- the interface circuit 2502 may be capable of various functionality, in the context of different embodiments.
- the interface circuit 2502 may interface a plurality of signals 2508 that are connected between the memory circuits 2504A, 2504B, 2504N and the system 2506.
- the signals 2508 may, for example, include address signals, data signals, control signals, enable signals, clock signals, reset signals, or any other signal used to operate or associated with the memory circuits, system, or interface circuit(s), etc.
- the signals may be those that: use a direct connection, use an indirect connection, use a dedicated connection, may be encoded across several connections, and/or may be otherwise encoded (e.g. time-multiplexed, etc.) across one or more connections.
- the interfaced signals 2508 may represent all of the signals that are connected between the memory circuits 2504A, 2504B, 2504N and the system 2506. In other aspects, at least a portion of signals 2510 may use direct connections between the memory circuits 2504A, 2504B, 2504N and the system 2506.
- the signals 2510 may, for example, include address signals, data signals, control signals, enable signals, clock signals, reset signals, or any other signal used to operate or associated with the memory circuits, system, or interface circuit(s), etc.
- the signals may be those that: use a direct connection, use an indirect connection, use a dedicated connection, may be encoded across several connections, and/or may be otherwise encoded (e.g.
- the number of interfaced signals 2508 may vary such that the interfaced signals 2508 may include at least a majority of the total number of signal connections between the memory circuits 2504A, 2504B, 2504N and the system 2506 (e.g. L > M, with L and M as shown in FIG. 25 ). In other embodiments, L may be less than or equal to M. In still other embodiments L and/or M may be zero.
- the interface circuit 2502 and/or any component of the system 2506 may or may not be operable to communicate with the memory circuits 2504A, 2504B, 2504N for simulating at least one memory circuit.
- the memory circuits 2504A, 2504B, 2504N shall hereafter be referred to, where appropriate for clarification purposes, as the "physical" memory circuits or memory circuits, but are not limited to be so.
- the physical memory circuits may include a single physical memory circuit.
- the at least one simulated memory circuit shall hereafter be referred to, where appropriate for clarification purposes, as the at least one "virtual" memory circuit.
- any property or aspect of such a physical memory circuit shall be referred to, where appropriate for clarification purposes, as a physical aspect (e.g. physical bank, physical portion, physical timing parameter, etc.).
- a physical aspect e.g. physical bank, physical portion, physical timing parameter, etc.
- a virtual aspect e.g. virtual bank, virtual portion, virtual timing parameter, etc.
- the term simulate or simulation may refer to any simulating, emulating, transforming, disguising modifying, changing, altering, shaping, converting, etc., of at least one aspect of the memory circuits.
- such aspect may include, for example, a number, a signal, a capacity, a portion (e.g. bank, partition, etc.), an organization (e.g. bank organization, etc.), a mapping (e.g. address mapping, etc.), a timing, a latency, a design parameter, a logical interface, a control system, a property, a behavior, and/or any other aspect, for that matter.
- any of the previous aspects or any other aspect, for that matter may be power-related, meaning that such power-related aspect, at least in part, directly or indirectly affects power.
- the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner. For instance, in the context of electrical simulation, a number of pins, wires, signals, etc. may be simulated. In the context of logical simulation, a particular function or behavior may be simulated. In the context of protocol, a particular protocol (e.g. DDR3, etc.) may be simulated. Further, in the context of protocol, the simulation may effect conversion between different protocols (e.g. DDR2 and DDR3) or may effect conversion between different versions of the same protocol (e.g. conversion of 4-4-4 DDR2 to 6-6-6 DDR2).
- the aforementioned virtual aspect may be simulated (e.g. simulate a virtual aspect, the simulation of a virtual aspect, a simulated virtual aspect etc.).
- map, mapping, mapped, etc. refer to the link or connection from the physical aspects to the virtual aspects (e.g. map a physical aspect to a virtual aspect, mapping a physical aspect to a virtual aspect, a physical aspect mapped to a virtual aspect etc.). It should be noted that any use of such mapping or anything equivalent thereto is deemed to fall within the scope of the previously defined simulate or simulation term.
- FIG. 26 shows an exemplary embodiment of an interface circuit that is operable to interface memory circuits 2602A-D and a system 2604.
- the interface circuit includes a register 2606 and a buffer 2608.
- Address and control signals 2620 from the system 2604 are connected to the register 2606, while data signals 2630 from the system 2604 are connected to the buffer 2608.
- the register 2606 drives address and control signals 2640 to the memory circuits 2602A-D and optionally drives address and control signals 2650 to the buffer 2608.
- Data signals 2660 of the memory circuits 2602A-D are connected to the buffer 2608.
- FIG. 27 shows an exemplary embodiment of an interface circuit that is operable to interface memory circuits 2702A-D and a system 2704.
- the interface circuit includes a register 2706 and a buffer 2708.
- Address and control signals 2720 from the system 2704 are connected to the register 2706, while data signals 2730 from the system 2704 are connected to the buffer 2708.
- the register 2706 drives address and control signals 2740 to the buffer 2708, and optionally drives control signals 2750 to the memory circuits 2702A-D.
- the buffer 2708 drives address and control signals 2760.
- Data signals 2770 of the memory circuits 2704A-D are connected to the buffer 2708.
- FIG. 28 shows an exemplary embodiment of an interface circuit that is operable to interface memory circuits 2802A-D and a system 2804.
- the interface circuit includes an advanced memory buffer (AMB) 2806 and a buffer 2808.
- Address, control, and data signals 2820 from the system 2804 are connected to the AMB 2806.
- the AMB 2806 drives address and control signals 2830 to the buffer 2808 and optionally drives control signals 2840 to the memory circuits 2802A-D.
- the buffer 2808 drives address and control signals 2850.
- Data signals 2860 of the memory circuits 2802A-D are connected to the buffer 2808.
- Data signals 2870 of the buffer 2808 are connected to the AMB 2806.
- FIG. 29 shows an exemplary embodiment of an interface circuit that is operable to interface memory circuits 2902A-D and a system 2904.
- the interface circuit includes an AMB 2906, a register 2908, and a buffer 2910.
- Address, control, and data signals 2920 from the system 2904 are connected to the AMB 2906.
- the AMB 2906 drives address and control signals 2930 to the register 2908.
- the register drives address and control signals 2940 to the memory circuits 2902A-D. It also optionally drives control signals 2950 to the buffer 510.
- Data signals 2960 from the memory circuits 2902A-D are connected to the buffer 2910.
- Data signals 2970 of the buffer 2910 are connected to the AMB 2906.
- FIG. 30 shows an exemplary embodiment of an interface circuit that is operable to interface memory circuits 3002A-D and a system 3004.
- the interface circuit includes an AMB 3006 and a buffer 3008.
- Address, control, and data signals 3020 from the system 3004 are connected to the AMB 3006.
- the AMB 3006 drives address and control signals 3030 to the memory circuits 3002A-D as well as control signals 3040 to the buffer 3008.
- Data signals 3050 from the memory circuits 3002A-D are connected to the buffer 3008.
- Data signals 3060 are connected between the buffer 3008 and the AMB 3006.
- registers register chip, address/control register chip, data register chip, JEDEC register, etc.
- buffers e.g. buffer chip, multiplexer/de-multiplexer chip, synchronous multiplexer/de-multiplexer chip and/or other intelligent interface circuits
- AMBs e.g. AMB chip, etc.
- these register(s), buffer(s), AMB(s) may be utilized alone and/or integrated in groups and/or integrated with or without the memory circuits.
- the electrical connections between the buffer(s), the register(s), the AMB(s) and the memory circuits may be configured in any desired manner.
- address, control (e.g. command, etc.), and clock signals may be common to all memory circuits (e.g. using one common bus).
- data signals may be wired as one common bus, several busses or as an individual bus to each memory circuit.
- the memory circuits may have one common address, control and clock bus with individual data busses.
- memory circuits may have one, two (or more) address, control and clock busses along with one, two (or more) data busses.
- the memory circuits may have one address, control and clock bus together with two data busses (e.g. the number of address, control, clock and data busses may be different, etc.).
- the memory circuits may have one common address, control and clock bus and one common data bus. It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized.
- the interface circuit(s) may be connected to 1, 2, 4, 8 or more memory circuits. In alternate embodiments, to permit data integrity storage or for other reasons, the interface circuit(s) may be connected to an odd number of memory circuits. Additionally, the memory circuits may be arranged in a single stack. Of course, however, the memory circuits may also be arranged in a plurality of stacks or in any other fashion.
- DRAM e.g. DDR2 SDRAM
- DRAM e.g. DDR2 SDRAM
- portions e.g. ranks, sub-ranks, banks, sub-banks, etc.
- operations e.g. precharge, activate, read, write, refresh, etc.
- parallel e.g. simultaneously, concurrently, overlapping, etc.
- DRAM e.g. DDR2 SDRAM
- JEDEC JEDEC standards and specifications describe how DRAM (e.g. DDR2 SDRAM) circuits are composed and perform operations in response to commands.
- a 512Mb DDR2 SDRAM circuit that meets JEDEC specifications may be composed of four portions (e.g.
- a 2Gb DDR2 SDRAM circuit that is compliant with JEDEC specifications may be composed of eight banks (each of which has 256Mb of capacity).
- a portion (e.g. bank, etc.) of the DRAM circuit is said to be in the active state after an activate command is issued to that portion.
- a portion (e.g. bank, etc.) of the DRAM circuit is said to be in the precharge state after a precharge command is issued to that portion.
- the entire DRAM circuit is said to be in the active state.
- a relative time period spent by the entire DRAM circuit in precharge state with respect to the time period spent by the entire DRAM circuit in active state during normal operation may be defined as the precharge-to-active ratio.
- DRAM circuits may also support a plurality of power management modes. Some of these modes may represent power saving modes. As an example, DDR2 SDRAMs may support four power saving modes. In particular, two active power down modes, precharge power down mode, and self-refresh mode may be supported, in one embodiment.
- a DRAM circuit may enter an active power down mode if the DRAM circuit is in the active state when it receives a power down command.
- a DRAM circuit may enter the precharge power down mode if the DRAM circuit is in the precharge state when it receives a power down command.
- a higher precharge-to-active ratio may increase the likelihood that a DRAM circuit may enter the precharge power down mode rather than an active power down mode when the DRAM circuit is the target of a power saving operation.
- the precharge power down mode and the self refresh mode may provide greater power savings than the active power down modes.
- the system may be operable to perform a power management operation on at least one of the memory circuits, and optionally on the interface circuit, based on the state of the at least one memory circuit.
- a power management operation may include, among others, a power saving operation.
- the term power saving operation may refer to any operation that results in at least some power savings.
- the power saving operation may include applying a power saving command to one or more memory circuits, and optionally to the interface circuit, based on at least one state of one or more memory circuits.
- Such power saving command may include, for example, initiating a power down operation applied to one or more memory circuits, and optionally to the interface circuit.
- Such state may depend on identification of the current, past or predictable future status of one or more memory circuits, a predetermined combination of commands to the one or more memory circuits, a predetermined pattern of commands to the one or more memory circuits, a predetermined absence of commands to the one or more memory circuits, any command(s) to the one or more memory circuits, and/or any command(s) to one or more memory circuits other than the one or more memory circuits.
- Such commands may have occurred in the past, might be occurring in the present, or may be predicted to occur in the future. Future commands may be predicted since the system (e.g. memory controller, etc.) may be aware of future accesses to the memory circuits in advance of the execution of the commands by the memory circuits.
- such current, past, or predictable future status may refer to any property of the memory circuit that may be monitored, stored, and/or predicted.
- the system may identify at least one of a plurality of memory circuits that may not be accessed for some period of time. Such status identification may involve determining whether a portion(s) (e.g. bank(s), etc.) is being accessed in at least one of the plurality of memory circuits. Of course, any other technique may be used that results in the identification of at least one of the memory circuits (or portion(s) thereof) that is not being accessed (e.g. in a non-accessed state, etc.). In other embodiments, other such states may be detected or identified and used for power management.
- a portion(s) e.g. bank(s), etc.
- any other technique may be used that results in the identification of at least one of the memory circuits (or portion(s) thereof) that is not being accessed (e.g. in a non-accessed state, etc.). In other embodiments, other such states may be detected or identified and used for power management.
- a power saving operation may be initiated in association with the memory circuit (or portion(s) thereof) that is in the non-accessed state.
- such power saving operation may involve a power down operation (e.g. entry into an active power down mode, entry into a precharge power down mode, etc.).
- a power management signal including, but not limited to a clock enable (CKE) signal, chip select (CS) signal, row address strobe (RAS), column address strobe (CAS), write enable (WE), and optionally in combination with other signals and/or commands.
- CKE clock enable
- CS chip select
- RAS row address strobe
- CAS column address strobe
- WE write enable
- non-power management signal e.g. control signal(s), address signal(s), data signal(s), command(s), etc.
- control signal(s) e.g. address signal(s), data signal(s), command(s), etc.
- the system may, in yet another embodiment, be operable to map the physical memory circuits to appear as at least one virtual memory circuit with at least one aspect that is different from that of the physical memory circuits, resulting in a first behavior of the virtual memory circuits that is different from a second behavior of the physical memory circuits.
- the interface circuit may be operable to aid or participate in the mapping of the physical memory circuits such that they appear as at least one virtual memory circuit.
- the physical memory circuits may be mapped to appear as at least one virtual memory circuit with at least one aspect that is different from that of the physical memory circuits, resulting in a first behavior of the at least one virtual memory circuits that is different from a second behavior of one or more of the physical memory circuits.
- Such behavior may, in one embodiment, include power behavior (e.g. a power consumption, current consumption, current waveform, any other aspect of power management or behavior, etc.).
- power behavior simulation may effect or result in a reduction or other modification of average power consumption, reduction or other modification of peak power consumption or other measure of power consumption, reduction or other modification of peak current consumption or other measure of current consumption, and/or modification of other power behavior (e.g. parameters, metrics, etc.).
- the at least one aspect that is altered by the simulation may be the precharge-to-active ratio of the physical memory circuits.
- the alteration of such a ratio may be fixed (e.g. constant, etc.) or may be variable (e.g. dynamic, etc.).
- a fixed alteration of this ratio may be accomplished by a simulation that results in physical memory circuits appearing to have fewer portions (e.g. banks, etc.) that may be capable of performing operations in parallel.
- a physical 1 Gb DDR2 SDRAM circuit with eight physical banks may be mapped to a virtual 1 Gb DDR2 SDRAM circuit with two virtual banks, by coalescing or combining four physical banks into one virtual bank.
- Such a simulation may increase the precharge-to-active ratio of the virtual memory circuit since the virtual memory circuit now has fewer portions (e.g. banks, etc.) that may be in use (e.g. in an active state, etc.) at any given time.
- a physical 1Gb DDR2 SDRAM circuit with eight physical banks may have a probability, g , that all eight physical banks are in the precharge state at any given time.
- the virtual DDR2 SDRAM circuit may have a probability, h , that both the virtual banks are in the precharge state at any given time. Under normal operating conditions of the system, h may be greater than g .
- a power saving operation directed at the aforementioned virtual 1Gb DDR2 SDRAM circuit may have a higher likelihood of placing the DDR2 SDRAM circuit in a precharge power down mode as compared to a similar power saving operation directed at the aforementioned physical 1 Gb DDR2 SDRAM circuit.
- a virtual memory circuit with fewer portions (e.g. banks, etc.) than a physical memory circuit with equivalent capacity may not be compatible with certain industry standards (e.g. JEDEC standards).
- JEDEC standards e.g. JEDEC standards
- the JEDEC Standard No. JESD 21-C for DDR2 SDRAM specifies a 1Gb DRAM circuit with eight banks.
- a 1Gb virtual DRAM circuit with two virtual banks may not be compliant with the JEDEC standard.
- a plurality of physical memory circuits, each having a first number of physical portions e.g.
- each physical memory circuit that is part of the at least one virtual memory circuit has a second number of portions (e.g. banks, etc.) that may be capable of performing operations in parallel, wherein the second number of portions is different from the first number of portions.
- four physical 1 Gb DDR2 SDRAM circuits (each with eight physical banks) may be mapped to a single virtual 4Gb DDR2 SDRAM circuit with eight virtual banks, wherein the eight physical banks in each physical 1Gb DDR2 SDRAM circuit have been coalesced or combined into two virtual banks.
- four physical 1 Gb DDR2 SDRAM circuits may be mapped to two virtual 2Gb DDR2 SDRAM circuits, each with eight virtual banks, wherein the eight physical banks in each physical 1 Gb DDR2 SDRAM circuit have been coalesced or combined into four virtual banks.
- the interface circuit may be operable to aid the system in the mapping of the physical memory circuits.
- FIG. 31 shows an example of four physical 1 Gb DDR2 SDRAM circuits 3102A-D that are mapped by the system 3106, and optionally with the aid or participation of interface circuit 3104, to appear as a virtual 4Gb DDR2 SDRAM circuit 3108.
- Each physical DRAM circuit 3102A-D containing eight physical banks 3120 has been mapped to two virtual banks 3130 of the virtual 4Gb DDR2 SDRAM circuit 3108.
- the simulation or mapping results in the memory circuits having fewer portions (e.g. banks etc.) that may be capable of performing operations in parallel.
- this simulation may be done by mapping (e.g. coalescing or combining) a first number of physical portion(s) (e.g. banks, etc.) into a second number of virtual portion(s). If the second number is less than the first number, a memory circuit may have fewer portions that may be in use at any given time. Thus, there may be a higher likelihood that a power saving operation targeted at such a memory circuit may result in that particular memory circuit consuming less power.
- a variable change in the precharge-to-active ratio may be accomplished by a simulation that results in the at least one virtual memory circuit having at least one latency that is different from that of the physical memory circuits.
- a physical 1Gb DDR2 SDRAM circuit with eight banks may be mapped by the system, and optionally the interface circuit, to appear as a virtual 1 Gb DDR2 SDRAM circuit with eight virtual banks having at least one latency that is different from that of the physical DRAM circuits.
- the latency may include one or more timing parameters such as tFAW, tRRD, tRP, tRCD, tRFC(MIN), etc.
- tFAW is the 4-Bank activate period
- tRRD is the ACTIVE bank a to ACTIVE bank b command timing parameter
- tRP is the PRECHARGE command period
- tRCD is the ACTIVE-to-READ or WRITE delay
- tRFC(min) is the minimum value of the REFRESH to ACTIVE or REFRESH to REFRESH command interval.
- these and other DRAM timing parameters are defined in the JEDEC specifications (for example JESD 21-C for DDR2 SDRAM and updates, corrections and errata available at the JEDEC website) as well as the DRAM manufacturer datasheets (for example the MICRON datasheet for 1Gb: x4, x8, x16 DDR2 SDRAM, example part number MT47H256M4, labeled PDF: 09005aef821ae8bf/Source: 09005aef821aed36, 1 Gb DDR2TOC.fm - Rev. K 9/06 EN, and available at the MICRON website).
- JEDEC specifications for example JESD 21-C for DDR2 SDRAM and updates, corrections and errata available at the JEDEC website
- DRAM manufacturer datasheets for example the MICRON datasheet for 1Gb: x4, x8, x16 DDR2 SDRAM, example part number MT47H256M4, labeled PDF: 09005aef82
- the virtual DRAM circuit may be simulated to have a tRP(virtual) that is greater than the tRP(physical) of the physical DRAM circuit. Such a simulation may thus increase the minimum latency between a precharge command and a subsequent activate command to a portion (e.g. bank, etc.) of the virtual DRAM circuit.
- the virtual DRAM circuit may be simulated to have a tRRD(virtual) that is greater than the tRRD(physical) of the physical DRAM circuit.
- Such a simulation may thus increase the minimum latency between successive activate commands to various portions (e.g. banks, etc.) of the virtual DRAM circuit.
- Such simulations may increase the precharge-to-active ratio of the memory circuit.
- the system may optionally change the values of one or more latencies of the at least one virtual memory circuit in response to present, past, or future commands to the memory circuits, the temperature of the memory circuits, etc. That is, the at least one aspect of the virtual memory circuit may be changed dynamically.
- Some memory buses may allow the use of 1T or 2T address timing (also known as 1T or 2T address clocking).
- 1T or 2T address timing also known as 1T or 2T address clocking.
- the MICRON technical note TN-47-01, DDR2 DESIGN GUIDE FOR TWO-DIMM SYSTEMS (available at the MICRON website) explains the meaning and use of 1T and 2T address timing as follows: "Further, the address bus can be clocked using 1T or 2T clocking. With 1T, a new command can be issued on every clock cycle. 2T timing will hold the address and command bus valid for two clock cycles. This reduces the efficiency of the bus to one command per two clocks, but it doubles the amount of setup and hold time. The data bus remains the same for all of the variations in the address bus.”
- the system may change the precharga-to-active ratio of the virtual memory circuit by changing from 1T address timing to 2T address timing when sending addresses and control signals to the interface circuit and/or the memory circuits. Since 2T address timing affects the latency between successive commands to the memory circuits, the precharge-to-active ratio of a memory circuit may be changed. Strictly as an option, the system may dynamically change between 1T and 2T address timing.
- the system may communicate a first number of power management signals to the interface circuit to control the power behavior.
- the interface circuit may communicate a second number of power management signals to at least a portion of the memory circuits.
- the second number of power management signals may be the same of different from the first number of power management signals.
- the second number of power management signals may be utilized to perform power management of the portion(s) of the virtual or physical memory circuits in a manner that is independent from each other and/or independent from the first number of power management signals received from the system (which may or may not also be utilized in a manner that is independent from each other).
- the system may provide power management signals directly to the memory circuits.
- such power management signal(s) may refer to any control signal (e.g. one or more address signals; one or more data signals; a combination of one or more control signals; a sequence of one or more control signals; a signal associated with an activate (or active) operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation, or other encoded or direct operation, command or control signal, etc.).
- the operation associated with a command may consist of the command itself and optionally, one or more necessary signals and/or behavior.
- the power management signals received from the system may be individual signals supplied to a DIMM.
- the power management signals may include, for example, CKE and CS signals. These power management signals may also be used in conjunction and/or combination with each other, and optionally, with other signals and commands that are encoded using other signals (e.g. RAS, CAS, WE, address etc.) for example.
- the JEDEC standards may describe how commands directed to memory circuits are to be encoded. As the number of memory circuits on a DIMM is increased, it is beneficial to increase the number of power management signals so as to increase the flexibility of the system to manage portion(s) of the memory circuits on a DIMM.
- the power management signals may take several forms.
- the power management signals may be encoded, located, placed, or multiplexed in various existing fields (e.g. data field, address field, etc.), signals (e.g. CKE signal, CS signal, etc.), and/or busses.
- a signal may be a single wire; that is a single electrical point-to-point connection.
- the signal is un-encoded and not bussed, multiplexed, or encoded.
- a command directed to a memory circuit may be encoded, for example, in an address signal, by setting a predefined number of bits in a predefined location (or field) on the address bus to a specific combination that uniquely identifies that command.
- the command is said to be encoded on the address bus and located or placed in a certain position, location, or field.
- multiple bits of information may be placed on multiple wires that form a bus.
- a signal that requires the transfer of two or more bits of information may be time-multiplexed onto a single wire.
- the time-multiplexed sequence of 10 (a one followed by a zero) may be made equivalent to two individual signals: a one and a zero.
- Such examples of time-multiplexing are another form of encoding.
- Such various well-known methods of signaling, encoding (or lack thereof), bussing, and multiplexing, etc. may be used in isolation or combination.
- the power management signals from the system may occupy currently unused connection pins on a DIMM (unused pins may be specified by the JEDEC standards).
- the power management signals may use existing CKE and CS pins on a DIMM, according to the JEDEC standard, along with additional CKE and CS pins to enable, for example, power management of DIMM capacities that may not yet be currently defined by the JEDEC standards.
- the power management signals from the system may be encoded in the CKE and CS signals.
- the CKE signal may be a bus, and the power management signals may be encoded on that bus.
- a 3-bit wide bus comprising three signals on three separate wires: CKE[0], CKE[1], and CKE[2], may be decoded by the interface circuit to produce eight separate CKE signals that comprise the power management signals for the memory circuits.
- the power management signals from the system may be encoded in unused portions of existing fields.
- certain commands may have portions of the fields set to X (also known as don't care).
- X also known as don't care
- the setting of such bit(s) to either a one or to a zero does not affect the command.
- the effectively unused bit position in this field may thus be used to carry a power management signal.
- the power management signal may thus be encoded and located or placed in a field in a bus, for example.
- the power management schemes described for the DRAM circuits may also be extended to the interface circuits.
- the system may have or may infer information that a signal, bus, or other connection will not be used for a period of time. During this period of time, the system may perform power management on the interface circuit or part(s) thereof.
- Such power management may, for example, use an intelligent signaling mechanism (e.g. encoded signals, sideband signals, etc.) between the system and interface circuits (e.g. register chips, buffer chips, AMB chips, etc.), and/or between interface circuits. These signals may be used to power manage (e.g.
- the interface circuits e.g. input receiver circuits, internal logic circuits, clock generation circuits, output driver circuits, termination circuits, etc.
- a plurality of memory circuits may be mapped using simulation to appear as at least one virtual memory circuit, wherein a first number of portions (e.g. banks, etc.) in each physical memory circuit may be coalesced or combined into a second number of virtual portions (e.g. banks, etc.), and the at least one virtual memory circuit may have at least one latency that is different from the corresponding latency of the physical memory circuits.
- the first and second number of portions may include any one or more portions.
- FIG. 32 illustrates a multiple memory circuit framework 3200, in accordance with one embodiment. As shown, included are an interface circuit 3202, a plurality of memory circuits 3204A, 3204B, 3204N, and a system 3206. In the context of the present description, such memory circuits 3204A, 3204B, 3204N may include any circuit capable of serving as memory.
- one or more of the memory circuits 3204A, 3204B, 3204N may include a monolithic memory circuit.
- such monolithic memory circuit may take the form of dynamic random access memory (DRAM).
- DRAM may take any form including, but not limited to synchronous (SDRAM), double data rate synchronous (DDR DRAM, DDR2 DRAM, DDR3 DRAM, etc.), quad data rate (QDR DRAM), direct RAMBUS (DRDRAM), fast page mode (FPM DRAM), video (VDRAM), extended data out (EDO DRAM), burst EDO (BEDO DRAM), multibank (MDRAM), synchronous graphics (SGRAM), and/or any other type of DRAM.
- SDRAM synchronous
- DDR DRAM double data rate synchronous
- DDR2 DRAM double data rate synchronous
- DDR3 DRAM etc.
- quad data rate quad data rate
- DRAM direct RAMBUS
- FPM DRAM fast page mode
- VDRAM video
- EDO DRAM extended data out
- one or more of the memory circuits 3204A, 3204B, 3204N may include other types of memory such as magnetic random access memory (MRAM), intelligent random access memory (IRAM), distributed network architecture (DNA) memory, window random access memory (WRAM), flash memory (e.g. NAND, NOR, or others, etc.), pseudostatic random access memory (PSRAM), wetware memory, and/or any other type of memory circuit that meets the above definition.
- MRAM magnetic random access memory
- IRAM intelligent random access memory
- DNA distributed network architecture
- WRAM window random access memory
- flash memory e.g. NAND, NOR, or others, etc.
- PSRAM pseudostatic random access memory
- wetware memory wetware memory
- the memory circuits 3204A, 3204B, 3204N may be symmetrical or asymmetrical.
- the memory circuits 3204A, 3204B, 3204N may be of the same type, brand, and/or size, etc.
- one or more of the memory circuits 3204A, 3204B, 3204N may be of a first type, brand, and/or size; while one or more other memory circuits 3204A, 3204B, 3204N may be of a second type, brand, and/or size, etc.
- one or more memory circuits 3204A, 3204B, 3204N may be of a DRAM type, while one or more other memory circuits 3204A, 3204B, 3204N may be of a flash type. While three or more memory circuits 3204A, 3204B, 3204N are shown in FIG. 32 in accordance with one embodiment, it should be noted that any plurality of memory circuits 3204A, 3204B, 3204N may be employed.
- the memory circuits 3204A, 3204B, 3204N may or may not be positioned on at least one dual in-line memory module (DIMM) (not shown).
- the DIMM may include a registered DIMM (R-DIMM), a small outline-DIMM (SO-DIMM), a fully buffered-DIMM (FB-DIMM), an un-buffered DIMM, etc.
- R-DIMM registered DIMM
- SO-DIMM small outline-DIMM
- FB-DIMM fully buffered-DIMM
- the memory circuits 3204A, 3204B, 3204N may or may not be positioned on any desired entity for packaging purposes.
- the system 3206 may include any system capable of requesting and/or initiating a process that results in an access of the memory circuits 3204A, 3204B, 3204N. As an option, the system 3206 may accomplish this utilizing a memory controller (not shown), or any other desired mechanism.
- a memory controller not shown
- such system 3206 may include a host system in the form of a desktop computer, lap-top computer, server, workstation, a personal digital assistant (PDA) device, a mobile phone device, a television, a peripheral device (e.g. printer, etc.).
- PDA personal digital assistant
- a mobile phone device e.g. printer, etc.
- a peripheral device e.g. printer, etc.
- such interface circuit 3202 may include any circuit capable of indirectly or directly communicating with the memory circuits 3204A, 3204B, 3204N and the system 3206.
- the interface circuit 3202 may include one or more interface circuits, a buffer chip, etc. Embodiments involving such a buffer chip will be set forth hereinafter during reference to subsequent figures.
- the interface circuit 3202 may or may not be manufactured in monolithic form.
- memory circuits 3204A, 3204B, 3204N, interface circuit 3202, and system 3206 are shown to be separate parts, it is contemplated that any of such parts (or portions thereof) may or may not be integrated in any desired manner. In various embodiments, such optional integration may involve simply packaging such parts together (e.g. stacking the parts, etc.) and/or integrating them monolithically. Just by way of example, in various optional embodiments, one or more portions (or all, for that matter) of the interface circuit 3202 may or may not be packaged with one or more of the memory circuits 3204A, 3204B, 3204N (or all, for that matter).
- Different optional embodiments which may be implemented in accordance with the present multiple memory circuit framework 3200 will be set forth hereinafter during reference to FIGS. 33A-33E , and 34 et al.
- the interface circuit 3202 may be capable of various functionality, in the context of different embodiments. More illustrative information will now be set forth regarding such optional functionality which may or may not be implemented in the context of such interface circuit 3202, per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. For example, any of the following features may be optionally incorporated with or without the exclusion of other features described.
- the interface circuit 3202 interfaces a plurality of signals 3208 that are communicated between the memory circuits 3204A, 3204B, 3204N and the system 3206.
- signals may, for example, include address/control/clock signals, etc.
- the interfaced signals 3208 may represent all of the signals that are communicated between the memory circuits 3204A, 3204B, 3204N and the system 3206.
- at least a portion of signals 3210 may travel directly between the memory circuits 3204A, 3204B, 3204N and the system 3206 or component thereof [e.g. register, advanced memory buffer (AMB), memory controller, or any other component thereof, where the term component is defined hereinbelow].
- the number of the signals 3208 may vary such that the signals 3208 are a majority or more (L > M), etc.
- the interface circuit 3202 may be operable to interface a first number of memory circuits 3204A, 3204B, 3204N and the system 3206 for simulating at least one memory circuit of a second number.
- the simulation may refer to any simulating, emulating, disguising, transforming, converting, and/or the like that results in at least one aspect (e.g. a number in this embodiment, etc.) of the memory circuits 3204A, 3204B, 3204N appearing different to the system 3206.
- the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner.
- a number of pins, wires, signals, etc. may be simulated, while, in the context of logical simulation, a particular function may be simulated.
- a particular protocol e.g. DDR3, etc.
- DDR3 DDR3, etc.
- the second number may be more or less than the first number. Still yet, in the latter case, the second number may be one, such that a single memory circuit is simulated.
- Different optional embodiments which may employ various aspects of the present embodiment will be set forth hereinafter during reference to FIGS. 33A-33E , and 34 et al.
- the interface circuit 3202 may be operable to interface the memory circuits 3204A, 3204B, 3204N and the system 3206 for simulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of the memory circuits 3204A, 3204B, 3204N.
- such aspect may include a signal, a capacity, a timing, a logical interface, etc.
- such examples of aspects are set forth for illustrative purposes only and thus should not be construed as limiting, since any aspect associated with one or more of the memory circuits 3204A, 3204B, 3204N may be simulated differently in the foregoing manner.
- such signal may refer to a control signal (e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation; etc.), a data signal, a logical or physical signal, or any other signal for that matter.
- a control signal e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation; etc.
- a data signal e.g. an address signal
- a data signal e.g. an address signal
- data signal e.g. an address signal
- protocol such may, in one exemplary embodiment, refer to a particular standard protocol.
- a number of memory circuits 3204A, 3204B, 3204N that obey a standard protocol e.g. DDR2, etc.
- a different protocol e.g. DDR3, etc.
- a number of memory circuits 3204A, 3204B, 3204N that obey a version of protocol e.g. DDR2 with 3-3-3 latency timing, etc.
- DDR2 with 5-5-5 latency timing, etc.
- the interface circuit 3202 may be operable for simulating at least one memory circuit with a first memory capacity that is greater than (or less than) a second memory capacity of at least one of the memory circuits 3204A, 3204B, 3204N.
- the timing may possibly relate to a latency (e.g. time delay, etc.).
- a latency e.g. time delay, etc.
- such latency may include a column address strobe (CAS) latency, which refers to a latency associated with accessing a column of data.
- the latency may include a row address to column address latency (tRCD), which refers to a latency required between the row address strobe (RAS) and CAS.
- tRP row precharge latency
- tRP row precharge latency
- the latency may include an activate to precharge latency (tRAS), which refers to a latency required to access a certain row of data between an activate operation operation and a precharge operation.
- tRAS activate to precharge latency
- the interface circuit 3202 may be operable for simulating at least one memory circuit with a first latency that is longer (or shorter) than a second latency of at least one of the memory circuits 3204A, 3204B, 3204N.
- tRAS activate to precharge latency
- a component may be operable to receive a signal from the system 3206 and communicate the signal to at least one of the memory circuits 3204A, 3204B, 3204N after a delay.
- the signal may refer to a control signal (e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation; etc.), a data signal, a logical or physical signal, or any other signal for that matter.
- such delay may be fixed or variable (e.g. a function of the current signal, the previous signal, etc.).
- the component may be operable to receive a signal from at least one of the memory circuits 3204A, 3204B, 3204N and communicate the signal to the system 3206 after a delay.
- the delay may include a cumulative delay associated with any one or more of the aforementioned signals. Even still, the delay may result in a time shift of the signal forward and/or back in time (with respect to other signals). Of course, such forward and backward time shift may or may not be equal in magnitude. In one embodiment, this time shifting may be accomplished by utilizing a plurality of delay functions which each apply a different delay to a different signal. In still additional embodiments, the aforementioned shifting may be coordinated among multiple signals such that different signals are subject to shifts with different relative directions/magnitudes, in an organized fashion.
- the aforementioned component may, but need not necessarily take the form of the interface circuit 3202 of FIG. 32 .
- the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc.
- Such register may, in various embodiments, include a Joint Electron Device Engineering Council (JEDEC) register, a JEDEC register including one or more functions set forth herein, a register with forwarding, storing, and/or buffering capabilities, etc.
- JEDEC Joint Electron Device Engineering Council
- At least one of a plurality of memory circuits 3204A, 3204B, 3204N may be identified that is not currently being accessed by the system 3206. In one embodiment, such identification may involve determining whether a page [i.e. any portion of any memory(s), etc.] is being accessed in at least one of the plurality of memory circuits 3204A, 3204B, 3204N. Of course, any other technique may be used that results in the identification of at least one of the memory circuits 3204A, 3204B, 3204N that is not being accessed.
- a power saving operation is initiated in association with the at least one memory circuit 3204A, 3204B, 3204N.
- a power saving operation may involve a power down operation and, in particular, a precharge power down operation.
- a power down operation may involve a power down operation and, in particular, a precharge power down operation.
- a precharge power down operation may be employed in the context of the present embodiment.
- the present functionality or a portion thereof may be carried out utilizing any desired component.
- such component may, but need not necessarily take the form of the interface circuit 3202 of FIG. 32 .
- the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc.
- One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference to FIG. 41 .
- a plurality of the aforementioned components may serve, in combination, to interface the memory circuits 3204A, 3204B, 3204N and the system 3206.
- two, three, four, or more components may accomplish this.
- the different components may be relatively configured in any desired manner.
- the components may be configured in parallel, serially, or a combination thereof.
- any number of the components may be allocated to any number of the memory circuits 3204A, 3204B, 3204N.
- each of the plurality of components may be the same or different. Still yet, the components may share the same or similar interface tasks and/or perform different interface tasks. Such interface tasks may include, but are not limited to simulating one or more aspects of a memory circuit, performing a power savings/refresh operation, carrying out any one or more of the various functionalities set forth herein, and/or any other task relevant to the aforementioned interfacing.
- interface tasks may include, but are not limited to simulating one or more aspects of a memory circuit, performing a power savings/refresh operation, carrying out any one or more of the various functionalities set forth herein, and/or any other task relevant to the aforementioned interfacing.
- One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference to FIG. 34 .
- FIG. 33F An embodiment is set forth for storing at least a portion of information received in association with a first operation for use in performing a second operation. See FIG. 33F .
- a technique is provided for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. See FIG. 42 .
- FIGS. 33A-33E show various configurations of a buffered stack of DRAM circuits 3306A-D with a buffer chip 3302, in accordance with various embodiments.
- the various configurations to be described in the following embodiments may be implemented in the context of the architecture and/or environment of FIG. 32 . Of course, however, they may also be carried out in any other desired environment (e.g. using other memory types, etc.). It should also be noted that the aforementioned definitions may apply during the present description.
- the buffer chip 3302 is placed electrically between an electronic host system 3304 and a stack of DRAM circuits 3306A-D.
- a stack may refer to any collection of memory circuits.
- the buffer chip 3302 may include any device capable of buffering a stack of circuits (e.g. DRAM circuits 3306A-D, etc.).
- the buffer chip 3302 may be capable of buffering the stack of DRAM circuits 3306A-D to electrically and/or logically resemble at least one larger capacity DRAM circuit to the host system 3304. In this way, the stack of DRAM circuits 3306A-D may appear as a smaller quantity of larger capacity DRAM circuits to the host system 3304.
- the stack of DRAM circuits 3306A-D may include eight 512Mb DRAM circuits.
- the buffer chip 3302 may buffer the stack of eight 512Mb DRAM circuits to resemble a single 4Gb DRAM circuit to a memory controller (not shown) of the associated host system 3304.
- the buffer chip 3302 may buffer the fstack of eight 512Mb DRAM circuits to resemble two 2Gb DRAM circuits to a memory controller of an associated host system 3304.
- the stack of DRAM circuits 3306A-D may include any number of DRAM circuits.
- a buffer chip 3302 may be connected to 2, 4, 8 or more DRAM circuits 3306A-D.
- the DRAM circuits 3306A-D may be arranged in a single stack, as shown in FIGS. 33A-33D .
- the DRAM circuits 3306A-D may be arranged on a single side of the buffer chip 3302, as shown in FIGS. 33A-33D . Of course, however, the DRAM circuits 3306A-D may be located on both sides of the buffer chip 3302 shown in FIG. 33E . Thus, for example, a buffer chip 3302 may be connected to 16 DRAM circuits with 8 DRAM circuits on either side of the buffer chip 3302, where the 8 DRAM circuits on each side of the buffer chip 3302 are arranged in two stacks of four DRAM circuits.
- the buffer chip 3302 may optionally be a part of the stack of DRAM circuits 3306A-D. Of course, however, the buffer chip 3302 may also be separate from the stack of DRAM circuits 3306A-D. In addition, the buffer chip 3302 may be physically located anywhere in the stack of DRAM circuits 3306A-D, where such buffer chip 3302 electrically sits between the electronic host system 3304 and the stack of DRAM circuits 3306A-D.
- a memory bus (not shown) may connect to the buffer chip 3302, and the buffer chip 3302 may connect to each of the DRAM circuits 3306A-D in the stack.
- the buffer chip 3302 may be located at the bottom of the stack of DRAM circuits 3306A-D (e.g. the bottom-most device in the stack).
- the buffer chip 3302 may be located in the middle of the stack of DRAM circuits 3306A-D.
- the buffer chip 3302 may be located at the top of the stack of DRAM circuits 3306A-D (e.g. the top-most device in the stack).
- the buffer chip 3302 may be located anywhere between the two extremities of the stack of DRAM circuits 3306A-D.
- the electrical connections between the buffer chip 3302 and the stack of DRAM circuits 3306A-D may be configured in any desired manner.
- address, control (e.g. command, etc.), and clock signals may be common to all DRAM circuits 3306A-D in the stack (e.g. using one common bus).
- data signals may be wired as one common bus, several busses or as an individual bus to each DRAM circuit 3306A-D.
- any combinations of such configurations may also be utilized.
- the stack of DRAM circuits 3306A-D may have one common address, control and clock bus 3308 with individual data busses 3310.
- the stack of DRAM circuits 3306A-D may have two address, control and clock busses 3308 along with two data busses 3310.
- the stack of DRAM circuits 3306A-D may have one address, control and clock bus 3308 together with two data busses 3310.
- the stack of DRAM circuits 3306A-D may have one common address, control and clock bus 3308 and one common data bus 3310. It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized.
- FIG. 33F illustrates a method 3380 for storing at least a portion of information received in association with a first operation for use in performing a second operation, in accordance with still yet another embodiment.
- the method 3380 may be implemented in the context of the architecture and/or environment of any one or more of FIGS. 32-33E .
- the method 3380 may be carried out by the interface circuit 3202 of FIG. 32 .
- the method 3380 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- first information is received in association with a first operation to be performed on at least one of a plurality of memory circuits (e.g. see the memory circuits 3204A, 3204B, 3204N of FIG. 32 , etc.).
- first information may or may not be received coincidently with the first operation, as long as it is associated in some capacity.
- the first operation may, in one embodiment, include a row operation.
- the first information may include address information (e.g. a set of address bits, etc.).
- second information is received in association with a second operation. Similar to the first information, the second information may or may not be received coincidently with the second operation, and may include address information. Such second operation, however, may, in one embodiment, include a column operation.
- the second operation may be performed utilizing the stored portion of the first information in addition to the second information. See operation 3388. More illustrative information will now be set forth regarding various optional features with which the foregoing method 3380 may or may not be implemented, per the desires of the user. Specifically, an example will be set for illustrating the manner in which the method 3380 may be employed for accommodating a buffer chip that is simulating at least one aspect of a plurality of memory circuits.
- the present example of the method 3380 of FIG. 33F will be set forth in the context of the various components (e.g. buffer chip 3302, etc.) shown in the embodiments of FIGS. 33A-33E .
- the buffer chip 3302 may receive more address bits from the memory controller than are required by the DRAM circuits 3306A-D in the stack. These extra address bits may be decoded by the buffer chip 3302 to individually select the DRAM circuits 3306A-D in the stack, utilizing separate chip select signals to each of the DRAM circuits 3306A-D in the stack.
- a stack of four x4 1Gb DRAM circuits 3306A-D behind a buffer chip 3302 may appear as a single x4 4Gb DRAM circuit to the memory controller.
- the memory controller may provide sixteen row address bits and three bank address bits during a row (e.g. activate) operation, and provide eleven column address bits and three bank address bits during a column (e.g. read or write) operation.
- the individual DRAM circuits 3306A-D in the stack may require only fourteen row address bits and three bank address bits for a row operation, and eleven column address bits and three bank address bits during a column operation.
- the buffer chip 3302 may receive two address bits more than are needed by each DRAM circuit 3306A-D in the stack.
- the buffer chip 3302 may therefore use the two extra address bits from the memory controller to select one of the four DRAM circuits 3306A-D in the stack.
- the buffer chip 3302 may receive the same number of address bits from the memory controller during a column operation as are needed by each DRAM circuit 3306A-D in the stack.
- the buffer chip 3302 may be designed to store the two extra address bits provided during a row operation and use the two stored address bits to select the correct DRAM circuit 3306A-D during the column operation.
- the mapping between a system address (e.g. address from the memory controller, including the chip select signal(s)) and a device address (e.g. the address, including the chip select signals, presented to the DRAM circuits 3306A-D in the stack) may be performed by the buffer chip 3302 in various manners.
- a lower order system row address and bank address bits may be mapped directly to the device row address and bank address inputs.
- the most significant row address bit(s) and, optionally, the most significant bank address bit(s) may be decoded to generate the chip select signals for the DRAM circuits 3306A-D in the stack during a row operation.
- the address bits used to generate the chip select signals during the row operation may also be stored in an internal lookup table by the buffer chip 3302 for one or more clock cycles.
- the system column address and bank address bits may be mapped directly to the device column address and bank address inputs, while the stored address bits may be decoded to generate the chip select signals.
- addresses may be mapped between four 512Mb DRAM circuits 3306A-D that simulate a single 2Gb DRAM circuits utilizing the buffer chip 3302.
- the bank address bit 2 and the row address bit 14 may be decoded to generate the 4 chip select signals for each of the four DRAM circuits 3306A-D.
- Row address bit 14 may be stored during the row operation using the bank address as the index.
- the stored row address bit 14 may again be used with bank address bit 2 to form the four DRAM chip select signals.
- addresses may be mapped between four 1Gb DRAM circuits 3306A-D that simulate a single 4Gb DRAM circuits utilizing the buffer chip 3302.
- row address bits 14 and 15 may be decoded to generate the 4 chip select signals for each of the four DRAM circuits 3306A-D. Row address bits 14 and 15 may also be stored during the row operation using the bank address as the index. During the column operation, the stored row address bits 14 and 15 may again be used to form the four DRAM chip select signals.
- this mapping technique may optionally be used to ensure that there are no unnecessary combinational logic circuits in the critical timing path between the address input pins and address output pins of the buffer chip 3302.
- Such combinational logic circuits may instead be used to generate the individual chip select signals. This may therefore allow the capacitive loading on the address outputs of the buffer chip 3302 to be much higher than the loading on the individual chip select signal outputs of the buffer chip 3302.
- the address mapping may be performed by the buffer chip 3302 using some of the bank address signals from the memory controller to generate the individual chip select signals.
- the buffer chip 3302 may store the higher order row address bits during a row operation using the bank address as the index, and then may use the stored address bits as part of the DRAM circuit bank address during a column operation.
- This address mapping technique may require an optional lookup table to be positioned in the critical timing path between the address inputs from the memory controller and the address outputs, to the DRAM circuits 3306A-D in the stack.
- addresses may be mapped between four 512Mb DRAM circuits 3306A-D that simulate a single 2Gb DRAM utilizing the buffer chip 3302.
- There may be 15 row address bits from the system 3304, where row address bits 0 through 13 are mapped directly to the DRAM circuits 3306A-D.
- There may also be 3 bank address bits from the system 3304, such that bank address bit 0 is used as a DRAM circuit bank address bit for the DRAM circuits 3306A-D.
- row address bit 14 may be used as an additional DRAM circuit bank address bit.
- the bank address bits 1 and 2 from the system may be decoded to generate the 4 chip select signals for each of the four DRAM circuits 3306A-D.
- row address bit 14 may be stored during the row operation.
- the stored row address bit 14 may again be used along with the bank address bit 0 from the system to form the DRAM circuit bank address.
- the column address from the memory controller may be mapped directly as the column address to the DRAM circuits 3306A-D in the stack. Specifically, this direct mapping may be performed since each of the DRAM circuits 3306A-D in the stack, even if of the same width but different capacities (e.g. from 512Mb to 4Gb), may have the same page sizes.
- address A[10] may be used by the memory controller to enable or disable auto-precharge during a column operation. Therefore, the buffer chip 3302 may forward A[10] from the memory controller to the DRAM circuits 3306A-D in the stack without any modifications during a column operation.
- the simulated DRAM circuit may be desirable to determine whether the simulated DRAM circuit behaves according to a desired DRAM standard or other design specification.
- a behavior of many DRAM circuits is specified by the JEDEC standards and it may be desirable, in some embodiments, to exactly simulate a particular JEDEC standard DRAM.
- the JEDEC standard defines control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals.
- the JEDEC specification for a DDR2 DRAM is known as JESD79-2B.
- the following algorithm may be used. Such algorithm checks, using a set of software verification tools for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as a desired standard or other design specification. This formal verification is quite feasible because the DRAM protocol described in a DRAM standard is typically limited to a few control signals (e.g. approximately 15 control signals in the case of the JEDEC DDR2 specification, for example).
- Examples of the aforementioned software verification tools include MAGELLAN supplied by SYNOPSYS, or other software verification tools, such as INCISIVE supplied by CADENCE, verification tools supplied by JASPER, VERIX supplied by REAL INTENT, 0-IN supplied by MENTOR CORPORATION, and others.. These software verification tools use written assertions that correspond to the rules established by the DRAM protocol and specification. These written assertions are further included in the code that forms the logic description for the buffer chip. By writing assertions that correspond to the desired behavior of the simulated DRAM circuit, a proof may be constructed that determines whether the desired design requirements are met. In this way, one may test various embodiments for compliance with a standard, multiple standards, or other design specification.
- an assertion may be written that no two DRAM control signals are allowed to be issued to an address, control and clock bus at the same time.
- the aforementioned algorithm may allow a designer to prove that the simulated DRAM circuit exactly meets the required standard or other design specification. If, for example, an address mapping that uses a common bus for data and a common bus for address results in a control and clock bus that does not meet a required specification, alternative designs for buffer chips with other bus arrangements or alternative designs for the interconnect between the buffer chips may be used and tested for compliance with the desired standard or other design specification.
- the high capacity DIMM 3400 may be implemented in the context of the architecture and environment of FIGS. 32 and/or 33A-F. Of course, however, the high capacity DIMM 3400 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- a high capacity DIMM 3400 may be created utilizing buffered stacks of DRAM circuits 3402.
- a DIMM 3400 may utilize a plurality of buffered stacks of DRAM circuits 3402 instead of individual DRAM circuits, thus increasing the capacity of the DIMM.
- the DIMM 3400 may include a register 3404 for address and operation control of each of the buffered stacks of DRAM circuits 3402. It should be noted that any desired number of buffered stacks of DRAM circuits 3402 may be utilized in conjunction with the DIMM 3400. Therefore, the configuration of the DIMM 3400, as shown, should not be construed as limiting in any way.
- the register 3404 may be substituted with an AMB (not shown), in the context of an FB-DIMM.
- FIG. 35 shows a timing design 3500 of a buffer chip that makes a buffered stack of DRAM circuits mimic longer CAS latency DRAM to a memory controller, in accordance with another embodiment.
- the design of the buffer chip may be implemented in the context of the architecture and environment of FIGS. 32-34 . Of course, however, the design of the buffer chip may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- any delay through a buffer chip may be made transparent to a memory controller of a host system (e.g. see the host system 3304 of FIGS. 33A-E , etc.) utilizing the buffer chip.
- the buffer chip may buffer a stack of DRAM circuits such that the buffered stack of DRAM circuits appears as at least one larger capacity DRAM circuit with higher CAS latency.
- Such delay may be a result of the buffer chip being located electrically between the memory bus of the host system and the stacked DRAM circuits, since most or all of the signals that connect the memory bus to the DRAM circuits pass through the buffer chip. A finite amount of time may therefore be needed for these signals to traverse through the buffer chip.
- industry standard protocols for memory e.g. (DDR SDRAM), DDR2 SDRAM, etc.
- DDR SDRAM register chips and advanced memory buffers
- Industry standard protocols for memory e.g. (DDR SDRAM), DDR2 SDRAM, etc.
- Such industry standard protocols define the properties of a register chip and AMB but not the properties of the buffer chip 3302, etc. Thus, the signal delay through the buffer chip may violate the specifications of industry standard protocols.
- the buffer chip may provide a one-half clock cycle delay between the buffer chip receiving address and control signals from the memory controller (or optionally from a register chip, an AMB, etc.) and the address and control signals being valid at the inputs of the stacked DRAM circuits.
- the data signals may also have a one-half clock cycle delay in traversing the buffer chip, either from the memory controller to the DRAM circuits or from the DRAM circuits to the memory controller.
- the one-half clock cycle delay set forth above is set forth for illustrative purposes only and thus should not be construed as limiting in any manner whatsoever.
- a one clock cycle delay, a multiple clock cycle delay (or fraction thereof), and/or any other delay amount is incorporated, for that matter.
- the aforementioned delay may be coordinated among multiple signals such that different signals are subject to time-shifting with different relative directions/magnitudes, in an organized fashion.
- the cumulative delay through the buffer chip (e.g. the sum of a first delay 3502 of the address and control signals through the buffer chip and a second delay 3504 of the data signals through the buffer chip) is j clock cycles.
- the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with a CAS latency 3508 of i + j clocks, where i is the native CAS latency of the DRAM circuits.
- the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with a CAS latency of 5 (i.e. 4 + 1).
- the buffer chip may make the buffered stack appear as one or more larger DRAM circuits with a CAS latency of 6 (i.e. 4 +2).
- FIG. 36 shows the write data timing 3600 expected by a DRAM circuit in a buffered stack, in accordance with yet another embodiment.
- the write data timing 3600 may be implemented in the context of the architecture and environment of FIGS. 32-35 . Of course, however, the write data timing 3600 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- Designing a buffer chip (e.g. see the buffer chip 3302 of FIGS. 33A-E , etc.) so that a buffered stack appears as at least one larger capacity DRAM circuit with higher CAS latency may, in some embodiments, create a problem with the timing of write operations.
- the DDR2 SDRAM protocol may specify that the write CAS latency is one less than the read CAS latency. Therefore, since the buffered stack appears as a DDR2 SDRAM with a read CAS latency of 6, the memory controller may use a write CAS latency of 5 (see 3602) when scheduling a write operation to the buffered stack.
- the DRAM circuits may require a write CAS latency of 3 (see 3604).
- the write data from the memory controller may arrive at the buffer chip later than when the DRAM circuits require the data.
- the buffer chip may delay such write operations to alleviate any of such timing problems. Such delay in write operations will be described in more detail with respect to FIG. 37 below.
- FIG. 37 shows write operations 3700 delayed by a buffer chip, in accordance with still yet another embodiment.
- the write operations 3700 may be implemented in the context of the architecture and environment of FIGS. 32-36 .
- the write operations 3700 may be used in any desired environment.
- the aforementioned definitions may apply during the present description.
- a buffer chip may provide an additional delay, over and beyond the delay of the address and control signals through the buffer chip, between receiving the write operation and address from the memory controller (and/or optionally from a register and/or AMB, etc.), and sending it to the DRAM circuits in the stack.
- the additional delay may be equal to j clocks, where j is the cumulative delay of the address and control signals through the buffer chip and the delay of the data signals through the buffer chip.
- the write address and operation may be delayed by a register chip on a DIMM, by an AMB, or by the memory controller.
- the early write data 3800 may be implemented in the context of the architecture and environment of FIGS. 32-36 .
- the early write data 3800 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- an AMB on an FB-DIMM may be designed to send write data earlier to buffered stacks instead of delaying the write address and operation, as described in reference to FIG. 37 .
- an early write latency 3802 may be utilized to send the write data to the buffered stack.
- correct timing of the write operation at the inputs of the DRAM circuits in the stack may be ensured.
- a buffer chip (e.g. see the buffer chip 3302 of FIGS. 33A-E , etc.) may have a cumulative latency of 2, in which case, the AMB may send the write data 2 clock cycles earlier to the buffered stack. It should be noted that this scheme may not be possible in the case of registered DIMMs since the memory controller sends the write data directly to the buffered stacks. As an option, a memory controller may be designed to send write data earlier so that write operations have the correct timing at the input of the DRAM circuits in the stack without requiring the buffer chip to delay the write address and operation.
- FIG. 39 shows address bus conflicts 3900 caused by delayed write operations, in accordance with yet another embodiment.
- the delaying of the write addresses and operations may be performed by a buffer chip, or optionally a register, AMB, etc., in a manner that is completely transparent to the memory controller of a host system.
- the memory controller since the memory controller is unaware of this delay, it may schedule subsequent operations, such as for example activate or precharge operations, which may collide with the delayed writes on the address bus from the buffer chip to the DRAM circuits in the stack.
- an activate operation 3902 may interfere with a write operation 3904 that has been delayed.
- a delay of activate operations may be employed, as will be described in further detail with respect to FIG. 40 .
- FIGS. 40A-B show variable delays 4000 and 4050 of operations through a buffer chip, in accordance with another embodiment.
- the variable delays 4000 and 4050 may be implemented in the context of the architecture and environment of FIGS. 32-39 .
- the variable delays 4000 and 4050 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- a buffer chip may delay the precharge/activate operations 4052A-C/4002A-C.
- the buffer chip may make the buffered stack appear as one or more larger capacity DRAM circuits that have longer tRCD (RAS to CAS delay) and tRP (i.e. precharge time) parameters.
- the buffered stack may appear as one or more larger capacity DRAM circuits with a read CAS latency of 6 clock cycles to the memory controller.
- the buffered stack may appear as one or more larger capacity DRAM circuits with tRCD of 6 clock cycles and tRP of 6 clock cycles in order to allow a buffer chip (e.g., see the buffer chip 3302 of FIGS.
- the memory controller may schedule a column operation to a bank 6 clock cycles after an activate (e.g. row) operation to the same bank.
- the DRAM circuits in the stack may actually have a tRCD of 4 clock cycles.
- the buffer chip may have the ability to delay the activate operation by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits in the stack while still ensuring correct read and write timing on the channel between the memory controller and the buffered stack.
- the buffer chip may issue the activate operation to the DRAM circuits one, two, or three clock cycles after it receives the activate operation from the memory controller, register, or AMB.
- the actual delay of the activate operation through the buffer chip may depend on the presence or absence of other DRAM operations that may conflict with the activate operation, and may optionally change from one activate operation to another.
- the buffered stack may appear to the memory controller as at least one larger capacity DRAM circuit with a tRP of 6 clock cycles, the memory controller may schedule a subsequent activate (e.g. row) operation to a bank a minimum of 6 clock cycles after issuing a precharge operation to that bank.
- the buffer chip may have the ability to delay issuing the precharge operation to the DRAM circuits in the stack by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits in the stack.
- the buffer chip may still delay issuing a precharge operation in order to satisfy the tRAS requirement of the DRAM circuits.
- the precharge operation to the same bank may be delayed by the buffer chip to satisfy the tRAS requirement of the DRAM circuits.
- the buffer chip may issue the precharge operation to the DRAM circuits one, two, or three clock cycles after it receives the precharge operation from the memory controller, register, or AMB.
- the actual delay of the precharge operation through the buffer chip may depend on the presence or absence of address bus conflicts or tRAS violations, and may change from one precharge operation to another.
- FIG. 41 shows a buffered stack 4100 of four 512Mb DRAM circuits mapped to a single 2Gb DRAM circuit, in accordance with yet another embodiment.
- the buffered stack 4100 may be implemented in the context of the architecture and environment of FIGS. 32-40 . Of course, however, the buffered stack 4100 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- the multiple DRAM circuits 4102A-D buffered in the stack by the buffer chip 4104 may appear as at least one larger capacity DRAM circuit to the memory controller.
- the combined power dissipation of such DRAM circuits 4102A-D may be much higher than the power dissipation of a monolithic DRAM of the same capacity.
- the buffered stack may consist of four 512Mb DDR2 SDRAM circuits that appear to the memory controller as a single 2Gb DDR2 SDRAM circuit.
- the power dissipation of all four DRAM circuits 4102A-D in the stack may be much higher than the power dissipation of a monolithic 2Gb DDR2 SDRAM.
- a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM built using monolithic DRAM circuits. This increased power dissipation may limit the widespread adoption of DIMMs that use buffered stacks.
- the DRAM circuits 4102A-D may be opportunistically placed in a precharge power down mode using the clock enable (CKE) pin of the DRAM circuits 4102A-D.
- CKE clock enable
- a single rank registered DIMM R-DIMM
- a 2Gb DDR2 SDRAM may generally have eight banks as specified by JEDEC. Therefore, the buffer chip 4104 may map each 512Mb DRAM circuit in the stack to two banks of the equivalent 2Gb DRAM, as shown.
- the memory controller of the host system may open and close pages in the banks of the DRAM circuits 4102A-D based on the memory requests it receives from the rest of the system.
- no more than one page may be able to be open in a bank at any given time.
- a DRAM circuit 4102A-D since each DRAM circuit 4102A-D in the stack is mapped to two banks of the equivalent larger DRAM, at any given time a DRAM circuit 4102A-D may have two open pages, one open page, or no open pages.
- the power management scheme may place that DRAM circuit 4102A-D in the precharge power down mode by de-asserting its CKE input.
- the CKE inputs of the DRAM circuits 4102A-D in a stack may be controlled by the buffer chip 4104, by a chip on an R-DIMM, by an AMB on a FB-DIMM, or by the memory controller in order to implement the power management scheme described hereinabove.
- this power management scheme may be particularly efficient when the memory controller implements a closed page policy.
- Another optional power management scheme may include mapping a plurality of DRAM circuits to a single bank of the larger capacity DRAM seen by the memory controller. For example, a buffered stack of sixteen x4 256Mb DDR2 SDRAM circuits may appear to the memory controller as a single x4 4Gb DDR2 SDRAM circuit. Since a 4Gb DDR2 SDRAM circuit is specified by JEDEC to have eight banks, each bank of the 4Gb DDR2 SDRAM circuit may be 512Mb. Thus, two of the 256Mb DDR2 SDRAM circuits may be mapped by the buffer chip 4104 to a single bank of the equivalent 4Gb DDR2 SDRAM circuit seen by the memory controller.
- bank 0 of the 4Gb DDR2 SDRAM circuit may be mapped by the buffer chip to two 256Mb DDR2 SDRAM circuits (e.g. DRAM A and DRAM B) in the stack.
- DRAM A and DRAM B 256Mb DDR2 SDRAM circuits
- DRAM B may be placed in the precharge power down mode by de-asserting its CKE input.
- DRAM A may be placed in the precharge power down mode by de-asserting its CKE input.
- FIG. 42 illustrates a method 4200 for refreshing a plurality of memory circuits, in accordance with still yet another embodiment.
- the method 4200 may be implemented in the context of the architecture and environment of any one or more of FIGS. 32-41 .
- the method 4200 may be carried out by the interface circuit 3202 of FIG. 32 .
- the method 4200 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.
- a refresh control signal is received in operation 4202.
- such refresh control signal may, for example, be received from a memory controller, where such memory controller intends to refresh a simulated memory circuit(s).
- a plurality of refresh control signals are sent to a plurality of the memory circuits (e.g. see the memory circuits 3204A, 3204B, 3204N of FIG. 32 , etc.), at different times. See operation 4204.
- Such refresh control signals may or may not each include the refresh control signal of operation 4202 or an instantiation/copy thereof.
- the refresh control signals may each include refresh control signals that are different in at least one aspect (e.g. format, content, etc.).
- At least one first refresh control signal may be sent to a first subset (e.g. of one or more) of the memory circuits at a first time and at least one second refresh control signal may be sent to a second subset (e.g. of one or more) of the memory circuits at a second time.
- a single refresh control signal may be sent to a plurality of the memory circuits (e.g. a group of memory circuits, etc.).
- a plurality of the refresh control signals may be sent to a plurality of the memory circuits.
- refresh control signals may be sent individually or to groups of memory circuits, as desired.
- the refresh control signals may be sent after a delay in accordance with a particular timing.
- the timing in which the refresh control signals are sent to the memory circuits may be selected to minimize a current draw. This may be accomplished in various embodiments by staggering a plurality of refresh control signals.
- the timing in which the refresh control signals are sent to the memory circuits may be selected to comply with a tRFC parameter associated with each of the memory circuits.
- DRAM circuits of any desired size may receive periodic refresh operations to maintain the integrity of data therein.
- a memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits.
- a refresh control signal is issued to a DRAM circuit, a minimum time (e.g. denoted by tRFC) may be required to elapse before another control signal may be issued to that DRAM circuit.
- the tRFC parameter may therefore increase as the size of the DRAM circuit increases.
- the buffer chip When the buffer chip receives a refresh control signal from the memory controller, it may refresh the smaller DRAM circuits within the span of time specified by the tRFC associated with the emulated DRAM circuit. Since the tRFC of the emulated DRAM circuits is larger than that of the smaller DRAM circuits, it may not be necessary to issue refresh control signals to all of the smaller DRAM circuits simultaneously. Refresh control signals may be issued separately to individual DRAM circuits or may be issued to groups of DRAM circuits, provided that the tRFC requirement of the smaller DRAM circuits is satisfied by the time the tRFC of the emulated DRAM circuits has elapsed. In use, the refreshes may be spaced to minimize the peak current draw of the combination buffer chip and DRAM circuit set during a refresh operation.
Abstract
Description
- This invention relates generally to memory.
- In one embodiment, a memory subsystem is provided including an interface circuit adapted for coupling with a plurality of memory circuits and a system. The interface circuit is operable to interface the memory circuits and the system for emulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of memory circuits. Such aspect includes a signal, a capacity, a timing, and/or a logical interface.
- In another embodiment, a memory subsystem is provided including an interface circuit adapted for communication with a system and a majority of address or control signals of a first number of memory circuits. The interface circuit includes emulation logic for emulating at least one memory circuit of a second number.
- In yet another embodiment, a memory circuit power management system and method are provided. In use, an interface circuit is in communication with a plurality of physical memory circuits and a system. The interface circuit is operable to interface the physical memory circuits and the system for simulating at least one virtual memory circuit with a first power behavior that is different from a second power behavior of the physical memory circuits.
- In still yet another embodiment, a memory circuit power management system and method are provided. In use, an interface circuit is in communication with a plurality of memory circuits and a system. The interface circuit is operable to interface the memory circuits and the system for performing a power management operation in association with at least a portion of the memory circuits. Such power management operation is performed during a latency associated with one or more commands directed to at least a portion of the memory circuits.
- In even another embodiment, an apparatus and method are provided for communicating with a plurality of physical memory circuits. In use, at least one virtual memory circuit is simulated where at least one aspect (e.g. power-related aspect, etc.) of such virtual memory circuit(s) is different from at least one aspect of at least one of the physical memory circuits. Further, in various embodiments, such simulation may be carried out by a system (or component thereof), an interface circuit, etc.
- In another embodiment, an power saving system and method are provided. In use, at least one of a plurality of memory circuits is identified that is not currently being accessed. In response to the identification of the at least one memory circuit, a power saving operation is initiated in association with the at least one memory circuit.
-
-
FIG. 1 shows a system coupled to multiple memory circuits and an interface circuit according to one embodiment of this invention. -
FIG. 2 shows a buffered stack of DRAM circuits each having a dedicated data path from the buffer chip and sharing a single address, control, and clock bus. -
FIG. 3 shows a buffered stack of DRAM circuits having two address, control, and clock busses and two data busses. -
FIG. 4 shows a buffered stack of DRAM circuits having one address, control, and clock bus and two data busses. -
FIG. 5 shows a buffered stack of DRAM circuits having one address, control, and clock bus and one data bus. -
FIG. 6 shows a buffered stack of DRAM circuits in which the buffer chip is located in the middle of the stack of DRAM chips. -
FIG. 7 is a flow chart showing one method of storing information. -
FIG. 8 shows a high capacity DIMM using buffered stacks of DRAM chips according to one embodiment of this invention. -
FIG. 9 is a timing diagram showing one embodiment of how the buffer chip makes a buffered stack of DRAM circuits appear to the system or memory controller to use longer column address strobe (CAS) latency DRAM chips than is actually used by the physical DRAM chips. -
FIG. 10 shows a timing diagram showing the write data timing expected by DRAM in a buffered stack, in accordance with another embodiment of this invention. -
FIG. 11 is a timing diagram showing how write control signals are delayed by a buffer chip in accordance with another embodiment of this invention. -
FIG. 12 is a timing diagram showing early write data from a memory controller or an advanced memory buffer (AMB) according to yet another embodiment of this invention. -
FIG. 13 is a timing diagram showing address bus conflicts caused by delayed write operations. -
FIG. 14 is a timing diagram showing variable delay of an activate operation through a buffer chip. -
FIG. 15 is a timing diagram showing variable delay of a precharge operation through a buffer chip. -
FIG. 16 shows a buffered stack of DRAM circuits and the buffer chip which presents them to the system as if they were a single, larger DRAM circuit, in accordance with one embodiment of this invention. -
FIG. 17 is a flow chart showing a method of refreshing a plurality of memory circuits, in accordance with one embodiment of this invention. -
FIG. 18 shows a block diagram of another embodiment of the invention. -
FIG. 19 illustrates a multiple memory circuit framework, in accordance with one embodiment. -
FIGS. 20A-E show a stack of dynamic random access memory (DRAM) circuits that utilize one or more interface circuits, in accordance with various embodiments. -
FIGS. 21A-D show a memory module which uses dynamic random access memory (DRAM) circuits with various interface circuits, in accordance with different embodiments. -
FIGS. 22A-E show a memory module which uses DRAM circuits with an advanced memory buffer (AMB) chip and various other interface circuits, in accordance with various embodiments. -
FIG. 23 shows a system in which four 512Mb DRAM circuits are mapped to a single 2Gb DRAM circuit, in accordance with yet another embodiment. -
FIG. 24 shows a memory system comprising FB-DIMM modules using DRAM circuits with AMB chips, in accordance with another embodiment. -
FIG. 25 illustrates a multiple memory circuit framework, in accordance with one embodiment. -
FIG. 26 shows an exemplary embodiment of an interface circuit including a register and a buffer that is operable to interface memory circuits and a system. -
FIG. 27 shows an alternative exemplary embodiment of an interface circuit including a register and a buffer that is operable to interface memory circuits and a system. -
FIG. 28 shows an exemplary embodiment of an interface circuit including an advanced memory buffer (AMB) and a buffer that is operable to interface memory circuits and a system. -
FIG. 29 shows an exemplary embodiment of an interface circuit including an AMB, a register, and a buffer that is operable to interface memory circuits and a system. -
FIG. 30 shows an alternative exemplary embodiment of an interface circuit including an AMB and a buffer that is operable to interface memory circuits and a system. -
FIG. 31 shows an exemplary embodiment of a plurality of physical memory circuits that are mapped by a system, and optionally an interface circuit, to appear as a virtual memory circuit with one aspect that is different from that of the physical memory circuits. -
FIG. 32 illustrates a multiple memory circuit framework, in accordance with one embodiment. -
FIGS. 33A-33E show various configurations of a buffered stack of dynamic random access memory (DRAM) circuits with a buffer chip, in accordance with various embodiments. -
FIG. 33F illustrates a method for storing at least a portion of information received in association with a first operation for use in performing a second operation, in accordance with still another embodiment. -
FIG. 34 shows a high capacity dual in-line memory module (DIMM) using buffered stacks, in accordance with still yet another embodiment. -
FIG. 35 shows a timing design of a buffer chip that makes a buffered stack of DRAM circuits mimic longer column address strobe (CAS) latency DRAM to a memory controller, in accordance with another embodiment. -
FIG. 36 shows the write data timing expected by DRAM in a buffered stack, in accordance with yet another embodiment. -
FIG. 37 shows write control signals delayed by a buffer chip, in accordance with still yet another embodiment. -
FIG. 38 shows early write data from an advanced memory buffer (AMB), in accordance with another embodiment. -
FIG. 39 shows address bus conflicts caused by delayed write operations, in accordance with yet another embodiment. -
FIGS. 40A-B show variable delays of operations through a buffer chip, in accordance with another embodiment. -
FIG. 41 shows a buffered stack of four 512Mb DRAM circuits mapped to a single 2Gb DRAM circuit, in accordance with yet another embodiment. -
FIG. 42 illustrates a method for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. - Various embodiments are set forth below. It should be noted that the claims corresponding to each of such embodiments should be construed in terms of the relevant description set forth herein. If any definitions, etc. set forth herein are contradictory with respect to terminology of certain claims, such terminology should be construed in terms of the relevant description.
-
FIG. 1 illustrates asystem 100 including asystem device 106 coupled to aninterface circuit 102, which is in turn coupled to a plurality ofphysical memory circuits 104A-N. The physical memory circuits may be any type of memory circuits. In some embodiments, each physical memory circuit is a separate memory chip. For example, each may be a DDR2 DRAM. In some embodiments, the memory circuits may be symmetrical, meaning each has the same capacity, type, speed, etc., while in other embodiments they may be asymmetrical. For ease of illustration only, three such memory circuits are shown, but actual embodiments may use any plural number of memory circuits. As will be discussed below, the memory chips may optionally be coupled to a memory module (not shown), such as a DIMM. - The system device may be any type of system capable of requesting and/or initiating a process that results in an access of the memory circuits. The system may include a memory controller (not shown) through which it accesses the memory circuits.
- The interface circuit may include any circuit or logic capable of directly or indirectly communicating with the memory circuits, such as a buffer chip, advanced memory buffer (AMB) chip, etc. The interface circuit interfaces a plurality of
signals 108 between the system device and the memory circuits. Such signals may include, for example, data signals, address signals, control signals, clock signals, and so forth. In some embodiments, all of the signals communicated between the system device and the memory circuits are communicated via the interface circuit. In other embodiments, someother signals 110 are communicated directly between the system device (or some component thereof, such as a memory controller, an AMB, or a register) and the memory circuits, without passing through the interface circuit. In some such embodiments, the majority of signals are communicated via the interface circuit, such that L>M. - As will be explained in greater detail below, the interface circuit presents to the system device an interface to emulated memory devices which differ in some aspect from the physical memory circuits which are actually present. For example, the interface circuit may tell the system device that the number of emulated memory circuits is different than the actual number of physical memory circuits. The terms "emulating", "emulated", "emulation", and the like will be used in this disclosure to signify emulation, simulation, disguising, transforming, converting, and the like, which results in at least one characteristic of the memory circuits appearing to the system device to be different than the actual, physical characteristic. In some embodiments, the emulated characteristic may be electrical in nature, physical in nature, logical in nature (e.g. a logical interface, etc.), pertaining to a protocol, etc. An example of an emulated electrical characteristic might be a signal, or a voltage level. An example of an emulated physical characteristic might be a number of pins or wires, a number of signals, or a memory capacity. An example of an emulated protocol characteristic might be a timing, or a specific protocol such as DDR3. In the case of an emulated signal, such signal may be a control signal such as an address signal, a data signal, or a control signal associated with an activate operation, precharge operation, write operation, mode register read operation, refresh operation, etc. The interface circuit may emulate the number of signals, type of signals, duration of signal assertion, and so forth. It may combine multiple signals to emulate another signal.
- The interface circuit may present to the system device an emulated interface to e.g. DDR3 memory, while the physical memory chips are, in fact, DDR2 memory. The interface circuit may emulate an interface to one version of a protocol such as DDR2 with 5-5-5 latency timing, while the physical memory chips are built to another version of the protocol such as DDR2 with 3-3-3 latency timing. The interface circuit may emulate an interface to a memory having a first capacity that is different than the actual combined capacity of the physical memory chips.
- An emulated timing may relate to latency of e.g. a column address strobe (CAS) latency, a row address to column address latency (tRCD), a row precharge latency (tRP), an activate to precharge latency (tRAS), and so forth. CAS latency is related to the timing of accessing a column of data. tRCD is the latency required between the row address strobe (RAS) and CAS. tRP is the latency required to terminate an open row and open access to the next row. tRAS is the latency required to access a certain row of data between an activate operation and a precharge operation.
- The interface circuit may be operable to receive a signal from the system device and communicate the signal to one or more of the memory circuits after a delay (which may be hidden from the system device). Such delay may be fixed, or in some embodiments it may be variable. If variable, the delay may depend on e.g. a function of the current signal or a previous signal, a combination of signals, or the like. The delay may include a cumulative delay associated with any one or more of the signals. The delay may result in a time shift of the signal forward or backward in time with respect to other signals. Different delays may be applied to different signals. The interface circuit may similarly be operable to receive a signal from a memory circuit and communicate the signal to the system device after a delay.
- The interface circuit may take the form of, or incorporate, or be incorporated into, a register, an AMB, a buffer, or the like, and may comply with Joint Electron Device Engineering Council (JEDEC) standards, and may have forwarding, storing, and/or buffering capabilities.
- In some embodiments, the interface circuit may perform operations without the system device's knowledge. One particularly useful such operation is a power-saving operation. The interface circuit may identify one or more of the memory circuits which are not currently being accessed by the system device, and perform the power saving operation on those. In one such embodiment, the identification may involve determining whether any page (or other portion) of memory is being accessed. The power saving operation may be may be a power down operation, such as a precharge power down operation.
- The interface circuit may include one or more devices which together perform the emulation and related operations. The interface circuit may be coupled or packaged with the memory devices, or with the system device or a component thereof, or separately. In one embodiment, the memory circuits and the interface circuit are coupled to a DIMM.
-
FIG. 2 illustrates one embodiment of asystem 200 including a system device (e.g. host system 204, etc.) which communicates address, control, clock, and data signals with amemory subsystem 201 via an interface. - The memory subsystem includes a
buffer chip 202 which presents the host system with emulated interface to emulated memory, and a plurality of physical memory circuits which, in the example shown, areDRAM chips 206A-D. In one embodiment, the DRAM chips are stacked, and the buffer chip is placed electrically between them and the host system. Although the embodiments described here show the stack consisting of multiple DRAM circuits, a stack may refer to any collection of memory circuits (e.g. DRAM circuits, flash memory circuits, or combinations of memory circuit technologies, etc.). - The buffer chip buffers communicates signals between the host system and the DRAM chips, and presents to the host system an emulated interface to present the memory as though it were a smaller number of larger capacity DRAM chips, although in actuality there is a larger number of smaller capacity DRAM chips in the memory subsystem. For example, there may be eight 512Mb physical DRAM chips, but the buffer chip buffers and emulates them to appear as a single 4Gb DRAM chip, or as two 2Gb DRAM chips. Although the drawing shows four DRAM chips, this is for ease of illustration only; the invention is, of course, not limited to using four DRAM chips.
- In the example shown, the buffer chip is coupled to send address, control, and clock signals 208 to the DRAM chips via a single, shared address, control, and clock bus, but each DRAM chip has its own, dedicated data path for sending and receiving
data signals 210 to/from the buffer chip. - Throughout this disclosure, the
reference number 1 will be used to denote the interface between the host system and the buffer chip, thereference number 2 will be used to denote the address, control, and clock interface between the buffer chip and the physical memory circuits, and thereference number 3 will be used to denote the data interface between the buffer chip and the physical memory circuits, regardless of the specifics of how any of those interfaces is implemented in the various embodiments and configurations described below. In the configuration shown inFIG. 2 , there is a single address, control, andclock interface channel 2 and fourdata interface channels 3; this implementation may thus be said to have a "1A4D" configuration (wherein "1A" means one address, control, and clock channel ininterface 2, and "4D" means four data channels in interface 3). - In the example shown, the DRAM chips are physically arranged on a single side of the buffer chip. The buffer chip may, optionally, be a part of the stack of DRAM chips, and may optionally be the bottommost chip in the stack. Or, it may be separate from the stack.
-
FIG. 3 illustrates another embodiment of asystem 301 in which thebuffer chip 303 is interfaced to ahost system 304 and is coupled to theDRAM chips 307A-307D somewhat differently than in the system ofFIG. 2 . There are a plurality of shared address, control, andclock busses - Each shared bus has two or more DRAM chips coupled to it. As shown, the sharing need not necessarily be the same in the data busses as it is in the address, control, and clock busses. This embodiment has a "2A2D" configuration.
-
FIG. 4 illustrates another embodiment of asystem 411 in which thebuffer chip 413 is interfaced to ahost system 404 and is coupled to theDRAM chips 417A-417D somewhat differently than in the system ofFIGS. 2 or3 . There is a shared address, control, andclock bus 419, and a plurality of shared data busses 415A and 415B. Each shared bus has two or more DRAM chips coupled to it. This implementation has a "1A2D" configuration. -
FIG. 5 illustrates another embodiment of asystem 521 in which thebuffer chip 523 is interfaced to ahost system 504 and is coupled to theDRAM chips 527A-527D somewhat differently than in the system ofFIGS. 2 through 4 . There is a shared address, control, and andclock bus 529, and a shareddata bus 525. This implementation has a "1A1D" configuration. -
FIG. 6 illustrates another embodiment of asystem 631 in which thebuffer chip 633 is interfaced to ahost system 604 and is coupled to theDRAM chips 637A-637D somewhat differently than in the system ofFIGS. 2 through 5 . There is a plurality of shared address, control, andclock busses dedicated data paths 635. - Each shared bus has two or more DRAM chips coupled to it. Further, in the example shown, the DRAM chips are physically arranged on both sides of the buffer chip. There may be, for example, sixteen DRAM chips, with the eight DRAM chips on each side of the buffer chip arranged in two stacks of four chips each. This implementation has a "2A4D" configuration.
-
FIGS. 2 through 6 are not intended to be an exhaustive listing of all possible permutations of data paths, busses, and buffer chip configurations, and are only illustrative of some ways in which the host system device can be in electrical contact only with the load of the buffer chip and thereby be isolated from whatever physical memory circuits, data paths, busses, etc. exist on the (logical) other side of the buffer chip. -
FIG. 7 illustrates one embodiment of amethod 700 for storing at least a portion of information received in association with a first operation, for use in performing a second operation. Such a method may be practiced in a variety of systems, such as, but not limited to, those ofFIGS. 1-6 . For example, the method may be performed by the interface circuit ofFIG. 1 or the buffer chip ofFIG. 2 . - Initially, first information is received (702) in association with a first operation to be performed on at least one of the memory circuits (DRAM chips). Depending on the particular implementation, the first information may be received prior to, simultaneously with, or subsequent to the instigation of the first operation. The first operation may be, for example, a row operation, in which case the first information may include e.g. address values received by the buffer chip via the address bus from the host system. At least a portion of the first information is then stored (704).
- The buffer chip also receives (706) second information associated with a second operation. For convenience, this receipt is shown as being after the storing of the first information, but it could also happen prior to or simultaneously with the storing. The second operation may be, for example, a column operation.
- Then, the buffer chip performs (708) the second operation, utilizing the stored portion of the first information, and the second information.
- If the buffer chip is emulating a memory device which has a larger capacity than each of the physical DRAM chips in the stack, the buffer chip may receive from the host system's memory controller more address bits than are required to address any given one of the DRAM chips. In this instance, the extra address bits may be decoded by the buffer chip to individually select the DRAM chips, utilizing separate chip select signals (not shown) to each of the DRAM chips in the stack.
- For example, a stack of four
x4 1 Gb DRAM chips behind the buffer chip may appear to the host system as a single x4 4Gb DRAM circuit, in which case the memory controller may provide sixteen row address bits and three bank address bits during a row operation (e.g. an activate operation), and provide eleven column address bits and three bank address bits during a column operation (e.g. a read or write operation). However, the individual DRAM chips in the stack may require only fourteen row address bits and three bank address bits for a row operation, and eleven column address bits and three bank address bits during a column operation. As a result, during a row operation (the first operation in the method 702), the buffer chip may receive two address bits more than are needed by any of the DRAM chips. The buffer chip stores (704) these two extra bits during the row operation (in addition to using them to select the correct one of the DRAM chips), then uses them later, during the column operation, to select the correct one of the DRAM chips. - The mapping between a system address (from the host system to the buffer chip) and a device address (from the buffer chip to a DRAM chip) may be performed in various manners. In one embodiment, lower order system row address and bank address bits may be mapped directly to the device row address and bank address bits, with the most significant system row address bits (and, optionally, the most significant bank address bits) being stored for use in the subsequent column operation. In one such embodiment, what is stored is the decoded version of those bits; in other words, the extra bits may be stored either prior to or after decoding. The stored bits may be stored, for example, in an internal lookup table (not shown) in the buffer chip, for one or more clock cycles.
- As another example, the buffer chip may have four 512Mb DRAM chips with which it emulates a single 2Gb DRAM chip. The system will present fifteen row address bits, from which the buffer chip may use the fourteen low order bits (or, optionally, some other set of fourteen bits) to directly address the DRAM chips. The system will present three bank address bits, from which the buffer chip may use the two low order bits (or, optionally, some other set of two bits) to directly address the DRAM chips. During a row operation, the most significant bank address bit (or other unused bit) and the most significant row address bit (or other unused bit) are used to generate the four DRAM chip select signals, and are stored for later reuse. And during a subsequent column operation, the stored bits are again used to generate the four DRAM chip select signals. Optionally, the unused bank address is not stored during the row operation, as it will be re-presented during the subsequent column operation.
- As yet another example, addresses may be mapped between four 1Gb DRAM circuits to emulate a single 4Gb DRAM circuit. Sixteen row address bits and three bank address bits come from the host system, of which the low order fourteen address bits and all three bank address bits are mapped directly to the DRAM circuits. During a row operation, the two most significant row address bits are decoded to generate four chip select signals, and are stored using the bank address bits as the index. During the subsequent column operation, the stored row address bits are again used to generate the four chip select signals.
- A particular mapping technique may be chosen, to ensure that there are no unnecessary combinational logic circuits in the critical timing path between the address input pins and address output pins of the buffer chip. Corresponding combinational logic circuits may instead be used to generate the individual chip select signals. This may allow the capacitive loading on the address outputs of the buffer chip to be much higher than the loading on the individual chip select signal outputs of the buffer chip.
- In another embodiment, the address mapping may be performed by the buffer chip using some of the bank address signals from the host system to generate the chip select signals. The buffer chip may store the higher order row address bits during a row operation, using the bank address as the index, and then use the stored address bits as part of the DRAM circuit bank address during a column operation.
- For example, four 512Mb DRAM chips may be used in emulating a single 2Gb DRAM. Fifteen row address bits come from the host system, of which the low order fourteen are mapped directly to the DRAM chips. Three bank address bits come from the host system, of which the least significant bit is used as a DRAM circuit bank address bit for the DRAM chips. The most significant row address bit may be used as an additional DRAM circuit bank address bit. During a row operation, the two most significant bank address bits are decoded to generate the four chip select signals. The most significant row address bit may be stored during the row operation, and reused during the column operation with the least significant bank address bit, to form the DRAM circuit bank address.
- The column address from the host system memory controller may be mapped directly as the column address to the DRAM chips in the stack, since each of the DRAM chips may have the same page size, regardless any differences in the capacities of the (asymmetrical) DRAM chips.
- Optionally, address bit A[10] may be used by the memory controller to enable or disable auto-precharge during a column operation, in which case the buffer chip may forward that bit to the DRAM circuits without any modification during a column operation.
- In various embodiments, it may be desirable to determine whether the simulated DRAM circuit behaves according to a desired DRAM standard or other design specification. Behavior of many DRAM circuits is specified by the JEDEC standards, and it may be desirable to exactly emulate a particular JEDEC standard DRAM. The JEDEC standard defines control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals. For example, the JEDEC specification for DDR2 DRAM is known as JESD79-2B. If it is desired to determine whether a standard is met, the following algorithm may be used. Using a set of software verification tools, it checks for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as the desired standard or other design specification. Examples of suitable verification tools include: Magellan, supplied by Synopsys, Inc. of 700 E. Middlefield Rd., Mt. View, California 94043; Incisive, supplied by Cadence Design Systems, Inc., of 2655 Sealy Ave., San Jose, California 95134; tools supplied by Jasper Design Automation, Inc. of 100
View St. # 100, Mt. View, California 94041; Verix, supplied by Real Intent, Inc., of 505 N.Mathilda Ave. # 210, Sunnyvale, California 94085; 0-In, supplied by Mentor Graphics Corp. of 8005 SW Boeckman Rd., Wilsonville, Oregon 97070; and others. These software verification tools use written assertions that correspond to the rules established by the particular DRAM protocol and specification. These written assertions are further included in the code that forms the logic description for the buffer chip. By writing assertions that correspond to the desired behavior of the emulated DRAM circuit, a proof may be constructed that determines whether the desired design requirements are met. - For instance, an assertion may be written that no two DRAM control signals are allowed to be issued to an address, control, and clock bus at the same time. Although one may know which of the various buffer chip / DRAM stack configurations and address mappings (such as those described above) are suitable, the verification process allows a designer to prove that the emulated DRAM circuit exactly meets the required standard etc. If, for example, an address mapping that uses a common bus for data and a common bus for address, results in a control and clock bus that does not meet a required specification, alternative designs for buffer chips with other bus arrangements or alternative designs for the sideband signal interconnect between two or more buffer chips may be used and tested for compliance. Such sideband signals convey the power management signals, for example.
-
FIG. 8 illustrates ahigh capacity DIMM 800 using a plurality of buffered stacks ofDRAM circuits 802 and aregister device 804, according to one embodiment of this invention. The register performs the addressing and control of the buffered stacks. In some embodiments, the DIMM may be an FB-DIMM, in which case the register is an AMB. In one embodiment the emulation is performed at the DIMM level. -
FIG. 9 is a timing diagram illustrating atiming design 900 of a buffer chip which makes a buffered stack of DRAM chips mimic a larger DRAM circuit having longer CAS latency, in accordance with another embodiment of this invention. Any delay through a buffer chip may be made transparent to the host system's memory controller, by using such a method. Such a delay may be a result of the buffer chip being located electrically between the memory bus of the host system and the stacked DRAM circuits, since some or all of the signals that connect the memory bus to the DRAM circuits pass through the buffer chip. A finite amount of time may be needed for these signals to traverse through the buffer chip. With the exception of register chips and AMBs, industry standard memory protocols may not comprehend the buffer chip that sits between the memory bus and the DRAM chips. Industry standards narrowly define the properties of a register chip and an AMB, but not the properties of the buffer chip of this embodiment. Thus, any signal delay caused by the buffer chip may cause a violation of the industry standard protocols. - In one embodiment, the buffer chip may cause a one-half clock cycle delay between the buffer chip receiving address and control signals from the host system memory controller (or, optionally, from a register chip or an AMB), and the address and control signals being valid at the inputs of the stacked DRAM circuits. Data signals may also have a one-half clock cycle delay in either direction to/from the host system. Other amounts of delay are, of course, possible, and the half-clock cycle example is for illustration only.
- The cumulative delay through the buffer chip is the sum of a delay of the address and control signals and a delay of the data signals.
FIG. 9 illustrates an example where the buffer chip is using DRAM chips having a native CAS latency of i clocks, and the buffer chip delay is j clocks, thus the buffer chip emulates a DRAM having a CAS latency of i+j clocks. In the example shown, the DRAM chips have anative CAS latency 906 of four clocks (from t1 to t5), and the total latency through the buffer chip is two clocks (oneclock delay 902 from t0 to t1 for address and control signals, plus oneclock delay 904 from t5 to t6 for data signals), and the buffer chip emulates a DRAM having a sixclock CAS latency 908. - In
FIG. 9 (and other timing diagrams), thereference numbers FIG. 9 : the "Clock" signal shown as a square wave on the uppermost waveform is indicated as belonging to theinterface 1 between the host system and the buffer chip; the "Control Input to Buffer" signal is also part of theinterface 1; the "Control Input to DRAM" waveform is part of theinterface 2 from the buffer chip to the physical memory circuits; the "Data Output from DRAM" waveform is part of theinterface 3 from the physical memory circuits to the buffer chip; and the "Data Output from Buffer" shown in the lowermost waveform is part of theinterface 1 from the buffer chip to the host system. -
FIG. 10 is a timing diagram illustrating atiming design 1000 of write data timing expected by a DRAM circuit in a buffered stack. Emulation of a larger capacity DRAM circuit having higher CAS latency (as inFIG. 9 ) may, in some implementations, create a problem with the timing of write operations. For example, with respect to a buffered stack of DDR2 SDRAM chips with a read CAS latency of four clocks which are used in emulating a single larger DDR2 SDRAM with a read CAS latency of six clocks, the DDR2 SDRAM protocol may specify that thewrite CAS latency 1002 is one less than the read CAS latency. Therefore, since the buffered stack appears as a DDR2 SDRAM with a read CAS latency of six clocks, the memory controller may use a buffered stack write CAS latency of fiveclocks 1004 when scheduling a write operation to the memory. - In the specific example shown, the memory controller issues the write operation at t0. After a one clock cycle delay through the buffer chip, the write operation is issued to the DRAM chips at t1. Because the memory controller believes it is connected to memory having a read CAS latency of six clocks and thus a write CAS latency of five clocks, it issues the write data at time t0+5 = t5. But because the physical DRAM chips have a read CAS latency of four clocks and thus a write CAS latency of three clocks, they expect to receive the write data at time t1+3 = t4. Hence the problem, which the buffer chip may alleviate by delaying write operations.
- The waveform "Write Data Expected by DRAM" is not shown as belonging to
interface 1,interface 2, orinterface 3, for the simple reason that there is no such signal present in any of those interfaces. That waveform represents only what is expected by the DRAM, not what is actually provided to the DRAM. -
FIG. 11 is a timing illustrating atiming design 1100 showing how the buffer chip does this. The memory controller issues the write operation at t0. InFIG. 10 , the write operation appeared at the DRAM circuits one clock later at t1, due to the inherent delay through the buffer chip. But inFIG. 11 , in addition to the inherent one clock delay, the buffer chip has added an extra two clocks of delay to the write operation, which is not issued to the DRAM chips until t0+1+2 = t3. Because the DRAM chips receive the write operation at t3 and have a write CAS latency of three clocks, they expect to receive the write data at t3+3 = t6. Because the memory controller issued the write operation at t0, and it expects a write CAS latency of five clocks, it issues the write data at time t0+5 = t5. After a one clock delay through the buffer chip, the write data arrives at the DRAM chips at t5+1 = t6, and the timing problem is solved. - It should be noted that extra delay of j clocks (beyond the inherent delay) which the buffer chip deliberately adds before issuing the write operation to the DRAM is the sum j clocks of the inherent delay of the address and control signals and the inherent delay of the data signals. In the example shown, both those inherent delays are one clock, so j = 2.
-
FIG. 12 is a timing diagram illustrating operation of an FB-DIMM's AMB, which may be designed to send write data earlier to buffered stacks instead of delaying the write address and operation (as inFIG. 11 ). Specifically, it may use an earlywrite CAS latency 1202 to compensate the timing of the buffer chip write operation. If the buffer chip has a cumulative (address and data) inherent delay of two clocks, the AMB may send the write data to the buffered stack two clocks early. This may not be possible in the case of registered DIMMs, in which the memory controller sends the write data directly to the buffered stacks (rather than via the AMB). In another embodiment, the memory controller itself could be designed to send write data early, to compensate for the j clocks of cumulative inherent delay caused by the buffer chip. - In the example shown, the memory controller issues the write operation at t0. After a one clock inherent delay through the buffer chip, the write operation arrives at the DRAM at t1. The DRAM expects the write data at t1+3 = t4. The industry specification would suggest a nominal write data time of t0+5 = t5, but the AMB (or memory controller), which already has the write data (which are provided with the write operation), is configured to perform an early write at t5-2 = t3. After the
inherent delay 1203 through the buffer chip, the write data arrive at the DRAM at t3+1 = t4, exactly when the DRAM expects it - specifically, with a three-cycle DRAMWrite CAS latency 1204 which is equal to the three-cycle EarlyWrite CAS Latency 1202. -
FIG. 13 is a timing diagram 1300 illustrating bus conflicts which can be caused by delayed write operations. The delaying of write addresses and write operations may be performed by a buffer chip, a register, an AMB, etc. in a manner that is completely transparent to the memory controller of the host system. And, because the memory controller is unaware of this delay, it may schedule subsequent operations such as activate or precharge operations, which may collide with the delayed writes on the address bus to the DRAM chips in the stack. - An example is shown, in which the memory controller issues a
write operation 1302 at time t0. The buffer chip or AMB delays the write operation, such that it appears on the bus to the DRAM chips at time t3. Unfortunately, at time t2 the memory controller issued an activate operation (control signal) 1304 which, after a one-clock inherent delay through the buffer chip, appears on the bus to the DRAM chips at time t3, colliding with the delayed write. -
FIGS. 14 and15 are a timing diagram 1400 and a timing diagram 1500 illustrating methods of avoiding such collisions. If the cumulative latency through the buffer chip is two clock cycles, and the native read CAS latency of the DRAM chips is four clock cycles, then in order to hide the delay of the address and control signals and the data signals through the buffer chip, the buffer chip presents the host system with an interface to an emulated memory having a read CAS latency of six clock cycles. And if the tRCD and tRP of the DRAM chips are four clock cycles each, the buffer chip tells the host system that they are six clock cycles each in order to allow the buffer chip to delay the activate and precharge operations to avoid collisions in a manner that is transparent to the host system. - For example, a buffered stack that uses 4-4-4 DRAM chips (that is, CAS latency = 4, tRCD = 4, and tRP = 4) may appear to the host system as one larger DRAM that uses 6-6-6 timing.
- Since the buffered stack appears to the host system's memory controller as having a tRCD of six clock cycles, the memory controller may schedule a column operation to a bank six clock cycles (at time t6) after an activate (row) operation (at time t0) to the same bank. However, the DRAM chips in the stack actually have a tRCD of four clock cycles. This gives the buffer chip time to delay the activate operation by up to two clock cycles, avoiding any conflicts on the address bus between the buffer chip and the DRAM chips, while ensuring correct read and write timing on the channel between the memory controller and the buffered stack.
- As shown, the buffer chip may issue the activate operation to the DRAM chips one, two, or three clock cycles after it receives the activate operation from the memory controller, register, or AMB. The actual delay selected may depend on the presence or absence of other DRAM operations that may conflict with the activate operation, and may optionally change from one activate operation to another. In other words, the delay may be dynamic. A one-clock delay (1402A, 1502A) may be accomplished simply by the inherent delay through the buffer chip. A two-clock delay (1402B, 1502B) may be accomplished by adding one clock of additional delay to the one-clock inherent delay, and a three-clock delay (1402C, 1502C) may be accomplished by adding two clocks of additional delay to the one-clock inherent delay. A read, write, or activate operation issued by the memory controller at time t6 will, after a one-clock inherent delay through the buffer chip, be issued to the DRAM chips at time t7. A preceding activate or precharge operation issued by the memory controller at time t0 will, depending upon the delay, be issued to the DRAM chips at time t1, t2, or t3, each of which is at least the tRCD or tRP of four clocks earlier than the t7 issuance of the read, write, or activate operation.
- Since the buffered stack appears to the memory controller to have a tRP of six clock cycles, the memory controller may schedule a subsequent activate (row) operation to a bank a minimum of six clock cycles after issuing a precharge operation to that bank. However, since the DRAM circuits in the stack actually have a tRP of four clock cycles, the buffer chip may have the ability to delay issuing the precharge operation to the DRAM chips by up to two clock cycles, in order to avoid any conflicts on the address bus, or in order to satisfy the tRAS requirements of the DRAM chips.
- In particular, if the activate operation to a bank was delayed to avoid an address bus conflict, then the precharge operation to the same bank may be delayed by the buffer chip to satisfy the tRAS requirements of the DRAM. The buffer chip may issue the precharge operation to the DRAM chips one, two, or three clock cycles after it is received. The delay selected may depend on the presence or absence of address bus conflicts or tRAS violations, and may change from one precharge operation to another.
-
FIG. 16 illustrates a bufferedstack 1600 according to one embodiment of this invention. The buffered stack includes four 512Mb DDR2 DRAM circuits (chips) 1602 which abuffer chip 1604 maps to a single 2Gb DDR2 DRAM. - Although the multiple DRAM chips appear to the memory controller as though they were a single, larger DRAM, the combined power dissipation of the actual DRAM chips may be much higher than the power dissipation of a monolithic DRAM of the same capacity. In other words, the physical DRAM may consume significantly more power than would be consumed by the emulated DRAM.
- As a result, a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM of the same actual capacity using monolithic DRAM circuits. This increased power dissipation may limit the widespread adoption of DIMMs that use buffered stacks. Thus, it is desirable to have a power management technique which reduces the power dissipation of DIMMs that use buffered stacks.
- In one such technique, the DRAM circuits may be opportunistically placed in low power states or modes. For example, the DRAM circuits may be placed in a precharge power down mode using the clock enable (CKE) pin of the DRAM circuits.
- A single rank registered DIMM (R-DIMM) may contain a plurality of buffered stacks, each including four x4 512Mb DDR2 SDRAM chips and appear (to the memory controller via emulation by the buffer chip) as a single x4 2Gb DDR2 SDRAM. The JEDEC standard indicates that a 2Gb DDR2 SDRAM may generally have eight banks, shown in
FIG. 16 asBank 0 toBank 7. Therefore, the buffer chip may map each 512Mb DRAM chip in the stack to two banks of the equivalent 2Gb DRAM, as shown; thefirst DRAM chip 1602A is treated as containingbanks banks - The memory controller may open and close pages in the DRAM banks based on memory requests it receives from the rest of the host system. In some embodiments, no more than one page may be able to be open in a bank at any given time. In the embodiment shown in
FIG. 16 , each DRAM chip may therefore have up to two pages open at a time. When a DRAM chip has no open pages, the power management scheme may place it in the precharge power down mode. - The clock enable inputs of the DRAM chips may be controlled by the buffer chip, or by another chip (not shown) on the R-DIMM, or by an AMB (not shown) in the case of an FB-DIMM, or by the memory controller, to implement the power management technique. The power management technique may be particularly effective if it implements a closed page policy.
- Another optional power management technique may include mapping a plurality of DRAM circuits to a single bank of the larger capacity emulated DRAM. For example, a buffered stack (not shown) of sixteen x4 256Mb DDR2 SDRAM chips may be used in emulating a single x4 4Gb DDR2 SDRAM. The 4Gb DRAM is specified by JEDEC as having eight banks of 512Mbs each, so two of the 256Mb DRAM chips may be mapped by the buffer chip to emulate each bank (whereas in
FIG. 16 one DRAM was used to emulate two banks). - However, since only one page can be open in a bank at any given time, only one of the two DRAM chips emulating that bank can be in the active state at any given time. If the memory controller opens a page in one of the two DRAM chips, the other may be placed in the precharge power down mode. Thus, if a number p of DRAM chips are used to emulate one bank, at least p-1 of them may be in a power down mode at any given time; in other words, at least p-1 of the p chips are always in power down mode, although the particular powered down chips will tend to change over time, as the memory controller opens and closes various pages of memory.
- As a caveat on the term "always" in the preceding paragraph, the power saving operation may comprise operating in precharge power down mode except when refresh is required.
-
FIG. 17 is aflow chart 1700 illustrating one embodiment of a method of refreshing a plurality of memory circuits. A refresh control signal is received (1702) e.g. from a memory controller which intends to refresh an emulated memory circuit. In response to receipt of the refresh control signal, a plurality of refresh control signals are sent (1704) e.g. by a buffer chip to a plurality of physical memory circuits at different times. These refresh control signals may optionally include the received refresh control signal or an instantiation or copy thereof. They may also, or instead, include refresh control signals that are different in at least one aspect (format, content, etc.) from the received signal. - In some embodiments, at least one first refresh control signal may be sent to a first subset of the physical memory circuits at a first time, and at least one second refresh control signal may be sent to a second subset of the physical memory circuits at a second time. Each refresh signal may be sent to one physical memory circuit, or to a plurality of physical memory circuits, depending upon the particular implementation.
- The refresh control signals may be sent to the physical memory circuits after a delay in accordance with a particular timing. For example, the timing in which they are sent to the physical memory circuits may be selected to minimize an electrical current drawn by the memory, or to minimize a power consumption of the memory. This may be accomplished by staggering a plurality of refresh control signals. Or, the timing may be selected to comply with e.g. a tRFC parameter associated with the memory circuits.
- To this end, physical DRAM circuits may receive periodic refresh operations to maintain integrity of data stored therein. A memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits. After a refresh control signal is issued, a minimum time tRFC may be required to elapse before another control signal may be issued to that DRAM circuit. The tRFC parameter value may increase as the size of the DRAM circuit increases.
- When the buffer chip receives a refresh control signal from the memory controller, it may refresh the smaller DRAM circuits within the span of time specified by the tRFC of the emulated DRAM circuit. Since the tRFC of the larger, emulated DRAM is longer than the tRFC of the smaller, physical DRAM circuits, it may not be necessary to issue any or all of the refresh control signals to the physical DRAM circuits simultaneously. Refresh control signals may be issued separately to individual DRAM circuits or to groups of DRAM circuits, provided that the tRFC requirements of all physical DRAMs has been met by the time the emulated DRAM's tRFC has elapsed. In use, the refreshes may be spaced in time to minimize the peak current draw of the combination buffer chip and DRAM circuit set during a refresh operation.
-
FIG. 18 illustrates one embodiment of an interface circuit such as may be utilized in any of the above-described memory systems, for interfacing between a system and memory circuits. The interface circuit may be included in the buffer chip, for example. - The interface circuit includes a system address signal interface for sending/receiving address signals to/from the host system, a system control signal interface for sending/receiving control signals to/from the host system, a system clock signal interface for sending/receiving clock signals to/from the host system, and a system data signal interface for sending/receiving data signals to/from the host system. The interface circuit further includes a memory address signal interface for sending/receiving address signals to/from the physical memory, a memory control signal interface for sending/receiving control signals to/from the physical memory, a memory clock signal interface for sending/receiving clock signals to/from the physical memory, and a memory data signal interface for sending/receiving data signals to/from the physical memory.
- The host system includes a set of memory attribute expectations, or built-in parameters of the physical memory with which it has been designed to work (or with which it has been told, e.g. by the buffer circuit, it is working). Accordingly, the host system includes a set of memory interaction attributes, or built-in parameters according to which the host system has been designed to operate in its interactions with the memory. These memory interaction attributes and expectations will typically, but not necessarily, be embodied in the host system's memory controller.
- In addition to physical storage circuits or devices, the physical memory itself has a set of physical attributes.
- These expectations and attributes may include, by way of example only, memory timing, memory capacity, memory latency, memory functionality, memory type, memory protocol, memory power consumption, memory current requirements, and so forth.
- The interface circuit includes memory physical attribute storage for storing values or parameters of various physical attributes of the physical memory circuits. The interface circuit further includes system emulated attribute storage. These storage systems may be read/write capable stores, or they may simply be a set of hard-wired logic or values, or they may simply be inherent in the operation of the interface circuit.
- The interface circuit includes emulation logic which operates according to the stored memory physical attributes and the stored system emulation attributes, to present to the system an interface to an emulated memory which differs in at least one attribute from the actual physical memory. The emulation logic may, in various embodiments, alter a timing, value, latency, etc. of any of the address, control, clock, and/or data signals it sends to or receives from the system and/or the physical memory. Some such signals may pass through unaltered, while others may be altered. The emulation logic may be embodied as, for example, hard wired logic, a state machine, software executing on a processor, and so forth.
- When one component is said to be "adjacent" another component, it should not be interpreted to mean that there is absolutely nothing between the two components, only that they are in the order indicated.
- The physical memory circuits employed in practicing this invention may be any type of memory whatsoever, such as: DRAM, DDR DRAM, DDR2 DRAM, DDR3 DRAM, SDRAM, QDR DRAM, DRDRAM, FPM DRAM, VDRAM, EDO DRAM, BEDO DRAM, MDRAM, SGRAM, MRAM, IRAM, NAND flash, NOR flash, PSRAM, wetware memory, etc.
- The physical memory circuits may be coupled to any type of memory module, such as: DIMM, R-DIMM, SO-DIMM, FB-DIMM, unbuffered DIMM, etc.
- The system device which accesses the memory may be any type of system device, such as: desktop computer, laptop computer, workstation, server, consumer electronic device, television, personal digital assistant (PDA), mobile phone, printer or other peripheral device, etc.
-
FIG. 19 illustrates a multiplememory circuit framework 1900, in accordance with one embodiment. As shown, included are aninterface circuit 1902, a plurality ofmemory circuits system 1906. In the context of the present description,such memory circuits - For example, in various embodiments, at least one of the
memory circuits memory circuits - In another embodiment, at least one of the
memory circuits - Strictly as an option, the
memory circuits memory circuits memory circuits memory circuits such memory circuits - Further, in the context of the present description, the
system 1906 may include any system capable of requesting and/or initiating a process that results in an access of thememory circuits system 1906 may accomplish this utilizing a memory controller (not shown), or any other desired mechanism. In one embodiment,such system 1906 may include a system in the form of a desktop computer, a lap-top computer, a server, a storage system, a networking system, a workstation, a personal digital assistant (PDA), a mobile phone, a television, a computer peripheral (e.g. printer, etc.), a consumer electronics system, a communication system, and/or any other software and/or hardware, for that matter. - The
interface circuit 1902 may, in the context of the present description, refer to any circuit capable of interfacing (e.g. communicating, buffering, etc.) with thememory circuits system 1906. For example, theinterface circuit 1902 may, in the context of different embodiments, include a circuit capable of directly (e.g. via wire, bus, connector, and/or any other direct communication medium, etc.) and/or indirectly (e.g. via wireless, optical, capacitive, electric field, magnetic field, electromagnetic field, and/or any other indirect communication medium, etc.) communicating with thememory circuits system 1906. In additional different embodiments, the communication may use a direct connection (e.g. point-to-point, single-drop bus, multi-drop bus, serial bus, parallel bus, link, and/or any other direct connection, etc.) or may use an indirect connection (e.g. through intermediate circuits, intermediate logic, an intermediate bus or busses, and/or any other indirect connection, etc.). - In additional optional embodiments, the
interface circuit 1902 may include one or more circuits, such as a buffer (e.g. buffer chip, etc.), register (e.g. register chip, etc.), advanced memory buffer (AMB) (e.g. AMB chip, etc.), a component positioned on at least one DIMM, etc. Moreover, the register may, in various embodiments, include a JEDEC Solid State Technology Association (known as JEDEC) standard register (a JEDEC register), a register with forwarding, storing, and/or buffering capabilities, etc. In various embodiments, the register chips, buffer chips, and/or any other interface circuit(s) 1902 may be intelligent, that is, include logic that are capable of one or more functions such as gathering and/or storing information; inferring, predicting, and/or storing state and/or status; performing logical decisions; and/or performing operations on input signals, etc. In still other embodiments, theinterface circuit 1902 may optionally be manufactured in monolithic form, packaged form, printed form, and/or any other manufactured form of circuit, for that matter. - In still yet another embodiment, a plurality of the
aforementioned interface circuits 1902 may serve, in combination, to interface thememory circuits system 1906. Thus, in various embodiments, one, two, three, four, ormore interface circuits 1902 may be utilized for such interfacing purposes. In addition,multiple interface circuits 1902 may be relatively configured or connected in any desired manner. For example, theinterface circuits 1902 may be configured or connected in parallel, serially, or in various combinations thereof. Themultiple interface circuits 1902 may use direct connections to each other, indirect connections to each other, or even a combination thereof. Furthermore, any number of theinterface circuits 1902 may be allocated to any number of thememory circuits interface circuits 1902 may be the same or different. Even still, theinterface circuits 1902 may share the same or similar interface tasks and/or perform different interface tasks. - While the
memory circuits interface circuit 1902, andsystem 1906 are shown to be separate parts, it is contemplated that any of such parts (or portion(s) thereof) may be integrated in any desired manner. In various embodiments, such optional integration may involve simply packaging such parts together (e.g. stacking the parts to form a stack of DRAM circuits, a DRAM stack, a plurality of DRAM stacks, a hardware stack, where a stack may refer to any bundle, collection, or grouping of parts and/or circuits, etc.) and/or integrating them monolithically. Just by way of example, in one optional embodiment, at least one interface circuit 1902 (or portion(s) thereof) may be packaged with at least one of thememory circuits - The
interface circuit 1902 may be capable of various functionality, in the context of different embodiments. For example, in one optional embodiment, theinterface circuit 1902 may interface a plurality ofsignals 1908 that are connected between thememory circuits system 1906. The signals may, for example, include address signals, data signals, control signals, enable signals, clock signals, reset signals, or any other signal used to operate or associated with the memory circuits, system, or interface circuit(s), etc. In some optional embodiments, the signals may be those that: use a direct connection, use an indirect connection, use a dedicated connection, may be encoded across several connections, and/or may be otherwise encoded (e.g. time-multiplexed, etc.) across one or more connections. - In one aspect of the present embodiment, the interfaced
signals 1908 may represent all of the signals that are connected between thememory circuits system 1906. In other aspects, at least a portion ofsignals 1910 may use direct connections between thememory circuits system 1906. Moreover, the number of interfaced signals 1908 (e.g. vs. a number of the signals that usedirect connections 1910, etc.) may vary such that the interfacedsignals 1908 may include at least a majority of the total number of signal connections between thememory circuits FIG. 19 ). In other embodiments, L may be less than or equal to M. In still other embodiments L and/or M may be zero. - In yet another embodiment, the
interface circuit 1902 may or may not be operable to interface a first number ofmemory circuits system 1906 for simulating a second number of memory circuits to thesystem 1906. The first number ofmemory circuits system 1906 shall hereafter be referred to, where appropriate for clarification purposes, as the at least one "virtual" memory circuit. - In still additional aspects of the present embodiment, the second number of virtual memory circuits may be more than, equal to, or less than the first number of
physical memory circuits - In the context of the present description, the term simulated may refer to any simulating, emulating, disguising, transforming, modifying, changing, altering, shaping, converting, etc., that results in at least one aspect of the
memory circuits system 1906. In different embodiments, such aspect may include, for example, a number, a signal, a memory capacity, a timing, a latency, a design parameter, a logical interface, a control system, a property, a behavior (e.g. power behavior including, but not limited to a power consumption, current consumption, current waveform, power parameters, power metrics, any other aspect of power management or behavior, etc.), and/or any other aspect, for that matter. - In different embodiments, the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner. For instance, in the context of electrical simulation, a number of pins, wires, signals, etc. may be simulated. In the context of logical simulation, a particular function or behavior may be simulated. In the context of protocol, a particular protocol (e.g. DDR3, etc.) may be simulated. Further, in the context of protocol, the simulation may effect conversion between different protocols (e.g. DDR2 and DDR3) or may effect conversion between different versions of the same protocol (e.g. conversion of 4-4-4 DDR2 to 6-6-6 DDR2).
- During use, in accordance with one optional power management embodiment, the
interface circuit 1902 may or may not be operable to interface thememory circuits system 1906 for simulating at least one virtual memory circuit, where the virtual memory circuit includes at least one aspect that is different from at least one aspect of one or more of thephysical memory circuits interface circuit 1902 is operable to interface thephysical memory circuits system 1906 for simulating at least one virtual memory circuit with a first power behavior that is different from a second power behavior of thephysical memory circuits interface circuit 1902 performing various power management. - In another power management embodiment, the
interface circuit 1902 may perform a power management operation in association with only a portion of the memory circuits. In the context of the present description, a portion of memory circuits may refer to any row, column, page, bank, rank, sub-row, sub-column, sub-page, sub-bank, sub-rank, any other subdivision thereof, and/or any other portion or portions of one or more memory circuits. Thus, in an embodiment where multiple memory circuits exist, such portion may even refer to an entire one or more memory circuits (which may be deemed a portion of such multiple memory circuits, etc.). Of course, again, the portion of memory circuits may refer to any portion or portions of one or more memory circuits. This applies to both physical and virtual memory circuits. - In various additional power management embodiments, the power management operation may be performed by the
interface circuit 1902 during a latency associated with one or more commands directed to at least a portion of the plurality ofmemory circuits interface circuit 1902 is further operable for simulating at least one virtual memory circuit, such virtual memory circuit(s) may include a first latency that is different than a second latency associated with at least one of the plurality ofmemory circuits - Yet another embodiment is contemplated where the
interface circuit 1902 performs the power management operation in association with at least a portion of the memory circuits, in an autonomous manner. Such autonomous performance refers to the ability of theinterface circuit 1902 to perform the power management operation without necessarily requiring the receipt of an associated power management command from thesystem 1906. - In still additional embodiments,
interface circuit 1902 may receive a first number of power management signals from thesystem 1906 and may communicate a second number of power management signals that is the same or different from the first number of power management signals to at least a portion of thememory circuits interface circuit 1902 is further operable for simulating at least one virtual memory circuit, a number of the aforementioned ranks (seen by the system 1906) may be less than the first number of power management signals. - In other power management embodiments, the
interface circuit 1902 may be capable of a power management operation that takes the form of a power saving operation. In the context of the present description, the term power saving operation may refer to any operation that results in at least some power savings. - It should be noted that various power management operation embodiments, power management signal embodiments, simulation embodiments (and any other embodiments, for that matter) may or may not be used in conjunction with each other, as well as the various different embodiments that will hereinafter be described. To this end, more illustrative information will now be set forth regarding optional functionality/architecture of different embodiments which may or may not be implemented in the context of
such interface circuit 1902 and the related components ofFIG. 19 , per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. For example, any of the following features may be optionally incorporated with or without the other features described. - In one exemplary power management embodiment, the aforementioned simulation of a different power behavior may be achieved utilizing a power saving operation.
- In one such embodiment, the power management, power behavior simulation, and thus the power saving operation may optionally include applying a power saving command to one or more memory circuits based on at least one state of one or more memory circuits. Such power saving command may include, for example, initiating a power down operation applied to one or more memory circuits. Further, such state may depend on identification of the current, past or predictable future status of one or more memory circuits, a predetermined combination of commands issued to the one or more memory circuits, a predetermined pattern of commands issued to the one or more memory circuits, a predetermined absence of commands issued to the one or more memory circuits, any command(s) issued to the one or more memory circuits, and/or any command(s) issued to one or more memory circuits other than the one or more memory circuits. In the context of the present description, such status may refer to any property of the memory circuit that may be monitored, stored, and/or predicted.
- For example, at least one of a plurality of memory circuits may be identified that is not currently being accessed by the system. Such status identification may involve determining whether a portion(s) is being accessed in at least one of the plurality of memory circuits. Of course, any other technique may be used that results in the identification of at least one of the memory circuits (or portion(s) thereof) that is not being accessed, e.g. in a non-accessed state. In other embodiments, other such states may be detected or identified and used for power management.
- In response to the identification of a memory circuit in a non-accessed state, a power saving operation may be initiated in association with the non-accessed memory circuit (or portion thereof). In one optional embodiment, such power saving operation may involve a power down operation (e.g. entry into a precharge power down mode, as opposed to an exit therefrom, etc.). As an option, such power saving operation may be initiated utilizing (e.g. in response to, etc.) a power management signal including, but not limited to a clock enable signal (CKE), chip select signal, in combination with other signals and optionally commands. In other embodiments, use of a non-power management signal (e.g. control signal, etc.) is similarly contemplated for initiating the power saving operation. Of course, however, it should be noted that anything that results in modification of the power behavior may be employed in the context of the present embodiment.
- As mentioned earlier, the interface circuit may be operable to interface the memory circuits and the system for simulating at least one virtual memory circuit, where the virtual memory circuit includes at least one aspect that is different from at least one aspect of one or more of the physical memory circuits. In different embodiments, such aspect may include, for example, a signal, a memory capacity, a timing, a logical interface, etc. As an option, one or more of such aspects may be simulated for supporting a power management operation.
- For example, the simulated timing, as described above, may include a simulated latency (e.g. time delay, etc.). In particular, such simulated latency may include a column address strobe (CAS) latency (e.g. a latency associated with accessing a column of data). Still yet, the simulated latency may include a row address to column address latency (tRCD). Thus, the latency may be that between the row address strobe (RAS) and CAS.
- In addition, the simulated latency may include a row precharge latency (tRP). The tRP may include the latency to terminate access to an open row. Further, the simulated latency may include an activate to precharge latency (tRAS). The tRAS may include the latency between an activate operation and a precharge operation. Furthermore, the simulated latency may include a row cycle time (tRC). The tRC may include the latency between consecutive activate operations to the same bank of a DRAM circuit. In some embodiments, the simulated latency may include a read latency, write latency, or latency associated with any other operation(s), command(s), or combination or sequence of operations or commands. In other embodiments, the simulated latency may include simulation of any latency parameter that corresponds to the time between two events.
- For example, in one exemplary embodiment using simulated latency, a first interface circuit may delay address and control signals for certain operations or commands by a clock cycles. In various embodiments where the first interface circuit is operating as a register or may include a register, a may not necessarily include the register delay (which is typically a one clock cycle delay through a JEDEC register). Also in the present exemplary embodiment, a second interface circuit may delay data signals by d clock cycles. It should be noted that the first and second interface circuits may be the same or different circuits or components in various embodiments. Further, the delays a and d may or may not be different for different memory circuits. In other embodiments, the delays a and d may apply to address and/or control and/or data signals. In alternative embodiments, the delays a and d may not be integer or even constant multiples of the clock cycle and may be less than one clock cycle or zero.
- The cumulative delay through the interface circuits (e.g. the sum of the first delay a of the address and control signals through the first interface circuit and the second delay d of the data signals through the second interface circuit) may be j clock cycles (e.g. j = a + d). Thus, in a DRAM-specific embodiment, in order to make the delays a and d transparent to the memory controller, the interface circuits may make the stack of DRAM circuits appear to a memory controller (or any other component, system, or part(s) of a system) as one (or more) larger capacity virtual DRAM circuits with a read latency of i + j clocks, where i is the inherent read latency of the physical DRAM circuits.
- To this end, the interface circuits may be operable for simulating at least one virtual memory circuit with a first latency that may be different (e.g. equal, longer, shorter, etc.) than a second latency of at least one of the physical memory circuits. The interface circuits may thus have the ability to simulate virtual DRAM circuits with a possibly different (e.g. increased, decreased, equal, etc.) read or other latency to the system, thus making transparent the delay of some or all of the address, control, clock, enable, and data signals through the interface circuits. This simulated aspect, in turn, may be used to accommodate power management of the DRAM circuits. More information regarding such use will be set forth hereinafter in greater detail during reference to different embodiments outlined in subsequent figures.
- In still another embodiment, the interface circuit may be operable to receive a signal from the system and communicate the signal to at least one of the memory circuits after a delay. The signal may refer to one of more of a control signal, a data signal, a clock signal, an enable signal, a reset signal, a logical or physical signal, a combination or pattern of such signals, or a sequence of such signals, and/or any other signal for that matter. In various embodiments, such delay may be fixed or variable (e.g. a function of a current signal, and/or a previous signal, and/or a signal that will be communicated, after a delay, at a future time, etc.). In still other embodiments, the interface circuit may be operable to receive one or more signals from at least one of the memory circuits and communicate the signal(s) to the system after a delay.
- As an option, the signal delay may include a cumulative delay associated with one or more of the aforementioned signals. Even still, the signal delay may result in a time shift of the signal (e.g. forward and/or back in time) with respect to other signals. Of course, such forward and backward time shift may or may not be equal in magnitude.
- In one embodiment, the time shifting may be accomplished utilizing a plurality of delay functions which each apply a different delay to a different signal. In still additional embodiments, the aforementioned time shifting may be coordinated among multiple signals such that different signals are subject to shifts with different relative directions/magnitudes. For example, such time shifting may be performed in an organized manner. Yet again, more information regarding such use of delay in the context of power management will be set forth hereinafter in greater detail during reference to subsequent figures.
-
FIGS. 20A-E show a stack ofDRAM circuits 2000 that utilize one or more interface circuits, in accordance with various embodiments. As an option, the stack ofDRAM circuits 2000 may be implemented in the context of the architecture ofFIG. 19 . Of course, however, the stack ofDRAM circuits 2000 may be implemented in any other desired environment (e.g. using other memory types, using different memory types within a stack, etc.). It should also be noted that the aforementioned definitions may apply during the present description. - As shown in
FIGS. 20A-E , one ormore interface circuits 2002 may be placed electrically between anelectronic system 2004 and a stack ofDRAM circuits 2006A-D. Thus theinterface circuits 2002 electrically sit between theelectronic system 2004 and the stack ofDRAM circuits 2006A-D. In the context of the present description, the interface circuit(s) 2002 may include any interface circuit that meets the definition set forth during reference toFIG. 19 . - In the present embodiment, the interface circuit(s) 2002 may be capable of interfacing (e.g. buffering, etc.) the stack of
DRAM circuits 2006A-D to electrically and/or logically resemble at least one larger capacity virtual DRAM circuit to thesystem 2004. Thus, a stack or buffered stack may be utilized. In this way, the stack ofDRAM circuits 2006A-D may appear as a smaller quantity of larger capacity virtual DRAM circuits to thesystem 2004. - Just by way of example, the stack of
DRAM circuits 2006A-D may include eight 512Mb DRAM circuits. Thus, the interface circuit(s) 2002 may buffer the stack of eight 512Mb DRAM circuits to resemble a single 4Gb virtual DRAM circuit to a memory controller (not shown) of the associatedsystem 2004. In another example, the interface circuit(s) 2002 may buffer the stack of eight 512Mb DRAM circuits to resemble two 2Gb virtual DRAM circuits to a memory controller of an associatedsystem 2004. - Furthermore, the stack of
DRAM circuits 2006A-D may include any number of DRAM circuits. Just by way of example, the interface circuit(s) 2002 may be connected to 1, 2, 4, 8 ormore DRAM circuits 2006A-D. In alternate embodiments, to permit data integrity storage or for other reasons, the interface circuit(s) 2002 may be connected to an odd number ofDRAM circuits 2006A-D. Additionally, theDRAM circuits 2006A-D may be arranged in a single stack. Of course, however, theDRAM circuits 2006A-D may also be arranged in a plurality of stacks - The
DRAM circuits 2006A-D may be arranged on, located on, or connected to a single side of the interface circuit(s) 2002, as shown inFIGS. 20A-D . As another option, theDRAM circuits 2006A-D may be arranged on, located on, or connected to both sides of the interface circuit(s) 2002 shown inFIG. 20E . Just by way of example, the interface circuit(s) 2002 may be connected to 16 DRAM circuits with 8 DRAM circuits on either side of the interface circuit(s) 2002, where the 8 DRAM circuits on each side of the interface circuit(s) 2002 are arranged in two stacks of four DRAM circuits. In other embodiments, other arrangements and numbers of DRAM circuits are possible (e.g. to implement error-correction coding, ECC, etc.) - The interface circuit(s) 2002 may optionally be a part of the stack of
DRAM circuits 2006A-D. Of course, however, interface circuit(s) 2002 may also be separate from the stack ofDRAM circuits 2006A-D. In addition, interface circuit(s) 2002 may be physically located anywhere in the stack ofDRAM circuits 2006A-D, where such interface circuit(s) 2002 electrically sits between theelectronic system 2004 and the stack ofDRAM circuits 2006A-D. - In one embodiment, the interface circuit(s) 2002 may be located at the bottom of the stack of
DRAM circuits 2006A-D (e.g. the bottom-most circuit in the stack) as shown inFIGS. 20A-2D . As another option, and as shown in FIG. 200E, the interface circuit(s) 2002 may be located in the middle of the stack ofDRAM circuits 2006A-D. As still yet another option, the interface circuit(s) 2002 may be located at the top of the stack ofDRAM circuits 2006A-D (e.g. the top-most circuit in the stack). Of course, however, the interface circuit(s) 2002 may also be located anywhere between the two extremities of the stack ofDRAM circuits 2006A-D. In alternate embodiments, the interface circuit(s) 2002 may not be in the stack ofDRAM circuits 2006A-D and may be located in a separate package(s). - The electrical connections between the interface circuit(s) 2002 and the stack of
DRAM circuits 2006A-D may be configured in any desired manner. In one optional embodiment, address, control (e.g. command, etc.), and clock signals may be common to allDRAM circuits 2006A-D in the stack (e.g. using one common bus). As another option, there may be multiple address, control and clock busses. - As yet another option, there may be individual address, control and clock busses to each
DRAM circuit 2006A-D. Similarly, data signals may be wired as one common bus, several busses, or as an individual bus to eachDRAM circuit 2006A-D. Of course, it should be noted that any combinations of such configurations may also be utilized. - For example, as shown in
FIG. 20A , theDRAM circuits 2006A-D may have one common address, control andclock bus 2008 with individual data busses 2010. In another example, as shown inFIG. 20B , theDRAM circuits 2006A-D may have two address, control andclock busses 2008 along with two data busses 2010. In still yet another example, as shown inFIG. 20C , theDRAM circuits 2006A-D may have one address, control andclock bus 2008 together with two data busses 2010. In addition, as shown inFIG. 20D , theDRAM circuits 2006A-D may have one common address, control andclock bus 2008 and onecommon data bus 2010. It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized. - In one embodiment, the interface circuit(s) 2002 may be split into several chips that, in combination, perform power management functions. Such power management functions may optionally introduce a delay in various signals.
- For example, there may be a single register chip that electrically sits between a memory controller and a number of stacks of DRAM circuits. The register chip may, for example, perform the signaling to the DRAM circuits. Such register chip may be connected electrically to a number of other interface circuits that sit electrically between the register chip and the stacks of DRAM circuits. Such interface circuits in the stacks of DRAM circuits may then perform the aforementioned delay, as needed.
- In another embodiment, there may be no need for an interface circuit in each DRAM stack. In particular, the register chip may perform the signaling to the DRAM circuits directly. In yet another embodiment, there may be no need for a stack of DRAM circuits. Thus each stack may be a single memory (e.g. DRAM) circuit. In other implementations, combinations of the above implementations may be used. Just by way of example, register chips may be used in combination with other interface circuits, or registers may be utilized alone.
- More information regarding the verification that a simulated DRAM circuit including any address, data, control and clock configurations behaves according to a desired DRAM standard or other design specification will be set forth hereinafter in greater detail.
-
FIGS. 21A-D show amemory module 2100 which uses DRAM circuits or stacks of DRAM circuits (e.g. DRAM stacks) with various interface circuits, in accordance with different embodiments. As an option, thememory module 2100 may be implemented in the context of the architecture and environment ofFIGS. 19 and/or 20. Of course, however, thememory module 2100 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. -
FIG. 21A shows tworegister chips 2104 driving address and control signals toDRAM circuits 2102. TheDRAM circuits 2102 may send/receive data signals to and/or from a system (e.g. memory controller) using the DRAM data bus, as shown. -
FIG. 21B shows oneregister chip 2104 driving address and control signals toDRAM circuits 2102. Thus, one, two, three, ormore register chips 2104 may be utilized, in various embodiments. -
FIG. 21C showsregister chips 2104 driving address and control signals toDRAM circuits 2102 and/orintelligent interface circuits 2103. In addition, the DRAM data bus is connected to the intelligent interface circuits 2103 (not shown explicitly). Of course, as described herein, and illustrated inFIGS. 21A and 21B , one, two, three ormore register chips 2104 may be used. Furthermore, this FIG. illustrates that the register chip(s) 2104 may drive some, all, or none of the control and/or address signals tointelligent interface circuits 2103. -
FIG. 21D showsregister chips 2104 driving address and control signals to theDRAM circuits 2102 and/orintelligent interface circuits 2103. Furthermore, this FIG. illustrates that the register chip(s) 2104 may drive some, all, or none of the control and/or address signals tointelligent interface circuits 2103. Again, the DRAM data bus is connected to theintelligent interface circuits 2103. Additionally, this FIG. illustrates that either one (in the case of DRAM stack 2106) or two (in the case of the other DRAM stacks 2102) stacks ofDRAM circuits 2102 may be associated with a singleintelligent interface circuit 2103. - Of course, however, any number of stacks of
DRAM circuits 2102 may be associated with eachintelligent interface circuit 2103. As another option, an AMB chip may be utilized with an FB-DIMM, as will be described in more detail with respect toFIGS. 22A-E . -
FIGS. 22A-E show amemory module 2200 which uses DRAM circuits or stacks of DRAM circuits (e.g. DRAM stacks) 2202 with anAMB chip 2204, in accordance with various embodiments. As an option, thememory module 2200 may be implemented in the context of the architecture and environment ofFIGS. 19-21 . Of course, however, thememory module 2200 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. -
FIG. 22A shows theAMB chip 2204 driving address and control signals to theDRAM circuits 2202. In addition, theAMB chip 2204 sends/receives data to/from theDRAM circuits 2202. -
FIG. 22B shows theAMB chip 2204 driving address and control signals to aregister 2206. In turn, theregister 2206 may drive address and control signals to theDRAM circuits 2202. The DRAM circuits send/receive data to/from the AMB. Moreover, a DRAM data bus may be connected to theAMB chip 2204. -
FIG. 22C shows theAMB chip 2204 driving address and control to theregister 2206. In turn, theregister 2206 may drive address and control signals to theDRAM circuits 2202 and/or theintelligent interface circuits 2203. This FIG. illustrates that theregister 2206 may drive zero, one, or more address and/or control signals to one or moreintelligent interface circuits 2203. Further, each DRAM data bus is connected to the interface circuit 2203 (not shown explicitly). The intelligent interface circuit data bus is connected to theAMB chip 2204. The AMB data bus is connected to the system. -
FIG. 22D shows theAMB chip 2204 driving address and/or control signals to theDRAM circuits 2202 and/or theintelligent interface circuits 2203. This FIG. illustrates that theAMB chip 2204 may drive zero, one, or more address and/or control signals to one or moreintelligent interface circuits 2203. Moreover, each DRAM data bus is connected to the intelligent interface circuits 2203 (not shown explicitly). The intelligent interface circuit data bus is connected to theAMB chip 2204. The AMB data bus is connected to the system. -
FIG. 22E shows theAMB chip 2204 driving address and control to one or moreintelligent interface circuits 2203. Theintelligent interface circuits 2203 then drive address and control to each DRAM circuit 2202 (not shown explicitly). Moreover, each DRAM data bus is connected to the intelligent interface circuits 2203 (also not shown explicitly). The intelligent interface circuit data bus is connected to theAMB chip 2204 .The AMB data bus is connected to the system. - In other embodiments, combinations of the above implementations as shown in
FIGS. 22A-E may be utilized. Just by way of example, one or more register chips may be utilized in conjunction with the intelligent interface circuits. In other embodiments, register chips may be utilized alone and/or with or without stacks of DRAM circuits. -
FIG. 23 shows asystem 2300 in which four 512Mb DRAM circuits appear, through simulation, as (e.g. mapped to) a single 2Gb virtual DRAM circuit, in accordance with yet another embodiment. As an option, thesystem 2300 may be implemented in the context of the architecture and environment ofFIGS. 19-22 . Of course, however, thesystem 2300 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As shown in
FIG. 23 , a stack of memory circuits that is interfaced by the interface circuit for the purpose of simulation (e.g. a buffered stack) may include four 512Mbphysical DRAM circuits 2302A-D that appear to a memory controller as a single 2Gb virtual DRAM circuit. In different embodiments, the buffered stack may include various numbers of physical DRAM circuits including two, four, eight, sixteen or even more physical DRAM circuits that appear to the memory controller as a single larger capacity virtual DRAM circuit or multiple larger capacity virtual DRAM circuits. In addition, the number of physical DRAM circuits in the buffered stack may be an odd number. For example, an odd number of circuits may be used to provide data redundancy or data checking or other features. - Also, one or more control signals (e.g. power management signals) 2306 may be connected between the
interface circuit 2304 and theDRAM circuits 2302A-D in the stack. Theinterface circuit 2304 may be connected to a control signal (e.g. power management signal) 2308 from the system, where the system uses thecontrol signal 2308 to control one aspect (e.g. power behavior) of the 2Gb virtual DRAM circuit in the stack. Theinterface circuit 2304 may control the one aspect (e.g. power behavior) of all theDRAM circuits 2302A-D in response to acontrol signal 2308 from the system to the 2Gb virtual DRAM circuit. Theinterface circuit 2304 may also, usingcontrol signals 2306, control the one aspect (e.g. power behavior) of one or more of theDRAM circuits 2302A-D in the stack in the absence of acontrol signal 2308 from the system to the 2Gb virtual DRAM circuit. - The buffered
stacks 2300 may also be used in combination together on a DIMM such that the DIMM appears to the memory controller as a larger capacity DIMM. The buffered stacks may be arranged in one or more ranks on the DIMM. All the virtual DRAM circuits on the DIMM that respond in parallel to a control signal 2308 (e.g. chip select signal, clock enable signal, etc.) from the memory controller belong to a single rank. However, theinterface circuit 2304 may use a plurality ofcontrol signals 2306 instead ofcontrol signal 2308 to controlDRAM circuits 2302A-D. Theinterface circuit 2304 may use all thecontrol signals 2306 in parallel in response to thecontrol signal 2308 to do power management of theDRAM circuits 2302A-D in one example. In another example, theinterface circuit 2304 may use at least one but not all thecontrol signals 2306 in response to thecontrol signal 2308 to do power management of theDRAM circuits 2302A-D. In yet another example, theinterface circuit 2304 may use at least onecontrol signal 2306 in the absence of thecontrol signal 2308 to do power management of theDRAM circuits 2302A-D. - More information regarding the verification that a memory module including DRAM circuits with various interface circuits behave according to a desired DRAM standard or other design specification will be set forth hereinafter in greater detail.
- The number of banks per DRAM circuit may be defined by JEDEC standards for many DRAM circuit technologies. In various embodiments, there may be different configurations that use different mappings between the physical DRAM circuits in a stack and the banks in each virtual DRAM circuit seen by the memory controller. In each configuration, multiple
physical DRAM circuits 2302A-D may be stacked and interfaced by aninterface circuit 2304 and may appear as at least one larger capacity virtual DRAM circuit to the memory controller. Just by way of example, the stack may include four 512Mb DDR2 physical SDRAM circuits that appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit. - In one optional embodiment, each bank of a virtual DRAM circuit seen by the memory controller may correspond to a portion of a physical DRAM circuit. That is, each physical DRAM circuit may be mapped to multiple banks of a virtual DRAM circuit For example, in one embodiment, four 512Mb DDR2 physical SDRAM circuits through simulation may appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit. A 2Gb DDR2 SDRAM may have eight banks as specified by the JEDEC standards. Therefore, in this embodiment, the
interface circuit 2304 may map each 512Mb physical DRAM circuit to two banks of the 2Gb virtual DRAM. Thus, in the context of the present embodiment, a one-circuit-to-many-bank configuration (one physical DRAM circuit to many banks of a virtual DRAM circuit) may be utilized. - In another embodiment, each physical DRAM circuit may be mapped to a single bank of a virtual DRAM circuit. For example, eight 512Mb DDR2 physical SDRAM circuits may appear to the memory controller, through simulation, as a single 4Gb virtual DDR2 SDRAM circuit. A 4Gb DDR2 SDRAM may have eight banks as specified by the JEDEC standards. Therefore, the
interface circuit 2304 may map each 512Mb physical DRAM circuit to a single bank of the 4Gb virtual DRAM. In this way, a one-circuit-to-one-bank configuration (one physical DRAM circuit to one bank of a virtual DRAM circuit) may be utilized. - In yet another embodiment, a plurality of physical DRAM circuits may be mapped to a single bank of a virtual DRAM circuit. For example, sixteen 256Mb DDR2 physical SDRAM circuits may appear to the memory controller, through simulation, as a single 4Gb virtual DDR2 SDRAM circuit. A 4Gb DDR2 SDRAM circuit may be specified by JEDEC to have eight banks, such that each bank of the 4Gb DDR2 SDRAM circuit may be 512Mb. Thus, two of the 256Mb DDR2 physical SDRAM circuits may be mapped by the
interface circuit 2304 to a single bank of the 4Gb virtual DDR2 SDRAM circuit seen by the memory controller. Accordingly, a many-circuit-to-one-bank configuration (many physical DRAM circuits to one bank of a virtual DRAM circuit) may be utilized. - Thus, in the above described embodiments, multiple
physical DRAM circuits 2302A-D in the stack may be buffered by theinterface circuit 2304 and may appear as at least one larger capacity virtual DRAM circuit to the memory controller. Just by way of example, the buffered stack may include four 512Mb DDR2 physical SDRAM circuits that appear to the memory controller as a single 2Gb DDR2 virtual SDRAM circuit. In normal operation, the combined power dissipation of all fourDRAM circuits 2302A-D in the stack when they are active may be higher than the power dissipation of a monolithic (e.g. constructed without stacks) 2Gb DDR2 SDRAM. - In general, the power dissipation of a DIMM constructed from buffered stacks may be much higher than a DIMM constructed without buffered stacks. Thus, for example, a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM built using monolithic DRAM circuits. However, power management may be utilized to reduce the power dissipation of DIMMs that contain buffered stacks of DRAM circuits. Although the examples described herein focus on power management of buffered stacks of DRAM circuits, techniques and methods described apply equally well to DIMMs that are constructed without stacking the DRAM circuits (e.g. a stack of one DRAM circuit) as well as stacks that may not require buffering.
- In various embodiments, power management schemes may be utilized for one-circuit-to-many-bank, one-circuit-to-one-bank, and many-circuit-to-one-bank configurations. Memory (e.g. DRAM) circuits may provide external control inputs for power management. In DDR2 SDRAM, for example, power management may be initiated using the CKE and chip select (CS#) inputs and optionally in combination with a command to place the DDR2 SDRAM in various power down modes.
- Four power saving modes for DDR2 SDRAM may be utilized, in accordance with various different embodiments (or even in combination, in other embodiments). In particular, two active power down modes, precharge power down mode, and self-refresh mode may be utilized. If CKE is de-asserted while CS# is asserted, the DDR2 SDRAM may enter an active or precharge power down mode. If CKE is de-asserted while CS# is asserted in combination with the refresh command, the DDR2 SDRAM may enter the self refresh mode.
- If power down occurs when there are no rows active in any bank, the DDR2 SDRAM may enter precharge power down mode. If power down occurs when there is a row active in any bank, the DDR2 SDRAM may enter one of the two active power down modes. The two active power down modes may include fast exit active power down mode or slow exit active power down mode.
- The selection of fast exit mode or slow exit mode may be determined by the configuration of a mode register. The maximum duration for either the active power down mode or the precharge power down mode may be limited by the refresh requirements of the DDR2 SDRAM and may further be equal to tRFC(MAX).
- DDR2 SDRAMs may require CKE to remain stable for a minimum time of tCKE(MIN). DDR2 SDRAMs may also require a minimum time of tXP(MIN) between exiting precharge power down mode or active power down mode and a subsequent non-read command. Furthermore, DDR2 SDRAMs may also require a minimum time of tXARD(MIN) between exiting active power down mode (e.g. fast exit) and a subsequent read command. Similarly, DDR2 SDRAMs may require a minimum time of tXARDS(MIN) between exiting active power down mode (e.g. slow exit) and a subsequent read command.
- Just by way of example, power management for a DDR2 SDRAM may require that the SDRAM remain in a power down mode for a minimum of three clock cycles [e.g. tCKE(MIN) = 3 clocks]. Thus, the SDRAM may require a power down entry latency of three clock cycles.
- Also as an example, a DDR2 SDRAM may also require a minimum of two clock cycles between exiting a power down mode and a subsequent command [e.g. tXP(MIN) = 2 clock cycles; tXARD(MIN) = 2 clock cycles]. Thus, the SDRAM may require a power down exit latency of two clock cycles.
- Of course, for other DRAM or memory technologies, the power down entry latency and power down exit latency may be different, but this does not necessarily affect the operation of power management described here.
- Accordingly, in the case of DDR2 SDRAM, a minimum total of five clock cycles may be required to enter and then immediately exit a power down mode (e.g. three cycles to satisfy tCKE(min) due to entry latency plus two cycles to satisfy tXP(MIN) or tXARD(MIN) due to exit latency). These five clock cycles may be hidden from the memory controller if power management is not being performed by the controller itself Of course, it should be noted that other restrictions on the timing of entry and exit from the various power down modes may exist.
- In one exemplary embodiment, the minimum power down entry latency for a DRAM circuit may be n clocks. In addition, in the case of DDR2, n = 3, three cycles may be required to satisfy tCKE(MIN). Also, the minimum power down exit latency of a DRAM circuit may be x clocks. In the case of DDR2, x = 2, two cycles may be required to satisfy tXP(MIN) and tXARD(MIN). Thus, the power management latency of a DRAM circuit in the present exemplary embodiment may require a minimum of k= n + x clocks for the DRAM circuit to enter power down mode and exit from power down mode. (e.g. DDR2, k= 3 + 2 = clock cycles).
- DRAM operations such as precharge or activate may require a certain period of time to complete. During this time, the DRAM, or portion(s) thereof (e.g. bank, etc.) to which the operation is directed may be unable to perform another operation. For example, a precharge operation in a bank of a DRAM circuit may require a certain period of time to complete (specified as tRP for DDR2).
- During tRP and after a precharge operation has been initiated, the memory controller may not necessarily be allowed to direct another operation (e.g. activate, etc.) to the same bank of the DRAM circuit. The period of time between the initiation of an operation and the completion of that operation may thus be a command operation period. Thus, the memory controller may not necessarily be allowed to direct another operation to a particular DRAM circuit or portion thereof during a command operation period of various commands or operations. For example, the command operation period of a precharge operation or command may be equal to tRP. As another example, the command operation period of an activate command may be equal to tRCD.
- In general, the command operation period need not be limited to a single command. A command operation period can also be defined for a sequence, combination, or pattern of commands. The power management schemes described herein thus need not be limited to a single command and associated command operation period; the schemes may equally be applied to sequences, patterns, and combinations of commands. It should also be noted that a command may have a first command operation period in a DRAM circuit to which the command is directed to, and also have a second command operation period in another DRAM circuit to which the command is not directed to. The first and second command operation periods need not be the same. In addition, a command may have different command operation periods in different mappings of physical DRAM circuits to the banks of a virtual DRAM circuit, and also under different conditions.
- It should be noted that the command operation periods may be specified in nanoseconds. For example, tRP may be specified in nanoseconds, and may vary according to the speed grade of a DRAM circuit. Furthermore, tRP may be defined in JEDEC standards (e.g. currently JEDEC Standard No. 21-C for DDR2 SDRAM). Thus, tRP may be measured as an integer number of clock cycles. Optionally, the tRP may not necessarily be specified to be an exact number clock cycles. For DDR2 SDRAMs, the minimum value of tRP may be equivalent to three clock cycles or more.
- In additional exemplary embodiments, power management schemes may be based on an interface circuit identifying at least one memory (e.g. DRAM, etc.) circuit that is not currently being accessed by the system. In response to the identification of the at least one memory circuit, a power saving operation may be initiated in association with the at least one memory circuit.
- In one embodiment, such power saving operation may involve a power down operation, and in particular, a precharge power down operation, using the CKE pin of the DRAM circuits (e.g. a CKE power management scheme). Other similar power management schemes using other power down control methods and power down modes, with different commands and alternative memory circuit technologies, may also be used.
- If the CKE power-management scheme does not involve the memory controller, then the presence of the scheme may be transparent to the memory controller. Accordingly, the power down entry latency and the power down exit latency may be hidden from the memory controller. In one embodiment, the power down entry and exit latencies may be hidden from the memory controller by opportunistically placing at least one first DRAM circuit into a power down mode and, if required, bringing at least one second DRAM circuit out of power down mode during a command operation period when the at least one first DRAM circuit is not being accessed by the system.
- The identification of the appropriate command operation period during which at least one first DRAM circuit in a stack may be placed in power down mode or brought out of power down mode may be based on commands directed to the first DRAM circuit (e.g. based on commands directed to itself) or on commands directed to a second DRAM circuit (e.g. based on commands directed to other DRAM circuits).
- In another embodiment, the command operation period of the DRAM circuit may be used to hide the power down entry and/or exit latencies. For example, the existing command operation periods of the physical DRAM circuits may be used to the hide the power down entry and/or exit latencies if the delays associated with one or more operations are long enough to hide the power down entry and/or exit latencies. In yet another embodiment, the command operation period of a virtual DRAM circuit may be used to hide the power down entry and/or exit latencies by making the command operation period of the virtual DRAM circuit longer than the command operation period of the physical DRAM circuits.
- Thus, the interface circuit may simulate a plurality of physical DRAM circuits to appear as at least one virtual DRAM circuit with at least one command operation period that is different from that of the physical DRAM circuits. This embodiment may be used if the existing command operation periods of the physical DRAM circuits are not long enough to hide the power down entry and/or exit latencies, thus necessitating the interface circuit to increase the command operation periods by simulating a virtual DRAM circuit with at least one different (e.g. longer, etc.) command operation period from that of the physical DRAM circuits.
- Specific examples of different power management schemes in various embodiments are described below for illustrative purposes. It should again be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner.
- Row cycle time based power management is an example of a power management scheme that uses the command operation period of DRAM circuits to hide power down entry and exit latencies. In one embodiment, the interface circuit may place at least one first physical DRAM circuit into power down mode based on the commands directed to a second physical DRAM circuit. Power management schemes such as a row cycle time based scheme may be best suited for a many-circuit-to-one-bank configuration of DRAM circuits.
- As explained previously, in a many-circuit-to-one-bank configuration, a plurality of physical DRAM circuits may be mapped to a single bank of a larger capacity virtual DRAM circuit seen by the memory controller. For example, sixteen 256Mb DDR2 physical SDRAM circuits may appear to the memory controller as a single 4Gb virtual DDR2 SDRAM circuit. Since a 4Gb DDR2 SDRAM circuit is specified by the JEDEC standards to have eight physical banks, two of the 256Mb DDR2 physical SDRAM circuits may be mapped by the interface circuit to a single bank of the virtual 4Gb DDR2 SDRAM circuit.
- In one embodiment,
bank 0 of the virtual 4Gb DDR2 SDRAM circuit may be mapped by the interface circuit to two 256Mb DDR2 physical SDRAM circuits (e.g. DRAM A and DRAM B). However, since only one page may be open in a bank of a DRAM circuit (either physical or virtual) at any given time, only one of DRAM A or DRAM B may be in the active state at any given time. If the memory controller issues a first activate (e.g. page open, etc.) command tobank 0 of the 4Gb virtual DRAM, that command may be directed by the interface circuit to either DRAM A or DRAM B, but not to both. - In addition, the memory controller may be unable to issue a second activate command to
bank 0 of the 4Gb virtual DRAM until a period tRC has elapsed from the time the first activate command was issued by the memory controller. In this instance, the command operation period of an activate command may be tRC. The parameter tRC may be much longer than the power down entry and exit latencies. - Therefore, if the first activate command is directed by the interface circuit to DRAM A, then the interface circuit may place DRAM B in the precharge power down mode during the activate command operation period (e.g. for period tRC). As another option, if the first activate command is directed by the interface circuit to DRAM B, then it may place DRAM A in the precharge power down mode during the command operation period of the first activate command. Thus, if p physical DRAM circuits (where p is greater than 1) are mapped to a single bank of a virtual DRAM circuit, then at least p - 1 of the p physical DRAM circuits may be subjected to a power saving operation. The power saving operation may, for example, comprise operating in precharge power down mode except when refresh is required. Of course, power savings may also occur in other embodiments without such continuity.
- Row precharge time based power management is an example of a power management scheme that, in one embodiment, uses the precharge command operation period (that is the command operation period of precharge commands, tRP) of physical DRAM circuits to hide power down entry and exit latencies. In another embodiment, a row precharge time based power management scheme may be implemented that uses the precharge command operation period of virtual DRAM circuits to hide power down entry and exit latencies. In these schemes, the interface circuit may place at least one DRAM circuit into power down mode based on commands directed to the same at least one DRAM circuit. Power management schemes such as the row precharge time based scheme may be best suited for many-circuit-to-one-bank and one-circuit-to-one-bank configurations of physical DRAM circuits. A row precharge time based power management scheme may be particularly efficient when the memory controller implements a closed page policy.
- A row precharge time based power management scheme may power down a physical DRAM circuit after a precharge or autoprecharge command closes an open bank. This power management scheme allows each physical DRAM circuit to enter power down mode when not in use. While the specific memory circuit technology used in this example is DDR2 and the command used here is the precharge or autoprecharge command, the scheme may be utilized in any desired context. This power management scheme uses an algorithm to determine if there is any required delay as well as the timing of the power management in terms of the command operation period.
- In one embodiment, if the tRP of a physical DRAM circuit [tRP(physical)] is larger than k (where k is the power management latency), then the interface circuit may place that DRAM circuit into precharge power down mode during the command operation period of the precharge or autoprecharge command. In this embodiment, the precharge power down mode may be initiated following the precharge or autoprecharge command to the open bank in that physical DRAM circuit. Additionally, the physical DRAM circuit may be brought out of precharge power down mode before the earliest time a subsequent activate command may arrive at the inputs of the physical DRAM circuit. Thus, the power down entry and power down exit latencies may be hidden from the memory controller.
- In another embodiment, a plurality of physical DRAM circuits may appear to the memory controller as at least one larger capacity virtual DRAM circuit with a tRP(virtual) that is larger than that of the physical DRAM circuits [e.g. larger than tRP(physical)]. For example, the physical DRAM circuits may, through simulation, appear to the memory controller as a larger capacity virtual DRAM with tRP(virtual) equal to tRP(physical) + m, where m may be an integer multiple of the clock cycle, or may be a non-integer multiple of the clock cycle, or may be a constant or variable multiple of the clock cycle, or may be less than one clock cycle, or may be zero. Note that m may or may not be equal to j. If tRP(virtual) is larger than k, then the interface circuit may place a physical DRAM circuit into precharge power down mode in a subsequent clock cycle after a precharge or autoprecharge command to the open bank in the physical DRAM circuit has been received by the physical DRAM circuit. Additionally, the physical DRAM circuit may be brought out of precharge power down mode before the earliest time a subsequent activate command may arrive at the inputs of the physical DRAM circuit. Thus, the power down entry and power down exit latency may be hidden from the memory controller.
- In yet another embodiment, the interface circuit may make the stack of physical DRAM circuits appear to the memory controller as at least one larger capacity virtual DRAM circuit with tRP(virtual) and tRCD(virtual) that are larger than that of the physical DRAM circuits in the stack [e.g. larger than tRP(physical) and tRCD(physical) respectively, where tRCD(physical) is the tRCD of the physical DRAM circuits]. For example, the stack of physical DRAM circuits may appear to the memory controller as a larger capacity virtual DRAM with tRP(virtual) and tRCD(virtual) equal to [tRP(physical) + m] and tRCD(physical) + 1] respectively. Similar to m, 1 may be an integer multiple of the clock cycle, or may be a non-integer multiple of the clock cycle, or may be constant or variable multiple of the clock cycle, or may be less than a clock cycle, or may be zero. Also, I may or may not be equal to j and/or m. In this embodiment, iftRP(virtual) is larger than n (where n is the power down entry latency defined earlier), and if 1 is larger than or equal to x (where x is the power down exit latency defined earlier), then the interface circuit may use the following sequence of events to implement a row precharge time based power management scheme and also hide the power down entry and exit latencies from the memory controller.
- First, when a precharge or autoprecharge command is issued to an open bank in a physical physical DRAM circuit, the interface circuit may place that physical DRAM circuit into precharge power down mode in a subsequent clock cycle after the precharge or autoprecharge command has been received by that physical DRAM circuit. The interface circuit may continue to keep the physical DRAM circuit in the precharge power down mode until the interface circuit receives a subsequent activate command to that physical DRAM circuit.
- Second, the interface circuit may then bring the physical DRAM circuit out of precharge power down mode by asserting the CKE input of the physical DRAM in a following clock cycle. The interface circuit may also delay the address and control signals associated with the activate command for a minimum of x clock cycles before sending the signals associated with the activate command to the physical DRAM circuit.
- The row precharge time based power management scheme described above is suitable for many-circuit-to-one-bank and one-circuit-to-one-bank configurations since there is a guaranteed minimum period of time (e.g. a keep-out period) of at least tRP(physical) after a precharge command to a physical DRAM circuit during which the memory controller will not issue a subsequent activate command to the same physical DRAM circuit. In other words, the command operation period of a precharge command applies to the entire DRAM circuit. In the case of one-circuit-to-many-bank configurations, there is no guarantee that a precharge command to a first portion(s) (e.g. bank) of a physical DRAM circuit will not be immediately followed by an activate command to a second portion(s) (e.g. bank) of the same physical DRAM circuit. In this case, there is no keep-out period to hide the power down entry and exit latencies. In other words, the command operation period of a precharge command applies only to a portion of the physical DRAM circuit. For example, four 512Mb physical DDR2 SDRAM circuits through simulation may appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit with eight banks. Therefore, the interface circuit may map two banks of the 2Gb virtual DRAM circuit to each 512Mb physical DRAM circuit. Thus,
banks bank 0 of the virtual DRAM circuit may have an open page whilebank 1 of the virtual DRAM circuit may have no open page. - When the memory controller issues a precharge or autoprecharge command to
bank 0 of the 2Gb virtual DRAM circuit, the interface circuit may signal DRAM C to enter the precharge power down mode after the precharge or autoprecharge command has been received by DRAM C. The interface circuit may accomplish this by de-asserting the CKE input of DRAM C during a clock cycle subsequent to the clock cycle in which DRAM C received the precharge or autoprecharge command. However, the memory controller may issue an activate command to thebank 1 of the 2Gb virtual DRAM circuit on the next clock cycle after it issued the precharge command tobank 0 of the virtual DRAM circuit. - However, DRAM C may have just entered a power down mode and may need to exit power down immediately. As described above, a DDR2 SDRAM may require a minimum of k = clock cycles to enter a power down mode and immediately exit the power down mode. In this example, the command operation period of the precharge command to
bank 0 of the 2Gb virtual DRAM circuit may not be sufficiently long enough to hide the power down entry latency of DRAM C even if the command operation period of the activate command tobank 1 of the 2Gb virtual DRAM circuit is long enough to hide the power down exit latency of DRAM C, which would then cause the simulated 2Gb virtual DRAM circuit to not be in compliance with the DDR2 protocol. It is therefore difficult, in a simple fashion, to hide the power management latency during the command operation period of precharge commands in a one-circuit-to-many-bank configuration. - Row activate time based power management is a power management scheme that, in one embodiment, may use the activate command operation period (that is the command operation period of activate commands) of DRAM circuits to hide power down entry latency and power down exit latency.
- In a first embodiment, a row activate time based power management scheme may be used for one-circuit-to-many-bank configurations. In this embodiment, the power down entry latency of a physical DRAM circuit may be hidden behind the command operation period of an activate command directed to a different physical DRAM circuit. Additionally, the power down exit latency of a physical DRAM circuit may be hidden behind the command operation period of an activate command directed to itself. The activate command operation periods that are used to hide power down entry and exit latencies may be tRRD and tRCD respectively.
- In a second embodiment, a row activate time based power management scheme may be used for many-circuit-to-one-bank and one-circuit-to-one-bank configurations. In this embodiment, the power down entry and exit latencies of a physical DRAM circuit may be hidden behind the command operation period of an activate command directed to itself. In this embodiment, the command operation period of an activate command may be tRCD.
- In the first embodiment, a row activate time based power management scheme may place a first DRAM circuit that has no open banks into a power down mode when an activate command is issued to a second DRAM circuit if the first and second DRAM circuits are part of a plurality of physical DRAM circuits that appear as a single virtual DRAM circuit to the memory controller. This power management scheme may allow each DRAM circuit to enter power down mode when not in use. This embodiment may be used in one-circuit-to-many-bank configurations of DRAM circuits. While the specific memory circuit technology used in this example is DDR2 and the command used here is the activate command, the scheme may be utilized in any desired context The scheme uses an algorithm to determine if there is any required delay as well as the timing of the power management in terms of the command operation period.
- In a one-circuit-to-many-bank configuration, a plurality of banks of a virtual DRAM circuit may be mapped to a single physical DRAM circuit. For example, four 512Mb DDR2 SDRAM circuits through simulation may appear to the memory controller as a single 2Gb virtual DDR2 SDRAM circuit with eight banks. Therefore, the interface circuit may map two banks of the 2Gb virtual DRAM circuit to each 512Mb physical DRAM circuit. Thus,
banks banks banks banks - In addition,
bank 0 of the virtual DRAM circuit may have an open page while all the other banks of the virtual DRAM circuit may have no open pages. When the memory controller issues a precharge or autoprecharge command tobank 0 of the 2Gb virtual DRAM circuit, the interface circuit may not be able to place DRAM P in precharge power down mode after the precharge or autoprecharge command has been received by DRAM P. This may be because the memory controller may issue an activate command tobank 1 of the 2Gb virtual DRAM circuit in the very next cycle. As described previously, a row precharge time based power management scheme may not be used in a one-circuit-to-many-bank configuration since there is no guaranteed keep-out period after a precharge or autoprecharge command to a physical DRAM circuit. - However, since physical DRAM circuits DRAM P, DRAM Q, DRAM R, and DRAM S all appear to the memory controller as a single 2Gb virtual DRAM circuit, the memory controller may ensure a minimum period of time, tRRD(MIN), between activate commands to the single 2Gb virtual DRAM circuit. For DDR2 SDRAMs, the active bank N to active bank M command period tRRD may be variable with a minimum value of tRRD(MIN) (e.g. 2 clock cycles, etc.).
- The parameter tRRD may be specified in nanoseconds and may be defined in JEDEC Standard No. 21-C. For example, tRRD may be measured as an integer number of clock cycles. Optionally, tRRD may not be specified to be an exact number of clock cycles. The tRRD parameter may mean an activate command to a second bank B of a DRAM circuit (either physical DRAM circuit or virtual DRAM circuit) may not be able to follow an activate command to a first bank A of the same DRAM circuit in less than tRRD clock cycles.
- If tRRD(MIN) = n (where n is the power down entry latency), a first number of physical DRAM circuits that have no open pages may be placed in power down mode when an activate command is issued to another physical DRAM circuit that through simulation is part of the same virtual DRAM circuit. In the above example, after a precharge or autoprecharge command has closed the last open page in DRAM P, the interface circuit may keep DRAM P in precharge standby mode until the memory controller issues an activate command to one of DRAM Q, DRAM R, and DRAM S. When the interface circuit receives the abovementioned activate command, it may then immediately place DRAM P into precharge power down mode if tRRD(MIN) ≥ n.
- Optionally, when one of the interface circuits is a register, the above power management scheme may be used even if tRRD(MIN) < n as long as tRRD(MIN) = n - 1. In this optional embodiment, the additional typical one clock cycle delay through a JEDEC register helps to hide the power down entry latency if tRRD(MIN) by itself is not sufficiently long to hide the power down entry latency.
- The above embodiments of a row activate time power management scheme require I to be larger than or equal to x (where x is the power down exit latency) so that when the memory controller issues an activate command to a bank of the virtual DRAM circuit, and if the corresponding physical DRAM circuit is in precharge power down mode, the interface circuit can hide the power down exit latency of the physical DRAM circuit behind the row activate time tRCD of the virtual DRAM circuit. The power down exit latency may be hidden because the interface circuit may simulate a plurality of physical DRAM circuits as a larger capacity virtual DRAM circuit with tRCD(virtual) = tRCD(physical) + 1, where tRCD(physical) is the tRCD of the physical DRAM circuits. Therefore, when the interface circuit receives an activate command that is directed to a DRAM circuit that is in precharge power down mode, it will delay the activate command by at least x clock cycles while simultaneously bringing the DRAM circuit out of power down mode. Since 1 ≥ x, the command operation period of the activate command may overlap the power down exit latency, thus allowing the interface circuit to hide the power down exit latency behind the row activate time.
- Using the same example as above, DRAM P may be placed into precharge power down mode after the memory controller issued a precharge or autoprecharge command to the last open page in DRAM P and then issued an activate command to one of DRAM Q, DRAM R, and DRAM S. At a later time, when the memory controller issues an activate command to DRAM P, the interface circuit may immediately bring DRAM P out of precharge power down mode while delaying the activate command to DRAM P by at least x clock cycles. Since 1 ≥ x, DRAM P may be ready to receive the delayed activate command when the interface circuit sends the activate command to DRAM P.
- For many-circuit-to-one-bank and one-circuit-to-one-bank configurations, another embodiment of the row activate time based power management scheme may be used. For both many-circuit-to-one-bank and one-circuit-to-one-bank configurations, an activate command to a physical DRAM circuit may have a keep-out or command operation period of at least tRCD(virtual) clock cycles [tRCD(virtual) = tRCD(physical) + 1]. Since each physical DRAM circuit is mapped to one bank (or portion(s) thereof) of a larger capacity virtual DRAM circuit, it may be certain that no command may be issued to a physical DRAM circuit for a minimum of tRCD(viriual) clock cycles after an activate command has been issued to the physical DRAM circuit.
- If tRCD(physical) or tRCD(virtual) is larger than k (where k is the power management latency), then the interface circuit may place the physical DRAM circuit into active power down mode on the clock cycle after the activate command has been received by the physical DRAM circuit and bring the physical DRAM circuit out of active power down mode before the earliest time a subsequent read or write command may arrive at the inputs of the physical DRAM circuit. Thus, the power down entry and power down exit latencies may be hidden from the memory controller.
- The command and power down mode used for the activate command based power-management scheme may be the activate command and precharge or active power down modes, but other similar power down schemes may use different power down modes, with different commands, and indeed even alternative DRAM circuit technologies may be used.
- Refresh cycle time based power management is a power management scheme that uses the refresh command operation period (that is the command operation period of refresh commands) of virtual DRAM circuits to hide power down entry and exit latencies. In this scheme, the interface circuit places at least one physical DRAM circuit into power down mode based on commands directed to a different physical DRAM circuit. A refresh cycle time based power management scheme that uses the command operation period of virtual DRAM circuits may be used for many-circuit-to-one-bank, one-circuit-to-one-bank, and one-circuit-to-many-bank configurations.
- Refresh commands to a DRAM circuit may have a command operation period that is specified by the refresh cycle time, tRFC. The minimum and maximum values of the refresh cycle time, tRFC, may be specified in nanoseconds and may further be defined in the JEDEC standards (e.g. JEDEC Standard No. 21-C for DDR2 SDRAM, etc.). In one embodiment, the minimum value of tRFC [e.g. tRFC(MIN)] may vary as a function of the capacity of the DRAM circuit. Larger capacity DRAM circuits may have larger values of tRFC(MIN) than smaller capacity DRAM circuits. The parameter tRFC may be measured as an integer number of clock cycles, although optionally the tRFC may not be specified to be an exact number clock cycles.
- A memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits. After a refresh command is issued to a DRAM circuit, a minimum time (e.g. denoted by tRFC) may be required to elapse before another command may be issued to that DRAM circuit. In the case where a plurality of physical DRAM circuits through simulation by an interface circuit may appear to the memory controller as at least one larger capacity virtual DRAM circuit, the command operation period of the refresh commands (e.g. the refresh cycle time, tRFC) from the memory controller may be larger than that required by the DRAM circuits. In other words, tRFC(virtual) > tRFC(physical), where tRFC(physical) is the refresh cycle time of the smaller capacity physical DRAM circuits.
- When the interface circuit receives a refresh command from the memory controller, it may refresh the smaller capacity physical DRAM circuits within the span of time specified by the tRFC associated with the larger capacity virtual DRAM circuit Since the tRFC of the virtual DRAM circuit may be larger than that of the associated physical DRAM circuits, it may not be necessary to issue refresh commands to all of the physical DRAM circuits simultaneously. Refresh commands may be issued separately to individual physical DRAM circuits or may be issued to groups of physical DRAM circuits, provided that the tRFC requirement of the physical DRAM circuits is satisfied by the time the tRFC of the virtual DRAM circuit has elapsed.
- In one exemplary embodiment, the interface circuit may place a physical DRAM circuit into power down mode for some period of the tRFC of the virtual DRAM circuit when other physical DRAM circuits are being refreshed. For example, four 512Mb physical DRAM circuits (e.g. DRAM W, DRAM X, DRAM Y, DRAM Z) through simulation by an interface circuit may appear to the memory controller as a 2Gb virtual DRAM circuit. When the memory controller issues a refresh command to the 2Gb virtual DRAM circuit, it may not issue another command to the 2Gb virtual DRAM circuit at least until a period of time, tRFC(MIN)(virtual), has elapsed.
- Since the tRFC(MIN)(physical) of the 512Mb physical DRAM circuits (DRAM W, DRAM X, DRAM Y, and DRAM Z) may be smaller than the tRFC(MIN)(virtual) of the 2Gb virtual DRAM circuit, the interface circuit may stagger the refresh commands to DRAM W, DRAM X, DRAM Y, DRAM Z such that that total time needed to refresh all the four physical DRAM circuits is less than or equal to the tRFC(MIN)(virtual) of the virtual DRAM circuit. In addition, the interface circuit may place each of the physical DRAM circuits into precharge power down mode either before or after the respective refresh operations.
- For example, the interface circuit may place DRAM Y and DRAM Z into power down mode while issuing refresh commands to DRAM W and DRAM X. At some later time, the interface circuit may bring DRAM Y and DRAM Z out of power down mode and issue refresh commands to both of them. At a still later time, when DRAM W and DRAM X have finished their refresh operation, the interface circuit may place both of them in a power down mode. At a still later time, the interface circuit may optionally bring DRAM W and DRAM X out of power down mode such that when DRAM Y and DRAM Z have finished their refresh operations, all four DRAM circuits are in the precharge standby state and ready to receive the next command from the memory controller. In another example, the memory controller may place DRAM W, DRAM X, DRAM Y, and DRAM Z into precharge power down mode after the respective refresh operations if the power down exit latency of the DRAM circuits may be hidden behind the command operation period of the activate command of the virtual 2Gb DRAM circuit.
-
FIG. 24 shows amemory system 2400 comprising FB-DIMM modules using DRAM circuits with AMB chips, in accordance with another embodiment. As an option, thememory system 2400 may be implemented in the context of the architecture and environment ofFIGS. 19-23 . Of course, however, thememory system 2400 may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As described herein, the memory circuit power management scheme may be associated with an FB-DIMM memory system that uses DDR2 SDRAM circuits. However, other memory circuit technologies such as DDR3 SDRAM, Mobile DDR SDRAM, etc. may provide similar control inputs and modes for power management and the example described in this section can be used with other types of buffering schemes and other memory circuit technologies. Therefore, the description of the specific example should not be construed as limiting in any manner.
- In an FB-
DIMM memory system 2400, amemory controller 2402 may place commands and write data into frames and send the frames to interface circuits (e.g. AMB chip 2404, etc.). Further, in the FB-DIMM memory system 2400, there may be oneAMB chip 2404 on each of a plurality ofDIMMs 2406A-C. For thememory controller 2402 to address and control DRAM circuits, it may issue commands that are placed into frames. - The command frames or command and data frames may then be sent by the
memory controller 2402 to thenearest AMB chip 2404 through a dedicated outbound path, which may be denoted as a southbound lane. TheAMB chip 2404 closest to thememory controller 2402 may then relay the frames to thenext AMB chip 2404 via its own southbound lane. In this manner, the frames may be relayed to eachAMB chip 2404 in the FB-DIMM memory channel. - In the process of relaying the frames, each
AMB chip 2404 may partially decode the frames to determine if a given frame contains commands targeted to the DRAM circuits on that the associatedDIMM 2406A-C. If a frame contains a read command addressed to a set of DRAM circuits on a givenDIMM 2406A-C, theAMB chip 2404 on the associatedDIMM 2406A-C accessesDRAM circuits 2408 to retrieve the requested data. The data may be placed into frames and returned to thememory controller 2402 through a similar frame relay process on the northbound lanes as that described for the southbound lanes. - Two classes of scheduling algorithms may be utilized for
AMB chips 2404 to return data frames to thememory controller 2402, including variable-latency scheduling and fixed-latency scheduling. With respect to variable latency scheduling, after a read command is issued to theDRAM circuits 2408, theDRAM circuits 2408 return data to theAMB chip 2404. TheAMB chip 2404 then constructs a data frame, and as soon as it can, places the data frame onto the northbound lanes to return the data to thememory controller 2402. The variable latency scheduling algorithm may ensure the shortest latency for any given request in the FB-DIMM channel. - However, in the variable latency scheduling algorithm,
DRAM circuits 2408 located on the DIMM (e.g. theDIMM 2406A, etc.) that is closest to thememory controller 2402 may have the shortest access latency, whileDRAM circuits 2408 located on the DIMM (e.g. theDIMM 2406C, etc.) that is at the end of the channel may have the longest access latency. As a result, thememory controller 2402 may be sophisticated, such that command frames may be scheduled appropriately to ensure that data return frames do not collide on the northbound lanes. - In a FB-
DIMM memory system 2400 with only one or twoDIMMs 2406A-C, variable latency scheduling may be easily performed since there may be limited situations where data frames may collide on the northbound lanes. However, variable latency scheduling may be far more difficult if thememory controller 2402 has to be designed to account for situations where the FB-DIMM channel can be configured with one DIMM, eight DIMMs, or any other number of DIMMs. Consequently, the fixed latency scheduling algorithm may be utilized in an FB-DIMM memory system 2400 to simplify memory controller design. - In the fixed latency scheduling algorithm, every
DIMM 2406A-C is configured to provide equal access latency from the perspective of thememory controller 2402. In such a case, the access latency of everyDIMM 2406A-C may be equalized to the access latency of the slowest-responding DIMM (e.g. theDIMM 2406C, etc.). As a result, theAMB chips 2404 that are not the slowest responding AMB chip 2404 (e.g. theAMB chip 2404 of theDIMM 2406C, etc.) may be configured with additional delay before it can upload the data frames into the northbound lanes. - From the perspective of the
AMB chips 2404 that are not the slowest respondingAMB chip 2404 in the system, data access occurs as soon as the DRAM command is decoded and sent to theDRAM circuits 2408. However, theAMB chips 2404 may then hold the data for a number of cycles before this data is returned to thememory controller 2402 via the northbound lanes. The data return delay may be different for eachAMB chip 2404 in the FB-DIMM channel. - Since the role of the data return delay is to equalize the memory access latency for each
DIMM 2406A-C, the data return delay value may depend on the distance of theDIMM 2406A-C from thememory controller 2402 as well as the access latency of the DRAM circuits 2408 (e.g. the respective delay values may be computed for eachAMB chip 2404 in a given FB-DIMM channel, and programmed into theappropriate AMB chip 2404. - In the context of the memory circuit power management scheme, the
AMB chips 2404 may use the programmed delay values to perform differing classes of memory circuit power management algorithms. In cases where the programmed data delay value is larger than k = n + x, where n is the minimum power down entry latency, x is the minimum power down exit latency, and k is the cumulative sum of the two, theAMB chip 2404 can provide aggressive power management before and after every command. In particular, the large delay value ensures that theAMB chip 2404 can placeDRAM circuits 2408 into power down modes and move them to active modes as needed. - In the cases where the programmed data delay value is smaller than k, but larger than x, the
AMB chip 2404 can placeDRAM circuits 2408 into power down modes selectively after certain commands, as long as these commands provide the required command operation periods to hide the minimum power down entry latency. For example, theAMB chip 2404 can choose to place theDRAM circuits 2408 into a power down mode after a refresh command, and theDRAM circuits 2408 can be kept in the power down mode until a command is issued by thememory controller 2402 to access the specific set ofDRAM circuits 2408. Finally, in cases where the programmed data delay is smaller than x, theAMB chip 2404 may choose to implement power management algorithms to a selected subset ofDRAM circuits 2408. - There are various optional characteristics and benefits available when using CKE power management in FB-DIMMs. First, there is not necessarily a need for explicit CKE commands, and therefore there is not necessarily a need to use command bandwidth. Second, granularity is provided, such that CKE power management will power down DRAM circuits as needed in each DIMM. Third, the CKE power management can be most aggressive in the DIMM that is closest to the controller (e.g. the DIMM closest to the memory controller which contains the AMB chip that consumes the highest power because of the highest activity rates).
- While many examples of power management schemes for memory circuits have been described above, other implementations are possible. For DDR2, for example, there may be approximately 15 different commands that could be used with a power management scheme. The above descriptions allow each command to be evaluated for suitability and then appropriate delays and timing may be calculated For other memory circuit technologies, similar power saving schemes and classes of schemes may be derived from the above descriptions.
- The schemes described are not limited to be used by themselves. For example, it is possible to use a trigger that is more complex than a single command in order to initiate power management. In particular, power management schemes may be initiated by the detection of combinations of commands, or patterns of commands, or by the detection of an absence of commands for a certain period of time, or by any other mechanism.
- Power management schemes may also use multiple triggers including forming a class of power management schemes using multiple commands or multiple combinations of commands. Power management schemes may also be used in combination. Thus, for example, a row precharge time based power management scheme may be used in combination with a row activate time command based power management scheme.
- The description of the power management schemes in the above sections has referred to an interface circuit in order to perform the act of signaling the DRAM circuits and for introducing delay if necessary. An interface circuit may optionally be a part of the stack of DRAM circuits. Of course, however, the interface circuit may also be separate from the stack of DRAM circuits. In addition, the interface circuit may be physically located anywhere in the stack of DRAM circuits, where such interface circuit electrically sits between the electronic system and the stack of DRAM circuits.
- In one implementation, for example, the interface circuit may be split into several chips that in combination perform the power management functions described. Thus, for example, there may be a single register chip that electrically sits between the memory controller and a number of stacks of DRAM circuits. The register chip may optionally perform the signaling to the DRAM circuits.
- The register chip may further be connected electrically to a number of interface circuits that sit electrically between the register chip and a stack of DRAM circuits. The interface circuits in the stacks of DRAM circuits may then perform the required delay if it is needed. In another implementation there may be no need for an interface circuit in each DRAM stack. In that case, the register chip can perform the signaling to the DRAM circuits directly. In yet another implementation, a plurality of register chips and buffer chips may sit electrically between the stacks of DRAM circuits and the system, where both the register chips and the buffer chips perform the signaling to the DRAM circuits as well as delaying the address, control, and data signals to the DRAM circuits. In another implementation there may be no need for a stack of DRAM circuits. Thus each stack may be a single memory circuit.
- Further, the power management schemes described for the DRAM circuits may also be extended to the interface circuits. For example, the interface circuits have information that a signal, bus, or other connection will not be used for a period of time. During this period of time, the interface circuits may perform power management on themselves, on other interface circuits, or cooperatively. Such power management may, for example, use an intelligent signaling mechanism (e.g. encoded signals, sideband signals, etc.) between interface circuits (e.g. register chips, buffer chips, AMB chips, etc.).
- It should thus be clear that the power management schemes described here are by way of specific examples for a particular technology, but that the methods and techniques are very general and may be applied to any memory circuit technology to achieve control over power behavior including, for example, the realization of power consumption savings and management of current consumption behavior.
- In the various embodiments described above, it may be desirable to verify that the simulated DRAM circuit including any power management scheme or CAS latency simulation or any other simulation behaves according to a desired DRAM standard or other design specification. A behavior of many DRAM circuits is specified by the JEDEC standards and it may be desirable, in some embodiments, to exactly simulate a particular JEDEC standard DRAM. The JEDEC standard may define control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals. For example, the JEDEC specification for a DDR2 SDRAM may include JESD79-2B (and any associated revisions).
- If it is desired, for example, to determine whether a JEDEC standard is met, an algorithm may be used. Such algorithm may check, using a set of software verification tools for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as a desired standard or other design specification. This formal verification may be feasible because the DRAM protocol described in a DRAM standard may, in various embodiments, be limited to a few protocol commands (e.g. approximately 15 protocol commands in the case of the JEDEC DDR2 specification, for example).
- Examples of the aforementioned software verification tools include MAGELLAN supplied by SYNOPSYS, or other software verification tools, such as INCISIVE supplied by CADENCE, verification tools supplied by JASPER, VERIX supplied by REAL INTENT, 0-IN supplied by MENTOR CORPORATION, etc. These software verification tools may use written assertions that correspond to the rules established by the DRAM protocol and specification.
- The written assertions may be further included in code that forms the logic description for the interface circuit. By writing assertions that correspond to the desired behavior of the simulated DRAM circuit, a proof may be constructed that determines whether the desired design requirements are met. In this way, one may test various embodiments for compliance with a standard, multiple standards, or other design specification.
- For example, assertions may be written that there are no conflicts on the address bus, command bus or between any clock, control, enable, reset or other signals necessary to operate or associated with the interface circuits and/or DRAM circuits. Although one may know which of the various interface circuit and DRAM stack configurations and address mappings that have been described herein are suitable, the aforementioned algorithm may allow a designer to prove that the simulated DRAM circuit exactly meets the required standard or other design specification. If, for example, an address mapping that uses a common bus for data and a common bus for address results in a control and clock bus that does not meet a required specification, alternative designs for the interface circuit with other bus arrangements or alternative designs for the interconnect between the components of the interface circuit may be used and tested for compliance with the desired standard or other design specification.
-
FIG. 25 illustrates a multiplememory circuit framework 2500, in accordance with one embodiment. As shown, included are aninterface circuit 2502, a plurality ofmemory circuits system 2506. In the context of the present description,such memory circuits - For example, in various embodiments, at least one of the
memory circuits memory circuits - In another embodiment, at least one of the
memory circuits - Strictly as an option, the
memory circuits memory circuits memory circuits memory circuits - Further, in the context of the present description, the
system 2506 may include any system capable of requesting and/or initiating a process that results in an access of thememory circuits system 2506 may accomplish this utilizing a memory controller (not shown), or any other desired mechanism. In one embodiment,such system 2506 may include a system in the form of a desktop computer, a lap-top computer, a server, a storage system, a networking system, a workstation, a personal digital assistant (PDA), a mobile phone, a television, a computer peripheral (e.g. printer, etc.), a consumer electronics system, a communication system, and/or any other software and/or hardware, for that matter. - The
interface circuit 2502 may, in the context of the present description, refer to any circuit capable of communicating (e.g. interfacing, buffering, etc.) with thememory circuits system 2506. For example, theinterface circuit 2502 may, in the context of different embodiments, include a circuit capable of directly (e.g. via wire, bus, connector, and/or any other direct communication medium, etc.) and/or indirectly (e.g. via wireless, optical, capacitive, electric field, magnetic field, electromagnetic field, and/or any other indirect communication medium, etc.) communicating with thememory circuits system 2506. In additional different embodiments, the communication may use a direct connection (e.g. point-to-point, single-drop bus, multi-drop bus, serial bus, parallel bus, link, and/or any other direct connection, etc.) or may use an indirect connection (e.g. through intermediate circuits, intermediate logic, an intermediate bus or busses, and/or any other indirect connection, etc.). - In additional optional embodiments, the
interface circuit 2502 may include one or more circuits, such as a buffer (e.g. buffer chip, multiplexer/de-multiplexer chip, synchronous multiplexer/de-multiplexer chip, etc.), register (e.g. register chip, data register chip, address/control register chip, etc.), advanced memory buffer (AMB) (e.g. AMB chip, etc.), a component positioned on at least one DIMM, etc. - In various embodiments and in the context of the present description, a buffer chip may be used to interface bidirectional data signals, and may or may not use a clock to re-time or re-synchronize signals in a well known manner. A bidirectional signal is a well known use of a single connection to transmit data in two directions. A data register chip may be a register chip that also interfaces bidirectional data signals. A multiplexer/demultiplexer chip is a well known circuit that may interface a first number of bidirectional signals to a second number of bidirectional signals. A synchronous multiplexer/demultiplexer chip may additionally use a clock to re-time or re-synchronize the first or second number of signals. In the context of the present description, a register chip may be used to interface and optionally re-time or re-synchronize address and control signals. The term address/control register chip may be used to distinguish a register chip that only interfaces address and control signals from a data register chip, which may also interface data signals.
- Moreover, the register may, in various embodiments, include a JEDEC Solid State Technology Association (known as JEDEC) standard register (a JEDEC register), a register with forwarding, storing, and/or buffering capabilities, etc. In various embodiments, the registers, buffers, and/or any other interface circuit(s) 2502 may be intelligent, that is, include logic that are capable of one or more functions such as gathering and/or storing information; inferring, predicting, and/or storing state and/or status; performing logical decisions; and/or performing operations on input signals, etc. In still other embodiments, the
interface circuit 2502 may optionally be manufactured in monolithic form, packaged form, printed form, and/or any other manufactured form of circuit, for that matter. - In still yet another embodiment, a plurality of the
aforementioned interface circuits 2502 may serve, in combination, to interface thememory circuits system 2506. Thus, in various embodiments, one, two, three, four, ormore interface circuits 2502 may be utilized for such interfacing purposes. In addition,multiple interface circuits 2502 may be relatively configured or connected in any desired manner. For example, theinterface circuits 2502 may be configured or connected in parallel, serially, or in various combinations thereof. Themultiple interface circuits 2502 may use direct connections to each other, indirect connections to each other, or even a combination thereof. Furthermore, any number of theinterface circuits 2502 may be allocated to any allocated to any number of thememory circuits interface circuits 2502 may be the same or different. Even still, theinterface circuits 2502 may share the same or similar interface tasks and/or perform different interface tasks. - While the
memory circuits interface circuit 2502, andsystem 2506 are shown to be separate parts, it is contemplated that any of such parts (or portion(s) thereof) may be integrated in any desired manner. In various embodiments, such optional integration may involve simply packaging such parts together (e.g. stacking the parts to form a stack of DRAM circuits, a DRAM stack, a plurality of DRAM stacks, a hardware stack, where a stack may refer to any bundle, collection, or grouping of parts and/or circuits, etc.) and/or integrating them monolithically. Just by way of example, in one optional embodiment, at least one interface circuit 2502 (or portion(s) thereof) may be packaged with at least one of thememory circuits - The
interface circuit 2502 may be capable of various functionality, in the context of different embodiments. For example, in one optional embodiment, theinterface circuit 2502 may interface a plurality ofsignals 2508 that are connected between thememory circuits system 2506. Thesignals 2508 may, for example, include address signals, data signals, control signals, enable signals, clock signals, reset signals, or any other signal used to operate or associated with the memory circuits, system, or interface circuit(s), etc. In some optional embodiments, the signals may be those that: use a direct connection, use an indirect connection, use a dedicated connection, may be encoded across several connections, and/or may be otherwise encoded (e.g. time-multiplexed, etc.) across one or more connections. - In one aspect of the present embodiment, the interfaced
signals 2508 may represent all of the signals that are connected between thememory circuits system 2506. In other aspects, at least a portion ofsignals 2510 may use direct connections between thememory circuits system 2506. Thesignals 2510 may, for example, include address signals, data signals, control signals, enable signals, clock signals, reset signals, or any other signal used to operate or associated with the memory circuits, system, or interface circuit(s), etc. In some optional embodiments, the signals may be those that: use a direct connection, use an indirect connection, use a dedicated connection, may be encoded across several connections, and/or may be otherwise encoded (e.g. time-multiplexed, etc.) across one or more connections. Moreover, the number of interfaced signals 2508 (e.g. vs. a number of the signals that usedirect connections 2510, etc.) may vary such that the interfacedsignals 2508 may include at least a majority of the total number of signal connections between thememory circuits FIG. 25 ). In other embodiments, L may be less than or equal to M. In still other embodiments L and/or M may be zero. - In yet another embodiment, the
interface circuit 2502 and/or any component of thesystem 2506 may or may not be operable to communicate with thememory circuits memory circuits - In the context of the present description, the term simulate or simulation may refer to any simulating, emulating, transforming, disguising modifying, changing, altering, shaping, converting, etc., of at least one aspect of the memory circuits. In different embodiments, such aspect may include, for example, a number, a signal, a capacity, a portion (e.g. bank, partition, etc.), an organization (e.g. bank organization, etc.), a mapping (e.g. address mapping, etc.), a timing, a latency, a design parameter, a logical interface, a control system, a property, a behavior, and/or any other aspect, for that matter. Still yet, in various embodiments, any of the previous aspects or any other aspect, for that matter, may be power-related, meaning that such power-related aspect, at least in part, directly or indirectly affects power.
- In different embodiments, the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner. For instance, in the context of electrical simulation, a number of pins, wires, signals, etc. may be simulated. In the context of logical simulation, a particular function or behavior may be simulated. In the context of protocol, a particular protocol (e.g. DDR3, etc.) may be simulated. Further, in the context of protocol, the simulation may effect conversion between different protocols (e.g. DDR2 and DDR3) or may effect conversion between different versions of the same protocol (e.g. conversion of 4-4-4 DDR2 to 6-6-6 DDR2).
- In still additional exemplary embodiments, the aforementioned virtual aspect may be simulated (e.g. simulate a virtual aspect, the simulation of a virtual aspect, a simulated virtual aspect etc.). Further, in the context of the present description, the terms map, mapping, mapped, etc. refer to the link or connection from the physical aspects to the virtual aspects (e.g. map a physical aspect to a virtual aspect, mapping a physical aspect to a virtual aspect, a physical aspect mapped to a virtual aspect etc.). It should be noted that any use of such mapping or anything equivalent thereto is deemed to fall within the scope of the previously defined simulate or simulation term.
- More illustrative information will now be set forth regarding optional functionality/architecture of different embodiments which may or may not be implemented in the context of
FIG. 25 , per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. For example, any of the following features may be optionally incorporated with or without the other features described. -
FIG. 26 shows an exemplary embodiment of an interface circuit that is operable tointerface memory circuits 2602A-D and asystem 2604. In this embodiment, the interface circuit includes aregister 2606 and abuffer 2608. Address andcontrol signals 2620 from thesystem 2604 are connected to theregister 2606, while data signals 2630 from thesystem 2604 are connected to thebuffer 2608. Theregister 2606 drives address andcontrol signals 2640 to thememory circuits 2602A-D and optionally drives address andcontrol signals 2650 to thebuffer 2608.Data signals 2660 of thememory circuits 2602A-D are connected to thebuffer 2608. -
FIG. 27 shows an exemplary embodiment of an interface circuit that is operable tointerface memory circuits 2702A-D and asystem 2704. In this embodiment, the interface circuit includes aregister 2706 and abuffer 2708. Address andcontrol signals 2720 from thesystem 2704 are connected to theregister 2706, while data signals 2730 from thesystem 2704 are connected to thebuffer 2708. Theregister 2706 drives address andcontrol signals 2740 to thebuffer 2708, and optionally drivescontrol signals 2750 to thememory circuits 2702A-D. Thebuffer 2708 drives address and control signals 2760.Data signals 2770 of the memory circuits 2704A-D are connected to thebuffer 2708. -
FIG. 28 shows an exemplary embodiment of an interface circuit that is operable tointerface memory circuits 2802A-D and asystem 2804. In this embodiment, the interface circuit includes an advanced memory buffer (AMB) 2806 and abuffer 2808. Address, control, anddata signals 2820 from thesystem 2804 are connected to theAMB 2806. TheAMB 2806 drives address andcontrol signals 2830 to thebuffer 2808 and optionally drivescontrol signals 2840 to thememory circuits 2802A-D. Thebuffer 2808 drives address and control signals 2850.Data signals 2860 of thememory circuits 2802A-D are connected to thebuffer 2808.Data signals 2870 of thebuffer 2808 are connected to theAMB 2806. -
FIG. 29 shows an exemplary embodiment of an interface circuit that is operable tointerface memory circuits 2902A-D and asystem 2904. In this embodiment, the interface circuit includes anAMB 2906, aregister 2908, and abuffer 2910. Address, control, anddata signals 2920 from thesystem 2904 are connected to theAMB 2906. TheAMB 2906 drives address andcontrol signals 2930 to theregister 2908. The register, in turn, drives address andcontrol signals 2940 to thememory circuits 2902A-D. It also optionally drivescontrol signals 2950 to the buffer 510.Data signals 2960 from thememory circuits 2902A-D are connected to thebuffer 2910.Data signals 2970 of thebuffer 2910 are connected to theAMB 2906. -
FIG. 30 shows an exemplary embodiment of an interface circuit that is operable tointerface memory circuits 3002A-D and asystem 3004. In this embodiment, the interface circuit includes anAMB 3006 and abuffer 3008. Address, control, anddata signals 3020 from thesystem 3004 are connected to theAMB 3006. TheAMB 3006 drives address andcontrol signals 3030 to thememory circuits 3002A-D as well ascontrol signals 3040 to thebuffer 3008.Data signals 3050 from thememory circuits 3002A-D are connected to thebuffer 3008.Data signals 3060 are connected between thebuffer 3008 and theAMB 3006. - In other embodiments, combinations of the above implementations shown in
FIGS. 26-30 may be utilized. Just by way of example, one or more registers (register chip, address/control register chip, data register chip, JEDEC register, etc.) may be utilized in conjunction with one or more buffers (e.g. buffer chip, multiplexer/de-multiplexer chip, synchronous multiplexer/de-multiplexer chip and/or other intelligent interface circuits) with one or more AMBs (e.g. AMB chip, etc.). In other embodiments, these register(s), buffer(s), AMB(s) may be utilized alone and/or integrated in groups and/or integrated with or without the memory circuits. - The electrical connections between the buffer(s), the register(s), the AMB(s) and the memory circuits may be configured in any desired manner. In one optional embodiment; address, control (e.g. command, etc.), and clock signals may be common to all memory circuits (e.g. using one common bus). As another option, there may be multiple address, control and clock busses. As yet another option, there may be individual address, control and clock busses to each memory circuit. Similarly, data signals may be wired as one common bus, several busses or as an individual bus to each memory circuit. Of course, it should be noted that any combinations of such configurations may also be utilized. For example, the memory circuits may have one common address, control and clock bus with individual data busses. In another example, memory circuits may have one, two (or more) address, control and clock busses along with one, two (or more) data busses. In still yet another example, the memory circuits may have one address, control and clock bus together with two data busses (e.g. the number of address, control, clock and data busses may be different, etc.). In addition, the memory circuits may have one common address, control and clock bus and one common data bus. It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized.
- These configurations may therefore allow for the host system to only be in contact with a load of the buffer(s), or register(s), or AMB(s) on the memory bus. In this way, any electrical loading problems (e.g. bad signal integrity, improper signal timing, etc.) associated with the memory circuits may (but not necessarily) be prevented, in the context of various optional embodiments.
- Furthermore, there may be any number of memory circuits. Just by way of example, the interface circuit(s) may be connected to 1, 2, 4, 8 or more memory circuits. In alternate embodiments, to permit data integrity storage or for other reasons, the interface circuit(s) may be connected to an odd number of memory circuits. Additionally, the memory circuits may be arranged in a single stack. Of course, however, the memory circuits may also be arranged in a plurality of stacks or in any other fashion.
- In various embodiments where DRAM circuits are employed, such DRAM (e.g. DDR2 SDRAM) circuits may be composed of a plurality of portions (e.g. ranks, sub-ranks, banks, sub-banks, etc.) that may be capable of performing operations (e.g. precharge, activate, read, write, refresh, etc.) in parallel (e.g. simultaneously, concurrently, overlapping, etc.). The JEDEC standards and specifications describe how DRAM (e.g. DDR2 SDRAM) circuits are composed and perform operations in response to commands. Purely as an example, a 512Mb DDR2 SDRAM circuit that meets JEDEC specifications may be composed of four portions (e.g. banks, etc.) (each of which has 128Mb of capacity) that are capable of performing operations in parallel in response to commands. As another example, a 2Gb DDR2 SDRAM circuit that is compliant with JEDEC specifications may be composed of eight banks (each of which has 256Mb of capacity). A portion (e.g. bank, etc.) of the DRAM circuit is said to be in the active state after an activate command is issued to that portion. A portion (e.g. bank, etc.) of the DRAM circuit is said to be in the precharge state after a precharge command is issued to that portion. When at least one portion (e.g. bank, etc.) of the DRAM circuit is in the active state, the entire DRAM circuit is said to be in the active state. When all portions (e.g. banks, etc.) of the DRAM circuit are in precharge state, the entire DRAM circuit is said to be in the precharge state. A relative time period spent by the entire DRAM circuit in precharge state with respect to the time period spent by the entire DRAM circuit in active state during normal operation may be defined as the precharge-to-active ratio.
- DRAM circuits may also support a plurality of power management modes. Some of these modes may represent power saving modes. As an example, DDR2 SDRAMs may support four power saving modes. In particular, two active power down modes, precharge power down mode, and self-refresh mode may be supported, in one embodiment. A DRAM circuit may enter an active power down mode if the DRAM circuit is in the active state when it receives a power down command. A DRAM circuit may enter the precharge power down mode if the DRAM circuit is in the precharge state when it receives a power down command. A higher precharge-to-active ratio may increase the likelihood that a DRAM circuit may enter the precharge power down mode rather than an active power down mode when the DRAM circuit is the target of a power saving operation. In some types of DRAM circuits, the precharge power down mode and the self refresh mode may provide greater power savings than the active power down modes.
- In one embodiment, the system may be operable to perform a power management operation on at least one of the memory circuits, and optionally on the interface circuit, based on the state of the at least one memory circuit. Such a power management operation may include, among others, a power saving operation. In the context of the present description, the term power saving operation may refer to any operation that results in at least some power savings.
- In one such embodiment, the power saving operation may include applying a power saving command to one or more memory circuits, and optionally to the interface circuit, based on at least one state of one or more memory circuits. Such power saving command may include, for example, initiating a power down operation applied to one or more memory circuits, and optionally to the interface circuit. Further, such state may depend on identification of the current, past or predictable future status of one or more memory circuits, a predetermined combination of commands to the one or more memory circuits, a predetermined pattern of commands to the one or more memory circuits, a predetermined absence of commands to the one or more memory circuits, any command(s) to the one or more memory circuits, and/or any command(s) to one or more memory circuits other than the one or more memory circuits. Such commands may have occurred in the past, might be occurring in the present, or may be predicted to occur in the future. Future commands may be predicted since the system (e.g. memory controller, etc.) may be aware of future accesses to the memory circuits in advance of the execution of the commands by the memory circuits. In the context of the present description, such current, past, or predictable future status may refer to any property of the memory circuit that may be monitored, stored, and/or predicted.
- For example, the system may identify at least one of a plurality of memory circuits that may not be accessed for some period of time. Such status identification may involve determining whether a portion(s) (e.g. bank(s), etc.) is being accessed in at least one of the plurality of memory circuits. Of course, any other technique may be used that results in the identification of at least one of the memory circuits (or portion(s) thereof) that is not being accessed (e.g. in a non-accessed state, etc.). In other embodiments, other such states may be detected or identified and used for power management.
- In response to the identification of a memory circuit that is in a non-accessed state, a power saving operation may be initiated in association with the memory circuit (or portion(s) thereof) that is in the non-accessed state. In one optional embodiment, such power saving operation may involve a power down operation (e.g. entry into an active power down mode, entry into a precharge power down mode, etc.). As an option, such power saving operation may be initiated utilizing (e.g. in response to, etc.) a power management signal including, but not limited to a clock enable (CKE) signal, chip select (CS) signal, row address strobe (RAS), column address strobe (CAS), write enable (WE), and optionally in combination with other signals and/or commands. In other embodiments, use of a non-power management signal (e.g. control signal(s), address signal(s), data signal(s), command(s), etc.) is similarly contemplated for initiating the power saving operation. Of course, however, it should be noted that anything that results in modification of the power behavior may be employed in the context of the present embodiment.
- Since precharge power down mode may provide greater power savings than active power down mode, the system may, in yet another embodiment, be operable to map the physical memory circuits to appear as at least one virtual memory circuit with at least one aspect that is different from that of the physical memory circuits, resulting in a first behavior of the virtual memory circuits that is different from a second behavior of the physical memory circuits. As an option, the interface circuit may be operable to aid or participate in the mapping of the physical memory circuits such that they appear as at least one virtual memory circuit.
- During use, and in accordance with one optional embodiment, the physical memory circuits may be mapped to appear as at least one virtual memory circuit with at least one aspect that is different from that of the physical memory circuits, resulting in a first behavior of the at least one virtual memory circuits that is different from a second behavior of one or more of the physical memory circuits. Such behavior may, in one embodiment, include power behavior (e.g. a power consumption, current consumption, current waveform, any other aspect of power management or behavior, etc.). Such power behavior simulation may effect or result in a reduction or other modification of average power consumption, reduction or other modification of peak power consumption or other measure of power consumption, reduction or other modification of peak current consumption or other measure of current consumption, and/or modification of other power behavior (e.g. parameters, metrics, etc.).
- In one exemplary embodiment, the at least one aspect that is altered by the simulation may be the precharge-to-active ratio of the physical memory circuits. In various embodiments, the alteration of such a ratio may be fixed (e.g. constant, etc.) or may be variable (e.g. dynamic, etc.).
- In one embodiment, a fixed alteration of this ratio may be accomplished by a simulation that results in physical memory circuits appearing to have fewer portions (e.g. banks, etc.) that may be capable of performing operations in parallel. Purely as an example, a physical 1 Gb DDR2 SDRAM circuit with eight physical banks may be mapped to a virtual 1 Gb DDR2 SDRAM circuit with two virtual banks, by coalescing or combining four physical banks into one virtual bank. Such a simulation may increase the precharge-to-active ratio of the virtual memory circuit since the virtual memory circuit now has fewer portions (e.g. banks, etc.) that may be in use (e.g. in an active state, etc.) at any given time. Thus, there is a higher likelihood that a power saving operation targeted at such a virtual memory circuit may result in that particular virtual memory circuit entering precharge power down mode as opposed to entering an active power down mode. Again as an example, a physical 1Gb DDR2 SDRAM circuit with eight physical banks may have a probability, g, that all eight physical banks are in the precharge state at any given time. However, when the same physical 1Gb DDR2 SDRAM circuit is mapped to a virtual 1Gb DDR2 SDRAM circuit with two virtual banks, the virtual DDR2 SDRAM circuit may have a probability, h, that both the virtual banks are in the precharge state at any given time. Under normal operating conditions of the system, h may be greater than g. Thus, a power saving operation directed at the aforementioned virtual 1Gb DDR2 SDRAM circuit may have a higher likelihood of placing the DDR2 SDRAM circuit in a precharge power down mode as compared to a similar power saving operation directed at the aforementioned physical 1 Gb DDR2 SDRAM circuit.
- A virtual memory circuit with fewer portions (e.g. banks, etc.) than a physical memory circuit with equivalent capacity may not be compatible with certain industry standards (e.g. JEDEC standards). For example, the JEDEC Standard No. JESD 21-C for DDR2 SDRAM specifies a 1Gb DRAM circuit with eight banks. Thus, a 1Gb virtual DRAM circuit with two virtual banks may not be compliant with the JEDEC standard. So, in another embodiment, a plurality of physical memory circuits, each having a first number of physical portions (e.g. banks, etc.), may be mapped to at least one virtual memory circuit such that the at least one virtual memory circuit complies with an industry standard, and such that each physical memory circuit that is part of the at least one virtual memory circuit has a second number of portions (e.g. banks, etc.) that may be capable of performing operations in parallel, wherein the second number of portions is different from the first number of portions. As an example, four physical 1 Gb DDR2 SDRAM circuits (each with eight physical banks) may be mapped to a single virtual 4Gb DDR2 SDRAM circuit with eight virtual banks, wherein the eight physical banks in each physical 1Gb DDR2 SDRAM circuit have been coalesced or combined into two virtual banks. As another example, four physical 1 Gb DDR2 SDRAM circuits (each with eight physical banks) may be mapped to two virtual 2Gb DDR2 SDRAM circuits, each with eight virtual banks, wherein the eight physical banks in each physical 1 Gb DDR2 SDRAM circuit have been coalesced or combined into four virtual banks. Strictly as an option, the interface circuit may be operable to aid the system in the mapping of the physical memory circuits.
-
FIG. 31 shows an example of four physical 1 GbDDR2 SDRAM circuits 3102A-D that are mapped by thesystem 3106, and optionally with the aid or participation ofinterface circuit 3104, to appear as a virtual 4GbDDR2 SDRAM circuit 3108. Eachphysical DRAM circuit 3102A-D containing eightphysical banks 3120 has been mapped to twovirtual banks 3130 of the virtual 4GbDDR2 SDRAM circuit 3108. - In this example, the simulation or mapping results in the memory circuits having fewer portions (e.g. banks etc.) that may be capable of performing operations in parallel. For example, this simulation may be done by mapping (e.g. coalescing or combining) a first number of physical portion(s) (e.g. banks, etc.) into a second number of virtual portion(s). If the second number is less than the first number, a memory circuit may have fewer portions that may be in use at any given time. Thus, there may be a higher likelihood that a power saving operation targeted at such a memory circuit may result in that particular memory circuit consuming less power.
- In another embodiment, a variable change in the precharge-to-active ratio may be accomplished by a simulation that results in the at least one virtual memory circuit having at least one latency that is different from that of the physical memory circuits. As an example, a physical 1Gb DDR2 SDRAM circuit with eight banks may be mapped by the system, and optionally the interface circuit, to appear as a virtual 1 Gb DDR2 SDRAM circuit with eight virtual banks having at least one latency that is different from that of the physical DRAM circuits. The latency may include one or more timing parameters such as tFAW, tRRD, tRP, tRCD, tRFC(MIN), etc.
- In the context of various embodiments, tFAW is the 4-Bank activate period; tRRD is the ACTIVE bank a to ACTIVE bank b command timing parameter; tRP is the PRECHARGE command period; tRCD is the ACTIVE-to-READ or WRITE delay; and tRFC(min) is the minimum value of the REFRESH to ACTIVE or REFRESH to REFRESH command interval.
- In the context of one specific exemplary embodiment, these and other DRAM timing parameters are defined in the JEDEC specifications (for example JESD 21-C for DDR2 SDRAM and updates, corrections and errata available at the JEDEC website) as well as the DRAM manufacturer datasheets (for example the MICRON datasheet for 1Gb: x4, x8, x16 DDR2 SDRAM, example part number MT47H256M4, labeled PDF: 09005aef821ae8bf/Source: 09005aef821aed36, 1 Gb DDR2TOC.fm - Rev. K 9/06 EN, and available at the MICRON website).
- To further illustrate, the virtual DRAM circuit may be simulated to have a tRP(virtual) that is greater than the tRP(physical) of the physical DRAM circuit. Such a simulation may thus increase the minimum latency between a precharge command and a subsequent activate command to a portion (e.g. bank, etc.) of the virtual DRAM circuit. As another example, the virtual DRAM circuit may be simulated to have a tRRD(virtual) that is greater than the tRRD(physical) of the physical DRAM circuit. Such a simulation may thus increase the minimum latency between successive activate commands to various portions (e.g. banks, etc.) of the virtual DRAM circuit. Such simulations may increase the precharge-to-active ratio of the memory circuit. Therefore, there is a higher likelihood that a memory circuit may enter precharge power down mode rather than an active power down mode when it is the target of a power saving operation. The system may optionally change the values of one or more latencies of the at least one virtual memory circuit in response to present, past, or future commands to the memory circuits, the temperature of the memory circuits, etc. That is, the at least one aspect of the virtual memory circuit may be changed dynamically.
- Some memory buses (e.g. DDR, DDR2, etc.) may allow the use of 1T or 2T address timing (also known as 1T or 2T address clocking). The MICRON technical note TN-47-01, DDR2 DESIGN GUIDE FOR TWO-DIMM SYSTEMS (available at the MICRON website) explains the meaning and use of 1T and 2T address timing as follows: "Further, the address bus can be clocked using 1T or 2T clocking. With 1T, a new command can be issued on every clock cycle. 2T timing will hold the address and command bus valid for two clock cycles. This reduces the efficiency of the bus to one command per two clocks, but it doubles the amount of setup and hold time. The data bus remains the same for all of the variations in the address bus."
- In an alternate embodiment, the system may change the precharga-to-active ratio of the virtual memory circuit by changing from 1T address timing to 2T address timing when sending addresses and control signals to the interface circuit and/or the memory circuits. Since 2T address timing affects the latency between successive commands to the memory circuits, the precharge-to-active ratio of a memory circuit may be changed. Strictly as an option, the system may dynamically change between 1T and 2T address timing.
- In one embodiment, the system may communicate a first number of power management signals to the interface circuit to control the power behavior. The interface circuit may communicate a second number of power management signals to at least a portion of the memory circuits. In various embodiments, the second number of power management signals may be the same of different from the first number of power management signals. In still another embodiment, the second number of power management signals may be utilized to perform power management of the portion(s) of the virtual or physical memory circuits in a manner that is independent from each other and/or independent from the first number of power management signals received from the system (which may or may not also be utilized in a manner that is independent from each other). In alternate embodiments, the system may provide power management signals directly to the memory circuits. In the context of the present description, such power management signal(s) may refer to any control signal (e.g. one or more address signals; one or more data signals; a combination of one or more control signals; a sequence of one or more control signals; a signal associated with an activate (or active) operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation, or other encoded or direct operation, command or control signal, etc.). The operation associated with a command may consist of the command itself and optionally, one or more necessary signals and/or behavior.
- In one embodiment, the power management signals received from the system may be individual signals supplied to a DIMM. The power management signals may include, for example, CKE and CS signals. These power management signals may also be used in conjunction and/or combination with each other, and optionally, with other signals and commands that are encoded using other signals (e.g. RAS, CAS, WE, address etc.) for example. The JEDEC standards may describe how commands directed to memory circuits are to be encoded. As the number of memory circuits on a DIMM is increased, it is beneficial to increase the number of power management signals so as to increase the flexibility of the system to manage portion(s) of the memory circuits on a DIMM. In order to increase the number of power management signals from the system without increasing space and the difficulty of the motherboard routing, the power management signals may take several forms. In some of these forms, the power management signals may be encoded, located, placed, or multiplexed in various existing fields (e.g. data field, address field, etc.), signals (e.g. CKE signal, CS signal, etc.), and/or busses.
- For example a signal may be a single wire; that is a single electrical point-to-point connection. In this case, the signal is un-encoded and not bussed, multiplexed, or encoded. As another example, a command directed to a memory circuit may be encoded, for example, in an address signal, by setting a predefined number of bits in a predefined location (or field) on the address bus to a specific combination that uniquely identifies that command. In this case the command is said to be encoded on the address bus and located or placed in a certain position, location, or field. In another example, multiple bits of information may be placed on multiple wires that form a bus. In yet another example, a signal that requires the transfer of two or more bits of information may be time-multiplexed onto a single wire. For example, the time-multiplexed sequence of 10 (a one followed by a zero) may be made equivalent to two individual signals: a one and a zero. Such examples of time-multiplexing are another form of encoding. Such various well-known methods of signaling, encoding (or lack thereof), bussing, and multiplexing, etc. may be used in isolation or combination.
- Thus, in one embodiment, the power management signals from the system may occupy currently unused connection pins on a DIMM (unused pins may be specified by the JEDEC standards). In another embodiment, the power management signals may use existing CKE and CS pins on a DIMM, according to the JEDEC standard, along with additional CKE and CS pins to enable, for example, power management of DIMM capacities that may not yet be currently defined by the JEDEC standards.
- In another embodiment the power management signals from the system may be encoded in the CKE and CS signals. Thus, for example, the CKE signal may be a bus, and the power management signals may be encoded on that bus. In one example, a 3-bit wide bus comprising three signals on three separate wires: CKE[0], CKE[1], and CKE[2], may be decoded by the interface circuit to produce eight separate CKE signals that comprise the power management signals for the memory circuits.
- In yet another embodiment, the power management signals from the system may be encoded in unused portions of existing fields. Thus, for example, certain commands may have portions of the fields set to X (also known as don't care). In this case, the setting of such bit(s) to either a one or to a zero does not affect the command. The effectively unused bit position in this field may thus be used to carry a power management signal. The power management signal may thus be encoded and located or placed in a field in a bus, for example.
- Further, the power management schemes described for the DRAM circuits may also be extended to the interface circuits. For example, the system may have or may infer information that a signal, bus, or other connection will not be used for a period of time. During this period of time, the system may perform power management on the interface circuit or part(s) thereof. Such power management may, for example, use an intelligent signaling mechanism (e.g. encoded signals, sideband signals, etc.) between the system and interface circuits (e.g. register chips, buffer chips, AMB chips, etc.), and/or between interface circuits. These signals may be used to power manage (e.g. power off circuits, turn off or reduce bias currents, switch off or gate clocks, reduce voltage or current, etc) part(s) of the interface circuits (e.g. input receiver circuits, internal logic circuits, clock generation circuits, output driver circuits, termination circuits, etc.)
- It should thus be clear that the power management schemes described here are by way of specific examples for a particular technology, but that the methods and techniques are very general and may be applied to any memory circuit technology and any system (e.g. memory controller, etc.) to achieve control over power behavior including, for example, the realization of power consumption savings and management of current consumption behavior.
- While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. For example, any of the elements may employ any of the desired functionality set forth hereinabove. Hence, as an option, a plurality of memory circuits may be mapped using simulation to appear as at least one virtual memory circuit, wherein a first number of portions (e.g. banks, etc.) in each physical memory circuit may be coalesced or combined into a second number of virtual portions (e.g. banks, etc.), and the at least one virtual memory circuit may have at least one latency that is different from the corresponding latency of the physical memory circuits. Of course, in various embodiments, the first and second number of portions may include any one or more portions. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.
-
FIG. 32 illustrates a multiplememory circuit framework 3200, in accordance with one embodiment. As shown, included are aninterface circuit 3202, a plurality ofmemory circuits system 3206. In the context of the present description,such memory circuits - For example, in various embodiments, one or more of the
memory circuits memory circuits - In additional embodiments, the
memory circuits memory circuits memory circuits other memory circuits more memory circuits other memory circuits more memory circuits FIG. 32 in accordance with one embodiment, it should be noted that any plurality ofmemory circuits - Strictly as an option, the
memory circuits memory circuits - Further in the context of the present description, the
system 3206 may include any system capable of requesting and/or initiating a process that results in an access of thememory circuits system 3206 may accomplish this utilizing a memory controller (not shown), or any other desired mechanism. In one embodiment,such system 3206 may include a host system in the form of a desktop computer, lap-top computer, server, workstation, a personal digital assistant (PDA) device, a mobile phone device, a television, a peripheral device (e.g. printer, etc.). Of course, such examples are set forth for illustrative purposes only, as any system meeting the above definition may be employed in the context of thepresent framework 3200. Turning now to theinterface circuit 3202,such interface circuit 3202 may include any circuit capable of indirectly or directly communicating with thememory circuits system 3206. In various optional embodiments, theinterface circuit 3202 may include one or more interface circuits, a buffer chip, etc. Embodiments involving such a buffer chip will be set forth hereinafter during reference to subsequent figures. In still other embodiments, theinterface circuit 3202 may or may not be manufactured in monolithic form. - While the
memory circuits interface circuit 3202, andsystem 3206 are shown to be separate parts, it is contemplated that any of such parts (or portions thereof) may or may not be integrated in any desired manner. In various embodiments, such optional integration may involve simply packaging such parts together (e.g. stacking the parts, etc.) and/or integrating them monolithically. Just by way of example, in various optional embodiments, one or more portions (or all, for that matter) of theinterface circuit 3202 may or may not be packaged with one or more of thememory circuits memory circuit framework 3200 will be set forth hereinafter during reference toFIGS. 33A-33E , and34 et al. - In use, the
interface circuit 3202 may be capable of various functionality, in the context of different embodiments. More illustrative information will now be set forth regarding such optional functionality which may or may not be implemented in the context ofsuch interface circuit 3202, per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. For example, any of the following features may be optionally incorporated with or without the exclusion of other features described. - For instance, in one optional embodiment, the
interface circuit 3202 interfaces a plurality ofsignals 3208 that are communicated between thememory circuits system 3206. As shown, such signals may, for example, include address/control/clock signals, etc. In one aspect of the present embodiment, the interfacedsignals 3208 may represent all of the signals that are communicated between thememory circuits system 3206. In other aspects, at least a portion ofsignals 3210 may travel directly between thememory circuits system 3206 or component thereof [e.g. register, advanced memory buffer (AMB), memory controller, or any other component thereof, where the term component is defined hereinbelow]. In various embodiments, the number of the signals 3208 (vs. a signals 3208 (vs. a number of thesignals 3210, etc.) may vary such that thesignals 3208 are a majority or more (L > M), etc. - In yet another embodiment, the
interface circuit 3202 may be operable to interface a first number ofmemory circuits system 3206 for simulating at least one memory circuit of a second number. In the context of the present description, the simulation may refer to any simulating, emulating, disguising, transforming, converting, and/or the like that results in at least one aspect (e.g. a number in this embodiment, etc.) of thememory circuits system 3206. In different embodiments, the simulation may be electrical in nature, logical in nature, protocol in nature, and/or performed in any other desired manner. For instance, in the context of electrical simulation, a number of pins, wires, signals, etc. may be simulated, while, in the context of logical simulation, a particular function may be simulated. In the context of protocol, a particular protocol (e.g. DDR3, etc.) may be simulated. - In still additional aspects of the present embodiment, the second number may be more or less than the first number. Still yet, in the latter case, the second number may be one, such that a single memory circuit is simulated. Different optional embodiments which may employ various aspects of the present embodiment will be set forth hereinafter during reference to
FIGS. 33A-33E , and34 et al. - In still yet another embodiment, the
interface circuit 3202 may be operable to interface thememory circuits system 3206 for simulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of thememory circuits memory circuits - In the case of the signal, such signal may refer to a control signal (e.g. an address signal; a signal associated with an activate operation, precharge operation, write operation, read operation, a mode register write operation, a mode register read operation, a refresh operation; etc.), a data signal, a logical or physical signal, or any other signal for that matter. For instance, a number of the aforementioned signals may be simulated to appear as fewer or more signals, or even simulated to correspond to a different type. In still other embodiments, multiple signals may be combined to simulate another signal. Even still, a length of time in which a signal is asserted may be simulated to be different.
- In the case of protocol, such may, in one exemplary embodiment, refer to a particular standard protocol. For example, a number of
memory circuits memory circuits - In the case of capacity, such may refer to a memory capacity (which may or may not be a function of a number of the
memory circuits interface circuit 3202 may be operable for simulating at least one memory circuit with a first memory capacity that is greater than (or less than) a second memory capacity of at least one of thememory circuits - In the case where the aspect is timing-related, the timing may possibly relate to a latency (e.g. time delay, etc.). In one aspect of the present embodiment, such latency may include a column address strobe (CAS) latency, which refers to a latency associated with accessing a column of data. Still yet, the latency may include a row address to column address latency (tRCD), which refers to a latency required between the row address strobe (RAS) and CAS. Even still, the latency may include a row precharge latency (tRP), which refers a latency required to terminate access to an open row, and open access to a next row. Further, the latency may include an activate to precharge latency (tRAS), which refers to a latency required to access a certain row of data between an activate operation operation and a precharge operation. In any case, the
interface circuit 3202 may be operable for simulating at least one memory circuit with a first latency that is longer (or shorter) than a second latency of at least one of thememory circuits FIGS. 33A-33E , and34 et al. - In still another embodiment, a component may be operable to receive a signal from the
system 3206 and communicate the signal to at least one of thememory circuits memory circuits system 3206 after a delay. - As an option, the delay may include a cumulative delay associated with any one or more of the aforementioned signals. Even still, the delay may result in a time shift of the signal forward and/or back in time (with respect to other signals). Of course, such forward and backward time shift may or may not be equal in magnitude. In one embodiment, this time shifting may be accomplished by utilizing a plurality of delay functions which each apply a different delay to a different signal. In still additional embodiments, the aforementioned shifting may be coordinated among multiple signals such that different signals are subject to shifts with different relative directions/magnitudes, in an organized fashion.
- Further, it should be noted that the aforementioned component may, but need not necessarily take the form of the
interface circuit 3202 ofFIG. 32 . For example, the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc. Such register may, in various embodiments, include a Joint Electron Device Engineering Council (JEDEC) register, a JEDEC register including one or more functions set forth herein, a register with forwarding, storing, and/or buffering capabilities, etc. Different optional embodiments which employ various features of the present embodiment will be set forth hereinafter during reference toFIGS. 35-38 , and40A-B et al. - In a power-saving embodiment, at least one of a plurality of
memory circuits system 3206. In one embodiment, such identification may involve determining whether a page [i.e. any portion of any memory(s), etc.] is being accessed in at least one of the plurality ofmemory circuits memory circuits - In response to the identification of the at least one
memory circuit memory circuit - Similar to one or more of the previous embodiments, the present functionality or a portion thereof may be carried out utilizing any desired component. For example, such component may, but need not necessarily take the form of the
interface circuit 3202 ofFIG. 32 . In other embodiments, the component may include a register, an AMB, a component positioned on at least one DIMM, a memory controller, etc. One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference toFIG. 41 . - In still yet another embodiment, a plurality of the aforementioned components may serve, in combination, to interface the
memory circuits system 3206. In various embodiments, two, three, four, or more components may accomplish this. Also, the different components may be relatively configured in any desired manner. For example, the components may be configured in parallel, serially, or a combination thereof. In addition, any number of the components may be allocated to any number of thememory circuits - Further, in the present embodiment, each of the plurality of components may be the same or different. Still yet, the components may share the same or similar interface tasks and/or perform different interface tasks. Such interface tasks may include, but are not limited to simulating one or more aspects of a memory circuit, performing a power savings/refresh operation, carrying out any one or more of the various functionalities set forth herein, and/or any other task relevant to the aforementioned interfacing. One optional embodiment which employs various features of the present embodiment will be set forth hereinafter during reference to
FIG. 34 . - Additional illustrative information will now be set forth regarding various optional embodiments in which the foregoing techniques may or may not be implemented, per the desires of the user. For example, an embodiment is set forth for storing at least a portion of information received in association with a first operation for use in performing a second operation. See
FIG. 33F . Further, a technique is provided for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. SeeFIG. 42 . - It should again be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. Any of the following features may be optionally incorporated with or without the exclusion of other features described.
-
FIGS. 33A-33E show various configurations of a buffered stack ofDRAM circuits 3306A-D with abuffer chip 3302, in accordance with various embodiments. As an option, the various configurations to be described in the following embodiments may be implemented in the context of the architecture and/or environment ofFIG. 32 . Of course, however, they may also be carried out in any other desired environment (e.g. using other memory types, etc.). It should also be noted that the aforementioned definitions may apply during the present description. - As shown in each of such figures, the
buffer chip 3302 is placed electrically between anelectronic host system 3304 and a stack ofDRAM circuits 3306A-D. In the context of the present description, a stack may refer to any collection of memory circuits. Further, thebuffer chip 3302 may include any device capable of buffering a stack of circuits (e.g. DRAM circuits 3306A-D, etc.). Specifically, thebuffer chip 3302 may be capable of buffering the stack ofDRAM circuits 3306A-D to electrically and/or logically resemble at least one larger capacity DRAM circuit to thehost system 3304. In this way, the stack ofDRAM circuits 3306A-D may appear as a smaller quantity of larger capacity DRAM circuits to thehost system 3304. - For example, the stack of
DRAM circuits 3306A-D may include eight 512Mb DRAM circuits. Thus, thebuffer chip 3302 may buffer the stack of eight 512Mb DRAM circuits to resemble a single 4Gb DRAM circuit to a memory controller (not shown) of the associatedhost system 3304. In another example, thebuffer chip 3302 may buffer the fstack of eight 512Mb DRAM circuits to resemble two 2Gb DRAM circuits to a memory controller of an associatedhost system 3304. - Further, the stack of
DRAM circuits 3306A-D may include any number of DRAM circuits. Just by way of example, abuffer chip 3302 may be connected to 2, 4, 8 ormore DRAM circuits 3306A-D. Also, theDRAM circuits 3306A-D may be arranged in a single stack, as shown inFIGS. 33A-33D . - The
DRAM circuits 3306A-D may be arranged on a single side of thebuffer chip 3302, as shown inFIGS. 33A-33D . Of course, however, theDRAM circuits 3306A-D may be located on both sides of thebuffer chip 3302 shown inFIG. 33E . Thus, for example, abuffer chip 3302 may be connected to 16 DRAM circuits with 8 DRAM circuits on either side of thebuffer chip 3302, where the 8 DRAM circuits on each side of thebuffer chip 3302 are arranged in two stacks of four DRAM circuits. - The
buffer chip 3302 may optionally be a part of the stack ofDRAM circuits 3306A-D. Of course, however, thebuffer chip 3302 may also be separate from the stack ofDRAM circuits 3306A-D. In addition, thebuffer chip 3302 may be physically located anywhere in the stack ofDRAM circuits 3306A-D, wheresuch buffer chip 3302 electrically sits between theelectronic host system 3304 and the stack ofDRAM circuits 3306A-D. - In one embodiment, a memory bus (not shown) may connect to the
buffer chip 3302, and thebuffer chip 3302 may connect to each of theDRAM circuits 3306A-D in the stack. As shown inFIGS. 33A-33D , thebuffer chip 3302 may be located at the bottom of the stack ofDRAM circuits 3306A-D (e.g. the bottom-most device in the stack). As another option, and as shown inFIG. 33E , thebuffer chip 3302 may be located in the middle of the stack ofDRAM circuits 3306A-D. As still yet another option, thebuffer chip 3302 may be located at the top of the stack ofDRAM circuits 3306A-D (e.g. the top-most device in the stack). Of course, however, thebuffer chip 3302 may be located anywhere between the two extremities of the stack ofDRAM circuits 3306A-D. - The electrical connections between the
buffer chip 3302 and the stack ofDRAM circuits 3306A-D may be configured in any desired manner. In one optional embodiment; address, control (e.g. command, etc.), and clock signals may be common to allDRAM circuits 3306A-D in the stack (e.g. using one common bus). As another option, there may be multiple address, control and clock busses. As yet another option, there may be individual address, control and clock busses to eachDRAM circuit 3306A-D. Similarly, data signals may be wired as one common bus, several busses or as an individual bus to eachDRAM circuit 3306A-D. Of course, it should be noted that any combinations of such configurations may also be utilized. - For example, as shown in
FIG. 33A , the stack ofDRAM circuits 3306A-D may have one common address, control andclock bus 3308 with individual data busses 3310. In another example, as shown inFIG. 33B , the stack ofDRAM circuits 3306A-D may have two address, control andclock busses 3308 along with two data busses 3310. In still yet another example, as shown inFIG. 33C , the stack ofDRAM circuits 3306A-D may have one address, control andclock bus 3308 together with two data busses 3310. In addition, as shown inFIG. 33D , the stack ofDRAM circuits 3306A-D may have one common address, control andclock bus 3308 and onecommon data bus 3310. It should be noted that any other permutations and combinations of such address, control, clock and data buses may be utilized. - These configurations may therefore allow for the
host system 3304 to only be in contact with a load of thebuffer chip 3302 on the memory bus. In this way, any electrical loading problems (e.g. bad signal integrity, improper signal timing, etc.) associated with the stackedDRAM circuits 3306A-D may (but not necessarily) be prevented, in the context of various optional embodiments. -
FIG. 33F illustrates amethod 3380 for storing at least a portion of information received in association with a first operation for use in performing a second operation, in accordance with still yet another embodiment. As an option, themethod 3380 may be implemented in the context of the architecture and/or environment of any one or more ofFIGS. 32-33E . For example, themethod 3380 may be carried out by theinterface circuit 3202 ofFIG. 32 . Of course, however, themethod 3380 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - In
operation 3382, first information is received in association with a first operation to be performed on at least one of a plurality of memory circuits (e.g. see thememory circuits FIG. 32 , etc.). In various embodiments, such first information may or may not be received coincidently with the first operation, as long as it is associated in some capacity. Further, the first operation may, in one embodiment, include a row operation. In such embodiment, the first information may include address information (e.g. a set of address bits, etc.). - For reasons that will soon become apparent, at least a portion of the first information is stored. Note
operation 3384. Still yet, inoperation 3386, second information is received in association with a second operation. Similar to the first information, the second information may or may not be received coincidently with the second operation, and may include address information. Such second operation, however, may, in one embodiment, include a column operation. - To this end, the second operation may be performed utilizing the stored portion of the first information in addition to the second information. See
operation 3388. More illustrative information will now be set forth regarding various optional features with which theforegoing method 3380 may or may not be implemented, per the desires of the user. Specifically, an example will be set for illustrating the manner in which themethod 3380 may be employed for accommodating a buffer chip that is simulating at least one aspect of a plurality of memory circuits. - In particular, the present example of the
method 3380 ofFIG. 33F will be set forth in the context of the various components (e.g. buffer chip 3302, etc.) shown in the embodiments ofFIGS. 33A-33E . It should be noted that, since the buffered stack ofDRAM circuits 3306A-D may appear to the memory controller of thehost system 3304 as one or more larger capacity DRAM circuits, thebuffer chip 3302 may receive more address bits from the memory controller than are required by theDRAM circuits 3306A-D in the stack. These extra address bits may be decoded by thebuffer chip 3302 to individually select theDRAM circuits 3306A-D in the stack, utilizing separate chip select signals to each of theDRAM circuits 3306A-D in the stack. - For example, a stack of four x4
1Gb DRAM circuits 3306A-D behind abuffer chip 3302 may appear as a single x4 4Gb DRAM circuit to the memory controller. Thus, the memory controller may provide sixteen row address bits and three bank address bits during a row (e.g. activate) operation, and provide eleven column address bits and three bank address bits during a column (e.g. read or write) operation. However, theindividual DRAM circuits 3306A-D in the stack may require only fourteen row address bits and three bank address bits for a row operation, and eleven column address bits and three bank address bits during a column operation. - As a result, during a row operation in the above example, the
buffer chip 3302 may receive two address bits more than are needed by eachDRAM circuit 3306A-D in the stack. Thebuffer chip 3302 may therefore use the two extra address bits from the memory controller to select one of the fourDRAM circuits 3306A-D in the stack. In addition, thebuffer chip 3302 may receive the same number of address bits from the memory controller during a column operation as are needed by eachDRAM circuit 3306A-D in the stack. - Thus, in order to select the
correct DRAM circuit 3306A-D in the stack during a column operation, thebuffer chip 3302 may be designed to store the two extra address bits provided during a row operation and use the two stored address bits to select thecorrect DRAM circuit 3306A-D during the column operation. The mapping between a system address (e.g. address from the memory controller, including the chip select signal(s)) and a device address (e.g. the address, including the chip select signals, presented to theDRAM circuits 3306A-D in the stack) may be performed by thebuffer chip 3302 in various manners. - In one embodiment, a lower order system row address and bank address bits may be mapped directly to the device row address and bank address inputs. In addition, the most significant row address bit(s) and, optionally, the most significant bank address bit(s), may be decoded to generate the chip select signals for the
DRAM circuits 3306A-D in the stack during a row operation. The address bits used to generate the chip select signals during the row operation may also be stored in an internal lookup table by thebuffer chip 3302 for one or more clock cycles. During a column operation, the system column address and bank address bits may be mapped directly to the device column address and bank address inputs, while the stored address bits may be decoded to generate the chip select signals. - For example, addresses may be mapped between four
512Mb DRAM circuits 3306A-D that simulate a single 2Gb DRAM circuits utilizing thebuffer chip 3302. There may be 15 row address bits from thesystem 3304, such thatrow address bits 0 through 13 are mapped directly to theDRAM circuits 3306A-D. There may also be 3 bank address bits from thesystem 3304, such thatbank address bits 0 through 1 are mapped directly to theDRAM circuits 3306A-D. - During a row operation, the
bank address bit 2 and therow address bit 14 may be decoded to generate the 4 chip select signals for each of the fourDRAM circuits 3306A-D.Row address bit 14 may be stored during the row operation using the bank address as the index. In addition, during the column operation, the storedrow address bit 14 may again be used withbank address bit 2 to form the four DRAM chip select signals. - As another example, addresses may be mapped between four
1Gb DRAM circuits 3306A-D that simulate a single 4Gb DRAM circuits utilizing thebuffer chip 3302. There may be 16 row address bits from thesystem 3304, such thatrow address bits 0 through 14 are are mapped directly to theDRAM circuits 3306A-D. There may also be 3 bank address bits from thesystem 3304, such thatbank address bits 0 through 3 are mapped directly to theDRAM circuits 3306A-D. - During a row operation, row address
bits DRAM circuits 3306A-D.Row address bits row address bits - In various embodiments, this mapping technique may optionally be used to ensure that there are no unnecessary combinational logic circuits in the critical timing path between the address input pins and address output pins of the
buffer chip 3302. Such combinational logic circuits may instead be used to generate the individual chip select signals. This may therefore allow the capacitive loading on the address outputs of thebuffer chip 3302 to be much higher than the loading on the individual chip select signal outputs of thebuffer chip 3302. - In another embodiment, the address mapping may be performed by the
buffer chip 3302 using some of the bank address signals from the memory controller to generate the individual chip select signals. Thebuffer chip 3302 may store the higher order row address bits during a row operation using the bank address as the index, and then may use the stored address bits as part of the DRAM circuit bank address during a column operation. This address mapping technique may require an optional lookup table to be positioned in the critical timing path between the address inputs from the memory controller and the address outputs, to theDRAM circuits 3306A-D in the stack. - For example, addresses may be mapped between four
512Mb DRAM circuits 3306A-D that simulate a single 2Gb DRAM utilizing thebuffer chip 3302. There may be 15 row address bits from thesystem 3304, where row addressbits 0 through 13 are mapped directly to theDRAM circuits 3306A-D. There may also be 3 bank address bits from thesystem 3304, such thatbank address bit 0 is used as a DRAM circuit bank address bit for theDRAM circuits 3306A-D. - In addition,
row address bit 14 may be used as an additional DRAM circuit bank address bit. During a row operation, thebank address bits DRAM circuits 3306A-D. Further,row address bit 14 may be stored during the row operation. During the column operation, the storedrow address bit 14 may again be used along with the bank address bit 0 from the system to form the DRAM circuit bank address. - In both of the above described address mapping techniques, the column address from the memory controller may be mapped directly as the column address to the
DRAM circuits 3306A-D in the stack. Specifically, this direct mapping may be performed since each of theDRAM circuits 3306A-D in the stack, even if of the same width but different capacities (e.g. from 512Mb to 4Gb), may have the same page sizes. In an optional embodiment, address A[10] may be used by the memory controller to enable or disable auto-precharge during a column operation. Therefore, thebuffer chip 3302 may forward A[10] from the memory controller to theDRAM circuits 3306A-D in the stack without any modifications during a column operation. - In various embodiments, it may be desirable to determine whether the simulated DRAM circuit behaves according to a desired DRAM standard or other design specification. A behavior of many DRAM circuits is specified by the JEDEC standards and it may be desirable, in some embodiments, to exactly simulate a particular JEDEC standard DRAM. The JEDEC standard defines control signals that a DRAM circuit must accept and the behavior of the DRAM circuit as a result of such control signals. For example, the JEDEC specification for a DDR2 DRAM is known as JESD79-2B.
- If it is desired, for example, to determine whether a JEDEC standard is met, the following algorithm may be used. Such algorithm checks, using a set of software verification tools for formal verification of logic, that protocol behavior of the simulated DRAM circuit is the same as a desired standard or other design specification. This formal verification is quite feasible because the DRAM protocol described in a DRAM standard is typically limited to a few control signals (e.g. approximately 15 control signals in the case of the JEDEC DDR2 specification, for example).
- Examples of the aforementioned software verification tools include MAGELLAN supplied by SYNOPSYS, or other software verification tools, such as INCISIVE supplied by CADENCE, verification tools supplied by JASPER, VERIX supplied by REAL INTENT, 0-IN supplied by MENTOR CORPORATION, and others.. These software verification tools use written assertions that correspond to the rules established by the DRAM protocol and specification. These written assertions are further included in the code that forms the logic description for the buffer chip. By writing assertions that correspond to the desired behavior of the simulated DRAM circuit, a proof may be constructed that determines whether the desired design requirements are met. In this way, one may test various embodiments for compliance with a standard, multiple standards, or other design specification.
- For instance, an assertion may be written that no two DRAM control signals are allowed to be issued to an address, control and clock bus at the same time. Although one may know which of the various buffer chip/DRAM stack configurations and address mappings that have been described herein are suitable, the aforementioned algorithm may allow a designer to prove that the simulated DRAM circuit exactly meets the required standard or other design specification. If, for example, an address mapping that uses a common bus for data and a common bus for address results in a control and clock bus that does not meet a required specification, alternative designs for buffer chips with other bus arrangements or alternative designs for the interconnect between the buffer chips may be used and tested for compliance with the desired standard or other design specification.
FIG. 34 shows ahigh capacity DIMM 3400 using buffered stacks ofDRAM circuits 3402, in accordance with still yet another embodiment. As an option, thehigh capacity DIMM 3400 may be implemented in the context of the architecture and environment ofFIGS. 32 and/or 33A-F. Of course, however, thehigh capacity DIMM 3400 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As shown, a
high capacity DIMM 3400 may be created utilizing buffered stacks ofDRAM circuits 3402. Thus, aDIMM 3400 may utilize a plurality of buffered stacks ofDRAM circuits 3402 instead of individual DRAM circuits, thus increasing the capacity of the DIMM. In addition, theDIMM 3400 may include aregister 3404 for address and operation control of each of the buffered stacks ofDRAM circuits 3402. It should be noted that any desired number of buffered stacks ofDRAM circuits 3402 may be utilized in conjunction with theDIMM 3400. Therefore, the configuration of theDIMM 3400, as shown, should not be construed as limiting in any way. - In an additional unillustrated embodiment, the
register 3404 may be substituted with an AMB (not shown), in the context of an FB-DIMM. -
FIG. 35 shows atiming design 3500 of a buffer chip that makes a buffered stack of DRAM circuits mimic longer CAS latency DRAM to a memory controller, in accordance with another embodiment. As an option, the design of the buffer chip may be implemented in the context of the architecture and environment ofFIGS. 32-34 . Of course, however, the design of the buffer chip may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - In use, any delay through a buffer chip (e.g. see the
buffer chip 3302 ofFIGS. 33A-E , etc.) may be made transparent to a memory controller of a host system (e.g. see thehost system 3304 ofFIGS. 33A-E , etc.) utilizing the buffer chip. In particular, the buffer chip may buffer a stack of DRAM circuits such that the buffered stack of DRAM circuits appears as at least one larger capacity DRAM circuit with higher CAS latency. - Such delay may be a result of the buffer chip being located electrically between the memory bus of the host system and the stacked DRAM circuits, since most or all of the signals that connect the memory bus to the DRAM circuits pass through the buffer chip. A finite amount of time may therefore be needed for these signals to traverse through the buffer chip. With the exception of register chips and advanced memory buffers (AMB), industry standard protocols for memory [e.g. (DDR SDRAM), DDR2 SDRAM, etc.] may not comprehend the buffer chip that sits between the memory bus and the DRAM. Industry standard protocols for memory [e.g. (DDR SDRAM), DDR2 SDRAM, etc.] narrowly define the properties of chips that sit between host and memory circuits. Such industry standard protocols define the properties of a register chip and AMB but not the properties of the
buffer chip 3302, etc. Thus, the signal delay through the buffer chip may violate the specifications of industry standard protocols. - In one embodiment, the buffer chip may provide a one-half clock cycle delay between the buffer chip receiving address and control signals from the memory controller (or optionally from a register chip, an AMB, etc.) and the address and control signals being valid at the inputs of the stacked DRAM circuits. Similarly, the data signals may also have a one-half clock cycle delay in traversing the buffer chip, either from the memory controller to the DRAM circuits or from the DRAM circuits to the memory controller. Of course, the one-half clock cycle delay set forth above is set forth for illustrative purposes only and thus should not be construed as limiting in any manner whatsoever. For example, other embodiments are contemplated where a one clock cycle delay, a multiple clock cycle delay (or fraction thereof), and/or any other delay amount is incorporated, for that matter. As mentioned earlier, in other embodiments, the aforementioned delay may be coordinated among multiple signals such that different signals are subject to time-shifting with different relative directions/magnitudes, in an organized fashion.
- As shown in
FIG. 35 , the cumulative delay through the buffer chip (e.g. the sum of afirst delay 3502 of the address and control signals through the buffer chip and asecond delay 3504 of the data signals through the buffer chip) is j clock cycles. Thus, the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with aCAS latency 3508 of i + j clocks, where i is the native CAS latency of the DRAM circuits. - In one example, if the DRAM circuits in the stack have a native CAS latency of 4 and the address and control signals along with the data signals experience a one-half clock cycle delay through the buffer chip, then the buffer chip may make the buffered stack appear to the memory controller as one or more larger DRAM circuits with a CAS latency of 5 (i.e. 4 + 1). In another example, if the address and control signals along with the data signals experience a 1 clock cycle delay through the buffer chip, then the buffer chip may make the buffered stack appear as one or more larger DRAM circuits with a CAS latency of 6 (i.e. 4 +2).
-
FIG. 36 shows thewrite data timing 3600 expected by a DRAM circuit in a buffered stack, in accordance with yet another embodiment. As an option, thewrite data timing 3600 may be implemented in the context of the architecture and environment ofFIGS. 32-35 . Of course, however, thewrite data timing 3600 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - Designing a buffer chip (e.g. see the
buffer chip 3302 ofFIGS. 33A-E , etc.) so that a buffered stack appears as at least one larger capacity DRAM circuit with higher CAS latency may, in some embodiments, create a problem with the timing of write operations. For example, with respect to a buffered stack of DDR2 SDRAM circuits with a CAS latency of 4 that appear as a single larger DDR2 SDRAM with a CAS latency of 6 to the memory controller, the DDR2 SDRAM protocol may specify that the write CAS latency is one less than the read CAS latency. Therefore, since the buffered stack appears as a DDR2 SDRAM with a read CAS latency of 6, the memory controller may use a write CAS latency of 5 (see 3602) when scheduling a write operation to the buffered stack. - However, since the native read CAS latency of the DRAM circuits is 4, the DRAM circuits may require a write CAS latency of 3 (see 3604). As a result, the write data from the memory controller may arrive at the buffer chip later than when the DRAM circuits require the data. Thus, the buffer chip may delay such write operations to alleviate any of such timing problems. Such delay in write operations will be described in more detail with respect to
FIG. 37 below. -
FIG. 37 shows writeoperations 3700 delayed by a buffer chip, in accordance with still yet another embodiment. As an option, thewrite operations 3700 may be implemented in the context of the architecture and environment ofFIGS. 32-36 . Of course, however, thewrite operations 3700 may be used in any desired environment. Again, it should also be noted that the aforementioned definitions may apply during the present description. - In order to be compliant with the protocol utilized by the DRAM circuits in the stack, a buffer chip (e.g. see the
buffer chip 3302 ofFIGS. 33A-E , etc.) may provide an additional delay, over and beyond the delay of the address and control signals through the buffer chip, between receiving the write operation and address from the memory controller (and/or optionally from a register and/or AMB, etc.), and sending it to the DRAM circuits in the stack. The additional delay may be equal to j clocks, where j is the cumulative delay of the address and control signals through the buffer chip and the delay of the data signals through the buffer chip. As another option, the write address and operation may be delayed by a register chip on a DIMM, by an AMB, or by the memory controller.FIG. 38 shows early writedata 3800 from an AMB, in accordance with another embodiment. As an option, theearly write data 3800 may be implemented in the context of the architecture and environment ofFIGS. 32-36 . Of course, however, theearly write data 3800 may be used in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As shown, an AMB on an FB-DIMM may be designed to send write data earlier to buffered stacks instead of delaying the write address and operation, as described in reference to
FIG. 37 . Specifically, anearly write latency 3802 may be utilized to send the write data to the buffered stack. Thus, correct timing of the write operation at the inputs of the DRAM circuits in the stack may be ensured. - For example, a buffer chip (e.g. see the
buffer chip 3302 ofFIGS. 33A-E , etc.) may have a cumulative latency of 2, in which case, the AMB may send thewrite data 2 clock cycles earlier to the buffered stack. It should be noted that this scheme may not be possible in the case of registered DIMMs since the memory controller sends the write data directly to the buffered stacks. As an option, a memory controller may be designed to send write data earlier so that write operations have the correct timing at the input of the DRAM circuits in the stack without requiring the buffer chip to delay the write address and operation. -
FIG. 39 shows addressbus conflicts 3900 caused by delayed write operations, in accordance with yet another embodiment. As mentioned earlier, the delaying of the write addresses and operations may be performed by a buffer chip, or optionally a register, AMB, etc., in a manner that is completely transparent to the memory controller of a host system. However, since the memory controller is unaware of this delay, it may schedule subsequent operations, such as for example activate or precharge operations, which may collide with the delayed writes on the address bus from the buffer chip to the DRAM circuits in the stack. As shown, an activateoperation 3902 may interfere with awrite operation 3904 that has been delayed. Thus, a delay of activate operations may be employed, as will be described in further detail with respect toFIG. 40 . -
FIGS. 40A-B show variable delays 4000 and 4050 of operations through a buffer chip, in accordance with another embodiment. As an option, thevariable delays FIGS. 32-39 . Of course, however, thevariable delays - In order to prevent conflicts on an address bus between the buffer chip and its associated stack(s), either the write operation or the precharge/activate operation may be delayed. As shown, a buffer chip (e.g. see the
buffer chip 3302 ofFIGS. 33A-E , etc.) may delay the precharge/activateoperations 4052A-C/4002A-C. In particular, the buffer chip may make the buffered stack appear as one or more larger capacity DRAM circuits that have longer tRCD (RAS to CAS delay) and tRP (i.e. precharge time) parameters. - For example, if the cumulative latency through a buffer chip is 2 clock cycles while the native read CAS latency of the DRAM circuits is 4 clock cycles, then in order to hide the delay of the address/control signals and the data signals through the buffer chip, the buffered stack may appear as one or more larger capacity DRAM circuits with a read CAS latency of 6 clock cycles to the memory controller. In addition, if the tRCD and tRP of the DRAM circuits is 4 clock cycles each, the buffered stack may appear as one or more larger capacity DRAM circuits with tRCD of 6 clock cycles and tRP of 6 clock cycles in order to allow a buffer chip (e.g., see the
buffer chip 3302 ofFIGS. 33A-E , etc.) to delay the activate and precharge operations in a manner that is transparent to the memory controller. Specifically, a buffered stack that uses 4-4-4 DRAM circuits (i.e. CAS latency = 4, tRCD= 4, tRP = 4) may appear as one or at least one larger capacity DRAM circuits with 6-6-6 timing (i.e. CAS latency = 6, tRCD = 6, tRP = 6). - Since the buffered stack appears to the memory controller as having a tRCD of 6 clock cycles, the memory controller may schedule a column operation to a
bank 6 clock cycles after an activate (e.g. row) operation to the same bank. However, the DRAM circuits in the stack may actually have a tRCD of 4 clock cycles. Thus, the buffer chip may have the ability to delay the activate operation by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits in the stack while still ensuring correct read and write timing on the channel between the memory controller and the buffered stack. - As shown, the buffer chip may issue the activate operation to the DRAM circuits one, two, or three clock cycles after it receives the activate operation from the memory controller, register, or AMB. The actual delay of the activate operation through the buffer chip may depend on the presence or absence of other DRAM operations that may conflict with the activate operation, and may optionally change from one activate operation to another.
- Similarly, since the buffered stack may appear to the memory controller as at least one larger capacity DRAM circuit with a tRP of 6 clock cycles, the memory controller may schedule a subsequent activate (e.g. row) operation to a bank a minimum of 6 clock cycles after issuing a precharge operation to that bank. However, since the DRAM circuits in the stack actually have a tRP of 4 clock cycles, the buffer chip may have the ability to delay issuing the precharge operation to the DRAM circuits in the stack by up to 2 clock cycles in order to avoid any conflicts on the address bus between the buffer chip and the DRAM circuits in the stack. In addition, even if there are no conflicts on the address bus, the buffer chip may still delay issuing a precharge operation in order to satisfy the tRAS requirement of the DRAM circuits.
- In particular, if the activate operation to a bank was delayed to avoid an address bus conflict, then the precharge operation to the same bank may be delayed by the buffer chip to satisfy the tRAS requirement of the DRAM circuits. The buffer chip may issue the precharge operation to the DRAM circuits one, two, or three clock cycles after it receives the precharge operation from the memory controller, register, or AMB. The actual delay of the precharge operation through the buffer chip may depend on the presence or absence of address bus conflicts or tRAS violations, and may change from one precharge operation to another.
-
FIG. 41 shows abuffered stack 4100 of four 512Mb DRAM circuits mapped to a single 2Gb DRAM circuit, in accordance with yet another embodiment. As an option, the bufferedstack 4100 may be implemented in the context of the architecture and environment ofFIGS. 32-40 . Of course, however, the bufferedstack 4100 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - The
multiple DRAM circuits 4102A-D buffered in the stack by thebuffer chip 4104 may appear as at least one larger capacity DRAM circuit to the memory controller. However, the combined power dissipation ofsuch DRAM circuits 4102A-D may be much higher than the power dissipation of a monolithic DRAM of the same capacity. For example, the buffered stack may consist of four 512Mb DDR2 SDRAM circuits that appear to the memory controller as a single 2Gb DDR2 SDRAM circuit. - The power dissipation of all four
DRAM circuits 4102A-D in the stack may be much higher than the power dissipation of a monolithic 2Gb DDR2 SDRAM. As a result, a DIMM containing multiple buffered stacks may dissipate much more power than a standard DIMM built using monolithic DRAM circuits. This increased power dissipation may limit the widespread adoption of DIMMs that use buffered stacks. - Thus, a power management technique that reduces the power dissipation of DIMMs that contain buffered stacks of DRAM circuits may be utilized. Specifically, the
DRAM circuits 4102A-D may be opportunistically placed in a precharge power down mode using the clock enable (CKE) pin of theDRAM circuits 4102A-D. For example, a single rank registered DIMM (R-DIMM) may contain a plurality of buffered stacks ofDRAM circuits 4102A-D, where each stack consists of four x4 512MbDDR2 SDRAM circuits 4102A-D 4102A-D and appears as a single x4 2Gb DDR2 SDRAM circuit to the memory controller. A 2Gb DDR2 SDRAM may generally have eight banks as specified by JEDEC. Therefore, thebuffer chip 4104 may map each 512Mb DRAM circuit in the stack to two banks of the equivalent 2Gb DRAM, as shown. - The memory controller of the host system may open and close pages in the banks of the
DRAM circuits 4102A-D based on the memory requests it receives from the rest of the system. In various embodiments, no more than one page may be able to be open in a bank at any given time. For example, with respect toFIG. 41 , since eachDRAM circuit 4102A-D in the stack is mapped to two banks of the equivalent larger DRAM, at any given time aDRAM circuit 4102A-D may have two open pages, one open page, or no open pages. When aDRAM circuit 4102A-D has no open pages, the power management scheme may place thatDRAM circuit 4102A-D in the precharge power down mode by de-asserting its CKE input. - The CKE inputs of the
DRAM circuits 4102A-D in a stack may be controlled by thebuffer chip 4104, by a chip on an R-DIMM, by an AMB on a FB-DIMM, or by the memory controller in order to implement the power management scheme described hereinabove. In one embodiment, this power management scheme may be particularly efficient when the memory controller implements a closed page policy. - Another optional power management scheme may include mapping a plurality of DRAM circuits to a single bank of the larger capacity DRAM seen by the memory controller. For example, a buffered stack of sixteen x4 256Mb DDR2 SDRAM circuits may appear to the memory controller as a single x4 4Gb DDR2 SDRAM circuit. Since a 4Gb DDR2 SDRAM circuit is specified by JEDEC to have eight banks, each bank of the 4Gb DDR2 SDRAM circuit may be 512Mb. Thus, two of the 256Mb DDR2 SDRAM circuits may be mapped by the
buffer chip 4104 to a single bank of the equivalent 4Gb DDR2 SDRAM circuit seen by the memory controller. - In this way,
bank 0 of the 4Gb DDR2 SDRAM circuit may be mapped by the buffer chip to two 256Mb DDR2 SDRAM circuits (e.g. DRAM A and DRAM B) in the stack. However, since only one page can be open in a bank at any given time, only one of DRAM A or DRAM B may be in the active state at any given time. If the memory controller opens a page in DRAM A, then DRAM B may be placed in the precharge power down mode by de-asserting its CKE input. As another option, if the memory controller opens a page in DRAM B, DRAM A may be placed in the precharge power down mode by de-asserting its CKE input. This technique may ensure that ifp DRAM circuits are mapped to a bank of the larger capacity DRAM circuit seen by the memory controller, then p-1 of the p DRAM circuits may continuously (e.g. always, etc.) be subjected to a power saving operation. The power saving operation may, for example, comprise operating in precharge power down mode except when refresh is required. Of course, power-savings may also occur in other embodiments without such continuity.FIG. 42 illustrates amethod 4200 for refreshing a plurality of memory circuits, in accordance with still yet another embodiment. As an option, themethod 4200 may be implemented in the context of the architecture and environment of any one or more ofFIGS. 32-41 . For example, themethod 4200 may be carried out by theinterface circuit 3202 ofFIG. 32 . Of course, however, themethod 4200 may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description. - As shown, a refresh control signal is received in
operation 4202. In one optional embodiment, such refresh control signal may, for example, be received from a memory controller, where such memory controller intends to refresh a simulated memory circuit(s). - In response to the receipt of such refresh control signal, a plurality of refresh control signals are sent to a plurality of the memory circuits (e.g. see the
memory circuits FIG. 32 , etc.), at different times. Seeoperation 4204. Such refresh control signals may or may not each include the refresh control signal ofoperation 4202 or an instantiation/copy thereof. Of course, in other embodiments, the refresh control signals may each include refresh control signals that are different in at least one aspect (e.g. format, content, etc.). - During use of still additional embodiments, at least one first refresh control signal may be sent to a first subset (e.g. of one or more) of the memory circuits at a first time and at least one second refresh control signal may be sent to a second subset (e.g. of one or more) of the memory circuits at a second time. Thus, in some embodiments, a single refresh control signal may be sent to a plurality of the memory circuits (e.g. a group of memory circuits, etc.). Further, a plurality of the refresh control signals may be sent to a plurality of the memory circuits. To this end, refresh control signals may be sent individually or to groups of memory circuits, as desired.
- Thus, in still yet additional embodiments, the refresh control signals may be sent after a delay in accordance with a particular timing. In one embodiment, for example, the timing in which the refresh control signals are sent to the memory circuits may be selected to minimize a current draw. This may be accomplished in various embodiments by staggering a plurality of refresh control signals. In still other embodiments, the timing in which the refresh control signals are sent to the memory circuits may be selected to comply with a tRFC parameter associated with each of the memory circuits.
- To this end, in the context of an example involving a plurality of DRAM circuits (e.g. see the embodiments of
FIGS. 32-33E , etc.), DRAM circuits of any desired size may receive periodic refresh operations to maintain the integrity of data therein. A memory controller may initiate refresh operations by issuing refresh control signals to the DRAM circuits with sufficient frequency to prevent any loss of data in the DRAM circuits. After a refresh control signal is issued to a DRAM circuit, a minimum time (e.g. denoted by tRFC) may be required to elapse before another control signal may be issued to that DRAM circuit. The tRFC parameter may therefore increase as the size of the DRAM circuit increases. - When the buffer chip receives a refresh control signal from the memory controller, it may refresh the smaller DRAM circuits within the span of time specified by the tRFC associated with the emulated DRAM circuit. Since the tRFC of the emulated DRAM circuits is larger than that of the smaller DRAM circuits, it may not be necessary to issue refresh control signals to all of the smaller DRAM circuits simultaneously. Refresh control signals may be issued separately to individual DRAM circuits or may be issued to groups of DRAM circuits, provided that the tRFC requirement of the smaller DRAM circuits is satisfied by the time the tRFC of the emulated DRAM circuits has elapsed. In use, the refreshes may be spaced to minimize the peak current draw of the combination buffer chip and DRAM circuit set during a refresh operation.
- While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. For example, any of the network elements may employ any of the desired functionality set forth hereinabove. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.
- Although the present invention is defined in the attached claims, it is to be understood that the invention can alternatively also be defined in accordance with the following embodiments:
-
- 1. A sub-system, comprising:
- an interface circuit adapted for coupling with a plurality of memory circuits and a system, the interface circuit operable to interface the memory circuits and the system for emulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of memory circuits;
- wherein the at least one aspect includes at least one of a signal, a capacity, a timing, and a logical interface.
- 2. The sub-system of
embodiment 1, wherein the at least one aspect includes the signal. - 3. The sub-system of
embodiment 2, wherein the signal is selected from the group consisting of an address signal, a control signal, and a data signal. - 4. The sub-system of
embodiment 1, wherein the at least one aspect includes the capacity. - 5. The sub-system of
embodiment 4, wherein the capacity includes a memory capacity. - 6. The sub-system of
embodiment 5, wherein the memory capacity relates to a number of the memory circuits. - 7. The sub-system of
embodiment 5, wherein the interface circuit is operable to interface the memory circuits and the system for emulating at least one memory circuit with a first memory capacity that is greater than a second memory capacity of at least one of the plurality of memory circuits. - 8. The sub-system of
embodiment 1, wherein the at least one aspect includes the timing. - 9. The sub-system of embodiment 8, wherein the timing relates to a latency.
- 10. The sub-system of embodiment 9, wherein the latency includes a column address strobe (CAS) latency.
- 11. The sub-system of embodiment 10, wherein the interface circuit is operable to interface the the memory circuits and the system for emulating at least one memory circuit with a first CAS latency that is longer than a second CAS latency of at least one of the plurality of memory circuits.
- 12. The sub-system of embodiment 9, wherein the latency includes a row address strobe (RAS) to CAS latency (tRCD).
- 13. The sub-system of
embodiment 12, wherein the interface circuit is operable to interface the memory circuits and the system for emulating at least one memory circuit with a first tRCD that is longer than a second tRCD of at least one of the plurality of memory circuits. - 14. The sub-system of embodiment 9, wherein the latency includes a row precharge latency (tRP).
- 15. The sub-system of
embodiment 14, wherein the interface circuit is operable to interface the memory circuits and the system for emulating at least one memory circuit with a first tRP that is longer than a second tRP of at least one of the plurality of memory circuits. - 16. The sub-system of embodiment 9, wherein the latency includes an activate to precharge latency (tRAS).
- 17. The sub-system of
embodiment 1, wherein the at least one aspect includes the logical interface. - 18. The sub-system of
embodiment 1, wherein the memory circuits each include dynamic random access memory (DRAM). - 19. A method, comprising:
- interfacing a plurality of memory circuits and a system; and
- emulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of memory circuits;
- wherein the at least one aspect includes at least one of a signal, a capacity, a timing, and a logical interface.
- 20. A system, comprising:
- a plurality of memory circuits; and
- an interface circuit in communication with the plurality of memory circuits and a system, the interface circuit operable to interface the memory circuits and the system for emulating at least one memory circuit with at least one aspect that is different from at least one aspect of at least one of the plurality of memory circuits;
- wherein the at least one aspect includes at least one of a signal, a capacity, a timing, and a logical interface.
- 21. A sub-system, comprising:
- an interface circuit adapted for communication with a system and a majority of address or control signals of a first number of memory circuits, the interface circuit including emulation logic for emulating at least one memory circuit of a second number.
- 22. The sub-system of embodiment 21, wherein the second number is less than the first number.
- 23. The sub-system of embodiment 22, wherein the second number is one.
- 24. The sub-system of embodiment 21, wherein the emulation logic emulates at least one memory circuit with a first memory capacity that is different than a second memory capacity of at least one of the plurality of memory circuits.
- 25. The sub-system of embodiment 21, wherein the interface circuit is adapted for communication with all of the address or control signals of the memory circuits.
- 26. The sub-system of embodiment 21, wherein the interface circuit is adapted for communication with a majority of the address signals of the memory circuits.
- 27. The sub-system of embodiment 21, wherein the interface circuit is adapted for communication with a majority of the control signals of the memory circuits.
- 28. The sub-system of embodiment 21, wherein the emulation includes an electrical emulation.
- 29. The sub-system of embodiment 21, wherein the emulation includes a logical emulation.
- 30. The sub-system of embodiment 21, wherein the interface circuit includes a buffer chip.
- 31. The sub-system of embodiment 21, wherein the interface circuit is positioned on a dual inline memory module (DIMM).
- 32. The sub-system of embodiment 31, wherein the DIMM includes a small outline-DIMM (SO-DIMM).
- 33. The sub-system of embodiment 31, wherein the DIMM includes a fully buffered-DIMM (FB-DIMM).
- 34. The sub-system of embodiment 31, wherein the DIMM includes a registered-DIMM (R- DIMM).
- 35. The sub-system of embodiment 21, wherein the memory circuits each include dynamic random access memory (DRAM).
- 36. The sub-system of embodiment 35, wherein the memory circuits each include a monolithic DRAM.
- 37. The sub-system of embodiment 36, wherein the memory circuits are stacked.
- 38. The sub-system of embodiment 36, wherein the memory circuits and the interface circuit are stacked.
- 39. A method, comprising:
- interfacing a majority of address or control signals of a first number of memory circuits and a system; and
- emulating at least one memory circuit of a second number.
- 40. An apparatus, comprising:
- a first number of memory circuits; and
- an interface circuit in communication with the memory circuits, the interface circuit including emulation logic for emulating at least one memory circuit of a second number;
- wherein the interface circuit interfaces a majority of address or control signals of the memory circuits.
- 41. The apparatus of embodiment 40, and further comprising a system in communication with the interface circuit.
- 42. A sub-system, comprising:
- an interface circuit in communication with a plurality of physical memory circuits and a system, the interface circuit operable to interface the physical memory circuits and the system for simulating at least one virtual memory circuit with a first power behavior that is different from a second power behavior of the physical memory circuits.
- 43. The sub-system of embodiment 42, wherein the at least one virtual memory circuit includes a single virtual memory circuit.
- 44. The sub-system of embodiment 42, wherein the interface circuit includes a circuit that is positioned on a dual in-line memory module (DIMM).
- 45. The sub-system of embodiment 42, wherein the interface circuit is selected from the group consisting of a buffer, a register, a memory controller, and an advanced memory buffer AMB).
- 46. The sub-system of embodiment 42, wherein the simulating is performed utilizing a power management operation.
- 47. The sub-system of embodiment 46, wherein the power management operation includes a power saving operation.
- 48. The sub-system of embodiment 47, wherein the power saving operation includes a power down operation.
- 49. The sub-system of embodiment 47, wherein the power saving operation involves at least one of a clock enable signal and a chip select signal.
- 50. The sub-system of embodiment 47, wherein at least a portion of the physical memory circuits is subject to the power saving operation.
- 51. The sub-system of embodiment 50, wherein the power saving operation includes powering down a first portion of the physical memory circuits while a second portion of the physical memory circuits is subject to commands.
- 52. The sub-system of embodiment 50, wherein the power saving operation includes powering down one or more of the physical memory circuits based on at least one state of one or more of the physical memory circuits.
- 53. The sub-system of embodiment 52, wherein the at least one state is selected from the group consisting of a status of the one or more of the physical memory circuits, a predetermined combination of commands issued to the one or more of the physical memory circuits, a predetermined pattern of commands issued to the one or more of the physical memory circuits, and a predetermined absence of commands issued to the one or more of the physical memory circuits.
- 54. The sub-system of embodiment 42, wherein the simulating is performed utilizing a delay.
- 55. The sub-system of embodiment 42, wherein the simulating of the first power behavior results in a first power consumption associated with the at least one virtual memory circuit that is different from a second power consumption of the physical memory circuits.
- 56. The sub-system of embodiment 55, wherein the first power consumption is less than the second power consumption.
- 57. The sub-system of embodiment 42, wherein the interface circuit and the physical memory circuits take the form of a stack.
- 58. The sub-system of embodiment 57, wherein the stack includes a single interface circuit.
- 59. The sub-system of embodiment 57, wherein the stack includes a plurality of interface circuits.
- 60. A method, comprising:
- interfacing a plurality of physical memory circuits and a system; and
- simulating at least one virtual memory circuit with a first power behavior that is different from a second power behavior of the physical memory circuits.
- 61. A system, comprising:
- a plurality of physical memory circuits; and
- an interface circuit in communication with the physical memory circuits, the interface circuit operable to interface the physical memory circuits for simulating at least one virtual memory circuit with a first power behavior that is different from a second power behavior of the physical memory circuits.
- 62. A memory apparatus for use with a system, the memory apparatus comprising:
- a plurality of memory circuits;
- an interface circuit coupled to communicate with the memory circuits, and for communicating with the system, the interface circuit operable to perform a power management operation on at least a portion of the memory circuits during a latency associated with a command directed to at least a portion of the memory circuits.
- 63. The memory apparatus of embodiment 62, wherein the power management operation includes:
- a power saving operation.
- 64. The memory apparatus of embodiment 63, wherein the power saving operation includes:
- an entry into a power down mode.
- 65. The memory apparatus of embodiment 62, wherein the power management operation includes:
- an exit from a power down mode.
- 66. The memory apparatus of embodiment 62, wherein:
- the interface circuit is further operable to change the latency.
- 67. The memory apparatus of embodiment 62, wherein the latency includes at least one of:
- a row address to column address latency (tRCD);
- a row precharge latency (tRP);
- an active to precharge latency (tRAS);
- a row cycle time (tRC);
- a refresh latency (tRFC); and
- a column address strobe (CAS) latency.
- 68. The memory apparatus of embodiment 62, wherein the latency includes at least one of:
- a write latency; and
- a read latency.
- 69. The memory apparatus of embodiment 62, wherein:
- at least one of the plurality of memory circuits has a first latency; and
- the interface circuit is further operable to simulate at least one virtual memory circuit having a second latency that is different than the first latency.
- 70. The memory apparatus of embodiment 69 wherein:
- the second latency is simulated to accommodate the power management operation.
- 71. The memory apparatus of embodiment 62 further comprising:
- a dual in-line memory module (DIMM); and
- the interface circuit is disposed on the DIMM.
- 72. The memory apparatus of embodiment 62, wherein the interface circuit comprises at least one of:
- a buffer;
- a register; and
- an advanced memory buffer (AMB).
- 73. The memory apparatus of embodiment 62, wherein the command comprises:
- a control signal.
- 74. The memory apparatus of embodiment 73, wherein the control signal comprises at least one of:
- an address signal; and
- a data signal.
- 75. The memory apparatus of embodiment 73, wherein the control signal comprises: a signal in a sequence of control signals.
- 76. The memory apparatus of embodiment 73, wherein the control signal comprises: an encoded signal.
- 77. The memory apparatus of embodiment 62, wherein:
- the command is associated with an operation.
- 78. The memory apparatus of embodiment 77, wherein the operation comprises at least one of:
- an activate operation;
- a precharge operation;
- a write operation;
- a read operation;
- a mode register write operation;
- a mode register read operation; and
- a refresh operation.
- 79. The memory apparatus of embodiment 62, wherein the command comprises:
- an encoded command.
- 80. The memory apparatus of embodiment 79, wherein:
- the encoded command is associated with an operation.
- 81. The memory apparatus of embodiment 62, wherein the command comprises at least one of:
- an activate operation;
- a precharge operation;
- a write operation;
- a read operation;
- a mode register write operation;
- a mode register read operation; and
- a refresh operation.
- 82. The memory apparatus of embodiment 62, wherein the command comprises:
- a signal associated with at least one of,
- an activate operation,
- a precharge operation,
- a write operation,
- a read operation,
- a mode register write operation,
- a mode register read operation, and
- a refresh operation.
- 83. A method of operating a physical memory apparatus, the physical memory apparatus including a plurality of memory circuits and an interface circuit coupled to the plurality of physical memory circuits, the interface circuit further being coupled to a system which issues a command directed to at least a portion of the memory apparatus, the method comprising:
- receiving the command; and
- during a latency associated with the command, performing a power management operation on at least a portion of the physical memory circuits.
- 84. The method of embodiment 83, wherein the command comprises at least one of:
- an activate operation;
- a precharge operation;
- a write operation;
- a read operation;
- a mode register write operation;
- a mode register read operation; and
- a refresh operation.
- 85. The method of embodiment 84, further comprising:
- providing to the system a simulation of a memory apparatus having a simulated latency, wherein the simulated latency differs from a corresponding physical latency of the physical memory circuits;
- wherein the difference between the simulated latency and the physical latency provides time for performing the power management operation.
- 86. A memory apparatus for use with a system which issues a command having a latency determined by a first latency of the memory apparatus, the memory apparatus comprising:
- a plurality of physical memory circuits having a second latency; and
- an interface circuit coupled to the plurality of physical memory circuits and couplable to the system, for simulating a memory having a the first latency which is different than the second latency, and for informing the system of the first latency, and for performing a power management operation on at least a portion of the physical memory circuits during the first latency.
- 87. The memory apparatus of embodiment 86 wherein:
- the second latency is shorter than the first latency.
- 88. A method, comprising:
- communicating with a plurality of physical memory circuits; and
- simulating at least one virtual memory circuit with at least one power-related aspect that is different from at least one aspect of at least one of the physical memory circuits.
- 89. The method of embodiment 88, wherein the simulating is performed by an interface circuit.
- 90. The method of embodiment 89, wherein the interface circuit is selected from the group consisting of a buffer, a register, an advanced memory buffer (AMB), and a component positioned on at least one dual in-line memory module (DIMM).
- 91. The method of embodiment 90, wherein the interface circuit includes the buffer and is selected from the group consisting of a buffer chip, a data register chip, a multiplexer/demultiplexer chip, and a synchronous multiplexer/demultiplexer chip.
- 92. The method of embodiment 90, wherein the interface circuit includes the register and is selected from the group consisting of an address register chip, a control register chip, and an address/control register chip.
- 93. The method of embodiment 88, wherein the simulating is performed by a component of a system.
- 94. The method of embodiment 93, wherein the component of the system includes a memory controller.
- 95. The method of embodiment 88, wherein the at least one power-related aspect includes a timing.
- 96. The method of embodiment 88, wherein the at least one power-related aspect includes a relative period of a first state of the physical memory circuits with respect to a period of a second state of the physical memory circuits.
- 97. The method of embodiment 96, wherein the first state is a precharge state.
- 98. The method of embodiment 96, wherein the second state is an active state.
- 99. The method of embodiment 88, wherein the at least one power-related aspect includes power behavior.
- 100. The method of embodiment 99, wherein the at least one power-related aspect includes a number of power management signals.
- 101. The method of embodiment 99, wherein the at least one power-related aspect includes a type of power management signals.
- 102. The method of embodiment 101, wherein the type of power management signals is selected from the group consisting of a time-multiplexed power management signal, a bussed power management signal, an encoded power management signal, and an unencoded power management signal.
- 103. The method of embodiment 99, wherein the at least one power-related aspect includes a placement of power management signals.
- 104. The method of embodiment 103, wherein the placement of power management signals includes placement of power management signals in at least one of an address field, a data field, at least one unused pin on a dual in-line memory module (DIMM), a clock enable signal, and a chip select signal.
- 105. An apparatus, comprising:
- a component of a system in communication with a plurality of physical memory circuits, the component of the system operable to communicate with the physical memory circuits and simulate at least one virtual memory circuit with at least one aspect that is different from at least one aspect of at least one of the physical memory circuits.
- 106. The apparatus of embodiment 105, wherein the component of the system includes a memory controller.
- 107. The apparatus of embodiment 105, wherein the component of the system works in combination with an interface circuit for simulating the at least one aspect.
- 108. The apparatus of embodiment 107, wherein the interface circuit interfaces at least one of data signals and address signals.
- 109. The apparatus of embodiment 107, wherein the component of the system simulates the at least one aspect utilizing a latency of the physical memory circuits.
- 110. The apparatus of embodiment 105, wherein the at least one aspect includes a power-related aspect.
- 111. The apparatus of
embodiment 110, wherein the at least one power-related aspect includes power management of an interface circuit. - 112. The apparatus of
embodiment 110, wherein the at least one power-related aspect includes power management of at least one of a receiver circuit and a driver circuit of the interface circuit. - 113. The apparatus of
embodiment 110, wherein the at least one power-related aspect is simulated by adjusting a parameter selected from the group consisting of a tFAW parameter, a tRRD parameter, a tRP parameter, a tRFC(min) parameter, and a tRCD parameter. - 114. The apparatus of
embodiment 110, wherein the at least one power-related aspect is simulated by switching between IT and 2T modes. - 115. A method, comprising:
- communicating with at least one physical memory circuit having a first number of portions; and
- simulating at least one virtual memory circuit having a second number of portions that is different from the first number of portions of the at least one physical memory circuit.
- 116. The method of embodiment 115, wherein the second number is less than the first number.
- 117. The method of embodiment 116, wherein the second number of portions includes a single portion.
- 118. The method of embodiment 115, wherein the simulating results in a power savings.
- 119. A system, comprising:
- at least one physical memory circuit having a first number of portions; and
- means for simulating at least one virtual memory circuit having a second number of portions that is different from the first number of portions of the at least one physical memory circuit.
- 120. A method, comprising:
- communicating with a plurality of physical memory circuits; and
- simulating at least one virtual memory circuit with at least one aspect that is different from at least one aspect of at least one of the physical memory circuits;
- wherein the at least one aspect is selected from the group consisting of a signal, a portion, a partition, an organization, a mapping, a timing, and a latency.
- 121. A method, comprising:
- identifying at least one of a plurality of memory circuits that is not currently being accessed; and
- in response to the identification of the at least one memory circuit, initiating a power saving operation in association with the at least one memory circuit.
- 122. The method of embodiment 121, wherein the power saving operation includes a power down operation.
- 123. The method of embodiment 122, wherein the power down operation includes a precharge power down operation.
- 124. The method of embodiment 121, wherein the power saving operation is initiated utilizing a clock enable input of the at least one memory circuit.
- 125. The method of embodiment 124, wherein the power saving operation is initiated by de - asserting the clock enable input of the at least one memory circuit.
- 126. The method of embodiment 124, wherein the identifying includes determining whether a page is being accessed in at least one of the plurality of memory circuits.
- 127. The method of embodiment 121, wherein at least one of the identifying and the initiating is carried out utilizing a component.
- 128. The method of embodiment 127, wherein the component includes an advanced memory buffer (AMB).
- 129. The method of embodiment 127, wherein the component includes a circuit that is positioned on a dual in-line memory module (DIMM).
- 130. The method of embodiment 127, wherein the component includes a memory controller.
- 131. The method of embodiment 127, wherein the component includes a register.
- 132. The method of embodiment 121, wherein a number (x) of the memory circuits is included, and a lesser number of the memory circuits is continuously subjected to the power saving operation.
- 133. The method of embodiment 132, wherein the lesser number includes x-1.
- 134. The method of embodiment 121, wherein at least one of the identifying and the initiating is carried out utilizing an interface circuit for interfacing the plurality of memory circuits and a system.
- 135. The method of embodiment 121, wherein the memory circuits each include dynamic random access memory (DRAM).
- 136. The method of embodiment 135, wherein the memory circuits each include a monolithic DRAM.
- 137. The method of embodiment 136, wherein the memory circuits are stacked.
- 138. The method of embodiment 136, wherein the memory circuits and the interface circuit are stacked.
- 139. A sub -system, comprising:
- a component in communication with a plurality of memory circuits and a system, the component operable to initiate a power saving operation in association with at least one of the plurality of memory circuits that is not accessed by the system.
- 140. A system, comprising:
- a plurality of memory circuits; and
- a component in communication with the plurality of memory circuits and a system, the component operable to initiate a power saving operation in association with at least one of the plurality of memory circuits that is not currently being accessed.
- 141. A sub -system, comprising:
- an interface circuit in communication with a plurality of memory circuits and a system, the interface circuit operable to interface the memory circuits and the system for communicating a first number of power management signals to at least a portion of the memory circuits that is different from a second number of power management signals received from the system.
- 142. The sub -system of embodiment 141, wherein the power management signals include a clock enable signal.
- 143. The sub -system of embodiment 141, wherein the power management signals include a chip select signal.
- 144. The sub -system of embodiment 141, wherein a power management operation is initiated by at least one of the power management signals.
- 145. The sub -system of embodiment 144, wherein the power management operation includes an entry into a power down mode.
- 146. The sub -system of embodiment 144, wherein the power management operation includes an exit from a power down mode.
- 147. The sub -system of embodiment 141, wherein the memory circuits include at least one rank of memory circuits.
- 148. The sub -system of embodiment 141, wherein the first number of power management signals are utilized in a manner that is independent from each other, to power manage at least one portion of the memory circuits.
- 149. The sub -system of embodiment 141, wherein the interface circuit is further operable for simulating at least one virtual memory circuit.
- 150. The sub -system of embodiment 149, wherein a number of the at least one virtual memory circuit is less than the first number of power management signals.
- 151. The sub -system of embodiment 149, wherein the at least one virtual memory circuit includes a single virtual memory circuit.
- 152. The sub -system of embodiment 141, wherein the interface circuit includes a circuit that is positioned on a dual in-line memory module (DIMM).
- 153. The sub -system of embodiment 141, wherein the interface circuit is selected from the group consisting of a buffer, a register, a memory controller, and an advanced memory buffer (AMB).
- 154. The sub -system of embodiment 141, wherein the interface circuit and the memory circuits take the form of a stack.
- 155. The sub -system of embodiment 154, wherein the stack includes a single interface circuit.
- 156. The sub -system of embodiment 154, wherein the stack includes a plurality of interface circuits.
- 157. A method, comprising:
- interfacing a plurality of memory circuits and a system;
- receiving at least one power management signal from the system; and
- communicating a different number of power management signals to at least a portion of the memory circuits.
- 158. A system, comprising:
- a plurality of memory circuits; and
- an interface circuit in communication with the memory circuits and a system, the interface circuit operable to interface the memory circuits and the system for communicating a first number of power management signals to at least a portion of the memory circuits that is different from a second number of power management signals.
- 159. A sub -system, comprising:
- an interface circuit in communication with a plurality of memory circuits and a system, the interface circuit operable to perform a power management operation in association with only a portion of the memory circuits.
- 160. The sub -system of embodiment 159, wherein the power management operation includes a power saving operation.
- 161. The sub -system of embodiment 160, wherein the power saving operation includes a power down operation.
- 162. The sub -system of embodiment 159, wherein the power management operation is initiated by at least one power management signal.
- 163. The sub -system of embodiment 162, wherein the at least one power management signal includes at least one of a clock enable signal, and a chip select signal.
- 164. The sub -system of embodiment 159, wherein the power management operation is initiated by at least one non-power management signal.
- 165. The sub -system of embodiment 159, wherein the power management operation is initiated based on a state of one or more of the memory circuits.
- 166. The sub -system of embodiment 165, wherein the state is selected from the group consisting of a status of the one or more of the memory circuits, a predetermined combination of commands issued to the one or more of the memory circuits, a predetermined pattern of commands issued to the one or more of the memory circuits, and a predetermined absence of commands issued to the one or more of the memory circuits.
- 167. The sub -system of embodiment 159, wherein the interface circuit is operable to simulate at least one virtual memory circuit.
- 168. The sub -system of embodiment 167, wherein the power management operation is performed in association with only a portion of the at least one virtual memory circuit.
- 169. The sub -system of embodiment 167, wherein the at least one virtual memory circuit includes a single virtual memory circuit.
- 170. The sub -system of embodiment 159, wherein the power management operation includes powering down a first portion of the memory circuits while a second portion of the memory circuits is subject to at least one command.
- 171. The sub -system of embodiment 159, wherein the interface circuit includes a circuit that is positioned on a dual in-line memory module (DIMM).
- 172. The sub -system of embodiment 159, wherein the interface circuit is selected from the group consisting of a buffer, a register, a memory controller, and an advanced memory buffer (AMB).
- 173. The sub -system of embodiment 159, wherein the interface circuit and the memory circuits take the form of a stack.
- 174. The sub -system of embodiment 173, wherein the stack includes a single interface circuit.
- 175. The sub -system of embodiment 159, wherein the interface circuit includes a single register.
- 176. The sub -system of embodiment 173, wherein the stack includes a plurality of interface circuits.
- 177. A method, comprising:
- interfacing a plurality of physical memory circuits and a system;
- simulating at least one virtual memory circuit; and
- performing a power management operation in association with only a portion of the at least one virtual memory circuit.
- 178. A system, comprising:
- a plurality of physical memory circuits; and
- an interface circuit in communication with the physical memory circuits and a system, the interface circuit operable to interface the physical memory circuits and the system for simulating at least one virtual memory circuit and performing a power management operation in association with only a portion of the at least one virtual memory circuit.
- 179. A sub -system, comprising:
- an interface circuit in communication with a plurality of memory circuits and a system, the interface circuit operable to interface the memory circuits and the system for autonomously performing a power management operation in association with at least a portion of the memory circuits.
- 180. The sub -system of embodiment 179, wherein the power management operation is initiated by the interface circuit autonomously.
- 181. The sub -system of embodiment 179, wherein the power management operation is initiated by at least one non-power management signal.
- 182. The sub -system of embodiment 181, wherein the non-power management signal includes a control signal.
- 183. The sub -system of embodiment 182, wherein the control signal is selected from the group consisting of an address signal and a data signal.
- 184. The sub -system of embodiment 182, wherein the control signal is associated with an operation selected from the group consisting of an activate operation, a precharge operation, a write operation, a read operation, a mode register write operation, a mode register read operation, and a refresh operation.
- 185. The sub -system of embodiment 179, wherein the power management operation is initiated in response to at least one non-power related state of one or more of the memory circuits.
- 186. The sub-system of embodiment 185, wherein the at least one state is selected from the group consisting of a predetermined combination of commands issued to the one or more of the memory circuits, a predetermined pattern of commands issued to the one or more of the memory circuits, and a predetermined absence of commands issued to the one or more of the memory circuits.
- 187. The sub -system of embodiment 179, wherein the interface circuit is further operable for simulating at least one virtual memory circuit.
- 188. The sub -system of embodiment 187, wherein the power management operation is performed in association with only a portion of the virtual memory circuit.
- 189. The sub -system of embodiment 187, wherein the at least one virtual memory circuit includes a single virtual memory circuit.
- 190. The sub -system of embodiment 179, wherein the power management operation includes a power saving operation.
- 191. The sub -system of embodiment 179, wherein the interface circuit is intelligent.
- 192. The sub -system of embodiment 179, wherein the interface circuit includes a circuit that is positioned on a dual in-line memory module (DIMM).
- 193. The sub -system of embodiment 179, wherein the interface circuit is selected from the group consisting of a buffer, a register, a memory controller, and an advanced memory buffer (AMB).
- 194. The sub -system of embodiment 179, wherein the interface circuit and the memory circuits take the form of a stack.
- 195. The sub -system of embodiment 194, wherein the stack includes a single interface circuit.
- 196. The sub -system of embodiment 194, wherein the stack includes a plurality of interface circuits.
- 197. A method, comprising:
- interfacing a plurality of memory circuits and a system; and
- autonomously performing a power management operation in association with at least a portion of the memory circuits.
- 198. A system, comprising:
- a plurality of memory circuits; and
- an interface circuit in communication with the memory circuits and a system, the interface circuit operable to interface the memory circuits and the system for autonomously performing a power management operation in association with at least a portion of the memory circuits.
- A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the following claims. Accordingly, other implementations are within the scope of the following claims.
Claims (18)
- A sub-system, comprising:an interface circuit in communication with a plurality of memory circuits and a system, the interface circuit operable to interface the memory circuits and the system and autonomously performing a power management operation in association with at least a portion of the memory circuits.
- The sub-system of claim 1, wherein the power management operation is initiated by the interface circuit autonomously.
- The sub-system of claim 1, wherein the power management operation is initiated by at least one non-power management signal.
- The sub-system of claim 3, wherein the non-power management signal includes a control signal.
- The sub-system of claim 4, wherein the control signal is selected from the group consisting of an address signal and a data signal.
- The sub-system of claim 4, wherein the control signal is associated with an operation selected from the group consisting of an activate operation, a precharge operation, a write operation, a read operation, a mode register write operation, a mode register read operation, and a refresh operation.
- The sub-system of claim 1, wherein the power management operation is initiated in response to at least one non-power related state of one or more of the memory circuits.
- The sub-system of claim 7, wherein the at least one state is selected from the group consisting of a predetermined combination of commands issued to the one or more of the memory circuits, a predetermined pattern of commands issued to the one or more of the memory circuits, and a predetermined absence of commands issued to the one or more of the memory circuits.
- The sub-system of claim 1, wherein the interface circuit is further operable for simulating at least one virtual memory circuit.
- The sub-system of claim 9, wherein the power management operation is performed in association with only a portion of the virtual memory circuit.
- The sub-system of claim 9, wherein the at least one virtual memory circuit includes a single virtual memory circuit.
- The sub-system of claim 1, wherein the power management operation includes a power saving operation.
- The sub-system of claim 1, wherein the interface circuit is intelligent.
- The sub-system of claim 1, wherein the interface circuit includes a circuit that is positioned on a dual in-line memory module (DIMM).
- The sub-system of claim 1, wherein the interface circuit is selected from the group consisting of a buffer, a register, a memory controller, and an advanced memory buffer (AMB).
- The sub-system of claim 1, wherein the interface circuit and the memory circuits take the form of a stack.
- The sub-system of claim 16, wherein the stack includes a single interface circuit.
- The sub-system of claim 16, wherein the stack includes a plurality of interface circuits.
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP18166674.4A EP3364298B1 (en) | 2006-07-31 | 2007-07-18 | Memory circuit system and method |
DK18166674.4T DK3364298T3 (en) | 2006-07-31 | 2007-07-18 | SYSTEM AND PROCEDURE FOR MEMORY CIRCUITS |
Applications Claiming Priority (10)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/461,439 US7580312B2 (en) | 2006-07-31 | 2006-07-31 | Power saving system and method for use with a plurality of memory circuits |
US11/524,812 US7386656B2 (en) | 2006-07-31 | 2006-09-20 | Interface circuit system and method for performing power management operations in conjunction with only a portion of a memory circuit |
US11/524,730 US7472220B2 (en) | 2006-07-31 | 2006-09-20 | Interface circuit system and method for performing power management operations utilizing power management signals |
US11/524,716 US7392338B2 (en) | 2006-07-31 | 2006-09-20 | Interface circuit system and method for autonomously performing power management operations in conjunction with a plurality of memory circuits |
US11/524,811 US7590796B2 (en) | 2006-07-31 | 2006-09-20 | System and method for power management in memory systems |
US11/538,041 US20080082763A1 (en) | 2006-10-02 | 2006-10-02 | Apparatus and method for power management of memory circuits by a system or component thereof |
US11/584,179 US7581127B2 (en) | 2006-07-31 | 2006-10-20 | Interface circuit system and method for performing power saving operations during a command-related latency |
US11/762,013 US8090897B2 (en) | 2006-07-31 | 2007-06-12 | System and method for simulating an aspect of a memory circuit |
US11/762,010 US8041881B2 (en) | 2006-07-31 | 2007-06-12 | Memory device with emulated characteristics |
EP07870726A EP2054803A4 (en) | 2006-07-31 | 2007-07-18 | Memory circuit system and method |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP07870726.2 Division | 2007-07-18 |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18166674.4A Division EP3364298B1 (en) | 2006-07-31 | 2007-07-18 | Memory circuit system and method |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2442310A2 true EP2442310A2 (en) | 2012-04-18 |
EP2442310A3 EP2442310A3 (en) | 2013-04-24 |
Family
ID=56290996
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18166674.4A Active EP3364298B1 (en) | 2006-07-31 | 2007-07-18 | Memory circuit system and method |
EP12150798A Withdrawn EP2442309A3 (en) | 2006-07-31 | 2007-07-18 | Power management for memory circuit system |
EP12150807.1A Ceased EP2442310A3 (en) | 2006-07-31 | 2007-07-18 | Power management for memory circuit |
EP07870726A Ceased EP2054803A4 (en) | 2006-07-31 | 2007-07-18 | Memory circuit system and method |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18166674.4A Active EP3364298B1 (en) | 2006-07-31 | 2007-07-18 | Memory circuit system and method |
EP12150798A Withdrawn EP2442309A3 (en) | 2006-07-31 | 2007-07-18 | Power management for memory circuit system |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP07870726A Ceased EP2054803A4 (en) | 2006-07-31 | 2007-07-18 | Memory circuit system and method |
Country Status (3)
Country | Link |
---|---|
EP (4) | EP3364298B1 (en) |
DK (1) | DK3364298T3 (en) |
WO (1) | WO2008063251A2 (en) |
Families Citing this family (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10013371B2 (en) | 2005-06-24 | 2018-07-03 | Google Llc | Configurable memory circuit system and method |
US9542352B2 (en) | 2006-02-09 | 2017-01-10 | Google Inc. | System and method for reducing command scheduling constraints of memory circuits |
US8397013B1 (en) | 2006-10-05 | 2013-03-12 | Google Inc. | Hybrid memory module |
US8089795B2 (en) | 2006-02-09 | 2012-01-03 | Google Inc. | Memory module with memory stack and interface with enhanced capabilities |
US8244971B2 (en) | 2006-07-31 | 2012-08-14 | Google Inc. | Memory circuit system and method |
US8359187B2 (en) | 2005-06-24 | 2013-01-22 | Google Inc. | Simulating a different number of memory circuit devices |
US9171585B2 (en) | 2005-06-24 | 2015-10-27 | Google Inc. | Configurable memory circuit system and method |
US20080082763A1 (en) | 2006-10-02 | 2008-04-03 | Metaram, Inc. | Apparatus and method for power management of memory circuits by a system or component thereof |
US9507739B2 (en) | 2005-06-24 | 2016-11-29 | Google Inc. | Configurable memory circuit system and method |
US7609567B2 (en) | 2005-06-24 | 2009-10-27 | Metaram, Inc. | System and method for simulating an aspect of a memory circuit |
US9632929B2 (en) | 2006-02-09 | 2017-04-25 | Google Inc. | Translating an address associated with a command communicated between a system and memory circuits |
US8639874B2 (en) * | 2008-12-22 | 2014-01-28 | International Business Machines Corporation | Power management of a spare DRAM on a buffered DIMM by issuing a power on/off command to the DRAM device |
US9105323B2 (en) | 2009-01-23 | 2015-08-11 | Micron Technology, Inc. | Memory device power managers and methods |
US8811110B2 (en) | 2012-06-28 | 2014-08-19 | Intel Corporation | Configuration for power reduction in DRAM |
US10586795B1 (en) * | 2018-04-30 | 2020-03-10 | Micron Technology, Inc. | Semiconductor devices, and related memory devices and electronic systems |
US11282815B2 (en) | 2020-01-14 | 2022-03-22 | Micron Technology, Inc. | Methods of forming microelectronic devices, and related microelectronic devices and electronic systems |
US11699652B2 (en) | 2020-06-18 | 2023-07-11 | Micron Technology, Inc. | Microelectronic devices and electronic systems |
US11380669B2 (en) | 2020-06-18 | 2022-07-05 | Micron Technology, Inc. | Methods of forming microelectronic devices |
US11557569B2 (en) | 2020-06-18 | 2023-01-17 | Micron Technology, Inc. | Microelectronic devices including source structures overlying stack structures, and related electronic systems |
US11705367B2 (en) | 2020-06-18 | 2023-07-18 | Micron Technology, Inc. | Methods of forming microelectronic devices, and related microelectronic devices, memory devices, electronic systems, and additional methods |
US11335602B2 (en) | 2020-06-18 | 2022-05-17 | Micron Technology, Inc. | Methods of forming microelectronic devices, and related microelectronic devices and electronic systems |
US11563018B2 (en) | 2020-06-18 | 2023-01-24 | Micron Technology, Inc. | Microelectronic devices, and related methods, memory devices, and electronic systems |
US11587919B2 (en) | 2020-07-17 | 2023-02-21 | Micron Technology, Inc. | Microelectronic devices, related electronic systems, and methods of forming microelectronic devices |
US11825658B2 (en) | 2020-08-24 | 2023-11-21 | Micron Technology, Inc. | Methods of forming microelectronic devices and memory devices |
US11417676B2 (en) | 2020-08-24 | 2022-08-16 | Micron Technology, Inc. | Methods of forming microelectronic devices and memory devices, and related microelectronic devices, memory devices, and electronic systems |
KR20230108274A (en) * | 2020-11-23 | 2023-07-18 | 퀄컴 인코포레이티드 | Method and system for refreshing the memory of a portable computing device |
US11751408B2 (en) | 2021-02-02 | 2023-09-05 | Micron Technology, Inc. | Methods of forming microelectronic devices, and related microelectronic devices, memory devices, and electronic systems |
US11837594B2 (en) | 2021-06-30 | 2023-12-05 | Micron Technology, Inc. | Microelectronic devices and electronic systems |
US11842990B2 (en) | 2021-06-30 | 2023-12-12 | Micron Technology, Inc. | Microelectronic devices and electronic systems |
US11930634B2 (en) | 2021-06-30 | 2024-03-12 | Micron Technology, Inc. | Methods of forming microelectronic devices |
US11785764B2 (en) | 2021-06-30 | 2023-10-10 | Micron Technology, Inc. | Methods of forming microelectronic devices |
US11810838B2 (en) | 2021-06-30 | 2023-11-07 | Micron Technology, Inc. | Microelectronic devices, and related electronic systems and methods of forming microelectronic devices |
US11776925B2 (en) | 2021-06-30 | 2023-10-03 | Micron Technology, Inc. | Methods of forming microelectronic devices, and related microelectronic devices and electronic systems |
US11751383B2 (en) | 2021-08-31 | 2023-09-05 | Micron Technology, Inc. | Methods of forming microelectronic devices, and related microelectronic devices and electronic systems |
US11791273B2 (en) | 2021-10-13 | 2023-10-17 | Micron Technology, Inc. | Microelectronic devices including contact structures, and related memory devices, electronic systems, and methods |
Family Cites Families (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5502667A (en) * | 1993-09-13 | 1996-03-26 | International Business Machines Corporation | Integrated multichip memory module structure |
US5590071A (en) * | 1995-11-16 | 1996-12-31 | International Business Machines Corporation | Method and apparatus for emulating a high capacity DRAM |
US6181640B1 (en) * | 1997-06-24 | 2001-01-30 | Hyundai Electronics Industries Co., Ltd. | Control circuit for semiconductor memory device |
US5835435A (en) * | 1997-12-02 | 1998-11-10 | Intel Corporation | Method and apparatus for dynamically placing portions of a memory in a reduced power consumtion state |
US6154821A (en) * | 1998-03-10 | 2000-11-28 | Rambus Inc. | Method and apparatus for initializing dynamic random access memory (DRAM) devices by levelizing a read domain |
US7356639B2 (en) * | 2000-01-05 | 2008-04-08 | Rambus Inc. | Configurable width buffered module having a bypass circuit |
US6434660B1 (en) * | 2000-05-23 | 2002-08-13 | Centennial Technologies, Inc. | Emulating one tape protocol of flash memory to a different type protocol of flash memory |
US6480845B1 (en) * | 2000-06-14 | 2002-11-12 | Bull Hn Information Systems Inc. | Method and data processing system for emulating virtual memory working spaces |
US6523089B2 (en) * | 2000-07-19 | 2003-02-18 | Rambus Inc. | Memory controller with power management logic |
US6356500B1 (en) * | 2000-08-23 | 2002-03-12 | Micron Technology, Inc. | Reduced power DRAM device and method |
US6631456B2 (en) * | 2001-03-06 | 2003-10-07 | Lance Leighnor | Hypercache RAM based disk emulation and method |
US6978352B2 (en) * | 2001-05-03 | 2005-12-20 | Hewlett-Packard Development Company, L.P. | Memory controller emulator for controlling memory devices in a memory system |
US6781911B2 (en) * | 2002-04-09 | 2004-08-24 | Intel Corporation | Early power-down digital memory device and method |
US7549066B2 (en) * | 2002-11-15 | 2009-06-16 | Intel Corporation | Automatic power savings stand-by control for non-volatile memory |
US7428644B2 (en) * | 2003-06-20 | 2008-09-23 | Micron Technology, Inc. | System and method for selective memory module power management |
US7752470B2 (en) * | 2003-12-03 | 2010-07-06 | International Business Machines Corporation | Method and system for power management including device controller-based device use evaluation and power-state control |
US7085152B2 (en) * | 2003-12-29 | 2006-08-01 | Intel Corporation | Memory system segmented power supply and control |
US7366931B2 (en) * | 2004-12-30 | 2008-04-29 | Intel Corporation | Memory modules that receive clock information and are placed in a low power state |
US20060181949A1 (en) * | 2004-12-31 | 2006-08-17 | Kini M V | Operating system-independent memory power management |
-
2007
- 2007-07-18 WO PCT/US2007/016385 patent/WO2008063251A2/en active Application Filing
- 2007-07-18 EP EP18166674.4A patent/EP3364298B1/en active Active
- 2007-07-18 EP EP12150798A patent/EP2442309A3/en not_active Withdrawn
- 2007-07-18 DK DK18166674.4T patent/DK3364298T3/en active
- 2007-07-18 EP EP12150807.1A patent/EP2442310A3/en not_active Ceased
- 2007-07-18 EP EP07870726A patent/EP2054803A4/en not_active Ceased
Non-Patent Citations (1)
Title |
---|
None |
Also Published As
Publication number | Publication date |
---|---|
EP3364298B1 (en) | 2019-12-11 |
EP3364298A3 (en) | 2018-11-28 |
EP2442310A3 (en) | 2013-04-24 |
EP2054803A4 (en) | 2009-10-21 |
EP2442309A2 (en) | 2012-04-18 |
EP2054803A2 (en) | 2009-05-06 |
EP2442309A3 (en) | 2013-01-23 |
WO2008063251A3 (en) | 2008-10-16 |
WO2008063251A2 (en) | 2008-05-29 |
EP3364298A2 (en) | 2018-08-22 |
DK3364298T3 (en) | 2020-03-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8868829B2 (en) | Memory circuit system and method | |
EP3364298B1 (en) | Memory circuit system and method | |
US8209479B2 (en) | Memory circuit system and method | |
US8667312B2 (en) | Performing power management operations | |
US8407412B2 (en) | Power management of memory circuits by virtual memory simulation | |
US7392338B2 (en) | Interface circuit system and method for autonomously performing power management operations in conjunction with a plurality of memory circuits | |
US7472220B2 (en) | Interface circuit system and method for performing power management operations utilizing power management signals | |
US7590796B2 (en) | System and method for power management in memory systems | |
US8745321B2 (en) | Simulating a memory standard | |
US9507739B2 (en) | Configurable memory circuit system and method | |
US10013371B2 (en) | Configurable memory circuit system and method |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
AC | Divisional application: reference to earlier application |
Ref document number: 2054803Country of ref document: EPKind code of ref document: P |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IS IT LI LT LU LV MC MT NL PL PT RO SE SI SK TR |
|
AX | Request for extension of the european patent |
Extension state: AL BA HR MK RS |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 1/32 20060101ALI20121022BHEPIpc: G11C 5/14 20060101AFI20121022BHEPIpc: G06F 9/455 20060101ALI20121022BHEP |
|
PUAL | Search report despatched |
Free format text: ORIGINAL CODE: 0009013 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 9/455 20060101ALI20130314BHEPIpc: G11C 5/14 20060101AFI20130314BHEPIpc: G06F 13/10 20060101ALI20130314BHEPIpc: G06F 1/32 20060101ALI20130314BHEP |
|
AK | Designated contracting states |
Kind code of ref document: A3Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IS IT LI LT LU LV MC MT NL PL PT RO SE SI SK TR |
|
AX | Request for extension of the european patent |
Extension state: AL BA HR MK RS |
|
17P | Request for examination filed |
Effective date: 20130718 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IS IT LI LT LU LV MC MT NL PL PT RO SE SI SK TR |
|
17Q | First examination report despatched |
Effective date: 20130906 |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: SMITH, MICHAEL JOHN SEBASTIANInventor name: WEBER, FREDERICK DANIELInventor name: SCHAKEL, KEITH R.Inventor name: WANG, DAVID T.Inventor name: RAJAN, SURESH NATARAJAN |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20180506 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
EP2960767A1 - Computerized systems and methods for rendering an animation of an object in response to user input - Google Patents
Computerized systems and methods for rendering an animation of an object in response to user input Download PDFInfo
- Publication number
- EP2960767A1 EP2960767A1 EP15173435.7A EP15173435A EP2960767A1 EP 2960767 A1 EP2960767 A1 EP 2960767A1 EP 15173435 A EP15173435 A EP 15173435A EP 2960767 A1 EP2960767 A1 EP 2960767A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- animation
- selection
- user interface
- user
- circle
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Withdrawn
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/04812—Interaction techniques based on cursor appearance or behaviour, e.g. being affected by the presence of displayed objects
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04842—Selection of displayed objects or displayed text elements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T11/00—2D [Two Dimensional] image generation
- G06T11/001—Texturing; Colouring; Generation of texture or colour
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T13/00—Animation
- G06T13/80—2D [Two Dimensional] animation, e.g. using sprites
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G5/00—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators
- G09G5/36—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators characterised by the display of a graphic pattern, e.g. using an all-points-addressable [APA] memory
- G09G5/37—Details of the operation on graphic patterns
- G09G5/377—Details of the operation on graphic patterns for mixing or overlaying two or more graphic patterns
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2200/00—Indexing scheme for image data processing or generation, in general
- G06T2200/24—Indexing scheme for image data processing or generation, in general involving graphical user interfaces [GUIs]
Definitions
- Embodiments described herein relate to computer-implemented methods and systems for rendering an animation in a user interface
- the present disclosure relates to computerized systems and method for rendering an animation and, more generally, the field of user interface design.
- the present disclosure relates to computerized systems and methods for rendering animation of an object in a user interface in response to a user input.
- Embodiments of the present disclosure relate to computerized systems and methods for rendering an animation of an object on a display.
- embodiments of the present disclosure relate to solutions for rendering animations in response to user inputs received through a user interface of an application.
- computerized systems and methods may receive an indication of a selection of a user interface element in a user interface. Once the indication has been received, characteristics of the selected user interface element may be identified. Coordinates of the user selection may be determined, and an animation of an object may be rendered based on the coordinates and the identified characteristics of the selected element.
- a computer-implemented method for rendering an animation in a user interface comprises operations performed by one or more processors.
- the operations of the method include receiving an indication of a selection of a user interface element in the user interface, and identifying characteristics of the selected element.
- the operations of the method also include determining coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface.
- the operations of the method further include rendering an animation of an object based on the coordinates of the user selection and the identified characteristics of the selected element.
- the identified characteristics of the selected element include one or more of a width, height, radius, shape, and bounding status.
- the center of the animated object migrates to the center of the selected element as the object changes over time.
- the animated object grows in size over time to provide a ripple effect.
- the method further comprises: determining a selection time corresponding to when the user selection was made, wherein the animation of the object is rendered based on the selection time.
- the selection time corresponds to when an input was pressed by a user to initiate the user selection.
- the selection time corresponds to when an input was released by a user to complete the user selection.
- the method further comprises: determining a color of the selected user interface element; and rendering the animation of the object in a different shade of the color.
- the method further comprises: changing a shade of the color of the selected user interface element as the animation of the object changes over time, wherein at a certain time during the animation, the shade of the color of the selected user interface element and the shade of the color of the object is the same.
- the method further comprises: determining one of an acceleration or velocity based on the identified characteristics of the selected element; and changing the animation of the object over time based on the determined acceleration or velocity.
- the object is a circle
- the animation is rendered so that the circle expands over time.
- a computer-implemented system for rendering an animation of an object in a user interface includes a memory that stores instructions, and at least one processor that executes the instructions.
- the at least one processor executes the instructions to receive an indication of a selection of a user interface element in the user interface, and to identify characteristics of the selected element.
- the at least one processor also executes the instructions to determine coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface.
- the at least one processor further executes the instructions to render an animation of an object based on the coordinates of the user selection and the identified characteristics of the selected element.
- the identified characteristics of the selected element include one or more of a width, height, radius, shape, and bounding status.
- the center of the animated object migrates to the center of the selected element as the object changes over time.
- the animated object grows in size over time to provide a ripple effect.
- the at least one processor further executes the instructions to: determine a selection time corresponding to when the user selection was made, wherein the animation of the object is rendered based on the selection time.
- the selection time corresponds to when an input was pressed by a user to initiate the user selection.
- the selection time corresponds to when an input was released by a used to complete the user selection.
- the at least one processor further executes the instructions to determine one of an acceleration or velocity based on the identified characteristics of the element; and change the animation of the object over time based on the determined acceleration or velocity.
- a non-transitory computer-readable medium storing a set of instructions that, when executed by one or more processors, cause the one or more processors to perform a method.
- the method comprises receiving an indication of a selection of a user interface element in a user interface, and identifying characteristics of the selected element.
- the method also comprises determining coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface.
- the method further comprises rendering an animation of an object based on the coordinates of the user selection and the identified characteristics of the element.
- Embodiments of the present disclosure relate to computerized systems and methods for rendering an animation in a user interface in response to a selection of a user interface element.
- Embodiments of the present disclosure include systems and methods that receive an indication of a selection of a user interface element in a user interface, and that identify characteristics of the selected element. Once the indication is received, spatial coordinates of the user selection may be determined. An animation of an object that changes over time may then be rendered based on the coordinates of the user selection and the identified characteristics of the element.
- an application may include functionality to render animations of objects in response to user selections.
- a developer of an application may associate the functionality with a user interface of the application, so that the animations are rendered in response to user selections.
- a user of the user interface may select an element in the user interface.
- characteristics of the selected element may be determined.
- the characteristics may include one or more of a shape of the element, dimensions of the element, whether the element is bounded, a type of element, a color of the element, or any other characteristics associated with a user interface element. Coordinates corresponding to a spatial position in which the user selection occurred may also be determined, as well as a time of the selection.
- An animation of an object may then be rendered based on at least one of the characteristics of the selected element, the spatial coordinates, and the selection time.
- One or more advantages may be achieved in rendering an animation in response to a user selection in a user interface. For example, it may be aesthetically pleasing to display an animation in response to a user selection. Moreover, rendering an animation in response to a user selection may make the user interface more intuitive. For example, displaying an animation may provide visual feedback that a selection was received, and may provide a user interface that feels more responsive and tactile to a user.
- a user interface more aesthetically pleasing or more intuitive to users may be advantageous to developers.
- users have a wide variety of options from which to choose.
- users may choose an application that is more aesthetically pleasing, and the popularity of the application may increase.
- developers of popular applications that include advertising may command higher prices for advertising spots in their applications than developers of less popular applications.
- developing a user interface that provides animations in response to user inputs may present challenges to developers. For example, a developer of an application may have to configure various attributes of an animation in order to create an animation response for a selection of a user interface element.
- the developer will have to configure attributes for animation responses for each of the elements.
- Embodiments of the present disclosure can address the challenges associated with rendering a visually appealing and/or intuitive animation in response to a user selection of a user interface element.
- embodiments of the present disclosure provide computerized systems and methods that may render an animation of an object based on at least one of characteristics of a user interface element that was selected, spatial coordinates describing where the selection occurred, and/or a selection time corresponding to the selection.
- An operator such as a developer of an application, may simply select to associate the animation with a user interface element, and the animation may be automatically rendered when a user selects the element based on at least one of the characteristics of the element, the spatial coordinates describing where the selection occurred, and the time at which the selection occurred.
- An element of a user interface may include any element of a user interface.
- Such an element may include, for example, a button, icon, toolbar, control, link, scrollbar, menu, menu item, image, video, animation, text, background, window, hyperlink, drop-down list, slider, border, or any other portion of a user interface.
- rendering an animation of an object may refer to rendering the object on a display.
- the animation of the object changes over time.
- the object may expand over time, contract over time, change shape over time, change translucency over time, change color over time, or any combination of the above.
- a circle may be referred to as an example of an animated object. Rendering an animation of an expanding circle may cause a visual effect of a ripple, such as when an object drops in liquid.
- An animated object may be a square, rectangle, triangle, oval, or any other shape.
- FIG. 1 illustrates a flowchart of an example method 100, consistent with embodiments of the present disclosure.
- Example method 100 may be implemented in a computing environment (see, e.g., FIG. 11 ) using one or more computer systems (see, e.g., FIG. 10 ).
- method 100 may be performed by one or more client devices 1120 or by one or more servers 1140.
- one or more steps of method 100 may be performed by one or more client devices 1120, and one or more other steps of method 100 may be performed by one or more servers 1140.
- an indication of a selection of a user interface element may be received.
- a user of a user interface of an application may select a user interface element.
- Such a selection may involve pressing the user interface element on a screen of the user interface by moving a pointer over the element and pressing a button, by pressing the element with the user's finger on a touch screen display, or by any other method of input (e.g., gesture input, voice command, etc).
- characteristics of the selected element may be received.
- the characteristics may include one or more of a shape of the element, a type of the element, a dimension of the element (e.g., a width, height, radius), whether the element is bounded, a color of the element, a size of the element, an area of the element, a volume of the element, and/or any other characteristics that may be associated with a user interface element.
- the characteristics of each element are determined based on stored element or class definitions (e.g., in a table or database).
- the selected element may be analyzed to determine the characteristics (e.g., graphical, content, comparative, and/or other analyses).
- the coordinates may be spatial coordinates indicating where the user selection was received in a user interface screen.
- the coordinates may be indicated in any type of coordinate system, such as a Cartesian coordinate system, a polar coordinate system, a cylindrical coordinate system, a spherical coordinate system, etc.
- the coordinate system used may depend on the shape of the user interface.
- the coordinates may include a position at which a selection occurred along an x axis and along a y axis in a Cartesian coordinate system.
- a selection time corresponding to the user selection may correspond to a time at which a selection event occurred.
- the selection time may correspond to a time at which the user interface element was pressed, such as with a mouse button or a finger of the user on a touch screen interface.
- the selection time may correspond to a time at which the user interface element is released, such as releasing a mouse button or removing a finger of the user from the user interface element on a touch screen interface.
- selection times corresponding to each of a press and a release of the user interface element may be determined.
- an animation of an object may be rendered based on the identified characteristics of the element.
- the animation of an object changes over time based on the identified characteristics of the element.
- the animation of the object may also be rendered based on a determined selection time corresponding to the user selection and/or coordinates corresponding to the user selection.
- the rendered animation may be an animation of a circle that expands over time.
- the circle may expand by drawing the circle with a radius that changes over time. The radius may change with a particular velocity and/or acceleration over time.
- the rate at which the circle expands may vary based on characteristics of the user interface element. For example, if the user element is small (e.g., has small dimensions, small area, small volume), the velocity and/or acceleration at which the circle expands may be lower than when the user element is large (e.g., has large dimensions, large area, large volume).
- the circle animation may appear to take a similar amount of time to expand to its maximum size within a user interface element regardless of the size of the user interface element.
- the circle may be animated to expand at a different velocity and/or acceleration based on whether the selection time corresponds to a press of the user interface element or a release of the user interface element. For example, the circle may expand at one velocity and/or acceleration while the user interface element is pressed, and at a different velocity and/or acceleration when the user interface element is released. In some embodiments, the circle may expand at a slower velocity and/or acceleration while the user interface element is pressed than after the user interface element has been released.
- a velocity and/or acceleration at which a circle expands in an animation may vary as the circle expands in size.
- a velocity and/or acceleration at which a circle expands in an animation may increase as the circle expands, so that the circle expands more quickly as it grows larger in size.
- a maximum size to which the circle may expand may be set.
- the maximum size could be defined as a maximum radius, diameter, perimeter, area, or any other indication of the size of the circle.
- the maximum size could be defined as a function of characteristics of the user interface element.
- the circle may be configured to expand to a smaller maximum size in small user interface elements than in large user interface elements.
- the circle may be animated so as to expand to its maximum size, and continue to be displayed at its maximum size, so long as the user interface element is pressed.
- the circle when the user interface element has been released, the circle may be animated to expand to its maximum size and then disappear from the user interface.
- the circle may be rendered differently depending on whether the user interface element is bounded or unbounded. For example, if the user interface element is bounded, the circle may be animated so as to conform to the shape of the user interface element when at its maximum size. If the user interface element is unbounded, such as a background of the user interface or an element without borders, the user interface element may be displayed in a circular shape when at its maximum size. In some embodiments, portions of the circular shape may be clipped as the circle expands depending on the identified characteristics of the user interface element.
- the circle may be animated such that the center of the circle migrates toward the center of the user interface element as the circle expands over time. For example, if a user clicks a button of a user interface in a lower right hand corner of the button, the circle may migrate so that the center of the circle is positioned closer to the center of the button as the circle expands over time. In some embodiments, the rate at which the circle migrates may be set so that the center of the circle is positioned at the center of the user interface element when the circle reaches its maximum size.
- the animation of the circle may be rendered in a color based on a color of the user interface element. For example, if the user interface element is dark blue, the circle may be rendered in a light blue color.
- a shade of the color of the user interface element may change over time as the circle expands.
- the shade of the color of the user interface element may change so that at some point in time as the circle expands, the shade of the color of the user interface element and the shade of the color of the circle is the same.
- the color shades may be kept the same as the circle continues to expand.
- the circle may appear to disappear when the shade of the color of the circle is the same as the shade of the color of the user interface element.
- Such embodiments may be used when a user interface element is very large, so that a user may not have to view the circle expand to a very large size.
- FIG. 2 illustrates an example screen 200 of a user interface of an application with a variety of different user interface elements.
- Screen 200 may include one or more of an icon 210, a border 220, a menu 230 with menu items, a control 240, a button 250, and a background 260.
- an icon 210 may be included in a screen of user interface 200.
- a border 220 may be included in a screen of user interface 200.
- FIG. 3 illustrates an example 300 of an animation of an object that changes over time based on a user selection of a user interface element, such as an icon 210.
- Icon 210 may correspond, for example, to icon 210 in border 220 of screen 200 of FIG. 2 .
- icon 210 may be considered to be an unbounded user interface element.
- an animation of a circle 310 that expands over time may be rendered.
- the animation of circle 310 may begin to be rendered at the spatial location at which the user selected icon 210.
- FIG. 3 illustrates that at a first time (e.g., Time 1), the animation may display circle 310 at a first size. For example, at the first time, circle 310 may be displayed at its initial size.
- FIG. 3 illustrates that at a second time (e.g., Time 2), the animation may display circle 310 at a second size that is larger than the first size.
- FIG. 3 illustrates that at a third time (e.g., Time 3), the animation may display circle 310 at a third size that is larger than the second size.
- circle 310 may be displayed at its maximum size at the third time. That is, the maximum size of circle 310 may be configured such that the diameter of circle 310 fills one dimension of the surrounding border.
- circle 310 may continue to expand to a greater size, and edges of circle 310 may be clipped by border 220 so as not to be displayed at the maximum size of circle 310.
- FIG. 4 illustrates an example 400 of an animation of an object that changes over time based on a user selection of a user interface element, such as a menu item 420 of a menu 230.
- Menu 230 may correspond, for example, to menu 230 of screen 200 of FIG. 2 .
- menu item 420 may be considered to be a bounded user interface element. If a user selects menu item 420, an animation of a circle 410 that expands over time may be rendered. The animation of circle 410 may begin to be rendered at the spatial location at which the user selected menu item 420.
- FIG. 4 illustrates that at a first time (e.g., Time 1), the animation may display circle 410 at a first size.
- a first time e.g., Time 1
- circle 410 may be displayed at its initial size.
- FIG. 4 illustrates that at a second time (e.g., Time 2), the animation may display circle 410 at a second size that is larger than the first size.
- a second time e.g., Time 2
- the animation may display circle 410 at a second size that is larger than the first size.
- portions of circle 410 that extend beyond the bounds of menu item 420 may be clipped and removed from view as circle 410 expands beyond the bounds of menu item 420.
- FIG. 4 illustrates that at a third time (e.g., Time 3), the animation may display circle 410 at a third size that is larger than the second size.
- circle 410 may be displayed at its maximum size at the third time.
- the edges of circle 410 may be clipped by the border of menu item 420 so as not to be displayed as the circle expands beyond the bounds of menu item 420.
- FIG. 5 illustrates an example 500 of an animation of an object that changes over time based on a user selection of a user interface element, such as a button 250.
- Button 250 may correspond, for example, to button 250 of screen 200 of FIG. 2 .
- button 250 may be considered to be a bounded user interface element.
- an animation of a circle 510 that expands over time may be rendered.
- the animation of circle 510 may begin to be rendered at the spatial location at which the user selected button 250.
- FIG. 5 illustrates that at a first time (e.g., Time 1), the animation may display circle 510 at a first size. For example, at the first time, circle 510 may be displayed at its initial size.
- FIG. 1 a first time
- FIG. 5 illustrates that at a second time (e.g., Time 2), the animation may display circle 510 at a second size that is larger than the first size. As shown in FIG. 5 , portions of circle 510 that extend beyond the bounds of button 250 may be clipped and removed from view as circle 510 expands beyond the bounds of button 250.
- FIG. 5 illustrates that at a third time (e.g., Time 3), the animation may display circle 510 at a third size that is larger than the second size. In some embodiments, circle 510 may be displayed at its maximum size at the third time. As illustrated in FIG. 5 , at the third time, the edges of circle 510 may be clipped by the border of button 250 so as not to be displayed as the circle expands beyond the bounds of button 250.
- FIG. 6 illustrates an example 600 of an animation of an object that changes over time based on a user selection of a user interface element, such as a control 240.
- Control 240 may correspond, for example, to control 240 of screen 200 of FIG. 2 .
- control 240 may be considered to be a bounded user interface element.
- an animation of a circle 610 that expands over time may be rendered.
- the animation of circle 610 may begin to be rendered at the spatial location at which the user selected control 240.
- FIG. 6 illustrates that at a first time (e.g., Time 1), the animation may display circle 610 at a first size. For example, at the first time, circle 610 may be displayed at its initial size.
- FIG. 1 a first time
- circle 610 may be displayed at its initial size.
- FIG. 6 illustrates that at a second time (e.g., Time 2), the animation may display circle 610 at a second size that is larger than the first size.
- FIG. 6 illustrates that at a third time (e.g., Time 3), the animation may display circle 610 at a third size that is larger than the second size.
- circle 610 may be displayed at its maximum size at the third time. Portions of the circle that may expand beyond the circular shape of control 240 may be clipped by the border of control 240 so as not to be displayed as the circle expands beyond the bounds of control 240.
- FIG. 7 illustrates an example 700 of an animation of an object that changes over time based on a user selection of a user interface element, such as a background 260.
- Background 260 may correspond, for example, to background 260 in screen 200 of FIG. 2 .
- background 260 may be considered to be an unbounded user interface element.
- an animation of a circle 710 that expands over time may be rendered.
- the animation of circle 710 may begin to be rendered at the spatial location at which the user selected background 260.
- FIG. 7 illustrates that at a first time (e.g., Time 1), the animation may display circle 710 at a first size. For example, at the first time, circle 710 may be displayed at its initial size.
- FIG. 1 a first time
- FIG. 7 illustrates that at a second time (e.g., Time 2), the animation may display circle 710 at a second size that is larger than the first size.
- FIG. 7 illustrates that at a third time (e.g., Time 3), the animation may display circle 710 at a third size that is larger than the second size.
- circle 710 may be displayed at its maximum size at the third time.
- FIG. 8 illustrates another example 800 of an animation of an object that changes over time based on a user selection of a user interface element, such as a background 260.
- Background 260 may correspond, for example to background 260 in screen 200 of FIG. 2 .
- background 260 may be considered to be an unbounded user interface element. If a user selects background 260, an animation of a circle 810 that expands over time may be rendered. The animation of circle 810 may begin to be rendered at the spatial location at which the user selected background 260. Circle 810 may also be rendered in a color. In some embodiments, circle 810 may be animated in a color that is a different shade of the color of background 260.
- FIG. 8 illustrates that at a first time (e.g., Time 1), the animation may display circle 810 at a first size. For example, at the first time, circle 810 may be displayed at its initial size. As illustrated at time 1 in FIG. 8 , background 260 and circle 810 may be rendered in different shades of the same color at time 1.
- FIG. 8 illustrates that at a second time (e.g., Time 2), the animation may display circle 810 at a second size that is larger than the first size. As illustrated at time 2 in FIG. 8 , background 260 and circle 810 may be rendered in different shades of the same color at time 2, though the shade of the color of background 260 may be more similar to the shade of the color of circle 810 than at the first time.
- FIG. 8 illustrates that at a third time (e.g., Time 3), the animation may display circle 810 at a third size that is larger than the second size.
- a third time e.g., Time 3
- background 260 and circle 810 may be rendered in the same shade of the same color at time 3, so that circle 810 is no longer visible to the user.
- circle 810 may be displayed at its maximum size at the third time.
- the shade of a color of a user interface element may be adjusted to eventually match the shade of the color of the circle in situations where the user interface element is large (e.g., has a value of one or more dimensions that is greater than a predetermined value). This may prevent a user from being distracted by circles that have expanded to large sizes.
- FIG. 9 illustrates another example 900 of an animation of an object that changes over time based on a user selection of a user interface element, such as a button 250.
- Button 250 may correspond, for example, to button 250 in screen 200 of FIG. 2 .
- button 250 may be considered to be a bounded user interface element.
- an animation of a circle 910 that expands over time may be rendered.
- the animation of circle 910 may begin to be rendered at the spatial location at which the user selected button 250.
- the user may have selected button 250 in the lower right hand corner of the button.
- FIG. 9 illustrates that at a first time (e.g., Time 1), the animation may display circle 910 at a first size. For example, at the first time, circle 910 may be displayed at its initial size.
- a first time e.g., Time 1
- the animation may display circle 910 at a first size.
- circle 910 may be displayed at its initial size.
- FIG. 9 illustrates that at a second time (e.g., Time 2), the animation may display circle 910 at a second size that is larger than the first size. Moreover, at the second time, the center of circle 910 may have migrated toward the center of button 250 from the spatial location at which the user selected button 250.
- FIG. 9 illustrates that at a third time (e.g., Time 3), the animation may display circle 910 at a third size that is larger than the second size.
- circle 910 may be displayed at its maximum size at the third size.
- the edges of circle 910 may be clipped by the border of button 250 so as not to be displayed as the circle expands beyond the bounds of button 250.
- the center of circle 910 may have migrated to the center of button 250 at the time at which circle 910 reaches its maximum size.
- FIG. 10 is a block diagram illustrating an example computer system 1000 that may be used for implementing embodiments consistent with the present disclosure, including the example systems and methods described herein.
- Computer system 1000 may include one or more computing devices 1080.
- Computer system 1000 may be used to implement client device(s) 1120, and/or server(s) 1140, of computing environment 1100 of FIG. 11 .
- the arrangement and number of components in computer system 1000 is provided for purposes of illustration. Additional arrangements, number of components, or other modifications may be made, consistent with the present disclosure.
- a computing device 1080 may include one or more processors 1010 for executing instructions.
- processors suitable for the execution of instructions include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a computing device 1080 may also include one or more input/output (I/O) devices 1020.
- I/O devices 1020 may include keys, buttons, mice, joysticks, styluses, gesture sensors (e.g., video cameras), motion sensors (e.g., infrared sensors, ultrasound sensors, etc.), voice sensors (e.g., microphones), etc. Keys and/or buttons may be physical and/or virtual (e.g., provided on a touch screen interface).
- a computing device 1080 may include one or more storage devices configured to store data and/or software instructions used by processor(s) 1010 to perform operations consistent with disclosed embodiments.
- a computing device 1080 may include main memory 1030 configured to store one or more software programs that, when executed by processor(s) 1010, cause processor(s) 1010 to perform functions or operations consistent with disclosed embodiments.
- software instructions for performing operations consistent with disclosed embodiments may be provided in an application programming interface (API) that is made available to developers of applications.
- the software instructions may be included as part of an API available to developers of applications for certain computing platforms.
- the API may be downloaded by a developer, and instructions in the API may be executed by processor(s) 1010 to perform functions or operations consistent with disclosed embodiments.
- API application programming interface
- main memory 1030 may include NOR or NAND flash memory devices, read only memory (ROM) devices, random access memory (RAM) devices, etc.
- a computing device 1080 may also include on or more storage mediums 1040.
- storage medium(s) 1040 may include hard drives, solid state drives, tape drives, redundant array of independent disks (RAID) arrays, etc.
- FIG. 1000 illustrates only one main memory 1030 and one storage medium 1040, a computing device 1080 may include any number of main memories 1030 and storage mediums 1040. Further, although FIG.
- main memory 1030 and storage medium 1040 may be located remotely and computing device 1080 may be able to access main memory 1030 and/or storage medium 1040 via network(s), such as network(s) 1030 of computing environment 1100 of FIG. 11 .
- Storage medium(s) 1040 may be configured to store data, and may store data received from one or more of server(s) 1040 or client device(s) 1020.
- the data may take or represent various content or information forms, such as content, metadata, documents, textual content, image files, video files, markup information (e.g., hypertext markup language (HTML) information, extensible markup language (XML) information), software applications, instructions, and/or any other type of information that may be with a user interface of an application.
- markup information e.g., hypertext markup language (HTML) information, extensible markup language (XML) information
- HTML hypertext markup language
- XML extensible markup language
- a computing device 1080 may also include one or more displays 1050 for user interfaces, displaying data, and information.
- Display(s) 1050 may be implemented using one or more display panels, which may include, for example, one or more cathode ray tube (CRT) displays, liquid crystal displays (LCDs), plasma displays, light emitting diode (LED) displays, touch screen type displays, projector displays (e.g., images projected on a screen or surface, holographic images, etc.), organic light emitting diode (OLED) displays, field emission displays (FEDs), active matrix displays, vacuum fluorescent (VFR) displays, 3-dimensional displays, electronic paper (e-ink) displays, microdisplays, or any combination of the above types of displays.
- CTR cathode ray tube
- LCDs liquid crystal displays
- LED light emitting diode
- touch screen type displays e.g., images projected on a screen or surface, holographic images, etc.
- projector displays e.g., images projected on a screen or surface
- a computing device 1080 may further include one or more communications interfaces 1060.
- Communication interface(s) 1060 may allow software and/or data to be transferred between server(s) 1040 and client device(s) 1020. Examples of communications interface(s) 1060 may include modems, network interface cards (e.g., Ethernet card), communications ports, personal computer memory card international association (PCMCIA) slots and cards, antennas, etc.
- Communication interface(s) 1060 may transfer software and/or data in the form of signals, which may be electronic, electromagnetic, optical, and/or other types of signals. The signals may be provided to/from communications interface(s) 1060 via a communications path (e.g., network(s) 1130), which may be implemented using wired, wireless, cable, fiber optic, radio frequency (RF), and/or other communications channels.
- a communications path e.g., network(s) 1130
- a server 1140 may include a main memory 1030 that stores a single program or multiple programs and may additionally execute one or more programs located remotely from server 1140.
- a client device 1120 may execute one or more remotely stored programs instead of, or in addition to, programs stored on client device 1120.
- a server 1140 may be capable of accessing separate server(s) and/or computing devices that generate, maintain, and provide web sites.
- FIG. 11 illustrates a block diagram of an example computing environment 1100 for implementing embodiments and features of the present disclosure.
- the arrangement and number of components in environment 1100 is provided for purposes of illustration. Additional arrangements, number of components, and other modifications may be made, consistent with the present disclosure.
- computing environment 1100 may include one or more client devices 1120.
- a client device 1120 could be a mobile phone, smart phone, tablet, netbook, electronic reader, personal digital assistant (PDA), personal computer, laptop computer, smart watch, gaming device, desktop computer, set-top box, television, personal organizer, portable electronic device, smart appliance, navigation device, and/or other types of computing devices.
- PDA personal digital assistant
- a client device 1120 may be implemented with hardware devices and/or software applications running thereon.
- a user may use a client device 1120 to communicate with server(s) 1140 over network(s) 1130.
- a client device 1120 may communicate by transmitting data to and/or receiving data from server(s) 1140.
- one or more of client device(s) 1120 may be implemented using a computer system, such as computer system 1000 of FIG. 10 .
- Computing environment 1100 may also include one or more server(s) 1140.
- server(s) 1140 could include any combination of one or more of web servers, databases, mainframe computers, general-purpose computers, personal computers, or other types of computing devices.
- one or more of server(s) 1140 may be configured to host a web page, implement a search engine, index information, store information, and/or retrieve information.
- a server 1140 may be a standalone computing system or apparatus, or it may be part of a larger system.
- server(s) 1140 may represent distributed servers that are remotely located and communicate over a communications network, or over a dedicated network, such as a local area network (LAN).
- Server(s) 1140 may include one or more back-end servers for carrying out one or more aspects of the present disclosure.
- Server(s) 1140 may be implemented as a server system comprising a plurality of servers, or a server farm comprising a load balancing system and a plurality of servers.
- a server 1140 may be implemented with hardware devices and/or software applications running thereon.
- a server 1140 may communicate with client device(s) 1120 over network(s) 1130.
- a server 1140 may communicate by transmitting data to and/or receiving data from client device(s) 1120.
- one or more of server(s) 1140 may be implemented using a computer system, such as computer system 1000 of FIG. 10 .
- server(s) 1140 may store instructions for rendering animations, consistent with embodiments disclosed herein.
- Client device(s) 820 may download the instructions, and may use the instructions to render animations in user interfaces of one or more applications. Thus, a developer of an application may simply download the instructions to a client device 1120, and use the instructions to render animations in a user interface of the application.
- Computing environment 1100 may still further include one or more networks 1130.
- Network(s) 1130 may connect server(s) 1140 with client device(s) 1120.
- Network(s) 1130 may provide for the exchange of information, such as queries for information and results, between client device(s) 1120 and server(s) 1140.
- Network(s) 1130 may include one or more types of networks interconnecting client device(s) 1120 and server(s) 1140.
- Network(s) 1130 may include one or more wide area networks (WANs), metropolitan area networks (MANs), local area networks (LANs), personal area networks (PANs), or any combination of these networks.
- Network(s) 1130 may include one network type, or a combination of a variety of different network types, including Internet, intranet, Ethernet, twisted-pair, coaxial cable, fiber optic, cellular, satellite, IEEE 802.11, terrestrial, Bluetooth, infrared, wireless universal serial bus (wireless USB), and/or other types of wired or wireless networks.
Abstract
Description
- Embodiments described herein relate to computer-implemented methods and systems for rendering an animation in a user interface,
- The present disclosure relates to computerized systems and method for rendering an animation and, more generally, the field of user interface design. By way of example, and without limitation, the present disclosure relates to computerized systems and methods for rendering animation of an object in a user interface in response to a user input.
- The use of applications on electronic devices has grown significantly over the years. People now interact with applications on a variety of devices, such as personal computers, laptops, tablets, personal digital assistants (PDAs), personal organizers, mobile phones, smart-phones, and other devices. Developers of applications design interactive interfaces for users of these applications to navigate through application content. With so many applications available today, developers have an incentive to make their applications attractive to users. One of the ways to do so is by making their application interfaces more aesthetically pleasing than those of other applications.
- Embodiments of the present disclosure relate to computerized systems and methods for rendering an animation of an object on a display. In addition, embodiments of the present disclosure relate to solutions for rendering animations in response to user inputs received through a user interface of an application.
- In accordance with some embodiments of the present disclosure, computerized systems and methods are provided that may receive an indication of a selection of a user interface element in a user interface. Once the indication has been received, characteristics of the selected user interface element may be identified. Coordinates of the user selection may be determined, and an animation of an object may be rendered based on the coordinates and the identified characteristics of the selected element.
- In accordance with some embodiments, there is provided a computer-implemented method for rendering an animation in a user interface. The method comprises operations performed by one or more processors. The operations of the method include receiving an indication of a selection of a user interface element in the user interface, and identifying characteristics of the selected element. The operations of the method also include determining coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface. The operations of the method further include rendering an animation of an object based on the coordinates of the user selection and the identified characteristics of the selected element.
- In some embodiments, the identified characteristics of the selected element include one or more of a width, height, radius, shape, and bounding status.
- In some embodiments, the center of the animated object migrates to the center of the selected element as the object changes over time.
- In some embodiments, the animated object grows in size over time to provide a ripple effect.
- In some embodiments, the method further comprises: determining a selection time corresponding to when the user selection was made, wherein the animation of the object is rendered based on the selection time.
- In some embodiments, the selection time corresponds to when an input was pressed by a user to initiate the user selection.
- In some embodiments, the selection time corresponds to when an input was released by a user to complete the user selection.
- In some embodiments, the method further comprises: determining a color of the selected user interface element; and rendering the animation of the object in a different shade of the color.
- In some embodiments, the method further comprises: changing a shade of the color of the selected user interface element as the animation of the object changes over time, wherein at a certain time during the animation, the shade of the color of the selected user interface element and the shade of the color of the object is the same.
- In some embodiments, the method further comprises: determining one of an acceleration or velocity based on the identified characteristics of the selected element; and changing the animation of the object over time based on the determined acceleration or velocity.
- In some embodiments, the object is a circle, and the animation is rendered so that the circle expands over time.
- Furthermore, in accordance with some embodiments, there is provided a computer-implemented system for rendering an animation of an object in a user interface. The system includes a memory that stores instructions, and at least one processor that executes the instructions. The at least one processor executes the instructions to receive an indication of a selection of a user interface element in the user interface, and to identify characteristics of the selected element. The at least one processor also executes the instructions to determine coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface. The at least one processor further executes the instructions to render an animation of an object based on the coordinates of the user selection and the identified characteristics of the selected element.
- In some embodiments of the system, the identified characteristics of the selected element include one or more of a width, height, radius, shape, and bounding status.
- In some embodiments of the system, the center of the animated object migrates to the center of the selected element as the object changes over time.
- In some embodiments of the system, the animated object grows in size over time to provide a ripple effect.
- In some embodiments of the system, the at least one processor further executes the instructions to: determine a selection time corresponding to when the user selection was made, wherein the animation of the object is rendered based on the selection time.
- In some embodiments of the system, the selection time corresponds to when an input was pressed by a user to initiate the user selection.
- In some embodiments of the system, the selection time corresponds to when an input was released by a used to complete the user selection.
- In some embodiments of the system, the at least one processor further executes the instructions to determine one of an acceleration or velocity based on the identified characteristics of the element; and change the animation of the object over time based on the determined acceleration or velocity.
- Additionally, in accordance with some embodiments, there is provided a non-transitory computer-readable medium storing a set of instructions that, when executed by one or more processors, cause the one or more processors to perform a method. The method comprises receiving an indication of a selection of a user interface element in a user interface, and identifying characteristics of the selected element. The method also comprises determining coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface. The method further comprises rendering an animation of an object based on the coordinates of the user selection and the identified characteristics of the element.
- Before explaining example embodiments consistent with the present disclosure in detail, it is to be understood that the disclosure is not limited in its application to the details of constructions and to the arrangements set forth in the following description or illustrated in the drawings. The disclosure is capable of embodiments in addition to those described and is capable of being practiced and carried out in various ways. Also, it is to be understood that the phraseology and terminology employed herein, as well as in the abstract, are for the purpose of description and should not be regarded as limiting.
- It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of the claimed subject matter.
- The accompanying drawings, which are incorporated in and constitute part of this specification, and together with the description, illustrate and serve to explain the principles of various example embodiments.
-
FIG. 1 illustrates a flowchart of an example method for rendering an animation in response to a user selection of a user interface element, consistent with embodiments of the present disclosure. -
FIG. 2 illustrates an example user interface screen including a variety of different user interface elements, consistent with embodiments of the present disclosure. -
FIG. 3 illustrates an example of an animation of an object that changes over time based on a user selection of user interface element, such as an icon, consistent with embodiments of the present disclosure. -
FIG. 4 illustrates an example of an animation of an object that changes over time based on a user selection of a user interface element, such as a menu item, consistent with embodiments of the present disclosure. -
FIG. 5 illustrates an example of an animation of an object that changes over time based on a user selection of a user interface element, such as a button, consistent with embodiments of the present disclosure. -
FIG. 6 illustrates an example of an animation of an object that changes over time based on a user selection of a user interface element, such as a control, consistent with embodiments of the present disclosure. -
FIG. 7 illustrates an example of an animation of an object that changes over time based on a user selection of a user interface element, such as a background, consistent with embodiments of the present disclosure. -
FIG. 8 illustrates another example of an animation of an object that changes over time based on a user selection of a user interface element, such as a background, consistent with embodiments of the present disclosure. -
FIG. 9 illustrates another example of an animation of an object that changes over time based on a user selection of a user interface element, such as a button, consistent with embodiments of the present disclosure. -
FIG. 10 illustrates an example computer system for implementing embodiments and features consistent with the present disclosure. -
FIG. 11 illustrates an example computing environment for implementing embodiments and features consistent with the present disclosure. - Reference will now be made in detail to the present embodiments of the disclosure, certain examples of which are illustrated in the accompanying drawings.
- Embodiments of the present disclosure relate to computerized systems and methods for rendering an animation in a user interface in response to a selection of a user interface element. Embodiments of the present disclosure include systems and methods that receive an indication of a selection of a user interface element in a user interface, and that identify characteristics of the selected element. Once the indication is received, spatial coordinates of the user selection may be determined. An animation of an object that changes over time may then be rendered based on the coordinates of the user selection and the identified characteristics of the element.
- In some embodiments, an application may include functionality to render animations of objects in response to user selections. For example, a developer of an application may associate the functionality with a user interface of the application, so that the animations are rendered in response to user selections. A user of the user interface may select an element in the user interface. In response to the user selection, characteristics of the selected element may be determined. In some embodiments, the characteristics may include one or more of a shape of the element, dimensions of the element, whether the element is bounded, a type of element, a color of the element, or any other characteristics associated with a user interface element. Coordinates corresponding to a spatial position in which the user selection occurred may also be determined, as well as a time of the selection. An animation of an object may then be rendered based on at least one of the characteristics of the selected element, the spatial coordinates, and the selection time.
- One or more advantages may be achieved in rendering an animation in response to a user selection in a user interface. For example, it may be aesthetically pleasing to display an animation in response to a user selection. Moreover, rendering an animation in response to a user selection may make the user interface more intuitive. For example, displaying an animation may provide visual feedback that a selection was received, and may provide a user interface that feels more responsive and tactile to a user.
- Making a user interface more aesthetically pleasing or more intuitive to users may be advantageous to developers. With so many applications on the market today, users have a wide variety of options from which to choose. Among other factors, users may choose an application that is more aesthetically pleasing, and the popularity of the application may increase. Moreover, developers of popular applications that include advertising may command higher prices for advertising spots in their applications than developers of less popular applications. However, developing a user interface that provides animations in response to user inputs may present challenges to developers. For example, a developer of an application may have to configure various attributes of an animation in order to create an animation response for a selection of a user interface element. Moreover, if the developer wishes to have different animation responses for different user interface elements, or even different animation responses with a common theme for different user interface elements, the developer will have to configure attributes for animation responses for each of the elements.
- Embodiments of the present disclosure can address the challenges associated with rendering a visually appealing and/or intuitive animation in response to a user selection of a user interface element. For example, embodiments of the present disclosure provide computerized systems and methods that may render an animation of an object based on at least one of characteristics of a user interface element that was selected, spatial coordinates describing where the selection occurred, and/or a selection time corresponding to the selection. An operator, such as a developer of an application, may simply select to associate the animation with a user interface element, and the animation may be automatically rendered when a user selects the element based on at least one of the characteristics of the element, the spatial coordinates describing where the selection occurred, and the time at which the selection occurred.
- An element of a user interface, as used herein, may include any element of a user interface. Such an element may include, for example, a button, icon, toolbar, control, link, scrollbar, menu, menu item, image, video, animation, text, background, window, hyperlink, drop-down list, slider, border, or any other portion of a user interface.
- As used herein, rendering an animation of an object may refer to rendering the object on a display. In some embodiments, the animation of the object changes over time. For example, the object may expand over time, contract over time, change shape over time, change translucency over time, change color over time, or any combination of the above.
- Throughout this application, a circle may be referred to as an example of an animated object. Rendering an animation of an expanding circle may cause a visual effect of a ripple, such as when an object drops in liquid. However, the disclosure is not so limited. An animated object may be a square, rectangle, triangle, oval, or any other shape.
-
FIG. 1 illustrates a flowchart of anexample method 100, consistent with embodiments of the present disclosure.Example method 100 may be implemented in a computing environment (see, e.g.,FIG. 11 ) using one or more computer systems (see, e.g.,FIG. 10 ). In some embodiments,method 100 may be performed by one ormore client devices 1120 or by one ormore servers 1140. In some embodiments, one or more steps ofmethod 100 may be performed by one ormore client devices 1120, and one or more other steps ofmethod 100 may be performed by one ormore servers 1140. - In
step 110 ofFIG. 1 , an indication of a selection of a user interface element may be received. For example, a user of a user interface of an application may select a user interface element. Such a selection may involve pressing the user interface element on a screen of the user interface by moving a pointer over the element and pressing a button, by pressing the element with the user's finger on a touch screen display, or by any other method of input (e.g., gesture input, voice command, etc). - In
step 120, characteristics of the selected element may be received. The characteristics may include one or more of a shape of the element, a type of the element, a dimension of the element (e.g., a width, height, radius), whether the element is bounded, a color of the element, a size of the element, an area of the element, a volume of the element, and/or any other characteristics that may be associated with a user interface element. In some embodiments, the characteristics of each element are determined based on stored element or class definitions (e.g., in a table or database). In other embodiments, the selected element may be analyzed to determine the characteristics (e.g., graphical, content, comparative, and/or other analyses). - In
step 130, coordinates and/or a selection time corresponding to the user selection may be determined. In some embodiments, the coordinates may be spatial coordinates indicating where the user selection was received in a user interface screen. For example, the coordinates may be indicated in any type of coordinate system, such as a Cartesian coordinate system, a polar coordinate system, a cylindrical coordinate system, a spherical coordinate system, etc. In some embodiments, the coordinate system used may depend on the shape of the user interface. In some embodiments, the coordinates may include a position at which a selection occurred along an x axis and along a y axis in a Cartesian coordinate system. - A selection time corresponding to the user selection may correspond to a time at which a selection event occurred. In some embodiments, the selection time may correspond to a time at which the user interface element was pressed, such as with a mouse button or a finger of the user on a touch screen interface. In some embodiments, the selection time may correspond to a time at which the user interface element is released, such as releasing a mouse button or removing a finger of the user from the user interface element on a touch screen interface. In some embodiments, selection times corresponding to each of a press and a release of the user interface element may be determined.
- In
step 140, an animation of an object may be rendered based on the identified characteristics of the element. In some embodiments, the animation of an object changes over time based on the identified characteristics of the element. In some embodiments, the animation of the object may also be rendered based on a determined selection time corresponding to the user selection and/or coordinates corresponding to the user selection. - In one example referred to herein, the rendered animation may be an animation of a circle that expands over time. In some embodiments, the circle may expand by drawing the circle with a radius that changes over time. The radius may change with a particular velocity and/or acceleration over time. In some embodiments, the rate at which the circle expands may vary based on characteristics of the user interface element. For example, if the user element is small (e.g., has small dimensions, small area, small volume), the velocity and/or acceleration at which the circle expands may be lower than when the user element is large (e.g., has large dimensions, large area, large volume). By changing the velocity and/or acceleration at which the circle expands based on the characteristics of the user interface element, the circle animation may appear to take a similar amount of time to expand to its maximum size within a user interface element regardless of the size of the user interface element.
- In some embodiments, the circle may be animated to expand at a different velocity and/or acceleration based on whether the selection time corresponds to a press of the user interface element or a release of the user interface element. For example, the circle may expand at one velocity and/or acceleration while the user interface element is pressed, and at a different velocity and/or acceleration when the user interface element is released. In some embodiments, the circle may expand at a slower velocity and/or acceleration while the user interface element is pressed than after the user interface element has been released.
- In some embodiments, a velocity and/or acceleration at which a circle expands in an animation may vary as the circle expands in size. For example, in some embodiments a velocity and/or acceleration at which a circle expands in an animation may increase as the circle expands, so that the circle expands more quickly as it grows larger in size.
- In some embodiments, a maximum size to which the circle may expand may be set. The maximum size could be defined as a maximum radius, diameter, perimeter, area, or any other indication of the size of the circle. In some embodiments, the maximum size could be defined as a function of characteristics of the user interface element. For example, the circle may be configured to expand to a smaller maximum size in small user interface elements than in large user interface elements. In some embodiments, the circle may be animated so as to expand to its maximum size, and continue to be displayed at its maximum size, so long as the user interface element is pressed. In some embodiments, when the user interface element has been released, the circle may be animated to expand to its maximum size and then disappear from the user interface.
- In some embodiments, the circle may be rendered differently depending on whether the user interface element is bounded or unbounded. For example, if the user interface element is bounded, the circle may be animated so as to conform to the shape of the user interface element when at its maximum size. If the user interface element is unbounded, such as a background of the user interface or an element without borders, the user interface element may be displayed in a circular shape when at its maximum size. In some embodiments, portions of the circular shape may be clipped as the circle expands depending on the identified characteristics of the user interface element.
- In some embodiments, the circle may be animated such that the center of the circle migrates toward the center of the user interface element as the circle expands over time. For example, if a user clicks a button of a user interface in a lower right hand corner of the button, the circle may migrate so that the center of the circle is positioned closer to the center of the button as the circle expands over time. In some embodiments, the rate at which the circle migrates may be set so that the center of the circle is positioned at the center of the user interface element when the circle reaches its maximum size.
- In some embodiments, the animation of the circle may be rendered in a color based on a color of the user interface element. For example, if the user interface element is dark blue, the circle may be rendered in a light blue color. In some embodiments, a shade of the color of the user interface element may change over time as the circle expands. In some embodiments, the shade of the color of the user interface element may change so that at some point in time as the circle expands, the shade of the color of the user interface element and the shade of the color of the circle is the same. Moreover, once the shade of the color of the circle and the shade of the color of the user interface element is the same, the color shades may be kept the same as the circle continues to expand. In such embodiments, the circle may appear to disappear when the shade of the color of the circle is the same as the shade of the color of the user interface element. Such embodiments may be used when a user interface element is very large, so that a user may not have to view the circle expand to a very large size.
-
FIG. 2 illustrates anexample screen 200 of a user interface of an application with a variety of different user interface elements.Screen 200 may include one or more of anicon 210, aborder 220, amenu 230 with menu items, acontrol 240, abutton 250, and abackground 260. Although six different user interface elements are illustrated inFIG. 2 , the disclosure is not so limited. Any number and/or variety of user interface elements may be included in a screen ofuser interface 200. Selection of the different user interface elements illustrated inscreen 200 ofFIG. 2 may result in different animation responses. -
FIG. 3 illustrates an example 300 of an animation of an object that changes over time based on a user selection of a user interface element, such as anicon 210.Icon 210 may correspond, for example, toicon 210 inborder 220 ofscreen 200 ofFIG. 2 . In some embodiments,icon 210 may be considered to be an unbounded user interface element. If a user selectsicon 210, an animation of acircle 310 that expands over time may be rendered. The animation ofcircle 310 may begin to be rendered at the spatial location at which the user selectedicon 210.FIG. 3 illustrates that at a first time (e.g., Time 1), the animation may displaycircle 310 at a first size. For example, at the first time,circle 310 may be displayed at its initial size.FIG. 3 illustrates that at a second time (e.g., Time 2), the animation may displaycircle 310 at a second size that is larger than the first size.FIG. 3 illustrates that at a third time (e.g., Time 3), the animation may displaycircle 310 at a third size that is larger than the second size. In some embodiments,circle 310 may be displayed at its maximum size at the third time. That is, the maximum size ofcircle 310 may be configured such that the diameter ofcircle 310 fills one dimension of the surrounding border. In some embodiments,circle 310 may continue to expand to a greater size, and edges ofcircle 310 may be clipped byborder 220 so as not to be displayed at the maximum size ofcircle 310. -
FIG. 4 illustrates an example 400 of an animation of an object that changes over time based on a user selection of a user interface element, such as amenu item 420 of amenu 230.Menu 230 may correspond, for example, tomenu 230 ofscreen 200 ofFIG. 2 . In some embodiments,menu item 420 may be considered to be a bounded user interface element. If a user selectsmenu item 420, an animation of acircle 410 that expands over time may be rendered. The animation ofcircle 410 may begin to be rendered at the spatial location at which the user selectedmenu item 420.FIG. 4 illustrates that at a first time (e.g., Time 1), the animation may displaycircle 410 at a first size. For example, at the first time,circle 410 may be displayed at its initial size.FIG. 4 illustrates that at a second time (e.g., Time 2), the animation may displaycircle 410 at a second size that is larger than the first size. As shown inFIG. 4 , portions ofcircle 410 that extend beyond the bounds ofmenu item 420 may be clipped and removed from view ascircle 410 expands beyond the bounds ofmenu item 420.FIG. 4 illustrates that at a third time (e.g., Time 3), the animation may displaycircle 410 at a third size that is larger than the second size. In some embodiments,circle 410 may be displayed at its maximum size at the third time. As illustrated inFIG. 4 , at the third time, the edges ofcircle 410 may be clipped by the border ofmenu item 420 so as not to be displayed as the circle expands beyond the bounds ofmenu item 420. -
FIG. 5 illustrates an example 500 of an animation of an object that changes over time based on a user selection of a user interface element, such as abutton 250.Button 250 may correspond, for example, tobutton 250 ofscreen 200 ofFIG. 2 . In some embodiments,button 250 may be considered to be a bounded user interface element. If a user selectsbutton 250, an animation of acircle 510 that expands over time may be rendered. The animation ofcircle 510 may begin to be rendered at the spatial location at which the user selectedbutton 250.FIG. 5 illustrates that at a first time (e.g., Time 1), the animation may displaycircle 510 at a first size. For example, at the first time,circle 510 may be displayed at its initial size.FIG. 5 illustrates that at a second time (e.g., Time 2), the animation may displaycircle 510 at a second size that is larger than the first size. As shown inFIG. 5 , portions ofcircle 510 that extend beyond the bounds ofbutton 250 may be clipped and removed from view ascircle 510 expands beyond the bounds ofbutton 250.FIG. 5 illustrates that at a third time (e.g., Time 3), the animation may displaycircle 510 at a third size that is larger than the second size. In some embodiments,circle 510 may be displayed at its maximum size at the third time. As illustrated inFIG. 5 , at the third time, the edges ofcircle 510 may be clipped by the border ofbutton 250 so as not to be displayed as the circle expands beyond the bounds ofbutton 250. -
FIG. 6 illustrates an example 600 of an animation of an object that changes over time based on a user selection of a user interface element, such as acontrol 240.Control 240 may correspond, for example, to control 240 ofscreen 200 ofFIG. 2 . In some embodiments,control 240 may be considered to be a bounded user interface element. If a user selectscontrol 240, an animation of acircle 610 that expands over time may be rendered. The animation ofcircle 610 may begin to be rendered at the spatial location at which the user selectedcontrol 240.FIG. 6 illustrates that at a first time (e.g., Time 1), the animation may displaycircle 610 at a first size. For example, at the first time,circle 610 may be displayed at its initial size.FIG. 6 illustrates that at a second time (e.g., Time 2), the animation may displaycircle 610 at a second size that is larger than the first size.FIG. 6 illustrates that at a third time (e.g., Time 3), the animation may displaycircle 610 at a third size that is larger than the second size. In some embodiments,circle 610 may be displayed at its maximum size at the third time. Portions of the circle that may expand beyond the circular shape ofcontrol 240 may be clipped by the border ofcontrol 240 so as not to be displayed as the circle expands beyond the bounds ofcontrol 240. -
FIG. 7 illustrates an example 700 of an animation of an object that changes over time based on a user selection of a user interface element, such as abackground 260.Background 260 may correspond, for example, tobackground 260 inscreen 200 ofFIG. 2 . In some embodiments,background 260 may be considered to be an unbounded user interface element. If a user selectsbackground 260, an animation of acircle 710 that expands over time may be rendered. The animation ofcircle 710 may begin to be rendered at the spatial location at which the user selectedbackground 260.FIG. 7 illustrates that at a first time (e.g., Time 1), the animation may displaycircle 710 at a first size. For example, at the first time,circle 710 may be displayed at its initial size.FIG. 7 illustrates that at a second time (e.g., Time 2), the animation may displaycircle 710 at a second size that is larger than the first size.FIG. 7 illustrates that at a third time (e.g., Time 3), the animation may displaycircle 710 at a third size that is larger than the second size. In some embodiments,circle 710 may be displayed at its maximum size at the third time. -
FIG. 8 illustrates another example 800 of an animation of an object that changes over time based on a user selection of a user interface element, such as abackground 260.Background 260 may correspond, for example tobackground 260 inscreen 200 ofFIG. 2 . In some embodiments,background 260 may be considered to be an unbounded user interface element. If a user selectsbackground 260, an animation of acircle 810 that expands over time may be rendered. The animation ofcircle 810 may begin to be rendered at the spatial location at which the user selectedbackground 260.Circle 810 may also be rendered in a color. In some embodiments,circle 810 may be animated in a color that is a different shade of the color ofbackground 260. -
FIG. 8 illustrates that at a first time (e.g., Time 1), the animation may displaycircle 810 at a first size. For example, at the first time,circle 810 may be displayed at its initial size. As illustrated attime 1 inFIG. 8 ,background 260 andcircle 810 may be rendered in different shades of the same color attime 1.FIG. 8 illustrates that at a second time (e.g., Time 2), the animation may displaycircle 810 at a second size that is larger than the first size. As illustrated attime 2 inFIG. 8 ,background 260 andcircle 810 may be rendered in different shades of the same color attime 2, though the shade of the color ofbackground 260 may be more similar to the shade of the color ofcircle 810 than at the first time. -
FIG. 8 illustrates that at a third time (e.g., Time 3), the animation may displaycircle 810 at a third size that is larger than the second size. As illustrated attime 3 inFIG. 8 ,background 260 andcircle 810 may be rendered in the same shade of the same color attime 3, so thatcircle 810 is no longer visible to the user. In some embodiments,circle 810 may be displayed at its maximum size at the third time. - In some embodiments, the shade of a color of a user interface element may be adjusted to eventually match the shade of the color of the circle in situations where the user interface element is large (e.g., has a value of one or more dimensions that is greater than a predetermined value). This may prevent a user from being distracted by circles that have expanded to large sizes.
-
FIG. 9 illustrates another example 900 of an animation of an object that changes over time based on a user selection of a user interface element, such as abutton 250.Button 250 may correspond, for example, tobutton 250 inscreen 200 ofFIG. 2 . In some embodiments,button 250 may be considered to be a bounded user interface element. If a user selectsbutton 250, an animation of acircle 910 that expands over time may be rendered. The animation ofcircle 910 may begin to be rendered at the spatial location at which the user selectedbutton 250. In the example ofFIG. 9 , for example, the user may have selectedbutton 250 in the lower right hand corner of the button.FIG. 9 illustrates that at a first time (e.g., Time 1), the animation may displaycircle 910 at a first size. For example, at the first time,circle 910 may be displayed at its initial size. -
FIG. 9 illustrates that at a second time (e.g., Time 2), the animation may displaycircle 910 at a second size that is larger than the first size. Moreover, at the second time, the center ofcircle 910 may have migrated toward the center ofbutton 250 from the spatial location at which the user selectedbutton 250.FIG. 9 illustrates that at a third time (e.g., Time 3), the animation may displaycircle 910 at a third size that is larger than the second size. In some embodiments,circle 910 may be displayed at its maximum size at the third size. As illustrated inFIG. 9 , at the third time, the edges ofcircle 910 may be clipped by the border ofbutton 250 so as not to be displayed as the circle expands beyond the bounds ofbutton 250. In some embodiments, the center ofcircle 910 may have migrated to the center ofbutton 250 at the time at whichcircle 910 reaches its maximum size. - By migrating the center of an animated circle toward the center of a user interface element as the circle expands over time, oddly shaped renderings may be avoided. For example, if the user selected a user interface element at a bottom, side, or corner location of the user interface element, the circle may expand into a moon shape as a result of clipping by one or more borders of the user interface element. By migrating the center of the circle toward the center of the user interface element, such shapes can be avoided.
-
FIG. 10 is a block diagram illustrating anexample computer system 1000 that may be used for implementing embodiments consistent with the present disclosure, including the example systems and methods described herein.Computer system 1000 may include one ormore computing devices 1080.Computer system 1000 may be used to implement client device(s) 1120, and/or server(s) 1140, ofcomputing environment 1100 ofFIG. 11 . The arrangement and number of components incomputer system 1000 is provided for purposes of illustration. Additional arrangements, number of components, or other modifications may be made, consistent with the present disclosure. - As shown in FIG. 1000, a
computing device 1080 may include one ormore processors 1010 for executing instructions. Processors suitable for the execution of instructions include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Acomputing device 1080 may also include one or more input/output (I/O)devices 1020. By way of example, I/O devices 1020 may include keys, buttons, mice, joysticks, styluses, gesture sensors (e.g., video cameras), motion sensors (e.g., infrared sensors, ultrasound sensors, etc.), voice sensors (e.g., microphones), etc. Keys and/or buttons may be physical and/or virtual (e.g., provided on a touch screen interface). - A
computing device 1080 may include one or more storage devices configured to store data and/or software instructions used by processor(s) 1010 to perform operations consistent with disclosed embodiments. For example, acomputing device 1080 may includemain memory 1030 configured to store one or more software programs that, when executed by processor(s) 1010, cause processor(s) 1010 to perform functions or operations consistent with disclosed embodiments. In some embodiments, software instructions for performing operations consistent with disclosed embodiments may be provided in an application programming interface (API) that is made available to developers of applications. For example, the software instructions may be included as part of an API available to developers of applications for certain computing platforms. The API may be downloaded by a developer, and instructions in the API may be executed by processor(s) 1010 to perform functions or operations consistent with disclosed embodiments. - By way of example,
main memory 1030 may include NOR or NAND flash memory devices, read only memory (ROM) devices, random access memory (RAM) devices, etc. Acomputing device 1080 may also include on ormore storage mediums 1040. By way of example, storage medium(s) 1040 may include hard drives, solid state drives, tape drives, redundant array of independent disks (RAID) arrays, etc. Although FIG. 1000 illustrates only onemain memory 1030 and onestorage medium 1040, acomputing device 1080 may include any number ofmain memories 1030 andstorage mediums 1040. Further, althoughFIG. 10 illustratesmain memory 1030 andstorage medium 1040 as part ofcomputing device 1080,main memory 1030 and/orstorage medium 1040 may be located remotely andcomputing device 1080 may be able to accessmain memory 1030 and/orstorage medium 1040 via network(s), such as network(s) 1030 ofcomputing environment 1100 ofFIG. 11 . - Storage medium(s) 1040 may be configured to store data, and may store data received from one or more of server(s) 1040 or client device(s) 1020. The data may take or represent various content or information forms, such as content, metadata, documents, textual content, image files, video files, markup information (e.g., hypertext markup language (HTML) information, extensible markup language (XML) information), software applications, instructions, and/or any other type of information that may be with a user interface of an application.
- A
computing device 1080 may also include one ormore displays 1050 for user interfaces, displaying data, and information. Display(s) 1050 may be implemented using one or more display panels, which may include, for example, one or more cathode ray tube (CRT) displays, liquid crystal displays (LCDs), plasma displays, light emitting diode (LED) displays, touch screen type displays, projector displays (e.g., images projected on a screen or surface, holographic images, etc.), organic light emitting diode (OLED) displays, field emission displays (FEDs), active matrix displays, vacuum fluorescent (VFR) displays, 3-dimensional displays, electronic paper (e-ink) displays, microdisplays, or any combination of the above types of displays. - A
computing device 1080 may further include one or more communications interfaces 1060. Communication interface(s) 1060 may allow software and/or data to be transferred between server(s) 1040 and client device(s) 1020. Examples of communications interface(s) 1060 may include modems, network interface cards (e.g., Ethernet card), communications ports, personal computer memory card international association (PCMCIA) slots and cards, antennas, etc. Communication interface(s) 1060 may transfer software and/or data in the form of signals, which may be electronic, electromagnetic, optical, and/or other types of signals. The signals may be provided to/from communications interface(s) 1060 via a communications path (e.g., network(s) 1130), which may be implemented using wired, wireless, cable, fiber optic, radio frequency (RF), and/or other communications channels. - The disclosed embodiments are not limited to separate programs or computers configured to perform dedicated tasks. For example, a
server 1140 may include amain memory 1030 that stores a single program or multiple programs and may additionally execute one or more programs located remotely fromserver 1140. Similarly, aclient device 1120 may execute one or more remotely stored programs instead of, or in addition to, programs stored onclient device 1120. In some example embodiments, aserver 1140 may be capable of accessing separate server(s) and/or computing devices that generate, maintain, and provide web sites. -
FIG. 11 illustrates a block diagram of anexample computing environment 1100 for implementing embodiments and features of the present disclosure. The arrangement and number of components inenvironment 1100 is provided for purposes of illustration. Additional arrangements, number of components, and other modifications may be made, consistent with the present disclosure. - As shown in
FIG. 11 ,computing environment 1100 may include one ormore client devices 1120. By way of example, aclient device 1120 could be a mobile phone, smart phone, tablet, netbook, electronic reader, personal digital assistant (PDA), personal computer, laptop computer, smart watch, gaming device, desktop computer, set-top box, television, personal organizer, portable electronic device, smart appliance, navigation device, and/or other types of computing devices. In some embodiments, aclient device 1120 may be implemented with hardware devices and/or software applications running thereon. A user may use aclient device 1120 to communicate with server(s) 1140 over network(s) 1130. Aclient device 1120 may communicate by transmitting data to and/or receiving data from server(s) 1140. In some embodiments, one or more of client device(s) 1120 may be implemented using a computer system, such ascomputer system 1000 ofFIG. 10 . -
Computing environment 1100 may also include one or more server(s) 1140. By way of example, server(s) 1140 could include any combination of one or more of web servers, databases, mainframe computers, general-purpose computers, personal computers, or other types of computing devices. In some embodiments, one or more of server(s) 1140 may be configured to host a web page, implement a search engine, index information, store information, and/or retrieve information. In some embodiments, aserver 1140 may be a standalone computing system or apparatus, or it may be part of a larger system. For example, server(s) 1140 may represent distributed servers that are remotely located and communicate over a communications network, or over a dedicated network, such as a local area network (LAN). Server(s) 1140 may include one or more back-end servers for carrying out one or more aspects of the present disclosure. - Server(s) 1140 may be implemented as a server system comprising a plurality of servers, or a server farm comprising a load balancing system and a plurality of servers. In some embodiments, a
server 1140 may be implemented with hardware devices and/or software applications running thereon. Aserver 1140 may communicate with client device(s) 1120 over network(s) 1130. For example, aserver 1140 may communicate by transmitting data to and/or receiving data from client device(s) 1120. In some embodiments, one or more of server(s) 1140 may be implemented using a computer system, such ascomputer system 1000 ofFIG. 10 . - In some embodiments, server(s) 1140 may store instructions for rendering animations, consistent with embodiments disclosed herein. Client device(s) 820 may download the instructions, and may use the instructions to render animations in user interfaces of one or more applications. Thus, a developer of an application may simply download the instructions to a
client device 1120, and use the instructions to render animations in a user interface of the application. -
Computing environment 1100 may still further include one ormore networks 1130. Network(s) 1130 may connect server(s) 1140 with client device(s) 1120. Network(s) 1130 may provide for the exchange of information, such as queries for information and results, between client device(s) 1120 and server(s) 1140. Network(s) 1130 may include one or more types of networks interconnecting client device(s) 1120 and server(s) 1140. - Network(s) 1130 may include one or more wide area networks (WANs), metropolitan area networks (MANs), local area networks (LANs), personal area networks (PANs), or any combination of these networks. Network(s) 1130 may include one network type, or a combination of a variety of different network types, including Internet, intranet, Ethernet, twisted-pair, coaxial cable, fiber optic, cellular, satellite, IEEE 802.11, terrestrial, Bluetooth, infrared, wireless universal serial bus (wireless USB), and/or other types of wired or wireless networks.
- While illustrative embodiments have been described herein, the scope includes any and all embodiments having equivalent elements, modifications, omissions, combinations (e.g., of aspects across various embodiments), adaptations and/or alternatives based on the present disclosure. The elements in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application, which examples are to be construed as non-exclusive. Further, the steps of the disclosed methods can be modified in any manner, including reordering steps and/or inserting or deleting steps.
- The many features and advantages of the disclosure are apparent from the detailed specification, and thus, it is intended that the appended claims cover all systems and methods, which fall within the true spirit and scope of the disclosure. As used herein, the indefinite articles "a" and "an" mean "one or more" in open-ended claims containing the transitional phrase "comprising," and/or "having." Further, since numerous modifications and variations will readily occur to those skilled in the art, it is not desired to limit the disclosure to the exact construction and operation illustrated and described, and accordingly, all suitable modifications and equivalents may be resorted to, falling within the scope of the disclosure.
Claims (15)
- A computer-implemented method for rendering an animation in a user interface, comprising the following operations performed by one or more processors:receiving an indication of a selection of a user interface element in the user interface;identifying characteristics of the selected element;determining coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface; andrendering an animation of an object that changes over time based on the coordinates of the user selection and the identified characteristics of the selected element.
- The method of claim 1, wherein the identified characteristics of the selected element include one or more of a width, height, radius, shape, and bounding status;
and / or wherein the center of the animated object migrates to the center of the selected element as the object changes over time
and / or wherein the animated object grows in size over time to provide a ripple effect. - The method of claim 1 or 2, further comprising:determining a selection time corresponding to when the user selection was made, wherein the animation of the object is rendered based on the selection time.
- The method of claim 3, wherein the selection time corresponds to when an input was pressed by a user to initiate the user selection
or wherein the selection time corresponds to when an input was released by a user to complete the user selection. - The method of any one of claims 1 to 4, further comprising:determining a color of the selected user interface element; andrendering the animation of the object in a different shade of the color.
- The method of claim 5, further comprising:changing a shade of the color of the selected user interface element as the animation of the object changes over time, wherein at a certain time during the animation, the shade of the color of the selected user interface element and the shade of the color of the object is the same.
- The method of any one of claims 1 to 6, further comprising:determining one of an acceleration or velocity based on the identified characteristics of the selected element; andchanging the animation of the object over time based on the determined acceleration or velocity.
- The method of any one of claims 1 to 7, wherein the object is a circle, and the animation is rendered so that the circle expands over time.
- A computer-implemented system for rendering an animation in a user interface, comprising:a memory that stores a set of instructions; andat least one processor that executes the set of instructions to:receive an indication of a selection of a user interface element in the user interface;identify characteristics of the selected element;determine coordinates for the user selection, wherein the coordinates correspond to a spatial location of the selection in the user interface; andrender an animation of an object that changes over time based on the coordinates of the user selection and the identified characteristics of the selected element.
- The system of claim 9, wherein the identified characteristics of the selected element include one or more of a width, height, radius, shape, and bounding status.
- The system of claim 9 or 10, wherein the center of the animated object migrates to the center of the selected element as the object changes over time
and / or wherein the animated object grows in size over time to provide a ripple effect. - The system of any one of claims 9 to 11, wherein the at least one processor further executes the instructions to:determine a selection time corresponding to when the user selection was made, wherein the animation of the object is rendered based on the selection time.
- The system of claim 12, wherein the selection time corresponds to when an input was pressed by a user to initiate the user selection;
or wherein the selection time corresponds to when an input was released by a used to complete the user selection. - The system of any one of claims 9 to 13, wherein the at least one processor further executes the instructions to:determine one of an acceleration or velocity based on the identified characteristics of the element; andchange the animation of the object over time based on the determined acceleration or velocity.
- A non-transitory computer-readable medium storing a set of computer executable instructions that, when executed by a computer will cause the computer to carry out a method according to any one of claims 1 to 8.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462016618P | 2014-06-24 | 2014-06-24 |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2960767A1 true EP2960767A1 (en) | 2015-12-30 |
Family
ID=53496461
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP15173435.7A Withdrawn EP2960767A1 (en) | 2014-06-24 | 2015-06-23 | Computerized systems and methods for rendering an animation of an object in response to user input |
Country Status (2)
Country | Link |
---|---|
US (1) | US9977566B2 (en) |
EP (1) | EP2960767A1 (en) |
Families Citing this family (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
USD762672S1 (en) * | 2015-02-27 | 2016-08-02 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
US9852543B2 (en) * | 2015-03-27 | 2017-12-26 | Snap Inc. | Automated three dimensional model generation |
USD865780S1 (en) | 2015-04-06 | 2019-11-05 | Domo, Inc. | Display screen or portion thereof with a graphical user interface |
US20170329464A1 (en) * | 2016-05-11 | 2017-11-16 | Sap Se | Dynamic button with sub-buttons |
USD835671S1 (en) | 2016-09-22 | 2018-12-11 | Sap Se | Display screen or portion thereof with a graphical user interface having a transitional icon |
USD835669S1 (en) | 2016-09-22 | 2018-12-11 | Sap Se | Display screen or portion thereof with a graphical user interface having a transitional icon |
USD836134S1 (en) | 2016-09-22 | 2018-12-18 | Sap Se | Display screen or portion thereof with a graphical user interface having a transitional icon |
USD835670S1 (en) | 2016-09-22 | 2018-12-11 | Sap Se | Display screen or portion thereof with a graphical user interface having a transitional icon |
US10866689B2 (en) | 2017-02-22 | 2020-12-15 | Sony Mobile Communications Inc. | Information processing apparatus, method, and program for controlling a background of a display screen |
US11586338B2 (en) * | 2017-04-05 | 2023-02-21 | Open Text Sa Ulc | Systems and methods for animated computer generated display |
WO2018212386A1 (en) * | 2017-05-19 | 2018-11-22 | (주)씨앤피에스 | Method and apparatus for providing scrolling utilizing animated object |
US10362233B2 (en) | 2017-09-12 | 2019-07-23 | Ebay Inc. | Digital image capture session and metadata association |
USD886127S1 (en) | 2018-10-05 | 2020-06-02 | Google Llc | Display screen with animated graphical user interface |
CN110136230B (en) * | 2019-03-29 | 2023-09-05 | 北京达佳互联信息技术有限公司 | Animation display method, device, electronic equipment and storage medium |
US11727532B1 (en) * | 2019-11-03 | 2023-08-15 | Wells Fargo Bank N.A. | Workplace digital billboard experience |
USD975131S1 (en) * | 2021-05-12 | 2023-01-10 | Google Llc | Display screen with animated graphical user interface |
US20220374085A1 (en) * | 2021-05-19 | 2022-11-24 | Apple Inc. | Navigating user interfaces using hand gestures |
US11914668B2 (en) * | 2022-01-04 | 2024-02-27 | Truist Bank | Loading animation with shape that grows from within from central point |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH08227341A (en) * | 1995-02-22 | 1996-09-03 | Mitsubishi Electric Corp | User interface |
US20040135818A1 (en) * | 2003-01-14 | 2004-07-15 | Thomson Michael J. | Animating images to reflect user selection |
US20070094620A1 (en) * | 2005-04-26 | 2007-04-26 | Lg Electronics Inc. | Mobile terminal providing graphic user interface and method of providing graphic user interface using the same |
US20070192692A1 (en) * | 2006-02-10 | 2007-08-16 | Microsoft Corporation | Method for confirming touch input |
US20070226655A1 (en) * | 2004-03-31 | 2007-09-27 | Hajime Shimizu | Electronic Device |
US20080189629A1 (en) * | 2005-03-24 | 2008-08-07 | Koninklijke Philips Electronics, N.V. | User Interface to Support a User Selecting Content |
US20100177049A1 (en) * | 2009-01-13 | 2010-07-15 | Microsoft Corporation | Visual response to touch inputs |
US20140137010A1 (en) * | 2012-11-14 | 2014-05-15 | Michael Matas | Animation Sequence Associated with Feedback User-Interface Element |
Family Cites Families (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US2009102A (en) | 1932-04-21 | 1935-07-23 | Harry A Bern | Pressure balancer |
US5880729A (en) * | 1994-05-16 | 1999-03-09 | Apple Computer, Inc. | Graphical user interfaces having animated control elements |
US5767835A (en) * | 1995-09-20 | 1998-06-16 | Microsoft Corporation | Method and system for displaying buttons that transition from an active state to an inactive state |
JP2001265481A (en) * | 2000-03-21 | 2001-09-28 | Nec Corp | Method and device for displaying page information and storage medium with program for displaying page information stored |
US20010048448A1 (en) * | 2000-04-06 | 2001-12-06 | Raiz Gregory L. | Focus state themeing |
US20040075699A1 (en) * | 2002-10-04 | 2004-04-22 | Creo Inc. | Method and apparatus for highlighting graphical objects |
EP1463052A1 (en) * | 2003-03-25 | 2004-09-29 | Deutsche Thomson-Brandt Gmbh | Method for representing animated menu buttons |
JP2005165491A (en) | 2003-12-01 | 2005-06-23 | Hitachi Ltd | Information browsing device equipped with communication function |
US20060103118A1 (en) * | 2004-02-05 | 2006-05-18 | Takata Corporation | Twin airbag |
US20050231512A1 (en) * | 2004-04-16 | 2005-10-20 | Niles Gregory E | Animation of an object using behaviors |
US20070055947A1 (en) * | 2005-09-02 | 2007-03-08 | Microsoft Corporation | Animations and transitions |
US8296684B2 (en) * | 2008-05-23 | 2012-10-23 | Hewlett-Packard Development Company, L.P. | Navigating among activities in a computing device |
US7873906B2 (en) * | 2007-06-22 | 2011-01-18 | International Business Machines Corporation | Method and system for presenting a visual notification and delaying an action responsive to an onscreen selection |
US10504285B2 (en) * | 2007-09-26 | 2019-12-10 | Autodesk, Inc. | Navigation system for a 3D virtual scene |
US8122356B2 (en) * | 2007-10-03 | 2012-02-21 | Eastman Kodak Company | Method for image animation using image value rules |
AU2007237356A1 (en) * | 2007-12-05 | 2009-06-25 | Canon Kabushiki Kaisha | Animated user interface control elements |
US20090207175A1 (en) * | 2008-02-15 | 2009-08-20 | Apple Inc. | Animation Using Animation Effect and Trigger Element |
US9003326B2 (en) * | 2008-09-23 | 2015-04-07 | Apple Inc. | Indicating input focus by showing focus transitions |
US8477103B2 (en) * | 2008-10-26 | 2013-07-02 | Microsoft Corporation | Multi-touch object inertia simulation |
KR101055924B1 (en) | 2009-05-26 | 2011-08-09 | 주식회사 팬택 | User interface device and method in touch device |
US20100321303A1 (en) * | 2009-06-17 | 2010-12-23 | Research In Motion Limited | Portable electronic device and method of controlling same |
CN102474641B (en) * | 2009-07-07 | 2015-05-13 | Lg电子株式会社 | Method for displaying three-dimensional user interface |
US8843849B2 (en) * | 2009-11-09 | 2014-09-23 | Blackberry Limited | Directional navigation of page content |
US8725706B2 (en) | 2010-03-26 | 2014-05-13 | Nokia Corporation | Method and apparatus for multi-item searching |
KR20130027774A (en) * | 2011-09-08 | 2013-03-18 | 삼성전자주식회사 | Method and apparatus for providing user interface to control lock state |
EP2761419A1 (en) * | 2011-09-30 | 2014-08-06 | Van Der Westhuizen, Willem Morkel | Method for human-computer interaction on a graphical user interface (gui) |
US8756511B2 (en) * | 2012-01-03 | 2014-06-17 | Lg Electronics Inc. | Gesture based unlocking of a mobile terminal |
KR101894567B1 (en) | 2012-02-24 | 2018-09-03 | 삼성전자 주식회사 | Operation Method of Lock Screen And Electronic Device supporting the same |
US20140035827A1 (en) * | 2012-07-31 | 2014-02-06 | Elwha LLC, a liability company of the State of Delaware | Touch screen display compensated for a carrier-induced motion |
US20150160779A1 (en) * | 2013-12-09 | 2015-06-11 | Microsoft Corporation | Controlling interactions based on touch screen contact area |
US10042529B2 (en) * | 2014-04-01 | 2018-08-07 | Microsoft Technology Licensing, Llc | Content display with dynamic zoom focus |
-
2015
- 2015-06-23 US US14/747,379 patent/US9977566B2/en active Active
- 2015-06-23 EP EP15173435.7A patent/EP2960767A1/en not_active Withdrawn
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH08227341A (en) * | 1995-02-22 | 1996-09-03 | Mitsubishi Electric Corp | User interface |
US20040135818A1 (en) * | 2003-01-14 | 2004-07-15 | Thomson Michael J. | Animating images to reflect user selection |
US20070226655A1 (en) * | 2004-03-31 | 2007-09-27 | Hajime Shimizu | Electronic Device |
US20080189629A1 (en) * | 2005-03-24 | 2008-08-07 | Koninklijke Philips Electronics, N.V. | User Interface to Support a User Selecting Content |
US20070094620A1 (en) * | 2005-04-26 | 2007-04-26 | Lg Electronics Inc. | Mobile terminal providing graphic user interface and method of providing graphic user interface using the same |
US20070192692A1 (en) * | 2006-02-10 | 2007-08-16 | Microsoft Corporation | Method for confirming touch input |
US20100177049A1 (en) * | 2009-01-13 | 2010-07-15 | Microsoft Corporation | Visual response to touch inputs |
US20140137010A1 (en) * | 2012-11-14 | 2014-05-15 | Michael Matas | Animation Sequence Associated with Feedback User-Interface Element |
Also Published As
Publication number | Publication date |
---|---|
US20150370444A1 (en) | 2015-12-24 |
US9977566B2 (en) | 2018-05-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9977566B2 (en) | Computerized systems and methods for rendering an animation of an object in response to user input | |
US10579205B2 (en) | Edge-based hooking gestures for invoking user interfaces | |
EP3180687B1 (en) | Hover-based interaction with rendered content | |
US9367199B2 (en) | Dynamical and smart positioning of help overlay graphics in a formation of user interface elements | |
US9612732B2 (en) | Content transfer to non-running targets | |
TWI522893B (en) | Methods, systems, electronic devices, and computer program product for behavior based user interface layout display (build) | |
US8806371B2 (en) | Interface navigation tools | |
US8769444B2 (en) | Multi-input gesture control for a display screen | |
US10719220B2 (en) | Dynamic scrolling | |
JP2022168082A (en) | Object creation using physical manipulation | |
US20140002457A1 (en) | Creating a three dimensional user interface | |
US9026924B2 (en) | Devices, systems, and methods for moving electronic windows between displays | |
KR20060052717A (en) | Virtual desktop-meta-organization & control system | |
US20120117470A1 (en) | Learning Tool for a Ribbon-Shaped User Interface | |
US9268477B2 (en) | Providing contextual menus | |
US20160004406A1 (en) | Electronic device and method of displaying a screen in the electronic device | |
WO2017139178A1 (en) | Effecting multi-step operations in an application in response to direct manipulation of a selected object | |
JP6033752B2 (en) | File location shortcuts and window layout | |
US20140365955A1 (en) | Window reshaping by selective edge revisions | |
US20190332258A1 (en) | Multi-layered ink object | |
US10990251B1 (en) | Smart augmented reality selector | |
US20170309005A1 (en) | Method of and system for generating simplified borders of graphical objects | |
CN113126863A (en) | Object selection implementation method and device, storage medium and electronic equipment | |
US10997356B1 (en) | Computing device user interface having auto-grouping of data columns | |
US20230153133A1 (en) | System and Method of Providing Access to and Managing Virtual Desktops |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20150623 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
R17P | Request for examination filed (corrected) |
Effective date: 20150623 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION IS DEEMED TO BE WITHDRAWN |
|
18D | Application deemed to be withdrawn |
Effective date: 20180103 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
EP2946316A1 - Indexing application pages of native applications - Google Patents
Indexing application pages of native applicationsInfo
- Publication number
- EP2946316A1 EP2946316A1 EP14740959.3A EP14740959A EP2946316A1 EP 2946316 A1 EP2946316 A1 EP 2946316A1 EP 14740959 A EP14740959 A EP 14740959A EP 2946316 A1 EP2946316 A1 EP 2946316A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- application
- data
- application page
- native
- page
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims abstract description 75
- 230000008569 process Effects 0.000 claims description 46
- 238000009877 rendering Methods 0.000 claims description 26
- 230000004044 response Effects 0.000 claims description 13
- 238000004891 communication Methods 0.000 claims description 10
- 238000012015 optical character recognition Methods 0.000 claims description 9
- 238000004590 computer program Methods 0.000 abstract description 15
- 238000010586 diagram Methods 0.000 description 8
- 238000000605 extraction Methods 0.000 description 7
- 239000000284 extract Substances 0.000 description 5
- 230000006870 function Effects 0.000 description 4
- 230000003993 interaction Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000013515 script Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 238000005457 optimization Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
- G06F16/2272—Management thereof
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/455—Emulation; Interpretation; Software simulation, e.g. virtualisation or emulation of application or operating system execution engines
- G06F9/45533—Hypervisors; Virtual machine monitors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V30/00—Character recognition; Recognising digital ink; Document-oriented image-based pattern recognition
- G06V30/10—Character recognition
- G06V30/14—Image acquisition
- G06V30/146—Aligning or centring of the image pick-up or image-field
- G06V30/1475—Inclination or skew detection or correction of characters or of image to be recognised
- G06V30/1478—Inclination or skew detection or correction of characters or of image to be recognised of characters or characters lines
Definitions
- the Internet provides access to a wide variety of information.
- digital image files, video and/or audio files, as well as web page resources for particular subjects or particular news articles are accessible over the Internet
- web page resources many of these resources are designed to facilitate the performing of particular functions, such as banking, booking hotel reservations, shopping, etc., or to provide structured information, such as on-line encyclopedias, movie databases, etc.
- search engines are available for identifying particular resources accessible over the Internet These search engines crawl and index the various web page resources. The search engine then uses the index to determine which resources are most responsive to a search query and provides search results that link to the resources in response to the query.
- This specification describes technologies relating indexing application pages of native applications.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions instantiating a virtual machine emulating an operating system of a user device; instantiating, within the virtual machine, a native application that generates application pages for display on a user device within the native application, the native application operating independent of a browser application that can operate on the user device; accessing, within the virtual machine, application pages of the native application, and for each of the application pages: generating application page data describing content of the application page, the content described by the application page data including text that a user device displays on the application page when the user device displays the application page, and indexing the application page data for the native application in an index that is searchable by a search engine.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- Another innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions receiving first search results responsive to a search query, each of the search results referencing a resource mat can be rendered in a browser application on a user device and including a link to the resource, the first search results generated in response to a search of a first index of resources that can be rendered in the browser application; receiving at least one second search result responsive to the query, the second search result specifying a native application operating independent of a browser application that can operate on the user device, the second search result generated in response to a search of a second index of application pages that can be display on a user device within the native application; and providing the first search results and the second search result for display on a user device.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- Another innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of instantiating, within an operating system environment, a native application that generates application pages for display on a user device within the native application, the native application operating independent of a browser application that can operate on the user device; accessing, within the operating system environment, application pages of the native application, and for each of the application pages: extracting application page data describing content of the application page, the application page data being data provided to a rendering process of the native application, wherein the rendering process receives the application page data and renders the content of the application page based on the application page data, and associating the application page data with an application page identifier of the application page and a native application identifier of the native application.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- the information stored in the application page index of native application pages is taken from actual application page data, and may thus provide a more comprehensive description of application content than is provided by metadata that is external to the native application and that describes the native application.
- This may provide a search engine with the ability to determine relevance measures mat are more accurate than relevance measures based on the metadata describing the native application.
- the application page index of native application pages provides a search engine with the capability of surfacing search results for native applications that take into account the actual data provided within the application pages of the native application. This is potentially more accurate than relying solely on metadata that is descriptive of a native application, such as a title and description of the native application, and also relieves the publishers of performing search engine optimizations on the metadata to ensure that the native applications are identified in response to particular queries.
- Implementations in which application page data are accessed in binary form reduce the likelihood of descriptive errors that may result when using techniques that derive such data, such as optical character recognition errors. Furthermore, accessing the data in binary form also identifies data that would otherwise be hidden from a viewport, such as in the case in which a scrollable element must be actuated to move the viewport within an application environment That collection of application page data uses the native application as a source of the application page data, and thus collection of data describing the application can be accomplished in a more timely manner than by collecting metadata from multiple different websites. Likewise, the collection of application page data in this manner is more scalable than collecting metadata from multiple different websites.
- Fig. 1 is a block diagram of an example environment in which application pages for native applications are indexed and searched.
- Fig. 2 is a flow diagram of an example process for indexing application page data of native applications.
- Fig. 3 is an illustration of a search results page that includes a native application search result.
- Fig. 4 is a flow diagram of an example process of providing search result for web page resources and application page resources.
- Fig. 5 is a system flow diagram of an extraction process.
- Fig. 6A is an illustration of an application page user interface.
- Fig. 6B is an illustration of classes and objects used in a rendering process to render the application page user interface.
- Fig. 6C is an example of application page data describing content of the application page.
- a system crawls and indexes application pages of native applications.
- a native application generates application pages for display on a user device within an environment of the native application, and operates independent of a browser application on the user device.
- a native application is an application specifically designed to run on a particular user device operating system and machine firmware. Native applications thus differ f om browser-based applications and browser-rendered resources. The latter require all, or at least some, elements or instructions downloaded from a web server each time they instantiated or rendered. Furthermore, browser-based applications and browser-rendered resources can be processed by all web-capable mobile devices within the browser and thus are not operating system specific.
- the system instantiates a virtual machine that emulates an operating system operating on a user device.
- the system instantiates a native application specific to the operation system.
- the native application generates application pages for display on a user device within the native application, and operates independent of a browser application on a user device.
- the system accesses, within the virtual machine, application pages of the native application.
- the system can access the pages by an automated process mat explores various menus and selection options for each application page and each subsequent application page.
- the system can access the pages that are specified by a publisher of the native application.
- the system For each of the application pages, the system generates application page data describing content of the application page.
- the content described by the application page data may, for example, include: text that a user device displays on the application page when the user device displays the application page; image data mat defines an image of the application page as would be rendered in the native application;
- listing/menu data that describes various lists and menus of the application page; and other data that describes other features of the application page.
- the application pages for the native application are then indexed in an index that is searchable by a search engine.
- the search engine can combine web resource search results that reference web resources that can be rendered in a browser application on a user device, and native application search results that specify the native application.
- the native application search results are generated, in part, in response to a search of index of the application pages for native applications.
- FIG. 1 is a block diagram of an example environment 100 in which application pages for native applications are indexed and searched.
- a computer network 102 such as the Internet, connects resource publisher web sites 104, application publishers 106, user devices 108 and a search engine 110.
- a resource publisher website 104 includes one or more web resources 105 associated with a domain and hosted by one or more servers in one or more locations.
- a resource publisher website is a collection of web pages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements.
- Each website 104 is maintained by a content publisher, which is an entity that controls, manages and/or owns the website 104.
- a web page resource is any data that can be provided by a publisher website 104 over the network 102 and that has a resource address, e.g., a uniform resource locator (URL).
- Web resources may be HTML pages, images files, video files, audio files, and feed sources, to name just a few.
- the resources may include embedded information, e.g., meta information and hyperlinks, and/or embedded instructions, e.g., client-side scripts.
- An application publisher website 106 may also include one or more web resources 105, and also provides native applications 107.
- a native application 107 is an application specifically designed to run on a particular user device operating system and machine firmware.
- an "application page" is a particular display environment within a native application and in which is displayed content, such as text, images, and the like.
- An application page is specific to the particular native application, and the native application is specific to the particular operating system of the user device 108.
- An application page differs from a rendered web resource in that the application page is generated within and specific to the native application, while a web resource may be rendered in any browser for which the web page resource is compatible, and is independent of the operating system of the user device.
- a user device 108 is an electronic device that is under the control of a user.
- a user device 108 is typically capable of requesting and receiving web page resources 104 and native applications 107 over the network 102.
- Example user devices 108 include personal computers, mobile communication devices, and tablet computers.
- the search engine 110 accesses a web index 112 and an application index 114.
- the web index 112 is an index of web resources 105 that has, for example, been built from crawling the publisher web sites 104.
- the application index 114 is an index of application pages for native applications 107, and is constructed using a virtual machine 120 and an indexing process that is described in more detail below. Although shown as separate indexes, the web index 112 and the application index 114 can be combined in a single index.
- the user devices 108 submit search queries to the search engine 110.
- the search engine 110 accesses the web index 112 and the application index 114 to identify resources and applications, respectively, that are relevant to the query.
- the search engine 110 may, for example, identify the resources and applications in the form of web resource search results and native application search results, respectively. Once generated, the search results are provided to the user device 108 from which the query was received.
- a web resource search result is data generated by the search engine 110 that identifies a web resource and provides information that satisfies a particular search query.
- a web resource search result for a resource can include a web page title, a snippet of text extracted from the resource, and a resource locator for the resource, e.g., the URL of a web page.
- a native application search result specifies a native application and is generated in response to a search of the application index 114 of application pages.
- a variety of functions can be invoked by the selection of an application search result. For example, selection of a native application search result may cause the native application to launch (if installed on the user device 108) and generate an instance of application page referenced in the application search result and that includes content that is relevant to the search query. Such a function is referred to as "deep linking" within the application search result.
- Fig. 1 is a flow diagram of an example process 200 for indexing application page data of native applications.
- the process 200 can be implemented in a data processing apparatus of one or more computers in data communication.
- the process 200 instantiates a virtual machine 120 emulating an operating system for a user device (202).
- the virtual machine 120 may, in some
- implementations be a modified version of the operating system and includes extractors that extract data from application pages as described in more detail below.
- the process 200 instantiates, within the virtual machine 120, a native application 107 that generates application pages for display on a user device within the native application 107.
- the virtual machine 120 may, for each application in a set of native applications 107 to be processed, launch an instance of the native application 107.
- the process 200 accesses, within the virtual machine 120, application pages of the native application (206).
- the virtual machine accesses the pages by an automated process that explores various menus and selection options for each application page and each subsequent application page.
- Such an automated process can be accomplished by sequentially selecting menu options and links according to a deterministic routine that results in the selection of each application page provided by the native application 107.
- the virtual machine 120 can access the application pages that are specified by a publisher of the native application.
- URIs uniform resource identifiers
- the process 200 For each application page, the process 200 generates application page data describing content of the application page (208).
- the content of the page may include, for example, text displayed on the application page; images displayed on the application page; links on the application page to other application pages or other web resources; and other content that is appropriate for indexing.
- the virtual machine 120 includes extractors that extract content data for indexing.
- the extracted content data is, for example, data that is provided to a rendering process of the native application.
- the rendering process renders content based on the data for display on a user device.
- Use of extractors allows for more accurate identification of the various content of an application page.
- the text extractor 122 extracts text data provided to a rendering process of the native application.
- the text data specifies the text that is to be rendered in the application page.
- the virtual machine 120 receives the actual text mat is to be rendered in the environment of the native application 107.
- extractors can likewise be used, such as an image extractor 124 and a list extractor 126.
- the image extractor 124 provides image data of an image that is to be rendered in the environment of the native application 107
- the list extractor 126 provides list data of a list of scrollable items that is rendered in the environment of the native application 107.
- Other data can also be extracted, such as application page link data describing links within the application page that link to another application page; web page link data describing links within the application page that link to a web resource referenced by a uniform resource locator and that, when selected, instantiate a browser application that renders the resource in a browser environment separate from the native application; etc.
- the extractors 122, 124 and 126, and other appropriate data extractors can be implemented using appropriate data handlers for a particular operating system.
- the extractors 122, 124 and 126 may be implemented using TextView objects, ImageView objects, and ListView objects, respectively.
- the virtual machine 120 processes the objects to extract the
- corresponding data e.g., by including instructions that cause the virtual machine to store for indexing the corresponding data mat is provided for rendering.
- a more detailed description of the extraction of application page data is described with reference to Figs. 5 and 6A - 6C below.
- the process 200 indexes the application page data for the native application in an index that is searchable by the search engine (210).
- an indexer 140 indexes, for each application page URI and native application 107 identifier, the application page data describing the content for the application page.
- the indexed data are stored in the application index 114.
- a variety of appropriate indexing processes can be used to index the data.
- the application index 114 can include, for each native application 107 and URI pair, a row of data describing the application page data.
- the particular database and indexing scheme used may, for example, depend on the search engine algorithms utilized within the search engine.
- a particular native application page may have different URIs that correspond to different content.
- a stock quote application may have a first portion of a URI that is the same for all stock quotes, and a second portion of the URI, such as a query parameter, that includes a name- value pair for a specific quote or quotes to be displayed on the application page.
- each specific instance of a unique URI constitutes an entry in the application index 114.
- not all possible URJ's are processed. Instead, the URl's mat are indexed may be for the N most popular query values that are provided from users, e.g., the top 100 most requested stocks, the top 100 most requested movies, etc.
- Some native applications may request data and/or instructions from a source mat is external to the virtual machine 120. Examples of such sources are web servers, feed sources, etc.
- the requested data and or instructions may also be indexed in the application index 114.
- the virtual machine 120 may include a receiving cache 132 that stores data and instructions that are requested by the native application 107.
- the virtual machine 120 is configured to intercept the received data and store a copy of the data in the receiving cache 132 for indexing.
- Fig. 3 is an illustration of a search results page 300 that includes a native application search result Displayed in the search results page 300 are search results 310, 320, 330, and 340 that are responsive to the query "Stock quote Goog" displayed in the search input field 304.
- the search result 310 is a real time search result that is generated, for example, in part from a real time feed.
- the search results 320 and 340 are web search results generated in response to a search of a web index 112 of resources.
- Each search result 320 and 340 references a resource that can be rendered in a browser application on a user device and includes a link to the resource, and other data, such as a snippet of text extracted for the referenced resource.
- the search result 330 is a native application search result that is generated in response to a search of the application index 114 of application pages.
- the search result 330 may include, for example, a snippet 332 of text and an image 334 of an application page.
- the snippet 334 may include, for example, the name of the native application (Stock Quoter for AndriodP*) and text that has been extracted from one or more application pages of the native application. Additional text can also be included, such as text from metadata.
- the image 334 may be, for example, an image of a rendered application page.
- multiple images for a particular application page may be stored, and the image that is most relevant to the query may be selected.
- the image 334 includes an image for a stock quote for the Goog symbol, and the image is selected because the search query specifies the Goog symbol.
- the virtual machine 120 may, for example, be configured to collect a series of images for a particular application page if the application page can be rendered for different input parameters (e.g., stock tickers, movie titles, etc.).
- the images that are stored may be for the N most popular values that are provided from users, e.g., the top 100 most requested stocks, the top 100 most requested movies, etc.
- selection of the image 334 at the user device causes the native application to launch and generate an instance of the application page that includes content that is relevant to the search query. For example, provided the native application Stock Quoter forAndriod TM is installed on the user device, selecting the image 334 causes the native application to launch and generate the application page that corresponds to the image 334. Furthermore, the application page is rendered to display the current stock quote for the Goog symbol. This can be accomplished, for example, by passing the input value of Goog in a command line for the native application. If, on the other hand, the native application is not installed, then selection of the image 334 may cause the user device 108 to display a web page resource at which the particular native application may be downloaded and installed on the user device 108.
- Fig. 4 is a flow diagram of an example process 400 of providing search result for web page resources and application page resources.
- the process 400 can be implemented in a data processing apparatus of one or more computers in data communication.
- the process 400 receives first search results responsive to a search query, each of the search results referencing a resource that can be rendered in a browser application on a user device and including a link to the resource (402).
- a web server for a search engine may receive web search results 320 and 340 responsive to a query.
- the process 400 receives at least one second search result responsive to the query, the second search result specifying a native application operating independent of a browser application that can operate on the user device (404).
- a web server for a search engine may receive native application search result 330 responsive to the query.
- the process 400 provides the first search results and the second search result for display on a user device (406).
- the web server for the search engine may order the search results according to a ranking and provide the search result so that the search results are displayed according to the rank.
- Fig. 5 is a system flow diagram of an extraction process.
- An extraction controller 500 communicates instructions to the virtual machine 120 and receives application page data and screen data from the virtual machine 120. In operation, the extraction controller 500 instructs the virtual machine 120 to launch a particular native application 107, to access particular application pages within the native application 107 and to capture the application page data for each application page.
- a rendering process 121 of the virtual machine 120 receives the application page data to render the content of the application page.
- the virtual machine 120 includes extractors, e.g., extractors 122, 124, 126, etc., that extract application page data describing content of the application page.
- the extractors are implemented as instructions that store the application page data provided to the rendering process 121 as extracted data 130.
- the extractors may include instructions that access particular objects of a view class, where each object occupies an area on a display of the application page when rendering is complete.
- the application page data are data for the particular objects of each view class.
- the extractors 122, 124 and 126 may be implemented to access the TextView objects, ImageView objects, and ListView objects, respectively.
- a screen extractor 120 may extract an image of a rendered application page.
- the extracted image is, in some implementations, the image of the canvas on which the application page is rendered, and thus may be larger than an active viewport through which only a visible sub-portion of the application page may be viewed.
- the screen extractor 128 may, for example, be implemented by instructions that cause the rendering process 121 to output the rendered application page to the extraction controller, or, alternatively, store the rendered application page in the extracted data 130.
- the extracted data are retrieved by the extraction controller 500 and provided, for example, to the indexer 140.
- Fig. 6A is an illustration of an application page user interface 600.
- the application page user interface 600 is for an example "Contact info Widget” application in which a list of contact information for a "Friends" category of contacts is displayed.
- the contact information includes a name, a telephone number, and an e-mail address.
- Fig. 6B is an illustration of classes and objects 610 used in a rendering process to render the application page user interface 600.
- the Contact Info Widget is an object that belongs to a widget class.
- a ListView object of "Friends” is accessed.
- the object "Friends” is associated with three groups, each of which contain a list of three TextView objects - a name object, a telephone object, and an e-mail object
- the correspond text data for the respective name objects (Namel, Name2, Name3), telephone objects (Tell, Tel2, Tel3), and e- mail objects (Email 1, Email2, Email3) are listed in Fig. 6B and are displayed in Fig. 6A.
- Fig. 6C is an example of application page data 620 describing content of the application page.
- the application page data 620 are hierarchically grouped according to the Widget class, ListView class, and TextView classes as shown.
- the application page data 620 for each corresponding class may be generated by an extractor for the particular class, such as a set of instructions that cause the data shown in Fig. 6C to be generated for the respective class.
- Embodiments of the subject matter and the operations described in mis specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal
- a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM,
- EEPROM electrically erasable programmable read-only memory
- flash memory devices magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a user computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include users and servers.
- a user and server are generally remote from each other and typically interact through a communication network. The relationship of user and server arises by virtue of computer programs running on the respective computers and having a user-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a user device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the user device).
- Data generated at the user device e.g., a result of the user interaction
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/742,771 US9002821B2 (en) | 2013-01-16 | 2013-01-16 | Indexing application pages of native applications |
PCT/US2014/011256 WO2014113317A1 (en) | 2013-01-16 | 2014-01-13 | Indexing application pages of native applications |
Publications (3)
Publication Number | Publication Date |
---|---|
EP2946316A1 true EP2946316A1 (en) | 2015-11-25 |
EP2946316A4 EP2946316A4 (en) | 2016-10-26 |
EP2946316B1 EP2946316B1 (en) | 2018-04-11 |
Family
ID=51166014
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP14740959.3A Active EP2946316B1 (en) | 2013-01-16 | 2014-01-13 | Indexing application pages of native applications |
Country Status (5)
Country | Link |
---|---|
US (3) | US9002821B2 (en) |
EP (1) | EP2946316B1 (en) |
KR (2) | KR102254117B1 (en) |
CN (2) | CN105027121B (en) |
WO (1) | WO2014113317A1 (en) |
Families Citing this family (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8510648B2 (en) * | 2007-04-13 | 2013-08-13 | Open Text S.A. | Application isolation system |
US9553919B2 (en) * | 2013-02-27 | 2017-01-24 | Quixey, Inc. | Techniques for sharing application states |
US20140250147A1 (en) | 2013-03-01 | 2014-09-04 | Quixey, Inc. | Generating Search Results Containing State Links to Applications |
US10303802B2 (en) * | 2013-03-15 | 2019-05-28 | Gadget Software, Inc. | System for mobile application search |
US20140316890A1 (en) * | 2013-04-23 | 2014-10-23 | Quixey, Inc. | Entity Bidding |
US9720672B2 (en) * | 2014-01-06 | 2017-08-01 | Quixey, Inc. | Searching and accessing application functionality |
US20150242421A1 (en) | 2014-02-21 | 2015-08-27 | Quixey, Inc. | Location-Based Searching |
US9513961B1 (en) * | 2014-04-02 | 2016-12-06 | Google Inc. | Monitoring application loading |
US10210263B1 (en) * | 2014-06-24 | 2019-02-19 | Google Llc | Native application search results |
RU2710293C2 (en) * | 2014-06-24 | 2019-12-25 | Гугл Инк. | Search results for native applications |
US10095794B2 (en) * | 2014-09-05 | 2018-10-09 | Samsung Electronics Co., Ltd. | Augmenting search results with device and application history |
US9626443B2 (en) | 2014-10-23 | 2017-04-18 | Quixey, Inc. | Searching and accessing application functionality |
KR102199568B1 (en) * | 2014-11-10 | 2021-01-07 | 엘지전자 주식회사 | Electric apparatus and operating method thereof |
US20160132596A1 (en) * | 2014-11-12 | 2016-05-12 | Quixey, Inc. | Generating Search Results Based On Software Application Installation Status |
US10216852B1 (en) * | 2015-01-22 | 2019-02-26 | Google Llc | Indexing access limited native applications |
WO2016166558A1 (en) * | 2015-04-16 | 2016-10-20 | Google, Inc. | Native application search result adjustment based on user specific affinity |
US10621189B2 (en) | 2015-06-05 | 2020-04-14 | Apple Inc. | In-application history search |
US10755032B2 (en) * | 2015-06-05 | 2020-08-25 | Apple Inc. | Indexing web pages with deep links |
US10592572B2 (en) | 2015-06-05 | 2020-03-17 | Apple Inc. | Application view index and search |
US9348671B1 (en) * | 2015-07-23 | 2016-05-24 | Google Inc. | Monitoring application loading |
US10650067B2 (en) | 2015-08-13 | 2020-05-12 | Samsung Electronics Co., Ltd. | Cloud-enabled architecture for on-demand native application crawling |
KR102457006B1 (en) * | 2015-08-19 | 2022-10-21 | 삼성전자 주식회사 | Apparatus and method for providing information of electronic device |
US9946766B2 (en) * | 2015-08-20 | 2018-04-17 | Samsung Electronics Co., Ltd. | Search result relevance based on content associated with software applications |
US10223460B2 (en) * | 2015-08-25 | 2019-03-05 | Google Llc | Application partial deep link to a corresponding resource |
US10402385B1 (en) | 2015-08-27 | 2019-09-03 | Palantir Technologies Inc. | Database live reindex |
US10289734B2 (en) * | 2015-09-18 | 2019-05-14 | Samsung Electronics Co., Ltd. | Entity-type search system |
US10120949B2 (en) * | 2015-10-29 | 2018-11-06 | Google Llc | Indexing native application data |
US10146842B2 (en) * | 2015-11-19 | 2018-12-04 | Google Llc | Pre-instantiating native applications in background |
US10120954B2 (en) | 2015-12-31 | 2018-11-06 | Samsung Electronics Co., Ltd. | Transformation and presentation of on-demand native application crawling results |
WO2017120360A1 (en) * | 2016-01-05 | 2017-07-13 | Quixey, Inc. | Computer-automated generation of application deep links |
CN107015870B (en) | 2016-09-19 | 2020-11-03 | 创新先进技术有限公司 | Method and device for realizing communication between web page and local application and electronic equipment |
TW201814554A (en) * | 2016-10-12 | 2018-04-16 | 香港商阿里巴巴集團服務有限公司 | Searching index information for application data |
US10558950B2 (en) * | 2017-05-15 | 2020-02-11 | Google Llc | Automatic context passing between applications |
CN107239399B (en) * | 2017-05-27 | 2020-06-05 | 北京京东尚科信息技术有限公司 | Index generation method, device and system for testing and readable storage medium |
JP6977565B2 (en) * | 2018-01-04 | 2021-12-08 | 富士通株式会社 | Search result output program, search result output device and search result output method |
US11126540B2 (en) | 2019-06-13 | 2021-09-21 | Paypal, Inc. | Big data application lifecycle management |
Family Cites Families (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR100340031B1 (en) * | 1999-10-21 | 2002-06-12 | 이계철 | Method for converting map data to data for object_related geographic information system |
US20040030882A1 (en) | 2002-08-08 | 2004-02-12 | Forman George Henry | Managed application pre-launching |
US7370035B2 (en) | 2002-09-03 | 2008-05-06 | Idealab | Methods and systems for search indexing |
US7076616B2 (en) | 2003-03-24 | 2006-07-11 | Sony Corporation | Application pre-launch to reduce user interface latency |
US8121997B2 (en) | 2004-02-09 | 2012-02-21 | Limelight Networks, Inc. | Universal search engine |
US7730012B2 (en) | 2004-06-25 | 2010-06-01 | Apple Inc. | Methods and systems for managing data |
US8707451B2 (en) | 2006-03-01 | 2014-04-22 | Oracle International Corporation | Search hit URL modification for secure application integration |
US8510648B2 (en) * | 2007-04-13 | 2013-08-13 | Open Text S.A. | Application isolation system |
US20090248670A1 (en) | 2008-03-31 | 2009-10-01 | Trevor Fiatal | Content search engine |
US8086957B2 (en) | 2008-05-21 | 2011-12-27 | International Business Machines Corporation | Method and system to selectively secure the display of advertisements on web browsers |
WO2010020963A2 (en) * | 2008-08-21 | 2010-02-25 | Mango Moon Trading 1138 Cc | Indexing system |
US8219572B2 (en) * | 2008-08-29 | 2012-07-10 | Oracle International Corporation | System and method for searching enterprise application data |
US8306969B2 (en) | 2008-09-23 | 2012-11-06 | Microsoft Corporation | Linking search queries to rich media themes |
JP2012515382A (en) * | 2009-01-16 | 2012-07-05 | グーグル・インコーポレーテッド | Visualize the structure of the site and enable site navigation for search results or linked pages |
US20100257466A1 (en) | 2009-04-01 | 2010-10-07 | Yahoo! Inc. | Method and system for generating a mini-software application corresponding to a web site |
US20100269093A1 (en) * | 2009-04-17 | 2010-10-21 | iBiz Framework, Inc. | Content Management System and Method for Generating Dynamic Applications |
CN102483753A (en) | 2009-05-27 | 2012-05-30 | 谷歌公司 | Computer Application Data In Search Results |
US8745108B2 (en) * | 2009-12-08 | 2014-06-03 | Mitutoyo Corporation | Display configuration for multimode electronic calipers having a ratiometric measurement mode |
US8458384B2 (en) | 2010-02-03 | 2013-06-04 | National Instruments Corporation | Automatically launching a measurement application in response to measurement device connection |
US9098363B2 (en) | 2010-04-07 | 2015-08-04 | Apple Inc. | Search extensibility to third party applications |
GB2494598A (en) | 2010-06-11 | 2013-03-13 | Doat Media Ltd | A system and methods thereof for enhancing a user's search experience |
US8515979B2 (en) | 2010-06-18 | 2013-08-20 | Verizon Patent And Licensing, Inc. | Cross application execution service |
US20120124061A1 (en) | 2010-11-12 | 2012-05-17 | Microsoft Corporation | Rich Search Over and Deep Integration with Applications |
US8909697B2 (en) | 2010-11-29 | 2014-12-09 | Hughes Network Systems, Llc | Computer networking system and method with javascript execution for pre-fetching content from dynamically-generated URL and javascript injection to modify date or random number calculation |
US9317621B2 (en) | 2011-01-06 | 2016-04-19 | Microsoft Technology Licensing, Llc | Providing deep links in association with toolbars |
US9858092B2 (en) | 2011-01-06 | 2018-01-02 | Mitel Networks Corporation | Contextual application launch via search query |
US8452749B2 (en) | 2011-04-01 | 2013-05-28 | Pomian & Corella, Llc | Browsing real-time search results effectively |
US20120316955A1 (en) | 2011-04-06 | 2012-12-13 | Yahoo! Inc. | System and Method for Mobile Application Search |
EP2712442A1 (en) | 2011-05-09 | 2014-04-02 | Google, Inc. | Recommending applications for mobile devices based on installation histories |
CN102223410A (en) * | 2011-06-15 | 2011-10-19 | 深圳Tcl新技术有限公司 | Searching method of intelligent information terminal and terminal |
US9519726B2 (en) | 2011-06-16 | 2016-12-13 | Amit Kumar | Surfacing applications based on browsing activity |
US8650139B2 (en) | 2011-07-01 | 2014-02-11 | Google Inc. | Predicting user navigation events |
US8930940B2 (en) * | 2011-08-19 | 2015-01-06 | Yongyong Xu | Online software execution platform |
KR101491878B1 (en) | 2011-08-31 | 2015-02-09 | 라인 가부시키가이샤 | System and method for providing ranking information of mobile application using information obtained from user terminal |
US20130110815A1 (en) | 2011-10-28 | 2013-05-02 | Microsoft Corporation | Generating and presenting deep links |
CA2854142A1 (en) | 2011-11-01 | 2013-05-10 | Google Inc. | Launching applications from webpages |
US8554345B2 (en) | 2011-11-10 | 2013-10-08 | Cbs Interactive, Inc. | APP rating system |
KR101295644B1 (en) | 2011-11-11 | 2013-09-16 | 한국전자통신연구원 | System and method for verifying smart phone application |
US20130124606A1 (en) | 2011-11-14 | 2013-05-16 | Boopsie, Inc. | Automatic personalization of downloadable mobile apps |
US8793235B2 (en) | 2012-01-19 | 2014-07-29 | Google Inc. | System and method for improving access to search results |
GB2501276A (en) | 2012-04-18 | 2013-10-23 | Ibm | Determining web page loading at a client |
US9510141B2 (en) | 2012-06-04 | 2016-11-29 | Apple Inc. | App recommendation using crowd-sourced localized app usage data |
US9110752B2 (en) * | 2012-07-11 | 2015-08-18 | Sap Portals Israel Ltd | Enterprise portal mobile applications installs |
US20140047413A1 (en) * | 2012-08-09 | 2014-02-13 | Modit, Inc. | Developing, Modifying, and Using Applications |
US9069735B2 (en) * | 2012-10-15 | 2015-06-30 | Sweetlabs, Inc. | Systems and methods for integrated application platforms |
US8510764B1 (en) | 2012-11-02 | 2013-08-13 | Google Inc. | Method and system for deep links in application contexts |
-
2013
- 2013-01-16 US US13/742,771 patent/US9002821B2/en active Active
-
2014
- 2014-01-13 CN CN201480009918.0A patent/CN105027121B/en active Active
- 2014-01-13 KR KR1020217001799A patent/KR102254117B1/en active IP Right Grant
- 2014-01-13 EP EP14740959.3A patent/EP2946316B1/en active Active
- 2014-01-13 CN CN201810700714.1A patent/CN109145078B/en active Active
- 2014-01-13 WO PCT/US2014/011256 patent/WO2014113317A1/en active Application Filing
- 2014-01-13 KR KR1020157022026A patent/KR102208988B1/en active Application Filing
-
2015
- 2015-02-27 US US14/634,021 patent/US9262459B2/en not_active Expired - Fee Related
-
2016
- 2016-01-11 US US14/992,555 patent/US9652550B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
US9262459B2 (en) | 2016-02-16 |
US9652550B2 (en) | 2017-05-16 |
CN105027121B (en) | 2018-07-27 |
US9002821B2 (en) | 2015-04-07 |
EP2946316A4 (en) | 2016-10-26 |
US20150169660A1 (en) | 2015-06-18 |
US20140201179A1 (en) | 2014-07-17 |
WO2014113317A1 (en) | 2014-07-24 |
CN109145078A (en) | 2019-01-04 |
KR102254117B1 (en) | 2021-05-20 |
CN105027121A (en) | 2015-11-04 |
KR20210010653A (en) | 2021-01-27 |
US20160117408A1 (en) | 2016-04-28 |
KR102208988B1 (en) | 2021-01-28 |
CN109145078B (en) | 2019-11-26 |
EP2946316B1 (en) | 2018-04-11 |
KR20150107840A (en) | 2015-09-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9652550B2 (en) | Indexing application pages of native applications | |
US10713324B2 (en) | Search results for native applications | |
EP3161678B1 (en) | Deep links for native applications | |
US9547721B2 (en) | Native application search results | |
US9146972B2 (en) | Ranking of presentation modes for particular content | |
US20230106266A1 (en) | Indexing Access Limited Native Applications | |
WO2016166558A1 (en) | Native application search result adjustment based on user specific affinity | |
EP3238105B1 (en) | Application partial deep link to a corresponding resource | |
CN107851114B (en) | Method, system, and medium for automatic information retrieval | |
RU2693193C1 (en) | Automated extraction of information | |
US10146842B2 (en) | Pre-instantiating native applications in background | |
US9135313B2 (en) | Providing a search display environment on an online resource | |
RU2774319C2 (en) | Deep links for native applications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20150710 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20160922 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06K 9/32 20060101ALI20160916BHEPIpc: G06F 3/048 20060101ALI20160916BHEPIpc: G06F 9/455 20060101ALI20160916BHEPIpc: G06F 3/14 20060101ALI20160916BHEPIpc: G06K 9/62 20060101ALI20160916BHEPIpc: G06F 17/30 20060101AFI20160916BHEP |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20170613 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
INTG | Intention to grant announced |
Effective date: 20171027 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 988754Country of ref document: ATKind code of ref document: TEffective date: 20180415 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602014023742Country of ref document: DERef country code: NLRef legal event code: FP |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180711Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180711Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602014023742Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0017300000Ipc: G06F0016000000 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180712Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 988754Country of ref document: ATKind code of ref document: TEffective date: 20180411 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180813 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602014023742Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
26N | No opposition filed |
Effective date: 20190114 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190113 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20190131 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190131 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190131Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190131 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190113 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190113 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602014023742Country of ref document: DERepresentative=s name: VENNER SHIPLEY GERMANY LLP, DERef country code: DERef legal event code: R082Ref document number: 602014023742Country of ref document: DERepresentative=s name: VENNER SHIPLEY LLP, DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180811 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20140113 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180411 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230125Year of fee payment: 10Ref country code: FIPayment date: 20230127Year of fee payment: 10 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: ITPayment date: 20230120Year of fee payment: 10Ref country code: GBPayment date: 20230127Year of fee payment: 10Ref country code: DEPayment date: 20230127Year of fee payment: 10 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: NLPayment date: 20240126Year of fee payment: 11 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20240129Year of fee payment: 11Ref country code: GBPayment date: 20240129Year of fee payment: 11 |
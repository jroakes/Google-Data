US6665666B1 - System, method and program product for answering questions using a search engine - Google Patents
System, method and program product for answering questions using a search engine Download PDFInfo
- Publication number
- US6665666B1 US6665666B1 US09/495,645 US49564500A US6665666B1 US 6665666 B1 US6665666 B1 US 6665666B1 US 49564500 A US49564500 A US 49564500A US 6665666 B1 US6665666 B1 US 6665666B1
- Authority
- US
- United States
- Prior art keywords
- query
- tokens
- words
- index
- question
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3332—Query translation
- G06F16/3338—Query expansion
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99935—Query augmenting and refining, e.g. inexact access
Definitions
- This invention relates to the field of querying and searching collections of text. More specifically, the invention relates to querying and searching collections of text in a networking environment.
- Text documents contain a great deal of factual information.
- an encyclopedia contains many text articles consisting almost entirely of factual information.
- Newspaper articles contain many facts along with descriptions of newsworthy events.
- the World Wide Web contains millions of text documents, which in turn contain at least a small amount of factual information.
- a database management system assumes that information is stored in a structured fashion, such that each data element has a known data type and a set of legal operations.
- RDBMS relational database management system
- SQL Structured Query Language
- SQL is based on a relational calculus that restricts queries to include only certain operations on certain data types, and certain combinations of those operations.
- a relational database is tailored to applications where the factual information is available in a structured form.
- information retrieval (IR) systems were created.
- An information retrieval system indexes a collection of documents using textual features (e.g., words, noun phrases, named entities, etc.). The document collection can then be searched using either Boolean queries or natural language queries.
- a Boolean query consists of textual features and Boolean operators (e.g., and, or, not).
- To evaluate a Boolean query an IR system returns the set of documents that satisfies the Boolean expression.
- a natural language query is a free form text query that describes the user's information need.
- Documents likely to satisfy this information need are then found using a retrieval model that matches the query with documents in the collection.
- Popular models include the probabilistic and vector space models, both of which use text feature occurrence statistics to match queries with documents. In all cases, an IR system only identifies entire documents that are likely to satisfy a user's information need.
- the user would be able to phrase a specific question, e.g., “What is the population of the world?”, and the computer program would respond with a specific answer, e.g., “6 billion”.
- the computer program will produce these answers by analyzing the factual information available in the vast supply of text documents, examples of which were given previously.
- the problem at hand is how to automatically process free text documents and provide specific answers to questions based on the factual information contained in the analyzed documents.
- search engines are typically used to find the desired information in a large collection of documents.
- the user's query is treated as a bag of words, and these are matched against the contents of the documents in the collection; the documents with the best matches, according to some scoring function, are returned at the top of a hit-list.
- Such an approach can be quite effective in the case one is looking for information about some topic.
- a different approach has to be attempted for the following reasons: (1) Using a standard search engine approach, the user gets back documents, rather than answers to a question. This then requires browsing the documents to see if they do indeed contain the desired answers (which they may not) which can be a time consuming process.
- AskJeeves www.askjeeves.com
- This approach uses a combination of databases of facts, semantic networks, ontologies of terms and a way to match user's questions to this data to convert the user's question to one or more standard questions.
- the user will ask a question, and the system will respond with a list of questions that the system can answer.
- These latter questions match the user's question in the sense that they share some keywords in common.
- These templates may be either in natural-language or structured form.
- the second approach uses traditional search-engines with post-processing by linguistic algorithms, and is the default mechanism suggested and supported by the TREC-8 Question-Answering track.
- a question is submitted to a traditional search engine and documents are returned in the standard manner. It is expected that many of these documents will be false hits, for reasons outlined earlier. Linguistic processing is then applied to these documents to detect one (or more) instances of text fragments that correspond to an answer to the question in hand.
- Linguistic processing is then applied to these documents to detect one (or more) instances of text fragments that correspond to an answer to the question in hand.
- the thinking here is that it is too computationally expensive to apply sophisticated linguistic processing to a corpus that might be several gigabytes in size, but it is reasonable to apply such processing to a few dozen or even a few hundred documents that come back at the top of the hit list.
- the prior art can answer questions that are structured (SQL) posed against structured data but can't deal with unstructured questions/data.
- EasyAsk (Tm) (www.EasyAsk.com) is a system which (after some training on the underlying database) takes question posed in plain English and translates them into an SQL query which then retrieves the data. The answers of the questions are constrained to some value as stored in the database.
- An object of this invention is an improved system and method for determining specific answers from queries of text.
- An object of this invention is an improved system and method for determining answers from queries against free form text.
- An object of this invention is an improved system and method for determining answers using free form queries.
- the present invention is a system, method, and program product that comprises a computer with a collection of documents to be searched.
- the documents contain free form (natural language) text.
- QA-Tokens which function as abstractions of phrases or question-types.
- pattern file which consists of a number of pattern records, each of which has a question template, an associated question word pattern, and an associated set of QA-Tokens.
- query-analysis process which receives a query as input and matches it to one or more of the question templates, where a priority algorithm determines which match is used if there is more than one.
- the query-analysis process then replaces the associated question word pattern in the matching query with the associated set of QA-Tokens, and possibly some other words.
- the tokens in the processed query (the words and QA-Tokens) are optionally converted to lemma form, stop-words are optionally removed and tokens are optionally assigned weights. This results in a processed query having some combination of original query tokens, new tokens from the pattern file, and QA-Tokens, possibly with weights.
- a text index data structure which is an inverted list of the locations of all of the words in the document collection, together with the locations of all of the augmented QA-Tokens.
- a search process then matches the processed query against a window of a user-selected number of sentences that is slid across the document texts. The windows are assigned a score from the number of matches of words in the window with words in the processed query, weighting if desired.
- a hit-list of top-scoring windows is returned to the user.
- FIG. 1 is a block diagram of the computing environment in which the present invention is used in a non-limiting preferred embodiment.
- FIG. 2 is a block diagram of the system architecture.
- FIG. 3 is a block diagram of a Pattern-file.
- FIG. 4 is a flow chart of the Matching Algorithm
- FIG. 5 is a flow chart of the Priority Algorithm.
- FIG. 5 a is a block diagram of the Equivalence File.
- FIG. 6 is a block diagram of a text index data structure.
- FIG. 7 a is a diagram of a text data structure.
- FIG. 7 b is a diagram of pattern files.
- FIG. 7 c is a flow chart of a document analysis process.
- FIG. 7 d is a flow chart of an indexing process.
- FIG. 8 is a flow chart of a search process.
- the invention first analyzes the query by a pattern-matching program, which when the invention recognizes certain patterns of words in a query, replaces some of them with members of a specially-designed set of query tokens called QA-Tokens.
- QA-Tokens members of a specially-designed set of query tokens called QA-Tokens.
- the PLACE$ token is substituted for the word “where”.
- the premise of this procedure is that a quite high percentage of questions can be analyzed in such a manner.
- the text collection from where the answer is to be derived is also augmented with QA-Tokens, but by using a different recognizer than that used to analyze the question.
- the search engine indexing process is modified to identify potential answers to questions (e.g. places, people, numeric quantities etc.) and index them.
- the scoring function is modified to score individual sentences, or small sequences of sentences, and return these to the user.
- the invention uses one or more of the following observations:
- the query analysis is enhanced by developing a set of question-templates that are matched against the user's query, with substitution of certain query terms with special query-tokens that correspond to the phrase labels mentioned above. So for example, the pattern “where . . . ” causes the word “where” to be replaced with PLACE$. The pattern “how much does . . . cost” causes those terms to be replaced with MONEY$. The pattern “how old . . . ” causes a replacement with AGE$.
- the base set of such labels is: PLACE$, PERSON$, ROLE$, NAME$, ORGANIZATION$, DURATION$, AGE$, DATE$, TIME$, VOLUME$, AREA$, LENGTH$, WEIGHT$, NUMBER$, METHOD$, MOST$, RATE$ and MONEY$. More specific versions of these, such as STATE$, COUNTRY$, CITY$, YEAR$ can be used as long as the phrase analyser (discussed below) can recognize such quantities.
- a synonym operator @SYN( ) is used to deal with cases where a question could be validly matched against more than one type of phrase. Thus a “who” question could match a proper name, a profession or an organization, so will generate @SYN(PERSON$, ROLE$, ORGANIZATION$) in the modified query.
- the indexer runs its own pattern template matcher against the text in the documents to be indexed. For each of the phrase types, a set of patterns needs to be developed. For example, the following are some of the TIME phrases:
- the corresponding special query token (such as TIME$ or PLACE$) is generated and indexed at that point in the document, along with the individual terms that comprised the phrase. We call this process of adding extra indexing terms augmentation. All terms in the document not matched in this way are indexed in the usual way too.
- the search engine operates essentially by the usual bag-of-words matching technique, but is subtly affected by the presence of the special query tokens.
- the special Query Token is not allowed tomatch against any text token that is already matched against another query term. Thus the question is “Who was Napoleon's wife” will match against a passage containing “Napoleon”, “wife” plus some term other than Napoleon that is augmented with PERSON$.
- the final mentioned improvement is to the scoring algorithm.
- Search engines usually score documents based on how many of the query terms they contain and how often, combining contribution weights computed for each term based on document and collection-based statistics. It is our observation that when a document successfully answers a question, all of the components of the question are to be found together, usually within a sentence or two. Thus we modify the scoring algorithm to score sentences (or short sequences of them) rather than documents. Due to the more severe filtering constraints imposed by this (i.e. that all, or most, query terms must occur in a sentence or short sequence of them, rather than the document as a whole), then a less complicated scoring function will likely suffice—for example, a simple count of the number of query terms that matched.
- This scoring procedure can be made more sophisticated and more flexible by extending the query syntax to allow specification of weights to individual query terms; on matching, the terms will contribute to the sentence or sentence-sequence score in proportion to the given weight. This will allow more precise scoring by taking care of the following kinds of considerations: Proper names and other multi-word terms in the query are rarer than individual words and so their presence in answer sentences gives more confidence that the sentence is correct that the presence of single terms from the query, all other things being equal, so should be weighted higher.
- Proposed answer text is no answer if it doesn't contain a type-compatible match to a special query-token in the query, so special query tokens should be weighted higher than any other words in the query.
- @SYN-sets may be more desirable than others. For example, “when” might generate @SYN(TIME$, DATE$), where DATE$ matches specific dates (e.g. “Jul. 4, 1776”) but TIME$ matches more general expressions (“in the afternoon”); a DATE$ match is therefore usually more desirable than a TIME$ match so should be weighted more.
- document titles are returned in a browser as in a traditional hit-list, but the document's score is inherited directly from its best-achieving sentence (or sentence-sequence).
- sentence-sequence On clicking on the document title, the document is fetched, and scrolled to the location of the target sentence, highlighting the sentence through colour, font, point-size, shading or other markings.
- the hit-list consists of the best-matching sentences. Clicking on them fetches the documents they belong in, as before.
- FIG. 1 is a block diagram of the computing environment in which the present invention is used in a non-limiting preferred embodiment. The figure shows some of the possible hardware, software, and networking configurations that make up the computing environment.
- the computing environment or system 100 comprises one or more general purpose computers 170 , 175 , 180 , 185 , 190 , and 195 interconnected by a network 105 .
- general purpose computers include the IBM Aptiva personal computer, the IBM RISC System/6000 workstation, and the IBM POWERparallel SP 2 . (These are Trademarks of the IBM Corporation.)
- the network 105 may be a local area network (LAN), a wide area network (WAN), or the Internet.
- the computers in this environment may support the Web information exchange protocol (HTTP) and be part of a local Web or the World Wide Web (WWW).
- Some computers (e.g., 195 ) may occasionally or always be disconnected 196 from the network and operate as stand-alone computers.
- the present invention is implemented as a software component in the computing environment.
- the software component is called the Question Answering System 110 .
- the Question Anwering System answers questions by processing information contained in documents 140 .
- Documents 140 are items such as books, articles, or reports that contain text.
- One or more documents are stored on one or more computers in the environment.
- One or more documents may be grouped together to form a document database 141 .
- a document database 141 may comprise documents located anywhere in the computing environment, e.g., spread across two or more computers.
- the Question Answering System analyzes the documents in a document database (see FIG. 7) to create an index 130 for the document database (see FIG. 6 ).
- User questions are represented as queries (see FIG. 5) and submitted to a Question Answering System 110 for processing.
- the Question Answering System uses system data 120 (see FIGS. 3 and 4) and an index 130 to process the query and locate relevant text passages in documents 140 (see FIG. 8 ).
- the relevant text passages may be further analyzed by the Question Answering System to identify specific answers to the question (see FIG. 9 ), and the results are returned to the user.
- Documents 140 , indexes 130 , and/or system data 120 on one computer may be accessed over the network by another computer using the Web (http) protocol, a networked file system protocol (e.g., NFS, AFS), or some other protocol.
- Services on one computer e.g., question answering system 110
- RPC remote procedure call
- the stand-alone system 195 has documents 140 , system data 120 , and an index 130 stored locally.
- the stand-alone system 195 also has a question answering system 110 installed locally. When the system is used, a question is input to the workstation 195 and processed by the local question answering system 110 using system data 120 and the index 130 . The results from the question answering system are output by the workstation 195 .
- a second configuration is 185 , a workstation with documents, system data, and indexes connected to a network 105 .
- This configuration is similar to the stand-alone workstation 195 , except that 185 is always connected to the network 105 .
- the local index 130 may be derived from local documents 140 and/or remote documents accessed via the network 105 , and created by either a local question answering system 110 or a remote question answering system 110 accessed via the network 105 .
- queries are input at the workstation 185 , they may be processed locally at 185 using the local question answering system 110 , local system data 120 , and local index 130 .
- the local question answering system 110 may access remote system data 120 and/or a remote index 130 (e.g. on system 175 ) via the network 105 .
- the workstation 185 may access a remote question answering system 110 via the network 105 .
- Computer 175 is similar to computer 185 with the exception that there are no local documents 140 .
- the local index 130 is derived from documents 140 accessed via the network 105 . Otherwise, as in computer 185 , the index 130 , system data 120 , and question answering system 110 may be accessed locally or remotely via the network 105 when processing queries.
- Another possible configuration is computer 180 , a workstation with documents only.
- the documents 140 stored locally at computer 180 may be accessed by remote question answering systems 110 via the network 105 .
- queries are entered at computer 180 , the question answering system 110 , system data 120 , and index 130 must all be accessed remotely via the network 105 .
- Another possible configuration is computer 190 , a client station with no local documents 140 , index 130 , system data 120 , or question answering system 110 .
- queries are entered at computer 190 , the question answering system 110 , system data 120 , and index 130 must all be accessed remotely via the network 105 .
- Another possible configuration is computer 170 , a typical web server. Queries are entered at another workstation (e.g., 175 , 180 , 185 , or possibly 195 ) or a client station (e.g., 190 ) and sent for processing to the web server 170 via the network 105 .
- the web server 170 uses a remote question answering system 110 , system data 120 , and index 130 (accessed via the network 105 ) to process the query.
- one or more of these functions 110 , 120 , and 130
- the results are returned to the workstation or client station from which the query was originally sent.
- FIG. 2 shows the back-end process 210 in which the document collection is processed into indexes, and a run-time system 220 which takes a user's question and returns answers by reference to the indexes produced by the back-end system.
- the document collection 140 is tokenized by Tokenizer 720 which produces a Word-List 740 and a Collection Vocabulary 722 .
- the Word-List 740 is processed by Augmentor 730 producing an Augmented Word-List 757 .
- the Augmented Word-List is input to Indexer 215 which produces Index 130 .
- the run-time system 220 takes as input the user's input 205 , which is a text string representing the user's information need in natural language. This is processed by the Query Processor Stage I 232 with reference to a set of query patterns 242 and equivalents 244 . The output of this process is a modified text string 245 . This string 245 is further manipulated by Query Processor Stage II 234 which by reference to a collection-dependent vocabulary file 722 and stop-word list 246 produces a further-modified query 247 . This query 247 undergoes a final transformation in Query Processor Stage III 236 whereby operators directing the search (such as indicating window-size) are inserted, and a search-ready query 250 is produced.
- the search-ready query 250 is then submitted to the search engine process 800 which by reference to search index 130 , previously generated by indexing process 215 , produces a document hit-list 270 .
- the document hit-list contains a rank-ordering of the documents that contain the best passages that match the query, each entry containing, amongst other information, the offset in the document where the relevant passage is found. This hit-list is presented to the user.
- the Augmentation process 730 and the Query Processing 230 operate on a collection of QA-Tokens 765 which are labels for different question types and the corresponding text segments in the document collection.
- QA-Tokens 765 are labels for different question types and the corresponding text segments in the document collection.
- process 230 in which the user's query 205 is analyzed and transformed into a format suitable for submission to the search engine process 800 .
- FIGS. 3, 4 and 5 support the description of how a given question is analyzed and modified before being submitted to a corpus in search of an answer.
- the premise is that using advanced textprocessing methods, certain words, phrases or relations can be identified within a corpus. For instance the phrase President Lincoln can be identified as a NAME of a person, from the sentence “Lou Gerstner is the CEO of IBM” it can be deduced that Lou Gerstner and IBM have a relation—which is “CEO”.
- the identification of a word, phrase and relationship is discussed in depth in the literature. However, some additional extensions are also covered in this disclosure. Throughout this disclosure such identifications are referred to as QA-Tokens [ 765 ].
- the main idea disclosed here is the following: Suppose the system can automatically determine that the answer to a given question is one or more of the special QA-Tokens [ 765 ]. Then submitting a bag of words which consists of the QA-Tokens [ 765 ]and some (all) of the words in the question (which is discussed in more detail later in this section) to the corpus for search will result in a set of text fragments containing the answer. The search itself and the determination of the answer is discussed in FIG. 8 . The issues of determining a single answer phrase from a set of returned text passages is not covered by this disclosure.
- the processing 230 of user input 205 to prepare it for submission to the search engine 260 proceeds in three stages.
- QA-Tokens [ 765 ] used in the system was enumerated.
- a Patterns-file [ 310 ] is used to determine a set of QA-Tokens [ 765 ] which describe the answer to a question.
- a Patterns-file [ 310 ] is shown in FIG. 3 .
- the data in the Patterns-file[ 310 ] is organized in six columns. Only columns 330 and 332 are required to contain data, the rest of the columns 331 , 334 , 336 , 338 can be empty. Each of the columns is described in turn. There is no limit on the number of rows in 320 .
- FIG. 3 shows six different row pattern types which can be repeated unlimited number of types and are just examples of many different possible patterns.
- the first column 330 in FIG. 3 labelled QA-Token [ 765 ] and captures the type of answer a question is stipulated to have. Entries in this column could be a single QA-Token [ 765 ] or a set of QA-Tokens [ 765 ] as a question could stipulate more than one type of answer. For example, the answer to a question starting with “Name . . . ” could be a person, an organization or anything else which has been named. In cases where a set of multiple QA-Tokens [ 765 ] are possible answer tokens they are grouped together.
- a preferred embodiment to denote this grouping is by enclosing the equivalent QA-Tokens [ 765 ] with parenthesis and prefixing it with the operator @SYN.
- Column 331 describes a weight for the different QA-Tokens [ 765 ] as described in the first column 330 .
- the weight of each QA-Token [ 765 ] defaults to 1 if it is not specified. Otherwise, the order of the weights in the second column corresponds to the order of the QA-Tokens [ 765 ] in the first column.
- These weights may be used in subsequent steps of the process described in the disclosure, like the search process itself or the finding of the most appropriate answer from the hit list.
- FIG. 4 shows one preferred embodiment of the algorithm.
- the Pattern-file [ 310 ] as described in FIG. 3 is the input as is shown box 410 as is the question Q as shown in box 405 .
- the algorithm terminates in box 420 .
- the next pattern is retrieved in box 430 from the pattern file.
- the Character c in column 332 of that pattern is determined in box 440
- the Detail d in column 334 of that pattern is determined in box 450 .
- box 460 c and d are concatenated leaving a blank space in between and forming a string S.
- the original question Q is shown in box 470 .
- box 480 The actual matching occurs in box 480 where it is tested whether S is a substring of Q.
- the symbol is a “.”. This symbol is a “wildcard”, it can stand for an arbitrary number of characters (including no character at all). If S is a substring of Q it is determined whether the current pattern or a previously matching pattern should be retained. This is shown in box 490 .
- the detail of box 490 are shown in FIG. 5 which is the priority algorithm.
- FIG. 5 describes the Priority Algorithm which is applied if two different patterns match a given question. For example there could be two patterns:
- the patterns For a question to match two different patterns and the character and the detail of the two patterns having the same number of words, the patterns have to contain wildcards. The question itself would first match on the first word it encountered in the pattern and then the second. Hence the count of words would differ in this case.
- the characteristic part which matches the Character of the pattern, the initial part which is that part of the question preceding the characteristic part (and which can be the null string), the detail part which matches the Detail of the pattern and the tail part which is that part of the string which follows the detail part.
- the question which gets submitted for further processing in the next couple of steps is the concatenation of the initial part, the QA-Tokens [ 765 ] as determined by the “best-match” pattern, the detail and end parts. In essence the characteristic part of the question gets replaced by the appropriate QA-Tokens [ 765 ], a fact which has to be taken into account when designing the Pattern-File [FIG. 3 ].
- Synonyms are words or phrases which mean the same. For example, a question may use a certain phrase, the text from where the answer is to be gotten may use a different phrase. To address this issue, the Remove and Add columns as described in the Patterns-File [FIG. 3 ] where introduced. However, there is a different angle to synonyms too. Several patterns could be the same, except for a single word or phrase. For example: The two questions: What is the salary? or What is the compensation? beg for the same type of answer (and hence QA-Token [ 765 ]) which is MONEY$.
- FIG. 5 a Toward this end a preferred embodiment of an Equivalence File is shown in FIG. 5 a.
- the first column has strings which start with an “ ” underscore symbol and is referred to as the type. It points to a linked list of strings which are all equivalent.
- the Patterns-File [FIG. 3 ] the pattern “MONEY$ how much salary” is denoted as “MONEY$ how much_money” to use the example in FIG. 5 a .
- the question Q as shown in box 405 in FIG. 4 is not the original question as posed by the user but is preprocessed. It checks whether a word in the question is a member of any of the linked lists, if so, it replaces the word by its type.
- the data is not stored as a set of linked list but as an associative array. Using that data structure, the “lookup” of the type of a word can be done efficiently.
- An aspect of the system is that the type of analysis on the question is in sync with the type of analysis done on the corpus of text where the answer is found. Towards this end the following steps are performed in the question analysis if they are performed in the indexing part:
- stop word file [ 246 ] Another file used in the processing of the question is the stop word file [ 246 ]. This is just a plain file consisting of words which should be eliminated from a question as they would not add any additional information and may actually skew the search results. Typical examples are “and, or, is, have, the”. Words which are mentioned in the stop word file [ 246 ] are removed from the question.
- the collection vocabulary file [ 722 ] is used in the system.
- a file is created using a vocabulary file created during indexing time, which contains all the words and some relevant statistics of the words in the collection.
- a collection vocabulary file creator determines which words are equivalent. For example, it may determine that President Bill Clinton and President William Jefferson Clinton are the same person.
- the query analyzer can then take each word in the query and determine from the collection vocabulary file [ 722 ] all its equivalent words. When submitting a bag of words as previously described to the search engine, all the equivalent words enclosed in a @SYN operator are submitted too.
- This stage consists of attaching weights to query terms and to specifying the text window within which the search engine 260 is to operate.
- weighting There are many possible ways to indicate weighting.
- a preferred embodiment is to use the @WEIGHT operator which takes a weight and a terms as arguments.
- the term in the query becomes @WEIGHT (N computer).
- weighting schemes described in the literature mostly employing term-frequency and inverse-document frequency calculations.
- a preferred weighting scheme for our invention is as follows.
- QA-Tokens are assigned a weight of 4
- a preferred embodiment of specification of window size that is uniform with the @SYN and @WEIGHT syntax is to use the @WINDOW operator.
- the first argument N is the window size
- the second is the entire query.
- a possible modification of this scheme is to specify that the window is dynamic-N, which will cause the search engine to try all window sizes from 1 up to N. This is so that if all query terms that match within a window of size N sentences actually fall within a sub-window of M ⁇ N consecutive sentences then the smaller window match will be the one returned to the user.
- Another modification of this scheme is to allow the user to specify that matching be exclusive—that is that any QA-Token in the query does match a term in text that already matches some other query term.
- a preferred embodiment of this specification is to use the @EXECWIN operator instead of the @WINDOW operator.
- the output of the Query Processing will be: @EXECWIN(dynamic-2 @WEIGHT(4 @SYN(PERSON$ NAME$)) @WEIGHT(1wife) @WEIGHT(2 mich))
- FIG. 6 is a block diagram of an index 130 , which, at a minimum, consists of an inverted file 600 .
- An inverted file 600 contains an inverted list 610 for every indexable feature identified during document analysis (see FIG. 7 ).
- An inverted list 610 contains a document entry 620 for every document in which the corresponding feature appears.
- a document entry 620 contains a document identifier 621 that identifies the corresponding document, and a location entry 630 for every occurrence of the feature in the document.
- a location entry 630 identifies where in the document the feature occurs, and includes a sentence number 631 identifying the sentence, a word number 632 identifying the word in the sentence, and a length 633 indicating how many words make up the feature.
- the features 607 in an inverted file 600 are typically organized in a dictionary 605 , which allows the inverted list 610 for a particular term 607 to be accessed.
- FIG. 7 is a flowchart showing the method steps for document analysis in one preferred embodiment of the present invention.
- the first stage of the back-end process 710 is Tokenization 720 which extracts the individual words from the input and assigns to them lexical features.
- a preferred embodiment of the output of this process is a linked Word List 740 of Word-List-Elements (WLEs) 745 , with which are associated any properties that the Tokenizer system 720 can identify. Possible properties include but are not limited to: part-of-speech, whether capitalized, lemma form.
- WLEs 745 are linked together in a standard linked-list fashion, but with the ability to accommodate Augmentations 750 on the linked list.
- An augmentation is simply a new fragment of the word-list 740 that replaces an existing fragment, but keeps the old fragment accessible as a side-chain 755 .
- Augmentations will be generated by the Augmentation process described below, and serve as a mechanism to label segments of the word-list 740 . Augmentations may be applied to augmentations, if desired.
- a first round of augmentations may be generated by the Tokenizer 720 itself. For example, whole numbers may identified during tokenization and so labelled with the augmentation :CARDINAL. (The colon‘:’ is merely a syntactic construct to avoid confusion with any instances of the actual word in text.)
- any patterns 775 described below that involve cardinal numbers say, may employ the identifier :CARDINAL to avoid having a specific pattern instance for every possible numerical value.
- the Augmentation process 730 takes as input a Word-List 740 and a QA-Token file 760 . It is assumed that the Augmentation process has the capability of accepting one or more input patterns 775 and a text-stream 740 , and identifying any and all locations in the text-stream 740 where instances of the patterns 775 occur. This is a standard capability of text parsers described in the prior art.
- the QA-Token file 760 consists of a number of records 762 each of which has two fields: a QA-Token 765 and a pointer or reference 767 to a QA-File.
- the QA-Token file consists of one or more patterns 775 written in whatever syntax the pattern-matcher in the Augmentor 730 requires.
- the QA-Token is the identifier used to mark the location and existence of the patterns 775 .
- An example of a QA-Token file and two QA-Files are shown in FIG. 7 b.
- variable_WEIGHT might be defined to stand for the set ⁇ pounds, ounces, tons . . . ⁇ and an individual pattern 775 a might reference it by “:CARDINAL_WEIGHT”, say, in so doing encoding all patterns that consist of a cardinal number followed by one of the given units of weight measurement.
- Such a mechanism is useful for efficiency, and is present in the preferred embodiment, but is not required for the correct operation of this invention.
- Implementation of a parser that can accept such variables in its patterns is standard in the prior art.
- step 780 WLE-pointer 781 is set to point to the first WLE of Word-List 740 .
- Step 782 iterates through all records 762 in QA-Token file 760 .
- a particular record 762 a is selected, consisting of QA-Token 765 a and pointer 767 a to QA-file 770 a .
- Step 784 iterates through every pattern 775 in QA-file 770 a in turn.
- a particular pattern 775 b is selected.
- step 786 the pattern-matcher 730 attempts to match pattern 775 b with the Word-List 740 anchored at the point marked by the WLE-pointer 781 . If a match occurs, step 788 is executed and an augmentation 755 b is added to the Word-List at point 781 , labelled with the current QA-Token 7765 a. Step 790 is then executed in which it is tested to see if the Word-List Pointer 781 is at the end of the Word-List 740 . If it is, then exit point 798 is reached, otherwise Word-List Pointer 781 is advanced (step 792 ) and the execution returns to step 782 . If in step 786 no match occurs, step 784 continues to iterate through all patterns 775 .
- step 782 continues the iteration though all QA-token files 760 .
- step 794 is executed to see if the Word-List pointer 781 is at the end of the Word-List 740 . If it is, then exit point 798 is reached, otherwise Word-List Pointer 781 is advanced (step 796 ) and the execution restarts step 782 .
- the output of this process is an Augmented Word-List 757 .
- Augmented Word-List 757 is a preferred embodiment of a representation of features added to a sequence of text.
- Alternative means include, but are not limited to, markup such as XML.
- markup such as XML.
- the Inverted File 600 is built from the Augmented Word-List 757 . This process is depicted in FIG. 7 d .
- Step 710 initializes the process, setting the word list pointer to the first entry in the augmented word list.
- Step 712 iterates over each entry in the augmented word list. Every entry in the word list (tokens, augmentations, and QA-tokens) is considered an indexable feature. In each case, the “canonical form” of the indexable feature is used for indexing purposes (e.g., lemma form, QA-token string, etc.).
- Step 714 the current word list entry is looked up in the Dictionary 605 .
- Step 716 a new entry for the indexable feature is created in the dictionary in Step 716 .
- Step 718 the Inverted List 610 for the current indexable feature is updated by adding a Location Entry 630 to the Document Entry 620 at the end of the inverted list.
- the location entry contains the sentence number 631 , word number 632 , and length 633 of the indexable feature. This information is obtained from the Word List-Entry 745 for the indexable feature. Processing then iterates at Step 712 until there are no more entries on the word list. Processing completes in step 720 , where the updated Inverted File 600 is saved.
- FIG. 8 is a flowchart showing the method, steps for search in one preferred embodiment of the present invention.
- the search process 800 starts with initialization step 810 .
- the search query 250 is parsed, the indexed features identified in the query are located in the index 600 , the corresponding inverted lists 610 are retrieved from the index, and any synonym operators in the query are evaluated by combining the inverted lists for features in the synonym.
- step 820 After initialization, a loop to score all of the documents is entered in 820 . If there are more documents to score, scoring of the next document proceeds in step 830 . Otherwise execution continues with step 880 (described below).
- step 830 the current document to score is initialized, which includes identifying the possible sentence windows within the document to score. The number of sentences in the sentence window specified in the query 250 .
- the search process then enters a loop in 840 to score each window in the current document. If there are no more windows to score, the document is added to the hit-list (an array of scored documents) in step 845 , and execution continues at 820 . If there are more windows to score, the current window is initialized in step 850 . During step 850 , any occurrences of the features from the query 250 are located in the current window, the current window's score is initialized to 0, and a loop to score each feature is entered in 860 .
- step 870 if there are more features to score in the current window, execution continues in step 870 .
- the window's score is incremented by the weight of the feature.
- the weight may be binary or a more complex tf*idf weight, and it may be modified by a weighting factor specified in the query 250 .
- the preferred embodiment uses modified binary weights.
- the features may also be found in the window in an exclusive fashion, meaning that the word positions of the features found in the current window may not overlap. (Recall from FIG. 7 that the features indexed for a document may have overlapping word positions if multiple features are found for the same word during document analysis). Whether or not the features are found in an exclusive fashion and the order in which they are found is specified in the query 250 .
- the window score may be modified by a density factor, where the distance between the first query feature to appear in the window and the last query feature to appear in the window is measured and factored into the window score.
- the density factor is computed as the inverse of the measured distance and is added to the window score.
- the smaller the distance i.e., the more dense the query features are in the window
- the current window score is then compared with the best window score so far for the current document. If the current window score exceeds the document's best window score, the document's best window score is updated with the current window score. Execution then continues with the next window for the current document in step 840 .
- the hit-list of documents is sorted by document score and the top n hits are returned as Result List 270 .
- the number of hits n to return is specified with the query 250 .
- Each hit identifies the document, the document score, and the window in the document that produced that score.
Abstract
Description
PLACE$ | In the Rocky Mountains | ||
COUNTRY$ | United Kingdom | ||
STATE$ | Massachusetts | ||
PERSON$ | Albert Einstein | ||
ROLE$ | doctor | ||
NAME$ | the Shakespeare Festival | ||
ORG$ | the US Post Office | ||
DURATION$ | for 5 centuries | ||
AGE$ | 30 years old | ||
YEAR$ | 1999 | ||
TIME$ | in the afternoon | ||
DATE$ | July 4th, 1776 | ||
VOLUME$ | 3 gallons | ||
AREA$ | 4 square inches | ||
LENGTH$ | 3 miles | ||
WEIGHT$ | 25 tons | ||
NUMBER$ | 1,234.5 | ||
METHOD$ | by rubbing | ||
RATE$ | 50 per cent | ||
MONEY$ | 4 million dollars | ||
Claims (13)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/495,645 US6665666B1 (en) | 1999-10-26 | 2000-02-01 | System, method and program product for answering questions using a search engine |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16142799P | 1999-10-26 | 1999-10-26 | |
US09/495,645 US6665666B1 (en) | 1999-10-26 | 2000-02-01 | System, method and program product for answering questions using a search engine |
Publications (1)
Publication Number | Publication Date |
---|---|
US6665666B1 true US6665666B1 (en) | 2003-12-16 |
Family
ID=29714733
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/495,645 Expired - Lifetime US6665666B1 (en) | 1999-10-26 | 2000-02-01 | System, method and program product for answering questions using a search engine |
Country Status (1)
Country | Link |
---|---|
US (1) | US6665666B1 (en) |
Cited By (131)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020049922A1 (en) * | 2000-10-25 | 2002-04-25 | Neocore Inc. | Search engine system and method |
US20020049769A1 (en) * | 2000-10-19 | 2002-04-25 | Shimadzu Corporation | Scientific information inquiry-answer system, and a host computer and an inquiring computer therefor |
US20020138337A1 (en) * | 2001-03-22 | 2002-09-26 | Fujitsu Limited | Question and answering apparatus, question and answering method, and question and answering program |
US20030061028A1 (en) * | 2001-09-21 | 2003-03-27 | Knumi Inc. | Tool for automatically mapping multimedia annotations to ontologies |
US20030069880A1 (en) * | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US20030140035A1 (en) * | 2002-01-07 | 2003-07-24 | Michael Burrows | System and method for indexing and querying structured text |
US20030145001A1 (en) * | 2002-01-31 | 2003-07-31 | Comtext Systems Inc. | Computerized information search and indexing method, software and device |
US20030171914A1 (en) * | 2000-04-18 | 2003-09-11 | Il-Hyung Jung | Method and system for retrieving information based on meaningful core word |
US20040078568A1 (en) * | 2002-10-16 | 2004-04-22 | Duc Pham | Secure file system server architecture and methods |
US20040117352A1 (en) * | 2000-04-28 | 2004-06-17 | Global Information Research And Technologies Llc | System for answering natural language questions |
US20040254917A1 (en) * | 2003-06-13 | 2004-12-16 | Brill Eric D. | Architecture for generating responses to search engine queries |
US20040267737A1 (en) * | 2003-06-24 | 2004-12-30 | Kazuhisa Takazawa | Database search system |
US7007015B1 (en) * | 2002-05-01 | 2006-02-28 | Microsoft Corporation | Prioritized merging for full-text index on relational store |
US20060047690A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Integration of Flex and Yacc into a linguistic services platform for named entity recognition |
US20060047500A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Named entity recognition using compiler methods |
US20060047691A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Creating a document index from a flex- and Yacc-generated named entity recognizer |
US20060112036A1 (en) * | 2004-10-01 | 2006-05-25 | Microsoft Corporation | Method and system for identifying questions within a discussion thread |
US20060116996A1 (en) * | 2003-06-18 | 2006-06-01 | Microsoft Corporation | Utilizing information redundancy to improve text searches |
US20060259510A1 (en) * | 2000-04-26 | 2006-11-16 | Yves Schabes | Method for detecting and fulfilling an information need corresponding to simple queries |
US20060293879A1 (en) * | 2005-05-31 | 2006-12-28 | Shubin Zhao | Learning facts from semi-structured text |
US20070016583A1 (en) * | 2005-07-14 | 2007-01-18 | Ronny Lempel | Enforcing native access control to indexed documents |
US20070022109A1 (en) * | 2005-07-25 | 2007-01-25 | Tomasz Imielinski | Systems and methods for answering user questions |
WO2005089291A3 (en) * | 2004-03-15 | 2007-03-29 | Yahoo Inc | Search system and methods with integration of user annotations from a trust network |
US20070073651A1 (en) * | 2005-09-23 | 2007-03-29 | Tomasz Imielinski | System and method for responding to a user query |
GB2430770A (en) * | 2005-09-28 | 2007-04-04 | Oracle Int Corp | Query Generator |
US20070078842A1 (en) * | 2005-09-30 | 2007-04-05 | Zola Scot G | System and method for responding to a user reference query |
US20070094285A1 (en) * | 2005-10-21 | 2007-04-26 | Microsoft Corporation | Question answering over structured content on the web |
US20070136246A1 (en) * | 2005-11-30 | 2007-06-14 | At&T Corp. | Answer determination for natural language questioning |
US20070192442A1 (en) * | 2001-07-24 | 2007-08-16 | Brightplanet Corporation | System and method for efficient control and capture of dynamic database content |
US7302639B1 (en) | 2001-06-19 | 2007-11-27 | Microstrategy, Inc. | Report system and method using prompt in prompt objects |
US20070276829A1 (en) * | 2004-03-31 | 2007-11-29 | Niniane Wang | Systems and methods for ranking implicit search results |
US20080040339A1 (en) * | 2006-08-07 | 2008-02-14 | Microsoft Corporation | Learning question paraphrases from log data |
US7356758B1 (en) | 2001-06-19 | 2008-04-08 | Microstrategy Incorporated | System and method for run-time report resolution of reports that include prompt objects |
US20080133473A1 (en) * | 2006-11-30 | 2008-06-05 | Broder Andrei Z | Efficient multifaceted search in information retrieval systems |
US20080154828A1 (en) * | 2006-12-21 | 2008-06-26 | Support Machines Ltd. | Method and a Computer Program Product for Providing a Response to A Statement of a User |
US20080201132A1 (en) * | 2000-11-15 | 2008-08-21 | International Business Machines Corporation | System and method for finding the most likely answer to a natural language question |
US20080228718A1 (en) * | 2007-03-15 | 2008-09-18 | International Business Machines Corporation | System and method for multi-dimensional aggregation over large text corpora |
US20080270388A1 (en) * | 2007-04-26 | 2008-10-30 | Nhn Corporation | Method for providing keyword based on keyword providing range and system thereof |
US20080294634A1 (en) * | 2004-09-24 | 2008-11-27 | International Business Machines Corporation | System and article of manufacture for searching documents for ranges of numeric values |
US20080307320A1 (en) * | 2006-09-05 | 2008-12-11 | Payne John M | Online system and method for enabling social search and structured communications among social networks |
US20090083270A1 (en) * | 2004-01-26 | 2009-03-26 | International Business Machines Corporation | System and program for handling anchor text |
US7523100B1 (en) | 2005-02-28 | 2009-04-21 | Adobe Systems Incorporated | Method and apparatus for using a rendered form as a search template |
US20090164426A1 (en) * | 2007-12-21 | 2009-06-25 | Microsoft Corporation | Search engine platform |
US20090276408A1 (en) * | 2004-03-31 | 2009-11-05 | Google Inc. | Systems And Methods For Generating A User Interface |
US20090292687A1 (en) * | 2008-05-23 | 2009-11-26 | International Business Machines Corporation | System and method for providing question and answers with deferred type evaluation |
US20090327269A1 (en) * | 2008-06-27 | 2009-12-31 | Microsoft Corporation | Pattern generation |
US20100023318A1 (en) * | 2006-01-20 | 2010-01-28 | Julien Lemoine | Method and device for retrieving data and transforming same into qualitative data of a text-based document |
US20100030769A1 (en) * | 2008-08-04 | 2010-02-04 | Microsoft Corporation | Clustering question search results based on topic and focus |
US7664734B2 (en) | 2004-03-31 | 2010-02-16 | Google Inc. | Systems and methods for generating multiple implicit search queries |
US20100049498A1 (en) * | 2008-08-25 | 2010-02-25 | Microsoft Corporation | Determining utility of a question |
US20100077001A1 (en) * | 2008-03-27 | 2010-03-25 | Claude Vogel | Search system and method for serendipitous discoveries with faceted full-text classification |
US7707142B1 (en) | 2004-03-31 | 2010-04-27 | Google Inc. | Methods and systems for performing an offline search |
US7725811B1 (en) * | 2001-06-19 | 2010-05-25 | Microstrategy, Inc. | Report system and method using prompt object abstraction |
US20100198857A1 (en) * | 2009-02-04 | 2010-08-05 | Yahoo! Inc. | Rare query expansion by web feature matching |
US7788274B1 (en) | 2004-06-30 | 2010-08-31 | Google Inc. | Systems and methods for category-based search |
US20100235164A1 (en) * | 2009-03-13 | 2010-09-16 | Invention Machine Corporation | Question-answering system and method based on semantic labeling of text documents and user questions |
US20100250235A1 (en) * | 2009-03-24 | 2010-09-30 | Microsoft Corporation | Text analysis using phrase definitions and containers |
US7831545B1 (en) * | 2005-05-31 | 2010-11-09 | Google Inc. | Identifying the unifying subject of a set of facts |
US7860815B1 (en) * | 2006-07-12 | 2010-12-28 | Venkateswara Prasad Tangirala | Computer knowledge representation format, system, methods, and applications |
US7861161B1 (en) | 2001-06-19 | 2010-12-28 | Microstrategy, Inc. | Report system and method using prompt objects |
US7873632B2 (en) | 2004-03-31 | 2011-01-18 | Google Inc. | Systems and methods for associating a keyword with a user interface area |
US7908260B1 (en) | 2006-12-29 | 2011-03-15 | BrightPlanet Corporation II, Inc. | Source editing, internationalization, advanced configuration wizard, and summary page selection for information automation systems |
US20110066620A1 (en) * | 2009-09-11 | 2011-03-17 | IntelljResponse Systems Inc. | Automated Boolean Expression Generation for Computerized Search and Indexing |
US7925616B2 (en) | 2001-06-19 | 2011-04-12 | Microstrategy, Incorporated | Report system and method using context-sensitive prompt objects |
US20110125734A1 (en) * | 2009-11-23 | 2011-05-26 | International Business Machines Corporation | Questions and answers generation |
US7966291B1 (en) | 2007-06-26 | 2011-06-21 | Google Inc. | Fact-based object merging |
US7970766B1 (en) | 2007-07-23 | 2011-06-28 | Google Inc. | Entity type assignment |
US7991797B2 (en) | 2006-02-17 | 2011-08-02 | Google Inc. | ID persistence through normalization |
US8027973B2 (en) | 2008-08-04 | 2011-09-27 | Microsoft Corporation | Searching questions based on topic and focus |
US8041713B2 (en) | 2004-03-31 | 2011-10-18 | Google Inc. | Systems and methods for analyzing boilerplate |
US20120011139A1 (en) * | 2010-07-12 | 2012-01-12 | International Business Machines Corporation | Unified numerical and semantic analytics system for decision support |
US8122026B1 (en) | 2006-10-20 | 2012-02-21 | Google Inc. | Finding and disambiguating references to entities on web pages |
US8131754B1 (en) | 2004-06-30 | 2012-03-06 | Google Inc. | Systems and methods for determining an article association measure |
US20120084293A1 (en) * | 2010-09-24 | 2012-04-05 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US8239350B1 (en) | 2007-05-08 | 2012-08-07 | Google Inc. | Date ambiguity resolution |
US8244689B2 (en) | 2006-02-17 | 2012-08-14 | Google Inc. | Attribute entropy as a signal in object normalization |
US8260785B2 (en) | 2006-02-17 | 2012-09-04 | Google Inc. | Automatic object reference identification and linking in a browseable fact repository |
US8275803B2 (en) | 2008-05-14 | 2012-09-25 | International Business Machines Corporation | System and method for providing answers to questions |
US8296304B2 (en) | 2004-01-26 | 2012-10-23 | International Business Machines Corporation | Method, system, and program for handling redirects in a search engine |
US8347202B1 (en) | 2007-03-14 | 2013-01-01 | Google Inc. | Determining geographic locations for place names in a fact repository |
US8402047B1 (en) | 2005-02-25 | 2013-03-19 | Adobe Systems Incorporated | Method and apparatus for generating a query to search for matching forms |
US8447771B2 (en) | 2006-11-20 | 2013-05-21 | Oracle International Corporation | Query generation |
US20130339003A1 (en) * | 2012-06-19 | 2013-12-19 | International Business Machines Corporation | Assisted Free Form Decision Definition Using Rules Vocabulary |
US8631001B2 (en) | 2004-03-31 | 2014-01-14 | Google Inc. | Systems and methods for weighting a search query result |
US8650175B2 (en) | 2005-03-31 | 2014-02-11 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US8682913B1 (en) | 2005-03-31 | 2014-03-25 | Google Inc. | Corroborating facts extracted from multiple sources |
US8700568B2 (en) | 2006-02-17 | 2014-04-15 | Google Inc. | Entity normalization via name normalization |
US8738643B1 (en) | 2007-08-02 | 2014-05-27 | Google Inc. | Learning synonymous object names from anchor texts |
US8812435B1 (en) | 2007-11-16 | 2014-08-19 | Google Inc. | Learning objects and facts from documents |
US8849807B2 (en) | 2010-05-25 | 2014-09-30 | Mark F. McLellan | Active search results page ranking technology |
US8892550B2 (en) | 2010-09-24 | 2014-11-18 | International Business Machines Corporation | Source expansion for information retrieval and information extraction |
US20150032508A1 (en) * | 2013-07-29 | 2015-01-29 | International Business Machines Corporation | Systems And Methods For Probing Customers And Making Offers In An Interactive Setting |
US8996470B1 (en) | 2005-05-31 | 2015-03-31 | Google Inc. | System for ensuring the internal consistency of a fact repository |
US9009153B2 (en) | 2004-03-31 | 2015-04-14 | Google Inc. | Systems and methods for identifying a named entity |
US9208229B2 (en) | 2005-03-31 | 2015-12-08 | Google Inc. | Anchor text summarization for corroboration |
US9396235B1 (en) * | 2013-12-13 | 2016-07-19 | Google Inc. | Search ranking based on natural language query patterns |
US9471668B1 (en) * | 2016-01-21 | 2016-10-18 | International Business Machines Corporation | Question-answering system |
US20170017716A1 (en) * | 2015-07-13 | 2017-01-19 | International Business Machines Corporation | Generating Probabilistic Annotations for Entities and Relations Using Reasoning and Corpus-Level Evidence |
US20170053020A1 (en) * | 2010-09-28 | 2017-02-23 | International Business Machines Corporation | Providing answers to questions using multiple models to score candidate answers |
EP3142028A3 (en) * | 2015-09-11 | 2017-07-12 | Google, Inc. | Handling failures in processing natural language queries through user interactions |
US9898554B2 (en) | 2013-11-18 | 2018-02-20 | Google Inc. | Implicit question query identification |
US20180189657A1 (en) * | 2017-01-05 | 2018-07-05 | International Business Machines Corporation | DEPLOYING LOCAL Q AND A SYSTEMS IN IoT DEVICES |
US20180211286A1 (en) * | 2017-01-24 | 2018-07-26 | International Business Machines Corporation | Digital content generation based on user feedback |
US20190272269A1 (en) * | 2011-07-19 | 2019-09-05 | Maluuba Inc. | Method and system of classification in a natural language user interface |
US10467344B1 (en) | 2018-08-02 | 2019-11-05 | Sas Institute Inc. | Human language analyzer for detecting clauses, clause types, and clause relationships |
CN110516127A (en) * | 2019-08-28 | 2019-11-29 | 百度在线网络技术（北京）有限公司 | Division methods, device, electronic equipment and the storage medium of more demand searching requests |
US20200044993A1 (en) * | 2017-03-16 | 2020-02-06 | Microsoft Technology Licensing, Llc | Generating responses in automated chatting |
US10558689B2 (en) | 2017-11-15 | 2020-02-11 | International Business Machines Corporation | Leveraging contextual information in topic coherent question sequences |
US10614725B2 (en) | 2012-09-11 | 2020-04-07 | International Business Machines Corporation | Generating secondary questions in an introspective question answering system |
CN111666376A (en) * | 2020-05-21 | 2020-09-15 | 武汉大学 | Answer generation method and device based on paragraph boundary scan prediction and word shift distance cluster matching |
US10963649B1 (en) | 2018-01-17 | 2021-03-30 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation using an invocable analysis service and configuration-driven analytics |
US11030408B1 (en) | 2018-02-19 | 2021-06-08 | Narrative Science Inc. | Applied artificial intelligence technology for conversational inferencing using named entity reduction |
US11042713B1 (en) | 2018-06-28 | 2021-06-22 | Narrative Scienc Inc. | Applied artificial intelligence technology for using natural language processing to train a natural language generation system |
US11042708B1 (en) * | 2018-01-02 | 2021-06-22 | Narrative Science Inc. | Context saliency-based deictic parser for natural language generation |
US11068661B1 (en) | 2017-02-17 | 2021-07-20 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation based on smart attributes |
US11074250B2 (en) * | 2017-06-27 | 2021-07-27 | OWOX Limted | Technologies for implementing ontological models for natural language queries |
US11093740B2 (en) * | 2018-11-09 | 2021-08-17 | Microsoft Technology Licensing, Llc | Supervised OCR training for custom forms |
US11144838B1 (en) | 2016-08-31 | 2021-10-12 | Narrative Science Inc. | Applied artificial intelligence technology for evaluating drivers of data presented in visualizations |
US11170038B1 (en) | 2015-11-02 | 2021-11-09 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from multiple visualizations |
US11222184B1 (en) | 2015-11-02 | 2022-01-11 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from bar charts |
US11232268B1 (en) | 2015-11-02 | 2022-01-25 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from line charts |
US11238090B1 (en) | 2015-11-02 | 2022-02-01 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from visualization data |
US11288328B2 (en) | 2014-10-22 | 2022-03-29 | Narrative Science Inc. | Interactive and conversational data exploration |
US11521079B2 (en) | 2010-05-13 | 2022-12-06 | Narrative Science Inc. | Method and apparatus for triggering the automatic generation of narratives |
CN115470323A (en) * | 2022-10-31 | 2022-12-13 | 中建电子商务有限责任公司 | Method for improving searching precision of building industry based on word segmentation technology |
US11556544B2 (en) | 2004-03-15 | 2023-01-17 | Slack Technologies, Llc | Search system and methods with integration of user annotations from a trust network |
US11568148B1 (en) | 2017-02-17 | 2023-01-31 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation based on explanation communication goals |
US11741301B2 (en) | 2010-05-13 | 2023-08-29 | Narrative Science Inc. | System and method for using data and angles to automatically generate a narrative story |
US11790164B2 (en) | 2011-01-07 | 2023-10-17 | Narrative Science Inc. | Configurable and portable system for generating narratives |
US11954445B2 (en) | 2017-02-17 | 2024-04-09 | Narrative Science Llc | Applied artificial intelligence technology for narrative generation based on explanation communication goals |
US11966389B2 (en) * | 2019-02-13 | 2024-04-23 | International Business Machines Corporation | Natural language to structured query generation via paraphrasing |
Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5297039A (en) * | 1991-01-30 | 1994-03-22 | Mitsubishi Denki Kabushiki Kaisha | Text search system for locating on the basis of keyword matching and keyword relationship matching |
US5309359A (en) | 1990-08-16 | 1994-05-03 | Boris Katz | Method and apparatus for generating and utlizing annotations to facilitate computer text retrieval |
US5321608A (en) * | 1990-11-30 | 1994-06-14 | Hitachi, Ltd. | Method and system for processing natural language |
US5369575A (en) * | 1992-05-15 | 1994-11-29 | International Business Machines Corporation | Constrained natural language interface for a computer system |
US5384894A (en) * | 1991-05-16 | 1995-01-24 | International Business Machines Corp. | Fuzzy reasoning database question answering system |
US5404295A (en) | 1990-08-16 | 1995-04-04 | Katz; Boris | Method and apparatus for utilizing annotations to facilitate computer retrieval of database material |
US5418948A (en) * | 1991-10-08 | 1995-05-23 | West Publishing Company | Concept matching of natural language queries with a database of document concepts |
US5442780A (en) * | 1991-07-11 | 1995-08-15 | Mitsubishi Denki Kabushiki Kaisha | Natural language database retrieval system using virtual tables to convert parsed input phrases into retrieval keys |
US5819265A (en) | 1996-07-12 | 1998-10-06 | International Business Machines Corporation | Processing names in a text |
US5832480A (en) | 1996-07-12 | 1998-11-03 | International Business Machines Corporation | Using canonical forms to develop a dictionary of names in a text |
US5884302A (en) * | 1996-12-02 | 1999-03-16 | Ho; Chi Fai | System and method to answer a question |
US6076088A (en) * | 1996-02-09 | 2000-06-13 | Paik; Woojin | Information extraction system and method using concept relation concept (CRC) triples |
US6081774A (en) * | 1997-08-22 | 2000-06-27 | Novell, Inc. | Natural language information retrieval system and method |
US6094649A (en) * | 1997-12-22 | 2000-07-25 | Partnet, Inc. | Keyword searches of structured databases |
US6173279B1 (en) * | 1998-04-09 | 2001-01-09 | At&T Corp. | Method of using a natural language interface to retrieve information from one or more data resources |
US6233547B1 (en) * | 1998-12-08 | 2001-05-15 | Eastman Kodak Company | Computer program product for retrieving multi-media objects using a natural language having a pronoun |
US6295529B1 (en) * | 1998-12-24 | 2001-09-25 | Microsoft Corporation | Method and apparatus for indentifying clauses having predetermined characteristics indicative of usefulness in determining relationships between different texts |
US6487545B1 (en) * | 1995-05-31 | 2002-11-26 | Oracle Corporation | Methods and apparatus for classifying terminology utilizing a knowledge catalog |
US6584464B1 (en) * | 1999-03-19 | 2003-06-24 | Ask Jeeves, Inc. | Grammar template query system |
-
2000
- 2000-02-01 US US09/495,645 patent/US6665666B1/en not_active Expired - Lifetime
Patent Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5309359A (en) | 1990-08-16 | 1994-05-03 | Boris Katz | Method and apparatus for generating and utlizing annotations to facilitate computer text retrieval |
US5404295A (en) | 1990-08-16 | 1995-04-04 | Katz; Boris | Method and apparatus for utilizing annotations to facilitate computer retrieval of database material |
US5321608A (en) * | 1990-11-30 | 1994-06-14 | Hitachi, Ltd. | Method and system for processing natural language |
US5297039A (en) * | 1991-01-30 | 1994-03-22 | Mitsubishi Denki Kabushiki Kaisha | Text search system for locating on the basis of keyword matching and keyword relationship matching |
US5384894A (en) * | 1991-05-16 | 1995-01-24 | International Business Machines Corp. | Fuzzy reasoning database question answering system |
US5442780A (en) * | 1991-07-11 | 1995-08-15 | Mitsubishi Denki Kabushiki Kaisha | Natural language database retrieval system using virtual tables to convert parsed input phrases into retrieval keys |
US5418948A (en) * | 1991-10-08 | 1995-05-23 | West Publishing Company | Concept matching of natural language queries with a database of document concepts |
US5369575A (en) * | 1992-05-15 | 1994-11-29 | International Business Machines Corporation | Constrained natural language interface for a computer system |
US6487545B1 (en) * | 1995-05-31 | 2002-11-26 | Oracle Corporation | Methods and apparatus for classifying terminology utilizing a knowledge catalog |
US6076088A (en) * | 1996-02-09 | 2000-06-13 | Paik; Woojin | Information extraction system and method using concept relation concept (CRC) triples |
US5819265A (en) | 1996-07-12 | 1998-10-06 | International Business Machines Corporation | Processing names in a text |
US5832480A (en) | 1996-07-12 | 1998-11-03 | International Business Machines Corporation | Using canonical forms to develop a dictionary of names in a text |
US5884302A (en) * | 1996-12-02 | 1999-03-16 | Ho; Chi Fai | System and method to answer a question |
US6081774A (en) * | 1997-08-22 | 2000-06-27 | Novell, Inc. | Natural language information retrieval system and method |
US6094649A (en) * | 1997-12-22 | 2000-07-25 | Partnet, Inc. | Keyword searches of structured databases |
US6173279B1 (en) * | 1998-04-09 | 2001-01-09 | At&T Corp. | Method of using a natural language interface to retrieve information from one or more data resources |
US6233547B1 (en) * | 1998-12-08 | 2001-05-15 | Eastman Kodak Company | Computer program product for retrieving multi-media objects using a natural language having a pronoun |
US6295529B1 (en) * | 1998-12-24 | 2001-09-25 | Microsoft Corporation | Method and apparatus for indentifying clauses having predetermined characteristics indicative of usefulness in determining relationships between different texts |
US6584464B1 (en) * | 1999-03-19 | 2003-06-24 | Ask Jeeves, Inc. | Grammar template query system |
Non-Patent Citations (3)
Title |
---|
Byrd, R. J. et al., "Identifying and Extracting Relations in Text," Proceedings of NLDB 99, Klagenfurt, Austria, 5 pages. |
Kupiec, J., "MURAX: A Robust Linguistic Approach For Question Answering Using An On-Line Encyclopedia," ACM-SIGIR '93-Pittsburgh, PA USA, pp. 181-190. |
Ravin, Y. et al., "Extracting Names from Natural-Language Text," IBM Research eport 20338, 1996, 1-30. |
Cited By (229)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030171914A1 (en) * | 2000-04-18 | 2003-09-11 | Il-Hyung Jung | Method and system for retrieving information based on meaningful core word |
US20090144249A1 (en) * | 2000-04-18 | 2009-06-04 | Kt Corporation | Method and system for retrieving information based on meaningful core word |
US20060259510A1 (en) * | 2000-04-26 | 2006-11-16 | Yves Schabes | Method for detecting and fulfilling an information need corresponding to simple queries |
US20040117352A1 (en) * | 2000-04-28 | 2004-06-17 | Global Information Research And Technologies Llc | System for answering natural language questions |
US6990500B2 (en) * | 2000-10-19 | 2006-01-24 | Shimadzu Corporation | Scientific information inquiry-answer system, and a host computer and an inquiring computer therefor |
US20020049769A1 (en) * | 2000-10-19 | 2002-04-25 | Shimadzu Corporation | Scientific information inquiry-answer system, and a host computer and an inquiring computer therefor |
US20020049922A1 (en) * | 2000-10-25 | 2002-04-25 | Neocore Inc. | Search engine system and method |
US8417514B2 (en) | 2000-11-15 | 2013-04-09 | International Business Machines Corporation | System and method for finding the most likely answer to a natural language question |
US8340955B2 (en) * | 2000-11-15 | 2012-12-25 | International Business Machines Corporation | System and method for finding the most likely answer to a natural language question |
US20080201132A1 (en) * | 2000-11-15 | 2008-08-21 | International Business Machines Corporation | System and method for finding the most likely answer to a natural language question |
US20020138337A1 (en) * | 2001-03-22 | 2002-09-26 | Fujitsu Limited | Question and answering apparatus, question and answering method, and question and answering program |
US7302639B1 (en) | 2001-06-19 | 2007-11-27 | Microstrategy, Inc. | Report system and method using prompt in prompt objects |
US7861161B1 (en) | 2001-06-19 | 2010-12-28 | Microstrategy, Inc. | Report system and method using prompt objects |
US7356758B1 (en) | 2001-06-19 | 2008-04-08 | Microstrategy Incorporated | System and method for run-time report resolution of reports that include prompt objects |
US7925616B2 (en) | 2001-06-19 | 2011-04-12 | Microstrategy, Incorporated | Report system and method using context-sensitive prompt objects |
US7725811B1 (en) * | 2001-06-19 | 2010-05-25 | Microstrategy, Inc. | Report system and method using prompt object abstraction |
US7945584B2 (en) | 2001-06-19 | 2011-05-17 | Microstrategy Incorporated | Report system and method using prompt object abstraction |
US20070192442A1 (en) * | 2001-07-24 | 2007-08-16 | Brightplanet Corporation | System and method for efficient control and capture of dynamic database content |
US8380735B2 (en) | 2001-07-24 | 2013-02-19 | Brightplanet Corporation II, Inc | System and method for efficient control and capture of dynamic database content |
US7676555B2 (en) | 2001-07-24 | 2010-03-09 | Brightplanet Corporation | System and method for efficient control and capture of dynamic database content |
US20030061028A1 (en) * | 2001-09-21 | 2003-03-27 | Knumi Inc. | Tool for automatically mapping multimedia annotations to ontologies |
US7917497B2 (en) * | 2001-09-24 | 2011-03-29 | Iac Search & Media, Inc. | Natural language query processing |
US7403938B2 (en) * | 2001-09-24 | 2008-07-22 | Iac Search & Media, Inc. | Natural language query processing |
US20080263019A1 (en) * | 2001-09-24 | 2008-10-23 | Iac Search & Media, Inc. | Natural language query processing |
US20030069880A1 (en) * | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US6963869B2 (en) * | 2002-01-07 | 2005-11-08 | Hewlett-Packard Development Company, L.P. | System and method for search, index, parsing document database including subject document having nested fields associated start and end meta words where each meta word identify location and nesting level |
US20030140035A1 (en) * | 2002-01-07 | 2003-07-24 | Michael Burrows | System and method for indexing and querying structured text |
US7171409B2 (en) * | 2002-01-31 | 2007-01-30 | Comtext Systems Inc. | Computerized information search and indexing method, software and device |
US20030145001A1 (en) * | 2002-01-31 | 2003-07-31 | Comtext Systems Inc. | Computerized information search and indexing method, software and device |
US7007015B1 (en) * | 2002-05-01 | 2006-02-28 | Microsoft Corporation | Prioritized merging for full-text index on relational store |
US7143288B2 (en) * | 2002-10-16 | 2006-11-28 | Vormetric, Inc. | Secure file system server architecture and methods |
US20040078568A1 (en) * | 2002-10-16 | 2004-04-22 | Duc Pham | Secure file system server architecture and methods |
WO2004036350A3 (en) * | 2002-10-16 | 2004-06-17 | Vormetric Inc | Secure file system server architecture and methods |
US20040254917A1 (en) * | 2003-06-13 | 2004-12-16 | Brill Eric D. | Architecture for generating responses to search engine queries |
US8666983B2 (en) * | 2003-06-13 | 2014-03-04 | Microsoft Corporation | Architecture for generating responses to search engine queries |
US7152057B2 (en) | 2003-06-18 | 2006-12-19 | Microsoft Corporation | Utilizing information redundancy to improve text searches |
US20060116996A1 (en) * | 2003-06-18 | 2006-06-01 | Microsoft Corporation | Utilizing information redundancy to improve text searches |
US20040267737A1 (en) * | 2003-06-24 | 2004-12-30 | Kazuhisa Takazawa | Database search system |
US8296304B2 (en) | 2004-01-26 | 2012-10-23 | International Business Machines Corporation | Method, system, and program for handling redirects in a search engine |
US8285724B2 (en) * | 2004-01-26 | 2012-10-09 | International Business Machines Corporation | System and program for handling anchor text |
US20090083270A1 (en) * | 2004-01-26 | 2009-03-26 | International Business Machines Corporation | System and program for handling anchor text |
US11556544B2 (en) | 2004-03-15 | 2023-01-17 | Slack Technologies, Llc | Search system and methods with integration of user annotations from a trust network |
CN101124576B (en) * | 2004-03-15 | 2010-06-16 | 雅虎公司 | Search system and methods with integration of user annotations from a trust network |
KR100824091B1 (en) | 2004-03-15 | 2008-04-21 | 야후! 인크. | Search system and methods with integration of user annotations from a trust network |
WO2005089291A3 (en) * | 2004-03-15 | 2007-03-29 | Yahoo Inc | Search system and methods with integration of user annotations from a trust network |
US7664734B2 (en) | 2004-03-31 | 2010-02-16 | Google Inc. | Systems and methods for generating multiple implicit search queries |
US8041713B2 (en) | 2004-03-31 | 2011-10-18 | Google Inc. | Systems and methods for analyzing boilerplate |
US7693825B2 (en) | 2004-03-31 | 2010-04-06 | Google Inc. | Systems and methods for ranking implicit search results |
US20070276829A1 (en) * | 2004-03-31 | 2007-11-29 | Niniane Wang | Systems and methods for ranking implicit search results |
US7707142B1 (en) | 2004-03-31 | 2010-04-27 | Google Inc. | Methods and systems for performing an offline search |
US7873632B2 (en) | 2004-03-31 | 2011-01-18 | Google Inc. | Systems and methods for associating a keyword with a user interface area |
US9009153B2 (en) | 2004-03-31 | 2015-04-14 | Google Inc. | Systems and methods for identifying a named entity |
US20090276408A1 (en) * | 2004-03-31 | 2009-11-05 | Google Inc. | Systems And Methods For Generating A User Interface |
US8631001B2 (en) | 2004-03-31 | 2014-01-14 | Google Inc. | Systems and methods for weighting a search query result |
US8131754B1 (en) | 2004-06-30 | 2012-03-06 | Google Inc. | Systems and methods for determining an article association measure |
US7788274B1 (en) | 2004-06-30 | 2010-08-31 | Google Inc. | Systems and methods for category-based search |
US20060047500A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Named entity recognition using compiler methods |
US20060047690A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Integration of Flex and Yacc into a linguistic services platform for named entity recognition |
US20060047691A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Creating a document index from a flex- and Yacc-generated named entity recognizer |
US8346759B2 (en) | 2004-09-24 | 2013-01-01 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US8655888B2 (en) | 2004-09-24 | 2014-02-18 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US20080294634A1 (en) * | 2004-09-24 | 2008-11-27 | International Business Machines Corporation | System and article of manufacture for searching documents for ranges of numeric values |
US8271498B2 (en) | 2004-09-24 | 2012-09-18 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US7590603B2 (en) * | 2004-10-01 | 2009-09-15 | Microsoft Corporation | Method and system for classifying and identifying messages as question or not a question within a discussion thread |
US20060112036A1 (en) * | 2004-10-01 | 2006-05-25 | Microsoft Corporation | Method and system for identifying questions within a discussion thread |
US8402047B1 (en) | 2005-02-25 | 2013-03-19 | Adobe Systems Incorporated | Method and apparatus for generating a query to search for matching forms |
US7523100B1 (en) | 2005-02-28 | 2009-04-21 | Adobe Systems Incorporated | Method and apparatus for using a rendered form as a search template |
US8650175B2 (en) | 2005-03-31 | 2014-02-11 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US8682913B1 (en) | 2005-03-31 | 2014-03-25 | Google Inc. | Corroborating facts extracted from multiple sources |
US9208229B2 (en) | 2005-03-31 | 2015-12-08 | Google Inc. | Anchor text summarization for corroboration |
US8078573B2 (en) | 2005-05-31 | 2011-12-13 | Google Inc. | Identifying the unifying subject of a set of facts |
US8719260B2 (en) | 2005-05-31 | 2014-05-06 | Google Inc. | Identifying the unifying subject of a set of facts |
US8996470B1 (en) | 2005-05-31 | 2015-03-31 | Google Inc. | System for ensuring the internal consistency of a fact repository |
US8825471B2 (en) | 2005-05-31 | 2014-09-02 | Google Inc. | Unsupervised extraction of facts |
US7831545B1 (en) * | 2005-05-31 | 2010-11-09 | Google Inc. | Identifying the unifying subject of a set of facts |
US7769579B2 (en) | 2005-05-31 | 2010-08-03 | Google Inc. | Learning facts from semi-structured text |
US20060293879A1 (en) * | 2005-05-31 | 2006-12-28 | Shubin Zhao | Learning facts from semi-structured text |
US9558186B2 (en) | 2005-05-31 | 2017-01-31 | Google Inc. | Unsupervised extraction of facts |
US20070016583A1 (en) * | 2005-07-14 | 2007-01-18 | Ronny Lempel | Enforcing native access control to indexed documents |
US8417693B2 (en) | 2005-07-14 | 2013-04-09 | International Business Machines Corporation | Enforcing native access control to indexed documents |
US20070022109A1 (en) * | 2005-07-25 | 2007-01-25 | Tomasz Imielinski | Systems and methods for answering user questions |
US8756245B2 (en) * | 2005-07-25 | 2014-06-17 | Iac Search & Media, Inc. | Systems and methods for answering user questions |
US20070073651A1 (en) * | 2005-09-23 | 2007-03-29 | Tomasz Imielinski | System and method for responding to a user query |
GB2430770A (en) * | 2005-09-28 | 2007-04-04 | Oracle Int Corp | Query Generator |
US20070078842A1 (en) * | 2005-09-30 | 2007-04-05 | Zola Scot G | System and method for responding to a user reference query |
US7873624B2 (en) * | 2005-10-21 | 2011-01-18 | Microsoft Corporation | Question answering over structured content on the web |
US20070094285A1 (en) * | 2005-10-21 | 2007-04-26 | Microsoft Corporation | Question answering over structured content on the web |
US8832064B2 (en) * | 2005-11-30 | 2014-09-09 | At&T Intellectual Property Ii, L.P. | Answer determination for natural language questioning |
US20070136246A1 (en) * | 2005-11-30 | 2007-06-14 | At&T Corp. | Answer determination for natural language questioning |
US20100023318A1 (en) * | 2006-01-20 | 2010-01-28 | Julien Lemoine | Method and device for retrieving data and transforming same into qualitative data of a text-based document |
US9092495B2 (en) | 2006-01-27 | 2015-07-28 | Google Inc. | Automatic object reference identification and linking in a browseable fact repository |
US8700568B2 (en) | 2006-02-17 | 2014-04-15 | Google Inc. | Entity normalization via name normalization |
US9710549B2 (en) | 2006-02-17 | 2017-07-18 | Google Inc. | Entity normalization via name normalization |
US10223406B2 (en) | 2006-02-17 | 2019-03-05 | Google Llc | Entity normalization via name normalization |
US8260785B2 (en) | 2006-02-17 | 2012-09-04 | Google Inc. | Automatic object reference identification and linking in a browseable fact repository |
US8682891B2 (en) | 2006-02-17 | 2014-03-25 | Google Inc. | Automatic object reference identification and linking in a browseable fact repository |
US7991797B2 (en) | 2006-02-17 | 2011-08-02 | Google Inc. | ID persistence through normalization |
US8244689B2 (en) | 2006-02-17 | 2012-08-14 | Google Inc. | Attribute entropy as a signal in object normalization |
US7860815B1 (en) * | 2006-07-12 | 2010-12-28 | Venkateswara Prasad Tangirala | Computer knowledge representation format, system, methods, and applications |
US20080040339A1 (en) * | 2006-08-07 | 2008-02-14 | Microsoft Corporation | Learning question paraphrases from log data |
US20080307320A1 (en) * | 2006-09-05 | 2008-12-11 | Payne John M | Online system and method for enabling social search and structured communications among social networks |
US8726169B2 (en) * | 2006-09-05 | 2014-05-13 | Circleup, Inc. | Online system and method for enabling social search and structured communications among social networks |
US8751498B2 (en) | 2006-10-20 | 2014-06-10 | Google Inc. | Finding and disambiguating references to entities on web pages |
US9760570B2 (en) | 2006-10-20 | 2017-09-12 | Google Inc. | Finding and disambiguating references to entities on web pages |
US8122026B1 (en) | 2006-10-20 | 2012-02-21 | Google Inc. | Finding and disambiguating references to entities on web pages |
US9934330B2 (en) | 2006-11-20 | 2018-04-03 | Oracle International Corporation | Query generation |
US8447771B2 (en) | 2006-11-20 | 2013-05-21 | Oracle International Corporation | Query generation |
US20080133473A1 (en) * | 2006-11-30 | 2008-06-05 | Broder Andrei Z | Efficient multifaceted search in information retrieval systems |
US8032532B2 (en) | 2006-11-30 | 2011-10-04 | International Business Machines Corporation | Efficient multifaceted search in information retrieval systems |
US7496568B2 (en) | 2006-11-30 | 2009-02-24 | International Business Machines Corporation | Efficient multifaceted search in information retrieval systems |
US20080222117A1 (en) * | 2006-11-30 | 2008-09-11 | Broder Andrei Z | Efficient multifaceted search in information retrieval systems |
US7991724B2 (en) * | 2006-12-21 | 2011-08-02 | Support Machines Ltd. | Method and a computer program product for providing a response to a statement of a user |
US8924330B2 (en) | 2006-12-21 | 2014-12-30 | Support Machines Ltd. | Method and computer program product for providing a response to a statement of a user |
US8548915B2 (en) | 2006-12-21 | 2013-10-01 | Support Machines Ltd. | Method and computer program product for providing a response to a statement of a user |
US8738558B2 (en) | 2006-12-21 | 2014-05-27 | Support Machines Ltd. | Method and computer program product for providing a response to a statement of a user |
US20120030149A1 (en) * | 2006-12-21 | 2012-02-02 | Support Machines Ltd. | Method and a computer program product for providing a response to a statement of a user |
US8386405B2 (en) * | 2006-12-21 | 2013-02-26 | Support Machines Ltd. | Method and a computer program product for providing a response to a statement of a user |
US9530098B2 (en) | 2006-12-21 | 2016-12-27 | Knapp Investment Company Limited | Method and computer program product for providing a response to a statement of a user |
US20080154828A1 (en) * | 2006-12-21 | 2008-06-26 | Support Machines Ltd. | Method and a Computer Program Product for Providing a Response to A Statement of a User |
US7908260B1 (en) | 2006-12-29 | 2011-03-15 | BrightPlanet Corporation II, Inc. | Source editing, internationalization, advanced configuration wizard, and summary page selection for information automation systems |
US9892132B2 (en) | 2007-03-14 | 2018-02-13 | Google Llc | Determining geographic locations for place names in a fact repository |
US8347202B1 (en) | 2007-03-14 | 2013-01-01 | Google Inc. | Determining geographic locations for place names in a fact repository |
US7720837B2 (en) | 2007-03-15 | 2010-05-18 | International Business Machines Corporation | System and method for multi-dimensional aggregation over large text corpora |
US20080228718A1 (en) * | 2007-03-15 | 2008-09-18 | International Business Machines Corporation | System and method for multi-dimensional aggregation over large text corpora |
US20080228743A1 (en) * | 2007-03-15 | 2008-09-18 | International Business Machines Corporation | System and method for multi-dimensional aggregation over large text corpora |
US20080270388A1 (en) * | 2007-04-26 | 2008-10-30 | Nhn Corporation | Method for providing keyword based on keyword providing range and system thereof |
US8239350B1 (en) | 2007-05-08 | 2012-08-07 | Google Inc. | Date ambiguity resolution |
US7966291B1 (en) | 2007-06-26 | 2011-06-21 | Google Inc. | Fact-based object merging |
US7970766B1 (en) | 2007-07-23 | 2011-06-28 | Google Inc. | Entity type assignment |
US8738643B1 (en) | 2007-08-02 | 2014-05-27 | Google Inc. | Learning synonymous object names from anchor texts |
US8812435B1 (en) | 2007-11-16 | 2014-08-19 | Google Inc. | Learning objects and facts from documents |
US9135343B2 (en) | 2007-12-21 | 2015-09-15 | Microsoft Technology Licensing, Llc | Search engine platform |
US20090164426A1 (en) * | 2007-12-21 | 2009-06-25 | Microsoft Corporation | Search engine platform |
US7814108B2 (en) | 2007-12-21 | 2010-10-12 | Microsoft Corporation | Search engine platform |
US20110029501A1 (en) * | 2007-12-21 | 2011-02-03 | Microsoft Corporation | Search Engine Platform |
US20100077001A1 (en) * | 2008-03-27 | 2010-03-25 | Claude Vogel | Search system and method for serendipitous discoveries with faceted full-text classification |
US8275803B2 (en) | 2008-05-14 | 2012-09-25 | International Business Machines Corporation | System and method for providing answers to questions |
US9703861B2 (en) | 2008-05-14 | 2017-07-11 | International Business Machines Corporation | System and method for providing answers to questions |
US8768925B2 (en) | 2008-05-14 | 2014-07-01 | International Business Machines Corporation | System and method for providing answers to questions |
US20090292687A1 (en) * | 2008-05-23 | 2009-11-26 | International Business Machines Corporation | System and method for providing question and answers with deferred type evaluation |
US8332394B2 (en) | 2008-05-23 | 2012-12-11 | International Business Machines Corporation | System and method for providing question and answers with deferred type evaluation |
US20090327269A1 (en) * | 2008-06-27 | 2009-12-31 | Microsoft Corporation | Pattern generation |
US8027973B2 (en) | 2008-08-04 | 2011-09-27 | Microsoft Corporation | Searching questions based on topic and focus |
US20100030769A1 (en) * | 2008-08-04 | 2010-02-04 | Microsoft Corporation | Clustering question search results based on topic and focus |
US8024332B2 (en) | 2008-08-04 | 2011-09-20 | Microsoft Corporation | Clustering question search results based on topic and focus |
US20100049498A1 (en) * | 2008-08-25 | 2010-02-25 | Microsoft Corporation | Determining utility of a question |
US8112269B2 (en) | 2008-08-25 | 2012-02-07 | Microsoft Corporation | Determining utility of a question |
US20100198857A1 (en) * | 2009-02-04 | 2010-08-05 | Yahoo! Inc. | Rare query expansion by web feature matching |
US8676827B2 (en) * | 2009-02-04 | 2014-03-18 | Yahoo! Inc. | Rare query expansion by web feature matching |
US20100235164A1 (en) * | 2009-03-13 | 2010-09-16 | Invention Machine Corporation | Question-answering system and method based on semantic labeling of text documents and user questions |
US8666730B2 (en) * | 2009-03-13 | 2014-03-04 | Invention Machine Corporation | Question-answering system and method based on semantic labeling of text documents and user questions |
US20100250235A1 (en) * | 2009-03-24 | 2010-09-30 | Microsoft Corporation | Text analysis using phrase definitions and containers |
US8433559B2 (en) * | 2009-03-24 | 2013-04-30 | Microsoft Corporation | Text analysis using phrase definitions and containers |
US8392422B2 (en) | 2009-09-11 | 2013-03-05 | Darren Redfern | Automated boolean expression generation for computerized search and indexing |
US20110066620A1 (en) * | 2009-09-11 | 2011-03-17 | IntelljResponse Systems Inc. | Automated Boolean Expression Generation for Computerized Search and Indexing |
US20110125734A1 (en) * | 2009-11-23 | 2011-05-26 | International Business Machines Corporation | Questions and answers generation |
US11521079B2 (en) | 2010-05-13 | 2022-12-06 | Narrative Science Inc. | Method and apparatus for triggering the automatic generation of narratives |
US11741301B2 (en) | 2010-05-13 | 2023-08-29 | Narrative Science Inc. | System and method for using data and angles to automatically generate a narrative story |
US8849807B2 (en) | 2010-05-25 | 2014-09-30 | Mark F. McLellan | Active search results page ranking technology |
US20120011139A1 (en) * | 2010-07-12 | 2012-01-12 | International Business Machines Corporation | Unified numerical and semantic analytics system for decision support |
US8538915B2 (en) * | 2010-07-12 | 2013-09-17 | International Business Machines Corporation | Unified numerical and semantic analytics system for decision support |
US9864818B2 (en) | 2010-09-24 | 2018-01-09 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US9965509B2 (en) | 2010-09-24 | 2018-05-08 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US20120084293A1 (en) * | 2010-09-24 | 2012-04-05 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US9495481B2 (en) | 2010-09-24 | 2016-11-15 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US11144544B2 (en) | 2010-09-24 | 2021-10-12 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US10331663B2 (en) | 2010-09-24 | 2019-06-25 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US9600601B2 (en) * | 2010-09-24 | 2017-03-21 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US10318529B2 (en) | 2010-09-24 | 2019-06-11 | International Business Machines Corporation | Providing answers to questions including assembling answers from multiple document segments |
US8892550B2 (en) | 2010-09-24 | 2014-11-18 | International Business Machines Corporation | Source expansion for information retrieval and information extraction |
US9990419B2 (en) * | 2010-09-28 | 2018-06-05 | International Business Machines Corporation | Providing answers to questions using multiple models to score candidate answers |
US20170053020A1 (en) * | 2010-09-28 | 2017-02-23 | International Business Machines Corporation | Providing answers to questions using multiple models to score candidate answers |
US10823265B2 (en) | 2010-09-28 | 2020-11-03 | International Business Machines Corporation | Providing answers to questions using multiple models to score candidate answers |
US11790164B2 (en) | 2011-01-07 | 2023-10-17 | Narrative Science Inc. | Configurable and portable system for generating narratives |
US20190272269A1 (en) * | 2011-07-19 | 2019-09-05 | Maluuba Inc. | Method and system of classification in a natural language user interface |
US10719663B2 (en) | 2012-06-19 | 2020-07-21 | International Business Machines Corporation | Assisted free form decision definition using rules vocabulary |
US10296585B2 (en) * | 2012-06-19 | 2019-05-21 | International Business Machines Corporation | Assisted free form decision definition using rules vocabulary |
US20130339003A1 (en) * | 2012-06-19 | 2013-12-19 | International Business Machines Corporation | Assisted Free Form Decision Definition Using Rules Vocabulary |
US10614725B2 (en) | 2012-09-11 | 2020-04-07 | International Business Machines Corporation | Generating secondary questions in an introspective question answering system |
US10621880B2 (en) | 2012-09-11 | 2020-04-14 | International Business Machines Corporation | Generating secondary questions in an introspective question answering system |
US20150032508A1 (en) * | 2013-07-29 | 2015-01-29 | International Business Machines Corporation | Systems And Methods For Probing Customers And Making Offers In An Interactive Setting |
US9898554B2 (en) | 2013-11-18 | 2018-02-20 | Google Inc. | Implicit question query identification |
US9396235B1 (en) * | 2013-12-13 | 2016-07-19 | Google Inc. | Search ranking based on natural language query patterns |
US11288328B2 (en) | 2014-10-22 | 2022-03-29 | Narrative Science Inc. | Interactive and conversational data exploration |
US11475076B2 (en) | 2014-10-22 | 2022-10-18 | Narrative Science Inc. | Interactive and conversational data exploration |
US10372763B2 (en) * | 2015-07-13 | 2019-08-06 | International Business Machines Corporation | Generating probabilistic annotations for entities and relations using reasoning and corpus-level evidence |
US20170017716A1 (en) * | 2015-07-13 | 2017-01-19 | International Business Machines Corporation | Generating Probabilistic Annotations for Entities and Relations Using Reasoning and Corpus-Level Evidence |
EP3142028A3 (en) * | 2015-09-11 | 2017-07-12 | Google, Inc. | Handling failures in processing natural language queries through user interactions |
US11232268B1 (en) | 2015-11-02 | 2022-01-25 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from line charts |
US11238090B1 (en) | 2015-11-02 | 2022-02-01 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from visualization data |
US11222184B1 (en) | 2015-11-02 | 2022-01-11 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from bar charts |
US11188588B1 (en) | 2015-11-02 | 2021-11-30 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to interactively generate narratives from visualization data |
US11170038B1 (en) | 2015-11-02 | 2021-11-09 | Narrative Science Inc. | Applied artificial intelligence technology for using narrative analytics to automatically generate narratives from multiple visualizations |
US9471668B1 (en) * | 2016-01-21 | 2016-10-18 | International Business Machines Corporation | Question-answering system |
US11144838B1 (en) | 2016-08-31 | 2021-10-12 | Narrative Science Inc. | Applied artificial intelligence technology for evaluating drivers of data presented in visualizations |
US11341338B1 (en) | 2016-08-31 | 2022-05-24 | Narrative Science Inc. | Applied artificial intelligence technology for interactively using narrative analytics to focus and control visualizations of data |
US20180189657A1 (en) * | 2017-01-05 | 2018-07-05 | International Business Machines Corporation | DEPLOYING LOCAL Q AND A SYSTEMS IN IoT DEVICES |
US10896444B2 (en) * | 2017-01-24 | 2021-01-19 | International Business Machines Corporation | Digital content generation based on user feedback |
US10803491B2 (en) | 2017-01-24 | 2020-10-13 | International Business Machines Corporation | Digital content generation based on user feedback |
US20180211286A1 (en) * | 2017-01-24 | 2018-07-26 | International Business Machines Corporation | Digital content generation based on user feedback |
US11568148B1 (en) | 2017-02-17 | 2023-01-31 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation based on explanation communication goals |
US11954445B2 (en) | 2017-02-17 | 2024-04-09 | Narrative Science Llc | Applied artificial intelligence technology for narrative generation based on explanation communication goals |
US11068661B1 (en) | 2017-02-17 | 2021-07-20 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation based on smart attributes |
US11729120B2 (en) * | 2017-03-16 | 2023-08-15 | Microsoft Technology Licensing, Llc | Generating responses in automated chatting |
US20200044993A1 (en) * | 2017-03-16 | 2020-02-06 | Microsoft Technology Licensing, Llc | Generating responses in automated chatting |
US11074250B2 (en) * | 2017-06-27 | 2021-07-27 | OWOX Limted | Technologies for implementing ontological models for natural language queries |
US10558689B2 (en) | 2017-11-15 | 2020-02-11 | International Business Machines Corporation | Leveraging contextual information in topic coherent question sequences |
US11042708B1 (en) * | 2018-01-02 | 2021-06-22 | Narrative Science Inc. | Context saliency-based deictic parser for natural language generation |
US11816438B2 (en) | 2018-01-02 | 2023-11-14 | Narrative Science Inc. | Context saliency-based deictic parser for natural language processing |
US11042709B1 (en) * | 2018-01-02 | 2021-06-22 | Narrative Science Inc. | Context saliency-based deictic parser for natural language processing |
US10963649B1 (en) | 2018-01-17 | 2021-03-30 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation using an invocable analysis service and configuration-driven analytics |
US11023689B1 (en) | 2018-01-17 | 2021-06-01 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation using an invocable analysis service with analysis libraries |
US11561986B1 (en) | 2018-01-17 | 2023-01-24 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation using an invocable analysis service |
US11003866B1 (en) | 2018-01-17 | 2021-05-11 | Narrative Science Inc. | Applied artificial intelligence technology for narrative generation using an invocable analysis service and data re-organization |
US11030408B1 (en) | 2018-02-19 | 2021-06-08 | Narrative Science Inc. | Applied artificial intelligence technology for conversational inferencing using named entity reduction |
US11126798B1 (en) | 2018-02-19 | 2021-09-21 | Narrative Science Inc. | Applied artificial intelligence technology for conversational inferencing and interactive natural language generation |
US11182556B1 (en) | 2018-02-19 | 2021-11-23 | Narrative Science Inc. | Applied artificial intelligence technology for building a knowledge base using natural language processing |
US11816435B1 (en) | 2018-02-19 | 2023-11-14 | Narrative Science Inc. | Applied artificial intelligence technology for contextualizing words to a knowledge base using natural language processing |
US11042713B1 (en) | 2018-06-28 | 2021-06-22 | Narrative Scienc Inc. | Applied artificial intelligence technology for using natural language processing to train a natural language generation system |
US11334726B1 (en) | 2018-06-28 | 2022-05-17 | Narrative Science Inc. | Applied artificial intelligence technology for using natural language processing to train a natural language generation system with respect to date and number textual features |
US10467344B1 (en) | 2018-08-02 | 2019-11-05 | Sas Institute Inc. | Human language analyzer for detecting clauses, clause types, and clause relationships |
US10699081B2 (en) | 2018-08-02 | 2020-06-30 | Sas Institute Inc. | Human language analyzer for detecting clauses, clause types, and clause relationships |
US11093740B2 (en) * | 2018-11-09 | 2021-08-17 | Microsoft Technology Licensing, Llc | Supervised OCR training for custom forms |
US11966389B2 (en) * | 2019-02-13 | 2024-04-23 | International Business Machines Corporation | Natural language to structured query generation via paraphrasing |
CN110516127A (en) * | 2019-08-28 | 2019-11-29 | 百度在线网络技术（北京）有限公司 | Division methods, device, electronic equipment and the storage medium of more demand searching requests |
CN111666376B (en) * | 2020-05-21 | 2023-07-18 | 武汉大学 | Answer generation method and device based on paragraph boundary scan prediction and word shift distance cluster matching |
CN111666376A (en) * | 2020-05-21 | 2020-09-15 | 武汉大学 | Answer generation method and device based on paragraph boundary scan prediction and word shift distance cluster matching |
CN115470323B (en) * | 2022-10-31 | 2023-03-10 | 中建电子商务有限责任公司 | Method for improving searching precision of building industry based on word segmentation technology |
CN115470323A (en) * | 2022-10-31 | 2022-12-13 | 中建电子商务有限责任公司 | Method for improving searching precision of building industry based on word segmentation technology |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6665666B1 (en) | System, method and program product for answering questions using a search engine | |
US6584470B2 (en) | Multi-layered semiotic mechanism for answering natural language questions using document retrieval combined with information extraction | |
CA2617527C (en) | Processor for fast contextual matching | |
Gaizauskas et al. | Information extraction: Beyond document retrieval | |
US7398201B2 (en) | Method and system for enhanced data searching | |
US6859800B1 (en) | System for fulfilling an information need | |
US5933822A (en) | Apparatus and methods for an information retrieval system that employs natural language processing of search results to improve overall precision | |
US5696962A (en) | Method for computerized information retrieval using shallow linguistic analysis | |
US7283951B2 (en) | Method and system for enhanced data searching | |
CA2377913C (en) | Search system | |
EP0597630B1 (en) | Method for resolution of natural-language queries against full-text databases | |
US8135717B2 (en) | Processor for fast contextual matching | |
EP0965089B1 (en) | Information retrieval utilizing semantic representation of text | |
US20020123994A1 (en) | System for fulfilling an information need using extended matching techniques | |
US20040117352A1 (en) | System for answering natural language questions | |
US20070073533A1 (en) | Systems and methods for structural indexing of natural language text | |
Lins et al. | Automatic language identification of written texts | |
Salton | Automatic text indexing using complex identifiers | |
WO1998025217A1 (en) | Method and apparatus for natural language querying and semantic searching of an information database | |
US7120627B1 (en) | Method for detecting and fulfilling an information need corresponding to simple queries | |
KR20030006201A (en) | Integrated Natural Language Question-Answering System for Automatic Retrieving of Homepage | |
Strzalkowski et al. | Recent developments in natural language text retrieval | |
Litkowski | Question Answering Using XML-Tagged Documents. | |
Pirkola et al. | The effect of anaphor and ellipsis resolution on proximity searching in a text database | |
Milić-Frayling | Text processing and information retrieval |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BROWN, ERIC WILLIAM;CODEN, ANNI R.;PRAGER, JOHN MARTIN;AND OTHERS;REEL/FRAME:010597/0108;SIGNING DATES FROM 20000117 TO 20000131 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
REMI | Maintenance fee reminder mailed | ||
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026894/0001Effective date: 20110817 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
SULP | Surcharge for late payment |
Year of fee payment: 7 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
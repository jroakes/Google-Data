US10142628B1 - Hybrid transform in video codecs - Google Patents
Hybrid transform in video codecs Download PDFInfo
- Publication number
- US10142628B1 US10142628B1 US15/373,590 US201615373590A US10142628B1 US 10142628 B1 US10142628 B1 US 10142628B1 US 201615373590 A US201615373590 A US 201615373590A US 10142628 B1 US10142628 B1 US 10142628B1
- Authority
- US
- United States
- Prior art keywords
- mode
- transform
- modes
- decoding
- intra prediction
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/11—Selection of coding mode or of prediction mode among a plurality of spatial predictive coding modes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/12—Selection from among a plurality of transforms or standards, e.g. selection between discrete cosine transform [DCT] and sub-band transform or selection between H.263 and H.264
- H04N19/122—Selection of transform size, e.g. 8x8 or 2x4x8 DCT; Selection of sub-band transforms of varying structure or type
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/129—Scanning of coding units, e.g. zig-zag scan of transform coefficients or flexible macroblock ordering [FMO]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/157—Assigned coding mode, i.e. the coding mode being predefined or preselected to be further used for selection of another element or parameter
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/157—Assigned coding mode, i.e. the coding mode being predefined or preselected to be further used for selection of another element or parameter
- H04N19/159—Prediction type, e.g. intra-frame, inter-frame or bidirectional frame prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/625—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using discrete cosine transform [DCT]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/172—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a picture, frame or field
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
Definitions
- This disclosure relates to encoding and decoding visual data, such as video stream data, for transmission or storage.
- Digital video streams typically represent video using a sequence of frames or still images. Each frame can include a number of blocks, which in turn may contain information describing the value of color, brightness or other attributes for pixels.
- the amount of data in a typical video stream is large, and transmission and storage of video can use significant computing or communications resources.
- Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
- An aspect of the disclosure is a method for decoding an encoded video stream.
- the method includes receiving an encoded video stream, identifying an encoded block of an encoded frame from the encoded video stream, identifying an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes, and identifying a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the one dimensional Discrete Cosine Transform applied to each
- the method includes identifying a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes, identifying a scan mode for decoding the encoded block based on the transform mode, generating a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode, and outputting or storing the decoded block.
- the apparatus includes a non-transitory computer readable memory, and a processor configured to execute instructions stored in the non-transitory computer readable memory to receive an encoded video stream, identify an encoded block of an encoded frame from the encoded video stream, identify an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes, and identify a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete
- the processor configured to execute instructions stored in the non-transitory computer readable memory to identify a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes, identify a scan mode for decoding the encoded block based on the transform mode, generate a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode, and output or store the decoded block.
- Non-transitory computer-readable storage medium comprising executable instructions that, when executed by a processor, facilitate performance of operations, comprising receiving an encoded video stream, identifying an encoded block of an encoded frame from the encoded video stream, identifying an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes, and identifying a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the
- the operations comprising identifying a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes, identifying a scan mode for decoding the encoded block based on the transform mode, generating a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode, and outputting or storing the decoded block.
- FIG. 1 is a schematic diagram of a video encoding and decoding system
- FIG. 2 is a block diagram of an exemplary computing device that can implement a transmitting station or a receiving station;
- FIG. 3 is a diagram of a typical video stream to be encoded and subsequently decoded
- FIG. 4 is a block diagram of a video compression system
- FIG. 5 is a block diagram of a video decompression
- FIG. 6 is a flowchart diagram of a process for encoding of a video stream in accordance with aspects of the teachings herein;
- FIG. 7 is a flowchart diagram of a process for decoding of a video stream in accordance with aspects of the teachings herein;
- FIG. 8 is a diagram showing a block and sub-blocks in accordance with aspects of the teachings herein;
- FIG. 9 is a diagram of intra prediction modes in accordance with aspects of the teachings herein;
- FIG. 10 is a diagram of scan modes in accordance with aspects of the teachings herein.
- FIG. 11 is a diagram of an example of probability models in accordance with aspects of the teachings herein.
- Real-time video streaming, multi-point video conferencing or video broadcasting are examples of applications that employ video stream encoding including compression.
- One compression technique uses prediction to reduce the amount of data to be encoded.
- a block may be predicted by generating a prediction block using either inter prediction or intra prediction.
- Inter prediction generates the prediction block by performing a motion search to find pixel data matching the block from, e.g., another frame.
- Intra prediction generates the prediction block using pixel data from nearby blocks.
- the pixel data used to generate the prediction block is encoded.
- To encode the current block only the differences (called a residual) between the current block and the prediction block need be encoded. This is less data that encoding the current block in its entirety.
- decorrelating transforms may be used that code the residual. Certain transforms, however, are less effective for coding residuals resulting from intra prediction. According to the teachings herein, the types and sizes of the transform applied to the prediction residual block are selected according to the prediction mode. The entropy coding of the quantized transform coefficients, including size, scanning order and probability model, are then specifically designed for each sub-portion of the coefficients. This can improve coding efficiency over transforms based on only a single block size.
- FIG. 1 is a schematic diagram of a video encoding and decoding system 100 .
- An exemplary transmitting station 112 can be, for example, a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of transmitting station 112 can be distributed among multiple devices.
- a network 128 can connect transmitting station 112 and a receiving station 130 for encoding and decoding of the video stream.
- the video stream can be encoded in transmitting station 112 and the encoded video stream can be decoded in receiving station 130 .
- Network 128 can be, for example, the Internet.
- Network 128 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from transmitting station 112 to, in this example, receiving station 130 .
- LAN local area network
- WAN wide area network
- VPN virtual private network
- Receiving station 130 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 .
- Receiving station 130 can be a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of receiving station 130 can be distributed among multiple devices.
- video encoding and decoding system 100 can omit network 128 .
- a video stream can be encoded and then stored for transmission at a later time to receiving station 130 or any other device having memory.
- receiving station 130 receives (e.g., via network 128 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol RTP
- a transport protocol other than RTP may be used, e.g., an HTTP-based video streaming protocol.
- FIG. 2 is a block diagram of an exemplary computing device 200 that can implement a transmitting station or a receiving station.
- computing device 200 can implement one or both of transmitting station 112 and receiving station 130 of FIG. 1 .
- Computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of a single computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a CPU 224 in computing device 200 can be a conventional central processing unit.
- CPU 224 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed.
- the disclosed implementations can be practiced with a single processor as shown, e.g., CPU 224 , advantages in speed and efficiency can be achieved using more than one processor.
- a memory 226 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device can be used as memory 226 .
- Memory 226 can include code and data 227 that is accessed by CPU 224 using a bus 230 .
- Memory 226 can further include an operating system 232 and application programs 234 , the application programs 234 including at least one program that permits CPU 224 to perform the methods described here.
- application programs 234 can include applications 1 through N, which further include a video coding application that performs the methods described here.
- Computing device 200 can also include a secondary storage 236 , which can, for example, be a memory card used with a mobile computing device 200 . Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in secondary storage 236 and loaded into memory 226 as needed for processing.
- Computing device 200 can also include one or more output devices, such as a display 228 .
- Display 228 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- Display 228 can be coupled to CPU 224 via bus 230 .
- Other output devices that permit a user to program or otherwise use computing device 200 can be provided in addition to or as an alternative to display 228 .
- the output device is or includes a display, the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display or light emitting diode (LED) display, such as an OLED display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- Computing device 200 can also include or be in communication with an image-sensing device 238 , for example a camera, or any other image-sensing device 238 now existing or hereafter developed that can sense an image such as the image of a user operating computing device 200 .
- Image-sensing device 238 can be positioned such that it is directed toward the user operating computing device 200 .
- the position and optical axis of image-sensing device 238 can be configured such that the field of vision includes an area that is directly adjacent to display 228 and from which display 228 is visible.
- Computing device 200 can also include or be in communication with a sound-sensing device 240 , for example a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near computing device 200 .
- Sound-sensing device 240 can be positioned such that it is directed toward the user operating computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates computing device 200 .
- FIG. 2 depicts CPU 224 and memory 226 of computing device 200 as being integrated into a single unit, other configurations can be utilized.
- the operations of CPU 224 can be distributed across multiple machines (each machine having one or more of processors) that can be coupled directly or across a local area or other network.
- Memory 226 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of computing device 200 .
- bus 230 of computing device 200 can be composed of multiple buses.
- secondary storage 236 can be directly coupled to the other components of computing device 200 or can be accessed via a network and can comprise a single integrated unit such as a memory card or multiple units such as multiple memory cards.
- Computing device 200 can thus be implemented in a wide variety of configurations.
- FIG. 3 is a diagram of an example of a video stream 350 to be encoded and subsequently decoded.
- Video stream 350 includes a video sequence 352 .
- video sequence 352 includes a number of adjacent frames 354 . While three frames are depicted as adjacent frames 354 , video sequence 352 can include any number of adjacent frames.
- Adjacent frames 354 can then be further subdivided into individual frames, e.g., a single frame 356 .
- a single frame 356 can be divided into a series of segments or planes 358 . Segments or planes 358 can be subsets of frames that permit parallel processing, for example.
- Segments or planes 358 can be subsets of frames 354 that separate the video data in a frame 356 into, for example, separate colors.
- frame 356 of color video data can include a luminance plane 358 and two chrominance planes 358 . Planes 358 can be sampled at different resolutions.
- Segments or planes 358 can include blocks 360 that contain data corresponding to, for example, 16 ⁇ 16 pixels in frame 356 .
- Blocks 360 can also be of any other suitable size such as 4 ⁇ 4, 8 ⁇ 8 16 ⁇ 8, 8 ⁇ 16, 16 ⁇ 16, or larger. nless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 470 in accordance with an implementation.
- Encoder 470 can be implemented in transmitting station 112 , as described above, such as by providing a computer software program stored in memory, for example, memory 226 .
- the computer software program can include machine instructions that, when executed by a processor such as CPU 224 , cause transmitting station 112 to encode video data in the manner described in FIG. 4 .
- Encoder 470 can also be implemented as specialized hardware included in, for example, transmitting station 112 .
- Encoder 470 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 488 using input video stream 350 : an intra/inter prediction stage 472 , a transform stage 474 , a quantization stage 476 , and an entropy encoding stage 478 .
- Encoder 470 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- encoder 470 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 480 , an inverse transform stage 482 , a reconstruction stage 484 , and a loop filtering stage 486 .
- Other structural variations of encoder 470 can be used to encode video stream 350 .
- each frame 356 including planes 358 within video stream 350 can be processed in units of blocks 360 .
- each block 360 can be encoded using intra-frame prediction (also called intra prediction) or inter-frame prediction (also called inter prediction).
- intra-frame prediction also called intra prediction
- inter-frame prediction also called inter prediction
- a prediction block can be formed.
- intra prediction a prediction block can be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter prediction a prediction block can be formed from samples in one or more previously constructed reference frames.
- the prediction block can be subtracted from the current block at intra/inter prediction stage 472 to produce a residual block (also called a residual).
- Transform stage 474 transforms the residual into transform coefficients in, for example, the frequency domain.
- block-based transforms include the Karhunen-Loéve Transform (KLT), the Discrete Cosine Transform (DCT), and the Singular Value Decomposition Transform (SVD).
- KLT Karhunen-Loéve Transform
- DCT Discrete Cosine Transform
- SVD Singular Value Decomposition Transform
- the DCT transforms the block into the frequency domain.
- the transform coefficient values are based on spatial frequency, with the lowest frequency (DC) coefficient at the top-left of the matrix and the highest frequency coefficient at the bottom-right of the matrix.
- DC lowest frequency
- ADST Asymmetric Discrete Sine Transform
- Quantization stage 476 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level.
- the quantized transform coefficients are then entropy encoded by entropy encoding stage 478 .
- the entropy-encoded coefficients, together with other information used to decode the block, which may include for example the type of prediction used, motion vectors and quantizer value, are then output to the compressed bitstream 488 .
- Compressed bitstream 488 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- Compressed bitstream 488 can also be referred to as an encoded video stream and the terms will be used interchangeably herein.
- the reconstruction path in FIG. 4 can be used to ensure that both encoder 470 and a decoder 500 (described below) use the same reference frames to decode compressed bitstream 488 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at dequantization stage 480 and inverse transforming the dequantized transform coefficients at inverse transform stage 482 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 472 can be added to the derivative residual to create a reconstructed block.
- Loop filtering stage 486 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 470 can be used to encode compressed bitstream 488 .
- a non-transform based encoder 470 can quantize the residual signal directly without transform stage 474 .
- an encoder 470 can have quantization stage 476 and dequantization stage 480 combined into a single stage.
- FIG. 5 is a block diagram of a decoder 500 in accordance with another implementation.
- Decoder 500 can be implemented in receiving station 130 , for example, by providing a computer software program stored in memory 226 .
- the computer software program can include machine instructions that, when executed by a processor such as CPU 224 , cause receiving station 130 to decode video data in the manner described in FIG. 5 .
- Decoder 500 can also be implemented in hardware included in, for example, transmitting station 112 or receiving station 130 .
- Decoder 500 similar to the reconstruction path of encoder 470 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from compressed bitstream 488 : an entropy decoding stage 502 , a dequantization stage 504 , an inverse transform stage 506 , an intra/inter prediction stage 508 , a reconstruction stage 510 , a loop filtering stage 512 and a deblocking filtering stage 514 .
- Other structural variations of decoder 500 can be used to decode compressed bitstream 488 .
- the data elements within compressed bitstream 488 can be decoded by entropy decoding stage 502 (using, for example, arithmetic coding) to produce a set of quantized transform coefficients.
- Dequantization stage 504 dequantizes the quantized transform coefficients
- inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by inverse transform stage 482 in encoder 470 .
- decoder 500 can use intra/inter prediction stage 508 to create the same prediction block as was created in encoder 470 , e.g., at intra/inter prediction stage 472 .
- the prediction block can be added to the derivative residual to create a reconstructed block.
- Loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- Other filtering can be applied to the reconstructed block.
- deblocking filtering stage 514 can be applied to the reconstructed block to reduce blocking distortion, and the result is output as output video stream 516 .
- Output video stream 516 can also be referred to as a decoded video stream and the terms will be used interchangeably herein.
- decoder 500 can be used to decode compressed bitstream 488 .
- decoder 500 can produce output video stream 516 without deblocking filtering stage 514 .
- FIG. 6 is a flowchart diagram of a process 600 for encoding of a video stream in accordance with aspects of the teachings herein.
- Process 600 encodes variably-sized sub-blocks and can be implemented in a system such as encoder 470 to encode a video stream using intra prediction and variably sized sub-blocks.
- Process 600 can be implemented, for example, as a software program that is executed by a computing device such as transmitting station 112 or receiving station 130 .
- the software program can include machine-readable instructions that are stored in a memory such as memory 226 that, when executed by a processor such as CPU 224 , cause the computing device to perform process 600 .
- Process 600 can also be implemented using hardware in whole or in part.
- processors may have multiple memories and multiple processors, and the steps of process 600 may in such cases be distributed using different processors and memories.
- processors and memory in the singular encompasses computing devices that have only one processor or one memory as well as devices having multiple processors or memories that may each be used in the performance of some but not necessarily all of the recited steps.
- process 600 is depicted and described as a series of steps. However, steps in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, steps in accordance with this disclosure may occur with other steps not presented and described herein. Furthermore, not all illustrated steps may be required to implement a method in accordance with the disclosed subject matter.
- process 600 begins a rate distortion loop by identifying a block of a plurality of blocks included in a frame of the plurality of frames of a video stream.
- a rate distortion loop processes the blocks of a frame by calculating rate distortion values for each block in a scan order.
- the blocks of a frame can be identified in raster scan order, where the blocks are identified and processed starting with a block in the upper left corner of the frame and proceeding along rows from left to right from the top row to the bottom row, identifying each block in turn for processing.
- a rate distortion loop calculates a value that can minimize the bits required to encode the block for a given distortion value, where distortion can be measured by calculating a difference function between the original block data and encoded/decoded block data.
- the rate distortion loop can calculate a rate distortion value for various prediction modes and identify an optimal prediction mode by comparing the rate distortion values for the various prediction modes. For example, two prediction modes having a similar distortion value can be distinguished by identifying the one with the lower bit rate. In another example two prediction modes having similar bit rates can be distinguished by identifying the one with the lowest distortion value.
- the block can be divided into sub-blocks.
- a 16 ⁇ 16 block can be divided into two 8 ⁇ 8 blocks, and at least one of the 8 ⁇ 8 blocks can be divided into two 4 ⁇ 4 blocks.
- FIG. 8 is a diagram showing a block and sub-blocks in accordance with aspects of the teachings herein.
- a 16 ⁇ 16 block 800 is divided into four 8 ⁇ 8 blocks 802 , 804 , 806 and 808 .
- Block 804 is further divided into four 4 ⁇ 4 blocks 810 , 812 , 814 and 816 .
- Dividing the block into sub-blocks can be based on results of the rate distortion loop, where rate distortion values can be calculated for various arrangements of sub-blocks and compared. If dividing the block or sub-block in to smaller sub-blocks can improve the rate distortion values for a particular prediction mode, the block can be so divided.
- the rate distortion loop identities optimal intra prediction modes for the sub-blocks of the block.
- the rate distortion loop may calculate rate distortion values for combinations of sub-blocks and intra prediction modes to identify a combination of sub-blocks and intra prediction modes that provide the lowest bit rate for a given distortion level.
- the rate distortion loop can do this by exhaustively calculating rate distortion values for each combination of sub-blocks and intra prediction modes, or by using probability-based techniques to first calculate rate distortion values for combinations of sub-blocks and intra prediction modes that have previously yielded good results in other blocks of the frame or other frames of the video stream.
- Combinations of sub-blocks and intra prediction modes that have not yielded good results can be eliminated from being tested by the rate distortion loop, for example, thereby speeding up the process of identifying an optimal set of sub-blocks and intra prediction modes.
- intermediate results can be tested against a threshold and, if calculation of a particular combination of sub-block and intra prediction mode exceeds a threshold, the calculation for that combination of sub-block size and intra prediction mode can be stopped and the next combination tested.
- FIG. 9 is a diagram of intra prediction modes in accordance with aspects of the teachings herein. Specifically, FIG. 9 shows ten intra prediction modes illustrated on nine diagrams representing 4 ⁇ 4 blocks of pixels with peripheral pixels A through M. Intra prediction includes forming a prediction block by filling a block with pixel values based on some or all of peripheral pixels A through M.
- Diagram 902 illustrates vertical mode VE, which propagates peripheral pixels A through D down the columns of the prediction block such that each pixel in a column is set equal to the adjacent peripheral pixel A through D in the direction of the arrows.
- Diagram 904 illustrates horizontal mode HE, which similarly propagates the peripheral pixels I through L along horizontal rows of the block in the direction of the arrows.
- Diagram 906 includes two different modes, DC and TrueMotion (TM) mode.
- the pixels of the block are set equal to a function of the peripheral pixels, for example an average of pixels A through D and I through J for DC mode or the peripheral pixel above the pixel of the block (one of A through D) plus the peripheral pixel in the same row as the pixel (one or I through L) minus peripheral pixel M for TM mode.
- Diagram 908 illustrates diagonal down/left mode LD, which forms a prediction block as a weighted average of two or three peripheral pixels (from pixels A through H) and propagates the weighted averages into the 4 ⁇ 4 pixel prediction block in the direction of the arrows.
- Diagram 910 illustrates diagonal down/right mode RD, which includes forming weighted averages of two or three pixels from peripheral pixels A through D and I through M and propagates the weighted averages in the direction of the arrows.
- Diagram 912 illustrates vertical/right mode VR, which includes forming weighted averages of two or three pixels from peripheral pixels I through M and propagates them into the 4 ⁇ 4 prediction block along the arrows.
- Diagram 914 illustrates horizontal/down mode HD, which includes forming weighted averages of two or three pixels from the peripheral pixels A through D and I through M and propagates the pixels to form the prediction block.
- Diagram 916 illustrates mode vertical/left VL, which includes forming weighted averages of pixels A through H and propagating the weighted averages into the 4 ⁇ 4 prediction block according to the arrows.
- Diagram 918 illustrates horizontal/up mode HU, which includes forming weighted averages of pixels I through M and propagates the weighted averages into the 4 ⁇ 4 prediction block according to the arrows.
- transform modes are identified based on the identified sub-blocks and intra prediction modes.
- the transform mode can be first identified by matching the size of the transform to the size of the sub-block. For example, if a block is divided into a variety of sub-blocks including 8 ⁇ 8 and 4 ⁇ 4 sub-blocks, each sub-block can be transformed using transforms equal in size to the sub-block.
- the transform mode can be further identified by matching the type of transform to the intra prediction mode.
- the identified transform can be applied to the residual pixel data of the sub-blocks following intra prediction.
- the two-dimensional (2D) array of pixels of a block or sub-block can be transformed by first applying one-dimensional (1D) transforms to the columns (vertical) of the sub-blocks followed by applying 1D transforms to the transformed rows (horizontal) or vice-versa.
- the 1D transforms applied to columns can be different than the 1D transforms applied to rows.
- both DCT and ADST can be applied to blocks in this manner.
- Table 1 includes the transform types for the residual block based on the intra prediction mode.
- the residual pixel data is transformed using the identified 1D transforms, and then the transformed residual pixel values are quantized to reduce the number of bits required to represent the pixel data.
- Quantization generates, for example, a 2D block of quantization indices.
- the quantization values are selected according to any known technique.
- scan modes for the sub-blocks of the block are identified based on the transform modes.
- the scanning order is designed to re-organize the 2D block of quantization indices into the format of a scalar sequence to permit entropy coding the transformed, quantized residual pixel values.
- the quantized, residual block may be scanned according to the arrows shown in block 1002 of FIG. 10 . That is, the columns of the block are scanned vertically from left to right to produce a 1D array of pixels corresponding to pixels 1 through 16 in block 1002 . This can be referred to as column-wise scanning.
- the quantized, residual block may be scanned according to the arrows as shown in block 1004 of FIG. 10 . That is, the rows of the block are scanned horizontally from top to bottom to produce a 1D array of pixels corresponding to pixels 1 through 16 in block 1004 . This can be referred to as row-wise scanning.
- Zig-zag scanning as shown in block 1006 of FIG. 10 may be used to form a 1D array of pixels 1 through 16 for sub-block size 4 ⁇ 4 and any of transform modes 1, 2, 5, 8, 9 or 10.
- Sub-block sizes 8 ⁇ 8 and 16 ⁇ 16 may be scanned with zig-zag scanning as shown for example in block 1006 of FIG. 10 regardless of transform mode.
- step 612 probability models that determine entropy codes for encoding the block are identified for each sub-block depending upon the transform type and sub-block size.
- FIG. 11 is a diagram of an example of probability models in accordance with aspects of the teachings herein.
- the example is shown in a two-dimensional table 1100 , the columns 1102 of which are formed by the transform modes, and the rows 1104 of which are formed by the sub-block sizes.
- the teachings herein contemplate maintaining separate, unique probability models for each transform type at each size. More specifically, FIG. 11 illustrates columns 1102 representing the four exemplary transform modes, DCT/DCT, DCT/DST, DST/DCT and DST/DST described above and rows 1104 representing three block sizes.
- the four transform modes and three block sizes combine to identify twelve probability models PM1-PM12 in this example.
- Probability models describe the relative probability with which quantized values occur following quantization of a transformed block.
- the more frequently occurring quantized values can be ordered by the entropy encoder to be encoded with fewer bits using the correlation of quantization values to frequency in the probability models and the most-recently encoded value per techniques described in, for example, RFC 6386, VP8 Data Format and Decoding Guide (copyright ⁇ 2011 IETF Trust and Bankoski et al.), available at http://tools.ietf.org/html/rfc6386. This can losslessly reduce the number of bits required to represent an encoded block.
- block sizes can be combined if it is determined that the probability models associated with the block sizes are similar enough that efficient entropy encoding can occur using a single set of probability models for more than one block size. That is, although it is contemplated that the probability model for each transform mode and size is unique, this may not be done.
- the same probability model may be used for more than one block size and/or more than one transform mode to simplify encoding and decoding if the differences between the ideal probability model(s) and the common probability model used are such that there is not a significant increase in the bit count after entropy coding of the residual block using the common probability model instead of the ideal probability model(s) for the residual block.
- initial values of the probability distributions in table 1100 can be determined in advance by using empirical data, and can include normalized counts of occurrences of the prediction modes.
- process 600 may keep track of the rate of occurrence of quantized values as the blocks of a frame are being encoded. These rates of occurrence are categorized by the size of the block and the transform mode used. Periodically, such as after completing encoding of a frame and before beginning the next frame, the encoder may update the probability models with the data gathered from the just completed frame. Other update periods are possible by, for example, establishing checkpoints that update the probability models while a frame is being processed.
- Probability models can attempt to track the most often used bit patterns in the 1D arrays of predicted, re-aligned, transformed, quantized and scanned pixels and substitute shorter bit patterns for the most frequently used patterns, thereby reducing the number of bits included in the encoded video bitstream.
- the probability models may be included along with the pixel data in the encoded video bitstream to assist in decoding the blocks at a decoder.
- the block is encoded using the identified sub-blocks, if any, prediction mode(s), transform mode(s) and scan mode(s) and is then entropy coded using the identified probability models.
- the block may be divided into sub-blocks for prediction, and each sub-block can be predicted to form a residual sub-block, which is then transformed, quantized, scanned and entropy coded.
- the encoded sub-blocks are included in an encoded video bitstream.
- bits identifying the arrangement of sub-blocks, prediction modes, transform modes and scan modes used to encode the block can be included in the encoded video bitstream to assist a decoder in decoding the encoded video bitstream.
- the decoder may also receive the probability models.
- identifying the sub-block sizes and intra-prediction modes can identify the transform modes, scan modes and probability model to be used in decoding the block, and therefore including bits indicating sub-block sizes and intra prediction modes may be included in the encoded video bitstream and information regarding scan modes, transform modes and probability model can be derived without requiring additional bits in a block header for the block within the encoded video bitstream.
- process 600 can test to see if any block of the frame remains to be processed, at which time process 600 can loop back to step 602 to perform rate distortion calculations on a next block from the frame in the scan order of the blocks. If no more blocks remain to be processed at step 618 , process 600 can exit.
- FIG. 7 is a flowchart diagram of a process 700 for decoding of a video stream in accordance with aspects of the teachings herein.
- Process 700 can be implemented in a system such as system 500 to decode a video stream using intra prediction and variable sized transforms.
- Process 700 can be implemented, for example, as a software program that is executed by a computing device such as transmitting station 112 or receiving station 130 .
- the software program can include machine-readable instructions that are stored in a memory such as memory 226 that, when executed by a processor such as CPU 224 , cause the computing device to perform process 700 .
- Process 700 can also be implemented using hardware in whole or in part. As explained above, some computing devices may have multiple memories and multiple processors, and the steps of process 700 may in such cases be distributed using different processors and memories.
- process 700 is depicted and described as a series of steps. However, steps in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, steps in accordance with this disclosure may occur with other steps not presented and described herein. Furthermore, not all illustrated steps may be required to implement a method in accordance with the disclosed subject matter.
- a block from an encoded video bitstream is identified.
- the encoded video bitstream includes header information that identifies frames and blocks of the video bitstream and information included by the encoder at process 600 to identify modes used to encode the block.
- process 700 identifies header information regarding sub-block sizes and intra prediction modes that were used by an encoder to encode the block of video data, for example using process 600 . If the block was encoded using inter prediction, that block is processed according to any known technique, and process 700 returns to step 702 to obtain a new block for processing.
- process 700 can use header data to identify sub-blocks into which the block may be divided for further processing. As described above in relation to FIG. 6 , identifying the sub-block sizes and prediction modes used to encode the block may be enough information to identify the transform mode, scan mode and probability model to be used to decode the block. In other cases, more information may be included in the header to identify various modes for decoding the block.
- the sub-blocks of the block can be decoded using the identified intra prediction modes, transform modes, scan modes and entropy codes.
- the sub-blocks can be decoded by entropy decoding the data bitstream, inverse scanning the data to reconstruct the 2D blocks and de-quantizing the 2D blocks to form transformed residual blocks.
- the transformed residual blocks are then inverse transformed using the appropriate 1D transform types for the size and intra prediction mode, and the prediction blocks are generated using the identified intra prediction modes.
- the prediction blocks are added to the residual blocks.
- process 700 checks the input encoded video bitstream to determine if any more blocks of a frame remain to be decoded. If any more blocks remain, process 700 loops back to step 702 to identify a next block for processing. If no more blocks of the frame remain, process 700 can exit.
- coding efficiency of residuals generated using intra prediction is improved by conforming the transform size to the prediction block size and then selecting a transform type and the scanning order of the subsequently quantized block based on the intra prediction mode.
- Separate probability models are maintained for each transform type and size such that entropy coding codes (and decodes) the quantization indices using a probability model that correspond to the type and size of the transform in use.
- the probability models may be adapted during processing of the blocks according to accumulated statistics.
- encoding and decoding illustrate some exemplary encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
- example or “exemplary” are used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” or “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations.
- Implementations of transmitting station 112 and/or receiving station 130 can be realized in hardware, software, or any combination thereof.
- the hardware can include, for example, computers, intellectual property (IP) cores, application-specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit.
- IP intellectual property
- ASICs application-specific integrated circuits
- programmable logic arrays optical processors
- programmable logic controllers programmable logic controllers
- microcode microcontrollers
- servers microprocessors, digital signal processors or any other suitable circuit.
- signal processors should be understood as encompassing any of the foregoing hardware, either singly or in combination.
- signals and “data” are used interchangeably. Further, portions of transmitting station 112 and receiving station 130 do not necessarily have to be implemented in the same manner.
- transmitting station 112 or receiving station 130 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein.
- a special purpose computer/processor can be utilized which can contain other hardware for carrying out any of the methods, algorithms, or instructions described herein.
- Transmitting station 112 and receiving station 130 can, for example, be implemented on computers in a video conferencing system.
- transmitting station 112 can be implemented on a server and receiving station 130 can be implemented on a device separate from the server, such as a hand-held communications device.
- transmitting station 112 can encode content using an encoder 470 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 500 .
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by transmitting station 112 .
- Other suitable transmitting station 112 and receiving station 130 implementation schemes are available.
- receiving station 130 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 470 may also include a decoder 500 .
- implementations of the present invention can take the form of a computer program product accessible from, for example, a tangible computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
Decoding an encoded video stream may include identifying an encoded block identifying an intra prediction mode for decoding the encoded block from the encoded video stream, identifying a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, identifying a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, identifying a scan mode for decoding the encoded block based on the transform mode, generating a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode, and outputting or storing the decoded block.
Description
This application is a continuation of U.S. application Ser. No. 13/763,921, filed on Feb. 11, 2013.
This disclosure relates to encoding and decoding visual data, such as video stream data, for transmission or storage.
Digital video streams typically represent video using a sequence of frames or still images. Each frame can include a number of blocks, which in turn may contain information describing the value of color, brightness or other attributes for pixels. The amount of data in a typical video stream is large, and transmission and storage of video can use significant computing or communications resources. Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
Disclosed herein are aspects of systems, methods and apparatuses for coding a video stream having a plurality of frames.
An aspect of the disclosure is a method for decoding an encoded video stream. The method includes receiving an encoded video stream, identifying an encoded block of an encoded frame from the encoded video stream, identifying an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes, and identifying a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, and the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Discrete Cosine Transform applied to each vertical column. The method includes identifying a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes, identifying a scan mode for decoding the encoded block based on the transform mode, generating a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode, and outputting or storing the decoded block.
Another aspect of the disclosure is an apparatus for decoding an encoded video stream. The apparatus includes a non-transitory computer readable memory, and a processor configured to execute instructions stored in the non-transitory computer readable memory to receive an encoded video stream, identify an encoded block of an encoded frame from the encoded video stream, identify an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes, and identify a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, and the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Discrete Cosine Transform applied to each vertical column. The processor configured to execute instructions stored in the non-transitory computer readable memory to identify a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes, identify a scan mode for decoding the encoded block based on the transform mode, generate a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode, and output or store the decoded block.
Another aspect of the disclosure is non-transitory computer-readable storage medium, comprising executable instructions that, when executed by a processor, facilitate performance of operations, comprising receiving an encoded video stream, identifying an encoded block of an encoded frame from the encoded video stream, identifying an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes, and identifying a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, and the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Discrete Cosine Transform applied to each vertical column. The operations comprising identifying a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes, identifying a scan mode for decoding the encoded block based on the transform mode, generating a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode, and outputting or storing the decoded block.
Variations in these and other aspects will be described in additional detail hereafter.
The description herein makes reference to the accompanying drawings wherein like reference numerals refer to like parts throughout the several views, and wherein:
Real-time video streaming, multi-point video conferencing or video broadcasting are examples of applications that employ video stream encoding including compression. One compression technique uses prediction to reduce the amount of data to be encoded. A block may be predicted by generating a prediction block using either inter prediction or intra prediction. Inter prediction generates the prediction block by performing a motion search to find pixel data matching the block from, e.g., another frame. Intra prediction generates the prediction block using pixel data from nearby blocks. The pixel data used to generate the prediction block is encoded. To encode the current block, only the differences (called a residual) between the current block and the prediction block need be encoded. This is less data that encoding the current block in its entirety.
In a transform-based codec, decorrelating transforms may be used that code the residual. Certain transforms, however, are less effective for coding residuals resulting from intra prediction. According to the teachings herein, the types and sizes of the transform applied to the prediction residual block are selected according to the prediction mode. The entropy coding of the quantized transform coefficients, including size, scanning order and probability model, are then specifically designed for each sub-portion of the coefficients. This can improve coding efficiency over transforms based on only a single block size.
First discussed below are environments in which aspects of this disclosure can be implemented, and then details of certain implementations are explained.
A network 128 can connect transmitting station 112 and a receiving station 130 for encoding and decoding of the video stream. Specifically, the video stream can be encoded in transmitting station 112 and the encoded video stream can be decoded in receiving station 130. Network 128 can be, for example, the Internet. Network 128 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from transmitting station 112 to, in this example, receiving station 130.
Receiving station 130, in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 . However, other suitable implementations of receiving station 130 are possible. For example, the processing of receiving station 130 can be distributed among multiple devices.
Other implementations of video encoding and decoding system 100 are possible. For example, an implementation can omit network 128. In another implementation, a video stream can be encoded and then stored for transmission at a later time to receiving station 130 or any other device having memory. In one implementation, receiving station 130 receives (e.g., via network 128, a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding. In an exemplary implementation, a real-time transport protocol (RTP) is used for transmission of the encoded video over network 128. In another implementation, a transport protocol other than RTP may be used, e.g., an HTTP-based video streaming protocol.
A CPU 224 in computing device 200 can be a conventional central processing unit. Alternatively, CPU 224 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed. Although the disclosed implementations can be practiced with a single processor as shown, e.g., CPU 224, advantages in speed and efficiency can be achieved using more than one processor.
A memory 226 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device can be used as memory 226. Memory 226 can include code and data 227 that is accessed by CPU 224 using a bus 230. Memory 226 can further include an operating system 232 and application programs 234, the application programs 234 including at least one program that permits CPU 224 to perform the methods described here. For example, application programs 234 can include applications 1 through N, which further include a video coding application that performs the methods described here. Computing device 200 can also include a secondary storage 236, which can, for example, be a memory card used with a mobile computing device 200. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in secondary storage 236 and loaded into memory 226 as needed for processing.
Although FIG. 2 depicts CPU 224 and memory 226 of computing device 200 as being integrated into a single unit, other configurations can be utilized. The operations of CPU 224 can be distributed across multiple machines (each machine having one or more of processors) that can be coupled directly or across a local area or other network. Memory 226 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of computing device 200. Although depicted here as a single bus, bus 230 of computing device 200 can be composed of multiple buses. Further, secondary storage 236 can be directly coupled to the other components of computing device 200 or can be accessed via a network and can comprise a single integrated unit such as a memory card or multiple units such as multiple memory cards. Computing device 200 can thus be implemented in a wide variety of configurations.
Segments or planes 358 can include blocks 360 that contain data corresponding to, for example, 16×16 pixels in frame 356. Blocks 360 can also be of any other suitable size such as 4×4, 8×8 16×8, 8×16, 16×16, or larger. nless otherwise noted, the terms block and macroblock are used interchangeably herein.
When video stream 350 is presented for encoding, each frame 356 including planes 358 within video stream 350 can be processed in units of blocks 360. At the intra/inter prediction stage 472, each block 360 can be encoded using intra-frame prediction (also called intra prediction) or inter-frame prediction (also called inter prediction). In any case, a prediction block can be formed. In the case of intra prediction, a prediction block can be formed from samples in the current frame that have been previously encoded and reconstructed. In the case of inter prediction, a prediction block can be formed from samples in one or more previously constructed reference frames.
Next, still referring to FIG. 4 , the prediction block can be subtracted from the current block at intra/inter prediction stage 472 to produce a residual block (also called a residual). Transform stage 474 transforms the residual into transform coefficients in, for example, the frequency domain. Examples of block-based transforms include the Karhunen-Loéve Transform (KLT), the Discrete Cosine Transform (DCT), and the Singular Value Decomposition Transform (SVD). In one example, the DCT transforms the block into the frequency domain. In the case of DCT, the transform coefficient values are based on spatial frequency, with the lowest frequency (DC) coefficient at the top-left of the matrix and the highest frequency coefficient at the bottom-right of the matrix. In an implementation described herein, an Asymmetric Discrete Sine Transform (ADST) is used.
The reconstruction path in FIG. 4 (shown by the dotted connection lines) can be used to ensure that both encoder 470 and a decoder 500 (described below) use the same reference frames to decode compressed bitstream 488. The reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at dequantization stage 480 and inverse transforming the dequantized transform coefficients at inverse transform stage 482 to produce a derivative residual block (also called a derivative residual). At reconstruction stage 484, the prediction block that was predicted at the intra/inter prediction stage 472 can be added to the derivative residual to create a reconstructed block. Loop filtering stage 486 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
Other variations of encoder 470 can be used to encode compressed bitstream 488. For example, a non-transform based encoder 470 can quantize the residual signal directly without transform stage 474. In another implementation, an encoder 470 can have quantization stage 476 and dequantization stage 480 combined into a single stage.
When compressed bitstream 488 is presented for decoding, the data elements within compressed bitstream 488 can be decoded by entropy decoding stage 502 (using, for example, arithmetic coding) to produce a set of quantized transform coefficients. Dequantization stage 504 dequantizes the quantized transform coefficients, and inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by inverse transform stage 482 in encoder 470. Using header information decoded from compressed bitstream 488, decoder 500 can use intra/inter prediction stage 508 to create the same prediction block as was created in encoder 470, e.g., at intra/inter prediction stage 472. At reconstruction stage 510, the prediction block can be added to the derivative residual to create a reconstructed block. Loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts. Other filtering can be applied to the reconstructed block. For example, deblocking filtering stage 514 can be applied to the reconstructed block to reduce blocking distortion, and the result is output as output video stream 516. Output video stream 516 can also be referred to as a decoded video stream and the terms will be used interchangeably herein.
Other variations of decoder 500 can be used to decode compressed bitstream 488. For example, decoder 500 can produce output video stream 516 without deblocking filtering stage 514.
For simplicity of explanation, process 600 is depicted and described as a series of steps. However, steps in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, steps in accordance with this disclosure may occur with other steps not presented and described herein. Furthermore, not all illustrated steps may be required to implement a method in accordance with the disclosed subject matter.
At step 602, process 600 begins a rate distortion loop by identifying a block of a plurality of blocks included in a frame of the plurality of frames of a video stream. A rate distortion loop processes the blocks of a frame by calculating rate distortion values for each block in a scan order. For example, the blocks of a frame can be identified in raster scan order, where the blocks are identified and processed starting with a block in the upper left corner of the frame and proceeding along rows from left to right from the top row to the bottom row, identifying each block in turn for processing.
A rate distortion loop calculates a value that can minimize the bits required to encode the block for a given distortion value, where distortion can be measured by calculating a difference function between the original block data and encoded/decoded block data. The rate distortion loop can calculate a rate distortion value for various prediction modes and identify an optimal prediction mode by comparing the rate distortion values for the various prediction modes. For example, two prediction modes having a similar distortion value can be distinguished by identifying the one with the lower bit rate. In another example two prediction modes having similar bit rates can be distinguished by identifying the one with the lowest distortion value.
At step 604, the block can be divided into sub-blocks. For example, a 16×16 block can be divided into two 8×8 blocks, and at least one of the 8×8 blocks can be divided into two 4×4 blocks. An example of this is shown in FIG. 8 . FIG. 8 is a diagram showing a block and sub-blocks in accordance with aspects of the teachings herein. A 16×16 block 800 is divided into four 8×8 blocks 802, 804, 806 and 808. Block 804 is further divided into four 4×4 blocks 810, 812, 814 and 816. Dividing the block into sub-blocks can be based on results of the rate distortion loop, where rate distortion values can be calculated for various arrangements of sub-blocks and compared. If dividing the block or sub-block in to smaller sub-blocks can improve the rate distortion values for a particular prediction mode, the block can be so divided.
At step 606, the rate distortion loop identities optimal intra prediction modes for the sub-blocks of the block. The rate distortion loop may calculate rate distortion values for combinations of sub-blocks and intra prediction modes to identify a combination of sub-blocks and intra prediction modes that provide the lowest bit rate for a given distortion level. The rate distortion loop can do this by exhaustively calculating rate distortion values for each combination of sub-blocks and intra prediction modes, or by using probability-based techniques to first calculate rate distortion values for combinations of sub-blocks and intra prediction modes that have previously yielded good results in other blocks of the frame or other frames of the video stream. Combinations of sub-blocks and intra prediction modes that have not yielded good results can be eliminated from being tested by the rate distortion loop, for example, thereby speeding up the process of identifying an optimal set of sub-blocks and intra prediction modes. In addition, intermediate results can be tested against a threshold and, if calculation of a particular combination of sub-block and intra prediction mode exceeds a threshold, the calculation for that combination of sub-block size and intra prediction mode can be stopped and the next combination tested.
Certain intra prediction modes can be described in relation to FIG. 9 . FIG. 9 is a diagram of intra prediction modes in accordance with aspects of the teachings herein. Specifically, FIG. 9 shows ten intra prediction modes illustrated on nine diagrams representing 4×4 blocks of pixels with peripheral pixels A through M. Intra prediction includes forming a prediction block by filling a block with pixel values based on some or all of peripheral pixels A through M. Diagram 902 illustrates vertical mode VE, which propagates peripheral pixels A through D down the columns of the prediction block such that each pixel in a column is set equal to the adjacent peripheral pixel A through D in the direction of the arrows. Diagram 904 illustrates horizontal mode HE, which similarly propagates the peripheral pixels I through L along horizontal rows of the block in the direction of the arrows. Diagram 906 includes two different modes, DC and TrueMotion (TM) mode. In each of these modes, the pixels of the block are set equal to a function of the peripheral pixels, for example an average of pixels A through D and I through J for DC mode or the peripheral pixel above the pixel of the block (one of A through D) plus the peripheral pixel in the same row as the pixel (one or I through L) minus peripheral pixel M for TM mode.
Diagram 908 illustrates diagonal down/left mode LD, which forms a prediction block as a weighted average of two or three peripheral pixels (from pixels A through H) and propagates the weighted averages into the 4×4 pixel prediction block in the direction of the arrows. Diagram 910 illustrates diagonal down/right mode RD, which includes forming weighted averages of two or three pixels from peripheral pixels A through D and I through M and propagates the weighted averages in the direction of the arrows. Diagram 912 illustrates vertical/right mode VR, which includes forming weighted averages of two or three pixels from peripheral pixels I through M and propagates them into the 4×4 prediction block along the arrows. Diagram 914 illustrates horizontal/down mode HD, which includes forming weighted averages of two or three pixels from the peripheral pixels A through D and I through M and propagates the pixels to form the prediction block. Diagram 916 illustrates mode vertical/left VL, which includes forming weighted averages of pixels A through H and propagating the weighted averages into the 4×4 prediction block according to the arrows. Diagram 918 illustrates horizontal/up mode HU, which includes forming weighted averages of pixels I through M and propagates the weighted averages into the 4×4 prediction block according to the arrows.
Returning to FIG. 6 , at step 608 transform modes are identified based on the identified sub-blocks and intra prediction modes. The transform mode can be first identified by matching the size of the transform to the size of the sub-block. For example, if a block is divided into a variety of sub-blocks including 8×8 and 4×4 sub-blocks, each sub-block can be transformed using transforms equal in size to the sub-block. The transform mode can be further identified by matching the type of transform to the intra prediction mode. The identified transform can be applied to the residual pixel data of the sub-blocks following intra prediction. For example, the two-dimensional (2D) array of pixels of a block or sub-block can be transformed by first applying one-dimensional (1D) transforms to the columns (vertical) of the sub-blocks followed by applying 1D transforms to the transformed rows (horizontal) or vice-versa.
The 1D transforms applied to columns can be different than the 1D transforms applied to rows. For example, both DCT and ADST can be applied to blocks in this manner. Table 1 includes the transform types for the residual block based on the intra prediction mode.
TABLE 1 | |||
Trans- | Intra | First | Second |
form | Prediction | transform | transform |
mode | mode | type/direction | type/ |
1 | TM | ADST/vertical | ADST/horizontal |
2 | RD | ADST/vertical | ADST/horizontal |
3 | VE | ADST/vertical | DCT/horizontal |
4 | VR | ADST/vertical | DCT/horizontal |
5 | HE | DCT/vertical | ADST/horizontal |
6 | HD | DCT/vertical | ADST/horizontal |
7 | HU | DCT/vertical | ADST/horizontal |
8 | DC | DCT/vertical | DCT/horizontal |
9 | LD | DCT/vertical | DCT/horizontal |
10 | VL | DCT/vertical | DCT/horizontal |
Following identification of transform modes (sizes and types) in step 608, the residual pixel data is transformed using the identified 1D transforms, and then the transformed residual pixel values are quantized to reduce the number of bits required to represent the pixel data. Quantization generates, for example, a 2D block of quantization indices. The quantization values are selected according to any known technique.
At step 610, scan modes for the sub-blocks of the block are identified based on the transform modes. The scanning order is designed to re-organize the 2D block of quantization indices into the format of a scalar sequence to permit entropy coding the transformed, quantized residual pixel values.
When the sub-block size is 4×4 (N×N) and the transform mode is 3 or 4 from Table 1, the quantized, residual block may be scanned according to the arrows shown in block 1002 of FIG. 10 . That is, the columns of the block are scanned vertically from left to right to produce a 1D array of pixels corresponding to pixels 1 through 16 in block 1002. This can be referred to as column-wise scanning. For sub-block size 4×4 and transform mode 6 or 7 from Table 1, the quantized, residual block may be scanned according to the arrows as shown in block 1004 of FIG. 10 . That is, the rows of the block are scanned horizontally from top to bottom to produce a 1D array of pixels corresponding to pixels 1 through 16 in block 1004. This can be referred to as row-wise scanning.
Zig-zag scanning as shown in block 1006 of FIG. 10 may be used to form a 1D array of pixels 1 through 16 for sub-block size 4×4 and any of transform modes 1, 2, 5, 8, 9 or 10. Sub-block sizes 8×8 and 16×16 may be scanned with zig-zag scanning as shown for example in block 1006 of FIG. 10 regardless of transform mode.
Returning to FIG. 6 , once the scan mode is identified and the sub-blocks are scanned to form respective 1D arrays of pixels for each sub-block of the block, at step 612 probability models that determine entropy codes for encoding the block are identified for each sub-block depending upon the transform type and sub-block size.
More or fewer modes and other sizes are possible. In addition, block sizes can be combined if it is determined that the probability models associated with the block sizes are similar enough that efficient entropy encoding can occur using a single set of probability models for more than one block size. That is, although it is contemplated that the probability model for each transform mode and size is unique, this may not be done. The same probability model may be used for more than one block size and/or more than one transform mode to simplify encoding and decoding if the differences between the ideal probability model(s) and the common probability model used are such that there is not a significant increase in the bit count after entropy coding of the residual block using the common probability model instead of the ideal probability model(s) for the residual block. In some implementations, initial values of the probability distributions in table 1100 can be determined in advance by using empirical data, and can include normalized counts of occurrences of the prediction modes.
In implementation of the teachings herein, process 600 may keep track of the rate of occurrence of quantized values as the blocks of a frame are being encoded. These rates of occurrence are categorized by the size of the block and the transform mode used. Periodically, such as after completing encoding of a frame and before beginning the next frame, the encoder may update the probability models with the data gathered from the just completed frame. Other update periods are possible by, for example, establishing checkpoints that update the probability models while a frame is being processed.
Probability models can attempt to track the most often used bit patterns in the 1D arrays of predicted, re-aligned, transformed, quantized and scanned pixels and substitute shorter bit patterns for the most frequently used patterns, thereby reducing the number of bits included in the encoded video bitstream. The probability models may be included along with the pixel data in the encoded video bitstream to assist in decoding the blocks at a decoder.
At step 614, the block is encoded using the identified sub-blocks, if any, prediction mode(s), transform mode(s) and scan mode(s) and is then entropy coded using the identified probability models. The block may be divided into sub-blocks for prediction, and each sub-block can be predicted to form a residual sub-block, which is then transformed, quantized, scanned and entropy coded. The encoded sub-blocks are included in an encoded video bitstream. Then, at step 616, bits identifying the arrangement of sub-blocks, prediction modes, transform modes and scan modes used to encode the block can be included in the encoded video bitstream to assist a decoder in decoding the encoded video bitstream. The decoder may also receive the probability models. Note that, in some cases, identifying the sub-block sizes and intra-prediction modes can identify the transform modes, scan modes and probability model to be used in decoding the block, and therefore including bits indicating sub-block sizes and intra prediction modes may be included in the encoded video bitstream and information regarding scan modes, transform modes and probability model can be derived without requiring additional bits in a block header for the block within the encoded video bitstream.
At step 618, process 600 can test to see if any block of the frame remains to be processed, at which time process 600 can loop back to step 602 to perform rate distortion calculations on a next block from the frame in the scan order of the blocks. If no more blocks remain to be processed at step 618, process 600 can exit.
For simplicity of explanation, process 700 is depicted and described as a series of steps. However, steps in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, steps in accordance with this disclosure may occur with other steps not presented and described herein. Furthermore, not all illustrated steps may be required to implement a method in accordance with the disclosed subject matter.
At step 702, a block from an encoded video bitstream is identified. The encoded video bitstream includes header information that identifies frames and blocks of the video bitstream and information included by the encoder at process 600 to identify modes used to encode the block. At step 704, process 700 identifies header information regarding sub-block sizes and intra prediction modes that were used by an encoder to encode the block of video data, for example using process 600. If the block was encoded using inter prediction, that block is processed according to any known technique, and process 700 returns to step 702 to obtain a new block for processing.
At step 706, process 700 can use header data to identify sub-blocks into which the block may be divided for further processing. As described above in relation to FIG. 6 , identifying the sub-block sizes and prediction modes used to encode the block may be enough information to identify the transform mode, scan mode and probability model to be used to decode the block. In other cases, more information may be included in the header to identify various modes for decoding the block.
At step 708, the sub-blocks of the block can be decoded using the identified intra prediction modes, transform modes, scan modes and entropy codes. The sub-blocks can be decoded by entropy decoding the data bitstream, inverse scanning the data to reconstruct the 2D blocks and de-quantizing the 2D blocks to form transformed residual blocks. The transformed residual blocks are then inverse transformed using the appropriate 1D transform types for the size and intra prediction mode, and the prediction blocks are generated using the identified intra prediction modes. Finally, the prediction blocks are added to the residual blocks. At step 710, process 700 checks the input encoded video bitstream to determine if any more blocks of a frame remain to be decoded. If any more blocks remain, process 700 loops back to step 702 to identify a next block for processing. If no more blocks of the frame remain, process 700 can exit.
According to the teachings herein, coding efficiency of residuals generated using intra prediction is improved by conforming the transform size to the prediction block size and then selecting a transform type and the scanning order of the subsequently quantized block based on the intra prediction mode. Separate probability models are maintained for each transform type and size such that entropy coding codes (and decodes) the quantization indices using a probability model that correspond to the type and size of the transform in use. The probability models may be adapted during processing of the blocks according to accumulated statistics.
The aspects of encoding and decoding described above illustrate some exemplary encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
The words “example” or “exemplary” are used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” or “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion. As used in this application, the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances. In addition, the articles “a” and “an” as used in this application and the appended claims should generally be construed to mean “one or more” unless specified otherwise or clear from context to be directed to a singular form. Moreover, use of the term “an implementation” or “one implementation” throughout is not intended to mean the same embodiment or implementation unless described as such.
Implementations of transmitting station 112 and/or receiving station 130 (and the algorithms, methods, instructions, etc., stored thereon and/or executed thereby, including by encoder 470 and decoder 500) can be realized in hardware, software, or any combination thereof. The hardware can include, for example, computers, intellectual property (IP) cores, application-specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit. In the claims, the term “processor” should be understood as encompassing any of the foregoing hardware, either singly or in combination. The terms “signal” and “data” are used interchangeably. Further, portions of transmitting station 112 and receiving station 130 do not necessarily have to be implemented in the same manner.
Further, in one aspect, for example, transmitting station 112 or receiving station 130 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein. In addition, or alternatively, for example, a special purpose computer/processor can be utilized which can contain other hardware for carrying out any of the methods, algorithms, or instructions described herein.
Transmitting station 112 and receiving station 130 can, for example, be implemented on computers in a video conferencing system. Alternatively, transmitting station 112 can be implemented on a server and receiving station 130 can be implemented on a device separate from the server, such as a hand-held communications device. In this instance, transmitting station 112 can encode content using an encoder 470 into an encoded video signal and transmit the encoded video signal to the communications device. In turn, the communications device can then decode the encoded video signal using a decoder 500. Alternatively, the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by transmitting station 112. Other suitable transmitting station 112 and receiving station 130 implementation schemes are available. For example, receiving station 130 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 470 may also include a decoder 500.
Further, all or a portion of implementations of the present invention can take the form of a computer program product accessible from, for example, a tangible computer-usable or computer-readable medium. A computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor. The medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
The above-described embodiments, implementations and aspects have been described in order to allow easy understanding of the present invention and do not limit the present invention. On the contrary, the invention is intended to cover various modifications and equivalent arrangements included within the scope of the appended claims, which scope is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structure as is permitted under the law.
Claims (20)
1. A method for decoding an encoded video stream, the method comprising:
receiving an encoded video stream;
identifying an encoded block of an encoded frame from the encoded video stream;
identifying an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes;
identifying a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, and the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Discrete Cosine Transform applied to each vertical column;
identifying a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes;
identifying a scan mode for decoding the encoded block based on the transform mode;
generating a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode; and
outputting or storing the decoded block.
2. The method of claim 1 , wherein identifying the transform mode includes:
identifying a transform size for decoding the encoded block; and
identifying a transform type for decoding the encoded block.
3. The method of claim 2 , wherein each probability model from the plurality of probability models is associated with one transform mode from the plurality of transform modes and one size from a plurality of available sizes for decoding the encoded block.
4. The method of claim 2 , wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes and at least one size from a plurality of available sizes for decoding the encoded block.
5. The method of claim 4 , wherein a probability model from the plurality of probability models is associated with at least two transform modes from the plurality of transform modes and at least two sizes from the plurality of available sizes.
6. The method of claim 1 , wherein identifying the intra prediction mode includes reading the intra prediction mode from a header for the encoded block.
7. The method of claim 6 , wherein reading the intra prediction mode includes decoding the header from the encoded video stream.
8. The method of claim 1 , wherein the scan mode is one of a plurality of scan modes, wherein the plurality of scan modes includes a column-wise scan mode, a row-wise scan mode, and a zig-zag scan mode, and wherein each transform mode from the plurality of transform modes is associated with a scan mode from the plurality of scan modes.
9. The method of claim 1 , wherein the plurality of intra prediction modes includes at least two of a TrueMotion mode, a DC mode, a diagonal down/left mode, a diagonal down/right mode, a vertical/right mode, a horizontal/down mode, a vertical/left mode, or a horizontal/up mode.
10. An apparatus for decoding an encoded video stream, the apparatus comprising:
a non-transitory computer readable memory; and
a processor configured to execute instructions stored in the non-transitory computer readable memory to:
receive an encoded video stream;
identify an encoded block of an encoded frame from the encoded video stream;
identify an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes;
identify a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, and the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Discrete Cosine Transform applied to each vertical column;
identify a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes;
identify a scan mode for decoding the encoded block based on the transform mode;
generate a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode; and
output or store the decoded block.
11. The apparatus of claim 10 , wherein the processor is configured to execute instructions stored in the non-transitory computer readable memory to identify the transform mode by:
identifying a transform size for decoding the encoded block; and
identifying a transform type for decoding the encoded block.
12. The apparatus of claim 11 , wherein each probability model from the plurality of probability models is associated with one transform mode from the plurality of transform modes and one size from a plurality of available sizes for decoding the encoded block.
13. The apparatus of claim 11 , wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes and at least one size from a plurality of available sizes for decoding the encoded block.
14. The apparatus of claim 13 , wherein a probability model from the plurality of probability models is associated with at least two transform modes from the plurality of transform modes and at least two sizes from the plurality of available sizes.
15. The apparatus of claim 10 , wherein the processor is configured to execute instructions stored in the non-transitory computer readable memory to identify the intra prediction mode by:
reading the intra prediction mode from a header for the encoded block.
16. The apparatus of claim 15 , wherein reading the intra prediction mode includes decoding the header from the encoded video stream.
17. The apparatus of claim 10 , wherein the scan mode is one of a plurality of scan modes, wherein the plurality of scan modes includes a column-wise scan mode, a row-wise scan mode, and a zig-zag scan mode, and wherein each transform mode from the plurality of transform modes is associated with a scan mode from the plurality of scan modes.
18. The apparatus of claim 10 , wherein the plurality of intra prediction modes includes at least two of a TrueMotion mode, a DC mode, a diagonal down/left mode, a diagonal down/right mode, a vertical/right mode, a horizontal/down mode, a vertical/left mode, or a horizontal/up mode.
19. A non-transitory computer-readable storage medium, comprising executable instructions that, when executed by a processor, facilitate performance of operations, comprising:
receiving an encoded video stream;
identifying an encoded block of an encoded frame from the encoded video stream;
identifying an intra prediction mode for decoding the encoded block from the encoded video stream, wherein the intra prediction mode is one of a plurality of intra prediction modes;
identifying a transform mode from a plurality of transform modes for decoding the encoded block based on the intra prediction mode, wherein each transform mode from the plurality of transform modes is associated with at least one intra prediction mode from the plurality of intra prediction modes, and wherein the plurality of transform modes includes a one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, the one dimensional Asymmetrical Discrete Sine Transform applied to each horizontal row followed by a one dimensional Discrete Cosine Transform applied to each vertical column, the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Asymmetrical Discrete Sine Transform applied to each vertical column, and the one dimensional Discrete Cosine Transform applied to each horizontal row followed by the one dimensional Discrete Cosine Transform applied to each vertical column;
identifying a probability model from a plurality of probability models for decoding the encoded block based on the transform mode, wherein each probability model from the plurality of probability models is associated with at least one transform mode from the plurality of transform modes;
identifying a scan mode for decoding the encoded block based on the transform mode;
generating a decoded block by decoding the encoded block using the scan mode, the probability model, the transform mode, and the intra prediction mode; and
outputting or storing the decoded block.
20. The non-transitory computer-readable storage medium of claim 19 , wherein:
each probability model from the plurality of probability models is associated with a transform mode from the plurality of transform modes and a size from a plurality of available sizes for decoding the encoded block;
identifying the transform mode includes:
identifying a transform size for decoding the encoded block; and
identifying a transform type for decoding the encoded block;
identifying the intra prediction mode includes reading the intra prediction mode from a header for the encoded block, wherein reading the intra prediction mode includes decoding the header from the encoded video stream, and wherein the plurality of intra prediction modes includes at least two of a TrueMotion mode, a DC mode, a diagonal down/left mode, a diagonal down/right mode, a vertical/right mode, a horizontal/down mode, a vertical/left mode, or a horizontal/up mode; and
the scan mode is one of a plurality of scan modes, wherein the plurality of scan modes includes a column-wise scan mode, a row-wise scan mode, and a zig-zag scan mode, and wherein each transform mode from the plurality of transform modes is associated with a scan mode from the plurality of scan modes.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/373,590 US10142628B1 (en) | 2013-02-11 | 2016-12-09 | Hybrid transform in video codecs |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/763,921 US9544597B1 (en) | 2013-02-11 | 2013-02-11 | Hybrid transform in video encoding and decoding |
US15/373,590 US10142628B1 (en) | 2013-02-11 | 2016-12-09 | Hybrid transform in video codecs |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/763,921 Continuation US9544597B1 (en) | 2013-02-11 | 2013-02-11 | Hybrid transform in video encoding and decoding |
Publications (1)
Publication Number | Publication Date |
---|---|
US10142628B1 true US10142628B1 (en) | 2018-11-27 |
Family
ID=57706118
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/763,921 Active 2034-05-20 US9544597B1 (en) | 2013-02-11 | 2013-02-11 | Hybrid transform in video encoding and decoding |
US15/373,590 Active 2033-08-16 US10142628B1 (en) | 2013-02-11 | 2016-12-09 | Hybrid transform in video codecs |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/763,921 Active 2034-05-20 US9544597B1 (en) | 2013-02-11 | 2013-02-11 | Hybrid transform in video encoding and decoding |
Country Status (1)
Country | Link |
---|---|
US (2) | US9544597B1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10638160B2 (en) * | 2011-01-13 | 2020-04-28 | Texas Instruments Incorporated | Method and apparatus for a low complexity transform unit partitioning structure for HEVC |
US11275556B2 (en) * | 2018-02-27 | 2022-03-15 | Zetane Systems Inc. | Method, computer-readable medium, and processing unit for programming using transforms on heterogeneous data |
US11985353B2 (en) * | 2022-05-25 | 2024-05-14 | Texas Instruments Incorporated | Method and apparatus for a low complexity transform unit partitioning structure for HEVC |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2016190690A1 (en) * | 2015-05-26 | 2016-12-01 | 엘지전자(주) | Method and device for processing video signal by using adaptive and separable graph-based transform |
US9712830B1 (en) * | 2016-09-15 | 2017-07-18 | Dropbox, Inc. | Techniques for image recompression |
FR3062011B1 (en) * | 2017-01-17 | 2020-01-10 | Stmicroelectronics (Grenoble 2) Sas | METHOD AND DEVICE FOR CONTROLLED DYNAMIC ENCODING OF A MULTIDIMENSIONAL DIGITAL SIGNAL, IN PARTICULAR AN IMAGE SIGNAL AND CORRESPONDING METHOD AND DEVICE FOR DECODING |
US10595033B2 (en) * | 2017-02-15 | 2020-03-17 | Sony Corporation | Variable length coding of header data for image compression |
US11259046B2 (en) * | 2017-02-15 | 2022-02-22 | Apple Inc. | Processing of equirectangular object data to compensate for distortion by spherical projections |
EP3370424A1 (en) * | 2017-03-02 | 2018-09-05 | Thomson Licensing | A method and a device for picture encoding and decoding |
US10484695B2 (en) | 2017-10-23 | 2019-11-19 | Google Llc | Refined entropy coding for level maps |
US10869060B2 (en) * | 2018-01-30 | 2020-12-15 | Google Llc | Efficient context model computation design in transform coefficient coding |
US10645381B2 (en) * | 2018-04-30 | 2020-05-05 | Google Llc | Intra-prediction for smooth blocks in image/video |
BR112020020046A2 (en) * | 2018-05-02 | 2021-01-05 | Interdigital Vc Holdings, Inc. | VIDEO ENCODING AND DECODING |
Citations (133)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4774574A (en) | 1987-06-02 | 1988-09-27 | Eastman Kodak Company | Adaptive block transform image coding method and apparatus |
US5068724A (en) | 1990-06-15 | 1991-11-26 | General Instrument Corporation | Adaptive motion compensation for digital television |
US5091782A (en) | 1990-04-09 | 1992-02-25 | General Instrument Corporation | Apparatus and method for adaptively compressing successive blocks of digital video |
US5121216A (en) | 1989-07-19 | 1992-06-09 | Bell Communications Research | Adaptive transform coding of still images |
US5146324A (en) | 1990-07-31 | 1992-09-08 | Ampex Corporation | Data compression using a feedforward quantization estimator |
US5224062A (en) | 1992-03-17 | 1993-06-29 | Sun Microsystems, Inc. | Method and apparatus for fast implementation of inverse discrete cosine transform in a digital image processing system using optimized lookup tables |
US5235623A (en) | 1989-11-14 | 1993-08-10 | Nec Corporation | Adaptive transform coding by selecting optimum block lengths according to variatons between successive blocks |
US5260782A (en) | 1991-08-30 | 1993-11-09 | Matsushita Electric Industrial Co., Ltd. | Adaptive DCT/DPCM video signal coding method |
US5274442A (en) | 1991-10-22 | 1993-12-28 | Mitsubishi Denki Kabushiki Kaisha | Adaptive blocking image signal coding system |
US5341440A (en) | 1991-07-12 | 1994-08-23 | Earl Joseph G | Method and apparatus for increasing information compressibility |
US5422963A (en) | 1993-10-15 | 1995-06-06 | At&T Corp. | Block transform coder for arbitrarily shaped image segments |
US5444800A (en) | 1988-11-18 | 1995-08-22 | At&T Corp. | Side-match and overlap-match vector quantizers for images |
US5635938A (en) | 1993-12-28 | 1997-06-03 | Oki Electric Industry Co., Ltd. | Quantizing and dequantizing circuit with reduced size |
US5737020A (en) | 1995-03-27 | 1998-04-07 | International Business Machines Corporation | Adaptive field/frame encoding of discrete cosine transform |
US5764805A (en) | 1995-10-25 | 1998-06-09 | David Sarnoff Research Center, Inc. | Low bit rate video encoder using overlapping block motion compensation and zerotree wavelet coding |
US5767908A (en) | 1994-12-19 | 1998-06-16 | Samsung Electronics Co., Ltd. | Adaptive orthogonal transform coding apparatus |
US5872866A (en) | 1995-04-18 | 1999-02-16 | Advanced Micro Devices, Inc. | Method and apparatus for improved video decompression by predetermination of IDCT results based on image characteristics |
WO1999018735A1 (en) | 1997-10-07 | 1999-04-15 | Thomson Consumer Electronics, Inc. | Picture masking and compositing in the frequency domain |
US5903669A (en) | 1995-01-31 | 1999-05-11 | Canon Kabushiki Kaisha | Image processing apparatus and method |
US6108383A (en) | 1997-07-15 | 2000-08-22 | On2.Com, Inc. | Method and apparatus for compression and decompression of video images |
US6115501A (en) | 1995-07-10 | 2000-09-05 | Hyundai Electronics Industries Co., Ltd. | Grid moving method for minimizing image information of an object |
US6134350A (en) | 1998-02-18 | 2000-10-17 | Dome Imaging Systems, Inc. | Method of producing wavelets and compressing digital images and of restoring the digital images |
US6167161A (en) | 1996-08-23 | 2000-12-26 | Nec Corporation | Lossless transform coding system having compatibility with lossy coding |
US6408025B1 (en) | 1997-01-31 | 2002-06-18 | Siemens Aktiengesellschaft | Method and configuration for coding and decoding digitized pictures |
US20020168114A1 (en) | 2001-02-06 | 2002-11-14 | Valente Stephane Edouard | Preprocessing method applied to textures of arbitrarily shaped objects |
US20020196983A1 (en) | 1997-10-22 | 2002-12-26 | Yoshikazu Kobayashi | Image encoding apparatus, image encoding method, and recording medium in which image encoding program is recorded |
US6522783B1 (en) | 1999-11-23 | 2003-02-18 | Sharp Laboratories Of America, Inc. | Re-indexing for efficient compression of palettized images |
US6522784B1 (en) | 2000-04-11 | 2003-02-18 | International Business Machines Corporation | Enhanced compression of gray-level images |
US20030048943A1 (en) | 1997-11-27 | 2003-03-13 | Seiko Epson Corporation | Encoding method of a color image and its encoding device and a decoding method of the color image and its decoding device |
US20030146925A1 (en) | 1997-11-12 | 2003-08-07 | Canon Kabushiki Kaisha | Generating and using a color palette |
US6683991B1 (en) | 1998-10-30 | 2004-01-27 | Canon Kabushiki Kaisha | Method and apparatus for representing a digital image to provide a coded representation |
US20040057519A1 (en) | 2002-09-24 | 2004-03-25 | Matsushita Electric Industrial Co., Ltd. | Image coding method and apparatus |
US20040125204A1 (en) | 2002-12-27 | 2004-07-01 | Yoshihisa Yamada | Moving picture coding apparatus and moving picture decoding apparatus |
US20040184537A1 (en) | 2002-08-09 | 2004-09-23 | Ralf Geiger | Method and apparatus for scalable encoding and method and apparatus for scalable decoding |
US6819793B1 (en) | 2000-06-30 | 2004-11-16 | Intel Corporation | Color distribution for texture and image compression |
US20050025246A1 (en) * | 2003-07-18 | 2005-02-03 | Microsoft Corporation | Decoding jointly coded transform type and subblock pattern information |
US20050053151A1 (en) | 2003-09-07 | 2005-03-10 | Microsoft Corporation | Escape mode code resizing for fields and slices |
US20050147163A1 (en) | 2003-12-30 | 2005-07-07 | Microsoft Corporation | Scalable video transcoding |
US6917651B1 (en) | 2000-01-28 | 2005-07-12 | Samsung Electronics Co., Ltd. | Variable length coding method and apparatus |
US20050249291A1 (en) | 2004-05-07 | 2005-11-10 | Stephen Gordon | Method and system for generating a transform size syntax element for video decoding |
US20060045368A1 (en) | 2002-06-28 | 2006-03-02 | Microsoft Corporation | Rate allocation for mixed content video |
US20060098738A1 (en) | 2003-01-09 | 2006-05-11 | Pamela Cosman | Video encoding methods and devices |
US20060115168A1 (en) | 2004-11-30 | 2006-06-01 | Canon Kabushiki Kaisha | Image coding apparatus and image coding method |
US20060133682A1 (en) | 2004-12-17 | 2006-06-22 | Microsoft Corporation | Reversible overlap operator for efficient lossless data compression |
US20060210181A1 (en) | 1996-07-03 | 2006-09-21 | Hsi-Jung Wu | Digital image coding system having self-adjusting selection criteria for selecting a transform function |
US20060239575A1 (en) | 2002-04-15 | 2006-10-26 | Kiyofumi Abe | Picture coding method and picture decoding method |
US20060251330A1 (en) | 2003-05-20 | 2006-11-09 | Peter Toth | Hybrid video compression method |
US20070036223A1 (en) | 2005-08-12 | 2007-02-15 | Microsoft Corporation | Efficient coding and decoding of transform blocks |
US20070078661A1 (en) | 2005-09-30 | 2007-04-05 | Portalplayer, Inc. | Configurable system for performing repetitive actions and method for configuring and operating same |
US20070140349A1 (en) | 2004-03-01 | 2007-06-21 | Koninklijke Philips Electronics, N.V. | Video encoding method and apparatus |
US20070183500A1 (en) | 2006-02-09 | 2007-08-09 | Nagaraj Raghavendra C | Video encoding |
US20070201554A1 (en) | 2006-02-24 | 2007-08-30 | Samsung Electronics Co., Ltd. | Video transcoding method and apparatus |
US7266149B2 (en) | 2001-12-17 | 2007-09-04 | Microsoft Corporation | Sub-block transform coding of prediction residuals |
US20070211953A1 (en) | 2006-03-07 | 2007-09-13 | Yukihiro Sasagawa | Signal processor |
US20070223583A1 (en) | 2000-10-31 | 2007-09-27 | Takeshi Nagai | Data transmission apparatus and method |
US20080008246A1 (en) | 2006-07-05 | 2008-01-10 | Debargha Mukherjee | Optimizing video coding |
US20080043848A1 (en) | 1999-11-29 | 2008-02-21 | Kuhn Peter M | Video/audio signal processing method and video/audio signal processing apparatus |
US20080084929A1 (en) | 2006-10-05 | 2008-04-10 | Xiang Li | Method for video coding a sequence of digitized images |
US20080123736A1 (en) | 2005-09-20 | 2008-05-29 | Mitsubishi Electric Corporation | Image encoding method and image decoding method, image encoder and image decoder, and image encoded bit stream and recording medium |
US20080123977A1 (en) | 2005-07-22 | 2008-05-29 | Mitsubishi Electric Corporation | Image encoder and image decoder, image encoding method and image decoding method, image encoding program and image decoding program, and computer readable recording medium recorded with image encoding program and computer readable recording medium recorded with image decoding program |
US20080123947A1 (en) | 2005-07-22 | 2008-05-29 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, image decoding program, computer readable recording medium having image encoding program recorded therein |
US7409099B1 (en) | 2004-08-10 | 2008-08-05 | On2 Technologies, Inc. | Method of improved image/video compression via data re-ordering |
US20080253463A1 (en) | 2007-04-13 | 2008-10-16 | Apple Inc. | Method and system for video encoding and decoding |
US20080310512A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Separable directional transforms |
US20090041128A1 (en) | 2002-02-28 | 2009-02-12 | At&T Intellectual Property Ii, L.P., Formerly Known As At&T Corp. | System and method for using pattern vectors for video and image coding and decoding |
US7492823B2 (en) | 1997-07-16 | 2009-02-17 | Samsung Electronics Co., Ltd. | Signal adaptive filtering method, signal adaptive filter and computer readable medium for storing program therefor |
US20090049641A1 (en) | 2006-03-08 | 2009-02-26 | Pullins Alan T | Vacuum cleaner with wand activated conversion valve |
US20090067503A1 (en) | 2006-01-07 | 2009-03-12 | Electronics And Telecommunications Research Institute | Method and apparatus for video data encoding and decoding |
US20090123066A1 (en) | 2005-07-22 | 2009-05-14 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, image decoding program, computer readable recording medium having image encoding program recorded therein, |
US20090122864A1 (en) | 2005-11-08 | 2009-05-14 | Matsushita Electric Industrial Co., Ltd. | Moving picture coding method, moving picture decoding method, and apparatuses of the same |
US20090228290A1 (en) | 2002-09-04 | 2009-09-10 | Microsoft Corporation | Mixed lossless audio compression |
US20090274382A1 (en) | 2008-05-02 | 2009-11-05 | Novateck Microelectronics Corp. | Entropy decoding circuit, entropy decoding method, and entropy decoding method using pipeline manner |
US20100020867A1 (en) | 2007-01-18 | 2010-01-28 | Thomas Wiegand | Quality Scalable Video Data Stream |
US20100086049A1 (en) | 2008-10-03 | 2010-04-08 | Qualcomm Incorporated | Video coding using transforms bigger than 4x4 and 8x8 |
WO2010039288A1 (en) | 2008-10-03 | 2010-04-08 | Qualcomm Incorporated | Digital video coding with interpolation filters and offsets |
WO2010039015A2 (en) | 2008-10-02 | 2010-04-08 | 한국전자통신연구원 | Apparatus and method for coding/decoding image selectivly using descrete cosine/sine transtorm |
JP2010199959A (en) | 2009-02-25 | 2010-09-09 | Nippon Telegr & Teleph Corp <Ntt> | Image-coding apparatus, image-coding method and image-coding program |
US20100246951A1 (en) | 2009-03-31 | 2010-09-30 | Canon Kabushiki Kaisha | Colour correcting foreground colours for visual quality improvement |
US20100290520A1 (en) | 2009-05-14 | 2010-11-18 | Massachusetts Institute Of Technology | Selecting transforms for compressing visual data |
US20100309286A1 (en) | 2009-06-05 | 2010-12-09 | Qualcomm Incorporated | Encoding of three-dimensional conversion information with two-dimensional video sequence |
US20110032983A1 (en) | 2009-08-07 | 2011-02-10 | Osman Gokhan Sezer | Probabilistic Bit-Rate and Rate-Distortion Cost Estimation for Video Coding |
US7894530B2 (en) | 2004-05-07 | 2011-02-22 | Broadcom Corporation | Method and system for dynamic selection of transform size in a video decoder based on signal content |
US7912318B2 (en) | 2007-10-29 | 2011-03-22 | Canon Kabushiki Kaisha | Data transform apparatus and control method thereof |
US20110090959A1 (en) | 2008-04-16 | 2011-04-21 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Bit-depth scalability |
WO2011049399A2 (en) | 2009-10-24 | 2011-04-28 | Park Chul | Method for processing advertising message |
US7936820B2 (en) | 2004-12-22 | 2011-05-03 | Nec Corporation | Moving-picture compression encoding method, apparatus and program |
US20110182352A1 (en) | 2005-03-31 | 2011-07-28 | Pace Charles P | Feature-Based Video Compression |
US8000546B2 (en) | 2008-08-01 | 2011-08-16 | National Cheng Kung University | Adaptive scan method for image/video coding |
US20110206135A1 (en) | 2008-10-28 | 2011-08-25 | Virginie Drugeon | Image coding method, image decoding method, image coding apparatus, image decoding apparatus, integrated circuit and program |
US20110243249A1 (en) | 2010-04-05 | 2011-10-06 | Samsung Electronics Co., Ltd. | Method and apparatus for encoding video by performing in-loop filtering based on tree-structured data unit, and method and apparatus for decoding video by performing the same |
US20110268183A1 (en) | 2009-01-27 | 2011-11-03 | Thomson Licensing | Method and apparatus for transform selection in video encoding and decoding |
US20110274162A1 (en) | 2010-05-04 | 2011-11-10 | Minhua Zhou | Coding Unit Quantization Parameters in Video Coding |
US20110293009A1 (en) | 2010-05-27 | 2011-12-01 | Freescale Semiconductor Inc. | Video processing system, computer program product and method for managing a transfer of information between a memory unit and a decoder |
US20110293012A1 (en) | 2010-05-27 | 2011-12-01 | The Hong Kong University Of Science And Technology | Motion estimation of images |
WO2012005099A1 (en) | 2010-07-09 | 2012-01-12 | ソニー株式会社 | Image processing device, and image processing method |
US20120008683A1 (en) | 2010-07-09 | 2012-01-12 | Qualcomm Incorporated | Signaling selected directional transform for video coding |
US20120057360A1 (en) | 2010-09-02 | 2012-03-08 | S&S Precision, Llc | Integrated Illumination Device Mount |
US20120057630A1 (en) | 2010-09-08 | 2012-03-08 | Samsung Electronics Co., Ltd. | Low complexity transform coding using adaptive dct/dst for intra-prediction |
US20120128066A1 (en) | 2009-08-06 | 2012-05-24 | Panasonic Corporation | Encoding method, decoding method, encoding device and decoding device |
US20120162455A1 (en) | 2010-12-23 | 2012-06-28 | Samsung Electronics Co., Ltd. | Digital image processing apparatus including handshake correction module and methods of controlling the digital image processing apparatus |
US20120170649A1 (en) | 2010-12-29 | 2012-07-05 | Qualcomm Incorporated | Video coding using mapped transforms and scanning modes |
US20120177116A1 (en) | 2011-01-12 | 2012-07-12 | General Instrument Corporation | Efficient Transform Unit Representation |
US20120201298A1 (en) | 2011-02-04 | 2012-08-09 | General Instrument Corporation | Implicit Transform Unit Representation |
US20120230411A1 (en) | 2011-03-09 | 2012-09-13 | Mediatek Singapore Pte. Ltd. | Method and Apparatus of Transform Unit Partition with Reduced Complexity |
US20120230418A1 (en) | 2011-03-08 | 2012-09-13 | Qualcomm Incorporated | Coding of transform coefficients for video coding |
WO2012166959A1 (en) | 2011-06-02 | 2012-12-06 | Qualcomm Incorporated | Fast computing of discrete cosine and sine transforms of types vi and vii |
US20120308128A1 (en) | 2011-05-30 | 2012-12-06 | Fujifilm Corporation | Image data coding apparatus, method of controlling operation of same, and program therefor |
US20130003859A1 (en) | 2011-06-30 | 2013-01-03 | Qualcomm Incorporated | Transition between run and level coding modes |
US20130003824A1 (en) | 2011-07-01 | 2013-01-03 | Qualcomm Incorporated | Applying non-square transforms to video data |
US20130003828A1 (en) | 2011-07-01 | 2013-01-03 | Cohen Robert A | Method for Selecting Transform Types From Mapping Table for Prediction Modes |
US20130022107A1 (en) | 2011-07-19 | 2013-01-24 | Qualcomm Incorporated | Deblocking of non-square blocks for video coding |
US20130034169A1 (en) | 2011-08-05 | 2013-02-07 | Mangesh Devidas Sadafale | Block-Based Parallel Deblocking Filter in Video Coding |
US20130034152A1 (en) | 2010-04-16 | 2013-02-07 | Sk Telecom Co., Ltd. | Apparatus and method for encoding/decoding images |
US20130070845A1 (en) | 2009-08-07 | 2013-03-21 | Korea Advanced Institute Of Science And Technology | Motion picture encoding apparatus and method thereof |
US20130089145A1 (en) | 2011-10-11 | 2013-04-11 | Qualcomm Incorporated | Most probable transform for intra prediction coding |
US20130089138A1 (en) | 2011-06-27 | 2013-04-11 | Qualcomm Incorporated | Coding syntax elements using vlc codewords |
US20130114730A1 (en) | 2011-11-07 | 2013-05-09 | Qualcomm Incorporated | Coding significant coefficient information in transform skip mode |
US20130128974A1 (en) | 2011-11-18 | 2013-05-23 | Qualcomm Incorporated | Adaptive overlapped block motion compensation |
US20130136175A1 (en) | 2011-09-12 | 2013-05-30 | Qualcomm Incorporated | Non-square transform units and prediction units in video coding |
US20130176211A1 (en) | 2010-09-13 | 2013-07-11 | Sony Computer Entertainment Inc. | Image processing device for displaying moving image and image processing method thereof |
US8494290B2 (en) | 2011-05-05 | 2013-07-23 | Mitsubishi Electric Research Laboratories, Inc. | Method for coding pictures using hierarchical transform units |
US20130243083A1 (en) | 2012-03-16 | 2013-09-19 | Texas Instruments Incorporated | Low-Complexity Two-Dimensional (2D) Separable Transform Design with Transpose Buffer Management |
US20130272422A1 (en) | 2010-06-11 | 2013-10-17 | Joo Hyun Min | System and method for encoding/decoding videos using edge-adaptive transform |
US20130315303A1 (en) | 2009-08-17 | 2013-11-28 | Samsung Electronics Co., Ltd. | Method and apparatus for encoding video, and method and apparatus for decoding video |
US20130336410A1 (en) | 2012-06-15 | 2013-12-19 | Research In Motion Limited | Methods and devices for coding binary symbols as n-tuples |
US20140010295A1 (en) | 2011-01-21 | 2014-01-09 | Thomson Licensing | Methods and Apparatus for Geometric-Based Intra Prediction |
WO2014031544A1 (en) | 2012-08-21 | 2014-02-27 | Qualcomm Incorporated | Alternative transform in scalable video coding |
US20140086314A1 (en) | 2012-09-26 | 2014-03-27 | Magnum Semiconductor, Inc. | Apparatuses and methods for optimizing rate-distortion of syntax elements |
US8687699B1 (en) | 2006-05-16 | 2014-04-01 | Geo Semiconductor Inc | Method and/or apparatus for optimized video coding |
US20140092956A1 (en) | 2012-09-29 | 2014-04-03 | Motorola Mobility Llc | Adaptive transform options for scalable extension |
WO2014078703A1 (en) | 2012-11-19 | 2014-05-22 | Qualcomm Incorporated | Intra base layer transform selection (dst vs. dct) in video coding |
US9106933B1 (en) | 2010-05-18 | 2015-08-11 | Google Inc. | Apparatus and method for encoding video using different second-stage transform |
US9219915B1 (en) | 2013-01-17 | 2015-12-22 | Google Inc. | Selection of transform size in video coding |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
TW436777B (en) | 1995-09-29 | 2001-05-28 | Matsushita Electric Ind Co Ltd | A method and an apparatus for reproducing bitstream having non-sequential system clock data seamlessly therebetween |
-
2013
- 2013-02-11 US US13/763,921 patent/US9544597B1/en active Active
-
2016
- 2016-12-09 US US15/373,590 patent/US10142628B1/en active Active
Patent Citations (141)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4774574A (en) | 1987-06-02 | 1988-09-27 | Eastman Kodak Company | Adaptive block transform image coding method and apparatus |
US5444800A (en) | 1988-11-18 | 1995-08-22 | At&T Corp. | Side-match and overlap-match vector quantizers for images |
US5121216A (en) | 1989-07-19 | 1992-06-09 | Bell Communications Research | Adaptive transform coding of still images |
US5235623A (en) | 1989-11-14 | 1993-08-10 | Nec Corporation | Adaptive transform coding by selecting optimum block lengths according to variatons between successive blocks |
US5091782A (en) | 1990-04-09 | 1992-02-25 | General Instrument Corporation | Apparatus and method for adaptively compressing successive blocks of digital video |
US5068724A (en) | 1990-06-15 | 1991-11-26 | General Instrument Corporation | Adaptive motion compensation for digital television |
US5146324A (en) | 1990-07-31 | 1992-09-08 | Ampex Corporation | Data compression using a feedforward quantization estimator |
US5341440A (en) | 1991-07-12 | 1994-08-23 | Earl Joseph G | Method and apparatus for increasing information compressibility |
US5260782A (en) | 1991-08-30 | 1993-11-09 | Matsushita Electric Industrial Co., Ltd. | Adaptive DCT/DPCM video signal coding method |
US5274442A (en) | 1991-10-22 | 1993-12-28 | Mitsubishi Denki Kabushiki Kaisha | Adaptive blocking image signal coding system |
US5224062A (en) | 1992-03-17 | 1993-06-29 | Sun Microsystems, Inc. | Method and apparatus for fast implementation of inverse discrete cosine transform in a digital image processing system using optimized lookup tables |
US5422963A (en) | 1993-10-15 | 1995-06-06 | At&T Corp. | Block transform coder for arbitrarily shaped image segments |
US5635938A (en) | 1993-12-28 | 1997-06-03 | Oki Electric Industry Co., Ltd. | Quantizing and dequantizing circuit with reduced size |
US5767908A (en) | 1994-12-19 | 1998-06-16 | Samsung Electronics Co., Ltd. | Adaptive orthogonal transform coding apparatus |
US5903669A (en) | 1995-01-31 | 1999-05-11 | Canon Kabushiki Kaisha | Image processing apparatus and method |
US5737020A (en) | 1995-03-27 | 1998-04-07 | International Business Machines Corporation | Adaptive field/frame encoding of discrete cosine transform |
US5872866A (en) | 1995-04-18 | 1999-02-16 | Advanced Micro Devices, Inc. | Method and apparatus for improved video decompression by predetermination of IDCT results based on image characteristics |
US6115501A (en) | 1995-07-10 | 2000-09-05 | Hyundai Electronics Industries Co., Ltd. | Grid moving method for minimizing image information of an object |
US5764805A (en) | 1995-10-25 | 1998-06-09 | David Sarnoff Research Center, Inc. | Low bit rate video encoder using overlapping block motion compensation and zerotree wavelet coding |
US20060210181A1 (en) | 1996-07-03 | 2006-09-21 | Hsi-Jung Wu | Digital image coding system having self-adjusting selection criteria for selecting a transform function |
US6167161A (en) | 1996-08-23 | 2000-12-26 | Nec Corporation | Lossless transform coding system having compatibility with lossy coding |
US6408025B1 (en) | 1997-01-31 | 2002-06-18 | Siemens Aktiengesellschaft | Method and configuration for coding and decoding digitized pictures |
US6108383A (en) | 1997-07-15 | 2000-08-22 | On2.Com, Inc. | Method and apparatus for compression and decompression of video images |
US7492823B2 (en) | 1997-07-16 | 2009-02-17 | Samsung Electronics Co., Ltd. | Signal adaptive filtering method, signal adaptive filter and computer readable medium for storing program therefor |
WO1999018735A1 (en) | 1997-10-07 | 1999-04-15 | Thomson Consumer Electronics, Inc. | Picture masking and compositing in the frequency domain |
US20020196983A1 (en) | 1997-10-22 | 2002-12-26 | Yoshikazu Kobayashi | Image encoding apparatus, image encoding method, and recording medium in which image encoding program is recorded |
US20030146925A1 (en) | 1997-11-12 | 2003-08-07 | Canon Kabushiki Kaisha | Generating and using a color palette |
US20030048943A1 (en) | 1997-11-27 | 2003-03-13 | Seiko Epson Corporation | Encoding method of a color image and its encoding device and a decoding method of the color image and its decoding device |
US6134350A (en) | 1998-02-18 | 2000-10-17 | Dome Imaging Systems, Inc. | Method of producing wavelets and compressing digital images and of restoring the digital images |
US6683991B1 (en) | 1998-10-30 | 2004-01-27 | Canon Kabushiki Kaisha | Method and apparatus for representing a digital image to provide a coded representation |
US6522783B1 (en) | 1999-11-23 | 2003-02-18 | Sharp Laboratories Of America, Inc. | Re-indexing for efficient compression of palettized images |
US20080043848A1 (en) | 1999-11-29 | 2008-02-21 | Kuhn Peter M | Video/audio signal processing method and video/audio signal processing apparatus |
US6917651B1 (en) | 2000-01-28 | 2005-07-12 | Samsung Electronics Co., Ltd. | Variable length coding method and apparatus |
US6934419B2 (en) | 2000-04-11 | 2005-08-23 | International Business Machines Corporation | Enhanced compression of gray-level images |
US6522784B1 (en) | 2000-04-11 | 2003-02-18 | International Business Machines Corporation | Enhanced compression of gray-level images |
US6819793B1 (en) | 2000-06-30 | 2004-11-16 | Intel Corporation | Color distribution for texture and image compression |
US20070223583A1 (en) | 2000-10-31 | 2007-09-27 | Takeshi Nagai | Data transmission apparatus and method |
US20020168114A1 (en) | 2001-02-06 | 2002-11-14 | Valente Stephane Edouard | Preprocessing method applied to textures of arbitrarily shaped objects |
US7266149B2 (en) | 2001-12-17 | 2007-09-04 | Microsoft Corporation | Sub-block transform coding of prediction residuals |
US20090041128A1 (en) | 2002-02-28 | 2009-02-12 | At&T Intellectual Property Ii, L.P., Formerly Known As At&T Corp. | System and method for using pattern vectors for video and image coding and decoding |
US20060239575A1 (en) | 2002-04-15 | 2006-10-26 | Kiyofumi Abe | Picture coding method and picture decoding method |
US20060045368A1 (en) | 2002-06-28 | 2006-03-02 | Microsoft Corporation | Rate allocation for mixed content video |
US20040184537A1 (en) | 2002-08-09 | 2004-09-23 | Ralf Geiger | Method and apparatus for scalable encoding and method and apparatus for scalable decoding |
US20090228290A1 (en) | 2002-09-04 | 2009-09-10 | Microsoft Corporation | Mixed lossless audio compression |
US20040057519A1 (en) | 2002-09-24 | 2004-03-25 | Matsushita Electric Industrial Co., Ltd. | Image coding method and apparatus |
US7292634B2 (en) | 2002-09-24 | 2007-11-06 | Matsushita Electric Industrial Co., Ltd. | Image coding method and apparatus |
US20040125204A1 (en) | 2002-12-27 | 2004-07-01 | Yoshihisa Yamada | Moving picture coding apparatus and moving picture decoding apparatus |
US20060098738A1 (en) | 2003-01-09 | 2006-05-11 | Pamela Cosman | Video encoding methods and devices |
US20060251330A1 (en) | 2003-05-20 | 2006-11-09 | Peter Toth | Hybrid video compression method |
US20050025246A1 (en) * | 2003-07-18 | 2005-02-03 | Microsoft Corporation | Decoding jointly coded transform type and subblock pattern information |
US20050053151A1 (en) | 2003-09-07 | 2005-03-10 | Microsoft Corporation | Escape mode code resizing for fields and slices |
US20050147163A1 (en) | 2003-12-30 | 2005-07-07 | Microsoft Corporation | Scalable video transcoding |
US20070140349A1 (en) | 2004-03-01 | 2007-06-21 | Koninklijke Philips Electronics, N.V. | Video encoding method and apparatus |
US20050249291A1 (en) | 2004-05-07 | 2005-11-10 | Stephen Gordon | Method and system for generating a transform size syntax element for video decoding |
US7894530B2 (en) | 2004-05-07 | 2011-02-22 | Broadcom Corporation | Method and system for dynamic selection of transform size in a video decoder based on signal content |
US8116374B2 (en) | 2004-05-07 | 2012-02-14 | Broadcom Corporation | Method and system for generating a transform size syntax element for video decoding |
US7409099B1 (en) | 2004-08-10 | 2008-08-05 | On2 Technologies, Inc. | Method of improved image/video compression via data re-ordering |
US20060115168A1 (en) | 2004-11-30 | 2006-06-01 | Canon Kabushiki Kaisha | Image coding apparatus and image coding method |
US20060133682A1 (en) | 2004-12-17 | 2006-06-22 | Microsoft Corporation | Reversible overlap operator for efficient lossless data compression |
US7936820B2 (en) | 2004-12-22 | 2011-05-03 | Nec Corporation | Moving-picture compression encoding method, apparatus and program |
US20110182352A1 (en) | 2005-03-31 | 2011-07-28 | Pace Charles P | Feature-Based Video Compression |
US20080123977A1 (en) | 2005-07-22 | 2008-05-29 | Mitsubishi Electric Corporation | Image encoder and image decoder, image encoding method and image decoding method, image encoding program and image decoding program, and computer readable recording medium recorded with image encoding program and computer readable recording medium recorded with image decoding program |
US20080123947A1 (en) | 2005-07-22 | 2008-05-29 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, image decoding program, computer readable recording medium having image encoding program recorded therein |
US20090123066A1 (en) | 2005-07-22 | 2009-05-14 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, image decoding program, computer readable recording medium having image encoding program recorded therein, |
US20070036223A1 (en) | 2005-08-12 | 2007-02-15 | Microsoft Corporation | Efficient coding and decoding of transform blocks |
US20080123736A1 (en) | 2005-09-20 | 2008-05-29 | Mitsubishi Electric Corporation | Image encoding method and image decoding method, image encoder and image decoder, and image encoded bit stream and recording medium |
US20070078661A1 (en) | 2005-09-30 | 2007-04-05 | Portalplayer, Inc. | Configurable system for performing repetitive actions and method for configuring and operating same |
US20090122864A1 (en) | 2005-11-08 | 2009-05-14 | Matsushita Electric Industrial Co., Ltd. | Moving picture coding method, moving picture decoding method, and apparatuses of the same |
US20090067503A1 (en) | 2006-01-07 | 2009-03-12 | Electronics And Telecommunications Research Institute | Method and apparatus for video data encoding and decoding |
US20070183500A1 (en) | 2006-02-09 | 2007-08-09 | Nagaraj Raghavendra C | Video encoding |
US20070201554A1 (en) | 2006-02-24 | 2007-08-30 | Samsung Electronics Co., Ltd. | Video transcoding method and apparatus |
US20070211953A1 (en) | 2006-03-07 | 2007-09-13 | Yukihiro Sasagawa | Signal processor |
US8094950B2 (en) | 2006-03-07 | 2012-01-10 | Panasonic Corporation | Signal processor |
US20090049641A1 (en) | 2006-03-08 | 2009-02-26 | Pullins Alan T | Vacuum cleaner with wand activated conversion valve |
US8687699B1 (en) | 2006-05-16 | 2014-04-01 | Geo Semiconductor Inc | Method and/or apparatus for optimized video coding |
US20080008246A1 (en) | 2006-07-05 | 2008-01-10 | Debargha Mukherjee | Optimizing video coding |
US20080084929A1 (en) | 2006-10-05 | 2008-04-10 | Xiang Li | Method for video coding a sequence of digitized images |
US20100020867A1 (en) | 2007-01-18 | 2010-01-28 | Thomas Wiegand | Quality Scalable Video Data Stream |
US8582656B2 (en) | 2007-04-13 | 2013-11-12 | Apple Inc. | Method and system for video encoding and decoding |
US20080253463A1 (en) | 2007-04-13 | 2008-10-16 | Apple Inc. | Method and system for video encoding and decoding |
US20080310512A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Separable directional transforms |
US7912318B2 (en) | 2007-10-29 | 2011-03-22 | Canon Kabushiki Kaisha | Data transform apparatus and control method thereof |
US20110090959A1 (en) | 2008-04-16 | 2011-04-21 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Bit-depth scalability |
US20090274382A1 (en) | 2008-05-02 | 2009-11-05 | Novateck Microelectronics Corp. | Entropy decoding circuit, entropy decoding method, and entropy decoding method using pipeline manner |
US8000546B2 (en) | 2008-08-01 | 2011-08-16 | National Cheng Kung University | Adaptive scan method for image/video coding |
WO2010039015A2 (en) | 2008-10-02 | 2010-04-08 | 한국전자통신연구원 | Apparatus and method for coding/decoding image selectivly using descrete cosine/sine transtorm |
US20110286516A1 (en) | 2008-10-02 | 2011-11-24 | Electronics And Telecommunications Research Instit | Apparatus and method for coding/decoding image selectivly using descrete cosine/sine transtorm |
US20100086049A1 (en) | 2008-10-03 | 2010-04-08 | Qualcomm Incorporated | Video coding using transforms bigger than 4x4 and 8x8 |
WO2010039288A1 (en) | 2008-10-03 | 2010-04-08 | Qualcomm Incorporated | Digital video coding with interpolation filters and offsets |
US20110206135A1 (en) | 2008-10-28 | 2011-08-25 | Virginie Drugeon | Image coding method, image decoding method, image coding apparatus, image decoding apparatus, integrated circuit and program |
US20110268183A1 (en) | 2009-01-27 | 2011-11-03 | Thomson Licensing | Method and apparatus for transform selection in video encoding and decoding |
JP2010199959A (en) | 2009-02-25 | 2010-09-09 | Nippon Telegr & Teleph Corp <Ntt> | Image-coding apparatus, image-coding method and image-coding program |
US20100246951A1 (en) | 2009-03-31 | 2010-09-30 | Canon Kabushiki Kaisha | Colour correcting foreground colours for visual quality improvement |
US20100290520A1 (en) | 2009-05-14 | 2010-11-18 | Massachusetts Institute Of Technology | Selecting transforms for compressing visual data |
US20100309286A1 (en) | 2009-06-05 | 2010-12-09 | Qualcomm Incorporated | Encoding of three-dimensional conversion information with two-dimensional video sequence |
US20120128066A1 (en) | 2009-08-06 | 2012-05-24 | Panasonic Corporation | Encoding method, decoding method, encoding device and decoding device |
US20110032983A1 (en) | 2009-08-07 | 2011-02-10 | Osman Gokhan Sezer | Probabilistic Bit-Rate and Rate-Distortion Cost Estimation for Video Coding |
US20130070845A1 (en) | 2009-08-07 | 2013-03-21 | Korea Advanced Institute Of Science And Technology | Motion picture encoding apparatus and method thereof |
US20130315303A1 (en) | 2009-08-17 | 2013-11-28 | Samsung Electronics Co., Ltd. | Method and apparatus for encoding video, and method and apparatus for decoding video |
WO2011049399A2 (en) | 2009-10-24 | 2011-04-28 | Park Chul | Method for processing advertising message |
US20110243249A1 (en) | 2010-04-05 | 2011-10-06 | Samsung Electronics Co., Ltd. | Method and apparatus for encoding video by performing in-loop filtering based on tree-structured data unit, and method and apparatus for decoding video by performing the same |
US20130034152A1 (en) | 2010-04-16 | 2013-02-07 | Sk Telecom Co., Ltd. | Apparatus and method for encoding/decoding images |
US20110274162A1 (en) | 2010-05-04 | 2011-11-10 | Minhua Zhou | Coding Unit Quantization Parameters in Video Coding |
US9106933B1 (en) | 2010-05-18 | 2015-08-11 | Google Inc. | Apparatus and method for encoding video using different second-stage transform |
US20110293012A1 (en) | 2010-05-27 | 2011-12-01 | The Hong Kong University Of Science And Technology | Motion estimation of images |
US20110293009A1 (en) | 2010-05-27 | 2011-12-01 | Freescale Semiconductor Inc. | Video processing system, computer program product and method for managing a transfer of information between a memory unit and a decoder |
US20130272422A1 (en) | 2010-06-11 | 2013-10-17 | Joo Hyun Min | System and method for encoding/decoding videos using edge-adaptive transform |
US20120008683A1 (en) | 2010-07-09 | 2012-01-12 | Qualcomm Incorporated | Signaling selected directional transform for video coding |
US20130156328A1 (en) | 2010-07-09 | 2013-06-20 | Peng Wang | Image processing device and image processing method |
WO2012005099A1 (en) | 2010-07-09 | 2012-01-12 | ソニー株式会社 | Image processing device, and image processing method |
US20120057360A1 (en) | 2010-09-02 | 2012-03-08 | S&S Precision, Llc | Integrated Illumination Device Mount |
US8885701B2 (en) | 2010-09-08 | 2014-11-11 | Samsung Electronics Co., Ltd. | Low complexity transform coding using adaptive DCT/DST for intra-prediction |
US20120057630A1 (en) | 2010-09-08 | 2012-03-08 | Samsung Electronics Co., Ltd. | Low complexity transform coding using adaptive dct/dst for intra-prediction |
US20130176211A1 (en) | 2010-09-13 | 2013-07-11 | Sony Computer Entertainment Inc. | Image processing device for displaying moving image and image processing method thereof |
US20120162455A1 (en) | 2010-12-23 | 2012-06-28 | Samsung Electronics Co., Ltd. | Digital image processing apparatus including handshake correction module and methods of controlling the digital image processing apparatus |
US20120170649A1 (en) | 2010-12-29 | 2012-07-05 | Qualcomm Incorporated | Video coding using mapped transforms and scanning modes |
US20120177116A1 (en) | 2011-01-12 | 2012-07-12 | General Instrument Corporation | Efficient Transform Unit Representation |
US20140010295A1 (en) | 2011-01-21 | 2014-01-09 | Thomson Licensing | Methods and Apparatus for Geometric-Based Intra Prediction |
US20120201298A1 (en) | 2011-02-04 | 2012-08-09 | General Instrument Corporation | Implicit Transform Unit Representation |
US20120230418A1 (en) | 2011-03-08 | 2012-09-13 | Qualcomm Incorporated | Coding of transform coefficients for video coding |
US20120230411A1 (en) | 2011-03-09 | 2012-09-13 | Mediatek Singapore Pte. Ltd. | Method and Apparatus of Transform Unit Partition with Reduced Complexity |
US8494290B2 (en) | 2011-05-05 | 2013-07-23 | Mitsubishi Electric Research Laboratories, Inc. | Method for coding pictures using hierarchical transform units |
US20120308128A1 (en) | 2011-05-30 | 2012-12-06 | Fujifilm Corporation | Image data coding apparatus, method of controlling operation of same, and program therefor |
WO2012166959A1 (en) | 2011-06-02 | 2012-12-06 | Qualcomm Incorporated | Fast computing of discrete cosine and sine transforms of types vi and vii |
US20130089138A1 (en) | 2011-06-27 | 2013-04-11 | Qualcomm Incorporated | Coding syntax elements using vlc codewords |
US20130003859A1 (en) | 2011-06-30 | 2013-01-03 | Qualcomm Incorporated | Transition between run and level coding modes |
US20130003824A1 (en) | 2011-07-01 | 2013-01-03 | Qualcomm Incorporated | Applying non-square transforms to video data |
US20130003828A1 (en) | 2011-07-01 | 2013-01-03 | Cohen Robert A | Method for Selecting Transform Types From Mapping Table for Prediction Modes |
US20130022107A1 (en) | 2011-07-19 | 2013-01-24 | Qualcomm Incorporated | Deblocking of non-square blocks for video coding |
US20130034169A1 (en) | 2011-08-05 | 2013-02-07 | Mangesh Devidas Sadafale | Block-Based Parallel Deblocking Filter in Video Coding |
US20130136175A1 (en) | 2011-09-12 | 2013-05-30 | Qualcomm Incorporated | Non-square transform units and prediction units in video coding |
US20130089145A1 (en) | 2011-10-11 | 2013-04-11 | Qualcomm Incorporated | Most probable transform for intra prediction coding |
US20130114730A1 (en) | 2011-11-07 | 2013-05-09 | Qualcomm Incorporated | Coding significant coefficient information in transform skip mode |
US20130128974A1 (en) | 2011-11-18 | 2013-05-23 | Qualcomm Incorporated | Adaptive overlapped block motion compensation |
US20130243083A1 (en) | 2012-03-16 | 2013-09-19 | Texas Instruments Incorporated | Low-Complexity Two-Dimensional (2D) Separable Transform Design with Transpose Buffer Management |
US20130336410A1 (en) | 2012-06-15 | 2013-12-19 | Research In Motion Limited | Methods and devices for coding binary symbols as n-tuples |
WO2014031544A1 (en) | 2012-08-21 | 2014-02-27 | Qualcomm Incorporated | Alternative transform in scalable video coding |
US20140086314A1 (en) | 2012-09-26 | 2014-03-27 | Magnum Semiconductor, Inc. | Apparatuses and methods for optimizing rate-distortion of syntax elements |
US20140092956A1 (en) | 2012-09-29 | 2014-04-03 | Motorola Mobility Llc | Adaptive transform options for scalable extension |
WO2014078703A1 (en) | 2012-11-19 | 2014-05-22 | Qualcomm Incorporated | Intra base layer transform selection (dst vs. dct) in video coding |
US9219915B1 (en) | 2013-01-17 | 2015-12-22 | Google Inc. | Selection of transform size in video coding |
Non-Patent Citations (37)
Title |
---|
Bankoski et al. "Technical Overview of VP8, an Open Source Video Codec for the Web". Dated Jul. 11, 2011. |
Bankoski et al. "VP8 Data Format and Decoding Guide" Independent Submission. RFC 6389, Dated Nov. 2011. |
Bankoski et al. "VP8 Data Format and Decoding Guide; draft-bankoski-vp8-bitstream-02" Network Working Group. Internet-Draft, May 18, 2011, 288 pp. |
Bross, B, H. Kirchoffer, H. Schwarz, T. Wiegand,"Fast intra encoding for fixed maximum depth of transform quadtree," JCTVC-C311_r1, Guangzhou, CN, Oct. 2010. |
Bross, B, W.-J Han, J.-R. Ohm, G. J. Sullivan, T. Wiegand: "High efficiency video coding (HEVC) text specification draft 7", Document of Joint Collaborative Team on Video Coding, JCTVC-I1003-d4, Apr. 27-May 7, 2012. |
Chen J et al. "Description of scalable video coding technology proposal by Qualcomm (configuration)", 11. JCT-VC Meeting; 102. MPEG Meeting; Oct. 10, 2012 Oct. 19, 2012; Shanghai; (Joint Collaborative Team on Video Coding of ISO/IEC JTC1/SC29/WG11 and ITU-T SG.16); URL:http://wftp3.itu.int/av-arch/jctvc-site/, No. JCTVC-K0035, Oct. 2, 2012, all pages. |
Chen J. et al., "TE:Simulation results for various max. number of transform quadtree depth," MPEG Meeting, Guangzhou, Chima; No. M18236; Oct. 28, 2010. |
Chen P. et al., "Video coding using extended block sizes," VCEG Meeting, San Diego, US; No. VCEG-AJ23, Oct. 15, 2008. |
Chen, Y, J. Han, T. Nanjundaswamy, and K. Rose, "A joint spatio-temporal filtering approach to efficient prediction in video compression," Picture Coding Symposium, 2013. |
Guo L et al.: "Transform Selection for Inter-Layer Texture Prediction in Scalable Video Coding", 11. JCT-VC Meeting; 102; MPEG Meeting; Oct. 10, 2012-Oct. 19, 2012; Shanghai; (Joint Collaborative Team on Video Coding of ISO/IEC JTC1/WG11 and ITU-T SG. 6); URL:http;//wftp3.itu.int/av-arch/jctvc-site/,, No. JCTVC-K0321, Oct. 7, 2012, all pages. |
Han et al., "Jointly Optimized Spatial Prediction and Block Transform for Video and Image Coding," IEEE Transactions on Image Processing, vol. 21, No. 4 (Apr. 2012). |
Han et al., "Toward Jointly Optimal Spatial Prediction and Adaptive Transform in Video/Image Coding," ICASSP 2010 (Dallas, TX, Mar. 14-19, 2010). |
International Preliminary Report and Written Opinion of the International Searching Authority for International Application No. PCT/US2013062216 dated Mar. 31, 2015. |
Krit Panusopone et al., "Flexible Picture Partitioning", JCT-VC (Joint Collaborative Team on Video Coding) JCTVC-C260, Meeting, Oct. 7-Oct. 15, 2010. |
Krit Panusopone, et al. "Efficient Transform Unit Representation," Joint Collaborative Team on Video Coding (JCT-VC) of UTU-T SG16 WP3 and ISO/IEC JTC1/SC29/WG11 4nd Meeting: Daegu, KR, Jan. 22, 2011. |
Lee B. et al., "Hierarchical variable block transform," JCT-VC Meeting, Geneva, Switzerland; No. JCTVC-B050; Jul. 24, 2010. |
Lee T et al.: "TE12.1: Experimental results of transform unit quadtree/2-level test", 3 JCT-VC Meeting; 94. MPEG Meeting; Oct. 7, 2010-Oct. 15, 2010; Guangzhou; (Joint Collaborative Team on Video Coding of ISO/IEC JTC1/SC29/WG11 and ITU-T SG.16); URL:http://wftp3.itu.int/av-arch/jctvc-site/,, No. JCTVC-C200, Oct. 2, 2010, all pages. |
McCann et al., "Samsung's Response to the call for proposals on video compression technology" JCTVC of ITU-T SG16 WP3 and ISO/IEC JTC1/SC29/WG11; 1st meeting; Dresden, DE, Apr. 15-23, 2010; JCTVC124; 42 pages. |
McCann K. et al.; "Video coding technology proposal by samsung (and BBC)," JCT-VC Meeting; Dresden, Germany, Apr. 15, 2010. |
Mozilla, "Introduction to Video Coding Part 1: Transform Coding", Video Compression Overview, Mar. 2012, 171 pp. |
Overview; VP7 Data Format and Decoder. Version 1.5. On2 Technologies, Inc. Dated Mar. 28, 2005. |
Saxena a et al.: "On secondary transforms for Intra BVL residue", 13. JCT-VC Meeting; 104. MPEG Meeting; Apr. 18, 2013-Apr. 26, 2013; IncHEON; (Joint Collaborative Team on Video Coding of ISO/IEC JTC1/SC29/WG11 and ITU-T SG.16); URL:http://wftp3.itu.int/av-arch/jctvc-site/, No. JCTVC-M0033, Apr. 9, 2013, all pages. |
Saxena a et al.: "On secondary transforms for intra/inter prediction residual", 9. JCT-VC Meeting; 100. MPEG Meeting; Apr. 27, 2012-May 7, 2012; Geneva; (Joint Collaborative Team on Video Coding of ISO/IEC JTC1/SC29/WG11 and ITU-T SG.16); URL:http://wftp3.itu.int/av-arch/jcivc-site/,, No. JCTVC-10232, Apr. 17, 2012, all pages. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video. H.264. Amendment 2: New profiles for professional applications. International Telecommunication Union. Dated Apr. 2007. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video. H.264. Amendment 2: New profiles for professional applications. International Telecommunication Union. Dated Apr. 2007. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile. International Telecommunication Union. Dated Jun. 2006. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile. International Telecommunication Union. Dated Jun. 2006. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Version 3. International Telecommunication Union. Dated Mar. 2005. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Version 3. International Telecommunication Union. Dated Mar. 2005. |
Sikora, T. et al., Shape-adaptive DCT for generic coding of video, Circuits and Systems for Video Technology, IEEE Transactions on vol. 5, Issue 1, p. 59-62, Feb. 1, 1995. |
VP6 Bitstream & Decoder Specification. Version 1.03. On2 Technologies, Inc. Dated Oct. 29, 2007. |
Wiegand et al. "BoG report: residual quadtree structure" JCTVC-C319_r1, Guangzhou, CN Oct. 2010. |
Wiegand et al., "Overview of the H 264/AVC Video Coding Standard," IEEE Transactions on Circuits and Systems for Video Technology, vol. 13, No. 7, pp. 568, 569, Jul. 1, 2003. |
Wiegand, T; B. Bross, J. Ohm, G. Sullivan, "WD1: Working Draft 1 of High-Efficiency Video Coding," JCTVC-C403, Guangzhou, CN, Oct. 7-15, 2010. |
Wiegand, Thomas, et al.; "Rate-Distortion Optimized Mode Selection for Very Low Bit Rate Video Coding and the Emerging H.263 Standard", IEEE Transactions on Circuits and Systems for Video Technology, vol. 6, No. 2, Apr. 1996, 9 pp. |
Wiegand, Thomas, et al.; Long-Term Memory Motion-Compensated Prediction, date unknown. |
Xin, J., K. N. Ngan, and G. Zhu, "Combined inter-intra prediction for high definition video coding," Picture Coding Symposium, 2007. |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10638160B2 (en) * | 2011-01-13 | 2020-04-28 | Texas Instruments Incorporated | Method and apparatus for a low complexity transform unit partitioning structure for HEVC |
US11388440B2 (en) * | 2011-01-13 | 2022-07-12 | Texas Instruments Incorporated | Method and apparatus for a low complexity transform unit partitioning structure for HEVC |
US20220295100A1 (en) * | 2011-01-13 | 2022-09-15 | Texas Instruments Incorporated | Method and apparatus for a low complexity transform unit partitioning structure for hevc |
US11275556B2 (en) * | 2018-02-27 | 2022-03-15 | Zetane Systems Inc. | Method, computer-readable medium, and processing unit for programming using transforms on heterogeneous data |
US11985353B2 (en) * | 2022-05-25 | 2024-05-14 | Texas Instruments Incorporated | Method and apparatus for a low complexity transform unit partitioning structure for HEVC |
Also Published As
Publication number | Publication date |
---|---|
US9544597B1 (en) | 2017-01-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10142628B1 (en) | Hybrid transform in video codecs | |
US20220353534A1 (en) | Transform Kernel Selection and Entropy Coding | |
US9210432B2 (en) | Lossless inter-frame video coding | |
US9407915B2 (en) | Lossless video coding with sub-frame level optimal quantization values | |
US9942568B2 (en) | Hybrid transform scheme for video coding | |
US20170347094A1 (en) | Block size adaptive directional intra prediction | |
US10506240B2 (en) | Smart reordering in recursive block partitioning for advanced intra prediction in video coding | |
US9674530B1 (en) | Hybrid transforms in video coding | |
US10506256B2 (en) | Intra-prediction edge filtering | |
US20180302643A1 (en) | Video coding with degradation of residuals | |
US9369732B2 (en) | Lossless intra-prediction video coding | |
US9350988B1 (en) | Prediction mode-based block ordering in video coding | |
US10951894B2 (en) | Transform block-level scan order selection for video coding | |
US10419777B2 (en) | Non-causal overlapped block prediction in variable block size video coding | |
US11558619B2 (en) | Adaptation of scan order for entropy coding | |
US20180352220A1 (en) | Coding of Intra-Prediction Modes | |
US9681128B1 (en) | Adaptive pre-transform scanning patterns for video and image compression | |
US9210424B1 (en) | Adaptive prediction block size in video coding | |
US10448013B2 (en) | Multi-layer-multi-reference prediction using adaptive temporal filtering |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |